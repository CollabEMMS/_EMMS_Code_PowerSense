

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 05 19:18:41 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F25K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  001902                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for powerPulseCheck@firstPulse
    99  001902  01                 	db	1
   100                           
   101                           	psect	idataBANK0
   102  0018EE                     __pidataBANK0:
   103                           	opt stack 0
   104                           
   105                           ;initializer for powerPulseCheck@timerCountHFCheck
   106  0018EE  0001               	dw	1
   107                           
   108                           ;initializer for powerPulseCheck@timerCountLFLast
   109  0018F0  FFFF               	dw	65535
   110  0018F2  7FFF               	dw	32767
   111                           
   112                           ;initializer for powerPulseCheck@timerCountHFLast
   113  0018F4  FFFF               	dw	65535
   114  0018F6  7FFF               	dw	32767
   115  0000                     _ANSELBbits	set	3897
   116  0000                     _ANSELAbits	set	3896
   117  0000                     _ANSELC	set	3898
   118  0000                     _ANSELB	set	3897
   119  0000                     _ANSELA	set	3896
   120  0000                     _SSP2CON3bits	set	3945
   121  0000                     _SSP2CON3	set	3945
   122  0000                     _SSP2BUF	set	3951
   123  0000                     _SSP2STATbits	set	3949
   124  0000                     _SSP2CON1bits	set	3948
   125  0000                     _T0CONbits	set	4053
   126  0000                     _IPR5	set	3967
   127  0000                     _IPR4	set	3964
   128  0000                     _IPR3	set	4005
   129  0000                     _IPR2	set	4002
   130  0000                     _IPR1	set	3999
   131  0000                     _PIE5	set	3965
   132  0000                     _PIE4	set	3962
   133  0000                     _PIE3	set	4003
   134  0000                     _PIE2	set	4000
   135  0000                     _PIE1	set	3997
   136  0000                     _PIR5	set	3966
   137  0000                     _PIR4	set	3963
   138  0000                     _PIR3	set	4004
   139  0000                     _PIR2	set	4001
   140  0000                     _PIR1	set	3998
   141  0000                     _RCONbits	set	4048
   142  0000                     _INTCON3	set	4080
   143  0000                     _INTCON2	set	4081
   144  0000                     _INTCON	set	4082
   145  0000                     _TRISBbits	set	3987
   146  0000                     _ADCON0bits	set	4034
   147  0000                     _OSCTUNEbits	set	3995
   148  0000                     _OSCCON2bits	set	4050
   149  0000                     _OSCCONbits	set	4051
   150  0000                     _TMR0L	set	4054
   151  0000                     _TMR0H	set	4055
   152  0000                     _INTCONbits	set	4082
   153  0000                     _PORTBbits	set	3969
   154  0000                     _PORTAbits	set	3968
   155  0000                     _TRISAbits	set	3986
   156  0000                     _TRISCbits	set	3988
   157  0000                     _LATCbits	set	3979
   158  0000                     _LATBbits	set	3978
   159                           
   160                           	psect	smallconst
   161  000600                     __psmallconst:
   162                           	opt stack 0
   163  000600  00                 	db	0
   164  000601  43                 	db	67	;'C'
   165  000602  61                 	db	97	;'a'
   166  000603  6C                 	db	108	;'l'
   167  000604  69                 	db	105	;'i'
   168  000605  62                 	db	98	;'b'
   169  000606  72                 	db	114	;'r'
   170  000607  61                 	db	97	;'a'
   171  000608  74                 	db	116	;'t'
   172  000609  69                 	db	105	;'i'
   173  00060A  6F                 	db	111	;'o'
   174  00060B  6E                 	db	110	;'n'
   175  00060C  00                 	db	0
   176  00060D                     STR_12:
   177  00060D  50                 	db	80	;'P'
   178  00060E  53                 	db	83	;'S'
   179  00060F  56                 	db	86	;'V'
   180  000610  65                 	db	101	;'e'
   181  000611  72                 	db	114	;'r'
   182  000612  73                 	db	115	;'s'
   183  000613  69                 	db	105	;'i'
   184  000614  6F                 	db	111	;'o'
   185  000615  6E                 	db	110	;'n'
   186  000616  00                 	db	0
   187  000617                     STR_4:
   188  000617  45                 	db	69	;'E'
   189  000618  6E                 	db	110	;'n'
   190  000619  55                 	db	85	;'U'
   191  00061A  73                 	db	115	;'s'
   192  00061B  65                 	db	101	;'e'
   193  00061C  64                 	db	100	;'d'
   194  00061D  00                 	db	0
   195  00061E                     STR_3:
   196  00061E  43                 	db	67	;'C'
   197  00061F  61                 	db	97	;'a'
   198  000620  6C                 	db	108	;'l'
   199  000621  69                 	db	105	;'i'
   200  000622  62                 	db	98	;'b'
   201  000623  00                 	db	0
   202  000624                     STR_10:
   203  000624  56                 	db	86	;'V'
   204  000625  6F                 	db	111	;'o'
   205  000626  6C                 	db	108	;'l'
   206  000627  74                 	db	116	;'t'
   207  000628  73                 	db	115	;'s'
   208  000629  00                 	db	0
   209  00062A                     STR_8:
   210  00062A  57                 	db	87	;'W'
   211  00062B  61                 	db	97	;'a'
   212  00062C  74                 	db	116	;'t'
   213  00062D  74                 	db	116	;'t'
   214  00062E  73                 	db	115	;'s'
   215  00062F  00                 	db	0
   216  000630                     STR_7:
   217  000630  4C                 	db	76	;'L'
   218  000631  45                 	db	69	;'E'
   219  000632  44                 	db	68	;'D'
   220  000633  42                 	db	66	;'B'
   221  000634  00                 	db	0
   222  000635                     STR_5:
   223  000635  52                 	db	82	;'R'
   224  000636  65                 	db	101	;'e'
   225  000637  61                 	db	97	;'a'
   226  000638  64                 	db	100	;'d'
   227  000639  00                 	db	0
   228  00063A                     STR_6:
   229  00063A  43                 	db	67	;'C'
   230  00063B  6F                 	db	111	;'o'
   231  00063C  6E                 	db	110	;'n'
   232  00063D  66                 	db	102	;'f'
   233  00063E  00                 	db	0
   234  00063F                     STR_11:
   235  00063F  41                 	db	65	;'A'
   236  000640  6D                 	db	109	;'m'
   237  000641  70                 	db	112	;'p'
   238  000642  73                 	db	115	;'s'
   239  000643  00                 	db	0
   240  000644  32                 	db	50	;'2'
   241  000645  32                 	db	50	;'2'
   242  000646  32                 	db	50	;'2'
   243  000647  00                 	db	0
   244  000648  33                 	db	51	;'3'
   245  000649  33                 	db	51	;'3'
   246  00064A  33                 	db	51	;'3'
   247  00064B  00                 	db	0
   248  00064C                     STR_30:
   249  00064C  34                 	db	52	;'4'
   250  00064D  34                 	db	52	;'4'
   251  00064E  34                 	db	52	;'4'
   252  00064F  00                 	db	0
   253  000650                     STR_1:
   254  000650  45                 	db	69	;'E'
   255  000651  4E                 	db	78	;'N'
   256  000652  44                 	db	68	;'D'
   257  000653  00                 	db	0
   258  000654                     STR_2:
   259  000654  53                 	db	83	;'S'
   260  000655  65                 	db	101	;'e'
   261  000656  74                 	db	116	;'t'
   262  000657  00                 	db	0
   263  0000                     
   264                           ; #config settings
   265  000658  00                 	db	0	; dummy byte at the end
   266  0000                     
   267                           	psect	cinit
   268  001484                     __pcinit:
   269                           	opt stack 0
   270  001484                     start_initialization:
   271                           	opt stack 0
   272  001484                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Initialize objects allocated to BANK0 (10 bytes)
   276                           ; load TBLPTR registers with __pidataBANK0
   277  001484  0EEE               	movlw	low __pidataBANK0
   278  001486  6EF6               	movwf	tblptrl,c
   279  001488  0E18               	movlw	high __pidataBANK0
   280  00148A  6EF7               	movwf	tblptrh,c
   281  00148C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   282  00148E  6EF8               	movwf	tblptru,c
   283  001490  EE00  F0EB         	lfsr	0,__pdataBANK0
   284  001494  EE10 F00A          	lfsr	1,10
   285  001498                     copy_data0:
   286  001498  0009               	tblrd		*+
   287  00149A  CFF5 FFEE          	movff	tablat,postinc0
   288  00149E  50E5               	movf	postdec1,w,c
   289  0014A0  50E1               	movf	fsr1l,w,c
   290  0014A2  E1FA               	bnz	copy_data0
   291                           
   292                           ; Initialize objects allocated to COMRAM (1 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  0014A4  0E02               	movlw	low __pidataCOMRAM
   295  0014A6  6EF6               	movwf	tblptrl,c
   296  0014A8  0E19               	movlw	high __pidataCOMRAM
   297  0014AA  6EF7               	movwf	tblptrh,c
   298  0014AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  0014AE  6EF8               	movwf	tblptru,c
   300  0014B0  0009               	tblrd		*+	;fetch initializer
   301  0014B2  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   302                           
   303                           ; Clear objects allocated to BANK1 (42 bytes)
   304  0014B6  EE01  F000         	lfsr	0,__pbssBANK1
   305  0014BA  0E2A               	movlw	42
   306  0014BC                     clear_0:
   307  0014BC  6AEE               	clrf	postinc0,c
   308  0014BE  06E8               	decf	wreg,f,c
   309  0014C0  E1FD               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK0 (62 bytes)
   312  0014C2  EE00  F0AD         	lfsr	0,__pbssBANK0
   313  0014C6  0E3E               	movlw	62
   314  0014C8                     clear_1:
   315  0014C8  6AEE               	clrf	postinc0,c
   316  0014CA  06E8               	decf	wreg,f,c
   317  0014CC  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to COMRAM (18 bytes)
   320  0014CE  EE00  F03A         	lfsr	0,__pbssCOMRAM
   321  0014D2  0E12               	movlw	18
   322  0014D4                     clear_2:
   323  0014D4  6AEE               	clrf	postinc0,c
   324  0014D6  06E8               	decf	wreg,f,c
   325  0014D8  E1FD               	bnz	clear_2
   326  0014DA                     end_of_initialization:
   327                           	opt stack 0
   328  0014DA                     __end_of__initialization:
   329                           	opt stack 0
   330  0014DA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331  0014DC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332  0014DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  0014E0  6EF8               	movwf	tblptru,c
   334  0014E2  0100               	movlb	0
   335  0014E4  EFC6  F007         	goto	_main	;jump to C main() function
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	bssCOMRAM
   346  00003A                     __pbssCOMRAM:
   347                           	opt stack 0
   348  00003A                     _timerCountLF:
   349                           	opt stack 0
   350  00003A                     	ds	4
   351  00003E                     receive_data@my_status:
   352                           	opt stack 0
   353  00003E                     	ds	1
   354  00003F                     communications@last_state_active:
   355                           	opt stack 0
   356  00003F                     	ds	1
   357  000040                     communications@receive_current_state:
   358                           	opt stack 0
   359  000040                     	ds	1
   360  000041                     _SPI_transmit_wait:
   361                           	opt stack 0
   362  000041                     	ds	1
   363  000042                     powerPulseCheck@mcpLFoutLastEnergy:
   364                           	opt stack 0
   365  000042                     	ds	1
   366  000043                     powerPulseCheck@mcpLFoutLast:
   367                           	opt stack 0
   368  000043                     	ds	1
   369  000044                     powerPulseCheck@mcpHFoutLast:
   370                           	opt stack 0
   371  000044                     	ds	1
   372  000045                     powerPulseCheck@timerCountHFLastValid:
   373                           	opt stack 0
   374  000045                     	ds	1
   375  000046                     powerPulseCheck@TESTING_oneshot:
   376                           	opt stack 0
   377  000046                     	ds	1
   378  000047                     _isLow:
   379                           	opt stack 0
   380  000047                     	ds	1
   381  000048                     _timerCountHF:
   382                           	opt stack 0
   383  000048                     	ds	4
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	dataCOMRAM
   394  00004C                     __pdataCOMRAM:
   395                           	opt stack 0
   396  00004C                     powerPulseCheck@firstPulse:
   397                           	opt stack 0
   398  00004C                     	ds	1
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	bssBANK0
   409  0000AD                     __pbssBANK0:
   410                           	opt stack 0
   411  0000AD                     powerPulseCheck@meterEnergyUsedPart:
   412                           	opt stack 0
   413  0000AD                     	ds	4
   414  0000B1                     _meterEnergyUsed:
   415                           	opt stack 0
   416  0000B1                     	ds	4
   417  0000B5                     _meterWatts:
   418                           	opt stack 0
   419  0000B5                     	ds	4
   420  0000B9                     strmatch@co:
   421                           	opt stack 0
   422  0000B9                     	ds	2
   423  0000BB                     resetCommunications@commState:
   424                           	opt stack 0
   425  0000BB                     	ds	2
   426  0000BD                     powerPulseCheck@TESTING_count:
   427                           	opt stack 0
   428  0000BD                     	ds	2
   429  0000BF                     communications@end_of_transmission_received:
   430                           	opt stack 0
   431  0000BF                     	ds	1
   432  0000C0                     powerPulseCheck@timerCountLFLastValid:
   433                           	opt stack 0
   434  0000C0                     	ds	1
   435  0000C1                     communications@send_buffer:
   436                           	opt stack 0
   437  0000C1                     	ds	42
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	dataBANK0
   448  0000EB                     __pdataBANK0:
   449                           	opt stack 0
   450  0000EB                     powerPulseCheck@timerCountHFCheck:
   451                           	opt stack 0
   452  0000EB                     	ds	2
   453  0000ED                     powerPulseCheck@timerCountLFLast:
   454                           	opt stack 0
   455  0000ED                     	ds	4
   456  0000F1                     powerPulseCheck@timerCountHFLast:
   457                           	opt stack 0
   458  0000F1                     	ds	4
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468                           	psect	bssBANK1
   469  000100                     __pbssBANK1:
   470                           	opt stack 0
   471  000100                     communications@receive_buffer:
   472                           	opt stack 0
   473  000100                     	ds	42
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	cstackBANK0
   484  000060                     __pcstackBANK0:
   485                           	opt stack 0
   486  000060                     com_command_setPower@temp:
   487                           	opt stack 0
   488  000060                     com_command_setEnergyUsed@temp:
   489                           	opt stack 0
   490                           
   491                           ; 12 bytes @ 0x0
   492  000060                     	ds	12
   493  00006C                     resetCommunications@send_buffer:
   494                           	opt stack 0
   495  00006C                     process_data_parameters@parameters:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0xC
   499  00006C                     	ds	2
   500  00006E                     ??_resetCommunications:
   501  00006E                     process_data_parameters@send_buffer:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0xE
   505  00006E                     	ds	2
   506  000070                     process_data@receive_buffer:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x10
   510  000070                     	ds	2
   511  000072                     process_data@send_buffer:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x12
   515  000072                     	ds	2
   516  000074                     process_data@parameters:
   517                           	opt stack 0
   518                           
   519                           ; 50 bytes @ 0x14
   520  000074                     	ds	50
   521  0000A6                     process_data@end_of_transmission_received:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x46
   525  0000A6                     	ds	1
   526  0000A7                     communications@no_more_to_send:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x47
   530  0000A7                     	ds	1
   531  0000A8                     communications@firstTime:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x48
   535  0000A8                     	ds	1
   536  0000A9                     ??_main:
   537                           
   538                           ; 1 bytes @ 0x49
   539  0000A9                     	ds	2
   540  0000AB                     main@inx:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x4B
   544  0000AB                     	ds	2
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	cstackCOMRAM
   555  000001                     __pcstackCOMRAM:
   556                           	opt stack 0
   557  000001                     ??_Timer0_ISR:
   558                           
   559                           ; 1 bytes @ 0x0
   560  000001                     	ds	18
   561  000013                     ??_isdigit:
   562  000013                     ?_strcmp2:
   563                           	opt stack 0
   564  000013                     ?___wmul:
   565                           	opt stack 0
   566  000013                     ?___awmod:
   567                           	opt stack 0
   568  000013                     ?___lmul:
   569                           	opt stack 0
   570  000013                     ?___aldiv:
   571                           	opt stack 0
   572  000013                     ?___lldiv:
   573                           	opt stack 0
   574  000013                     ?___llmod:
   575                           	opt stack 0
   576  000013                     SPI_send_data@data:
   577                           	opt stack 0
   578  000013                     delayMS10@count:
   579                           	opt stack 0
   580  000013                     command_builder_add_char@send_buffer:
   581                           	opt stack 0
   582  000013                     strcmp2@a:
   583                           	opt stack 0
   584  000013                     SPI_receive_data@data:
   585                           	opt stack 0
   586  000013                     ___wmul@multiplier:
   587                           	opt stack 0
   588  000013                     ___awmod@dividend:
   589                           	opt stack 0
   590  000013                     ___lmul@multiplier:
   591                           	opt stack 0
   592  000013                     ___aldiv@dividend:
   593                           	opt stack 0
   594  000013                     ___lldiv@dividend:
   595                           	opt stack 0
   596  000013                     ___llmod@dividend:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x12
   600  000013                     	ds	1
   601  000014                     SPI_send_data@sendGood:
   602                           	opt stack 0
   603  000014                     _isdigit$2072:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x13
   607  000014                     	ds	1
   608  000015                     ??_delayMS10:
   609  000015                     command_builder_add_char@data:
   610                           	opt stack 0
   611  000015                     SPI_receive_data@recvGood:
   612                           	opt stack 0
   613  000015                     isdigit@c:
   614                           	opt stack 0
   615  000015                     send_data@send_buffer:
   616                           	opt stack 0
   617  000015                     strcmp2@b:
   618                           	opt stack 0
   619  000015                     ___wmul@multiplicand:
   620                           	opt stack 0
   621  000015                     ___awmod@divisor:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x14
   625  000015                     	ds	1
   626  000016                     ??_command_builder_add_char:
   627  000016                     delayMS10@inx:
   628                           	opt stack 0
   629  000016                     receive_data@receive_buffer:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x15
   633  000016                     	ds	1
   634  000017                     ??_send_data:
   635  000017                     ??_strcmp2:
   636  000017                     ___awmod@counter:
   637                           	opt stack 0
   638  000017                     command_builder_add_string@send_buffer:
   639                           	opt stack 0
   640  000017                     ___wmul@product:
   641                           	opt stack 0
   642  000017                     ___lmul@multiplicand:
   643                           	opt stack 0
   644  000017                     ___aldiv@divisor:
   645                           	opt stack 0
   646  000017                     ___lldiv@divisor:
   647                           	opt stack 0
   648  000017                     ___llmod@divisor:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x16
   652  000017                     	ds	1
   653  000018                     ??_receive_data:
   654  000018                     ___awmod@sign:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x17
   658  000018                     	ds	1
   659  000019                     receive_data@data:
   660                           	opt stack 0
   661  000019                     send_data@send_end:
   662                           	opt stack 0
   663  000019                     process_data_parameterize@parameters:
   664                           	opt stack 0
   665  000019                     command_builder_add_string@data_string:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x18
   669  000019                     	ds	1
   670  00001A                     strcmp2@match:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x19
   674  00001A                     	ds	1
   675  00001B                     ??_command_builder_add_string:
   676  00001B                     ___aldiv@counter:
   677                           	opt stack 0
   678  00001B                     ___llmod@counter:
   679                           	opt stack 0
   680  00001B                     process_data_parameterize@buffer_to_parameterize:
   681                           	opt stack 0
   682  00001B                     ___lmul@product:
   683                           	opt stack 0
   684  00001B                     ___lldiv@quotient:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x1A
   688  00001B                     	ds	1
   689  00001C                     ___aldiv@sign:
   690                           	opt stack 0
   691  00001C                     strcmp2@inx:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x1B
   695  00001C                     	ds	1
   696  00001D                     ??_process_data_parameterize:
   697  00001D                     command_builder_add_string@inx:
   698                           	opt stack 0
   699  00001D                     ___aldiv@quotient:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0x1C
   703  00001D                     	ds	1
   704  00001E                     strmatch@a:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x1D
   708  00001E                     	ds	1
   709  00001F                     ?_atol:
   710                           	opt stack 0
   711  00001F                     ___lldiv@counter:
   712                           	opt stack 0
   713  00001F                     command_builder1@send_buffer:
   714                           	opt stack 0
   715  00001F                     command_builder3@send_buffer:
   716                           	opt stack 0
   717  00001F                     atol@s:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x1E
   721  00001F                     	ds	1
   722  000020                     process_data_parameterize@inx:
   723                           	opt stack 0
   724  000020                     strmatch@b:
   725                           	opt stack 0
   726  000020                     ultoa@buf:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x1F
   730  000020                     	ds	1
   731  000021                     ??_powerPulseCheck:
   732  000021                     command_builder1@data1:
   733                           	opt stack 0
   734  000021                     command_builder3@data1:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x20
   738  000021                     	ds	1
   739  000022                     process_data_parameterize@parameter_index:
   740                           	opt stack 0
   741  000022                     strmatch@result:
   742                           	opt stack 0
   743  000022                     powerPulseCheck@meterWattsHF:
   744                           	opt stack 0
   745  000022                     ultoa@val:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x21
   749  000022                     	ds	1
   750  000023                     ??_atol:
   751  000023                     process_data_parameterize@parameter_position:
   752                           	opt stack 0
   753  000023                     command_builder3@data2:
   754                           	opt stack 0
   755  000023                     send_end_of_transmission@send_buffer:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x22
   759  000023                     	ds	1
   760  000024                     strmatch@match:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x23
   764  000024                     	ds	1
   765  000025                     command_builder3@data3:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x24
   769  000025                     	ds	1
   770  000026                     ultoa@base:
   771                           	opt stack 0
   772  000026                     powerPulseCheck@meterWattsLF:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x25
   776  000026                     	ds	1
   777  000027                     atol@sign:
   778                           	opt stack 0
   779  000027                     com_command_setVersion@send_buffer:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x26
   783  000027                     	ds	1
   784  000028                     atol@a:
   785                           	opt stack 0
   786  000028                     ultoa@v:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x27
   790  000028                     	ds	1
   791  000029                     
   792                           ; 1 bytes @ 0x28
   793  000029                     	ds	1
   794  00002A                     powerPulseCheck@meterWattsHFNew:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x29
   798  00002A                     	ds	1
   799  00002B                     powerPulseCheck@meterWattsLFNew:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x2A
   803  00002B                     	ds	1
   804  00002C                     atol@c:
   805                           	opt stack 0
   806  00002C                     ultoa@c:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x2B
   810  00002C                     	ds	1
   811  00002D                     ltoa@buf:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x2C
   815  00002D                     	ds	2
   816  00002F                     ltoa@val:
   817                           	opt stack 0
   818                           
   819                           ; 4 bytes @ 0x2E
   820  00002F                     	ds	4
   821  000033                     ltoa@base:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x32
   825  000033                     	ds	2
   826  000035                     ltoa@cp:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x34
   830  000035                     	ds	2
   831  000037                     com_command_setPower@send_buffer:
   832                           	opt stack 0
   833  000037                     com_command_setEnergyUsed@send_buffer:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x36
   837  000037                     	ds	2
   838  000039                     process_data_parameters@end_of_transmission_received:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x38
   842  000039                     	ds	1
   843  00003A                     tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           
   852                           ; 1 bytes @ 0x39
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 90 in file "Current_Sense_Main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  inx             2   75[BANK0 ] int 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   872 ;;      Params:         0       0       0       0       0       0       0
   873 ;;      Locals:         0       2       0       0       0       0       0
   874 ;;      Temps:          0       2       0       0       0       0       0
   875 ;;      Totals:         0       4       0       0       0       0       0
   876 ;;Total ram usage:        4 bytes
   877 ;; Hardware stack levels required when called:    8
   878 ;; This function calls:
   879 ;;		_communications
   880 ;;		_delayMS10
   881 ;;		_init
   882 ;;		_initTimer
   883 ;;		_powerPulseCheck
   884 ;;		_toggleBlue
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text0
   891  000F8C                     __ptext0:
   892                           	opt stack 0
   893  000F8C                     _main:
   894                           	opt stack 23
   895                           
   896                           ;Current_Sense_Main.c: 92: ANSELA = 0b00000000;
   897                           
   898                           ;incstack = 0
   899  000F8C  0E00               	movlw	0
   900  000F8E  010F               	movlb	15	; () banked
   901  000F90  6F38               	movwf	56,b	;volatile
   902                           
   903                           ;Current_Sense_Main.c: 93: ANSELB = 0b00000000;
   904  000F92  0E00               	movlw	0
   905  000F94  6F39               	movwf	57,b	;volatile
   906                           
   907                           ;Current_Sense_Main.c: 94: ANSELC = 0b00000000;
   908  000F96  0E00               	movlw	0
   909  000F98  6F3A               	movwf	58,b	;volatile
   910                           
   911                           ; BSR set to: 15
   912                           ;Current_Sense_Main.c: 96: init( );
   913  000F9A  EC7C  F00C         	call	_init	;wreg free
   914                           
   915                           ;Current_Sense_Main.c: 101: for( int inx = 0; inx < 3; inx++ )
   916  000F9E  0E00               	movlw	0
   917  000FA0  0100               	movlb	0	; () banked
   918  000FA2  6FAC               	movwf	(main@inx+1)& (0+255),b
   919  000FA4  0E00               	movlw	0
   920  000FA6  6FAB               	movwf	main@inx& (0+255),b
   921                           
   922                           ; BSR set to: 0
   923  000FA8  BFAC               	btfsc	(main@inx+1)& (0+255),7,b
   924  000FAA  D003               	goto	l107
   925  000FAC  51AC               	movf	(main@inx+1)& (0+255),w,b
   926  000FAE  E12A               	bnz	l108
   927  000FB0  D025               	goto	L1
   928  000FB2                     l107:
   929                           
   930                           ; BSR set to: 0
   931                           ;Current_Sense_Main.c: 102: {
   932                           ;Current_Sense_Main.c: 103: LATBbits.LATB4 = 1;
   933  000FB2  888A               	bsf	3978,4,c	;volatile
   934                           
   935                           ;Current_Sense_Main.c: 104: LATCbits.LATC1 = 1;
   936  000FB4  828B               	bsf	3979,1,c	;volatile
   937                           
   938                           ;Current_Sense_Main.c: 105: LATCbits.LATC0 = 1;
   939  000FB6  808B               	bsf	3979,0,c	;volatile
   940                           
   941                           ; BSR set to: 0
   942                           ;Current_Sense_Main.c: 106: _delay((unsigned long)((100)*(16000000/4000.0)));
   943  000FB8  0E03               	movlw	3
   944  000FBA  0100               	movlb	0	; () banked
   945  000FBC  6FAA               	movwf	(??_main+1)& (0+255),b
   946  000FBE  0E08               	movlw	8
   947  000FC0  6FA9               	movwf	??_main& (0+255),b
   948  000FC2  0E77               	movlw	119
   949  000FC4                     u3187:
   950  000FC4  2EE8               	decfsz	wreg,f,c
   951  000FC6  D7FE               	bra	u3187
   952  000FC8  2FA9               	decfsz	??_main& (0+255),f,b
   953  000FCA  D7FC               	bra	u3187
   954  000FCC  2FAA               	decfsz	(??_main+1)& (0+255),f,b
   955  000FCE  D7FA               	bra	u3187
   956                           
   957                           ;Current_Sense_Main.c: 107: LATBbits.LATB4 = 0;
   958  000FD0  988A               	bcf	3978,4,c	;volatile
   959                           
   960                           ;Current_Sense_Main.c: 108: LATCbits.LATC1 = 0;
   961  000FD2  928B               	bcf	3979,1,c	;volatile
   962                           
   963                           ;Current_Sense_Main.c: 109: LATCbits.LATC0 = 0;
   964  000FD4  908B               	bcf	3979,0,c	;volatile
   965                           
   966                           ;Current_Sense_Main.c: 110: _delay((unsigned long)((100)*(16000000/4000.0)));
   967  000FD6  0E03               	movlw	3
   968  000FD8  0100               	movlb	0	; () banked
   969  000FDA  6FAA               	movwf	(??_main+1)& (0+255),b
   970  000FDC  0E08               	movlw	8
   971  000FDE  6FA9               	movwf	??_main& (0+255),b
   972  000FE0  0E77               	movlw	119
   973  000FE2                     u3197:
   974  000FE2  2EE8               	decfsz	wreg,f,c
   975  000FE4  D7FE               	bra	u3197
   976  000FE6  2FA9               	decfsz	??_main& (0+255),f,b
   977  000FE8  D7FC               	bra	u3197
   978  000FEA  2FAA               	decfsz	(??_main+1)& (0+255),f,b
   979  000FEC  D7FA               	bra	u3197
   980  000FEE  0100               	movlb	0	; () banked
   981  000FF0  4BAB               	infsnz	main@inx& (0+255),f,b
   982  000FF2  2BAC               	incf	(main@inx+1)& (0+255),f,b
   983  000FF4  BFAC               	btfsc	(main@inx+1)& (0+255),7,b
   984  000FF6  D7DD               	goto	l107
   985  000FF8  51AC               	movf	(main@inx+1)& (0+255),w,b
   986  000FFA  E104               	bnz	u3170
   987  000FFC                     L1:
   988  000FFC  0E03               	movlw	3
   989  000FFE  5DAB               	subwf	main@inx& (0+255),w,b
   990  001000  A0D8               	btfss	status,0,c
   991  001002  D7D7               	goto	l107
   992  001004                     u3170:
   993  001004                     l108:
   994                           
   995                           ; BSR set to: 0
   996                           ;Current_Sense_Main.c: 111: }
   997                           ;Current_Sense_Main.c: 114: LATBbits.LATB4 = 0;
   998  001004  988A               	bcf	3978,4,c	;volatile
   999                           
  1000                           ;Current_Sense_Main.c: 115: LATCbits.LATC1 = 0;
  1001  001006  928B               	bcf	3979,1,c	;volatile
  1002                           
  1003                           ;Current_Sense_Main.c: 116: LATCbits.LATC0 = 0;
  1004  001008  908B               	bcf	3979,0,c	;volatile
  1005                           
  1006                           ;Current_Sense_Main.c: 119: TRISCbits.TRISC7 = 0;
  1007  00100A  9E94               	bcf	3988,7,c	;volatile
  1008                           
  1009                           ;Current_Sense_Main.c: 120: TRISCbits.TRISC4 = 0;
  1010  00100C  9894               	bcf	3988,4,c	;volatile
  1011                           
  1012                           ;Current_Sense_Main.c: 121: TRISCbits.TRISC3 = 0;
  1013  00100E  9694               	bcf	3988,3,c	;volatile
  1014                           
  1015                           ;Current_Sense_Main.c: 122: TRISCbits.TRISC6 = 0;
  1016  001010  9C94               	bcf	3988,6,c	;volatile
  1017                           
  1018                           ;Current_Sense_Main.c: 125: LATCbits.LATC6 = 1;
  1019  001012  8C8B               	bsf	3979,6,c	;volatile
  1020                           
  1021                           ;Current_Sense_Main.c: 126: LATCbits.LATC7 = 1;
  1022  001014  8E8B               	bsf	3979,7,c	;volatile
  1023                           
  1024                           ;Current_Sense_Main.c: 127: LATCbits.LATC4 = 1;
  1025  001016  888B               	bsf	3979,4,c	;volatile
  1026                           
  1027                           ;Current_Sense_Main.c: 128: LATCbits.LATC3 = 0;
  1028  001018  968B               	bcf	3979,3,c	;volatile
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;Current_Sense_Main.c: 131: delayMS10( 5 );
  1032  00101A  0E00               	movlw	0
  1033  00101C  6E14               	movwf	delayMS10@count+1,c
  1034  00101E  0E05               	movlw	5
  1035  001020  6E13               	movwf	delayMS10@count,c
  1036  001022  ECA7  F00B         	call	_delayMS10	;wreg free
  1037                           
  1038                           ;Current_Sense_Main.c: 134: TRISAbits.TRISA2 = 1;
  1039  001026  8492               	bsf	3986,2,c	;volatile
  1040                           
  1041                           ;Current_Sense_Main.c: 137: communications( 1 );
  1042  001028  0E01               	movlw	1
  1043  00102A  EC21  F008         	call	_communications
  1044                           
  1045                           ;Current_Sense_Main.c: 139: initTimer( );
  1046  00102E  EC54  F00C         	call	_initTimer	;wreg free
  1047  001032                     
  1048                           ;Current_Sense_Main.c: 143: {
  1049                           ;Current_Sense_Main.c: 151: toggleBlue( );
  1050  001032  EC13  F00C         	call	_toggleBlue	;wreg free
  1051                           
  1052                           ;Current_Sense_Main.c: 228: communications( 0 );
  1053  001036  0E00               	movlw	0
  1054  001038  EC21  F008         	call	_communications
  1055                           
  1056                           ;Current_Sense_Main.c: 242: powerPulseCheck( );
  1057  00103C  EC7F  F005         	call	_powerPulseCheck	;wreg free
  1058  001040  D7F8               	goto	l109
  1059  001042                     __end_of_main:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           postdec1	equ	0xFE5
  1068                           fsr1l	equ	0xFE1
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _toggleBlue *****************
  1072 ;; Defined at:
  1073 ;;		line 300 in file "Current_Sense_Main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1087 ;;      Params:         0       0       0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text1
  1102  001826                     __ptext1:
  1103                           	opt stack 0
  1104  001826                     _toggleBlue:
  1105                           	opt stack 29
  1106                           
  1107                           ;Current_Sense_Main.c: 303: if( PORTAbits.RA2 == 0 )
  1108                           
  1109                           ;incstack = 0
  1110  001826  B480               	btfsc	3968,2,c	;volatile
  1111  001828  D006               	goto	l115
  1112                           
  1113                           ;Current_Sense_Main.c: 304: {
  1114                           ;Current_Sense_Main.c: 305: if( isLow == 0 )
  1115  00182A  5047               	movf	_isLow,w,c
  1116  00182C  A4D8               	btfss	status,2,c
  1117  00182E  D005               	goto	l119
  1118                           
  1119                           ;Current_Sense_Main.c: 306: {
  1120                           ;Current_Sense_Main.c: 308: if( PORTBbits.RB4 == 0 )
  1121  001830  5081               	movf	3969,w,c	;volatile
  1122                           
  1123                           ;Current_Sense_Main.c: 317: }
  1124                           ;Current_Sense_Main.c: 318: isLow = 1;
  1125                           
  1126                           ;Current_Sense_Main.c: 313: else
  1127                           ;Current_Sense_Main.c: 314: {
  1128                           
  1129                           ;Current_Sense_Main.c: 309: {
  1130                           ;Current_Sense_Main.c: 312: }
  1131  001832  0E01               	movlw	1
  1132  001834  D001               	goto	L7
  1133  001836                     l115:
  1134                           
  1135                           ;Current_Sense_Main.c: 322: else
  1136                           ;Current_Sense_Main.c: 323: {
  1137                           ;Current_Sense_Main.c: 324: isLow = 0;
  1138  001836  0E00               	movlw	0
  1139  001838                     L7:
  1140  001838  6E47               	movwf	_isLow,c
  1141  00183A                     l119:
  1142                           
  1143                           ;Current_Sense_Main.c: 325: }
  1144                           ;Current_Sense_Main.c: 327: if( isLow )
  1145  00183A  5047               	movf	_isLow,w,c
  1146  00183C  B4D8               	btfsc	status,2,c
  1147  00183E  D002               	goto	l120
  1148                           
  1149                           ;Current_Sense_Main.c: 328: {
  1150                           ;Current_Sense_Main.c: 329: LATCbits.LATC1 = 0;
  1151  001840  928B               	bcf	3979,1,c	;volatile
  1152                           
  1153                           ;Current_Sense_Main.c: 330: }
  1154  001842  0012               	return	
  1155  001844                     l120:
  1156                           
  1157                           ;Current_Sense_Main.c: 331: else
  1158                           ;Current_Sense_Main.c: 332: {
  1159                           ;Current_Sense_Main.c: 333: LATCbits.LATC1 = 1;
  1160  001844  828B               	bsf	3979,1,c	;volatile
  1161  001846  0012               	return	
  1162  001848                     __end_of_toggleBlue:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1l	equ	0xFE1
  1172                           status	equ	0xFD8
  1173                           
  1174 ;; *************** function _powerPulseCheck *****************
  1175 ;; Defined at:
  1176 ;;		line 410 in file "Current_Sense_Main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  meterWattsLF    4   37[COMRAM] long 
  1181 ;;  meterWattsHF    4   33[COMRAM] long 
  1182 ;;  meterWattsLF    1   42[COMRAM] unsigned char 
  1183 ;;  meterWattsHF    1   41[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1193 ;;      Params:         0       0       0       0       0       0       0
  1194 ;;      Locals:        10       0       0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0       0       0
  1196 ;;      Totals:        11       0       0       0       0       0       0
  1197 ;;Total ram usage:       11 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    2
  1200 ;; This function calls:
  1201 ;;		___aldiv
  1202 ;;		___awmod
  1203 ;;		___lmul
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text2
  1210  000AFE                     __ptext2:
  1211                           	opt stack 0
  1212  000AFE                     _powerPulseCheck:
  1213                           	opt stack 28
  1214                           
  1215                           ;Current_Sense_Main.c: 415: static int TESTING_count = 0;
  1216                           ;Current_Sense_Main.c: 416: static bool TESTING_oneshot = 0;
  1217                           ;Current_Sense_Main.c: 418: if( timerCountHF >= 1000 )
  1218                           
  1219                           ;incstack = 0
  1220  000AFE  BE4B               	btfsc	_timerCountHF+3,7,c	;volatile
  1221  000B00  D014               	goto	l134
  1222  000B02  504B               	movf	_timerCountHF+3,w,c	;volatile
  1223  000B04  104A               	iorwf	_timerCountHF+2,w,c	;volatile
  1224  000B06  E106               	bnz	u2930
  1225  000B08  0EE8               	movlw	232
  1226  000B0A  5C48               	subwf	_timerCountHF,w,c	;volatile
  1227  000B0C  0E03               	movlw	3
  1228  000B0E  5849               	subwfb	_timerCountHF+1,w,c	;volatile
  1229  000B10  A0D8               	btfss	status,0,c
  1230  000B12  D00B               	goto	l134
  1231  000B14                     u2930:
  1232                           
  1233                           ;Current_Sense_Main.c: 419: {
  1234                           ;Current_Sense_Main.c: 420: TESTING_count++;
  1235  000B14  0100               	movlb	0	; () banked
  1236  000B16  4BBD               	infsnz	powerPulseCheck@TESTING_count& (0+255),f,b
  1237  000B18  2BBE               	incf	(powerPulseCheck@TESTING_count+1)& (0+255),f,b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;Current_Sense_Main.c: 421: timerCountHF = 0;
  1241  000B1A  0E00               	movlw	0
  1242  000B1C  6E48               	movwf	_timerCountHF,c	;volatile
  1243  000B1E  0E00               	movlw	0
  1244  000B20  6E49               	movwf	_timerCountHF+1,c	;volatile
  1245  000B22  0E00               	movlw	0
  1246  000B24  6E4A               	movwf	_timerCountHF+2,c	;volatile
  1247  000B26  0E00               	movlw	0
  1248  000B28  6E4B               	movwf	_timerCountHF+3,c	;volatile
  1249  000B2A                     l134:
  1250                           
  1251                           ;Current_Sense_Main.c: 422: }
  1252                           ;Current_Sense_Main.c: 424: if( TESTING_count < 1 )
  1253                           
  1254                           ; BSR set to: 0
  1255  000B2A  0100               	movlb	0	; () banked
  1256  000B2C  BFBE               	btfsc	(powerPulseCheck@TESTING_count+1)& (0+255),7,b
  1257  000B2E  D005               	goto	u2940
  1258  000B30  51BE               	movf	(powerPulseCheck@TESTING_count+1)& (0+255),w,b
  1259  000B32  E113               	bnz	l3374
  1260  000B34  05BD               	decf	powerPulseCheck@TESTING_count& (0+255),w,b
  1261  000B36  B0D8               	btfsc	status,0,c
  1262  000B38  D010               	goto	l135
  1263  000B3A                     u2940:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Current_Sense_Main.c: 425: {
  1267                           ;Current_Sense_Main.c: 426: meterEnergyUsed = 0;
  1268  000B3A  0E00               	movlw	0
  1269  000B3C  6FB1               	movwf	_meterEnergyUsed& (0+255),b
  1270  000B3E  0E00               	movlw	0
  1271  000B40  6FB2               	movwf	(_meterEnergyUsed+1)& (0+255),b
  1272  000B42  0E00               	movlw	0
  1273  000B44  6FB3               	movwf	(_meterEnergyUsed+2)& (0+255),b
  1274  000B46  0E00               	movlw	0
  1275  000B48  6FB4               	movwf	(_meterEnergyUsed+3)& (0+255),b
  1276                           
  1277                           ;Current_Sense_Main.c: 427: meterWatts = 0;
  1278  000B4A  0E00               	movlw	0
  1279  000B4C  6FB5               	movwf	_meterWatts& (0+255),b
  1280  000B4E  0E00               	movlw	0
  1281  000B50  6FB6               	movwf	(_meterWatts+1)& (0+255),b
  1282  000B52  0E00               	movlw	0
  1283  000B54  6FB7               	movwf	(_meterWatts+2)& (0+255),b
  1284  000B56  0E00               	movlw	0
  1285  000B58  6FB8               	movwf	(_meterWatts+3)& (0+255),b
  1286  000B5A                     l135:
  1287  000B5A                     l3374:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;Current_Sense_Main.c: 428: }
  1291                           ;Current_Sense_Main.c: 430: if( TESTING_count % 10 == 0 )
  1292  000B5A  C0BD  F013         	movff	powerPulseCheck@TESTING_count,___awmod@dividend
  1293  000B5E  C0BE  F014         	movff	powerPulseCheck@TESTING_count+1,___awmod@dividend+1
  1294  000B62  0E00               	movlw	0
  1295  000B64  6E16               	movwf	___awmod@divisor+1,c
  1296  000B66  0E0A               	movlw	10
  1297  000B68  6E15               	movwf	___awmod@divisor,c
  1298  000B6A  ECD7  F009         	call	___awmod	;wreg free
  1299  000B6E  5013               	movf	?___awmod,w,c
  1300  000B70  1014               	iorwf	?___awmod+1,w,c
  1301  000B72  A4D8               	btfss	status,2,c
  1302  000B74  D032               	goto	l136
  1303                           
  1304                           ;Current_Sense_Main.c: 431: {
  1305                           ;Current_Sense_Main.c: 432: if( TESTING_oneshot == 0 )
  1306  000B76  5046               	movf	powerPulseCheck@TESTING_oneshot,w,c
  1307  000B78  A4D8               	btfss	status,2,c
  1308  000B7A  0012               	return	
  1309                           
  1310                           ;Current_Sense_Main.c: 433: {
  1311                           ;Current_Sense_Main.c: 434: TESTING_oneshot = 1;
  1312  000B7C  0E01               	movlw	1
  1313  000B7E  6E46               	movwf	powerPulseCheck@TESTING_oneshot,c
  1314                           
  1315                           ;Current_Sense_Main.c: 436: if( PORTBbits.RB4 == 0 )
  1316  000B80  B881               	btfsc	3969,4,c	;volatile
  1317  000B82  D002               	goto	l138
  1318                           
  1319                           ;Current_Sense_Main.c: 437: {
  1320                           ;Current_Sense_Main.c: 438: LATBbits.LATB4 = 1;
  1321  000B84  888A               	bsf	3978,4,c	;volatile
  1322                           
  1323                           ;Current_Sense_Main.c: 441: }
  1324  000B86  D001               	goto	l139
  1325  000B88                     l138:
  1326                           
  1327                           ;Current_Sense_Main.c: 442: else
  1328                           ;Current_Sense_Main.c: 443: {
  1329                           ;Current_Sense_Main.c: 445: LATBbits.LATB4 = 0;
  1330  000B88  988A               	bcf	3978,4,c	;volatile
  1331  000B8A                     l139:
  1332                           
  1333                           ;Current_Sense_Main.c: 448: }
  1334                           ;Current_Sense_Main.c: 450: meterEnergyUsed++;
  1335  000B8A  0E01               	movlw	1
  1336  000B8C  0100               	movlb	0	; () banked
  1337  000B8E  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1338  000B90  0E00               	movlw	0
  1339  000B92  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1340  000B94  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1341  000B96  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1342                           
  1343                           ;Current_Sense_Main.c: 451: meterEnergyUsed++;
  1344  000B98  0E01               	movlw	1
  1345  000B9A  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1346  000B9C  0E00               	movlw	0
  1347  000B9E  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1348  000BA0  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1349  000BA2  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1350                           
  1351                           ;Current_Sense_Main.c: 452: meterEnergyUsed++;
  1352  000BA4  0E01               	movlw	1
  1353  000BA6  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1354  000BA8  0E00               	movlw	0
  1355  000BAA  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1356  000BAC  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1357  000BAE  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1358                           
  1359                           ;Current_Sense_Main.c: 453: meterEnergyUsed++;
  1360  000BB0  0E01               	movlw	1
  1361  000BB2  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1362  000BB4  0E00               	movlw	0
  1363  000BB6  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1364  000BB8  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1365  000BBA  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1366                           
  1367                           ;Current_Sense_Main.c: 454: meterEnergyUsed++;
  1368  000BBC  0E01               	movlw	1
  1369  000BBE  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1370  000BC0  0E00               	movlw	0
  1371  000BC2  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1372  000BC4  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1373  000BC6  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;Current_Sense_Main.c: 455: meterWatts = meterEnergyUsed;
  1377  000BC8  C0B1  F0B5         	movff	_meterEnergyUsed,_meterWatts
  1378  000BCC  C0B2  F0B6         	movff	_meterEnergyUsed+1,_meterWatts+1
  1379  000BD0  C0B3  F0B7         	movff	_meterEnergyUsed+2,_meterWatts+2
  1380  000BD4  C0B4  F0B8         	movff	_meterEnergyUsed+3,_meterWatts+3
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;Current_Sense_Main.c: 457: }
  1384                           ;Current_Sense_Main.c: 458: }
  1385  000BD8  0012               	return	
  1386  000BDA                     l136:
  1387                           
  1388                           ;Current_Sense_Main.c: 459: else
  1389                           ;Current_Sense_Main.c: 460: {
  1390                           ;Current_Sense_Main.c: 461: TESTING_oneshot = 0;
  1391                           
  1392                           ; BSR set to: 0
  1393  000BDA  0E00               	movlw	0
  1394  000BDC  6E46               	movwf	powerPulseCheck@TESTING_oneshot,c
  1395                           
  1396                           ;Current_Sense_Main.c: 462: }
  1397                           ;Current_Sense_Main.c: 464: return;
  1398  000BDE  0012               	return	
  1399  000BE0                     l3460:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;Current_Sense_Main.c: 611: {
  1403                           ;Current_Sense_Main.c: 612: meterEnergyUsed++;
  1404  000BE0  0E01               	movlw	1
  1405  000BE2  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1406  000BE4  0E00               	movlw	0
  1407  000BE6  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1408  000BE8  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1409  000BEA  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1410                           
  1411                           ;Current_Sense_Main.c: 613: meterEnergyUsedPart -= 100000;
  1412  000BEC  0E60               	movlw	96
  1413  000BEE  27AD               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1414  000BF0  0E79               	movlw	121
  1415  000BF2  23AE               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1416  000BF4  0EFE               	movlw	254
  1417  000BF6  23AF               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1418  000BF8  0EFF               	movlw	255
  1419  000BFA  23B0               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1420                           
  1421                           ; BSR set to: 0
  1422  000BFC  BFB0               	btfsc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),7,b
  1423  000BFE  0012               	return	
  1424  000C00  51B0               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1425  000C02  E1EE               	bnz	l3460
  1426  000C04  0EA1               	movlw	161
  1427  000C06  5DAD               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1428  000C08  0E86               	movlw	134
  1429  000C0A  59AE               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1430  000C0C  0E01               	movlw	1
  1431  000C0E  59AF               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1432  000C10  A0D8               	btfss	status,0,c
  1433  000C12  0012               	return	
  1434  000C14  D7E5               	goto	l183
  1435  000C16                     __end_of_powerPulseCheck:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1l	equ	0xFE1
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function ___awmod *****************
  1448 ;; Defined at:
  1449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  dividend        2   18[COMRAM] int 
  1452 ;;  divisor         2   20[COMRAM] int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  sign            1   23[COMRAM] unsigned char 
  1455 ;;  counter         1   22[COMRAM] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2   18[COMRAM] int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1465 ;;      Params:         4       0       0       0       0       0       0
  1466 ;;      Locals:         2       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0
  1468 ;;      Totals:         6       0       0       0       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_powerPulseCheck
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text3
  1480  0013AE                     __ptext3:
  1481                           	opt stack 0
  1482  0013AE                     ___awmod:
  1483                           	opt stack 28
  1484                           
  1485                           ;incstack = 0
  1486  0013AE  0E00               	movlw	0
  1487  0013B0  6E18               	movwf	___awmod@sign,c
  1488  0013B2  AE14               	btfss	___awmod@dividend+1,7,c
  1489  0013B4  D006               	goto	l658
  1490  0013B6  6C13               	negf	___awmod@dividend,c
  1491  0013B8  1E14               	comf	___awmod@dividend+1,f,c
  1492  0013BA  B0D8               	btfsc	status,0,c
  1493  0013BC  2A14               	incf	___awmod@dividend+1,f,c
  1494  0013BE  0E01               	movlw	1
  1495  0013C0  6E18               	movwf	___awmod@sign,c
  1496  0013C2                     l658:
  1497  0013C2  AE16               	btfss	___awmod@divisor+1,7,c
  1498  0013C4  D004               	goto	l659
  1499  0013C6  6C15               	negf	___awmod@divisor,c
  1500  0013C8  1E16               	comf	___awmod@divisor+1,f,c
  1501  0013CA  B0D8               	btfsc	status,0,c
  1502  0013CC  2A16               	incf	___awmod@divisor+1,f,c
  1503  0013CE                     l659:
  1504  0013CE  5015               	movf	___awmod@divisor,w,c
  1505  0013D0  1016               	iorwf	___awmod@divisor+1,w,c
  1506  0013D2  B4D8               	btfsc	status,2,c
  1507  0013D4  D018               	goto	l666
  1508  0013D6  0E01               	movlw	1
  1509  0013D8  6E17               	movwf	___awmod@counter,c
  1510  0013DA  D004               	goto	l661
  1511  0013DC  90D8               	bcf	status,0,c
  1512  0013DE  3615               	rlcf	___awmod@divisor,f,c
  1513  0013E0  3616               	rlcf	___awmod@divisor+1,f,c
  1514  0013E2  2A17               	incf	___awmod@counter,f,c
  1515  0013E4                     l661:
  1516  0013E4  AE16               	btfss	___awmod@divisor+1,7,c
  1517  0013E6  D7FA               	goto	l662
  1518  0013E8                     u1870:
  1519  0013E8  5015               	movf	___awmod@divisor,w,c
  1520  0013EA  5C13               	subwf	___awmod@dividend,w,c
  1521  0013EC  5016               	movf	___awmod@divisor+1,w,c
  1522  0013EE  5814               	subwfb	___awmod@dividend+1,w,c
  1523  0013F0  A0D8               	btfss	status,0,c
  1524  0013F2  D004               	goto	l665
  1525  0013F4  5015               	movf	___awmod@divisor,w,c
  1526  0013F6  5E13               	subwf	___awmod@dividend,f,c
  1527  0013F8  5016               	movf	___awmod@divisor+1,w,c
  1528  0013FA  5A14               	subwfb	___awmod@dividend+1,f,c
  1529  0013FC                     l665:
  1530  0013FC  90D8               	bcf	status,0,c
  1531  0013FE  3216               	rrcf	___awmod@divisor+1,f,c
  1532  001400  3215               	rrcf	___awmod@divisor,f,c
  1533  001402  2E17               	decfsz	___awmod@counter,f,c
  1534  001404  D7F1               	goto	u1870
  1535  001406                     l666:
  1536  001406  5018               	movf	___awmod@sign,w,c
  1537  001408  B4D8               	btfsc	status,2,c
  1538  00140A  D004               	goto	l667
  1539  00140C  6C13               	negf	___awmod@dividend,c
  1540  00140E  1E14               	comf	___awmod@dividend+1,f,c
  1541  001410  B0D8               	btfsc	status,0,c
  1542  001412  2A14               	incf	___awmod@dividend+1,f,c
  1543  001414                     l667:
  1544  001414  C013  F013         	movff	___awmod@dividend,?___awmod
  1545  001418  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1546  00141C  0012               	return	
  1547  00141E                     __end_of___awmod:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           postdec1	equ	0xFE5
  1556                           fsr1l	equ	0xFE1
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function ___aldiv *****************
  1560 ;; Defined at:
  1561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  dividend        4   18[COMRAM] long 
  1564 ;;  divisor         4   22[COMRAM] long 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  quotient        4   28[COMRAM] long 
  1567 ;;  sign            1   27[COMRAM] unsigned char 
  1568 ;;  counter         1   26[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  4   18[COMRAM] long 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         8       0       0       0       0       0       0
  1579 ;;      Locals:         6       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:        14       0       0       0       0       0       0
  1582 ;;Total ram usage:       14 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_powerPulseCheck
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text4
  1593  000E00                     __ptext4:
  1594                           	opt stack 0
  1595  000E00                     ___aldiv:
  1596                           	opt stack 28
  1597                           
  1598                           ;incstack = 0
  1599  000E00  0E00               	movlw	0
  1600  000E02  6E1C               	movwf	___aldiv@sign,c
  1601  000E04  AE1A               	btfss	___aldiv@divisor+3,7,c
  1602  000E06  D00A               	goto	l519
  1603  000E08  1E1A               	comf	___aldiv@divisor+3,f,c
  1604  000E0A  1E19               	comf	___aldiv@divisor+2,f,c
  1605  000E0C  1E18               	comf	___aldiv@divisor+1,f,c
  1606  000E0E  6C17               	negf	___aldiv@divisor,c
  1607  000E10  0E00               	movlw	0
  1608  000E12  2218               	addwfc	___aldiv@divisor+1,f,c
  1609  000E14  2219               	addwfc	___aldiv@divisor+2,f,c
  1610  000E16  221A               	addwfc	___aldiv@divisor+3,f,c
  1611  000E18  0E01               	movlw	1
  1612  000E1A  6E1C               	movwf	___aldiv@sign,c
  1613  000E1C                     l519:
  1614  000E1C  AE16               	btfss	___aldiv@dividend+3,7,c
  1615  000E1E  D00A               	goto	l520
  1616  000E20  1E16               	comf	___aldiv@dividend+3,f,c
  1617  000E22  1E15               	comf	___aldiv@dividend+2,f,c
  1618  000E24  1E14               	comf	___aldiv@dividend+1,f,c
  1619  000E26  6C13               	negf	___aldiv@dividend,c
  1620  000E28  0E00               	movlw	0
  1621  000E2A  2214               	addwfc	___aldiv@dividend+1,f,c
  1622  000E2C  2215               	addwfc	___aldiv@dividend+2,f,c
  1623  000E2E  2216               	addwfc	___aldiv@dividend+3,f,c
  1624  000E30  0E01               	movlw	1
  1625  000E32  1A1C               	xorwf	___aldiv@sign,f,c
  1626  000E34                     l520:
  1627  000E34  0E00               	movlw	0
  1628  000E36  6E1D               	movwf	___aldiv@quotient,c
  1629  000E38  0E00               	movlw	0
  1630  000E3A  6E1E               	movwf	___aldiv@quotient+1,c
  1631  000E3C  0E00               	movlw	0
  1632  000E3E  6E1F               	movwf	___aldiv@quotient+2,c
  1633  000E40  0E00               	movlw	0
  1634  000E42  6E20               	movwf	___aldiv@quotient+3,c
  1635  000E44  5017               	movf	___aldiv@divisor,w,c
  1636  000E46  1018               	iorwf	___aldiv@divisor+1,w,c
  1637  000E48  1019               	iorwf	___aldiv@divisor+2,w,c
  1638  000E4A  101A               	iorwf	___aldiv@divisor+3,w,c
  1639  000E4C  B4D8               	btfsc	status,2,c
  1640  000E4E  D02A               	goto	l527
  1641  000E50  0E01               	movlw	1
  1642  000E52  6E1B               	movwf	___aldiv@counter,c
  1643  000E54  D006               	goto	l522
  1644  000E56  90D8               	bcf	status,0,c
  1645  000E58  3617               	rlcf	___aldiv@divisor,f,c
  1646  000E5A  3618               	rlcf	___aldiv@divisor+1,f,c
  1647  000E5C  3619               	rlcf	___aldiv@divisor+2,f,c
  1648  000E5E  361A               	rlcf	___aldiv@divisor+3,f,c
  1649  000E60  2A1B               	incf	___aldiv@counter,f,c
  1650  000E62                     l522:
  1651  000E62  AE1A               	btfss	___aldiv@divisor+3,7,c
  1652  000E64  D7F8               	goto	l523
  1653  000E66                     u1810:
  1654  000E66  90D8               	bcf	status,0,c
  1655  000E68  361D               	rlcf	___aldiv@quotient,f,c
  1656  000E6A  361E               	rlcf	___aldiv@quotient+1,f,c
  1657  000E6C  361F               	rlcf	___aldiv@quotient+2,f,c
  1658  000E6E  3620               	rlcf	___aldiv@quotient+3,f,c
  1659  000E70  5017               	movf	___aldiv@divisor,w,c
  1660  000E72  5C13               	subwf	___aldiv@dividend,w,c
  1661  000E74  5018               	movf	___aldiv@divisor+1,w,c
  1662  000E76  5814               	subwfb	___aldiv@dividend+1,w,c
  1663  000E78  5019               	movf	___aldiv@divisor+2,w,c
  1664  000E7A  5815               	subwfb	___aldiv@dividend+2,w,c
  1665  000E7C  501A               	movf	___aldiv@divisor+3,w,c
  1666  000E7E  5816               	subwfb	___aldiv@dividend+3,w,c
  1667  000E80  A0D8               	btfss	status,0,c
  1668  000E82  D009               	goto	l526
  1669  000E84  5017               	movf	___aldiv@divisor,w,c
  1670  000E86  5E13               	subwf	___aldiv@dividend,f,c
  1671  000E88  5018               	movf	___aldiv@divisor+1,w,c
  1672  000E8A  5A14               	subwfb	___aldiv@dividend+1,f,c
  1673  000E8C  5019               	movf	___aldiv@divisor+2,w,c
  1674  000E8E  5A15               	subwfb	___aldiv@dividend+2,f,c
  1675  000E90  501A               	movf	___aldiv@divisor+3,w,c
  1676  000E92  5A16               	subwfb	___aldiv@dividend+3,f,c
  1677  000E94  801D               	bsf	___aldiv@quotient,0,c
  1678  000E96                     l526:
  1679  000E96  90D8               	bcf	status,0,c
  1680  000E98  321A               	rrcf	___aldiv@divisor+3,f,c
  1681  000E9A  3219               	rrcf	___aldiv@divisor+2,f,c
  1682  000E9C  3218               	rrcf	___aldiv@divisor+1,f,c
  1683  000E9E  3217               	rrcf	___aldiv@divisor,f,c
  1684  000EA0  2E1B               	decfsz	___aldiv@counter,f,c
  1685  000EA2  D7E1               	goto	u1810
  1686  000EA4                     l527:
  1687  000EA4  501C               	movf	___aldiv@sign,w,c
  1688  000EA6  B4D8               	btfsc	status,2,c
  1689  000EA8  D008               	goto	l528
  1690  000EAA  1E20               	comf	___aldiv@quotient+3,f,c
  1691  000EAC  1E1F               	comf	___aldiv@quotient+2,f,c
  1692  000EAE  1E1E               	comf	___aldiv@quotient+1,f,c
  1693  000EB0  6C1D               	negf	___aldiv@quotient,c
  1694  000EB2  0E00               	movlw	0
  1695  000EB4  221E               	addwfc	___aldiv@quotient+1,f,c
  1696  000EB6  221F               	addwfc	___aldiv@quotient+2,f,c
  1697  000EB8  2220               	addwfc	___aldiv@quotient+3,f,c
  1698  000EBA                     l528:
  1699  000EBA  C01D  F013         	movff	___aldiv@quotient,?___aldiv
  1700  000EBE  C01E  F014         	movff	___aldiv@quotient+1,?___aldiv+1
  1701  000EC2  C01F  F015         	movff	___aldiv@quotient+2,?___aldiv+2
  1702  000EC6  C020  F016         	movff	___aldiv@quotient+3,?___aldiv+3
  1703  000ECA  0012               	return	
  1704  000ECC                     __end_of___aldiv:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec1	equ	0xFE5
  1713                           fsr1l	equ	0xFE1
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _initTimer *****************
  1717 ;; Defined at:
  1718 ;;		line 731 in file "Current_Sense_Main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text5
  1747  0018A8                     __ptext5:
  1748                           	opt stack 0
  1749  0018A8                     _initTimer:
  1750                           	opt stack 29
  1751                           
  1752                           ;Current_Sense_Main.c: 734: T0CONbits.TMR0ON = 0;
  1753                           
  1754                           ;incstack = 0
  1755  0018A8  9ED5               	bcf	4053,7,c	;volatile
  1756                           
  1757                           ;Current_Sense_Main.c: 735: T0CONbits.T08BIT = 0;
  1758  0018AA  9CD5               	bcf	4053,6,c	;volatile
  1759                           
  1760                           ;Current_Sense_Main.c: 736: T0CONbits.T0CS = 0;
  1761  0018AC  9AD5               	bcf	4053,5,c	;volatile
  1762                           
  1763                           ;Current_Sense_Main.c: 737: T0CONbits.PSA = 0;
  1764  0018AE  96D5               	bcf	4053,3,c	;volatile
  1765                           
  1766                           ;Current_Sense_Main.c: 738: T0CONbits.T0PS = 0b001;
  1767  0018B0  50D5               	movf	4053,w,c	;volatile
  1768  0018B2  0BF8               	andlw	-8
  1769  0018B4  0901               	iorlw	1
  1770  0018B6  6ED5               	movwf	4053,c	;volatile
  1771                           
  1772                           ;Current_Sense_Main.c: 740: INTCONbits.TMR0IE = 1;
  1773  0018B8  8AF2               	bsf	intcon,5,c	;volatile
  1774                           
  1775                           ;Current_Sense_Main.c: 741: INTCONbits.GIE = 1;
  1776  0018BA  8EF2               	bsf	intcon,7,c	;volatile
  1777                           
  1778                           ;Current_Sense_Main.c: 742: T0CONbits.TMR0ON = 1;
  1779  0018BC  8ED5               	bsf	4053,7,c	;volatile
  1780  0018BE  0012               	return		;funcret
  1781  0018C0                     __end_of_initTimer:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           intcon	equ	0xFF2
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           postdec1	equ	0xFE5
  1791                           fsr1l	equ	0xFE1
  1792                           status	equ	0xFD8
  1793                           
  1794 ;; *************** function _init *****************
  1795 ;; Defined at:
  1796 ;;		line 651 in file "Current_Sense_Main.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1810 ;;      Params:         0       0       0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0
  1813 ;;      Totals:         0       0       0       0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		_initIO
  1819 ;;		_initOSC
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text6
  1826  0018F8                     __ptext6:
  1827                           	opt stack 0
  1828  0018F8                     _init:
  1829                           	opt stack 28
  1830                           
  1831                           ;Current_Sense_Main.c: 653: initOSC( );
  1832                           
  1833                           ;incstack = 0
  1834  0018F8  EC60  F00C         	call	_initOSC	;wreg free
  1835                           
  1836                           ;Current_Sense_Main.c: 654: initIO( );
  1837  0018FC  EC24  F00C         	call	_initIO	;wreg free
  1838  001900  0012               	return	
  1839  001902                     __end_of_init:
  1840                           	opt stack 0
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1l	equ	0xFE1
  1850                           status	equ	0xFD8
  1851                           
  1852 ;; *************** function _initOSC *****************
  1853 ;; Defined at:
  1854 ;;		line 661 in file "Current_Sense_Main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1868 ;;      Params:         0       0       0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_init
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text7
  1883  0018C0                     __ptext7:
  1884                           	opt stack 0
  1885  0018C0                     _initOSC:
  1886                           	opt stack 28
  1887                           
  1888                           ;Current_Sense_Main.c: 664: OSCCONbits.IDLEN = 0;
  1889                           
  1890                           ;incstack = 0
  1891  0018C0  9ED3               	bcf	4051,7,c	;volatile
  1892                           
  1893                           ;Current_Sense_Main.c: 665: OSCCONbits.IRCF = 0b111;
  1894  0018C2  88D3               	bsf	4051,4,c	;volatile
  1895  0018C4  8AD3               	bsf	4051,5,c	;volatile
  1896  0018C6  8CD3               	bsf	4051,6,c	;volatile
  1897                           
  1898                           ;Current_Sense_Main.c: 666: OSCCONbits.SCS = 0b11;
  1899  0018C8  0E03               	movlw	3
  1900  0018CA  12D3               	iorwf	4051,f,c	;volatile
  1901                           
  1902                           ;Current_Sense_Main.c: 668: OSCCON2bits.MFIOSEL = 0;
  1903  0018CC  98D2               	bcf	4050,4,c	;volatile
  1904                           
  1905                           ;Current_Sense_Main.c: 669: OSCCON2bits.SOSCGO = 0;
  1906  0018CE  96D2               	bcf	4050,3,c	;volatile
  1907                           
  1908                           ;Current_Sense_Main.c: 670: OSCCON2bits.PRISD = 0;
  1909  0018D0  94D2               	bcf	4050,2,c	;volatile
  1910                           
  1911                           ;Current_Sense_Main.c: 672: OSCTUNEbits.INTSRC = 1;
  1912  0018D2  8E9B               	bsf	3995,7,c	;volatile
  1913                           
  1914                           ;Current_Sense_Main.c: 673: OSCTUNEbits.PLLEN = 0;
  1915  0018D4  9C9B               	bcf	3995,6,c	;volatile
  1916  0018D6  0012               	return	
  1917  0018D8                     __end_of_initOSC:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           intcon	equ	0xFF2
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1l	equ	0xFE1
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _initIO *****************
  1931 ;; Defined at:
  1932 ;;		line 678 in file "Current_Sense_Main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_init
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text8
  1961  001848                     __ptext8:
  1962                           	opt stack 0
  1963  001848                     _initIO:
  1964                           	opt stack 28
  1965                           
  1966                           ;Current_Sense_Main.c: 680: ADCON0bits.ADON = 0;
  1967                           
  1968                           ;incstack = 0
  1969  001848  90C2               	bcf	4034,0,c	;volatile
  1970                           
  1971                           ;Current_Sense_Main.c: 681: ANSELA = 0b00000000;
  1972  00184A  0E00               	movlw	0
  1973  00184C  010F               	movlb	15	; () banked
  1974  00184E  6F38               	movwf	56,b	;volatile
  1975                           
  1976                           ;Current_Sense_Main.c: 682: ANSELB = 0b00000000;
  1977  001850  0E00               	movlw	0
  1978  001852  6F39               	movwf	57,b	;volatile
  1979                           
  1980                           ;Current_Sense_Main.c: 683: ANSELC = 0b00000000;
  1981  001854  0E00               	movlw	0
  1982  001856  6F3A               	movwf	58,b	;volatile
  1983                           
  1984                           ; BSR set to: 15
  1985                           ;Current_Sense_Main.c: 685: TRISBbits.TRISB4 = 0;
  1986  001858  9893               	bcf	3987,4,c	;volatile
  1987                           
  1988                           ; BSR set to: 15
  1989                           ;Current_Sense_Main.c: 686: TRISCbits.TRISC0 = 0;
  1990  00185A  9094               	bcf	3988,0,c	;volatile
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;Current_Sense_Main.c: 687: TRISCbits.TRISC1 = 0;
  1994  00185C  9294               	bcf	3988,1,c	;volatile
  1995                           
  1996                           ; BSR set to: 15
  1997                           ;Current_Sense_Main.c: 689: LATBbits.LATB4 = 0;
  1998  00185E  988A               	bcf	3978,4,c	;volatile
  1999                           
  2000                           ; BSR set to: 15
  2001                           ;Current_Sense_Main.c: 690: LATCbits.LATC0 = 0;
  2002  001860  908B               	bcf	3979,0,c	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005                           ;Current_Sense_Main.c: 691: LATCbits.LATC1 = 0;
  2006  001862  928B               	bcf	3979,1,c	;volatile
  2007                           
  2008                           ; BSR set to: 15
  2009                           ;Current_Sense_Main.c: 694: TRISAbits.TRISA3 = 1;
  2010  001864  8692               	bsf	3986,3,c	;volatile
  2011                           
  2012                           ; BSR set to: 15
  2013                           ;Current_Sense_Main.c: 695: TRISAbits.TRISA2 = 1;
  2014  001866  8492               	bsf	3986,2,c	;volatile
  2015  001868  0012               	return	
  2016  00186A                     __end_of_initIO:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           intcon	equ	0xFF2
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           postdec1	equ	0xFE5
  2026                           fsr1l	equ	0xFE1
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _delayMS10 *****************
  2030 ;; Defined at:
  2031 ;;		line 642 in file "Current_Sense_Main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  count           2   18[COMRAM] int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  inx             2   21[COMRAM] int 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         2       0       0       0       0       0       0
  2046 ;;      Locals:         2       0       0       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0       0       0
  2048 ;;      Totals:         5       0       0       0       0       0       0
  2049 ;;Total ram usage:        5 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text9
  2060  00174E                     __ptext9:
  2061                           	opt stack 0
  2062  00174E                     _delayMS10:
  2063                           	opt stack 29
  2064                           
  2065                           ;Current_Sense_Main.c: 644: for( int inx = 0; inx < count; inx++ )
  2066                           
  2067                           ; BSR set to: 15
  2068                           ;incstack = 0
  2069  00174E  0E00               	movlw	0
  2070  001750  6E17               	movwf	delayMS10@inx+1,c
  2071  001752  0E00               	movlw	0
  2072  001754  6E16               	movwf	delayMS10@inx,c
  2073  001756  D009               	goto	l192
  2074  001758                     
  2075                           ;Current_Sense_Main.c: 645: {
  2076                           ;Current_Sense_Main.c: 647: _delay((unsigned long)((10)*(16000000/4000.0)));
  2077  001758  0E34               	movlw	52
  2078  00175A  6E15               	movwf	??_delayMS10& (0+255),c
  2079  00175C  0EF2               	movlw	242
  2080  00175E                     u3207:
  2081  00175E  2EE8               	decfsz	wreg,f,c
  2082  001760  D7FE               	bra	u3207
  2083  001762  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2084  001764  D7FC               	bra	u3207
  2085  001766  4A16               	infsnz	delayMS10@inx,f,c
  2086  001768  2A17               	incf	delayMS10@inx+1,f,c
  2087  00176A                     l192:
  2088  00176A  5013               	movf	delayMS10@count,w,c
  2089  00176C  5C16               	subwf	delayMS10@inx,w,c
  2090  00176E  5017               	movf	delayMS10@inx+1,w,c
  2091  001770  0A80               	xorlw	128
  2092  001772  6E15               	movwf	??_delayMS10& (0+255),c
  2093  001774  5014               	movf	delayMS10@count+1,w,c
  2094  001776  0A80               	xorlw	128
  2095  001778  5815               	subwfb	??_delayMS10& (0+255),w,c
  2096  00177A  B0D8               	btfsc	status,0,c
  2097  00177C  0012               	return	
  2098  00177E  D7EC               	goto	l193
  2099  001780                     __end_of_delayMS10:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1l	equ	0xFE1
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _communications *****************
  2113 ;; Defined at:
  2114 ;;		line 90 in file "SlaveComm_PIC18.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  firstTime       1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  firstTime       1   72[BANK0 ] unsigned char 
  2119 ;;  no_more_to_s    1   71[BANK0 ] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         0       0       0       0       0       0       0
  2130 ;;      Locals:         0       2       0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0
  2132 ;;      Totals:         0       2       0       0       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    7
  2136 ;; This function calls:
  2137 ;;		_SPISlaveInit
  2138 ;;		_process_data
  2139 ;;		_receive_data
  2140 ;;		_resetCommunications
  2141 ;;		_send_data
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text10
  2148  001042                     __ptext10:
  2149                           	opt stack 0
  2150  001042                     _communications:
  2151                           	opt stack 23
  2152                           
  2153                           ;incstack = 0
  2154                           ;communications@firstTime stored from wreg
  2155  001042  0100               	movlb	0	; () banked
  2156  001044  6FA8               	movwf	communications@firstTime& (0+255),b
  2157                           
  2158                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  2159                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  2160                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  2161                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  2162                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  2163                           ;SlaveComm_PIC18.c: 104: if( firstTime == 1 )
  2164  001046  0100               	movlb	0	; () banked
  2165  001048  05A8               	decf	communications@firstTime& (0+255),w,b
  2166  00104A  A4D8               	btfss	status,2,c
  2167  00104C  D00E               	goto	l294
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;SlaveComm_PIC18.c: 105: {
  2171                           ;SlaveComm_PIC18.c: 106: SPISlaveInit( );
  2172  00104E  EC68  F00B         	call	_SPISlaveInit	;wreg free
  2173                           
  2174                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  2175  001052  0E00               	movlw	0
  2176  001054  0100               	movlb	0	; () banked
  2177  001056  6FE9               	movwf	(communications@send_buffer+40)& (0+255),b
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  2181  001058  0E00               	movlw	0
  2182  00105A  6FEA               	movwf	(communications@send_buffer+41)& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;SlaveComm_PIC18.c: 109: resetCommunications( &send_buffer );
  2186  00105C  0EC1               	movlw	low communications@send_buffer
  2187  00105E  6F6C               	movwf	resetCommunications@send_buffer& (0+255),b
  2188  001060  0E00               	movlw	high communications@send_buffer
  2189  001062  6F6D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2190  001064  EC72  F008         	call	_resetCommunications	;wreg free
  2191                           
  2192                           ;SlaveComm_PIC18.c: 110: }
  2193  001068  0012               	return	
  2194  00106A                     l294:
  2195                           
  2196                           ;SlaveComm_PIC18.c: 111: else
  2197                           ;SlaveComm_PIC18.c: 112: {
  2198                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data( &receive_buffer );
  2199  00106A  0E00               	movlw	low communications@receive_buffer
  2200  00106C  6E16               	movwf	receive_data@receive_buffer,c
  2201  00106E  0E01               	movlw	high communications@receive_buffer
  2202  001070  6E17               	movwf	receive_data@receive_buffer+1,c
  2203  001072  EC66  F007         	call	_receive_data	;wreg free
  2204  001076  6E40               	movwf	communications@receive_current_state,c
  2205                           
  2206                           ;SlaveComm_PIC18.c: 117: switch( receive_current_state )
  2207  001078  D012               	goto	l296
  2208  00107A                     
  2209                           ;SlaveComm_PIC18.c: 127: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  2210  00107A  0E00               	movlw	low communications@receive_buffer
  2211  00107C  0100               	movlb	0	; () banked
  2212  00107E  6F70               	movwf	process_data@receive_buffer& (0+255),b
  2213  001080  0E01               	movlw	high communications@receive_buffer
  2214  001082  6F71               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2215  001084  0EC1               	movlw	low communications@send_buffer
  2216  001086  6F72               	movwf	process_data@send_buffer& (0+255),b
  2217  001088  0E00               	movlw	high communications@send_buffer
  2218  00108A  6F73               	movwf	(process_data@send_buffer+1)& (0+255),b
  2219  00108C  ECC0  F00B         	call	_process_data	;wreg free
  2220  001090  06E8               	decf	wreg,f,c
  2221  001092  A4D8               	btfss	status,2,c
  2222  001094  D00E               	goto	l298
  2223                           
  2224                           ;SlaveComm_PIC18.c: 128: {
  2225                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  2226  001096  0E01               	movlw	1
  2227  001098  0100               	movlb	0	; () banked
  2228  00109A  6FBF               	movwf	communications@end_of_transmission_received& (0+255),b
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;SlaveComm_PIC18.c: 133: }
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;SlaveComm_PIC18.c: 130: }
  2235                           ;SlaveComm_PIC18.c: 132: break;
  2236  00109C  D00A               	goto	l298
  2237  00109E                     l296:
  2238                           
  2239                           ; BSR set to: 0
  2240  00109E  5040               	movf	communications@receive_current_state,w,c
  2241                           
  2242                           ; Switch size 1, requested type "space"
  2243                           ; Number of cases is 3, Range of values is 0 to 2
  2244                           ; switch strategies available:
  2245                           ; Name         Instructions Cycles
  2246                           ; simple_byte           10     6 (average)
  2247                           ;	Chosen strategy is simple_byte
  2248  0010A0  0A00               	xorlw	0	; case 0
  2249  0010A2  B4D8               	btfsc	status,2,c
  2250  0010A4  D006               	goto	l298
  2251  0010A6  0A01               	xorlw	1	; case 1
  2252  0010A8  B4D8               	btfsc	status,2,c
  2253  0010AA  D003               	goto	l298
  2254  0010AC  0A03               	xorlw	3	; case 2
  2255  0010AE  B4D8               	btfsc	status,2,c
  2256  0010B0  D7E4               	goto	l300
  2257  0010B2                     l298:
  2258                           
  2259                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data( &send_buffer );
  2260  0010B2  0EC1               	movlw	low communications@send_buffer
  2261  0010B4  6E15               	movwf	send_data@send_buffer,c
  2262  0010B6  0E00               	movlw	high communications@send_buffer
  2263  0010B8  6E16               	movwf	send_data@send_buffer+1,c
  2264  0010BA  EC10  F009         	call	_send_data	;wreg free
  2265  0010BE  0100               	movlb	0	; () banked
  2266  0010C0  6FA7               	movwf	communications@no_more_to_send& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  2270                           ;SlaveComm_PIC18.c: 139: if( PORTBbits.SS2 == 0b1 )
  2271  0010C2  A081               	btfss	3969,0,c	;volatile
  2272  0010C4  D003               	goto	l304
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;SlaveComm_PIC18.c: 140: {
  2276                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  2277  0010C6  0E00               	movlw	0
  2278  0010C8  6E3F               	movwf	communications@last_state_active,c
  2279                           
  2280                           ;SlaveComm_PIC18.c: 142: }
  2281  0010CA  0012               	return	
  2282  0010CC                     l304:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;SlaveComm_PIC18.c: 143: else
  2286                           ;SlaveComm_PIC18.c: 144: {
  2287                           ;SlaveComm_PIC18.c: 145: if( last_state_active == 0 )
  2288                           
  2289                           ; BSR set to: 0
  2290  0010CC  503F               	movf	communications@last_state_active,w,c
  2291  0010CE  A4D8               	btfss	status,2,c
  2292  0010D0  D006               	goto	l306
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;SlaveComm_PIC18.c: 146: {
  2296                           ;SlaveComm_PIC18.c: 147: resetCommunications( &send_buffer );
  2297  0010D2  0EC1               	movlw	low communications@send_buffer
  2298  0010D4  6F6C               	movwf	resetCommunications@send_buffer& (0+255),b
  2299  0010D6  0E00               	movlw	high communications@send_buffer
  2300  0010D8  6F6D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2301  0010DA  EC72  F008         	call	_resetCommunications	;wreg free
  2302  0010DE                     l306:
  2303                           
  2304                           ;SlaveComm_PIC18.c: 148: }
  2305                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  2306  0010DE  0E01               	movlw	1
  2307  0010E0  6E3F               	movwf	communications@last_state_active,c
  2308  0010E2  0012               	return	
  2309  0010E4                     __end_of_communications:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           intcon	equ	0xFF2
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           postdec1	equ	0xFE5
  2319                           fsr1l	equ	0xFE1
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _send_data *****************
  2323 ;; Defined at:
  2324 ;;		line 509 in file "SlaveComm_PIC18.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2327 ;;		 -> communications@send_buffer(42), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  send_end        1   24[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      unsigned char 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         2       0       0       0       0       0       0
  2340 ;;      Locals:         1       0       0       0       0       0       0
  2341 ;;      Temps:          2       0       0       0       0       0       0
  2342 ;;      Totals:         5       0       0       0       0       0       0
  2343 ;;Total ram usage:        5 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		_SPI_send_data
  2348 ;; This function is called by:
  2349 ;;		_communications
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text11
  2354  001220                     __ptext11:
  2355                           	opt stack 0
  2356  001220                     _send_data:
  2357                           	opt stack 27
  2358                           
  2359                           ;SlaveComm_PIC18.c: 511: bool send_end;
  2360                           ;SlaveComm_PIC18.c: 513: if( send_buffer->read_position == send_buffer->write_position )
  2361                           
  2362                           ;incstack = 0
  2363  001220  EE20 F028          	lfsr	2,40
  2364  001224  5015               	movf	send_data@send_buffer,w,c
  2365  001226  26D9               	addwf	fsr2l,f,c
  2366  001228  5016               	movf	send_data@send_buffer+1,w,c
  2367  00122A  22DA               	addwfc	fsr2h,f,c
  2368  00122C  EE10 F029          	lfsr	1,41
  2369  001230  5015               	movf	send_data@send_buffer,w,c
  2370  001232  26E1               	addwf	fsr1l,f,c
  2371  001234  5016               	movf	send_data@send_buffer+1,w,c
  2372  001236  22E2               	addwfc	fsr1h,f,c
  2373  001238  50DE               	movf	postinc2,w,c
  2374  00123A  18E6               	xorwf	postinc1,w,c
  2375  00123C  A4D8               	btfss	status,2,c
  2376  00123E  D006               	goto	l399
  2377                           
  2378                           ;SlaveComm_PIC18.c: 514: {
  2379                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  2380  001240  0E01               	movlw	1
  2381  001242  6E19               	movwf	send_data@send_end,c
  2382                           
  2383                           ;SlaveComm_PIC18.c: 516: SPI_send_data( '\0' );
  2384  001244  0E00               	movlw	0
  2385  001246  EC35  F00C         	call	_SPI_send_data
  2386                           
  2387                           ;SlaveComm_PIC18.c: 517: }
  2388  00124A  D030               	goto	l402
  2389  00124C                     l399:
  2390                           
  2391                           ;SlaveComm_PIC18.c: 518: else
  2392                           ;SlaveComm_PIC18.c: 519: {
  2393                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  2394  00124C  0E00               	movlw	0
  2395  00124E  6E19               	movwf	send_data@send_end,c
  2396                           
  2397                           ;SlaveComm_PIC18.c: 523: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  2398  001250  EE20 F029          	lfsr	2,41
  2399  001254  5015               	movf	send_data@send_buffer,w,c
  2400  001256  26D9               	addwf	fsr2l,f,c
  2401  001258  5016               	movf	send_data@send_buffer+1,w,c
  2402  00125A  22DA               	addwfc	fsr2h,f,c
  2403  00125C  50DF               	movf	indf2,w,c
  2404  00125E  6E17               	movwf	??_send_data& (0+255),c
  2405  001260  5017               	movf	??_send_data,w,c
  2406  001262  0D01               	mullw	1
  2407  001264  50F3               	movf	prodl,w,c
  2408  001266  2415               	addwf	send_data@send_buffer,w,c
  2409  001268  6ED9               	movwf	fsr2l,c
  2410  00126A  50F4               	movf	prodh,w,c
  2411  00126C  2016               	addwfc	send_data@send_buffer+1,w,c
  2412  00126E  6EDA               	movwf	fsr2h,c
  2413  001270  50DF               	movf	indf2,w,c
  2414  001272  EC35  F00C         	call	_SPI_send_data
  2415  001276  06E8               	decf	wreg,f,c
  2416  001278  A4D8               	btfss	status,2,c
  2417  00127A  D018               	goto	l402
  2418                           
  2419                           ;SlaveComm_PIC18.c: 524: {
  2420                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2421  00127C  EE20 F029          	lfsr	2,41
  2422  001280  5015               	movf	send_data@send_buffer,w,c
  2423  001282  26D9               	addwf	fsr2l,f,c
  2424  001284  5016               	movf	send_data@send_buffer+1,w,c
  2425  001286  22DA               	addwfc	fsr2h,f,c
  2426  001288  2ADF               	incf	indf2,f,c
  2427                           
  2428                           ;SlaveComm_PIC18.c: 527: if( send_buffer->read_position >= 40 )
  2429  00128A  EE20 F029          	lfsr	2,41
  2430  00128E  5015               	movf	send_data@send_buffer,w,c
  2431  001290  26D9               	addwf	fsr2l,f,c
  2432  001292  5016               	movf	send_data@send_buffer+1,w,c
  2433  001294  22DA               	addwfc	fsr2h,f,c
  2434  001296  0E27               	movlw	39
  2435  001298  64DF               	cpfsgt	indf2,c
  2436  00129A  D008               	goto	l402
  2437                           
  2438                           ;SlaveComm_PIC18.c: 528: {
  2439                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2440  00129C  EE20 F029          	lfsr	2,41
  2441  0012A0  5015               	movf	send_data@send_buffer,w,c
  2442  0012A2  26D9               	addwf	fsr2l,f,c
  2443  0012A4  5016               	movf	send_data@send_buffer+1,w,c
  2444  0012A6  22DA               	addwfc	fsr2h,f,c
  2445  0012A8  0E00               	movlw	0
  2446  0012AA  6EDF               	movwf	indf2,c
  2447  0012AC                     l402:
  2448                           
  2449                           ;SlaveComm_PIC18.c: 530: }
  2450                           ;SlaveComm_PIC18.c: 531: }
  2451                           ;SlaveComm_PIC18.c: 532: }
  2452                           ;SlaveComm_PIC18.c: 534: return send_end;
  2453  0012AC  5019               	movf	send_data@send_end,w,c
  2454  0012AE  0012               	return	
  2455  0012B0                     __end_of_send_data:
  2456                           	opt stack 0
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           prodh	equ	0xFF4
  2462                           prodl	equ	0xFF3
  2463                           intcon	equ	0xFF2
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           postinc1	equ	0xFE6
  2467                           postdec1	equ	0xFE5
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           indf2	equ	0xFDF
  2471                           postinc2	equ	0xFDE
  2472                           fsr2h	equ	0xFDA
  2473                           fsr2l	equ	0xFD9
  2474                           status	equ	0xFD8
  2475                           
  2476 ;; *************** function _SPI_send_data *****************
  2477 ;; Defined at:
  2478 ;;		line 616 in file "SlaveComm_PIC18.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  data            1    wreg     unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  data            1   18[COMRAM] unsigned char 
  2483 ;;  sendGood        1   19[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      unsigned char 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:         0       0       0       0       0       0       0
  2494 ;;      Locals:         2       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0
  2496 ;;      Totals:         2       0       0       0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_send_data
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text12
  2508  00186A                     __ptext12:
  2509                           	opt stack 0
  2510  00186A                     _SPI_send_data:
  2511                           	opt stack 27
  2512                           
  2513                           ;incstack = 0
  2514                           ;SPI_send_data@data stored from wreg
  2515  00186A  6E13               	movwf	SPI_send_data@data,c
  2516                           
  2517                           ;SlaveComm_PIC18.c: 618: bool sendGood = 0;
  2518  00186C  0E00               	movlw	0
  2519  00186E  6E14               	movwf	SPI_send_data@sendGood,c
  2520                           
  2521                           ;SlaveComm_PIC18.c: 620: if( SPI_transmit_wait == 0 )
  2522  001870  5041               	movf	_SPI_transmit_wait,w,c
  2523  001872  A4D8               	btfss	status,2,c
  2524  001874  D006               	goto	l434
  2525                           
  2526                           ;SlaveComm_PIC18.c: 621: {
  2527                           ;SlaveComm_PIC18.c: 622: SSP2BUF = data;
  2528  001876  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2529                           
  2530                           ;SlaveComm_PIC18.c: 623: SPI_transmit_wait = 1;
  2531  00187A  0E01               	movlw	1
  2532  00187C  6E41               	movwf	_SPI_transmit_wait,c
  2533                           
  2534                           ;SlaveComm_PIC18.c: 624: sendGood = 1;
  2535  00187E  0E01               	movlw	1
  2536  001880  D001               	goto	L4
  2537  001882                     l434:
  2538                           
  2539                           ;SlaveComm_PIC18.c: 626: else
  2540                           ;SlaveComm_PIC18.c: 627: {
  2541                           ;SlaveComm_PIC18.c: 628: sendGood = 0;
  2542  001882  0E00               	movlw	0
  2543  001884                     L4:
  2544  001884  6E14               	movwf	SPI_send_data@sendGood,c
  2545                           
  2546                           ;SlaveComm_PIC18.c: 629: }
  2547                           ;SlaveComm_PIC18.c: 631: return sendGood;
  2548  001886  5014               	movf	SPI_send_data@sendGood,w,c
  2549  001888  0012               	return	
  2550  00188A                     __end_of_SPI_send_data:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postinc1	equ	0xFE6
  2562                           postdec1	equ	0xFE5
  2563                           fsr1h	equ	0xFE2
  2564                           fsr1l	equ	0xFE1
  2565                           indf2	equ	0xFDF
  2566                           postinc2	equ	0xFDE
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _resetCommunications *****************
  2572 ;; Defined at:
  2573 ;;		line 158 in file "SlaveComm_PIC18.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  send_buffer     2   12[BANK0 ] PTR struct buffer
  2576 ;;		 -> communications@send_buffer(42), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2588 ;;      Params:         0       2       0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0
  2590 ;;      Temps:          0       2       0       0       0       0       0
  2591 ;;      Totals:         0       4       0       0       0       0       0
  2592 ;;Total ram usage:        4 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    5
  2595 ;; This function calls:
  2596 ;;		_com_command_setEnergyUsed
  2597 ;;		_com_command_setPower
  2598 ;;		_com_command_setVersion
  2599 ;; This function is called by:
  2600 ;;		_communications
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text13
  2605  0010E4                     __ptext13:
  2606                           	opt stack 0
  2607  0010E4                     _resetCommunications:
  2608                           	opt stack 24
  2609                           
  2610                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2611                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2612                           
  2613                           ;incstack = 0
  2614  0010E4  9A6C               	bcf	3948,5,c	;volatile
  2615                           
  2616                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2617  0010E6  0E06               	movlw	6
  2618  0010E8  0100               	movlb	0	; () banked
  2619  0010EA  6F6E               	movwf	??_resetCommunications& (0+255),b
  2620  0010EC  0E30               	movlw	48
  2621  0010EE                     u3217:
  2622  0010EE  2EE8               	decfsz	wreg,f,c
  2623  0010F0  D7FE               	bra	u3217
  2624  0010F2  2F6E               	decfsz	??_resetCommunications& (0+255),f,b
  2625  0010F4  D7FC               	bra	u3217
  2626  0010F6  F000               	nop	
  2627                           
  2628                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2629  0010F8  8A6C               	bsf	3948,5,c	;volatile
  2630                           
  2631                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2632  0010FA  9E6C               	bcf	3948,7,c	;volatile
  2633                           
  2634                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2635  0010FC  0E00               	movlw	0
  2636  0010FE  6E41               	movwf	_SPI_transmit_wait,c
  2637                           
  2638                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2639  001100  0100               	movlb	0	; () banked
  2640  001102  EE20 F029          	lfsr	2,41
  2641  001106  516C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2642  001108  26D9               	addwf	fsr2l,f,c
  2643  00110A  516D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2644  00110C  22DA               	addwfc	fsr2h,f,c
  2645  00110E  0E00               	movlw	0
  2646  001110  6EDF               	movwf	indf2,c
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2650  001112  EE20 F028          	lfsr	2,40
  2651  001116  516C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2652  001118  26D9               	addwf	fsr2l,f,c
  2653  00111A  516D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2654  00111C  22DA               	addwfc	fsr2h,f,c
  2655  00111E  0E00               	movlw	0
  2656  001120  6EDF               	movwf	indf2,c
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;SlaveComm_PIC18.c: 177: commState++;
  2660  001122  4BBB               	infsnz	resetCommunications@commState& (0+255),f,b
  2661  001124  2BBC               	incf	(resetCommunications@commState+1)& (0+255),f,b
  2662                           
  2663                           ;SlaveComm_PIC18.c: 178: switch( commState )
  2664  001126  D01A               	goto	l312
  2665  001128                     
  2666                           ; BSR set to: 0
  2667                           ;SlaveComm_PIC18.c: 181: com_command_setVersion( send_buffer );
  2668                           
  2669                           ; BSR set to: 0
  2670  001128  C06C  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2671  00112C  C06D  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2672  001130  ECED  F00B         	call	_com_command_setVersion	;wreg free
  2673                           
  2674                           ;SlaveComm_PIC18.c: 182: break;
  2675  001134  0012               	return	
  2676  001136                     
  2677                           ;SlaveComm_PIC18.c: 184: com_command_setPower( send_buffer );
  2678  001136  C06C  F037         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2679  00113A  C06D  F038         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2680  00113E  EC1E  F00B         	call	_com_command_setPower	;wreg free
  2681                           
  2682                           ;SlaveComm_PIC18.c: 197: break;
  2683  001142  0012               	return	
  2684  001144                     
  2685                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed( send_buffer );
  2686  001144  C06C  F037         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2687  001148  C06D  F038         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2688  00114C  EC43  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2689  001150                     
  2690                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2691  001150  0E00               	movlw	0
  2692  001152  0100               	movlb	0	; () banked
  2693  001154  6FBC               	movwf	(resetCommunications@commState+1)& (0+255),b
  2694  001156  0E00               	movlw	0
  2695  001158  6FBB               	movwf	resetCommunications@commState& (0+255),b
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;SlaveComm_PIC18.c: 213: }
  2699                           
  2700                           ;SlaveComm_PIC18.c: 212: break;
  2701  00115A  0012               	return	
  2702  00115C                     l312:
  2703                           
  2704                           ; BSR set to: 0
  2705                           
  2706                           ; BSR set to: 0
  2707  00115C  C0BB  F06E         	movff	resetCommunications@commState,??_resetCommunications
  2708  001160  C0BC  F06F         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2709                           
  2710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2711                           ; Switch size 1, requested type "space"
  2712                           ; Number of cases is 1, Range of values is 0 to 0
  2713                           ; switch strategies available:
  2714                           ; Name         Instructions Cycles
  2715                           ; simple_byte            4     3 (average)
  2716                           ;	Chosen strategy is simple_byte
  2717  001164  516F               	movf	(??_resetCommunications+1)& (0+255),w,b
  2718  001166  0A00               	xorlw	0	; case 0
  2719  001168  A4D8               	btfss	status,2,c
  2720  00116A  D7F2               	goto	l317
  2721                           
  2722                           ; BSR set to: 0
  2723                           ; Switch size 1, requested type "space"
  2724                           ; Number of cases is 3, Range of values is 1 to 3
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte           10     6 (average)
  2728                           ;	Chosen strategy is simple_byte
  2729  00116C  516E               	movf	??_resetCommunications& (0+255),w,b
  2730  00116E  0A01               	xorlw	1	; case 1
  2731  001170  B4D8               	btfsc	status,2,c
  2732  001172  D7DA               	goto	l313
  2733  001174  0A03               	xorlw	3	; case 2
  2734  001176  B4D8               	btfsc	status,2,c
  2735  001178  D7DE               	goto	l315
  2736  00117A  0A01               	xorlw	1	; case 3
  2737  00117C  B4D8               	btfsc	status,2,c
  2738  00117E  D7E2               	goto	l316
  2739  001180  D7E7               	goto	l317
  2740  001182                     __end_of_resetCommunications:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           intcon	equ	0xFF2
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           postinc1	equ	0xFE6
  2752                           postdec1	equ	0xFE5
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           indf2	equ	0xFDF
  2756                           postinc2	equ	0xFDE
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _com_command_setVersion *****************
  2762 ;; Defined at:
  2763 ;;		line 709 in file "SlaveComm_PIC18.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2766 ;;		 -> communications@send_buffer(42), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         2       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0
  2781 ;;      Totals:         2       0       0       0       0       0       0
  2782 ;;Total ram usage:        2 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    4
  2785 ;; This function calls:
  2786 ;;		_command_builder3
  2787 ;; This function is called by:
  2788 ;;		_resetCommunications
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text14
  2793  0017DA                     __ptext14:
  2794                           	opt stack 0
  2795  0017DA                     _com_command_setVersion:
  2796                           	opt stack 24
  2797                           
  2798                           ;SlaveComm_PIC18.c: 711: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2799                           
  2800                           ;incstack = 0
  2801  0017DA  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2802  0017DE  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2803  0017E2  0E54               	movlw	low STR_2
  2804  0017E4  6E21               	movwf	command_builder3@data1,c
  2805  0017E6  0E06               	movlw	high STR_2
  2806  0017E8  6E22               	movwf	command_builder3@data1+1,c
  2807  0017EA  0E0D               	movlw	low STR_12
  2808  0017EC  6E23               	movwf	command_builder3@data2,c
  2809  0017EE  0E06               	movlw	high STR_12
  2810  0017F0  6E24               	movwf	command_builder3@data2+1,c
  2811  0017F2  0E4C               	movlw	low STR_30
  2812  0017F4  6E25               	movwf	command_builder3@data3,c
  2813  0017F6  0E06               	movlw	high STR_30
  2814  0017F8  6E26               	movwf	command_builder3@data3+1,c
  2815  0017FA  ECC1  F008         	call	_command_builder3	;wreg free
  2816  0017FE  0012               	return		;funcret
  2817  001800                     __end_of_com_command_setVersion:
  2818                           	opt stack 0
  2819                           tblptru	equ	0xFF8
  2820                           tblptrh	equ	0xFF7
  2821                           tblptrl	equ	0xFF6
  2822                           tablat	equ	0xFF5
  2823                           prodh	equ	0xFF4
  2824                           prodl	equ	0xFF3
  2825                           intcon	equ	0xFF2
  2826                           postinc0	equ	0xFEE
  2827                           wreg	equ	0xFE8
  2828                           postinc1	equ	0xFE6
  2829                           postdec1	equ	0xFE5
  2830                           fsr1h	equ	0xFE2
  2831                           fsr1l	equ	0xFE1
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _com_command_setPower *****************
  2839 ;; Defined at:
  2840 ;;		line 651 in file "SlaveComm_PIC18.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  2843 ;;		 -> communications@send_buffer(42), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2855 ;;      Params:         2       0       0       0       0       0       0
  2856 ;;      Locals:         0      12       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0
  2858 ;;      Totals:         2      12       0       0       0       0       0
  2859 ;;Total ram usage:       14 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    4
  2862 ;; This function calls:
  2863 ;;		_command_builder3
  2864 ;;		_ltoa
  2865 ;; This function is called by:
  2866 ;;		_resetCommunications
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text15
  2871  00163C                     __ptext15:
  2872                           	opt stack 0
  2873  00163C                     _com_command_setPower:
  2874                           	opt stack 24
  2875                           
  2876                           ;SlaveComm_PIC18.c: 654: char temp[12];
  2877                           ;SlaveComm_PIC18.c: 667: ltoa( temp, meterWatts, 10 );
  2878                           
  2879                           ;incstack = 0
  2880  00163C  0E60               	movlw	low com_command_setPower@temp
  2881  00163E  6E2D               	movwf	ltoa@buf,c
  2882  001640  0E00               	movlw	high com_command_setPower@temp
  2883  001642  6E2E               	movwf	ltoa@buf+1,c
  2884  001644  C0B5  F02F         	movff	_meterWatts,ltoa@val
  2885  001648  C0B6  F030         	movff	_meterWatts+1,ltoa@val+1
  2886  00164C  C0B7  F031         	movff	_meterWatts+2,ltoa@val+2
  2887  001650  C0B8  F032         	movff	_meterWatts+3,ltoa@val+3
  2888  001654  0E00               	movlw	0
  2889  001656  6E34               	movwf	ltoa@base+1,c
  2890  001658  0E0A               	movlw	10
  2891  00165A  6E33               	movwf	ltoa@base,c
  2892  00165C  ECF5  F00A         	call	_ltoa	;wreg free
  2893                           
  2894                           ;SlaveComm_PIC18.c: 669: command_builder3( send_buffer, "Set", "Watts", temp );
  2895  001660  C037  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2896  001664  C038  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2897  001668  0E54               	movlw	low STR_2
  2898  00166A  6E21               	movwf	command_builder3@data1,c
  2899  00166C  0E06               	movlw	high STR_2
  2900  00166E  6E22               	movwf	command_builder3@data1+1,c
  2901  001670  0E2A               	movlw	low STR_8
  2902  001672  6E23               	movwf	command_builder3@data2,c
  2903  001674  0E06               	movlw	high STR_8
  2904  001676  6E24               	movwf	command_builder3@data2+1,c
  2905  001678  0E60               	movlw	low com_command_setPower@temp
  2906  00167A  6E25               	movwf	command_builder3@data3,c
  2907  00167C  0E00               	movlw	high com_command_setPower@temp
  2908  00167E  6E26               	movwf	command_builder3@data3+1,c
  2909  001680  ECC1  F008         	call	_command_builder3	;wreg free
  2910  001684  0012               	return	
  2911  001686                     __end_of_com_command_setPower:
  2912                           	opt stack 0
  2913                           tblptru	equ	0xFF8
  2914                           tblptrh	equ	0xFF7
  2915                           tblptrl	equ	0xFF6
  2916                           tablat	equ	0xFF5
  2917                           prodh	equ	0xFF4
  2918                           prodl	equ	0xFF3
  2919                           intcon	equ	0xFF2
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postinc1	equ	0xFE6
  2923                           postdec1	equ	0xFE5
  2924                           fsr1h	equ	0xFE2
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           postinc2	equ	0xFDE
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _receive_data *****************
  2933 ;; Defined at:
  2934 ;;		line 217 in file "SlaveComm_PIC18.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2937 ;;		 -> communications@receive_buffer(42), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  data            1   24[COMRAM] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      enum E6751
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2949 ;;      Params:         2       0       0       0       0       0       0
  2950 ;;      Locals:         1       0       0       0       0       0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0
  2952 ;;      Totals:         4       0       0       0       0       0       0
  2953 ;;Total ram usage:        4 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    2
  2956 ;; This function calls:
  2957 ;;		_SPI_receive_data
  2958 ;; This function is called by:
  2959 ;;		_communications
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text16
  2964  000ECC                     __ptext16:
  2965                           	opt stack 0
  2966  000ECC                     _receive_data:
  2967                           	opt stack 27
  2968                           
  2969                           ;SlaveComm_PIC18.c: 219: char data;
  2970                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2971                           ;SlaveComm_PIC18.c: 223: if( my_status == receive_end_command )
  2972                           
  2973                           ;incstack = 0
  2974  000ECC  0E02               	movlw	2
  2975  000ECE  183E               	xorwf	receive_data@my_status,w,c
  2976  000ED0  A4D8               	btfss	status,2,c
  2977  000ED2  D002               	goto	l323
  2978                           
  2979                           ;SlaveComm_PIC18.c: 224: {
  2980                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2981  000ED4  0E00               	movlw	0
  2982  000ED6  6E3E               	movwf	receive_data@my_status,c
  2983  000ED8                     l323:
  2984                           
  2985                           ;SlaveComm_PIC18.c: 226: }
  2986                           ;SlaveComm_PIC18.c: 228: if( SPI_receive_data( &data ) == 1 )
  2987  000ED8  0E19               	movlw	low receive_data@data
  2988  000EDA  6E13               	movwf	SPI_receive_data@data,c
  2989  000EDC  0E00               	movlw	high receive_data@data
  2990  000EDE  6E14               	movwf	SPI_receive_data@data+1,c
  2991  000EE0  ECD9  F00B         	call	_SPI_receive_data	;wreg free
  2992  000EE4  06E8               	decf	wreg,f,c
  2993  000EE6  A4D8               	btfss	status,2,c
  2994  000EE8  D04F               	goto	l329
  2995                           
  2996                           ;SlaveComm_PIC18.c: 234: }
  2997                           ;SlaveComm_PIC18.c: 236: if( (data == '!') && (my_status != receive_in_command) )
  2998                           
  2999                           ;SlaveComm_PIC18.c: 232: {
  3000  000EEA  0E21               	movlw	33
  3001  000EEC  1819               	xorwf	receive_data@data,w,c
  3002  000EEE  A4D8               	btfss	status,2,c
  3003  000EF0  D015               	goto	l326
  3004  000EF2  043E               	decf	receive_data@my_status,w,c
  3005  000EF4  B4D8               	btfsc	status,2,c
  3006  000EF6  D012               	goto	l326
  3007                           
  3008                           ;SlaveComm_PIC18.c: 237: {
  3009                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  3010  000EF8  0E01               	movlw	1
  3011  000EFA  6E3E               	movwf	receive_data@my_status,c
  3012                           
  3013                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  3014  000EFC  EE20 F029          	lfsr	2,41
  3015  000F00  5016               	movf	receive_data@receive_buffer,w,c
  3016  000F02  26D9               	addwf	fsr2l,f,c
  3017  000F04  5017               	movf	receive_data@receive_buffer+1,w,c
  3018  000F06  22DA               	addwfc	fsr2h,f,c
  3019  000F08  0E00               	movlw	0
  3020  000F0A  6EDF               	movwf	indf2,c
  3021                           
  3022                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  3023  000F0C  EE20 F028          	lfsr	2,40
  3024  000F10  5016               	movf	receive_data@receive_buffer,w,c
  3025  000F12  26D9               	addwf	fsr2l,f,c
  3026  000F14  5017               	movf	receive_data@receive_buffer+1,w,c
  3027  000F16  22DA               	addwfc	fsr2h,f,c
  3028  000F18  0E00               	movlw	0
  3029  000F1A  6EDF               	movwf	indf2,c
  3030  000F1C                     l326:
  3031                           
  3032                           ;SlaveComm_PIC18.c: 241: }
  3033                           ;SlaveComm_PIC18.c: 243: if( my_status == receive_in_command )
  3034  000F1C  043E               	decf	receive_data@my_status,w,c
  3035  000F1E  A4D8               	btfss	status,2,c
  3036  000F20  D02A               	goto	l328
  3037                           
  3038                           ;SlaveComm_PIC18.c: 244: {
  3039                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3040  000F22  EE20 F028          	lfsr	2,40
  3041  000F26  5016               	movf	receive_data@receive_buffer,w,c
  3042  000F28  26D9               	addwf	fsr2l,f,c
  3043  000F2A  5017               	movf	receive_data@receive_buffer+1,w,c
  3044  000F2C  22DA               	addwfc	fsr2h,f,c
  3045  000F2E  50DF               	movf	indf2,w,c
  3046  000F30  6E18               	movwf	??_receive_data& (0+255),c
  3047  000F32  5018               	movf	??_receive_data,w,c
  3048  000F34  0D01               	mullw	1
  3049  000F36  50F3               	movf	prodl,w,c
  3050  000F38  2416               	addwf	receive_data@receive_buffer,w,c
  3051  000F3A  6ED9               	movwf	fsr2l,c
  3052  000F3C  50F4               	movf	prodh,w,c
  3053  000F3E  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3054  000F40  6EDA               	movwf	fsr2h,c
  3055  000F42  C019  FFDF         	movff	receive_data@data,indf2
  3056                           
  3057                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  3058  000F46  EE20 F028          	lfsr	2,40
  3059  000F4A  5016               	movf	receive_data@receive_buffer,w,c
  3060  000F4C  26D9               	addwf	fsr2l,f,c
  3061  000F4E  5017               	movf	receive_data@receive_buffer+1,w,c
  3062  000F50  22DA               	addwfc	fsr2h,f,c
  3063  000F52  2ADF               	incf	indf2,f,c
  3064                           
  3065                           ;SlaveComm_PIC18.c: 248: if( receive_buffer->write_position >= 40 )
  3066  000F54  EE20 F028          	lfsr	2,40
  3067  000F58  5016               	movf	receive_data@receive_buffer,w,c
  3068  000F5A  26D9               	addwf	fsr2l,f,c
  3069  000F5C  5017               	movf	receive_data@receive_buffer+1,w,c
  3070  000F5E  22DA               	addwfc	fsr2h,f,c
  3071  000F60  0E27               	movlw	39
  3072  000F62  64DF               	cpfsgt	indf2,c
  3073  000F64  D008               	goto	l328
  3074                           
  3075                           ;SlaveComm_PIC18.c: 249: {
  3076                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  3077  000F66  EE20 F028          	lfsr	2,40
  3078  000F6A  5016               	movf	receive_data@receive_buffer,w,c
  3079  000F6C  26D9               	addwf	fsr2l,f,c
  3080  000F6E  5017               	movf	receive_data@receive_buffer+1,w,c
  3081  000F70  22DA               	addwfc	fsr2h,f,c
  3082  000F72  0E27               	movlw	39
  3083  000F74  6EDF               	movwf	indf2,c
  3084  000F76                     l328:
  3085                           
  3086                           ;SlaveComm_PIC18.c: 251: }
  3087                           ;SlaveComm_PIC18.c: 252: }
  3088                           ;SlaveComm_PIC18.c: 254: if( (my_status == receive_in_command) && (data == '*') )
  3089  000F76  043E               	decf	receive_data@my_status,w,c
  3090  000F78  A4D8               	btfss	status,2,c
  3091  000F7A  D006               	goto	l329
  3092  000F7C  0E2A               	movlw	42
  3093  000F7E  1819               	xorwf	receive_data@data,w,c
  3094  000F80  A4D8               	btfss	status,2,c
  3095  000F82  D002               	goto	l329
  3096                           
  3097                           ;SlaveComm_PIC18.c: 255: {
  3098                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  3099  000F84  0E02               	movlw	2
  3100  000F86  6E3E               	movwf	receive_data@my_status,c
  3101  000F88                     l329:
  3102                           
  3103                           ;SlaveComm_PIC18.c: 257: }
  3104                           ;SlaveComm_PIC18.c: 258: }
  3105                           ;SlaveComm_PIC18.c: 260: return my_status;
  3106  000F88  503E               	movf	receive_data@my_status,w,c
  3107  000F8A  0012               	return	
  3108  000F8C                     __end_of_receive_data:
  3109                           	opt stack 0
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postinc1	equ	0xFE6
  3120                           postdec1	equ	0xFE5
  3121                           fsr1h	equ	0xFE2
  3122                           fsr1l	equ	0xFE1
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _SPI_receive_data *****************
  3130 ;; Defined at:
  3131 ;;		line 595 in file "SlaveComm_PIC18.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  data            2   18[COMRAM] PTR unsigned char 
  3134 ;;		 -> receive_data@data(1), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  recvGood        1   20[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr2l, fsr2h, status,2
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         2       0       0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0
  3149 ;;      Totals:         3       0       0       0       0       0       0
  3150 ;;Total ram usage:        3 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_receive_data
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text17
  3161  0017B2                     __ptext17:
  3162                           	opt stack 0
  3163  0017B2                     _SPI_receive_data:
  3164                           	opt stack 27
  3165                           
  3166                           ;SlaveComm_PIC18.c: 598: bool recvGood = 0;
  3167                           
  3168                           ;incstack = 0
  3169  0017B2  0E00               	movlw	0
  3170  0017B4  6E15               	movwf	SPI_receive_data@recvGood,c
  3171                           
  3172                           ;SlaveComm_PIC18.c: 600: if( SSP2STATbits.BF == 1 )
  3173  0017B6  A06D               	btfss	3949,0,c	;volatile
  3174  0017B8  D00C               	goto	l429
  3175                           
  3176                           ;SlaveComm_PIC18.c: 601: {
  3177                           ;SlaveComm_PIC18.c: 602: *data = SSP2BUF;
  3178  0017BA  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3179  0017BE  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3180  0017C2  CF6F FFDF          	movff	3951,indf2	;volatile
  3181                           
  3182                           ;SlaveComm_PIC18.c: 603: recvGood = 1;
  3183  0017C6  0E01               	movlw	1
  3184  0017C8  6E15               	movwf	SPI_receive_data@recvGood,c
  3185                           
  3186                           ;SlaveComm_PIC18.c: 604: SSP2CON1bits.WCOL = 0;
  3187  0017CA  9E6C               	bcf	3948,7,c	;volatile
  3188                           
  3189                           ;SlaveComm_PIC18.c: 605: SPI_transmit_wait = 0;
  3190  0017CC  0E00               	movlw	0
  3191  0017CE  6E41               	movwf	_SPI_transmit_wait,c
  3192                           
  3193                           ;SlaveComm_PIC18.c: 606: }
  3194  0017D0  D002               	goto	l430
  3195  0017D2                     l429:
  3196                           
  3197                           ;SlaveComm_PIC18.c: 607: else
  3198                           ;SlaveComm_PIC18.c: 608: {
  3199                           ;SlaveComm_PIC18.c: 609: recvGood = 0;
  3200  0017D2  0E00               	movlw	0
  3201  0017D4  6E15               	movwf	SPI_receive_data@recvGood,c
  3202  0017D6                     l430:
  3203                           
  3204                           ;SlaveComm_PIC18.c: 610: }
  3205                           ;SlaveComm_PIC18.c: 612: return recvGood;
  3206  0017D6  5015               	movf	SPI_receive_data@recvGood,w,c
  3207  0017D8  0012               	return	
  3208  0017DA                     __end_of_SPI_receive_data:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           postinc1	equ	0xFE6
  3220                           postdec1	equ	0xFE5
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           postinc2	equ	0xFDE
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _process_data *****************
  3230 ;; Defined at:
  3231 ;;		line 263 in file "SlaveComm_PIC18.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  receive_buff    2   16[BANK0 ] PTR struct buffer
  3234 ;;		 -> communications@receive_buffer(42), 
  3235 ;;  send_buffer     2   18[BANK0 ] PTR struct buffer
  3236 ;;		 -> communications@send_buffer(42), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  parameters     50   20[BANK0 ] unsigned char [10][5]
  3239 ;;  end_of_trans    1   70[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3249 ;;      Params:         0       4       0       0       0       0       0
  3250 ;;      Locals:         0      51       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0
  3252 ;;      Totals:         0      55       0       0       0       0       0
  3253 ;;Total ram usage:       55 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    6
  3256 ;; This function calls:
  3257 ;;		_process_data_parameterize
  3258 ;;		_process_data_parameters
  3259 ;; This function is called by:
  3260 ;;		_communications
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text18
  3265  001780                     __ptext18:
  3266                           	opt stack 0
  3267  001780                     _process_data:
  3268                           	opt stack 23
  3269                           
  3270                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  3271                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  3272                           ;SlaveComm_PIC18.c: 272: process_data_parameterize( parameters, receive_buffer );
  3273                           
  3274                           ;incstack = 0
  3275  001780  0E74               	movlw	low process_data@parameters
  3276  001782  6E19               	movwf	process_data_parameterize@parameters,c
  3277  001784  0E00               	movlw	high process_data@parameters
  3278  001786  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3279  001788  C070  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3280  00178C  C071  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3281  001790  EC29  F004         	call	_process_data_parameterize	;wreg free
  3282                           
  3283                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3284  001794  0E74               	movlw	low process_data@parameters
  3285  001796  0100               	movlb	0	; () banked
  3286  001798  6F6C               	movwf	process_data_parameters@parameters& (0+255),b
  3287  00179A  0E00               	movlw	high process_data@parameters
  3288  00179C  6F6D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3289  00179E  C072  F06E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3290  0017A2  C073  F06F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3291  0017A6  EC2D  F003         	call	_process_data_parameters	;wreg free
  3292  0017AA  0100               	movlb	0	; () banked
  3293  0017AC  6FA6               	movwf	process_data@end_of_transmission_received& (0+255),b
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  3297  0017AE  51A6               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3298  0017B0  0012               	return	
  3299  0017B2                     __end_of_process_data:
  3300                           	opt stack 0
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           prodh	equ	0xFF4
  3306                           prodl	equ	0xFF3
  3307                           intcon	equ	0xFF2
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postinc1	equ	0xFE6
  3311                           postdec1	equ	0xFE5
  3312                           fsr1h	equ	0xFE2
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _process_data_parameters *****************
  3321 ;; Defined at:
  3322 ;;		line 339 in file "SlaveComm_PIC18.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  parameters      2   12[BANK0 ] PTR unsigned char [10]
  3325 ;;		 -> process_data@parameters(50), 
  3326 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  3327 ;;		 -> communications@send_buffer(42), 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  end_of_trans    1   56[COMRAM] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      unsigned char 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         0       4       0       0       0       0       0
  3340 ;;      Locals:         1       0       0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0
  3342 ;;      Totals:         1       4       0       0       0       0       0
  3343 ;;Total ram usage:        5 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    5
  3346 ;; This function calls:
  3347 ;;		_atol
  3348 ;;		_com_command_setEnergyUsed
  3349 ;;		_send_end_of_transmission
  3350 ;;		_strmatch
  3351 ;; This function is called by:
  3352 ;;		_process_data
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text19
  3357  00065A                     __ptext19:
  3358                           	opt stack 0
  3359  00065A                     _process_data_parameters:
  3360                           	opt stack 23
  3361                           
  3362                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;incstack = 0
  3366  00065A  0E00               	movlw	0
  3367  00065C  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3368                           
  3369                           ;SlaveComm_PIC18.c: 344: if( strmatch( parameters[0], "END" ) == 1 )
  3370  00065E  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3371  000662  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3372  000666  0E50               	movlw	low STR_1
  3373  000668  6E20               	movwf	strmatch@b,c
  3374  00066A  0E06               	movlw	high STR_1
  3375  00066C  6E21               	movwf	strmatch@b+1,c
  3376  00066E  EC8C  F00B         	call	_strmatch	;wreg free
  3377  000672  06E8               	decf	wreg,f,c
  3378  000674  A4D8               	btfss	status,2,c
  3379  000676  D003               	goto	l353
  3380                           
  3381                           ;SlaveComm_PIC18.c: 345: {
  3382                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  3383  000678  0E01               	movlw	1
  3384  00067A  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3385                           
  3386                           ;SlaveComm_PIC18.c: 356: }
  3387  00067C  D0E8               	goto	l373
  3388  00067E                     l353:
  3389                           
  3390                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[0], "Set" ) == 1 )
  3391  00067E  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3392  000682  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3393  000686  0E54               	movlw	low STR_2
  3394  000688  6E20               	movwf	strmatch@b,c
  3395  00068A  0E06               	movlw	high STR_2
  3396  00068C  6E21               	movwf	strmatch@b+1,c
  3397  00068E  EC8C  F00B         	call	_strmatch	;wreg free
  3398  000692  06E8               	decf	wreg,f,c
  3399  000694  A4D8               	btfss	status,2,c
  3400  000696  D038               	goto	l355
  3401                           
  3402                           ;SlaveComm_PIC18.c: 358: {
  3403                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "Calib" ) == 1 )
  3404  000698  0E0A               	movlw	10
  3405  00069A  0100               	movlb	0	; () banked
  3406  00069C  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3407  00069E  6E1E               	movwf	strmatch@a,c
  3408  0006A0  0E00               	movlw	0
  3409  0006A2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3410  0006A4  6E1F               	movwf	strmatch@a+1,c
  3411  0006A6  0E1E               	movlw	low STR_3
  3412  0006A8  6E20               	movwf	strmatch@b,c
  3413  0006AA  0E06               	movlw	high STR_3
  3414  0006AC  6E21               	movwf	strmatch@b+1,c
  3415  0006AE  EC8C  F00B         	call	_strmatch	;wreg free
  3416  0006B2  06E8               	decf	wreg,f,c
  3417  0006B4  B4D8               	btfsc	status,2,c
  3418  0006B6  D0CB               	goto	l373
  3419                           
  3420                           ;SlaveComm_PIC18.c: 363: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3421                           
  3422                           ;SlaveComm_PIC18.c: 360: {
  3423                           ;SlaveComm_PIC18.c: 362: }
  3424  0006B8  0E0A               	movlw	10
  3425  0006BA  0100               	movlb	0	; () banked
  3426  0006BC  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3427  0006BE  6E1E               	movwf	strmatch@a,c
  3428  0006C0  0E00               	movlw	0
  3429  0006C2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3430  0006C4  6E1F               	movwf	strmatch@a+1,c
  3431  0006C6  0E17               	movlw	low STR_4
  3432  0006C8  6E20               	movwf	strmatch@b,c
  3433  0006CA  0E06               	movlw	high STR_4
  3434  0006CC  6E21               	movwf	strmatch@b+1,c
  3435  0006CE  EC8C  F00B         	call	_strmatch	;wreg free
  3436  0006D2  06E8               	decf	wreg,f,c
  3437  0006D4  A4D8               	btfss	status,2,c
  3438  0006D6  D0BB               	goto	l373
  3439                           
  3440                           ;SlaveComm_PIC18.c: 364: {
  3441                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol( parameters[2] );
  3442  0006D8  0E14               	movlw	20
  3443  0006DA  0100               	movlb	0	; () banked
  3444  0006DC  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3445  0006DE  6E1F               	movwf	atol@s,c
  3446  0006E0  0E00               	movlw	0
  3447  0006E2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3448  0006E4  6E20               	movwf	atol@s+1,c
  3449  0006E6  EC86  F006         	call	_atol	;wreg free
  3450  0006EA  C01F  F0B1         	movff	?_atol,_meterEnergyUsed
  3451  0006EE  C020  F0B2         	movff	?_atol+1,_meterEnergyUsed+1
  3452  0006F2  C021  F0B3         	movff	?_atol+2,_meterEnergyUsed+2
  3453  0006F6  C022  F0B4         	movff	?_atol+3,_meterEnergyUsed+3
  3454                           
  3455                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed( send_buffer );
  3456  0006FA  C06E  F037         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3457  0006FE  C06F  F038         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3458  000702  EC43  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3459                           
  3460                           ;SlaveComm_PIC18.c: 371: }
  3461                           ;SlaveComm_PIC18.c: 376: }
  3462  000706  D0A3               	goto	l373
  3463  000708                     l355:
  3464                           
  3465                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[0], "Read" ) == 1 )
  3466  000708  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3467  00070C  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3468  000710  0E35               	movlw	low STR_5
  3469  000712  6E20               	movwf	strmatch@b,c
  3470  000714  0E06               	movlw	high STR_5
  3471  000716  6E21               	movwf	strmatch@b+1,c
  3472  000718  EC8C  F00B         	call	_strmatch	;wreg free
  3473  00071C  06E8               	decf	wreg,f,c
  3474  00071E  B4D8               	btfsc	status,2,c
  3475  000720  D096               	goto	l373
  3476                           
  3477                           ;SlaveComm_PIC18.c: 395: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3478                           
  3479                           ;SlaveComm_PIC18.c: 378: {
  3480                           ;SlaveComm_PIC18.c: 380: }
  3481  000722  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3482  000726  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3483  00072A  0E3A               	movlw	low STR_6
  3484  00072C  6E20               	movwf	strmatch@b,c
  3485  00072E  0E06               	movlw	high STR_6
  3486  000730  6E21               	movwf	strmatch@b+1,c
  3487  000732  EC8C  F00B         	call	_strmatch	;wreg free
  3488  000736  06E8               	decf	wreg,f,c
  3489  000738  A4D8               	btfss	status,2,c
  3490  00073A  D089               	goto	l373
  3491                           
  3492                           ;SlaveComm_PIC18.c: 396: {
  3493                           ;SlaveComm_PIC18.c: 397: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3494  00073C  0E0A               	movlw	10
  3495  00073E  0100               	movlb	0	; () banked
  3496  000740  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3497  000742  6E1E               	movwf	strmatch@a,c
  3498  000744  0E00               	movlw	0
  3499  000746  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3500  000748  6E1F               	movwf	strmatch@a+1,c
  3501  00074A  0E30               	movlw	low STR_7
  3502  00074C  6E20               	movwf	strmatch@b,c
  3503  00074E  0E06               	movlw	high STR_7
  3504  000750  6E21               	movwf	strmatch@b+1,c
  3505  000752  EC8C  F00B         	call	_strmatch	;wreg free
  3506  000756  06E8               	decf	wreg,f,c
  3507  000758  A4D8               	btfss	status,2,c
  3508  00075A  D007               	goto	l363
  3509                           
  3510                           ;SlaveComm_PIC18.c: 398: {
  3511                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission( send_buffer );
  3512  00075C  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3513  000760  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3514  000764  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3515                           
  3516                           ;SlaveComm_PIC18.c: 400: }
  3517  000768  D072               	goto	l373
  3518  00076A                     l363:
  3519                           
  3520                           ;SlaveComm_PIC18.c: 401: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3521  00076A  0E0A               	movlw	10
  3522  00076C  0100               	movlb	0	; () banked
  3523  00076E  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3524  000770  6E1E               	movwf	strmatch@a,c
  3525  000772  0E00               	movlw	0
  3526  000774  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3527  000776  6E1F               	movwf	strmatch@a+1,c
  3528  000778  0E2A               	movlw	low STR_8
  3529  00077A  6E20               	movwf	strmatch@b,c
  3530  00077C  0E06               	movlw	high STR_8
  3531  00077E  6E21               	movwf	strmatch@b+1,c
  3532  000780  EC8C  F00B         	call	_strmatch	;wreg free
  3533  000784  06E8               	decf	wreg,f,c
  3534  000786  A4D8               	btfss	status,2,c
  3535  000788  D007               	goto	l365
  3536                           
  3537                           ;SlaveComm_PIC18.c: 402: {
  3538                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission( send_buffer );
  3539  00078A  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3540  00078E  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3541  000792  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3542                           
  3543                           ;SlaveComm_PIC18.c: 404: }
  3544  000796  D05B               	goto	l373
  3545  000798                     l365:
  3546                           
  3547                           ;SlaveComm_PIC18.c: 405: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3548  000798  0E0A               	movlw	10
  3549  00079A  0100               	movlb	0	; () banked
  3550  00079C  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3551  00079E  6E1E               	movwf	strmatch@a,c
  3552  0007A0  0E00               	movlw	0
  3553  0007A2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3554  0007A4  6E1F               	movwf	strmatch@a+1,c
  3555  0007A6  0E17               	movlw	low STR_4
  3556  0007A8  6E20               	movwf	strmatch@b,c
  3557  0007AA  0E06               	movlw	high STR_4
  3558  0007AC  6E21               	movwf	strmatch@b+1,c
  3559  0007AE  EC8C  F00B         	call	_strmatch	;wreg free
  3560  0007B2  06E8               	decf	wreg,f,c
  3561  0007B4  A4D8               	btfss	status,2,c
  3562  0007B6  D007               	goto	l367
  3563                           
  3564                           ;SlaveComm_PIC18.c: 406: {
  3565                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission( send_buffer );
  3566  0007B8  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3567  0007BC  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3568  0007C0  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3569                           
  3570                           ;SlaveComm_PIC18.c: 408: }
  3571  0007C4  D044               	goto	l373
  3572  0007C6                     l367:
  3573                           
  3574                           ;SlaveComm_PIC18.c: 409: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3575  0007C6  0E0A               	movlw	10
  3576  0007C8  0100               	movlb	0	; () banked
  3577  0007CA  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3578  0007CC  6E1E               	movwf	strmatch@a,c
  3579  0007CE  0E00               	movlw	0
  3580  0007D0  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3581  0007D2  6E1F               	movwf	strmatch@a+1,c
  3582  0007D4  0E24               	movlw	low STR_10
  3583  0007D6  6E20               	movwf	strmatch@b,c
  3584  0007D8  0E06               	movlw	high STR_10
  3585  0007DA  6E21               	movwf	strmatch@b+1,c
  3586  0007DC  EC8C  F00B         	call	_strmatch	;wreg free
  3587  0007E0  06E8               	decf	wreg,f,c
  3588  0007E2  A4D8               	btfss	status,2,c
  3589  0007E4  D007               	goto	l369
  3590                           
  3591                           ;SlaveComm_PIC18.c: 410: {
  3592                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission( send_buffer );
  3593  0007E6  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3594  0007EA  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3595  0007EE  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3596                           
  3597                           ;SlaveComm_PIC18.c: 412: }
  3598  0007F2  D02D               	goto	l373
  3599  0007F4                     l369:
  3600                           
  3601                           ;SlaveComm_PIC18.c: 413: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3602  0007F4  0E0A               	movlw	10
  3603  0007F6  0100               	movlb	0	; () banked
  3604  0007F8  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3605  0007FA  6E1E               	movwf	strmatch@a,c
  3606  0007FC  0E00               	movlw	0
  3607  0007FE  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3608  000800  6E1F               	movwf	strmatch@a+1,c
  3609  000802  0E3F               	movlw	low STR_11
  3610  000804  6E20               	movwf	strmatch@b,c
  3611  000806  0E06               	movlw	high STR_11
  3612  000808  6E21               	movwf	strmatch@b+1,c
  3613  00080A  EC8C  F00B         	call	_strmatch	;wreg free
  3614  00080E  06E8               	decf	wreg,f,c
  3615  000810  A4D8               	btfss	status,2,c
  3616  000812  D007               	goto	l371
  3617                           
  3618                           ;SlaveComm_PIC18.c: 414: {
  3619                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission( send_buffer );
  3620  000814  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3621  000818  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3622  00081C  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3623                           
  3624                           ;SlaveComm_PIC18.c: 416: }
  3625  000820  D016               	goto	l373
  3626  000822                     l371:
  3627                           
  3628                           ;SlaveComm_PIC18.c: 417: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3629  000822  0E0A               	movlw	10
  3630  000824  0100               	movlb	0	; () banked
  3631  000826  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3632  000828  6E1E               	movwf	strmatch@a,c
  3633  00082A  0E00               	movlw	0
  3634  00082C  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3635  00082E  6E1F               	movwf	strmatch@a+1,c
  3636  000830  0E0D               	movlw	low STR_12
  3637  000832  6E20               	movwf	strmatch@b,c
  3638  000834  0E06               	movlw	high STR_12
  3639  000836  6E21               	movwf	strmatch@b+1,c
  3640  000838  EC8C  F00B         	call	_strmatch	;wreg free
  3641  00083C  06E8               	decf	wreg,f,c
  3642  00083E  A4D8               	btfss	status,2,c
  3643  000840  D006               	goto	l373
  3644                           
  3645                           ;SlaveComm_PIC18.c: 418: {
  3646                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission( send_buffer );
  3647  000842  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3648  000846  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3649  00084A  EC6C  F00C         	call	_send_end_of_transmission	;wreg free
  3650  00084E                     l373:
  3651                           
  3652                           ;SlaveComm_PIC18.c: 420: }
  3653                           ;SlaveComm_PIC18.c: 421: }
  3654                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3655  00084E  5039               	movf	process_data_parameters@end_of_transmission_received,w,c
  3656  000850  0012               	return	
  3657  000852                     __end_of_process_data_parameters:
  3658                           	opt stack 0
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           postinc0	equ	0xFEE
  3667                           wreg	equ	0xFE8
  3668                           postinc1	equ	0xFE6
  3669                           postdec1	equ	0xFE5
  3670                           fsr1h	equ	0xFE2
  3671                           fsr1l	equ	0xFE1
  3672                           indf2	equ	0xFDF
  3673                           postinc2	equ	0xFDE
  3674                           fsr2h	equ	0xFDA
  3675                           fsr2l	equ	0xFD9
  3676                           status	equ	0xFD8
  3677                           
  3678 ;; *************** function _strmatch *****************
  3679 ;; Defined at:
  3680 ;;		line 537 in file "SlaveComm_PIC18.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  a               2   29[COMRAM] PTR unsigned char 
  3683 ;;		 -> process_data@parameters(50), 
  3684 ;;  b               2   31[COMRAM] PTR unsigned char 
  3685 ;;		 -> STR_12(10), STR_11(5), STR_10(6), STR_9(7), 
  3686 ;;		 -> STR_8(6), STR_7(5), STR_6(5), STR_5(5), 
  3687 ;;		 -> STR_4(7), STR_3(6), STR_2(4), STR_1(4), 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  result          2   33[COMRAM] int 
  3690 ;;  match           1   35[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      unsigned char 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3700 ;;      Params:         4       0       0       0       0       0       0
  3701 ;;      Locals:         3       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0
  3703 ;;      Totals:         7       0       0       0       0       0       0
  3704 ;;Total ram usage:        7 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		_strcmp2
  3709 ;; This function is called by:
  3710 ;;		_process_data_parameters
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text20
  3715  001718                     __ptext20:
  3716                           	opt stack 0
  3717  001718                     _strmatch:
  3718                           	opt stack 25
  3719                           
  3720                           ;SlaveComm_PIC18.c: 539: int result;
  3721                           ;SlaveComm_PIC18.c: 540: bool match;
  3722                           ;SlaveComm_PIC18.c: 542: static int co = 0;
  3723                           ;SlaveComm_PIC18.c: 543: co++;
  3724                           
  3725                           ;incstack = 0
  3726  001718  0100               	movlb	0	; () banked
  3727  00171A  4BB9               	infsnz	strmatch@co& (0+255),f,b
  3728  00171C  2BBA               	incf	(strmatch@co+1)& (0+255),f,b
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;SlaveComm_PIC18.c: 545: result = strcmp2( a, b );
  3732  00171E  C01E  F013         	movff	strmatch@a,strcmp2@a
  3733  001722  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3734  001726  C020  F015         	movff	strmatch@b,strcmp2@b
  3735  00172A  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3736  00172E  ECE9  F004         	call	_strcmp2	;wreg free
  3737  001732  C013  F022         	movff	?_strcmp2,strmatch@result
  3738  001736  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3739                           
  3740                           ;SlaveComm_PIC18.c: 547: if( result == 0 )
  3741  00173A  5022               	movf	strmatch@result,w,c
  3742  00173C  1023               	iorwf	strmatch@result+1,w,c
  3743  00173E  A4D8               	btfss	status,2,c
  3744  001740  D002               	goto	l408
  3745                           
  3746                           ;SlaveComm_PIC18.c: 548: {
  3747                           ;SlaveComm_PIC18.c: 549: match = 1;
  3748  001742  0E01               	movlw	1
  3749  001744  D001               	goto	L5
  3750  001746                     l408:
  3751                           
  3752                           ;SlaveComm_PIC18.c: 551: else
  3753                           ;SlaveComm_PIC18.c: 552: {
  3754                           ;SlaveComm_PIC18.c: 553: match = 0;
  3755  001746  0E00               	movlw	0
  3756  001748                     L5:
  3757  001748  6E24               	movwf	strmatch@match,c
  3758                           
  3759                           ;SlaveComm_PIC18.c: 554: }
  3760                           ;SlaveComm_PIC18.c: 556: return match;
  3761  00174A  5024               	movf	strmatch@match,w,c
  3762  00174C  0012               	return	
  3763  00174E                     __end_of_strmatch:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           postinc1	equ	0xFE6
  3775                           postdec1	equ	0xFE5
  3776                           fsr1h	equ	0xFE2
  3777                           fsr1l	equ	0xFE1
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8
  3783                           
  3784 ;; *************** function _strcmp2 *****************
  3785 ;; Defined at:
  3786 ;;		line 559 in file "SlaveComm_PIC18.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  a               2   18[COMRAM] PTR unsigned char 
  3789 ;;		 -> process_data@parameters(50), 
  3790 ;;  b               2   20[COMRAM] PTR unsigned char 
  3791 ;;		 -> STR_12(10), STR_11(5), STR_10(6), STR_9(7), 
  3792 ;;		 -> STR_8(6), STR_7(5), STR_6(5), STR_5(5), 
  3793 ;;		 -> STR_4(7), STR_3(6), STR_2(4), STR_1(4), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  inx             2   27[COMRAM] int 
  3796 ;;  match           2   25[COMRAM] int 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2   18[COMRAM] int 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3806 ;;      Params:         4       0       0       0       0       0       0
  3807 ;;      Locals:         4       0       0       0       0       0       0
  3808 ;;      Temps:          3       0       0       0       0       0       0
  3809 ;;      Totals:        11       0       0       0       0       0       0
  3810 ;;Total ram usage:       11 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_strmatch
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text21
  3821  0009D2                     __ptext21:
  3822                           	opt stack 0
  3823  0009D2                     _strcmp2:
  3824                           	opt stack 25
  3825                           
  3826                           ;SlaveComm_PIC18.c: 561: int inx = 0;
  3827                           
  3828                           ;incstack = 0
  3829  0009D2  0E00               	movlw	0
  3830  0009D4  6E1D               	movwf	strcmp2@inx+1,c
  3831  0009D6  0E00               	movlw	0
  3832  0009D8  6E1C               	movwf	strcmp2@inx,c
  3833                           
  3834                           ;SlaveComm_PIC18.c: 562: int match = 0;
  3835  0009DA  0E00               	movlw	0
  3836  0009DC  6E1B               	movwf	strcmp2@match+1,c
  3837  0009DE  0E00               	movlw	0
  3838  0009E0  6E1A               	movwf	strcmp2@match,c
  3839                           
  3840                           ;SlaveComm_PIC18.c: 564: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  3841  0009E2  D035               	goto	l413
  3842  0009E4                     
  3843                           ;SlaveComm_PIC18.c: 565: {
  3844                           ;SlaveComm_PIC18.c: 566: if( a[inx] > b[inx] )
  3845  0009E4  501C               	movf	strcmp2@inx,w,c
  3846  0009E6  2413               	addwf	strcmp2@a,w,c
  3847  0009E8  6ED9               	movwf	fsr2l,c
  3848  0009EA  501D               	movf	strcmp2@inx+1,w,c
  3849  0009EC  2014               	addwfc	strcmp2@a+1,w,c
  3850  0009EE  6EDA               	movwf	fsr2h,c
  3851  0009F0  501C               	movf	strcmp2@inx,w,c
  3852  0009F2  2415               	addwf	strcmp2@b,w,c
  3853  0009F4  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3854  0009F6  501D               	movf	strcmp2@inx+1,w,c
  3855  0009F8  2016               	addwfc	strcmp2@b+1,w,c
  3856  0009FA  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3857  0009FC  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3858  000A00  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3859  000A04                     	if	0	;tblptru may be non-zero
  3860  000A04                     	endif
  3861  000A04                     	if	0	;tblptru may be non-zero
  3862  000A04                     	endif
  3863  000A04  50DE               	movf	postinc2,w,c
  3864  000A06  0009               	tblrd		*+
  3865  000A08  5CF5               	subwf	tablat,w,c
  3866  000A0A  B0D8               	btfsc	status,0,c
  3867  000A0C  D005               	goto	l415
  3868                           
  3869                           ;SlaveComm_PIC18.c: 567: {
  3870                           ;SlaveComm_PIC18.c: 568: match = 1;
  3871  000A0E  0E00               	movlw	0
  3872  000A10  6E1B               	movwf	strcmp2@match+1,c
  3873  000A12  0E01               	movlw	1
  3874  000A14  6E1A               	movwf	strcmp2@match,c
  3875                           
  3876                           ;SlaveComm_PIC18.c: 569: }
  3877  000A16  D019               	goto	l417
  3878  000A18                     l415:
  3879                           
  3880                           ;SlaveComm_PIC18.c: 570: else if( a[inx] < b[inx] )
  3881  000A18  501C               	movf	strcmp2@inx,w,c
  3882  000A1A  2413               	addwf	strcmp2@a,w,c
  3883  000A1C  6ED9               	movwf	fsr2l,c
  3884  000A1E  501D               	movf	strcmp2@inx+1,w,c
  3885  000A20  2014               	addwfc	strcmp2@a+1,w,c
  3886  000A22  6EDA               	movwf	fsr2h,c
  3887  000A24  50DF               	movf	indf2,w,c
  3888  000A26  6E17               	movwf	??_strcmp2& (0+255),c
  3889  000A28  501C               	movf	strcmp2@inx,w,c
  3890  000A2A  2415               	addwf	strcmp2@b,w,c
  3891  000A2C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3892  000A2E  501D               	movf	strcmp2@inx+1,w,c
  3893  000A30  2016               	addwfc	strcmp2@b+1,w,c
  3894  000A32  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3895  000A34  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3896  000A38  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3897  000A3C                     	if	0	;tblptru may be non-zero
  3898  000A3C                     	endif
  3899  000A3C                     	if	0	;tblptru may be non-zero
  3900  000A3C                     	endif
  3901  000A3C  0008               	tblrd		*
  3902  000A3E  50F5               	movf	tablat,w,c
  3903  000A40  5C17               	subwf	??_strcmp2,w,c
  3904  000A42  B0D8               	btfsc	status,0,c
  3905  000A44  D002               	goto	l417
  3906                           
  3907                           ;SlaveComm_PIC18.c: 571: {
  3908                           ;SlaveComm_PIC18.c: 572: match = -1;
  3909  000A46  681A               	setf	strcmp2@match,c
  3910  000A48  681B               	setf	strcmp2@match+1,c
  3911  000A4A                     l417:
  3912                           
  3913                           ;SlaveComm_PIC18.c: 577: }
  3914                           ;SlaveComm_PIC18.c: 579: inx++;
  3915                           
  3916                           ;SlaveComm_PIC18.c: 575: {
  3917  000A4A  4A1C               	infsnz	strcmp2@inx,f,c
  3918  000A4C  2A1D               	incf	strcmp2@inx+1,f,c
  3919  000A4E                     l413:
  3920  000A4E  501C               	movf	strcmp2@inx,w,c
  3921  000A50  2413               	addwf	strcmp2@a,w,c
  3922  000A52  6ED9               	movwf	fsr2l,c
  3923  000A54  501D               	movf	strcmp2@inx+1,w,c
  3924  000A56  2014               	addwfc	strcmp2@a+1,w,c
  3925  000A58  6EDA               	movwf	fsr2h,c
  3926  000A5A  50DF               	movf	indf2,w,c
  3927  000A5C  B4D8               	btfsc	status,2,c
  3928  000A5E  D013               	goto	u2400
  3929  000A60  501C               	movf	strcmp2@inx,w,c
  3930  000A62  2415               	addwf	strcmp2@b,w,c
  3931  000A64  6E17               	movwf	??_strcmp2& (0+255),c
  3932  000A66  501D               	movf	strcmp2@inx+1,w,c
  3933  000A68  2016               	addwfc	strcmp2@b+1,w,c
  3934  000A6A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3935  000A6C  C017  FFF6         	movff	??_strcmp2,tblptrl
  3936  000A70  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3937  000A74                     	if	0	;tblptru may be non-zero
  3938  000A74                     	endif
  3939  000A74                     	if	0	;tblptru may be non-zero
  3940  000A74                     	endif
  3941  000A74  0008               	tblrd		*
  3942  000A76  50F5               	movf	tablat,w,c
  3943  000A78  0900               	iorlw	0
  3944  000A7A  B4D8               	btfsc	status,2,c
  3945  000A7C  D004               	goto	u2400
  3946  000A7E  501A               	movf	strcmp2@match,w,c
  3947  000A80  101B               	iorwf	strcmp2@match+1,w,c
  3948  000A82  B4D8               	btfsc	status,2,c
  3949  000A84  D7AF               	goto	l414
  3950  000A86                     u2400:
  3951                           
  3952                           ;SlaveComm_PIC18.c: 580: }
  3953                           ;SlaveComm_PIC18.c: 582: if( (a[inx] == '\0') && (b[inx] != '\0') )
  3954  000A86  501C               	movf	strcmp2@inx,w,c
  3955  000A88  2413               	addwf	strcmp2@a,w,c
  3956  000A8A  6ED9               	movwf	fsr2l,c
  3957  000A8C  501D               	movf	strcmp2@inx+1,w,c
  3958  000A8E  2014               	addwfc	strcmp2@a+1,w,c
  3959  000A90  6EDA               	movwf	fsr2h,c
  3960  000A92  50DF               	movf	indf2,w,c
  3961  000A94  A4D8               	btfss	status,2,c
  3962  000A96  D012               	goto	l423
  3963  000A98  501C               	movf	strcmp2@inx,w,c
  3964  000A9A  2415               	addwf	strcmp2@b,w,c
  3965  000A9C  6E17               	movwf	??_strcmp2& (0+255),c
  3966  000A9E  501D               	movf	strcmp2@inx+1,w,c
  3967  000AA0  2016               	addwfc	strcmp2@b+1,w,c
  3968  000AA2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3969  000AA4  C017  FFF6         	movff	??_strcmp2,tblptrl
  3970  000AA8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3971  000AAC                     	if	0	;tblptru may be non-zero
  3972  000AAC                     	endif
  3973  000AAC                     	if	0	;tblptru may be non-zero
  3974  000AAC                     	endif
  3975  000AAC  0008               	tblrd		*
  3976  000AAE  50F5               	movf	tablat,w,c
  3977  000AB0  0900               	iorlw	0
  3978  000AB2  B4D8               	btfsc	status,2,c
  3979  000AB4  D003               	goto	l423
  3980                           
  3981                           ;SlaveComm_PIC18.c: 583: {
  3982                           ;SlaveComm_PIC18.c: 584: match = -1;
  3983  000AB6  681A               	setf	strcmp2@match,c
  3984  000AB8  681B               	setf	strcmp2@match+1,c
  3985                           
  3986                           ;SlaveComm_PIC18.c: 585: }
  3987  000ABA  D01C               	goto	l425
  3988  000ABC                     l423:
  3989                           
  3990                           ;SlaveComm_PIC18.c: 586: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  3991  000ABC  501C               	movf	strcmp2@inx,w,c
  3992  000ABE  2413               	addwf	strcmp2@a,w,c
  3993  000AC0  6ED9               	movwf	fsr2l,c
  3994  000AC2  501D               	movf	strcmp2@inx+1,w,c
  3995  000AC4  2014               	addwfc	strcmp2@a+1,w,c
  3996  000AC6  6EDA               	movwf	fsr2h,c
  3997  000AC8  50DF               	movf	indf2,w,c
  3998  000ACA  B4D8               	btfsc	status,2,c
  3999  000ACC  D013               	goto	l425
  4000  000ACE  501C               	movf	strcmp2@inx,w,c
  4001  000AD0  2415               	addwf	strcmp2@b,w,c
  4002  000AD2  6E17               	movwf	??_strcmp2& (0+255),c
  4003  000AD4  501D               	movf	strcmp2@inx+1,w,c
  4004  000AD6  2016               	addwfc	strcmp2@b+1,w,c
  4005  000AD8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4006  000ADA  C017  FFF6         	movff	??_strcmp2,tblptrl
  4007  000ADE  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4008  000AE2                     	if	0	;tblptru may be non-zero
  4009  000AE2                     	endif
  4010  000AE2                     	if	0	;tblptru may be non-zero
  4011  000AE2                     	endif
  4012  000AE2  0008               	tblrd		*
  4013  000AE4  50F5               	movf	tablat,w,c
  4014  000AE6  0900               	iorlw	0
  4015  000AE8  A4D8               	btfss	status,2,c
  4016  000AEA  D004               	goto	l425
  4017                           
  4018                           ;SlaveComm_PIC18.c: 587: {
  4019                           ;SlaveComm_PIC18.c: 588: match = 1;
  4020  000AEC  0E00               	movlw	0
  4021  000AEE  6E1B               	movwf	strcmp2@match+1,c
  4022  000AF0  0E01               	movlw	1
  4023  000AF2  6E1A               	movwf	strcmp2@match,c
  4024  000AF4                     l425:
  4025                           
  4026                           ;SlaveComm_PIC18.c: 589: }
  4027                           ;SlaveComm_PIC18.c: 592: return match;
  4028  000AF4  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4029  000AF8  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4030  000AFC  0012               	return	
  4031  000AFE                     __end_of_strcmp2:
  4032                           	opt stack 0
  4033                           tblptru	equ	0xFF8
  4034                           tblptrh	equ	0xFF7
  4035                           tblptrl	equ	0xFF6
  4036                           tablat	equ	0xFF5
  4037                           prodh	equ	0xFF4
  4038                           prodl	equ	0xFF3
  4039                           intcon	equ	0xFF2
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           postinc1	equ	0xFE6
  4043                           postdec1	equ	0xFE5
  4044                           fsr1h	equ	0xFE2
  4045                           fsr1l	equ	0xFE1
  4046                           indf2	equ	0xFDF
  4047                           postinc2	equ	0xFDE
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _send_end_of_transmission *****************
  4053 ;; Defined at:
  4054 ;;		line 637 in file "SlaveComm_PIC18.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4057 ;;		 -> communications@send_buffer(42), 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4069 ;;      Params:         2       0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0
  4072 ;;      Totals:         2       0       0       0       0       0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    4
  4076 ;; This function calls:
  4077 ;;		_command_builder1
  4078 ;; This function is called by:
  4079 ;;		_process_data_parameters
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text22
  4084  0018D8                     __ptext22:
  4085                           	opt stack 0
  4086  0018D8                     _send_end_of_transmission:
  4087                           	opt stack 23
  4088                           
  4089                           ;SlaveComm_PIC18.c: 639: command_builder1( send_buffer, "END" );
  4090                           
  4091                           ;incstack = 0
  4092  0018D8  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4093  0018DC  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4094  0018E0  0E50               	movlw	low STR_1
  4095  0018E2  6E21               	movwf	command_builder1@data1,c
  4096  0018E4  0E06               	movlw	high STR_1
  4097  0018E6  6E22               	movwf	command_builder1@data1+1,c
  4098  0018E8  EC74  F00A         	call	_command_builder1	;wreg free
  4099  0018EC  0012               	return	
  4100  0018EE                     __end_of_send_end_of_transmission:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           postinc1	equ	0xFE6
  4112                           postdec1	equ	0xFE5
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           postinc2	equ	0xFDE
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _command_builder1 *****************
  4122 ;; Defined at:
  4123 ;;		line 430 in file "SlaveComm_PIC18.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4126 ;;		 -> communications@send_buffer(42), 
  4127 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4128 ;;		 -> STR_13(4), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4140 ;;      Params:         4       0       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0
  4143 ;;      Totals:         4       0       0       0       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    3
  4147 ;; This function calls:
  4148 ;;		_command_builder_add_char
  4149 ;;		_command_builder_add_string
  4150 ;; This function is called by:
  4151 ;;		_send_end_of_transmission
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text23
  4156  0014E8                     __ptext23:
  4157                           	opt stack 0
  4158  0014E8                     _command_builder1:
  4159                           	opt stack 23
  4160                           
  4161                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, '#' );
  4162                           
  4163                           ;incstack = 0
  4164  0014E8  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4165  0014EC  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4166  0014F0  0E23               	movlw	35
  4167  0014F2  6E15               	movwf	command_builder_add_char@data,c
  4168  0014F4  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4169                           
  4170                           ;SlaveComm_PIC18.c: 433: command_builder_add_char( send_buffer, '#' );
  4171  0014F8  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4172  0014FC  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4173  001500  0E23               	movlw	35
  4174  001502  6E15               	movwf	command_builder_add_char@data,c
  4175  001504  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4176                           
  4177                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '!' );
  4178  001508  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4179  00150C  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4180  001510  0E21               	movlw	33
  4181  001512  6E15               	movwf	command_builder_add_char@data,c
  4182  001514  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4183                           
  4184                           ;SlaveComm_PIC18.c: 435: command_builder_add_string( send_buffer, data1 );
  4185  001518  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4186  00151C  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4187  001520  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4188  001524  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4189  001528  EC99  F009         	call	_command_builder_add_string	;wreg free
  4190                           
  4191                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, '*' );
  4192  00152C  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4193  001530  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4194  001534  0E2A               	movlw	42
  4195  001536  6E15               	movwf	command_builder_add_char@data,c
  4196  001538  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4197  00153C  0012               	return	
  4198  00153E                     __end_of_command_builder1:
  4199                           	opt stack 0
  4200                           tblptru	equ	0xFF8
  4201                           tblptrh	equ	0xFF7
  4202                           tblptrl	equ	0xFF6
  4203                           tablat	equ	0xFF5
  4204                           prodh	equ	0xFF4
  4205                           prodl	equ	0xFF3
  4206                           intcon	equ	0xFF2
  4207                           postinc0	equ	0xFEE
  4208                           wreg	equ	0xFE8
  4209                           postinc1	equ	0xFE6
  4210                           postdec1	equ	0xFE5
  4211                           fsr1h	equ	0xFE2
  4212                           fsr1l	equ	0xFE1
  4213                           indf2	equ	0xFDF
  4214                           postinc2	equ	0xFDE
  4215                           fsr2h	equ	0xFDA
  4216                           fsr2l	equ	0xFD9
  4217                           status	equ	0xFD8
  4218                           
  4219 ;; *************** function _com_command_setEnergyUsed *****************
  4220 ;; Defined at:
  4221 ;;		line 674 in file "SlaveComm_PIC18.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  4224 ;;		 -> communications@send_buffer(42), 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:         2       0       0       0       0       0       0
  4237 ;;      Locals:         0      12       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0
  4239 ;;      Totals:         2      12       0       0       0       0       0
  4240 ;;Total ram usage:       14 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    4
  4243 ;; This function calls:
  4244 ;;		_command_builder3
  4245 ;;		_ltoa
  4246 ;; This function is called by:
  4247 ;;		_resetCommunications
  4248 ;;		_process_data_parameters
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text24
  4253  001686                     __ptext24:
  4254                           	opt stack 0
  4255  001686                     _com_command_setEnergyUsed:
  4256                           	opt stack 24
  4257                           
  4258                           ;SlaveComm_PIC18.c: 676: char temp[12];
  4259                           ;SlaveComm_PIC18.c: 678: ltoa( temp, meterEnergyUsed, 10 );
  4260                           
  4261                           ;incstack = 0
  4262  001686  0E60               	movlw	low com_command_setEnergyUsed@temp
  4263  001688  6E2D               	movwf	ltoa@buf,c
  4264  00168A  0E00               	movlw	high com_command_setEnergyUsed@temp
  4265  00168C  6E2E               	movwf	ltoa@buf+1,c
  4266  00168E  C0B1  F02F         	movff	_meterEnergyUsed,ltoa@val
  4267  001692  C0B2  F030         	movff	_meterEnergyUsed+1,ltoa@val+1
  4268  001696  C0B3  F031         	movff	_meterEnergyUsed+2,ltoa@val+2
  4269  00169A  C0B4  F032         	movff	_meterEnergyUsed+3,ltoa@val+3
  4270  00169E  0E00               	movlw	0
  4271  0016A0  6E34               	movwf	ltoa@base+1,c
  4272  0016A2  0E0A               	movlw	10
  4273  0016A4  6E33               	movwf	ltoa@base,c
  4274  0016A6  ECF5  F00A         	call	_ltoa	;wreg free
  4275                           
  4276                           ;SlaveComm_PIC18.c: 681: command_builder3( send_buffer, "Set", "EnUsed", temp );
  4277  0016AA  C037  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4278  0016AE  C038  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4279  0016B2  0E54               	movlw	low STR_2
  4280  0016B4  6E21               	movwf	command_builder3@data1,c
  4281  0016B6  0E06               	movlw	high STR_2
  4282  0016B8  6E22               	movwf	command_builder3@data1+1,c
  4283  0016BA  0E17               	movlw	low STR_4
  4284  0016BC  6E23               	movwf	command_builder3@data2,c
  4285  0016BE  0E06               	movlw	high STR_4
  4286  0016C0  6E24               	movwf	command_builder3@data2+1,c
  4287  0016C2  0E60               	movlw	low com_command_setEnergyUsed@temp
  4288  0016C4  6E25               	movwf	command_builder3@data3,c
  4289  0016C6  0E00               	movlw	high com_command_setEnergyUsed@temp
  4290  0016C8  6E26               	movwf	command_builder3@data3+1,c
  4291  0016CA  ECC1  F008         	call	_command_builder3	;wreg free
  4292  0016CE  0012               	return	
  4293  0016D0                     __end_of_com_command_setEnergyUsed:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           postinc0	equ	0xFEE
  4303                           wreg	equ	0xFE8
  4304                           postinc1	equ	0xFE6
  4305                           postdec1	equ	0xFE5
  4306                           fsr1h	equ	0xFE2
  4307                           fsr1l	equ	0xFE1
  4308                           indf2	equ	0xFDF
  4309                           postinc2	equ	0xFDE
  4310                           fsr2h	equ	0xFDA
  4311                           fsr2l	equ	0xFD9
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _ltoa *****************
  4315 ;; Defined at:
  4316 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  buf             2   44[COMRAM] PTR unsigned char 
  4319 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4320 ;;  val             4   46[COMRAM] long 
  4321 ;;  base            2   50[COMRAM] int 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  cp              2   52[COMRAM] PTR unsigned char 
  4324 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2   44[COMRAM] PTR unsigned char 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4334 ;;      Params:         8       0       0       0       0       0       0
  4335 ;;      Locals:         2       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0
  4337 ;;      Totals:        10       0       0       0       0       0       0
  4338 ;;Total ram usage:       10 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		_ultoa
  4343 ;; This function is called by:
  4344 ;;		_com_command_setPower
  4345 ;;		_com_command_setEnergyUsed
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text25
  4350  0015EA                     __ptext25:
  4351                           	opt stack 0
  4352  0015EA                     _ltoa:
  4353                           	opt stack 24
  4354                           
  4355                           ;incstack = 0
  4356  0015EA  C02D  F035         	movff	ltoa@buf,ltoa@cp
  4357  0015EE  C02E  F036         	movff	ltoa@buf+1,ltoa@cp+1
  4358  0015F2  AE32               	btfss	ltoa@val+3,7,c
  4359  0015F4  D010               	goto	l882
  4360  0015F6  C02D  FFD9         	movff	ltoa@buf,fsr2l
  4361  0015FA  C02E  FFDA         	movff	ltoa@buf+1,fsr2h
  4362  0015FE  0E2D               	movlw	45
  4363  001600  6EDF               	movwf	indf2,c
  4364  001602  4A2D               	infsnz	ltoa@buf,f,c
  4365  001604  2A2E               	incf	ltoa@buf+1,f,c
  4366  001606  1E32               	comf	ltoa@val+3,f,c
  4367  001608  1E31               	comf	ltoa@val+2,f,c
  4368  00160A  1E30               	comf	ltoa@val+1,f,c
  4369  00160C  6C2F               	negf	ltoa@val,c
  4370  00160E  0E00               	movlw	0
  4371  001610  2230               	addwfc	ltoa@val+1,f,c
  4372  001612  2231               	addwfc	ltoa@val+2,f,c
  4373  001614  2232               	addwfc	ltoa@val+3,f,c
  4374  001616                     l882:
  4375  001616  C02D  F020         	movff	ltoa@buf,ultoa@buf
  4376  00161A  C02E  F021         	movff	ltoa@buf+1,ultoa@buf+1
  4377  00161E  C02F  F022         	movff	ltoa@val,ultoa@val
  4378  001622  C030  F023         	movff	ltoa@val+1,ultoa@val+1
  4379  001626  C031  F024         	movff	ltoa@val+2,ultoa@val+2
  4380  00162A  C032  F025         	movff	ltoa@val+3,ultoa@val+3
  4381  00162E  C033  F026         	movff	ltoa@base,ultoa@base
  4382  001632  C034  F027         	movff	ltoa@base+1,ultoa@base+1
  4383  001636  EC0B  F006         	call	_ultoa	;wreg free
  4384  00163A  0012               	return	
  4385  00163C                     __end_of_ltoa:
  4386                           	opt stack 0
  4387                           tblptru	equ	0xFF8
  4388                           tblptrh	equ	0xFF7
  4389                           tblptrl	equ	0xFF6
  4390                           tablat	equ	0xFF5
  4391                           prodh	equ	0xFF4
  4392                           prodl	equ	0xFF3
  4393                           intcon	equ	0xFF2
  4394                           postinc0	equ	0xFEE
  4395                           wreg	equ	0xFE8
  4396                           postinc1	equ	0xFE6
  4397                           postdec1	equ	0xFE5
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           indf2	equ	0xFDF
  4401                           postinc2	equ	0xFDE
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function _ultoa *****************
  4407 ;; Defined at:
  4408 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4411 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4412 ;;  val             4   33[COMRAM] unsigned long 
  4413 ;;  base            2   37[COMRAM] int 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  v               4   39[COMRAM] unsigned long 
  4416 ;;  c               1   43[COMRAM] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  2   31[COMRAM] PTR unsigned char 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4426 ;;      Params:         8       0       0       0       0       0       0
  4427 ;;      Locals:         5       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0
  4429 ;;      Totals:        13       0       0       0       0       0       0
  4430 ;;Total ram usage:       13 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    2
  4433 ;; This function calls:
  4434 ;;		___lldiv
  4435 ;;		___llmod
  4436 ;; This function is called by:
  4437 ;;		_ltoa
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text26
  4442  000C16                     __ptext26:
  4443                           	opt stack 0
  4444  000C16                     _ultoa:
  4445                           	opt stack 24
  4446                           
  4447                           ;incstack = 0
  4448  000C16  C022  F028         	movff	ultoa@val,ultoa@v
  4449  000C1A  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4450  000C1E  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4451  000C22  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4452  000C26  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4453  000C2A  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4454  000C2E  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4455  000C32  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4456  000C36  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4457  000C3A  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4458  000C3E  0E00               	movlw	0
  4459  000C40  BE18               	btfsc	___lldiv@divisor+1,7,c
  4460  000C42  0EFF               	movlw	-1
  4461  000C44  6E19               	movwf	___lldiv@divisor+2,c
  4462  000C46  6E1A               	movwf	___lldiv@divisor+3,c
  4463  000C48  EC58  F009         	call	___lldiv	;wreg free
  4464  000C4C  C013  F028         	movff	?___lldiv,ultoa@v
  4465  000C50  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4466  000C54  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4467  000C58  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4468  000C5C  4A20               	infsnz	ultoa@buf,f,c
  4469  000C5E  2A21               	incf	ultoa@buf+1,f,c
  4470  000C60  5028               	movf	ultoa@v,w,c
  4471  000C62  1029               	iorwf	ultoa@v+1,w,c
  4472  000C64  102A               	iorwf	ultoa@v+2,w,c
  4473  000C66  102B               	iorwf	ultoa@v+3,w,c
  4474  000C68  A4D8               	btfss	status,2,c
  4475  000C6A  D7DD               	goto	l886
  4476  000C6C  C020  FFD9         	movff	ultoa@buf,fsr2l
  4477  000C70  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4478  000C74  0E00               	movlw	0
  4479  000C76  6EDF               	movwf	indf2,c
  4480  000C78  0620               	decf	ultoa@buf,f,c
  4481  000C7A  A0D8               	btfss	status,0,c
  4482  000C7C  0621               	decf	ultoa@buf+1,f,c
  4483  000C7E  C022  F013         	movff	ultoa@val,___llmod@dividend
  4484  000C82  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4485  000C86  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4486  000C8A  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4487  000C8E  C026  F017         	movff	ultoa@base,___llmod@divisor
  4488  000C92  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4489  000C96  0E00               	movlw	0
  4490  000C98  BE18               	btfsc	___llmod@divisor+1,7,c
  4491  000C9A  0EFF               	movlw	-1
  4492  000C9C  6E19               	movwf	___llmod@divisor+2,c
  4493  000C9E  6E1A               	movwf	___llmod@divisor+3,c
  4494  000CA0  EC0F  F00A         	call	___llmod	;wreg free
  4495  000CA4  5013               	movf	?___llmod,w,c
  4496  000CA6  6E2C               	movwf	ultoa@c,c
  4497  000CA8  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4498  000CAC  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4499  000CB0  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4500  000CB4  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4501  000CB8  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4502  000CBC  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4503  000CC0  0E00               	movlw	0
  4504  000CC2  BE18               	btfsc	___lldiv@divisor+1,7,c
  4505  000CC4  0EFF               	movlw	-1
  4506  000CC6  6E19               	movwf	___lldiv@divisor+2,c
  4507  000CC8  6E1A               	movwf	___lldiv@divisor+3,c
  4508  000CCA  EC58  F009         	call	___lldiv	;wreg free
  4509  000CCE  C013  F022         	movff	?___lldiv,ultoa@val
  4510  000CD2  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4511  000CD6  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4512  000CDA  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4513  000CDE  0E09               	movlw	9
  4514  000CE0  642C               	cpfsgt	ultoa@c,c
  4515  000CE2  D002               	goto	l889
  4516  000CE4  0E07               	movlw	7
  4517  000CE6  262C               	addwf	ultoa@c,f,c
  4518  000CE8                     l889:
  4519  000CE8  0E30               	movlw	48
  4520  000CEA  262C               	addwf	ultoa@c,f,c
  4521  000CEC  C020  FFD9         	movff	ultoa@buf,fsr2l
  4522  000CF0  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4523  000CF4  C02C  FFDF         	movff	ultoa@c,indf2
  4524  000CF8  0620               	decf	ultoa@buf,f,c
  4525  000CFA  A0D8               	btfss	status,0,c
  4526  000CFC  0621               	decf	ultoa@buf+1,f,c
  4527  000CFE  5022               	movf	ultoa@val,w,c
  4528  000D00  1023               	iorwf	ultoa@val+1,w,c
  4529  000D02  1024               	iorwf	ultoa@val+2,w,c
  4530  000D04  1025               	iorwf	ultoa@val+3,w,c
  4531  000D06  B4D8               	btfsc	status,2,c
  4532  000D08  0012               	return	
  4533  000D0A  D7B9               	goto	l888
  4534  000D0C                     __end_of_ultoa:
  4535                           	opt stack 0
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodh	equ	0xFF4
  4541                           prodl	equ	0xFF3
  4542                           intcon	equ	0xFF2
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           postinc1	equ	0xFE6
  4546                           postdec1	equ	0xFE5
  4547                           fsr1h	equ	0xFE2
  4548                           fsr1l	equ	0xFE1
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function ___llmod *****************
  4556 ;; Defined at:
  4557 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  dividend        4   18[COMRAM] unsigned long 
  4560 ;;  divisor         4   22[COMRAM] unsigned long 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  counter         1   26[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  4   18[COMRAM] unsigned long 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         8       0       0       0       0       0       0
  4573 ;;      Locals:         1       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0
  4575 ;;      Totals:         9       0       0       0       0       0       0
  4576 ;;Total ram usage:        9 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_ultoa
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text27
  4587  00141E                     __ptext27:
  4588                           	opt stack 0
  4589  00141E                     ___llmod:
  4590                           	opt stack 24
  4591                           
  4592                           ;incstack = 0
  4593  00141E  5017               	movf	___llmod@divisor,w,c
  4594  001420  1018               	iorwf	___llmod@divisor+1,w,c
  4595  001422  1019               	iorwf	___llmod@divisor+2,w,c
  4596  001424  101A               	iorwf	___llmod@divisor+3,w,c
  4597  001426  B4D8               	btfsc	status,2,c
  4598  001428  D024               	goto	l848
  4599  00142A  0E01               	movlw	1
  4600  00142C  6E1B               	movwf	___llmod@counter,c
  4601  00142E  D006               	goto	l843
  4602  001430  90D8               	bcf	status,0,c
  4603  001432  3617               	rlcf	___llmod@divisor,f,c
  4604  001434  3618               	rlcf	___llmod@divisor+1,f,c
  4605  001436  3619               	rlcf	___llmod@divisor+2,f,c
  4606  001438  361A               	rlcf	___llmod@divisor+3,f,c
  4607  00143A  2A1B               	incf	___llmod@counter,f,c
  4608  00143C                     l843:
  4609  00143C  AE1A               	btfss	___llmod@divisor+3,7,c
  4610  00143E  D7F8               	goto	l844
  4611  001440                     u2280:
  4612  001440  5017               	movf	___llmod@divisor,w,c
  4613  001442  5C13               	subwf	___llmod@dividend,w,c
  4614  001444  5018               	movf	___llmod@divisor+1,w,c
  4615  001446  5814               	subwfb	___llmod@dividend+1,w,c
  4616  001448  5019               	movf	___llmod@divisor+2,w,c
  4617  00144A  5815               	subwfb	___llmod@dividend+2,w,c
  4618  00144C  501A               	movf	___llmod@divisor+3,w,c
  4619  00144E  5816               	subwfb	___llmod@dividend+3,w,c
  4620  001450  A0D8               	btfss	status,0,c
  4621  001452  D008               	goto	l847
  4622  001454  5017               	movf	___llmod@divisor,w,c
  4623  001456  5E13               	subwf	___llmod@dividend,f,c
  4624  001458  5018               	movf	___llmod@divisor+1,w,c
  4625  00145A  5A14               	subwfb	___llmod@dividend+1,f,c
  4626  00145C  5019               	movf	___llmod@divisor+2,w,c
  4627  00145E  5A15               	subwfb	___llmod@dividend+2,f,c
  4628  001460  501A               	movf	___llmod@divisor+3,w,c
  4629  001462  5A16               	subwfb	___llmod@dividend+3,f,c
  4630  001464                     l847:
  4631  001464  90D8               	bcf	status,0,c
  4632  001466  321A               	rrcf	___llmod@divisor+3,f,c
  4633  001468  3219               	rrcf	___llmod@divisor+2,f,c
  4634  00146A  3218               	rrcf	___llmod@divisor+1,f,c
  4635  00146C  3217               	rrcf	___llmod@divisor,f,c
  4636  00146E  2E1B               	decfsz	___llmod@counter,f,c
  4637  001470  D7E7               	goto	u2280
  4638  001472                     l848:
  4639  001472  C013  F013         	movff	___llmod@dividend,?___llmod
  4640  001476  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4641  00147A  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4642  00147E  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4643  001482  0012               	return		;funcret
  4644  001484                     __end_of___llmod:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           prodh	equ	0xFF4
  4651                           prodl	equ	0xFF3
  4652                           intcon	equ	0xFF2
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           postinc1	equ	0xFE6
  4656                           postdec1	equ	0xFE5
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           
  4665 ;; *************** function ___lldiv *****************
  4666 ;; Defined at:
  4667 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  dividend        4   18[COMRAM] unsigned long 
  4670 ;;  divisor         4   22[COMRAM] unsigned long 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  quotient        4   26[COMRAM] unsigned long 
  4673 ;;  counter         1   30[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  4   18[COMRAM] unsigned long 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         8       0       0       0       0       0       0
  4684 ;;      Locals:         5       0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0
  4686 ;;      Totals:        13       0       0       0       0       0       0
  4687 ;;Total ram usage:       13 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_ultoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text28
  4698  0012B0                     __ptext28:
  4699                           	opt stack 0
  4700  0012B0                     ___lldiv:
  4701                           	opt stack 24
  4702                           
  4703                           ;incstack = 0
  4704  0012B0  0E00               	movlw	0
  4705  0012B2  6E1B               	movwf	___lldiv@quotient,c
  4706  0012B4  0E00               	movlw	0
  4707  0012B6  6E1C               	movwf	___lldiv@quotient+1,c
  4708  0012B8  0E00               	movlw	0
  4709  0012BA  6E1D               	movwf	___lldiv@quotient+2,c
  4710  0012BC  0E00               	movlw	0
  4711  0012BE  6E1E               	movwf	___lldiv@quotient+3,c
  4712  0012C0  5017               	movf	___lldiv@divisor,w,c
  4713  0012C2  1018               	iorwf	___lldiv@divisor+1,w,c
  4714  0012C4  1019               	iorwf	___lldiv@divisor+2,w,c
  4715  0012C6  101A               	iorwf	___lldiv@divisor+3,w,c
  4716  0012C8  B4D8               	btfsc	status,2,c
  4717  0012CA  D02A               	goto	l838
  4718  0012CC  0E01               	movlw	1
  4719  0012CE  6E1F               	movwf	___lldiv@counter,c
  4720  0012D0  D006               	goto	l833
  4721  0012D2  90D8               	bcf	status,0,c
  4722  0012D4  3617               	rlcf	___lldiv@divisor,f,c
  4723  0012D6  3618               	rlcf	___lldiv@divisor+1,f,c
  4724  0012D8  3619               	rlcf	___lldiv@divisor+2,f,c
  4725  0012DA  361A               	rlcf	___lldiv@divisor+3,f,c
  4726  0012DC  2A1F               	incf	___lldiv@counter,f,c
  4727  0012DE                     l833:
  4728  0012DE  AE1A               	btfss	___lldiv@divisor+3,7,c
  4729  0012E0  D7F8               	goto	l834
  4730  0012E2                     u2250:
  4731  0012E2  90D8               	bcf	status,0,c
  4732  0012E4  361B               	rlcf	___lldiv@quotient,f,c
  4733  0012E6  361C               	rlcf	___lldiv@quotient+1,f,c
  4734  0012E8  361D               	rlcf	___lldiv@quotient+2,f,c
  4735  0012EA  361E               	rlcf	___lldiv@quotient+3,f,c
  4736  0012EC  5017               	movf	___lldiv@divisor,w,c
  4737  0012EE  5C13               	subwf	___lldiv@dividend,w,c
  4738  0012F0  5018               	movf	___lldiv@divisor+1,w,c
  4739  0012F2  5814               	subwfb	___lldiv@dividend+1,w,c
  4740  0012F4  5019               	movf	___lldiv@divisor+2,w,c
  4741  0012F6  5815               	subwfb	___lldiv@dividend+2,w,c
  4742  0012F8  501A               	movf	___lldiv@divisor+3,w,c
  4743  0012FA  5816               	subwfb	___lldiv@dividend+3,w,c
  4744  0012FC  A0D8               	btfss	status,0,c
  4745  0012FE  D009               	goto	l837
  4746  001300  5017               	movf	___lldiv@divisor,w,c
  4747  001302  5E13               	subwf	___lldiv@dividend,f,c
  4748  001304  5018               	movf	___lldiv@divisor+1,w,c
  4749  001306  5A14               	subwfb	___lldiv@dividend+1,f,c
  4750  001308  5019               	movf	___lldiv@divisor+2,w,c
  4751  00130A  5A15               	subwfb	___lldiv@dividend+2,f,c
  4752  00130C  501A               	movf	___lldiv@divisor+3,w,c
  4753  00130E  5A16               	subwfb	___lldiv@dividend+3,f,c
  4754  001310  801B               	bsf	___lldiv@quotient,0,c
  4755  001312                     l837:
  4756  001312  90D8               	bcf	status,0,c
  4757  001314  321A               	rrcf	___lldiv@divisor+3,f,c
  4758  001316  3219               	rrcf	___lldiv@divisor+2,f,c
  4759  001318  3218               	rrcf	___lldiv@divisor+1,f,c
  4760  00131A  3217               	rrcf	___lldiv@divisor,f,c
  4761  00131C  2E1F               	decfsz	___lldiv@counter,f,c
  4762  00131E  D7E1               	goto	u2250
  4763  001320                     l838:
  4764  001320  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4765  001324  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4766  001328  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4767  00132C  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4768  001330  0012               	return		;funcret
  4769  001332                     __end_of___lldiv:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           prodh	equ	0xFF4
  4776                           prodl	equ	0xFF3
  4777                           intcon	equ	0xFF2
  4778                           postinc0	equ	0xFEE
  4779                           wreg	equ	0xFE8
  4780                           postinc1	equ	0xFE6
  4781                           postdec1	equ	0xFE5
  4782                           fsr1h	equ	0xFE2
  4783                           fsr1l	equ	0xFE1
  4784                           indf2	equ	0xFDF
  4785                           postinc2	equ	0xFDE
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function _command_builder3 *****************
  4791 ;; Defined at:
  4792 ;;		line 454 in file "SlaveComm_PIC18.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4795 ;;		 -> communications@send_buffer(42), 
  4796 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4797 ;;		 -> STR_28(4), STR_23(4), STR_20(4), STR_18(4), 
  4798 ;;		 -> STR_16(4), 
  4799 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4800 ;;		 -> STR_29(10), STR_24(5), STR_21(6), STR_19(7), 
  4801 ;;		 -> STR_17(6), 
  4802 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4803 ;;		 -> STR_30(4), STR_25(4), STR_22(4), com_command_setEnergyUsed@temp(12), 
  4804 ;;		 -> com_command_setPower@temp(12), 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4816 ;;      Params:         8       0       0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0
  4819 ;;      Totals:         8       0       0       0       0       0       0
  4820 ;;Total ram usage:        8 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    3
  4823 ;; This function calls:
  4824 ;;		_command_builder_add_char
  4825 ;;		_command_builder_add_string
  4826 ;; This function is called by:
  4827 ;;		_com_command_setPower
  4828 ;;		_com_command_setEnergyUsed
  4829 ;;		_com_command_setVersion
  4830 ;;		_com_command_setVolts
  4831 ;;		_com_command_setAmps
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text29
  4836  001182                     __ptext29:
  4837                           	opt stack 0
  4838  001182                     _command_builder3:
  4839                           	opt stack 24
  4840                           
  4841                           ;SlaveComm_PIC18.c: 456: command_builder_add_char( send_buffer, '#' );
  4842                           
  4843                           ;incstack = 0
  4844  001182  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4845  001186  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4846  00118A  0E23               	movlw	35
  4847  00118C  6E15               	movwf	command_builder_add_char@data,c
  4848  00118E  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4849                           
  4850                           ;SlaveComm_PIC18.c: 457: command_builder_add_char( send_buffer, '#' );
  4851  001192  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4852  001196  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4853  00119A  0E23               	movlw	35
  4854  00119C  6E15               	movwf	command_builder_add_char@data,c
  4855  00119E  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4856                           
  4857                           ;SlaveComm_PIC18.c: 458: command_builder_add_char( send_buffer, '!' );
  4858  0011A2  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4859  0011A6  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4860  0011AA  0E21               	movlw	33
  4861  0011AC  6E15               	movwf	command_builder_add_char@data,c
  4862  0011AE  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4863                           
  4864                           ;SlaveComm_PIC18.c: 459: command_builder_add_string( send_buffer, data1 );
  4865  0011B2  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4866  0011B6  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4867  0011BA  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4868  0011BE  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4869  0011C2  EC99  F009         	call	_command_builder_add_string	;wreg free
  4870                           
  4871                           ;SlaveComm_PIC18.c: 460: command_builder_add_char( send_buffer, ';' );
  4872  0011C6  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4873  0011CA  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4874  0011CE  0E3B               	movlw	59
  4875  0011D0  6E15               	movwf	command_builder_add_char@data,c
  4876  0011D2  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4877                           
  4878                           ;SlaveComm_PIC18.c: 461: command_builder_add_string( send_buffer, data2 );
  4879  0011D6  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4880  0011DA  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4881  0011DE  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4882  0011E2  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4883  0011E6  EC99  F009         	call	_command_builder_add_string	;wreg free
  4884                           
  4885                           ;SlaveComm_PIC18.c: 462: command_builder_add_char( send_buffer, ';' );
  4886  0011EA  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4887  0011EE  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4888  0011F2  0E3B               	movlw	59
  4889  0011F4  6E15               	movwf	command_builder_add_char@data,c
  4890  0011F6  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4891                           
  4892                           ;SlaveComm_PIC18.c: 463: command_builder_add_string( send_buffer, data3 );
  4893  0011FA  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4894  0011FE  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4895  001202  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4896  001206  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4897  00120A  EC99  F009         	call	_command_builder_add_string	;wreg free
  4898                           
  4899                           ;SlaveComm_PIC18.c: 464: command_builder_add_char( send_buffer, '*' );
  4900  00120E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4901  001212  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4902  001216  0E2A               	movlw	42
  4903  001218  6E15               	movwf	command_builder_add_char@data,c
  4904  00121A  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  4905  00121E  0012               	return	
  4906  001220                     __end_of_command_builder3:
  4907                           	opt stack 0
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           postinc0	equ	0xFEE
  4916                           wreg	equ	0xFE8
  4917                           postinc1	equ	0xFE6
  4918                           postdec1	equ	0xFE5
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           postinc2	equ	0xFDE
  4923                           fsr2h	equ	0xFDA
  4924                           fsr2l	equ	0xFD9
  4925                           status	equ	0xFD8
  4926                           
  4927 ;; *************** function _command_builder_add_string *****************
  4928 ;; Defined at:
  4929 ;;		line 499 in file "SlaveComm_PIC18.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4932 ;;		 -> communications@send_buffer(42), 
  4933 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4934 ;;		 -> STR_30(4), STR_29(10), STR_28(4), STR_27(12), 
  4935 ;;		 -> STR_26(5), STR_25(4), STR_24(5), STR_23(4), 
  4936 ;;		 -> STR_22(4), STR_21(6), STR_20(4), STR_19(7), 
  4937 ;;		 -> STR_18(4), com_command_setEnergyUsed@temp(12), STR_17(6), STR_16(4), 
  4938 ;;		 -> com_command_setPower@temp(12), STR_15(5), STR_14(5), STR_13(4), 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  inx             2   28[COMRAM] int 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         4       0       0       0       0       0       0
  4951 ;;      Locals:         2       0       0       0       0       0       0
  4952 ;;      Temps:          2       0       0       0       0       0       0
  4953 ;;      Totals:         8       0       0       0       0       0       0
  4954 ;;Total ram usage:        8 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    2
  4957 ;; This function calls:
  4958 ;;		_command_builder_add_char
  4959 ;; This function is called by:
  4960 ;;		_command_builder1
  4961 ;;		_command_builder3
  4962 ;;		_command_builder2
  4963 ;;		_command_builder4
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text30
  4968  001332                     __ptext30:
  4969                           	opt stack 0
  4970  001332                     _command_builder_add_string:
  4971                           	opt stack 24
  4972                           
  4973                           ;SlaveComm_PIC18.c: 501: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4974                           
  4975                           ;incstack = 0
  4976  001332  0E00               	movlw	0
  4977  001334  6E1E               	movwf	command_builder_add_string@inx+1,c
  4978  001336  0E00               	movlw	0
  4979  001338  6E1D               	movwf	command_builder_add_string@inx,c
  4980  00133A  D01F               	goto	l393
  4981  00133C                     
  4982                           ;SlaveComm_PIC18.c: 502: {
  4983                           ;SlaveComm_PIC18.c: 503: command_builder_add_char( send_buffer, data_string[inx] );
  4984  00133C  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4985  001340  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4986  001344  501D               	movf	command_builder_add_string@inx,w,c
  4987  001346  2419               	addwf	command_builder_add_string@data_string,w,c
  4988  001348  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4989  00134A  501E               	movf	command_builder_add_string@inx+1,w,c
  4990  00134C  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4991  00134E  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4992  001350  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4993  001354  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4994  001358  6AF8               	clrf	tblptru,c
  4995  00135A  0E05               	movlw	(high __ramtop+-1)
  4996  00135C  64F7               	cpfsgt	tblptrh,c
  4997  00135E  D003               	bra	u2307
  4998  001360  0008               	tblrd		*
  4999  001362  50F5               	movf	tablat,w,c
  5000  001364  D005               	bra	u2300
  5001  001366                     u2307:
  5002  001366  CFF6 FFE1          	movff	tblptrl,fsr1l
  5003  00136A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5004  00136E  50E7               	movf	indf1,w,c
  5005  001370                     u2300:
  5006  001370  6E15               	movwf	command_builder_add_char@data,c
  5007  001372  EC9F  F00A         	call	_command_builder_add_char	;wreg free
  5008  001376  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5009  001378  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5010  00137A                     l393:
  5011  00137A  501D               	movf	command_builder_add_string@inx,w,c
  5012  00137C  2419               	addwf	command_builder_add_string@data_string,w,c
  5013  00137E  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5014  001380  501E               	movf	command_builder_add_string@inx+1,w,c
  5015  001382  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5016  001384  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5017  001386  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5018  00138A  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5019  00138E  6AF8               	clrf	tblptru,c
  5020  001390  0E05               	movlw	(high __ramtop+-1)
  5021  001392  64F7               	cpfsgt	tblptrh,c
  5022  001394  D003               	bra	u2317
  5023  001396  0008               	tblrd		*
  5024  001398  50F5               	movf	tablat,w,c
  5025  00139A  D005               	bra	u2310
  5026  00139C                     u2317:
  5027  00139C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5028  0013A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5029  0013A4  50E7               	movf	indf1,w,c
  5030  0013A6                     u2310:
  5031  0013A6  0900               	iorlw	0
  5032  0013A8  B4D8               	btfsc	status,2,c
  5033  0013AA  0012               	return	
  5034  0013AC  D7C7               	goto	l394
  5035  0013AE                     __end_of_command_builder_add_string:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           intcon	equ	0xFF2
  5044                           postinc0	equ	0xFEE
  5045                           wreg	equ	0xFE8
  5046                           indf1	equ	0xFE7
  5047                           postinc1	equ	0xFE6
  5048                           postdec1	equ	0xFE5
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           indf2	equ	0xFDF
  5052                           postinc2	equ	0xFDE
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _command_builder_add_char *****************
  5058 ;; Defined at:
  5059 ;;		line 486 in file "SlaveComm_PIC18.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5062 ;;		 -> communications@send_buffer(42), 
  5063 ;;  data            1   20[COMRAM] unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5075 ;;      Params:         3       0       0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0       0       0
  5078 ;;      Totals:         4       0       0       0       0       0       0
  5079 ;;Total ram usage:        4 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_command_builder1
  5086 ;;		_command_builder3
  5087 ;;		_command_builder_add_string
  5088 ;;		_command_builder2
  5089 ;;		_command_builder4
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text31
  5094  00153E                     __ptext31:
  5095                           	opt stack 0
  5096  00153E                     _command_builder_add_char:
  5097                           	opt stack 24
  5098                           
  5099                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  5100                           
  5101                           ;incstack = 0
  5102  00153E  EE20 F028          	lfsr	2,40
  5103  001542  5013               	movf	command_builder_add_char@send_buffer,w,c
  5104  001544  26D9               	addwf	fsr2l,f,c
  5105  001546  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5106  001548  22DA               	addwfc	fsr2h,f,c
  5107  00154A  50DF               	movf	indf2,w,c
  5108  00154C  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5109  00154E  5016               	movf	??_command_builder_add_char,w,c
  5110  001550  0D01               	mullw	1
  5111  001552  50F3               	movf	prodl,w,c
  5112  001554  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5113  001556  6ED9               	movwf	fsr2l,c
  5114  001558  50F4               	movf	prodh,w,c
  5115  00155A  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5116  00155C  6EDA               	movwf	fsr2h,c
  5117  00155E  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5118                           
  5119                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  5120  001562  EE20 F028          	lfsr	2,40
  5121  001566  5013               	movf	command_builder_add_char@send_buffer,w,c
  5122  001568  26D9               	addwf	fsr2l,f,c
  5123  00156A  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5124  00156C  22DA               	addwfc	fsr2h,f,c
  5125  00156E  2ADF               	incf	indf2,f,c
  5126                           
  5127                           ;SlaveComm_PIC18.c: 491: if( send_buffer->write_position >= 40 )
  5128  001570  EE20 F028          	lfsr	2,40
  5129  001574  5013               	movf	command_builder_add_char@send_buffer,w,c
  5130  001576  26D9               	addwf	fsr2l,f,c
  5131  001578  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5132  00157A  22DA               	addwfc	fsr2h,f,c
  5133  00157C  0E27               	movlw	39
  5134  00157E  64DF               	cpfsgt	indf2,c
  5135  001580  0012               	return	
  5136                           
  5137                           ;SlaveComm_PIC18.c: 492: {
  5138                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  5139  001582  EE20 F028          	lfsr	2,40
  5140  001586  5013               	movf	command_builder_add_char@send_buffer,w,c
  5141  001588  26D9               	addwf	fsr2l,f,c
  5142  00158A  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5143  00158C  22DA               	addwfc	fsr2h,f,c
  5144  00158E  0E00               	movlw	0
  5145  001590  6EDF               	movwf	indf2,c
  5146  001592  0012               	return	
  5147  001594                     __end_of_command_builder_add_char:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           indf1	equ	0xFE7
  5159                           postinc1	equ	0xFE6
  5160                           postdec1	equ	0xFE5
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           fsr2h	equ	0xFDA
  5166                           fsr2l	equ	0xFD9
  5167                           status	equ	0xFD8
  5168                           
  5169 ;; *************** function _atol *****************
  5170 ;; Defined at:
  5171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5174 ;;		 -> process_data@parameters(50), 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  a               4   39[COMRAM] long 
  5177 ;;  c               1   43[COMRAM] unsigned char 
  5178 ;;  sign            1   38[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  4   30[COMRAM] long 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5188 ;;      Params:         4       0       0       0       0       0       0
  5189 ;;      Locals:         6       0       0       0       0       0       0
  5190 ;;      Temps:          4       0       0       0       0       0       0
  5191 ;;      Totals:        14       0       0       0       0       0       0
  5192 ;;Total ram usage:       14 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    2
  5195 ;; This function calls:
  5196 ;;		___lmul
  5197 ;;		_isdigit
  5198 ;; This function is called by:
  5199 ;;		_process_data_parameters
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text32
  5204  000D0C                     __ptext32:
  5205                           	opt stack 0
  5206  000D0C                     _atol:
  5207                           	opt stack 25
  5208                           
  5209                           ;incstack = 0
  5210  000D0C  C01F  FFD9         	movff	atol@s,fsr2l
  5211  000D10  C020  FFDA         	movff	atol@s+1,fsr2h
  5212  000D14  50DF               	movf	indf2,w,c
  5213  000D16  6E2C               	movwf	atol@c,c
  5214  000D18  4A1F               	infsnz	atol@s,f,c
  5215  000D1A  2A20               	incf	atol@s+1,f,c
  5216  000D1C  0E20               	movlw	32
  5217  000D1E  182C               	xorwf	atol@c,w,c
  5218  000D20  B4D8               	btfsc	status,2,c
  5219  000D22  D7F4               	goto	_atol
  5220  000D24  0E09               	movlw	9
  5221  000D26  182C               	xorwf	atol@c,w,c
  5222  000D28  B4D8               	btfsc	status,2,c
  5223  000D2A  D7F0               	goto	_atol
  5224  000D2C  0E00               	movlw	0
  5225  000D2E  6E28               	movwf	atol@a,c
  5226  000D30  0E00               	movlw	0
  5227  000D32  6E29               	movwf	atol@a+1,c
  5228  000D34  0E00               	movlw	0
  5229  000D36  6E2A               	movwf	atol@a+2,c
  5230  000D38  0E00               	movlw	0
  5231  000D3A  6E2B               	movwf	atol@a+3,c
  5232  000D3C  0E00               	movlw	0
  5233  000D3E  6E27               	movwf	atol@sign,c
  5234  000D40  0E2D               	movlw	45
  5235  000D42  182C               	xorwf	atol@c,w,c
  5236  000D44  A4D8               	btfss	status,2,c
  5237  000D46  D002               	goto	l629
  5238  000D48  2A27               	incf	atol@sign,f,c
  5239  000D4A  D027               	goto	L8
  5240  000D4C                     l629:
  5241  000D4C  0E2B               	movlw	43
  5242  000D4E  182C               	xorwf	atol@c,w,c
  5243  000D50  A4D8               	btfss	status,2,c
  5244  000D52  D02B               	goto	l632
  5245  000D54  D022               	goto	L8
  5246  000D56  C028  F013         	movff	atol@a,___lmul@multiplier
  5247  000D5A  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5248  000D5E  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5249  000D62  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5250  000D66  0E0A               	movlw	10
  5251  000D68  6E17               	movwf	___lmul@multiplicand,c
  5252  000D6A  0E00               	movlw	0
  5253  000D6C  6E18               	movwf	___lmul@multiplicand+1,c
  5254  000D6E  0E00               	movlw	0
  5255  000D70  6E19               	movwf	___lmul@multiplicand+2,c
  5256  000D72  0E00               	movlw	0
  5257  000D74  6E1A               	movwf	___lmul@multiplicand+3,c
  5258  000D76  ECCA  F00A         	call	___lmul	;wreg free
  5259  000D7A  C02C  F023         	movff	atol@c,??_atol
  5260  000D7E  0ED0               	movlw	208
  5261  000D80  2623               	addwf	??_atol,f,c
  5262  000D82  5023               	movf	??_atol,w,c
  5263  000D84  2413               	addwf	?___lmul,w,c
  5264  000D86  6E28               	movwf	atol@a,c
  5265  000D88  0E00               	movlw	0
  5266  000D8A  2014               	addwfc	?___lmul+1,w,c
  5267  000D8C  6E29               	movwf	atol@a+1,c
  5268  000D8E  0E00               	movlw	0
  5269  000D90  2015               	addwfc	?___lmul+2,w,c
  5270  000D92  6E2A               	movwf	atol@a+2,c
  5271  000D94  0E00               	movlw	0
  5272  000D96  2016               	addwfc	?___lmul+3,w,c
  5273  000D98  6E2B               	movwf	atol@a+3,c
  5274  000D9A                     L8:
  5275  000D9A  C01F  FFD9         	movff	atol@s,fsr2l
  5276  000D9E  C020  FFDA         	movff	atol@s+1,fsr2h
  5277  000DA2  50DF               	movf	indf2,w,c
  5278  000DA4  6E2C               	movwf	atol@c,c
  5279  000DA6  4A1F               	infsnz	atol@s,f,c
  5280  000DA8  2A20               	incf	atol@s+1,f,c
  5281  000DAA                     l632:
  5282  000DAA  502C               	movf	atol@c,w,c
  5283  000DAC  EC45  F00C         	call	_isdigit
  5284  000DB0  B0D8               	btfsc	status,0,c
  5285  000DB2  D7D1               	goto	l633
  5286  000DB4  5027               	movf	atol@sign,w,c
  5287  000DB6  B4D8               	btfsc	status,2,c
  5288  000DB8  D01A               	goto	l635
  5289  000DBA  C028  F023         	movff	atol@a,??_atol
  5290  000DBE  C029  F024         	movff	atol@a+1,??_atol+1
  5291  000DC2  C02A  F025         	movff	atol@a+2,??_atol+2
  5292  000DC6  C02B  F026         	movff	atol@a+3,??_atol+3
  5293  000DCA  1E23               	comf	??_atol,f,c
  5294  000DCC  1E24               	comf	??_atol+1,f,c
  5295  000DCE  1E25               	comf	??_atol+2,f,c
  5296  000DD0  1E26               	comf	??_atol+3,f,c
  5297  000DD2  2A23               	incf	??_atol,f,c
  5298  000DD4  0E00               	movlw	0
  5299  000DD6  2224               	addwfc	??_atol+1,f,c
  5300  000DD8  2225               	addwfc	??_atol+2,f,c
  5301  000DDA  2226               	addwfc	??_atol+3,f,c
  5302  000DDC  C023  F01F         	movff	??_atol,?_atol
  5303  000DE0  C024  F020         	movff	??_atol+1,?_atol+1
  5304  000DE4  C025  F021         	movff	??_atol+2,?_atol+2
  5305  000DE8  C026  F022         	movff	??_atol+3,?_atol+3
  5306  000DEC  0012               	return	
  5307  000DEE                     l635:
  5308  000DEE  C028  F01F         	movff	atol@a,?_atol
  5309  000DF2  C029  F020         	movff	atol@a+1,?_atol+1
  5310  000DF6  C02A  F021         	movff	atol@a+2,?_atol+2
  5311  000DFA  C02B  F022         	movff	atol@a+3,?_atol+3
  5312  000DFE  0012               	return		;funcret
  5313  000E00                     __end_of_atol:
  5314                           	opt stack 0
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           indf1	equ	0xFE7
  5325                           postinc1	equ	0xFE6
  5326                           postdec1	equ	0xFE5
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           fsr2h	equ	0xFDA
  5332                           fsr2l	equ	0xFD9
  5333                           status	equ	0xFD8
  5334                           
  5335 ;; *************** function _isdigit *****************
  5336 ;; Defined at:
  5337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  c               1    wreg     unsigned char 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  c               1   20[COMRAM] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;		None               void
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5351 ;;      Params:         0       0       0       0       0       0       0
  5352 ;;      Locals:         2       0       0       0       0       0       0
  5353 ;;      Temps:          1       0       0       0       0       0       0
  5354 ;;      Totals:         3       0       0       0       0       0       0
  5355 ;;Total ram usage:        3 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_atol
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text33
  5366  00188A                     __ptext33:
  5367                           	opt stack 0
  5368  00188A                     _isdigit:
  5369                           	opt stack 25
  5370                           
  5371                           ;incstack = 0
  5372                           ;isdigit@c stored from wreg
  5373  00188A  6E15               	movwf	isdigit@c,c
  5374  00188C  0E00               	movlw	0
  5375  00188E  6E14               	movwf	_isdigit$2072,c
  5376  001890  0E3A               	movlw	58
  5377  001892  6015               	cpfslt	isdigit@c,c
  5378  001894  D005               	goto	l807
  5379  001896  0E2F               	movlw	47
  5380  001898  6415               	cpfsgt	isdigit@c,c
  5381  00189A  D002               	goto	l807
  5382  00189C  0E01               	movlw	1
  5383  00189E  6E14               	movwf	_isdigit$2072,c
  5384  0018A0                     l807:
  5385  0018A0  C014  F013         	movff	_isdigit$2072,??_isdigit
  5386  0018A4  3013               	rrcf	??_isdigit,w,c
  5387  0018A6  0012               	return	
  5388  0018A8                     __end_of_isdigit:
  5389                           	opt stack 0
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           prodh	equ	0xFF4
  5395                           prodl	equ	0xFF3
  5396                           intcon	equ	0xFF2
  5397                           postinc0	equ	0xFEE
  5398                           wreg	equ	0xFE8
  5399                           indf1	equ	0xFE7
  5400                           postinc1	equ	0xFE6
  5401                           postdec1	equ	0xFE5
  5402                           fsr1h	equ	0xFE2
  5403                           fsr1l	equ	0xFE1
  5404                           indf2	equ	0xFDF
  5405                           postinc2	equ	0xFDE
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function ___lmul *****************
  5411 ;; Defined at:
  5412 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  multiplier      4   18[COMRAM] unsigned long 
  5415 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  product         4   26[COMRAM] unsigned long 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  4   18[COMRAM] unsigned long 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5427 ;;      Params:         8       0       0       0       0       0       0
  5428 ;;      Locals:         4       0       0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0
  5430 ;;      Totals:        12       0       0       0       0       0       0
  5431 ;;Total ram usage:       12 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_powerPulseCheck
  5438 ;;		_atol
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text34
  5443  001594                     __ptext34:
  5444                           	opt stack 0
  5445  001594                     ___lmul:
  5446                           	opt stack 28
  5447                           
  5448                           ;incstack = 0
  5449  001594  0E00               	movlw	0
  5450  001596  6E1B               	movwf	___lmul@product,c
  5451  001598  0E00               	movlw	0
  5452  00159A  6E1C               	movwf	___lmul@product+1,c
  5453  00159C  0E00               	movlw	0
  5454  00159E  6E1D               	movwf	___lmul@product+2,c
  5455  0015A0  0E00               	movlw	0
  5456  0015A2  6E1E               	movwf	___lmul@product+3,c
  5457  0015A4  A013               	btfss	___lmul@multiplier,0,c
  5458  0015A6  D008               	goto	l476
  5459  0015A8  5017               	movf	___lmul@multiplicand,w,c
  5460  0015AA  261B               	addwf	___lmul@product,f,c
  5461  0015AC  5018               	movf	___lmul@multiplicand+1,w,c
  5462  0015AE  221C               	addwfc	___lmul@product+1,f,c
  5463  0015B0  5019               	movf	___lmul@multiplicand+2,w,c
  5464  0015B2  221D               	addwfc	___lmul@product+2,f,c
  5465  0015B4  501A               	movf	___lmul@multiplicand+3,w,c
  5466  0015B6  221E               	addwfc	___lmul@product+3,f,c
  5467  0015B8                     l476:
  5468  0015B8  90D8               	bcf	status,0,c
  5469  0015BA  3617               	rlcf	___lmul@multiplicand,f,c
  5470  0015BC  3618               	rlcf	___lmul@multiplicand+1,f,c
  5471  0015BE  3619               	rlcf	___lmul@multiplicand+2,f,c
  5472  0015C0  361A               	rlcf	___lmul@multiplicand+3,f,c
  5473  0015C2  90D8               	bcf	status,0,c
  5474  0015C4  3216               	rrcf	___lmul@multiplier+3,f,c
  5475  0015C6  3215               	rrcf	___lmul@multiplier+2,f,c
  5476  0015C8  3214               	rrcf	___lmul@multiplier+1,f,c
  5477  0015CA  3213               	rrcf	___lmul@multiplier,f,c
  5478  0015CC  5013               	movf	___lmul@multiplier,w,c
  5479  0015CE  1014               	iorwf	___lmul@multiplier+1,w,c
  5480  0015D0  1015               	iorwf	___lmul@multiplier+2,w,c
  5481  0015D2  1016               	iorwf	___lmul@multiplier+3,w,c
  5482  0015D4  A4D8               	btfss	status,2,c
  5483  0015D6  D7E6               	goto	l475
  5484  0015D8  C01B  F013         	movff	___lmul@product,?___lmul
  5485  0015DC  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5486  0015E0  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5487  0015E4  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5488  0015E8  0012               	return		;funcret
  5489  0015EA                     __end_of___lmul:
  5490                           	opt stack 0
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           prodh	equ	0xFF4
  5496                           prodl	equ	0xFF3
  5497                           intcon	equ	0xFF2
  5498                           postinc0	equ	0xFEE
  5499                           wreg	equ	0xFE8
  5500                           indf1	equ	0xFE7
  5501                           postinc1	equ	0xFE6
  5502                           postdec1	equ	0xFE5
  5503                           fsr1h	equ	0xFE2
  5504                           fsr1l	equ	0xFE1
  5505                           indf2	equ	0xFDF
  5506                           postinc2	equ	0xFDE
  5507                           fsr2h	equ	0xFDA
  5508                           fsr2l	equ	0xFD9
  5509                           status	equ	0xFD8
  5510                           
  5511 ;; *************** function _process_data_parameterize *****************
  5512 ;; Defined at:
  5513 ;;		line 280 in file "SlaveComm_PIC18.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5516 ;;		 -> process_data@parameters(50), 
  5517 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5518 ;;		 -> communications@receive_buffer(42), 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  inx             2   31[COMRAM] int 
  5521 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5522 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      void 
  5525 ;; Registers used:
  5526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5532 ;;      Params:         4       0       0       0       0       0       0
  5533 ;;      Locals:         4       0       0       0       0       0       0
  5534 ;;      Temps:          3       0       0       0       0       0       0
  5535 ;;      Totals:        11       0       0       0       0       0       0
  5536 ;;Total ram usage:       11 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; Hardware stack levels required when called:    2
  5539 ;; This function calls:
  5540 ;;		___wmul
  5541 ;; This function is called by:
  5542 ;;		_process_data
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text35
  5547  000852                     __ptext35:
  5548                           	opt stack 0
  5549  000852                     _process_data_parameterize:
  5550                           	opt stack 26
  5551                           
  5552                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5553                           
  5554                           ;incstack = 0
  5555  000852  0E00               	movlw	0
  5556  000854  6E23               	movwf	process_data_parameterize@parameter_position,c
  5557                           
  5558                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5559  000856  0E00               	movlw	0
  5560  000858  6E22               	movwf	process_data_parameterize@parameter_index,c
  5561                           
  5562                           ;SlaveComm_PIC18.c: 292: for( int inx = 0; inx < 5; inx++ )
  5563  00085A  0E00               	movlw	0
  5564  00085C  6E21               	movwf	process_data_parameterize@inx+1,c
  5565  00085E  0E00               	movlw	0
  5566  000860  6E20               	movwf	process_data_parameterize@inx,c
  5567  000862  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5568  000864  D008               	goto	l336
  5569  000866  5021               	movf	process_data_parameterize@inx+1,w,c
  5570  000868  E105               	bnz	u2580
  5571  00086A  0E05               	movlw	5
  5572  00086C  5C20               	subwf	process_data_parameterize@inx,w,c
  5573  00086E  B0D8               	btfsc	status,0,c
  5574  000870  D082               	goto	l338
  5575  000872  D001               	goto	l336
  5576  000874                     u2580:
  5577  000874  D080               	goto	l338
  5578  000876                     l336:
  5579                           
  5580                           ;SlaveComm_PIC18.c: 293: {
  5581                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5582  000876  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5583  00087A  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5584  00087E  0E00               	movlw	0
  5585  000880  6E16               	movwf	___wmul@multiplicand+1,c
  5586  000882  0E0A               	movlw	10
  5587  000884  6E15               	movwf	___wmul@multiplicand,c
  5588  000886  EC00  F00C         	call	___wmul	;wreg free
  5589  00088A  5013               	movf	?___wmul,w,c
  5590  00088C  2419               	addwf	process_data_parameterize@parameters,w,c
  5591  00088E  6ED9               	movwf	fsr2l,c
  5592  000890  5014               	movf	?___wmul+1,w,c
  5593  000892  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5594  000894  6EDA               	movwf	fsr2h,c
  5595  000896  0E00               	movlw	0
  5596  000898  6EDF               	movwf	indf2,c
  5597  00089A  4A20               	infsnz	process_data_parameterize@inx,f,c
  5598  00089C  2A21               	incf	process_data_parameterize@inx+1,f,c
  5599  00089E  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5600  0008A0  D7EA               	goto	l336
  5601  0008A2  5021               	movf	process_data_parameterize@inx+1,w,c
  5602  0008A4  E168               	bnz	l3156
  5603  0008A6  D7E1               	goto	L6
  5604  0008A8                     
  5605                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5606  0008A8  0E00               	movlw	0
  5607  0008AA  6E23               	movwf	process_data_parameterize@parameter_position,c
  5608                           
  5609                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5610  0008AC  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5611                           
  5612                           ;SlaveComm_PIC18.c: 309: if( parameter_index >= 5 )
  5613  0008AE  0E04               	movlw	4
  5614  0008B0  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5615  0008B2  D05A               	goto	l342
  5616                           
  5617                           ;SlaveComm_PIC18.c: 310: {
  5618                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5619  0008B4  0E04               	movlw	4
  5620  0008B6  6E22               	movwf	process_data_parameterize@parameter_index,c
  5621                           
  5622                           ;SlaveComm_PIC18.c: 314: }
  5623                           ;SlaveComm_PIC18.c: 316: break;
  5624  0008B8  D057               	goto	l342
  5625  0008BA                     
  5626                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5627  0008BA  EE20 F029          	lfsr	2,41
  5628  0008BE  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5629  0008C0  26D9               	addwf	fsr2l,f,c
  5630  0008C2  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5631  0008C4  22DA               	addwfc	fsr2h,f,c
  5632  0008C6  50DF               	movf	indf2,w,c
  5633  0008C8  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5634  0008CA  501D               	movf	??_process_data_parameterize,w,c
  5635  0008CC  0D01               	mullw	1
  5636  0008CE  50F3               	movf	prodl,w,c
  5637  0008D0  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5638  0008D2  6ED9               	movwf	fsr2l,c
  5639  0008D4  50F4               	movf	prodh,w,c
  5640  0008D6  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5641  0008D8  6EDA               	movwf	fsr2h,c
  5642  0008DA  5022               	movf	process_data_parameterize@parameter_index,w,c
  5643  0008DC  0D0A               	mullw	10
  5644  0008DE  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5645  0008E2  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5646  0008E6  50F3               	movf	prodl,w,c
  5647  0008E8  261E               	addwf	??_process_data_parameterize+1,f,c
  5648  0008EA  50F4               	movf	prodh,w,c
  5649  0008EC  221F               	addwfc	??_process_data_parameterize+2,f,c
  5650  0008EE  5023               	movf	process_data_parameterize@parameter_position,w,c
  5651  0008F0  0D01               	mullw	1
  5652  0008F2  50F3               	movf	prodl,w,c
  5653  0008F4  241E               	addwf	??_process_data_parameterize+1,w,c
  5654  0008F6  6EE1               	movwf	fsr1l,c
  5655  0008F8  50F4               	movf	prodh,w,c
  5656  0008FA  201F               	addwfc	??_process_data_parameterize+2,w,c
  5657  0008FC  6EE2               	movwf	fsr1h,c
  5658  0008FE  CFDF FFE7          	movff	indf2,indf1
  5659                           
  5660                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5661  000902  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5662                           
  5663                           ;SlaveComm_PIC18.c: 321: if( parameter_position >= 10 )
  5664  000904  0E09               	movlw	9
  5665  000906  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5666  000908  D002               	goto	l346
  5667                           
  5668                           ;SlaveComm_PIC18.c: 322: {
  5669                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5670  00090A  0E09               	movlw	9
  5671  00090C  6E23               	movwf	process_data_parameterize@parameter_position,c
  5672  00090E                     l346:
  5673                           
  5674                           ;SlaveComm_PIC18.c: 326: }
  5675                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5676  00090E  5022               	movf	process_data_parameterize@parameter_index,w,c
  5677  000910  0D0A               	mullw	10
  5678  000912  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5679  000916  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5680  00091A  50F3               	movf	prodl,w,c
  5681  00091C  261D               	addwf	??_process_data_parameterize,f,c
  5682  00091E  50F4               	movf	prodh,w,c
  5683  000920  221E               	addwfc	??_process_data_parameterize+1,f,c
  5684  000922  5023               	movf	process_data_parameterize@parameter_position,w,c
  5685  000924  0D01               	mullw	1
  5686  000926  50F3               	movf	prodl,w,c
  5687  000928  241D               	addwf	??_process_data_parameterize,w,c
  5688  00092A  6ED9               	movwf	fsr2l,c
  5689  00092C  50F4               	movf	prodh,w,c
  5690  00092E  201E               	addwfc	??_process_data_parameterize+1,w,c
  5691  000930  6EDA               	movwf	fsr2h,c
  5692  000932  0E00               	movlw	0
  5693  000934  6EDF               	movwf	indf2,c
  5694                           
  5695                           ;SlaveComm_PIC18.c: 331: }
  5696                           
  5697                           ;SlaveComm_PIC18.c: 330: break;
  5698  000936  D018               	goto	l342
  5699  000938  EE20 F029          	lfsr	2,41
  5700  00093C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5701  00093E  26D9               	addwf	fsr2l,f,c
  5702  000940  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5703  000942  22DA               	addwfc	fsr2h,f,c
  5704  000944  50DF               	movf	indf2,w,c
  5705  000946  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5706  000948  501D               	movf	??_process_data_parameterize,w,c
  5707  00094A  0D01               	mullw	1
  5708  00094C  50F3               	movf	prodl,w,c
  5709  00094E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5710  000950  6ED9               	movwf	fsr2l,c
  5711  000952  50F4               	movf	prodh,w,c
  5712  000954  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5713  000956  6EDA               	movwf	fsr2h,c
  5714  000958  50DF               	movf	indf2,w,c
  5715                           
  5716                           ; Switch size 1, requested type "space"
  5717                           ; Number of cases is 2, Range of values is 33 to 59
  5718                           ; switch strategies available:
  5719                           ; Name         Instructions Cycles
  5720                           ; simple_byte            7     4 (average)
  5721                           ;	Chosen strategy is simple_byte
  5722  00095A  0A21               	xorlw	33	; case 33
  5723  00095C  B4D8               	btfsc	status,2,c
  5724  00095E  D004               	goto	l342
  5725  000960  0A1A               	xorlw	26	; case 59
  5726  000962  B4D8               	btfsc	status,2,c
  5727  000964  D7A1               	goto	l343
  5728  000966  D7A9               	goto	l345
  5729  000968                     l342:
  5730                           
  5731                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5732  000968  EE20 F029          	lfsr	2,41
  5733  00096C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5734  00096E  26D9               	addwf	fsr2l,f,c
  5735  000970  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5736  000972  22DA               	addwfc	fsr2h,f,c
  5737  000974  2ADF               	incf	indf2,f,c
  5738  000976                     l338:
  5739  000976                     l3156:
  5740  000976  EE20 F029          	lfsr	2,41
  5741  00097A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5742  00097C  26D9               	addwf	fsr2l,f,c
  5743  00097E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5744  000980  22DA               	addwfc	fsr2h,f,c
  5745  000982  50DF               	movf	indf2,w,c
  5746  000984  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5747  000986  501D               	movf	??_process_data_parameterize,w,c
  5748  000988  0D01               	mullw	1
  5749  00098A  50F3               	movf	prodl,w,c
  5750  00098C  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5751  00098E  6ED9               	movwf	fsr2l,c
  5752  000990  50F4               	movf	prodh,w,c
  5753  000992  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5754  000994  6EDA               	movwf	fsr2h,c
  5755  000996  0E2A               	movlw	42
  5756  000998  18DE               	xorwf	postinc2,w,c
  5757  00099A  B4D8               	btfsc	status,2,c
  5758  00099C  0012               	return	
  5759  00099E  EE20 F029          	lfsr	2,41
  5760  0009A2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5761  0009A4  26D9               	addwf	fsr2l,f,c
  5762  0009A6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5763  0009A8  22DA               	addwfc	fsr2h,f,c
  5764  0009AA  0E28               	movlw	40
  5765  0009AC  60DF               	cpfslt	indf2,c
  5766  0009AE  0012               	return	
  5767  0009B0  EE20 F028          	lfsr	2,40
  5768  0009B4  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5769  0009B6  26D9               	addwf	fsr2l,f,c
  5770  0009B8  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5771  0009BA  22DA               	addwfc	fsr2h,f,c
  5772  0009BC  EE10 F029          	lfsr	1,41
  5773  0009C0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5774  0009C2  26E1               	addwf	fsr1l,f,c
  5775  0009C4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5776  0009C6  22E2               	addwfc	fsr1h,f,c
  5777  0009C8  50DE               	movf	postinc2,w,c
  5778  0009CA  18E6               	xorwf	postinc1,w,c
  5779  0009CC  B4D8               	btfsc	status,2,c
  5780  0009CE  0012               	return	
  5781  0009D0  D7B3               	goto	l340
  5782  0009D2                     __end_of_process_data_parameterize:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           postinc0	equ	0xFEE
  5792                           wreg	equ	0xFE8
  5793                           indf1	equ	0xFE7
  5794                           postinc1	equ	0xFE6
  5795                           postdec1	equ	0xFE5
  5796                           fsr1h	equ	0xFE2
  5797                           fsr1l	equ	0xFE1
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function ___wmul *****************
  5805 ;; Defined at:
  5806 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  multiplier      2   18[COMRAM] unsigned int 
  5809 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  product         2   22[COMRAM] unsigned int 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  2   18[COMRAM] unsigned int 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0, prodl, prodh
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5821 ;;      Params:         4       0       0       0       0       0       0
  5822 ;;      Locals:         2       0       0       0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0
  5824 ;;      Totals:         6       0       0       0       0       0       0
  5825 ;;Total ram usage:        6 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    1
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		_process_data_parameterize
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text36
  5836  001800                     __ptext36:
  5837                           	opt stack 0
  5838  001800                     ___wmul:
  5839                           	opt stack 26
  5840                           
  5841                           ;incstack = 0
  5842  001800  5013               	movf	___wmul@multiplier,w,c
  5843  001802  0215               	mulwf	___wmul@multiplicand,c
  5844  001804  CFF3 F017          	movff	prodl,___wmul@product
  5845  001808  CFF4 F018          	movff	prodh,___wmul@product+1
  5846  00180C  5013               	movf	___wmul@multiplier,w,c
  5847  00180E  0216               	mulwf	___wmul@multiplicand+1,c
  5848  001810  50F3               	movf	prodl,w,c
  5849  001812  2618               	addwf	___wmul@product+1,f,c
  5850  001814  5014               	movf	___wmul@multiplier+1,w,c
  5851  001816  0215               	mulwf	___wmul@multiplicand,c
  5852  001818  50F3               	movf	prodl,w,c
  5853  00181A  2618               	addwf	___wmul@product+1,f,c
  5854  00181C  C017  F013         	movff	___wmul@product,?___wmul
  5855  001820  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5856  001824  0012               	return	
  5857  001826                     __end_of___wmul:
  5858                           	opt stack 0
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodh	equ	0xFF4
  5864                           prodl	equ	0xFF3
  5865                           intcon	equ	0xFF2
  5866                           postinc0	equ	0xFEE
  5867                           wreg	equ	0xFE8
  5868                           indf1	equ	0xFE7
  5869                           postinc1	equ	0xFE6
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           indf2	equ	0xFDF
  5874                           postinc2	equ	0xFDE
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _SPISlaveInit *****************
  5880 ;; Defined at:
  5881 ;;		line 715 in file "SlaveComm_PIC18.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5895 ;;      Params:         0       0       0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    1
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_communications
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text37
  5910  0016D0                     __ptext37:
  5911                           	opt stack 0
  5912  0016D0                     _SPISlaveInit:
  5913                           	opt stack 28
  5914                           
  5915                           ;SlaveComm_PIC18.c: 718: TRISAbits.TRISA0 = 0;
  5916                           
  5917                           ;incstack = 0
  5918  0016D0  9092               	bcf	3986,0,c	;volatile
  5919                           
  5920                           ;SlaveComm_PIC18.c: 719: TRISAbits.TRISA1 = 1;
  5921  0016D2  8292               	bsf	3986,1,c	;volatile
  5922                           
  5923                           ;SlaveComm_PIC18.c: 721: TRISCbits.TRISC3 = 0;
  5924  0016D4  9694               	bcf	3988,3,c	;volatile
  5925                           
  5926                           ;SlaveComm_PIC18.c: 722: TRISCbits.TRISC5 = 0;
  5927  0016D6  9A94               	bcf	3988,5,c	;volatile
  5928                           
  5929                           ;SlaveComm_PIC18.c: 723: TRISCbits.TRISC6 = 0;
  5930  0016D8  9C94               	bcf	3988,6,c	;volatile
  5931                           
  5932                           ;SlaveComm_PIC18.c: 724: TRISCbits.TRISC7 = 0;
  5933  0016DA  9E94               	bcf	3988,7,c	;volatile
  5934                           
  5935                           ;SlaveComm_PIC18.c: 725: ANSELAbits.ANSA1 = 0b0;
  5936  0016DC  010F               	movlb	15	; () banked
  5937  0016DE  9338               	bcf	56,1,b	;volatile
  5938                           
  5939                           ;SlaveComm_PIC18.c: 727: LATCbits.LATC6 = 1;
  5940  0016E0  8C8B               	bsf	3979,6,c	;volatile
  5941                           
  5942                           ;SlaveComm_PIC18.c: 728: LATCbits.LATC3 = 1;
  5943  0016E2  868B               	bsf	3979,3,c	;volatile
  5944                           
  5945                           ;SlaveComm_PIC18.c: 729: LATCbits.LATC5 = 1;
  5946  0016E4  8A8B               	bsf	3979,5,c	;volatile
  5947                           
  5948                           ;SlaveComm_PIC18.c: 730: LATCbits.LATC7 = 1;
  5949  0016E6  8E8B               	bsf	3979,7,c	;volatile
  5950                           
  5951                           ;SlaveComm_PIC18.c: 733: SSP2CON1bits.SSPEN = 0;
  5952  0016E8  9A6C               	bcf	3948,5,c	;volatile
  5953                           
  5954                           ;SlaveComm_PIC18.c: 735: ANSELBbits.ANSB0 = 0b0;
  5955  0016EA  9139               	bcf	57,0,b	;volatile
  5956                           
  5957                           ;SlaveComm_PIC18.c: 736: ANSELBbits.ANSB1 = 0b0;
  5958  0016EC  9339               	bcf	57,1,b	;volatile
  5959                           
  5960                           ;SlaveComm_PIC18.c: 737: ANSELBbits.ANSB2 = 0b0;
  5961  0016EE  9539               	bcf	57,2,b	;volatile
  5962                           
  5963                           ;SlaveComm_PIC18.c: 738: ANSELBbits.ANSB3 = 0b0;
  5964  0016F0  9739               	bcf	57,3,b	;volatile
  5965                           
  5966                           ;SlaveComm_PIC18.c: 740: TRISBbits.RB0 = 0b1;
  5967  0016F2  8093               	bsf	3987,0,c	;volatile
  5968                           
  5969                           ;SlaveComm_PIC18.c: 741: TRISBbits.RB1 = 0b1;
  5970  0016F4  8293               	bsf	3987,1,c	;volatile
  5971                           
  5972                           ;SlaveComm_PIC18.c: 742: TRISBbits.RB2 = 0b1;
  5973  0016F6  8493               	bsf	3987,2,c	;volatile
  5974                           
  5975                           ;SlaveComm_PIC18.c: 743: TRISBbits.RB3 = 0b0;
  5976  0016F8  9693               	bcf	3987,3,c	;volatile
  5977                           
  5978                           ;SlaveComm_PIC18.c: 745: SSP2STATbits.SMP = 0;
  5979  0016FA  9E6D               	bcf	3949,7,c	;volatile
  5980                           
  5981                           ;SlaveComm_PIC18.c: 746: SSP2STATbits.CKE = 1;
  5982  0016FC  8C6D               	bsf	3949,6,c	;volatile
  5983                           
  5984                           ;SlaveComm_PIC18.c: 748: SSP2CON1bits.WCOL = 0;
  5985  0016FE  9E6C               	bcf	3948,7,c	;volatile
  5986                           
  5987                           ;SlaveComm_PIC18.c: 749: SSP2CON1bits.SSPOV = 0;
  5988  001700  9C6C               	bcf	3948,6,c	;volatile
  5989                           
  5990                           ;SlaveComm_PIC18.c: 750: SSP2CON1bits.SSPEN = 0;
  5991  001702  9A6C               	bcf	3948,5,c	;volatile
  5992                           
  5993                           ;SlaveComm_PIC18.c: 751: SSP2CON1bits.CKP = 1;
  5994  001704  886C               	bsf	3948,4,c	;volatile
  5995                           
  5996                           ; BSR set to: 15
  5997                           ;SlaveComm_PIC18.c: 752: SSP2CON1bits.SSPM = 0b0100;
  5998  001706  506C               	movf	3948,w,c	;volatile
  5999  001708  0BF0               	andlw	-16
  6000  00170A  0904               	iorlw	4
  6001  00170C  6E6C               	movwf	3948,c	;volatile
  6002                           
  6003                           ;SlaveComm_PIC18.c: 755: SSP2CON3 = 0x00;
  6004  00170E  0E00               	movlw	0
  6005  001710  6E69               	movwf	3945,c	;volatile
  6006                           
  6007                           ; BSR set to: 15
  6008                           ;SlaveComm_PIC18.c: 756: SSP2CON3bits.BOEN = 0b0;
  6009  001712  9869               	bcf	3945,4,c	;volatile
  6010                           
  6011                           ; BSR set to: 15
  6012                           ;SlaveComm_PIC18.c: 758: SSP2CON1bits.SSPEN = 1;
  6013  001714  8A6C               	bsf	3948,5,c	;volatile
  6014  001716  0012               	return	
  6015  001718                     __end_of_SPISlaveInit:
  6016                           	opt stack 0
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           prodh	equ	0xFF4
  6022                           prodl	equ	0xFF3
  6023                           intcon	equ	0xFF2
  6024                           postinc0	equ	0xFEE
  6025                           wreg	equ	0xFE8
  6026                           indf1	equ	0xFE7
  6027                           postinc1	equ	0xFE6
  6028                           postdec1	equ	0xFE5
  6029                           fsr1h	equ	0xFE2
  6030                           fsr1l	equ	0xFE1
  6031                           indf2	equ	0xFDF
  6032                           postinc2	equ	0xFDE
  6033                           fsr2h	equ	0xFDA
  6034                           fsr2l	equ	0xFD9
  6035                           status	equ	0xFD8
  6036                           
  6037 ;; *************** function _Timer0_ISR *****************
  6038 ;; Defined at:
  6039 ;;		line 396 in file "Current_Sense_Main.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6053 ;;      Params:         0       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0
  6055 ;;      Temps:         18       0       0       0       0       0       0
  6056 ;;      Totals:        18       0       0       0       0       0       0
  6057 ;;Total ram usage:       18 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		Interrupt level 2
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	intcode
  6067  000008                     __pintcode:
  6068                           	opt stack 0
  6069  000008                     _Timer0_ISR:
  6070                           	opt stack 23
  6071                           
  6072                           ; BSR set to: 15
  6073                           ;incstack = 0
  6074  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6075  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6076  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6077  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6078  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6079  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6080  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6081  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6082  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6083  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6084  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6085  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6086  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6087  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6088  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6089  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6090  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6091  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6092  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6093                           
  6094                           ;Current_Sense_Main.c: 399: INTCONbits.TMR0IF = 0;
  6095  000052  94F2               	bcf	intcon,2,c	;volatile
  6096                           
  6097                           ;Current_Sense_Main.c: 401: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6098  000054  0EFC               	movlw	252
  6099  000056  6ED7               	movwf	4055,c	;volatile
  6100                           
  6101                           ;Current_Sense_Main.c: 402: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6102  000058  0E18               	movlw	24
  6103  00005A  6ED6               	movwf	4054,c	;volatile
  6104                           
  6105                           ;Current_Sense_Main.c: 404: timerCountHF++;
  6106  00005C  0E01               	movlw	1
  6107  00005E  2648               	addwf	_timerCountHF,f,c	;volatile
  6108  000060  0E00               	movlw	0
  6109  000062  2249               	addwfc	_timerCountHF+1,f,c	;volatile
  6110  000064  224A               	addwfc	_timerCountHF+2,f,c	;volatile
  6111  000066  224B               	addwfc	_timerCountHF+3,f,c	;volatile
  6112                           
  6113                           ;Current_Sense_Main.c: 405: timerCountLF++;
  6114  000068  0E01               	movlw	1
  6115  00006A  263A               	addwf	_timerCountLF,f,c	;volatile
  6116  00006C  0E00               	movlw	0
  6117  00006E  223B               	addwfc	_timerCountLF+1,f,c	;volatile
  6118  000070  223C               	addwfc	_timerCountLF+2,f,c	;volatile
  6119  000072  223D               	addwfc	_timerCountLF+3,f,c	;volatile
  6120                           
  6121                           ;Current_Sense_Main.c: 407: return;
  6122  000074  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6123  000078  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6124  00007C  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6125  000080  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6126  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6127  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6128  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6129  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6130  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6131  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6132  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6133  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6134  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6135  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6136  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6137  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6138  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6139  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6140  0000BC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6141  0000BE  0011               	retfie		f
  6142  0000C0                     __end_of_Timer0_ISR:
  6143                           	opt stack 0
  6144                           pclatu	equ	0xFFB
  6145                           pclath	equ	0xFFA
  6146                           tblptru	equ	0xFF8
  6147                           tblptrh	equ	0xFF7
  6148                           tblptrl	equ	0xFF6
  6149                           tablat	equ	0xFF5
  6150                           prodh	equ	0xFF4
  6151                           prodl	equ	0xFF3
  6152                           intcon	equ	0xFF2
  6153                           postinc0	equ	0xFEE
  6154                           fsr0h	equ	0xFEA
  6155                           fsr0l	equ	0xFE9
  6156                           wreg	equ	0xFE8
  6157                           indf1	equ	0xFE7
  6158                           postinc1	equ	0xFE6
  6159                           postdec1	equ	0xFE5
  6160                           fsr1h	equ	0xFE2
  6161                           fsr1l	equ	0xFE1
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           fsr2h	equ	0xFDA
  6165                           fsr2l	equ	0xFD9
  6166                           status	equ	0xFD8
  6167                           pclatu	equ	0xFFB
  6168                           pclath	equ	0xFFA
  6169                           tblptru	equ	0xFF8
  6170                           tblptrh	equ	0xFF7
  6171                           tblptrl	equ	0xFF6
  6172                           tablat	equ	0xFF5
  6173                           prodh	equ	0xFF4
  6174                           prodl	equ	0xFF3
  6175                           intcon	equ	0xFF2
  6176                           postinc0	equ	0xFEE
  6177                           fsr0h	equ	0xFEA
  6178                           fsr0l	equ	0xFE9
  6179                           wreg	equ	0xFE8
  6180                           indf1	equ	0xFE7
  6181                           postinc1	equ	0xFE6
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           fsr2h	equ	0xFDA
  6188                           fsr2l	equ	0xFD9
  6189                           status	equ	0xFD8
  6190                           
  6191                           	psect	rparam
  6192  0000                     pclatu	equ	0xFFB
  6193                           pclath	equ	0xFFA
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           postinc0	equ	0xFEE
  6202                           fsr0h	equ	0xFEA
  6203                           fsr0l	equ	0xFE9
  6204                           wreg	equ	0xFE8
  6205                           indf1	equ	0xFE7
  6206                           postinc1	equ	0xFE6
  6207                           postdec1	equ	0xFE5
  6208                           fsr1h	equ	0xFE2
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216                           	psect	temp
  6217  00004D                     btemp:
  6218                           	opt stack 0
  6219  00004D                     	ds	1
  6220  0000                     int$flags	set	btemp
  6221  0000                     wtemp6	set	btemp+1
  6222                           pclatu	equ	0xFFB
  6223                           pclath	equ	0xFFA
  6224                           tblptru	equ	0xFF8
  6225                           tblptrh	equ	0xFF7
  6226                           tblptrl	equ	0xFF6
  6227                           tablat	equ	0xFF5
  6228                           prodh	equ	0xFF4
  6229                           prodl	equ	0xFF3
  6230                           intcon	equ	0xFF2
  6231                           postinc0	equ	0xFEE
  6232                           fsr0h	equ	0xFEA
  6233                           fsr0l	equ	0xFE9
  6234                           wreg	equ	0xFE8
  6235                           indf1	equ	0xFE7
  6236                           postinc1	equ	0xFE6
  6237                           postdec1	equ	0xFE5
  6238                           fsr1h	equ	0xFE2
  6239                           fsr1l	equ	0xFE1
  6240                           indf2	equ	0xFDF
  6241                           postinc2	equ	0xFDE
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8


Data Sizes:
    Strings     87
    Constant    0
    Data        11
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     77     149
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[10]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[10]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[4]), STR_29(CODE[10]), STR_28(CODE[4]), STR_27(CODE[12]), 
		 -> STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_22(CODE[4]), STR_21(CODE[6]), STR_20(CODE[4]), STR_19(CODE[7]), 
		 -> STR_18(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_17(CODE[6]), STR_16(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[5]), STR_14(CODE[5]), STR_13(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_29(CODE[10]), STR_24(CODE[5]), STR_21(CODE[6]), STR_19(CODE[7]), 
		 -> STR_17(CODE[6]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_28(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_18(CODE[4]), 
		 -> STR_16(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___aldiv
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ltoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   81813
                                             73 BANK0      4     4      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleBlue
 ---------------------------------------------------------------------------------
 (1) _toggleBlue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                     11    11      0    2000
                                             32 COMRAM    11    11      0
                            ___aldiv
                            ___awmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             18 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     122
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   79623
                                             71 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   44301
                                             12 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   12906
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15485
                                             54 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                               _ltoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     629
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   34244
                                             16 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   32557
                                             56 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    3300
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15575
                                             54 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    2493
                                             44 COMRAM    10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1720
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   12785
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initOSC
   _initTimer
   _powerPulseCheck
     ___aldiv
     ___awmod
     ___lmul
   _toggleBlue

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4D      95       4       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B       9        0.0%
DATA                 0      0     10B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 05 19:18:41 2019

                                       _SPISlaveInit 16D0                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l120 1844                                                  l115 1836  
                                                l107 0FB2                                                  l300 107A  
                                                l108 1004                                                  l109 1032  
                                                l134 0B2A                                                  l135 0B5A  
                                                l119 183A                                                  l312 115C  
                                                l304 10CC                                                  l136 0BDA  
                                                l313 1128                                                  l402 12AC  
                                                l306 10DE                                                  l138 0B88  
                                                l323 0ED8                                                  l315 1136  
                                                l139 0B8A                                                  l340 0938  
                                                l316 1144                                                  l413 0A4E  
                                                l317 1150                                                  l342 0968  
                                                l414 09E4                                                  l430 17D6  
                                                l326 0F1C                                                  l343 08A8  
                                                l423 0ABC                                                  l415 0A18  
                                                l183 0BE0                                                  l336 0876  
                                                l408 1746                                                  l328 0F76  
                                                l192 176A                                                  l520 0E34  
                                                l345 08BA                                                  l425 0AF4  
                                                l417 0A4A                                                  l353 067E  
                                                l329 0F88                                                  l193 1758  
                                                l338 0976                                                  l346 090E  
                                                l434 1882                                                  l522 0E62  
                                                l371 0822                                                  l363 076A  
                                                l355 0708                                                  l523 0E56  
                                                l373 084E                                                  l365 0798  
                                                l429 17D2                                                  l294 106A  
                                                l526 0E96                                                  l367 07C6  
                                                l527 0EA4                                                  l519 0E1C  
                                                l632 0DAA                                                  l296 109E  
                                                l528 0EBA                                                  l633 0D56  
                                                l393 137A                                                  l369 07F4  
                                                l394 133C                                                  l298 10B2  
                                                l475 15A4                                                  l635 0DEE  
                                                l476 15B8                                                  l629 0D4C  
                                                l661 13E4                                                  l662 13DC  
                                                l807 18A0                                                  l399 124C  
                                                l833 12DE                                                  l665 13FC  
                                                l834 12D2                                                  l666 1406  
                                                l658 13C2                                                  l843 143C  
                                                l667 1414                                                  l659 13CE  
                                                l844 1430                                                  l837 1312  
                                                l838 1320                                                  l847 1464  
                                                l848 1472                                                  l882 1616  
                                                l886 0C26                                                  l888 0C7E  
                                                l889 0CE8                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                         ___awmod@sign 0018  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 006E                                                 l3156 0976  
                                               l3460 0BE0                                                 l3374 0B5A  
                                               STR_1 0650                                                 STR_2 0654  
                                               STR_3 061E                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0635  
                                               STR_6 063A                                                 STR_7 0630  
                                               STR_8 062A                                                 STR_9 0617  
                                               u2300 1370                                                 u2310 13A6  
                                               u2400 0A86                                                 u2250 12E2  
                                               u2307 1366                                                 u2317 139C  
                                               u3207 175E                                                 u2280 1440  
                                               u3217 10EE                                                 u1810 0E66  
                                               u3170 1004                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               u3187 0FC4                                                 _PIE5 000F7D  
                                               u2580 0874                                                 u3197 0FE2  
                                               u1870 13E8                                                 u2930 0B14  
                                               u2940 0B3A                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0D0C                                                 _main 0F8C  
                                               _init 18F8                                                 _ltoa 15EA  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C0  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 00A8  
               powerPulseCheck@timerCountLFLastValid 00C0                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 1042  
                                    __end_of___aldiv 0ECC                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 0624                                                ?_ltoa 002D  
                                              STR_11 063F                                                STR_12 060D  
                                              STR_13 0650                                                STR_30 064C  
                                              STR_22 0644                                                STR_16 0654  
                                              STR_17 062A                                                STR_25 0648  
                                              STR_18 0654                                                STR_19 0617  
                                              STR_27 0601                                                STR_28 0654  
                                    __end_of___awmod 141E                                                STR_29 060D  
                                    __end_of___lldiv 1332                                      __end_of___llmod 1484  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 001F  
                                  ?_command_builder3 001F                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                         powerPulseCheck@TESTING_count 00BD  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0023                                   ??_command_builder3 0027  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 006E  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 18D8                                     ?_powerPulseCheck 0001  
                                              _isLow 0047                          powerPulseCheck@meterWattsHF 0022  
                        powerPulseCheck@meterWattsLF 0026                                      __end_of_isdigit 18A8  
                                 __CFG_MCLRE$EXTMCLR 000000                                                atol@a 0028  
                                              atol@c 002C                                                atol@s 001F  
                                              _ultoa 0C16                                                pclath 000FFA  
                                              tablat 000FF5                                                status 000FD8  
                                              wtemp6 004E                                      __end_of_strcmp2 0AFE  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 0037  
                      command_builder_add_string@inx 001D                                      __initialization 1484  
                                       __end_of_atol 0E00                                         __end_of_main 1042  
                                       __end_of_init 1902                                         __end_of_ltoa 163C  
                             __end_of_communications 10E4                               _com_command_setVersion 17DA  
                __size_of_command_builder_add_string 007C                       powerPulseCheck@TESTING_oneshot 0046  
                                   _SPI_receive_data 17B2                         command_builder_add_char@data 0015  
                                             ??_atol 0023                                               ??_main 00A9  
                                             ??_init 0013                                               ??_ltoa 0035  
                                      _SPI_send_data 186A                                        __activetblptr 000002  
                            _process_data_parameters 065A                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___lmul 1594                                            ??___aldiv 001B  
                                             ___wmul 1800                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___awmod 0017  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                             _initIO 1848                                               clear_0 14BC  
                                             clear_1 14C8                                               clear_2 14D4  
                                    ___awmod@divisor 0015                                       ?_SPI_send_data 0001  
                                    ___awmod@counter 0017                           ?_com_command_setEnergyUsed 0037  
                                          ??_initOSC 0013                            _process_data_parameterize 0852  
                                       __pdataCOMRAM 004C                                            ??_isdigit 0013  
                                             ltoa@cp 0035                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0060                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 174E  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 14DA                      powerPulseCheck@timerCountHFLast 00F1  
                    com_command_setPower@send_buffer 0037                      powerPulseCheck@timerCountLFLast 00ED  
                                      ___rparam_used 000001                                    SPI_send_data@data 0013  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 18EE  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                      __end_of_ultoa 0D0C                            ??_process_data_parameters 0039  
                 powerPulseCheck@meterEnergyUsedPart 00AD                         communications@receive_buffer 0100  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 13AE  
                         _command_builder_add_string 1332                                              ??_ultoa 0028  
                                         __pbssBANK0 00AD                                           __pbssBANK1 0100  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0039           communications@end_of_transmission_received 00BF  
                                     ___lmul@product 001B                          __end_of_resetCommunications 1182  
                                    _meterEnergyUsed 00B1                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 1686  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 18D8  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 153E  
                                  __end_of_delayMS10 1780                      __end_of_process_data_parameters 0852  
                           __end_of_SPI_receive_data 17DA                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                            ___aldiv 0E00                                      __size_of___lmul 0056  
                                            ___awmod 13AE             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 12B0                                      __size_of___wmul 0026  
                                            ___llmod 141E                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0022  
                                            __pcinit 1484                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0F8C  
                                            __ptext1 1826                                              __ptext2 0AFE  
                                            __ptext3 13AE                                              __ptext4 0E00  
                                            __ptext5 18A8                                              __ptext6 18F8  
                                            __ptext7 18C0                                              __ptext8 1848  
                                            __ptext9 174E                                           _meterWatts 00B5  
                                          _T0CONbits 000FD5                                              _initOSC 18C0  
                                  __end_of_initTimer 18C0                                              _isdigit 188A  
                                   ___awmod@dividend 0013                                     ___aldiv@dividend 0013  
                                __size_of_Timer0_ISR 00B8                                              main@inx 00AB  
                                            _strcmp2 09D2                                 end_of_initialization 14DA  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 12B0  
                          powerPulseCheck@firstPulse 004C                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1800                                              ltoa@buf 002D  
                           __size_of_powerPulseCheck 0118                                              ltoa@val 002F  
                                   ??_communications 003A                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                   ___aldiv@quotient 001D                                              postdec1 000FE5  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                receive_data@my_status 003E  
                               __end_of_receive_data 0F8C                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                    communications@last_state_active 003F                          ??_com_command_setEnergyUsed 0039  
                                      ?_process_data 0070                                           _toggleBlue 1826  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                     powerPulseCheck@timerCountHFCheck 00EB  
                         process_data@receive_buffer 0070                    __end_of_process_data_parameterize 09D2  
                               _com_command_setPower 163C                  communications@receive_current_state 0040  
                                      ?_SPISlaveInit 0001                                       __end_of___lmul 15EA  
                                     __end_of___wmul 1826                                        __pidataCOMRAM 1902  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 186A  
                                     ??_process_data 003A                          ?_command_builder_add_string 0017  
                                start_initialization 1484                         resetCommunications@commState 00BB  
                                   _command_builder1 14E8                                     _command_builder3 1182  
                          _com_command_setEnergyUsed 1686                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 0037                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    ??_powerPulseCheck 0021  
                                        __pdataBANK0 00EB                                             ??_initIO 0013  
                         ??_send_end_of_transmission 0025                           ??_command_builder_add_char 0016  
                                        ?_toggleBlue 0001                                          __pbssCOMRAM 003A  
                                      __pcstackBANK0 0060                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2072 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 174E                        com_command_setEnergyUsed@temp 0060  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 006C                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___aldiv 0013                                             ?___awmod 0013  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 188A                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 006C  
                                           ?_isdigit 0001                                    __size_of_strmatch 0036  
                                  send_data@send_end 0019                                            _initTimer 18A8  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009E  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                                      ___aldiv@divisor 0017  
                                    ___aldiv@counter 001B                                         _receive_data 0ECC  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 17B2                                            _send_data 1220  
                             ??_com_command_setPower 0039                    process_data_parameters@parameters 006C  
                                __size_of_toggleBlue 0022                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                           ?_initTimer 0001  
                  powerPulseCheck@mcpLFoutLastEnergy 0042                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1718                                            copy_data0 1498  
           process_data@end_of_transmission_received 00A6                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___aldiv 00CC                                     __size_of___awmod 0070  
                   __end_of_send_end_of_transmission 18EE                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 1594  
                           __end_of_command_builder1 153E                             __end_of_command_builder3 1220  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                           __ptext10 1042                                             __ptext11 1220  
                                           __ptext20 1718                                             __ptext12 186A  
                                           __ptext21 09D2                                             __ptext13 10E4  
                                           __ptext30 1332                                             __ptext22 18D8  
                                           __ptext14 17DA                                             __ptext31 153E  
                                           __ptext23 14E8                                             __ptext15 163C  
                                           __ptext32 0D0C                                             __ptext24 1686  
                                           __ptext16 0ECC                                             __ptext33 188A  
                                           __ptext25 15EA                                             __ptext17 17B2  
                                           __ptext34 1594                                             __ptext26 0C16  
                                           __ptext18 1780                                             __ptext35 0852  
                                           __ptext27 141E                                             __ptext19 065A  
                                           __ptext36 1800                                             __ptext28 12B0  
                                           __ptext37 16D0                                             __ptext29 1182  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0AFE                                        __size_of_atol 00F4  
                                      __size_of_main 00B6                                        strmatch@match 0024  
                                      __size_of_init 000A                                        __size_of_ltoa 0052  
                        powerPulseCheck@mcpHFoutLast 0044                                           strmatch@co 00B9  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                        powerPulseCheck@mcpLFoutLast 0043                                             int$flags 004D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 16D0  
                            __size_of_communications 00A2                                             _strmatch 1718  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0072  
                                       ??_toggleBlue 0013                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0032  
                                           intlevel2 0000                                             ltoa@base 0033  
                             process_data@parameters 0074                                         _timerCountHF 0048  
                                       _timerCountLF 003A                                     ___lldiv@dividend 0013  
                      communications@no_more_to_send 00A7                                          ??_send_data 0017  
                                          strmatch@a 001E                                            strmatch@b 0020  
                                         _OSCCONbits 000FD3                                   __end_of_toggleBlue 1848  
                                _resetCommunications 10E4                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 0020                                             ultoa@val 0022  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                   ___lldiv@quotient 001B                                         _process_data 1780  
                                  _SPI_transmit_wait 0041                                __size_of_SPISlaveInit 0048  
                          communications@send_buffer 00C1                     __size_of_process_data_parameters 01F8  
                                       ___aldiv@sign 001C                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0C16                                 ?_resetCommunications 006C  
                  __size_of_send_end_of_transmission 0016                       powerPulseCheck@meterWattsHFNew 002A  
                          ?_send_end_of_transmission 0023                       powerPulseCheck@meterWattsLFNew 002B  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013                 powerPulseCheck@timerCountHFLastValid 0045  
