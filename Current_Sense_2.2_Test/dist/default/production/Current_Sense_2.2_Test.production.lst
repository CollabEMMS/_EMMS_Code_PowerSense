

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jun 05 05:29:24 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F25K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  0018FC                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for powerPulseCheck@firstPulse
    99  0018FC  01                 	db	1
   100                           
   101                           	psect	idataBANK0
   102  0018E4                     __pidataBANK0:
   103                           	opt stack 0
   104                           
   105                           ;initializer for powerPulseCheck@timerCountLFLast
   106  0018E4  FFFF               	dw	65535
   107  0018E6  7FFF               	dw	32767
   108                           
   109                           ;initializer for powerPulseCheck@timerCountHFCheck
   110  0018E8  0001               	dw	1
   111                           
   112                           ;initializer for powerPulseCheck@multiplierHFRate
   113  0018EA  0008               	dw	8
   114  0018EC  0000               	dw	0
   115                           
   116                           ;initializer for powerPulseCheck@timerCountHFLast
   117  0018EE  FFFF               	dw	65535
   118  0018F0  7FFF               	dw	32767
   119  0000                     _ANSELBbits	set	3897
   120  0000                     _ANSELAbits	set	3896
   121  0000                     _ANSELC	set	3898
   122  0000                     _ANSELB	set	3897
   123  0000                     _ANSELA	set	3896
   124  0000                     _SSP2CON3bits	set	3945
   125  0000                     _SSP2CON3	set	3945
   126  0000                     _SSP2BUF	set	3951
   127  0000                     _SSP2STATbits	set	3949
   128  0000                     _SSP2CON1bits	set	3948
   129  0000                     _T0CONbits	set	4053
   130  0000                     _IPR5	set	3967
   131  0000                     _IPR4	set	3964
   132  0000                     _IPR3	set	4005
   133  0000                     _IPR2	set	4002
   134  0000                     _IPR1	set	3999
   135  0000                     _PIE5	set	3965
   136  0000                     _PIE4	set	3962
   137  0000                     _PIE3	set	4003
   138  0000                     _PIE2	set	4000
   139  0000                     _PIE1	set	3997
   140  0000                     _PIR5	set	3966
   141  0000                     _PIR4	set	3963
   142  0000                     _PIR3	set	4004
   143  0000                     _PIR2	set	4001
   144  0000                     _PIR1	set	3998
   145  0000                     _RCONbits	set	4048
   146  0000                     _INTCON3	set	4080
   147  0000                     _INTCON2	set	4081
   148  0000                     _INTCON	set	4082
   149  0000                     _TRISBbits	set	3987
   150  0000                     _ADCON0bits	set	4034
   151  0000                     _OSCTUNEbits	set	3995
   152  0000                     _OSCCON2bits	set	4050
   153  0000                     _OSCCONbits	set	4051
   154  0000                     _TMR0L	set	4054
   155  0000                     _TMR0H	set	4055
   156  0000                     _INTCONbits	set	4082
   157  0000                     _PORTBbits	set	3969
   158  0000                     _PORTAbits	set	3968
   159  0000                     _TRISAbits	set	3986
   160  0000                     _TRISCbits	set	3988
   161  0000                     _LATCbits	set	3979
   162  0000                     _LATBbits	set	3978
   163                           
   164                           	psect	smallconst
   165  000600                     __psmallconst:
   166                           	opt stack 0
   167  000600  00                 	db	0
   168  000601  43                 	db	67	;'C'
   169  000602  61                 	db	97	;'a'
   170  000603  6C                 	db	108	;'l'
   171  000604  69                 	db	105	;'i'
   172  000605  62                 	db	98	;'b'
   173  000606  72                 	db	114	;'r'
   174  000607  61                 	db	97	;'a'
   175  000608  74                 	db	116	;'t'
   176  000609  69                 	db	105	;'i'
   177  00060A  6F                 	db	111	;'o'
   178  00060B  6E                 	db	110	;'n'
   179  00060C  00                 	db	0
   180  00060D                     STR_12:
   181  00060D  50                 	db	80	;'P'
   182  00060E  53                 	db	83	;'S'
   183  00060F  56                 	db	86	;'V'
   184  000610  65                 	db	101	;'e'
   185  000611  72                 	db	114	;'r'
   186  000612  73                 	db	115	;'s'
   187  000613  69                 	db	105	;'i'
   188  000614  6F                 	db	111	;'o'
   189  000615  6E                 	db	110	;'n'
   190  000616  00                 	db	0
   191  000617                     STR_4:
   192  000617  45                 	db	69	;'E'
   193  000618  6E                 	db	110	;'n'
   194  000619  55                 	db	85	;'U'
   195  00061A  73                 	db	115	;'s'
   196  00061B  65                 	db	101	;'e'
   197  00061C  64                 	db	100	;'d'
   198  00061D  00                 	db	0
   199  00061E                     STR_3:
   200  00061E  43                 	db	67	;'C'
   201  00061F  61                 	db	97	;'a'
   202  000620  6C                 	db	108	;'l'
   203  000621  69                 	db	105	;'i'
   204  000622  62                 	db	98	;'b'
   205  000623  00                 	db	0
   206  000624                     STR_10:
   207  000624  56                 	db	86	;'V'
   208  000625  6F                 	db	111	;'o'
   209  000626  6C                 	db	108	;'l'
   210  000627  74                 	db	116	;'t'
   211  000628  73                 	db	115	;'s'
   212  000629  00                 	db	0
   213  00062A                     STR_8:
   214  00062A  57                 	db	87	;'W'
   215  00062B  61                 	db	97	;'a'
   216  00062C  74                 	db	116	;'t'
   217  00062D  74                 	db	116	;'t'
   218  00062E  73                 	db	115	;'s'
   219  00062F  00                 	db	0
   220  000630                     STR_7:
   221  000630  4C                 	db	76	;'L'
   222  000631  45                 	db	69	;'E'
   223  000632  44                 	db	68	;'D'
   224  000633  42                 	db	66	;'B'
   225  000634  00                 	db	0
   226  000635                     STR_5:
   227  000635  52                 	db	82	;'R'
   228  000636  65                 	db	101	;'e'
   229  000637  61                 	db	97	;'a'
   230  000638  64                 	db	100	;'d'
   231  000639  00                 	db	0
   232  00063A                     STR_6:
   233  00063A  43                 	db	67	;'C'
   234  00063B  6F                 	db	111	;'o'
   235  00063C  6E                 	db	110	;'n'
   236  00063D  66                 	db	102	;'f'
   237  00063E  00                 	db	0
   238  00063F                     STR_11:
   239  00063F  41                 	db	65	;'A'
   240  000640  6D                 	db	109	;'m'
   241  000641  70                 	db	112	;'p'
   242  000642  73                 	db	115	;'s'
   243  000643  00                 	db	0
   244  000644  32                 	db	50	;'2'
   245  000645  32                 	db	50	;'2'
   246  000646  32                 	db	50	;'2'
   247  000647  00                 	db	0
   248  000648  33                 	db	51	;'3'
   249  000649  33                 	db	51	;'3'
   250  00064A  33                 	db	51	;'3'
   251  00064B  00                 	db	0
   252  00064C                     STR_30:
   253  00064C  34                 	db	52	;'4'
   254  00064D  34                 	db	52	;'4'
   255  00064E  34                 	db	52	;'4'
   256  00064F  00                 	db	0
   257  000650                     STR_1:
   258  000650  45                 	db	69	;'E'
   259  000651  4E                 	db	78	;'N'
   260  000652  44                 	db	68	;'D'
   261  000653  00                 	db	0
   262  000654                     STR_2:
   263  000654  53                 	db	83	;'S'
   264  000655  65                 	db	101	;'e'
   265  000656  74                 	db	116	;'t'
   266  000657  00                 	db	0
   267  0000                     
   268                           ; #config settings
   269  000658  00                 	db	0	; dummy byte at the end
   270  0000                     
   271                           	psect	cinit
   272  00147A                     __pcinit:
   273                           	opt stack 0
   274  00147A                     start_initialization:
   275                           	opt stack 0
   276  00147A                     __initialization:
   277                           	opt stack 0
   278                           
   279                           ; Initialize objects allocated to BANK0 (14 bytes)
   280                           ; load TBLPTR registers with __pidataBANK0
   281  00147A  0EE4               	movlw	low __pidataBANK0
   282  00147C  6EF6               	movwf	tblptrl,c
   283  00147E  0E18               	movlw	high __pidataBANK0
   284  001480  6EF7               	movwf	tblptrh,c
   285  001482  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   286  001484  6EF8               	movwf	tblptru,c
   287  001486  EE00  F0EB         	lfsr	0,__pdataBANK0
   288  00148A  EE10 F00E          	lfsr	1,14
   289  00148E                     copy_data0:
   290  00148E  0009               	tblrd		*+
   291  001490  CFF5 FFEE          	movff	tablat,postinc0
   292  001494  50E5               	movf	postdec1,w,c
   293  001496  50E1               	movf	fsr1l,w,c
   294  001498  E1FA               	bnz	copy_data0
   295                           
   296                           ; Initialize objects allocated to COMRAM (1 bytes)
   297                           ; load TBLPTR registers with __pidataCOMRAM
   298  00149A  0EFC               	movlw	low __pidataCOMRAM
   299  00149C  6EF6               	movwf	tblptrl,c
   300  00149E  0E18               	movlw	high __pidataCOMRAM
   301  0014A0  6EF7               	movwf	tblptrh,c
   302  0014A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   303  0014A4  6EF8               	movwf	tblptru,c
   304  0014A6  0009               	tblrd		*+	;fetch initializer
   305  0014A8  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   306                           
   307                           ; Clear objects allocated to BANK1 (42 bytes)
   308  0014AC  EE01  F000         	lfsr	0,__pbssBANK1
   309  0014B0  0E2A               	movlw	42
   310  0014B2                     clear_0:
   311  0014B2  6AEE               	clrf	postinc0,c
   312  0014B4  06E8               	decf	wreg,f,c
   313  0014B6  E1FD               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (62 bytes)
   316  0014B8  EE00  F0AD         	lfsr	0,__pbssBANK0
   317  0014BC  0E3E               	movlw	62
   318  0014BE                     clear_1:
   319  0014BE  6AEE               	clrf	postinc0,c
   320  0014C0  06E8               	decf	wreg,f,c
   321  0014C2  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (18 bytes)
   324  0014C4  EE00  F03A         	lfsr	0,__pbssCOMRAM
   325  0014C8  0E12               	movlw	18
   326  0014CA                     clear_2:
   327  0014CA  6AEE               	clrf	postinc0,c
   328  0014CC  06E8               	decf	wreg,f,c
   329  0014CE  E1FD               	bnz	clear_2
   330  0014D0                     end_of_initialization:
   331                           	opt stack 0
   332  0014D0                     __end_of__initialization:
   333                           	opt stack 0
   334  0014D0  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0014D2  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0014D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0014D6  6EF8               	movwf	tblptru,c
   338  0014D8  0100               	movlb	0
   339  0014DA  EFC0  F007         	goto	_main	;jump to C main() function
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1l	equ	0xFE1
   348                           
   349                           	psect	bssCOMRAM
   350  00003A                     __pbssCOMRAM:
   351                           	opt stack 0
   352  00003A                     _timerCountLF:
   353                           	opt stack 0
   354  00003A                     	ds	4
   355  00003E                     receive_data@my_status:
   356                           	opt stack 0
   357  00003E                     	ds	1
   358  00003F                     communications@receive_current_state:
   359                           	opt stack 0
   360  00003F                     	ds	1
   361  000040                     _SPI_transmit_wait:
   362                           	opt stack 0
   363  000040                     	ds	1
   364  000041                     powerPulseCheck@mcpLFoutLastEnergy:
   365                           	opt stack 0
   366  000041                     	ds	1
   367  000042                     powerPulseCheck@mcpLFoutLast:
   368                           	opt stack 0
   369  000042                     	ds	1
   370  000043                     powerPulseCheck@mcpHFoutLast:
   371                           	opt stack 0
   372  000043                     	ds	1
   373  000044                     powerPulseCheck@timerCountLFLastValid:
   374                           	opt stack 0
   375  000044                     	ds	1
   376  000045                     powerPulseCheck@timerCountHFLastValid:
   377                           	opt stack 0
   378  000045                     	ds	1
   379  000046                     powerPulseCheck@TESTING_oneshot:
   380                           	opt stack 0
   381  000046                     	ds	1
   382  000047                     _isLow:
   383                           	opt stack 0
   384  000047                     	ds	1
   385  000048                     _timerCountHF:
   386                           	opt stack 0
   387  000048                     	ds	4
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	dataCOMRAM
   398  00004C                     __pdataCOMRAM:
   399                           	opt stack 0
   400  00004C                     powerPulseCheck@firstPulse:
   401                           	opt stack 0
   402  00004C                     	ds	1
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	bssBANK0
   413  0000AD                     __pbssBANK0:
   414                           	opt stack 0
   415  0000AD                     powerPulseCheck@meterEnergyUsedPart:
   416                           	opt stack 0
   417  0000AD                     	ds	4
   418  0000B1                     _meterEnergyUsed:
   419                           	opt stack 0
   420  0000B1                     	ds	4
   421  0000B5                     _meterWatts:
   422                           	opt stack 0
   423  0000B5                     	ds	4
   424  0000B9                     strmatch@co:
   425                           	opt stack 0
   426  0000B9                     	ds	2
   427  0000BB                     resetCommunications@commState:
   428                           	opt stack 0
   429  0000BB                     	ds	2
   430  0000BD                     powerPulseCheck@TESTING_count:
   431                           	opt stack 0
   432  0000BD                     	ds	2
   433  0000BF                     communications@last_state_active:
   434                           	opt stack 0
   435  0000BF                     	ds	1
   436  0000C0                     communications@end_of_transmission_received:
   437                           	opt stack 0
   438  0000C0                     	ds	1
   439  0000C1                     communications@send_buffer:
   440                           	opt stack 0
   441  0000C1                     	ds	42
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	dataBANK0
   452  0000EB                     __pdataBANK0:
   453                           	opt stack 0
   454  0000EB                     powerPulseCheck@timerCountLFLast:
   455                           	opt stack 0
   456  0000EB                     	ds	4
   457  0000EF                     powerPulseCheck@timerCountHFCheck:
   458                           	opt stack 0
   459  0000EF                     	ds	2
   460  0000F1                     powerPulseCheck@multiplierHFRate:
   461                           	opt stack 0
   462  0000F1                     	ds	4
   463  0000F5                     powerPulseCheck@timerCountHFLast:
   464                           	opt stack 0
   465  0000F5                     	ds	4
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	bssBANK1
   476  000100                     __pbssBANK1:
   477                           	opt stack 0
   478  000100                     communications@receive_buffer:
   479                           	opt stack 0
   480  000100                     	ds	42
   481                           tblptru	equ	0xFF8
   482                           tblptrh	equ	0xFF7
   483                           tblptrl	equ	0xFF6
   484                           tablat	equ	0xFF5
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           postdec1	equ	0xFE5
   488                           fsr1l	equ	0xFE1
   489                           
   490                           	psect	cstackBANK0
   491  000060                     __pcstackBANK0:
   492                           	opt stack 0
   493  000060                     _powerPulseCheck$2442:
   494                           	opt stack 0
   495  000060                     com_command_setPower@temp:
   496                           	opt stack 0
   497  000060                     com_command_setEnergyUsed@temp:
   498                           	opt stack 0
   499                           
   500                           ; 12 bytes @ 0x0
   501  000060                     	ds	4
   502  000064                     powerPulseCheck@meterWattsHF:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x4
   506  000064                     	ds	4
   507  000068                     powerPulseCheck@meterWattsLF:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x8
   511  000068                     	ds	4
   512  00006C                     powerPulseCheck@meterWattsHFNew:
   513                           	opt stack 0
   514  00006C                     resetCommunications@send_buffer:
   515                           	opt stack 0
   516  00006C                     process_data_parameters@parameters:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xC
   520  00006C                     	ds	1
   521  00006D                     powerPulseCheck@meterWattsLFNew:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0xD
   525  00006D                     	ds	1
   526  00006E                     ??_resetCommunications:
   527  00006E                     process_data_parameters@send_buffer:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0xE
   531  00006E                     	ds	2
   532  000070                     process_data@receive_buffer:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x10
   536  000070                     	ds	2
   537  000072                     process_data@send_buffer:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x12
   541  000072                     	ds	2
   542  000074                     process_data@parameters:
   543                           	opt stack 0
   544                           
   545                           ; 50 bytes @ 0x14
   546  000074                     	ds	50
   547  0000A6                     process_data@end_of_transmission_received:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x46
   551  0000A6                     	ds	1
   552  0000A7                     communications@no_more_to_send:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x47
   556  0000A7                     	ds	1
   557  0000A8                     communications@firstTime:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x48
   561  0000A8                     	ds	1
   562  0000A9                     ??_main:
   563                           
   564                           ; 1 bytes @ 0x49
   565  0000A9                     	ds	2
   566  0000AB                     main@inx:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x4B
   570  0000AB                     	ds	2
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	cstackCOMRAM
   581  000001                     __pcstackCOMRAM:
   582                           	opt stack 0
   583  000001                     ??_Timer0_ISR:
   584                           
   585                           ; 1 bytes @ 0x0
   586  000001                     	ds	18
   587  000013                     ??_isdigit:
   588  000013                     ?_strcmp2:
   589                           	opt stack 0
   590  000013                     ?___wmul:
   591                           	opt stack 0
   592  000013                     ?___awmod:
   593                           	opt stack 0
   594  000013                     ?___lmul:
   595                           	opt stack 0
   596  000013                     ?___lldiv:
   597                           	opt stack 0
   598  000013                     ?___llmod:
   599                           	opt stack 0
   600  000013                     SPI_send_data@data:
   601                           	opt stack 0
   602  000013                     delayMS10@count:
   603                           	opt stack 0
   604  000013                     command_builder_add_char@send_buffer:
   605                           	opt stack 0
   606  000013                     strcmp2@a:
   607                           	opt stack 0
   608  000013                     SPI_receive_data@data:
   609                           	opt stack 0
   610  000013                     ___wmul@multiplier:
   611                           	opt stack 0
   612  000013                     ___awmod@dividend:
   613                           	opt stack 0
   614  000013                     ___lmul@multiplier:
   615                           	opt stack 0
   616  000013                     ___lldiv@dividend:
   617                           	opt stack 0
   618  000013                     ___llmod@dividend:
   619                           	opt stack 0
   620                           
   621                           ; 4 bytes @ 0x12
   622  000013                     	ds	1
   623  000014                     SPI_send_data@sendGood:
   624                           	opt stack 0
   625  000014                     _isdigit$2073:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x13
   629  000014                     	ds	1
   630  000015                     ??_delayMS10:
   631  000015                     command_builder_add_char@data:
   632                           	opt stack 0
   633  000015                     SPI_receive_data@recvGood:
   634                           	opt stack 0
   635  000015                     isdigit@c:
   636                           	opt stack 0
   637  000015                     send_data@send_buffer:
   638                           	opt stack 0
   639  000015                     strcmp2@b:
   640                           	opt stack 0
   641  000015                     ___wmul@multiplicand:
   642                           	opt stack 0
   643  000015                     ___awmod@divisor:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x14
   647  000015                     	ds	1
   648  000016                     ??_command_builder_add_char:
   649  000016                     delayMS10@inx:
   650                           	opt stack 0
   651  000016                     receive_data@receive_buffer:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x15
   655  000016                     	ds	1
   656  000017                     ??_send_data:
   657  000017                     ??_strcmp2:
   658  000017                     ___awmod@counter:
   659                           	opt stack 0
   660  000017                     command_builder_add_string@send_buffer:
   661                           	opt stack 0
   662  000017                     ___wmul@product:
   663                           	opt stack 0
   664  000017                     ___lmul@multiplicand:
   665                           	opt stack 0
   666  000017                     ___lldiv@divisor:
   667                           	opt stack 0
   668  000017                     ___llmod@divisor:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x16
   672  000017                     	ds	1
   673  000018                     ??_receive_data:
   674  000018                     ___awmod@sign:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x17
   678  000018                     	ds	1
   679  000019                     receive_data@data:
   680                           	opt stack 0
   681  000019                     send_data@send_end:
   682                           	opt stack 0
   683  000019                     process_data_parameterize@parameters:
   684                           	opt stack 0
   685  000019                     command_builder_add_string@data_string:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x18
   689  000019                     	ds	1
   690  00001A                     strcmp2@match:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694  00001A                     	ds	1
   695  00001B                     ??_command_builder_add_string:
   696  00001B                     ___llmod@counter:
   697                           	opt stack 0
   698  00001B                     process_data_parameterize@buffer_to_parameterize:
   699                           	opt stack 0
   700  00001B                     ___lmul@product:
   701                           	opt stack 0
   702  00001B                     ___lldiv@quotient:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1A
   706  00001B                     	ds	1
   707  00001C                     strcmp2@inx:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x1B
   711  00001C                     	ds	1
   712  00001D                     ??_process_data_parameterize:
   713  00001D                     command_builder_add_string@inx:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x1C
   717  00001D                     	ds	1
   718  00001E                     strmatch@a:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x1D
   722  00001E                     	ds	1
   723  00001F                     ?_atol:
   724                           	opt stack 0
   725  00001F                     ?___aldiv:
   726                           	opt stack 0
   727  00001F                     ___lldiv@counter:
   728                           	opt stack 0
   729  00001F                     command_builder1@send_buffer:
   730                           	opt stack 0
   731  00001F                     command_builder3@send_buffer:
   732                           	opt stack 0
   733  00001F                     atol@s:
   734                           	opt stack 0
   735  00001F                     ___aldiv@dividend:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x1E
   739  00001F                     	ds	1
   740  000020                     process_data_parameterize@inx:
   741                           	opt stack 0
   742  000020                     strmatch@b:
   743                           	opt stack 0
   744  000020                     ultoa@buf:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x1F
   748  000020                     	ds	1
   749  000021                     command_builder1@data1:
   750                           	opt stack 0
   751  000021                     command_builder3@data1:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x20
   755  000021                     	ds	1
   756  000022                     process_data_parameterize@parameter_index:
   757                           	opt stack 0
   758  000022                     strmatch@result:
   759                           	opt stack 0
   760  000022                     ultoa@val:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x21
   764  000022                     	ds	1
   765  000023                     ??_atol:
   766  000023                     process_data_parameterize@parameter_position:
   767                           	opt stack 0
   768  000023                     command_builder3@data2:
   769                           	opt stack 0
   770  000023                     send_end_of_transmission@send_buffer:
   771                           	opt stack 0
   772  000023                     ___aldiv@divisor:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x22
   776  000023                     	ds	1
   777  000024                     strmatch@match:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x23
   781  000024                     	ds	1
   782  000025                     command_builder3@data3:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x24
   786  000025                     	ds	1
   787  000026                     ultoa@base:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x25
   791  000026                     	ds	1
   792  000027                     ___aldiv@counter:
   793                           	opt stack 0
   794  000027                     atol@sign:
   795                           	opt stack 0
   796  000027                     com_command_setVersion@send_buffer:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x26
   800  000027                     	ds	1
   801  000028                     ___aldiv@sign:
   802                           	opt stack 0
   803  000028                     atol@a:
   804                           	opt stack 0
   805  000028                     ultoa@v:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x27
   809  000028                     	ds	1
   810  000029                     ___aldiv@quotient:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x28
   814  000029                     	ds	3
   815  00002C                     atol@c:
   816                           	opt stack 0
   817  00002C                     ultoa@c:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x2B
   821  00002C                     	ds	1
   822  00002D                     ??_powerPulseCheck:
   823  00002D                     ltoa@buf:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x2C
   827  00002D                     	ds	2
   828  00002F                     ltoa@val:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x2E
   832  00002F                     	ds	4
   833  000033                     ltoa@base:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x32
   837  000033                     	ds	2
   838  000035                     ltoa@cp:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x34
   842  000035                     	ds	2
   843  000037                     com_command_setPower@send_buffer:
   844                           	opt stack 0
   845  000037                     com_command_setEnergyUsed@send_buffer:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x36
   849  000037                     	ds	2
   850  000039                     process_data_parameters@end_of_transmission_received:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x38
   854  000039                     	ds	1
   855  00003A                     tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           postdec1	equ	0xFE5
   862                           fsr1l	equ	0xFE1
   863                           
   864                           ; 1 bytes @ 0x39
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 90 in file "Current_Sense_Main.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  inx             2   75[BANK0 ] int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0       2       0       0       0       0       0
   886 ;;      Temps:          0       2       0       0       0       0       0
   887 ;;      Totals:         0       4       0       0       0       0       0
   888 ;;Total ram usage:        4 bytes
   889 ;; Hardware stack levels required when called:    8
   890 ;; This function calls:
   891 ;;		_communications
   892 ;;		_delayMS10
   893 ;;		_init
   894 ;;		_initTimer
   895 ;;		_powerPulseCheck
   896 ;;		_toggleBlue
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text0
   903  000F80                     __ptext0:
   904                           	opt stack 0
   905  000F80                     _main:
   906                           	opt stack 23
   907                           
   908                           ;Current_Sense_Main.c: 92: ANSELA = 0b00000000;
   909                           
   910                           ;incstack = 0
   911  000F80  0E00               	movlw	0
   912  000F82  010F               	movlb	15	; () banked
   913  000F84  6F38               	movwf	56,b	;volatile
   914                           
   915                           ;Current_Sense_Main.c: 93: ANSELB = 0b00000000;
   916  000F86  0E00               	movlw	0
   917  000F88  6F39               	movwf	57,b	;volatile
   918                           
   919                           ;Current_Sense_Main.c: 94: ANSELC = 0b00000000;
   920  000F8A  0E00               	movlw	0
   921  000F8C  6F3A               	movwf	58,b	;volatile
   922                           
   923                           ; BSR set to: 15
   924                           ;Current_Sense_Main.c: 96: init( );
   925  000F8E  EC79  F00C         	call	_init	;wreg free
   926                           
   927                           ;Current_Sense_Main.c: 101: for( int inx = 0; inx < 3; inx++ )
   928  000F92  0E00               	movlw	0
   929  000F94  0100               	movlb	0	; () banked
   930  000F96  6FAC               	movwf	(main@inx+1)& (0+255),b
   931  000F98  0E00               	movlw	0
   932  000F9A  6FAB               	movwf	main@inx& (0+255),b
   933                           
   934                           ; BSR set to: 0
   935  000F9C  BFAC               	btfsc	(main@inx+1)& (0+255),7,b
   936  000F9E  D003               	goto	l107
   937  000FA0  51AC               	movf	(main@inx+1)& (0+255),w,b
   938  000FA2  E12A               	bnz	l108
   939  000FA4  D025               	goto	L1
   940  000FA6                     l107:
   941                           
   942                           ; BSR set to: 0
   943                           ;Current_Sense_Main.c: 102: {
   944                           ;Current_Sense_Main.c: 103: LATBbits.LATB4 = 1;
   945  000FA6  888A               	bsf	3978,4,c	;volatile
   946                           
   947                           ;Current_Sense_Main.c: 104: LATCbits.LATC1 = 1;
   948  000FA8  828B               	bsf	3979,1,c	;volatile
   949                           
   950                           ;Current_Sense_Main.c: 105: LATCbits.LATC0 = 1;
   951  000FAA  808B               	bsf	3979,0,c	;volatile
   952                           
   953                           ; BSR set to: 0
   954                           ;Current_Sense_Main.c: 106: _delay((unsigned long)((100)*(16000000/4000.0)));
   955  000FAC  0E03               	movlw	3
   956  000FAE  0100               	movlb	0	; () banked
   957  000FB0  6FAA               	movwf	(??_main+1)& (0+255),b
   958  000FB2  0E08               	movlw	8
   959  000FB4  6FA9               	movwf	??_main& (0+255),b
   960  000FB6  0E77               	movlw	119
   961  000FB8                     u3367:
   962  000FB8  2EE8               	decfsz	wreg,f,c
   963  000FBA  D7FE               	bra	u3367
   964  000FBC  2FA9               	decfsz	??_main& (0+255),f,b
   965  000FBE  D7FC               	bra	u3367
   966  000FC0  2FAA               	decfsz	(??_main+1)& (0+255),f,b
   967  000FC2  D7FA               	bra	u3367
   968                           
   969                           ;Current_Sense_Main.c: 107: LATBbits.LATB4 = 0;
   970  000FC4  988A               	bcf	3978,4,c	;volatile
   971                           
   972                           ;Current_Sense_Main.c: 108: LATCbits.LATC1 = 0;
   973  000FC6  928B               	bcf	3979,1,c	;volatile
   974                           
   975                           ;Current_Sense_Main.c: 109: LATCbits.LATC0 = 0;
   976  000FC8  908B               	bcf	3979,0,c	;volatile
   977                           
   978                           ;Current_Sense_Main.c: 110: _delay((unsigned long)((100)*(16000000/4000.0)));
   979  000FCA  0E03               	movlw	3
   980  000FCC  0100               	movlb	0	; () banked
   981  000FCE  6FAA               	movwf	(??_main+1)& (0+255),b
   982  000FD0  0E08               	movlw	8
   983  000FD2  6FA9               	movwf	??_main& (0+255),b
   984  000FD4  0E77               	movlw	119
   985  000FD6                     u3377:
   986  000FD6  2EE8               	decfsz	wreg,f,c
   987  000FD8  D7FE               	bra	u3377
   988  000FDA  2FA9               	decfsz	??_main& (0+255),f,b
   989  000FDC  D7FC               	bra	u3377
   990  000FDE  2FAA               	decfsz	(??_main+1)& (0+255),f,b
   991  000FE0  D7FA               	bra	u3377
   992  000FE2  0100               	movlb	0	; () banked
   993  000FE4  4BAB               	infsnz	main@inx& (0+255),f,b
   994  000FE6  2BAC               	incf	(main@inx+1)& (0+255),f,b
   995  000FE8  BFAC               	btfsc	(main@inx+1)& (0+255),7,b
   996  000FEA  D7DD               	goto	l107
   997  000FEC  51AC               	movf	(main@inx+1)& (0+255),w,b
   998  000FEE  E104               	bnz	u3350
   999  000FF0                     L1:
  1000  000FF0  0E03               	movlw	3
  1001  000FF2  5DAB               	subwf	main@inx& (0+255),w,b
  1002  000FF4  A0D8               	btfss	status,0,c
  1003  000FF6  D7D7               	goto	l107
  1004  000FF8                     u3350:
  1005  000FF8                     l108:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;Current_Sense_Main.c: 111: }
  1009                           ;Current_Sense_Main.c: 114: LATBbits.LATB4 = 0;
  1010  000FF8  988A               	bcf	3978,4,c	;volatile
  1011                           
  1012                           ;Current_Sense_Main.c: 115: LATCbits.LATC1 = 0;
  1013  000FFA  928B               	bcf	3979,1,c	;volatile
  1014                           
  1015                           ;Current_Sense_Main.c: 116: LATCbits.LATC0 = 0;
  1016  000FFC  908B               	bcf	3979,0,c	;volatile
  1017                           
  1018                           ;Current_Sense_Main.c: 119: TRISCbits.TRISC7 = 0;
  1019  000FFE  9E94               	bcf	3988,7,c	;volatile
  1020                           
  1021                           ;Current_Sense_Main.c: 120: TRISCbits.TRISC4 = 0;
  1022  001000  9894               	bcf	3988,4,c	;volatile
  1023                           
  1024                           ;Current_Sense_Main.c: 121: TRISCbits.TRISC3 = 0;
  1025  001002  9694               	bcf	3988,3,c	;volatile
  1026                           
  1027                           ;Current_Sense_Main.c: 122: TRISCbits.TRISC6 = 0;
  1028  001004  9C94               	bcf	3988,6,c	;volatile
  1029                           
  1030                           ;Current_Sense_Main.c: 125: LATCbits.LATC6 = 1;
  1031  001006  8C8B               	bsf	3979,6,c	;volatile
  1032                           
  1033                           ;Current_Sense_Main.c: 126: LATCbits.LATC7 = 1;
  1034  001008  8E8B               	bsf	3979,7,c	;volatile
  1035                           
  1036                           ;Current_Sense_Main.c: 127: LATCbits.LATC4 = 1;
  1037  00100A  888B               	bsf	3979,4,c	;volatile
  1038                           
  1039                           ;Current_Sense_Main.c: 128: LATCbits.LATC3 = 0;
  1040  00100C  968B               	bcf	3979,3,c	;volatile
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;Current_Sense_Main.c: 131: delayMS10( 5 );
  1044  00100E  0E00               	movlw	0
  1045  001010  6E14               	movwf	delayMS10@count+1,c
  1046  001012  0E05               	movlw	5
  1047  001014  6E13               	movwf	delayMS10@count,c
  1048  001016  ECA2  F00B         	call	_delayMS10	;wreg free
  1049                           
  1050                           ;Current_Sense_Main.c: 134: TRISAbits.TRISA2 = 1;
  1051  00101A  8492               	bsf	3986,2,c	;volatile
  1052                           
  1053                           ;Current_Sense_Main.c: 137: communications( 1 );
  1054  00101C  0E01               	movlw	1
  1055  00101E  EC1B  F008         	call	_communications
  1056                           
  1057                           ;Current_Sense_Main.c: 139: initTimer( );
  1058  001022  EC4F  F00C         	call	_initTimer	;wreg free
  1059  001026                     
  1060                           ;Current_Sense_Main.c: 143: {
  1061                           ;Current_Sense_Main.c: 151: toggleBlue( );
  1062  001026  EC0E  F00C         	call	_toggleBlue	;wreg free
  1063                           
  1064                           ;Current_Sense_Main.c: 228: communications( 0 );
  1065  00102A  0E00               	movlw	0
  1066  00102C  EC1B  F008         	call	_communications
  1067                           
  1068                           ;Current_Sense_Main.c: 242: powerPulseCheck( );
  1069  001030  EC7F  F005         	call	_powerPulseCheck	;wreg free
  1070  001034  D7F8               	goto	l109
  1071  001036                     __end_of_main:
  1072                           	opt stack 0
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec1	equ	0xFE5
  1080                           fsr1l	equ	0xFE1
  1081                           status	equ	0xFD8
  1082                           
  1083 ;; *************** function _toggleBlue *****************
  1084 ;; Defined at:
  1085 ;;		line 300 in file "Current_Sense_Main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1099 ;;      Params:         0       0       0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text1
  1114  00181C                     __ptext1:
  1115                           	opt stack 0
  1116  00181C                     _toggleBlue:
  1117                           	opt stack 29
  1118                           
  1119                           ;Current_Sense_Main.c: 303: if( PORTAbits.RA2 == 0 )
  1120                           
  1121                           ;incstack = 0
  1122  00181C  B480               	btfsc	3968,2,c	;volatile
  1123  00181E  D006               	goto	l115
  1124                           
  1125                           ;Current_Sense_Main.c: 304: {
  1126                           ;Current_Sense_Main.c: 305: if( isLow == 0 )
  1127  001820  5047               	movf	_isLow,w,c
  1128  001822  A4D8               	btfss	status,2,c
  1129  001824  D005               	goto	l119
  1130                           
  1131                           ;Current_Sense_Main.c: 306: {
  1132                           ;Current_Sense_Main.c: 308: if( PORTBbits.RB4 == 0 )
  1133  001826  5081               	movf	3969,w,c	;volatile
  1134                           
  1135                           ;Current_Sense_Main.c: 317: }
  1136                           ;Current_Sense_Main.c: 318: isLow = 1;
  1137                           
  1138                           ;Current_Sense_Main.c: 313: else
  1139                           ;Current_Sense_Main.c: 314: {
  1140                           
  1141                           ;Current_Sense_Main.c: 309: {
  1142                           ;Current_Sense_Main.c: 312: }
  1143  001828  0E01               	movlw	1
  1144  00182A  D001               	goto	L7
  1145  00182C                     l115:
  1146                           
  1147                           ;Current_Sense_Main.c: 322: else
  1148                           ;Current_Sense_Main.c: 323: {
  1149                           ;Current_Sense_Main.c: 324: isLow = 0;
  1150  00182C  0E00               	movlw	0
  1151  00182E                     L7:
  1152  00182E  6E47               	movwf	_isLow,c
  1153  001830                     l119:
  1154                           
  1155                           ;Current_Sense_Main.c: 325: }
  1156                           ;Current_Sense_Main.c: 327: if( isLow )
  1157  001830  5047               	movf	_isLow,w,c
  1158  001832  B4D8               	btfsc	status,2,c
  1159  001834  D002               	goto	l120
  1160                           
  1161                           ;Current_Sense_Main.c: 328: {
  1162                           ;Current_Sense_Main.c: 329: LATCbits.LATC1 = 0;
  1163  001836  928B               	bcf	3979,1,c	;volatile
  1164                           
  1165                           ;Current_Sense_Main.c: 330: }
  1166  001838  0012               	return	
  1167  00183A                     l120:
  1168                           
  1169                           ;Current_Sense_Main.c: 331: else
  1170                           ;Current_Sense_Main.c: 332: {
  1171                           ;Current_Sense_Main.c: 333: LATCbits.LATC1 = 1;
  1172  00183A  828B               	bsf	3979,1,c	;volatile
  1173  00183C  0012               	return	
  1174  00183E                     __end_of_toggleBlue:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _powerPulseCheck *****************
  1187 ;; Defined at:
  1188 ;;		line 410 in file "Current_Sense_Main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  meterWattsLF    4    8[BANK0 ] long 
  1193 ;;  meterWattsHF    4    4[BANK0 ] long 
  1194 ;;  meterWattsLF    1   13[BANK0 ] unsigned char 
  1195 ;;  meterWattsHF    1   12[BANK0 ] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         0       0       0       0       0       0       0
  1206 ;;      Locals:         0      14       0       0       0       0       0
  1207 ;;      Temps:          1       0       0       0       0       0       0
  1208 ;;      Totals:         1      14       0       0       0       0       0
  1209 ;;Total ram usage:       15 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    2
  1212 ;; This function calls:
  1213 ;;		___aldiv
  1214 ;;		___awmod
  1215 ;;		___lmul
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text2
  1222  000AFE                     __ptext2:
  1223                           	opt stack 0
  1224  000AFE                     _powerPulseCheck:
  1225                           	opt stack 28
  1226                           
  1227                           ;Current_Sense_Main.c: 415: static int TESTING_count = 0;
  1228                           ;Current_Sense_Main.c: 416: static bool TESTING_oneshot = 0;
  1229                           ;Current_Sense_Main.c: 418: if( timerCountHF >= 1000 )
  1230                           
  1231                           ;incstack = 0
  1232  000AFE  BE4B               	btfsc	_timerCountHF+3,7,c	;volatile
  1233  000B00  D014               	goto	l134
  1234  000B02  504B               	movf	_timerCountHF+3,w,c	;volatile
  1235  000B04  104A               	iorwf	_timerCountHF+2,w,c	;volatile
  1236  000B06  E106               	bnz	u3090
  1237  000B08  0EE8               	movlw	232
  1238  000B0A  5C48               	subwf	_timerCountHF,w,c	;volatile
  1239  000B0C  0E03               	movlw	3
  1240  000B0E  5849               	subwfb	_timerCountHF+1,w,c	;volatile
  1241  000B10  A0D8               	btfss	status,0,c
  1242  000B12  D00B               	goto	l134
  1243  000B14                     u3090:
  1244                           
  1245                           ;Current_Sense_Main.c: 419: {
  1246                           ;Current_Sense_Main.c: 420: TESTING_count++;
  1247  000B14  0100               	movlb	0	; () banked
  1248  000B16  4BBD               	infsnz	powerPulseCheck@TESTING_count& (0+255),f,b
  1249  000B18  2BBE               	incf	(powerPulseCheck@TESTING_count+1)& (0+255),f,b
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;Current_Sense_Main.c: 421: timerCountHF = 0;
  1253  000B1A  0E00               	movlw	0
  1254  000B1C  6E48               	movwf	_timerCountHF,c	;volatile
  1255  000B1E  0E00               	movlw	0
  1256  000B20  6E49               	movwf	_timerCountHF+1,c	;volatile
  1257  000B22  0E00               	movlw	0
  1258  000B24  6E4A               	movwf	_timerCountHF+2,c	;volatile
  1259  000B26  0E00               	movlw	0
  1260  000B28  6E4B               	movwf	_timerCountHF+3,c	;volatile
  1261  000B2A                     l134:
  1262                           
  1263                           ;Current_Sense_Main.c: 422: }
  1264                           ;Current_Sense_Main.c: 424: if( TESTING_count < 5 )
  1265                           
  1266                           ; BSR set to: 0
  1267  000B2A  0100               	movlb	0	; () banked
  1268  000B2C  BFBE               	btfsc	(powerPulseCheck@TESTING_count+1)& (0+255),7,b
  1269  000B2E  D006               	goto	u3100
  1270  000B30  51BE               	movf	(powerPulseCheck@TESTING_count+1)& (0+255),w,b
  1271  000B32  E114               	bnz	l3469
  1272  000B34  0E05               	movlw	5
  1273  000B36  5DBD               	subwf	powerPulseCheck@TESTING_count& (0+255),w,b
  1274  000B38  B0D8               	btfsc	status,0,c
  1275  000B3A  D010               	goto	l135
  1276  000B3C                     u3100:
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Current_Sense_Main.c: 425: {
  1280                           ;Current_Sense_Main.c: 426: meterEnergyUsed = 0;
  1281  000B3C  0E00               	movlw	0
  1282  000B3E  6FB1               	movwf	_meterEnergyUsed& (0+255),b
  1283  000B40  0E00               	movlw	0
  1284  000B42  6FB2               	movwf	(_meterEnergyUsed+1)& (0+255),b
  1285  000B44  0E00               	movlw	0
  1286  000B46  6FB3               	movwf	(_meterEnergyUsed+2)& (0+255),b
  1287  000B48  0E00               	movlw	0
  1288  000B4A  6FB4               	movwf	(_meterEnergyUsed+3)& (0+255),b
  1289                           
  1290                           ;Current_Sense_Main.c: 427: meterWatts = 0;
  1291  000B4C  0E00               	movlw	0
  1292  000B4E  6FB5               	movwf	_meterWatts& (0+255),b
  1293  000B50  0E00               	movlw	0
  1294  000B52  6FB6               	movwf	(_meterWatts+1)& (0+255),b
  1295  000B54  0E00               	movlw	0
  1296  000B56  6FB7               	movwf	(_meterWatts+2)& (0+255),b
  1297  000B58  0E00               	movlw	0
  1298  000B5A  6FB8               	movwf	(_meterWatts+3)& (0+255),b
  1299  000B5C                     l135:
  1300  000B5C                     l3469:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Current_Sense_Main.c: 428: }
  1304                           ;Current_Sense_Main.c: 430: if( TESTING_count % 10 == 0 )
  1305  000B5C  C0BD  F013         	movff	powerPulseCheck@TESTING_count,___awmod@dividend
  1306  000B60  C0BE  F014         	movff	powerPulseCheck@TESTING_count+1,___awmod@dividend+1
  1307  000B64  0E00               	movlw	0
  1308  000B66  6E16               	movwf	___awmod@divisor+1,c
  1309  000B68  0E0A               	movlw	10
  1310  000B6A  6E15               	movwf	___awmod@divisor,c
  1311  000B6C  ECD2  F009         	call	___awmod	;wreg free
  1312  000B70  5013               	movf	?___awmod,w,c
  1313  000B72  1014               	iorwf	?___awmod+1,w,c
  1314  000B74  A4D8               	btfss	status,2,c
  1315  000B76  D01A               	goto	l136
  1316                           
  1317                           ;Current_Sense_Main.c: 431: {
  1318                           ;Current_Sense_Main.c: 432: if( TESTING_oneshot == 0 )
  1319  000B78  5046               	movf	powerPulseCheck@TESTING_oneshot,w,c
  1320  000B7A  A4D8               	btfss	status,2,c
  1321  000B7C  0012               	return	
  1322                           
  1323                           ;Current_Sense_Main.c: 433: {
  1324                           ;Current_Sense_Main.c: 434: TESTING_oneshot = 1;
  1325  000B7E  0E01               	movlw	1
  1326  000B80  6E46               	movwf	powerPulseCheck@TESTING_oneshot,c
  1327                           
  1328                           ;Current_Sense_Main.c: 436: if( PORTBbits.RB4 == 0 )
  1329  000B82  B881               	btfsc	3969,4,c	;volatile
  1330  000B84  D002               	goto	l138
  1331                           
  1332                           ;Current_Sense_Main.c: 437: {
  1333                           ;Current_Sense_Main.c: 438: LATBbits.LATB4 = 1;
  1334  000B86  888A               	bsf	3978,4,c	;volatile
  1335                           
  1336                           ;Current_Sense_Main.c: 441: }
  1337  000B88  D001               	goto	l139
  1338  000B8A                     l138:
  1339                           
  1340                           ;Current_Sense_Main.c: 442: else
  1341                           ;Current_Sense_Main.c: 443: {
  1342                           ;Current_Sense_Main.c: 445: LATBbits.LATB4 = 0;
  1343  000B8A  988A               	bcf	3978,4,c	;volatile
  1344  000B8C                     l139:
  1345                           
  1346                           ;Current_Sense_Main.c: 448: }
  1347                           ;Current_Sense_Main.c: 450: meterEnergyUsed++;
  1348  000B8C  0E01               	movlw	1
  1349  000B8E  0100               	movlb	0	; () banked
  1350  000B90  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1351  000B92  0E00               	movlw	0
  1352  000B94  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1353  000B96  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1354  000B98  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;Current_Sense_Main.c: 451: meterWatts = meterEnergyUsed;
  1358  000B9A  C0B1  F0B5         	movff	_meterEnergyUsed,_meterWatts
  1359  000B9E  C0B2  F0B6         	movff	_meterEnergyUsed+1,_meterWatts+1
  1360  000BA2  C0B3  F0B7         	movff	_meterEnergyUsed+2,_meterWatts+2
  1361  000BA6  C0B4  F0B8         	movff	_meterEnergyUsed+3,_meterWatts+3
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;Current_Sense_Main.c: 453: }
  1365                           ;Current_Sense_Main.c: 454: }
  1366  000BAA  0012               	return	
  1367  000BAC                     l136:
  1368                           
  1369                           ;Current_Sense_Main.c: 455: else
  1370                           ;Current_Sense_Main.c: 456: {
  1371                           ;Current_Sense_Main.c: 457: TESTING_oneshot = 0;
  1372                           
  1373                           ; BSR set to: 0
  1374  000BAC  0E00               	movlw	0
  1375  000BAE  6E46               	movwf	powerPulseCheck@TESTING_oneshot,c
  1376                           
  1377                           ;Current_Sense_Main.c: 458: }
  1378                           ;Current_Sense_Main.c: 460: return;
  1379  000BB0  0012               	return	
  1380  000BB2                     l3561:
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;Current_Sense_Main.c: 607: {
  1384                           ;Current_Sense_Main.c: 608: meterEnergyUsed++;
  1385  000BB2  0E01               	movlw	1
  1386  000BB4  27B1               	addwf	_meterEnergyUsed& (0+255),f,b
  1387  000BB6  0E00               	movlw	0
  1388  000BB8  23B2               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1389  000BBA  23B3               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1390  000BBC  23B4               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1391                           
  1392                           ;Current_Sense_Main.c: 609: meterEnergyUsedPart -= 100000;
  1393  000BBE  0E60               	movlw	96
  1394  000BC0  27AD               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1395  000BC2  0E79               	movlw	121
  1396  000BC4  23AE               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1397  000BC6  0EFE               	movlw	254
  1398  000BC8  23AF               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1399  000BCA  0EFF               	movlw	255
  1400  000BCC  23B0               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1401                           
  1402                           ; BSR set to: 0
  1403  000BCE  BFB0               	btfsc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),7,b
  1404  000BD0  D00A               	goto	l192
  1405  000BD2  51B0               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1406  000BD4  E1EE               	bnz	l3561
  1407  000BD6  0EA1               	movlw	161
  1408  000BD8  5DAD               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1409  000BDA  0E86               	movlw	134
  1410  000BDC  59AE               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1411  000BDE  0E01               	movlw	1
  1412  000BE0  59AF               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1413  000BE2  B0D8               	btfsc	status,0,c
  1414  000BE4  D7E6               	goto	l186
  1415  000BE6                     l192:
  1416                           
  1417                           ;Current_Sense_Main.c: 632: }
  1418                           ;Current_Sense_Main.c: 636: meterWatts = 77;
  1419  000BE6  0E4D               	movlw	77
  1420  000BE8  0100               	movlb	0	; () banked
  1421  000BEA  6FB5               	movwf	_meterWatts& (0+255),b
  1422  000BEC  0E00               	movlw	0
  1423  000BEE  6FB6               	movwf	(_meterWatts+1)& (0+255),b
  1424  000BF0  0E00               	movlw	0
  1425  000BF2  6FB7               	movwf	(_meterWatts+2)& (0+255),b
  1426  000BF4  0E00               	movlw	0
  1427  000BF6  6FB8               	movwf	(_meterWatts+3)& (0+255),b
  1428                           
  1429                           ;Current_Sense_Main.c: 637: meterEnergyUsed = 1121;
  1430  000BF8  0E61               	movlw	97
  1431  000BFA  6FB1               	movwf	_meterEnergyUsed& (0+255),b
  1432  000BFC  0E04               	movlw	4
  1433  000BFE  6FB2               	movwf	(_meterEnergyUsed+1)& (0+255),b
  1434  000C00  0E00               	movlw	0
  1435  000C02  6FB3               	movwf	(_meterEnergyUsed+2)& (0+255),b
  1436  000C04  0E00               	movlw	0
  1437  000C06  6FB4               	movwf	(_meterEnergyUsed+3)& (0+255),b
  1438  000C08  0012               	return	
  1439  000C0A                     __end_of_powerPulseCheck:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1l	equ	0xFE1
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function ___awmod *****************
  1452 ;; Defined at:
  1453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  dividend        2   18[COMRAM] int 
  1456 ;;  divisor         2   20[COMRAM] int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  sign            1   23[COMRAM] unsigned char 
  1459 ;;  counter         1   22[COMRAM] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2   18[COMRAM] int 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1469 ;;      Params:         4       0       0       0       0       0       0
  1470 ;;      Locals:         2       0       0       0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0
  1472 ;;      Totals:         6       0       0       0       0       0       0
  1473 ;;Total ram usage:        6 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_powerPulseCheck
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text3
  1484  0013A4                     __ptext3:
  1485                           	opt stack 0
  1486  0013A4                     ___awmod:
  1487                           	opt stack 28
  1488                           
  1489                           ;incstack = 0
  1490  0013A4  0E00               	movlw	0
  1491  0013A6  6E18               	movwf	___awmod@sign,c
  1492  0013A8  AE14               	btfss	___awmod@dividend+1,7,c
  1493  0013AA  D006               	goto	l661
  1494  0013AC  6C13               	negf	___awmod@dividend,c
  1495  0013AE  1E14               	comf	___awmod@dividend+1,f,c
  1496  0013B0  B0D8               	btfsc	status,0,c
  1497  0013B2  2A14               	incf	___awmod@dividend+1,f,c
  1498  0013B4  0E01               	movlw	1
  1499  0013B6  6E18               	movwf	___awmod@sign,c
  1500  0013B8                     l661:
  1501  0013B8  AE16               	btfss	___awmod@divisor+1,7,c
  1502  0013BA  D004               	goto	l662
  1503  0013BC  6C15               	negf	___awmod@divisor,c
  1504  0013BE  1E16               	comf	___awmod@divisor+1,f,c
  1505  0013C0  B0D8               	btfsc	status,0,c
  1506  0013C2  2A16               	incf	___awmod@divisor+1,f,c
  1507  0013C4                     l662:
  1508  0013C4  5015               	movf	___awmod@divisor,w,c
  1509  0013C6  1016               	iorwf	___awmod@divisor+1,w,c
  1510  0013C8  B4D8               	btfsc	status,2,c
  1511  0013CA  D018               	goto	l669
  1512  0013CC  0E01               	movlw	1
  1513  0013CE  6E17               	movwf	___awmod@counter,c
  1514  0013D0  D004               	goto	l664
  1515  0013D2  90D8               	bcf	status,0,c
  1516  0013D4  3615               	rlcf	___awmod@divisor,f,c
  1517  0013D6  3616               	rlcf	___awmod@divisor+1,f,c
  1518  0013D8  2A17               	incf	___awmod@counter,f,c
  1519  0013DA                     l664:
  1520  0013DA  AE16               	btfss	___awmod@divisor+1,7,c
  1521  0013DC  D7FA               	goto	l665
  1522  0013DE                     u3020:
  1523  0013DE  5015               	movf	___awmod@divisor,w,c
  1524  0013E0  5C13               	subwf	___awmod@dividend,w,c
  1525  0013E2  5016               	movf	___awmod@divisor+1,w,c
  1526  0013E4  5814               	subwfb	___awmod@dividend+1,w,c
  1527  0013E6  A0D8               	btfss	status,0,c
  1528  0013E8  D004               	goto	l668
  1529  0013EA  5015               	movf	___awmod@divisor,w,c
  1530  0013EC  5E13               	subwf	___awmod@dividend,f,c
  1531  0013EE  5016               	movf	___awmod@divisor+1,w,c
  1532  0013F0  5A14               	subwfb	___awmod@dividend+1,f,c
  1533  0013F2                     l668:
  1534  0013F2  90D8               	bcf	status,0,c
  1535  0013F4  3216               	rrcf	___awmod@divisor+1,f,c
  1536  0013F6  3215               	rrcf	___awmod@divisor,f,c
  1537  0013F8  2E17               	decfsz	___awmod@counter,f,c
  1538  0013FA  D7F1               	goto	u3020
  1539  0013FC                     l669:
  1540  0013FC  5018               	movf	___awmod@sign,w,c
  1541  0013FE  B4D8               	btfsc	status,2,c
  1542  001400  D004               	goto	l670
  1543  001402  6C13               	negf	___awmod@dividend,c
  1544  001404  1E14               	comf	___awmod@dividend+1,f,c
  1545  001406  B0D8               	btfsc	status,0,c
  1546  001408  2A14               	incf	___awmod@dividend+1,f,c
  1547  00140A                     l670:
  1548  00140A  C013  F013         	movff	___awmod@dividend,?___awmod
  1549  00140E  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1550  001412  0012               	return	
  1551  001414                     __end_of___awmod:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           postdec1	equ	0xFE5
  1560                           fsr1l	equ	0xFE1
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function ___aldiv *****************
  1564 ;; Defined at:
  1565 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  dividend        4   30[COMRAM] long 
  1568 ;;  divisor         4   34[COMRAM] long 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  quotient        4   40[COMRAM] long 
  1571 ;;  sign            1   39[COMRAM] unsigned char 
  1572 ;;  counter         1   38[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  4   30[COMRAM] long 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1582 ;;      Params:         8       0       0       0       0       0       0
  1583 ;;      Locals:         6       0       0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0
  1585 ;;      Totals:        14       0       0       0       0       0       0
  1586 ;;Total ram usage:       14 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_powerPulseCheck
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  000DF4                     __ptext4:
  1598                           	opt stack 0
  1599  000DF4                     ___aldiv:
  1600                           	opt stack 28
  1601                           
  1602                           ;incstack = 0
  1603  000DF4  0E00               	movlw	0
  1604  000DF6  6E28               	movwf	___aldiv@sign,c
  1605  000DF8  AE26               	btfss	___aldiv@divisor+3,7,c
  1606  000DFA  D00A               	goto	l522
  1607  000DFC  1E26               	comf	___aldiv@divisor+3,f,c
  1608  000DFE  1E25               	comf	___aldiv@divisor+2,f,c
  1609  000E00  1E24               	comf	___aldiv@divisor+1,f,c
  1610  000E02  6C23               	negf	___aldiv@divisor,c
  1611  000E04  0E00               	movlw	0
  1612  000E06  2224               	addwfc	___aldiv@divisor+1,f,c
  1613  000E08  2225               	addwfc	___aldiv@divisor+2,f,c
  1614  000E0A  2226               	addwfc	___aldiv@divisor+3,f,c
  1615  000E0C  0E01               	movlw	1
  1616  000E0E  6E28               	movwf	___aldiv@sign,c
  1617  000E10                     l522:
  1618  000E10  AE22               	btfss	___aldiv@dividend+3,7,c
  1619  000E12  D00A               	goto	l523
  1620  000E14  1E22               	comf	___aldiv@dividend+3,f,c
  1621  000E16  1E21               	comf	___aldiv@dividend+2,f,c
  1622  000E18  1E20               	comf	___aldiv@dividend+1,f,c
  1623  000E1A  6C1F               	negf	___aldiv@dividend,c
  1624  000E1C  0E00               	movlw	0
  1625  000E1E  2220               	addwfc	___aldiv@dividend+1,f,c
  1626  000E20  2221               	addwfc	___aldiv@dividend+2,f,c
  1627  000E22  2222               	addwfc	___aldiv@dividend+3,f,c
  1628  000E24  0E01               	movlw	1
  1629  000E26  1A28               	xorwf	___aldiv@sign,f,c
  1630  000E28                     l523:
  1631  000E28  0E00               	movlw	0
  1632  000E2A  6E29               	movwf	___aldiv@quotient,c
  1633  000E2C  0E00               	movlw	0
  1634  000E2E  6E2A               	movwf	___aldiv@quotient+1,c
  1635  000E30  0E00               	movlw	0
  1636  000E32  6E2B               	movwf	___aldiv@quotient+2,c
  1637  000E34  0E00               	movlw	0
  1638  000E36  6E2C               	movwf	___aldiv@quotient+3,c
  1639  000E38  5023               	movf	___aldiv@divisor,w,c
  1640  000E3A  1024               	iorwf	___aldiv@divisor+1,w,c
  1641  000E3C  1025               	iorwf	___aldiv@divisor+2,w,c
  1642  000E3E  1026               	iorwf	___aldiv@divisor+3,w,c
  1643  000E40  B4D8               	btfsc	status,2,c
  1644  000E42  D02A               	goto	l530
  1645  000E44  0E01               	movlw	1
  1646  000E46  6E27               	movwf	___aldiv@counter,c
  1647  000E48  D006               	goto	l525
  1648  000E4A  90D8               	bcf	status,0,c
  1649  000E4C  3623               	rlcf	___aldiv@divisor,f,c
  1650  000E4E  3624               	rlcf	___aldiv@divisor+1,f,c
  1651  000E50  3625               	rlcf	___aldiv@divisor+2,f,c
  1652  000E52  3626               	rlcf	___aldiv@divisor+3,f,c
  1653  000E54  2A27               	incf	___aldiv@counter,f,c
  1654  000E56                     l525:
  1655  000E56  AE26               	btfss	___aldiv@divisor+3,7,c
  1656  000E58  D7F8               	goto	l526
  1657  000E5A                     u2960:
  1658  000E5A  90D8               	bcf	status,0,c
  1659  000E5C  3629               	rlcf	___aldiv@quotient,f,c
  1660  000E5E  362A               	rlcf	___aldiv@quotient+1,f,c
  1661  000E60  362B               	rlcf	___aldiv@quotient+2,f,c
  1662  000E62  362C               	rlcf	___aldiv@quotient+3,f,c
  1663  000E64  5023               	movf	___aldiv@divisor,w,c
  1664  000E66  5C1F               	subwf	___aldiv@dividend,w,c
  1665  000E68  5024               	movf	___aldiv@divisor+1,w,c
  1666  000E6A  5820               	subwfb	___aldiv@dividend+1,w,c
  1667  000E6C  5025               	movf	___aldiv@divisor+2,w,c
  1668  000E6E  5821               	subwfb	___aldiv@dividend+2,w,c
  1669  000E70  5026               	movf	___aldiv@divisor+3,w,c
  1670  000E72  5822               	subwfb	___aldiv@dividend+3,w,c
  1671  000E74  A0D8               	btfss	status,0,c
  1672  000E76  D009               	goto	l529
  1673  000E78  5023               	movf	___aldiv@divisor,w,c
  1674  000E7A  5E1F               	subwf	___aldiv@dividend,f,c
  1675  000E7C  5024               	movf	___aldiv@divisor+1,w,c
  1676  000E7E  5A20               	subwfb	___aldiv@dividend+1,f,c
  1677  000E80  5025               	movf	___aldiv@divisor+2,w,c
  1678  000E82  5A21               	subwfb	___aldiv@dividend+2,f,c
  1679  000E84  5026               	movf	___aldiv@divisor+3,w,c
  1680  000E86  5A22               	subwfb	___aldiv@dividend+3,f,c
  1681  000E88  8029               	bsf	___aldiv@quotient,0,c
  1682  000E8A                     l529:
  1683  000E8A  90D8               	bcf	status,0,c
  1684  000E8C  3226               	rrcf	___aldiv@divisor+3,f,c
  1685  000E8E  3225               	rrcf	___aldiv@divisor+2,f,c
  1686  000E90  3224               	rrcf	___aldiv@divisor+1,f,c
  1687  000E92  3223               	rrcf	___aldiv@divisor,f,c
  1688  000E94  2E27               	decfsz	___aldiv@counter,f,c
  1689  000E96  D7E1               	goto	u2960
  1690  000E98                     l530:
  1691  000E98  5028               	movf	___aldiv@sign,w,c
  1692  000E9A  B4D8               	btfsc	status,2,c
  1693  000E9C  D008               	goto	l531
  1694  000E9E  1E2C               	comf	___aldiv@quotient+3,f,c
  1695  000EA0  1E2B               	comf	___aldiv@quotient+2,f,c
  1696  000EA2  1E2A               	comf	___aldiv@quotient+1,f,c
  1697  000EA4  6C29               	negf	___aldiv@quotient,c
  1698  000EA6  0E00               	movlw	0
  1699  000EA8  222A               	addwfc	___aldiv@quotient+1,f,c
  1700  000EAA  222B               	addwfc	___aldiv@quotient+2,f,c
  1701  000EAC  222C               	addwfc	___aldiv@quotient+3,f,c
  1702  000EAE                     l531:
  1703  000EAE  C029  F01F         	movff	___aldiv@quotient,?___aldiv
  1704  000EB2  C02A  F020         	movff	___aldiv@quotient+1,?___aldiv+1
  1705  000EB6  C02B  F021         	movff	___aldiv@quotient+2,?___aldiv+2
  1706  000EBA  C02C  F022         	movff	___aldiv@quotient+3,?___aldiv+3
  1707  000EBE  0012               	return	
  1708  000EC0                     __end_of___aldiv:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           postinc0	equ	0xFEE
  1715                           wreg	equ	0xFE8
  1716                           postdec1	equ	0xFE5
  1717                           fsr1l	equ	0xFE1
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _initTimer *****************
  1721 ;; Defined at:
  1722 ;;		line 732 in file "Current_Sense_Main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1736 ;;      Params:         0       0       0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text5
  1751  00189E                     __ptext5:
  1752                           	opt stack 0
  1753  00189E                     _initTimer:
  1754                           	opt stack 29
  1755                           
  1756                           ;Current_Sense_Main.c: 735: T0CONbits.TMR0ON = 0;
  1757                           
  1758                           ;incstack = 0
  1759  00189E  9ED5               	bcf	4053,7,c	;volatile
  1760                           
  1761                           ;Current_Sense_Main.c: 736: T0CONbits.T08BIT = 0;
  1762  0018A0  9CD5               	bcf	4053,6,c	;volatile
  1763                           
  1764                           ;Current_Sense_Main.c: 737: T0CONbits.T0CS = 0;
  1765  0018A2  9AD5               	bcf	4053,5,c	;volatile
  1766                           
  1767                           ;Current_Sense_Main.c: 738: T0CONbits.PSA = 0;
  1768  0018A4  96D5               	bcf	4053,3,c	;volatile
  1769                           
  1770                           ;Current_Sense_Main.c: 739: T0CONbits.T0PS = 0b001;
  1771  0018A6  50D5               	movf	4053,w,c	;volatile
  1772  0018A8  0BF8               	andlw	-8
  1773  0018AA  0901               	iorlw	1
  1774  0018AC  6ED5               	movwf	4053,c	;volatile
  1775                           
  1776                           ;Current_Sense_Main.c: 741: INTCONbits.TMR0IE = 1;
  1777  0018AE  8AF2               	bsf	intcon,5,c	;volatile
  1778                           
  1779                           ;Current_Sense_Main.c: 742: INTCONbits.GIE = 1;
  1780  0018B0  8EF2               	bsf	intcon,7,c	;volatile
  1781                           
  1782                           ;Current_Sense_Main.c: 743: T0CONbits.TMR0ON = 1;
  1783  0018B2  8ED5               	bsf	4053,7,c	;volatile
  1784  0018B4  0012               	return		;funcret
  1785  0018B6                     __end_of_initTimer:
  1786                           	opt stack 0
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           intcon	equ	0xFF2
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1l	equ	0xFE1
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _init *****************
  1799 ;; Defined at:
  1800 ;;		line 652 in file "Current_Sense_Main.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1814 ;;      Params:         0       0       0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    2
  1821 ;; This function calls:
  1822 ;;		_initIO
  1823 ;;		_initOSC
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text6
  1830  0018F2                     __ptext6:
  1831                           	opt stack 0
  1832  0018F2                     _init:
  1833                           	opt stack 28
  1834                           
  1835                           ;Current_Sense_Main.c: 654: initOSC( );
  1836                           
  1837                           ;incstack = 0
  1838  0018F2  EC5B  F00C         	call	_initOSC	;wreg free
  1839                           
  1840                           ;Current_Sense_Main.c: 655: initIO( );
  1841  0018F6  EC1F  F00C         	call	_initIO	;wreg free
  1842  0018FA  0012               	return	
  1843  0018FC                     __end_of_init:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _initOSC *****************
  1857 ;; Defined at:
  1858 ;;		line 662 in file "Current_Sense_Main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1872 ;;      Params:         0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_init
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text7
  1887  0018B6                     __ptext7:
  1888                           	opt stack 0
  1889  0018B6                     _initOSC:
  1890                           	opt stack 28
  1891                           
  1892                           ;Current_Sense_Main.c: 665: OSCCONbits.IDLEN = 0;
  1893                           
  1894                           ;incstack = 0
  1895  0018B6  9ED3               	bcf	4051,7,c	;volatile
  1896                           
  1897                           ;Current_Sense_Main.c: 666: OSCCONbits.IRCF = 0b111;
  1898  0018B8  88D3               	bsf	4051,4,c	;volatile
  1899  0018BA  8AD3               	bsf	4051,5,c	;volatile
  1900  0018BC  8CD3               	bsf	4051,6,c	;volatile
  1901                           
  1902                           ;Current_Sense_Main.c: 667: OSCCONbits.SCS = 0b11;
  1903  0018BE  0E03               	movlw	3
  1904  0018C0  12D3               	iorwf	4051,f,c	;volatile
  1905                           
  1906                           ;Current_Sense_Main.c: 669: OSCCON2bits.MFIOSEL = 0;
  1907  0018C2  98D2               	bcf	4050,4,c	;volatile
  1908                           
  1909                           ;Current_Sense_Main.c: 670: OSCCON2bits.SOSCGO = 0;
  1910  0018C4  96D2               	bcf	4050,3,c	;volatile
  1911                           
  1912                           ;Current_Sense_Main.c: 671: OSCCON2bits.PRISD = 0;
  1913  0018C6  94D2               	bcf	4050,2,c	;volatile
  1914                           
  1915                           ;Current_Sense_Main.c: 673: OSCTUNEbits.INTSRC = 1;
  1916  0018C8  8E9B               	bsf	3995,7,c	;volatile
  1917                           
  1918                           ;Current_Sense_Main.c: 674: OSCTUNEbits.PLLEN = 0;
  1919  0018CA  9C9B               	bcf	3995,6,c	;volatile
  1920  0018CC  0012               	return	
  1921  0018CE                     __end_of_initOSC:
  1922                           	opt stack 0
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           intcon	equ	0xFF2
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1l	equ	0xFE1
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _initIO *****************
  1935 ;; Defined at:
  1936 ;;		line 679 in file "Current_Sense_Main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1950 ;;      Params:         0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_init
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text8
  1965  00183E                     __ptext8:
  1966                           	opt stack 0
  1967  00183E                     _initIO:
  1968                           	opt stack 28
  1969                           
  1970                           ;Current_Sense_Main.c: 681: ADCON0bits.ADON = 0;
  1971                           
  1972                           ;incstack = 0
  1973  00183E  90C2               	bcf	4034,0,c	;volatile
  1974                           
  1975                           ;Current_Sense_Main.c: 682: ANSELA = 0b00000000;
  1976  001840  0E00               	movlw	0
  1977  001842  010F               	movlb	15	; () banked
  1978  001844  6F38               	movwf	56,b	;volatile
  1979                           
  1980                           ;Current_Sense_Main.c: 683: ANSELB = 0b00000000;
  1981  001846  0E00               	movlw	0
  1982  001848  6F39               	movwf	57,b	;volatile
  1983                           
  1984                           ;Current_Sense_Main.c: 684: ANSELC = 0b00000000;
  1985  00184A  0E00               	movlw	0
  1986  00184C  6F3A               	movwf	58,b	;volatile
  1987                           
  1988                           ; BSR set to: 15
  1989                           ;Current_Sense_Main.c: 686: TRISBbits.TRISB4 = 0;
  1990  00184E  9893               	bcf	3987,4,c	;volatile
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;Current_Sense_Main.c: 687: TRISCbits.TRISC0 = 0;
  1994  001850  9094               	bcf	3988,0,c	;volatile
  1995                           
  1996                           ; BSR set to: 15
  1997                           ;Current_Sense_Main.c: 688: TRISCbits.TRISC1 = 0;
  1998  001852  9294               	bcf	3988,1,c	;volatile
  1999                           
  2000                           ; BSR set to: 15
  2001                           ;Current_Sense_Main.c: 690: LATBbits.LATB4 = 0;
  2002  001854  988A               	bcf	3978,4,c	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005                           ;Current_Sense_Main.c: 691: LATCbits.LATC0 = 0;
  2006  001856  908B               	bcf	3979,0,c	;volatile
  2007                           
  2008                           ; BSR set to: 15
  2009                           ;Current_Sense_Main.c: 692: LATCbits.LATC1 = 0;
  2010  001858  928B               	bcf	3979,1,c	;volatile
  2011                           
  2012                           ; BSR set to: 15
  2013                           ;Current_Sense_Main.c: 695: TRISAbits.TRISA3 = 1;
  2014  00185A  8692               	bsf	3986,3,c	;volatile
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;Current_Sense_Main.c: 696: TRISAbits.TRISA2 = 1;
  2018  00185C  8492               	bsf	3986,2,c	;volatile
  2019  00185E  0012               	return	
  2020  001860                     __end_of_initIO:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _delayMS10 *****************
  2034 ;; Defined at:
  2035 ;;		line 643 in file "Current_Sense_Main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  count           2   18[COMRAM] int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  inx             2   21[COMRAM] int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2049 ;;      Params:         2       0       0       0       0       0       0
  2050 ;;      Locals:         2       0       0       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0
  2052 ;;      Totals:         5       0       0       0       0       0       0
  2053 ;;Total ram usage:        5 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text9
  2064  001744                     __ptext9:
  2065                           	opt stack 0
  2066  001744                     _delayMS10:
  2067                           	opt stack 29
  2068                           
  2069                           ;Current_Sense_Main.c: 645: for( int inx = 0; inx < count; inx++ )
  2070                           
  2071                           ; BSR set to: 15
  2072                           ;incstack = 0
  2073  001744  0E00               	movlw	0
  2074  001746  6E17               	movwf	delayMS10@inx+1,c
  2075  001748  0E00               	movlw	0
  2076  00174A  6E16               	movwf	delayMS10@inx,c
  2077  00174C  D009               	goto	l195
  2078  00174E                     
  2079                           ;Current_Sense_Main.c: 646: {
  2080                           ;Current_Sense_Main.c: 648: _delay((unsigned long)((10)*(16000000/4000.0)));
  2081  00174E  0E34               	movlw	52
  2082  001750  6E15               	movwf	??_delayMS10& (0+255),c
  2083  001752  0EF2               	movlw	242
  2084  001754                     u3387:
  2085  001754  2EE8               	decfsz	wreg,f,c
  2086  001756  D7FE               	bra	u3387
  2087  001758  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2088  00175A  D7FC               	bra	u3387
  2089  00175C  4A16               	infsnz	delayMS10@inx,f,c
  2090  00175E  2A17               	incf	delayMS10@inx+1,f,c
  2091  001760                     l195:
  2092  001760  5013               	movf	delayMS10@count,w,c
  2093  001762  5C16               	subwf	delayMS10@inx,w,c
  2094  001764  5017               	movf	delayMS10@inx+1,w,c
  2095  001766  0A80               	xorlw	128
  2096  001768  6E15               	movwf	??_delayMS10& (0+255),c
  2097  00176A  5014               	movf	delayMS10@count+1,w,c
  2098  00176C  0A80               	xorlw	128
  2099  00176E  5815               	subwfb	??_delayMS10& (0+255),w,c
  2100  001770  B0D8               	btfsc	status,0,c
  2101  001772  0012               	return	
  2102  001774  D7EC               	goto	l196
  2103  001776                     __end_of_delayMS10:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           intcon	equ	0xFF2
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1l	equ	0xFE1
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _communications *****************
  2117 ;; Defined at:
  2118 ;;		line 90 in file "SlaveComm_PIC18.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  firstTime       1    wreg     unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  firstTime       1   72[BANK0 ] unsigned char 
  2123 ;;  no_more_to_s    1   71[BANK0 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2133 ;;      Params:         0       0       0       0       0       0       0
  2134 ;;      Locals:         0       2       0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0
  2136 ;;      Totals:         0       2       0       0       0       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    7
  2140 ;; This function calls:
  2141 ;;		_SPISlaveInit
  2142 ;;		_process_data
  2143 ;;		_receive_data
  2144 ;;		_resetCommunications
  2145 ;;		_send_data
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text10
  2152  001036                     __ptext10:
  2153                           	opt stack 0
  2154  001036                     _communications:
  2155                           	opt stack 23
  2156                           
  2157                           ;incstack = 0
  2158                           ;communications@firstTime stored from wreg
  2159  001036  0100               	movlb	0	; () banked
  2160  001038  6FA8               	movwf	communications@firstTime& (0+255),b
  2161                           
  2162                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  2163                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  2164                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  2165                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  2166                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  2167                           ;SlaveComm_PIC18.c: 104: if( firstTime == 1 )
  2168  00103A  0100               	movlb	0	; () banked
  2169  00103C  05A8               	decf	communications@firstTime& (0+255),w,b
  2170  00103E  A4D8               	btfss	status,2,c
  2171  001040  D00E               	goto	l297
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;SlaveComm_PIC18.c: 105: {
  2175                           ;SlaveComm_PIC18.c: 106: SPISlaveInit( );
  2176  001042  EC63  F00B         	call	_SPISlaveInit	;wreg free
  2177                           
  2178                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  2179  001046  0E00               	movlw	0
  2180  001048  0100               	movlb	0	; () banked
  2181  00104A  6FE9               	movwf	(communications@send_buffer+40)& (0+255),b
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  2185  00104C  0E00               	movlw	0
  2186  00104E  6FEA               	movwf	(communications@send_buffer+41)& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;SlaveComm_PIC18.c: 109: resetCommunications( &send_buffer );
  2190  001050  0EC1               	movlw	low communications@send_buffer
  2191  001052  6F6C               	movwf	resetCommunications@send_buffer& (0+255),b
  2192  001054  0E00               	movlw	high communications@send_buffer
  2193  001056  6F6D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2194  001058  EC6D  F008         	call	_resetCommunications	;wreg free
  2195                           
  2196                           ;SlaveComm_PIC18.c: 110: }
  2197  00105C  0012               	return	
  2198  00105E                     l297:
  2199                           
  2200                           ;SlaveComm_PIC18.c: 111: else
  2201                           ;SlaveComm_PIC18.c: 112: {
  2202                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data( &receive_buffer );
  2203  00105E  0E00               	movlw	low communications@receive_buffer
  2204  001060  6E16               	movwf	receive_data@receive_buffer,c
  2205  001062  0E01               	movlw	high communications@receive_buffer
  2206  001064  6E17               	movwf	receive_data@receive_buffer+1,c
  2207  001066  EC60  F007         	call	_receive_data	;wreg free
  2208  00106A  6E3F               	movwf	communications@receive_current_state,c
  2209                           
  2210                           ;SlaveComm_PIC18.c: 117: switch( receive_current_state )
  2211  00106C  D012               	goto	l299
  2212  00106E                     
  2213                           ;SlaveComm_PIC18.c: 127: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  2214  00106E  0E00               	movlw	low communications@receive_buffer
  2215  001070  0100               	movlb	0	; () banked
  2216  001072  6F70               	movwf	process_data@receive_buffer& (0+255),b
  2217  001074  0E01               	movlw	high communications@receive_buffer
  2218  001076  6F71               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2219  001078  0EC1               	movlw	low communications@send_buffer
  2220  00107A  6F72               	movwf	process_data@send_buffer& (0+255),b
  2221  00107C  0E00               	movlw	high communications@send_buffer
  2222  00107E  6F73               	movwf	(process_data@send_buffer+1)& (0+255),b
  2223  001080  ECBB  F00B         	call	_process_data	;wreg free
  2224  001084  06E8               	decf	wreg,f,c
  2225  001086  A4D8               	btfss	status,2,c
  2226  001088  D00E               	goto	l301
  2227                           
  2228                           ;SlaveComm_PIC18.c: 128: {
  2229                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  2230  00108A  0E01               	movlw	1
  2231  00108C  0100               	movlb	0	; () banked
  2232  00108E  6FC0               	movwf	communications@end_of_transmission_received& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;SlaveComm_PIC18.c: 133: }
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;SlaveComm_PIC18.c: 130: }
  2239                           ;SlaveComm_PIC18.c: 132: break;
  2240  001090  D00A               	goto	l301
  2241  001092                     l299:
  2242                           
  2243                           ; BSR set to: 0
  2244  001092  503F               	movf	communications@receive_current_state,w,c
  2245                           
  2246                           ; Switch size 1, requested type "space"
  2247                           ; Number of cases is 3, Range of values is 0 to 2
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte           10     6 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  001094  0A00               	xorlw	0	; case 0
  2253  001096  B4D8               	btfsc	status,2,c
  2254  001098  D006               	goto	l301
  2255  00109A  0A01               	xorlw	1	; case 1
  2256  00109C  B4D8               	btfsc	status,2,c
  2257  00109E  D003               	goto	l301
  2258  0010A0  0A03               	xorlw	3	; case 2
  2259  0010A2  B4D8               	btfsc	status,2,c
  2260  0010A4  D7E4               	goto	l303
  2261  0010A6                     l301:
  2262                           
  2263                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data( &send_buffer );
  2264  0010A6  0EC1               	movlw	low communications@send_buffer
  2265  0010A8  6E15               	movwf	send_data@send_buffer,c
  2266  0010AA  0E00               	movlw	high communications@send_buffer
  2267  0010AC  6E16               	movwf	send_data@send_buffer+1,c
  2268  0010AE  EC0B  F009         	call	_send_data	;wreg free
  2269  0010B2  0100               	movlb	0	; () banked
  2270  0010B4  6FA7               	movwf	communications@no_more_to_send& (0+255),b
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  2274                           ;SlaveComm_PIC18.c: 139: if( PORTBbits.SS2 == 0b1 )
  2275  0010B6  A081               	btfss	3969,0,c	;volatile
  2276  0010B8  D003               	goto	l307
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;SlaveComm_PIC18.c: 140: {
  2280                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  2281  0010BA  0E00               	movlw	0
  2282  0010BC  6FBF               	movwf	communications@last_state_active& (0+255),b
  2283                           
  2284                           ;SlaveComm_PIC18.c: 142: }
  2285  0010BE  0012               	return	
  2286  0010C0                     l307:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;SlaveComm_PIC18.c: 143: else
  2290                           ;SlaveComm_PIC18.c: 144: {
  2291                           ;SlaveComm_PIC18.c: 145: if( last_state_active == 0 )
  2292                           
  2293                           ; BSR set to: 0
  2294  0010C0  51BF               	movf	communications@last_state_active& (0+255),w,b
  2295  0010C2  A4D8               	btfss	status,2,c
  2296  0010C4  D006               	goto	l309
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;SlaveComm_PIC18.c: 146: {
  2300                           ;SlaveComm_PIC18.c: 147: resetCommunications( &send_buffer );
  2301  0010C6  0EC1               	movlw	low communications@send_buffer
  2302  0010C8  6F6C               	movwf	resetCommunications@send_buffer& (0+255),b
  2303  0010CA  0E00               	movlw	high communications@send_buffer
  2304  0010CC  6F6D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2305  0010CE  EC6D  F008         	call	_resetCommunications	;wreg free
  2306  0010D2                     l309:
  2307                           
  2308                           ;SlaveComm_PIC18.c: 148: }
  2309                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  2310  0010D2  0E01               	movlw	1
  2311  0010D4  0100               	movlb	0	; () banked
  2312  0010D6  6FBF               	movwf	communications@last_state_active& (0+255),b
  2313                           
  2314                           ; BSR set to: 0
  2315                           
  2316                           ; BSR set to: 0
  2317  0010D8  0012               	return	
  2318  0010DA                     __end_of_communications:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           intcon	equ	0xFF2
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1l	equ	0xFE1
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _send_data *****************
  2332 ;; Defined at:
  2333 ;;		line 509 in file "SlaveComm_PIC18.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2336 ;;		 -> communications@send_buffer(42), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  send_end        1   24[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      unsigned char 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         2       0       0       0       0       0       0
  2349 ;;      Locals:         1       0       0       0       0       0       0
  2350 ;;      Temps:          2       0       0       0       0       0       0
  2351 ;;      Totals:         5       0       0       0       0       0       0
  2352 ;;Total ram usage:        5 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    2
  2355 ;; This function calls:
  2356 ;;		_SPI_send_data
  2357 ;; This function is called by:
  2358 ;;		_communications
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text11
  2363  001216                     __ptext11:
  2364                           	opt stack 0
  2365  001216                     _send_data:
  2366                           	opt stack 27
  2367                           
  2368                           ;SlaveComm_PIC18.c: 511: bool send_end;
  2369                           ;SlaveComm_PIC18.c: 513: if( send_buffer->read_position == send_buffer->write_position )
  2370                           
  2371                           ;incstack = 0
  2372  001216  EE20 F028          	lfsr	2,40
  2373  00121A  5015               	movf	send_data@send_buffer,w,c
  2374  00121C  26D9               	addwf	fsr2l,f,c
  2375  00121E  5016               	movf	send_data@send_buffer+1,w,c
  2376  001220  22DA               	addwfc	fsr2h,f,c
  2377  001222  EE10 F029          	lfsr	1,41
  2378  001226  5015               	movf	send_data@send_buffer,w,c
  2379  001228  26E1               	addwf	fsr1l,f,c
  2380  00122A  5016               	movf	send_data@send_buffer+1,w,c
  2381  00122C  22E2               	addwfc	fsr1h,f,c
  2382  00122E  50DE               	movf	postinc2,w,c
  2383  001230  18E6               	xorwf	postinc1,w,c
  2384  001232  A4D8               	btfss	status,2,c
  2385  001234  D006               	goto	l402
  2386                           
  2387                           ;SlaveComm_PIC18.c: 514: {
  2388                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  2389  001236  0E01               	movlw	1
  2390  001238  6E19               	movwf	send_data@send_end,c
  2391                           
  2392                           ;SlaveComm_PIC18.c: 516: SPI_send_data( '\0' );
  2393  00123A  0E00               	movlw	0
  2394  00123C  EC30  F00C         	call	_SPI_send_data
  2395                           
  2396                           ;SlaveComm_PIC18.c: 517: }
  2397  001240  D030               	goto	l405
  2398  001242                     l402:
  2399                           
  2400                           ;SlaveComm_PIC18.c: 518: else
  2401                           ;SlaveComm_PIC18.c: 519: {
  2402                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  2403  001242  0E00               	movlw	0
  2404  001244  6E19               	movwf	send_data@send_end,c
  2405                           
  2406                           ;SlaveComm_PIC18.c: 523: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  2407  001246  EE20 F029          	lfsr	2,41
  2408  00124A  5015               	movf	send_data@send_buffer,w,c
  2409  00124C  26D9               	addwf	fsr2l,f,c
  2410  00124E  5016               	movf	send_data@send_buffer+1,w,c
  2411  001250  22DA               	addwfc	fsr2h,f,c
  2412  001252  50DF               	movf	indf2,w,c
  2413  001254  6E17               	movwf	??_send_data& (0+255),c
  2414  001256  5017               	movf	??_send_data,w,c
  2415  001258  0D01               	mullw	1
  2416  00125A  50F3               	movf	prodl,w,c
  2417  00125C  2415               	addwf	send_data@send_buffer,w,c
  2418  00125E  6ED9               	movwf	fsr2l,c
  2419  001260  50F4               	movf	prodh,w,c
  2420  001262  2016               	addwfc	send_data@send_buffer+1,w,c
  2421  001264  6EDA               	movwf	fsr2h,c
  2422  001266  50DF               	movf	indf2,w,c
  2423  001268  EC30  F00C         	call	_SPI_send_data
  2424  00126C  06E8               	decf	wreg,f,c
  2425  00126E  A4D8               	btfss	status,2,c
  2426  001270  D018               	goto	l405
  2427                           
  2428                           ;SlaveComm_PIC18.c: 524: {
  2429                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2430  001272  EE20 F029          	lfsr	2,41
  2431  001276  5015               	movf	send_data@send_buffer,w,c
  2432  001278  26D9               	addwf	fsr2l,f,c
  2433  00127A  5016               	movf	send_data@send_buffer+1,w,c
  2434  00127C  22DA               	addwfc	fsr2h,f,c
  2435  00127E  2ADF               	incf	indf2,f,c
  2436                           
  2437                           ;SlaveComm_PIC18.c: 527: if( send_buffer->read_position >= 40 )
  2438  001280  EE20 F029          	lfsr	2,41
  2439  001284  5015               	movf	send_data@send_buffer,w,c
  2440  001286  26D9               	addwf	fsr2l,f,c
  2441  001288  5016               	movf	send_data@send_buffer+1,w,c
  2442  00128A  22DA               	addwfc	fsr2h,f,c
  2443  00128C  0E27               	movlw	39
  2444  00128E  64DF               	cpfsgt	indf2,c
  2445  001290  D008               	goto	l405
  2446                           
  2447                           ;SlaveComm_PIC18.c: 528: {
  2448                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2449  001292  EE20 F029          	lfsr	2,41
  2450  001296  5015               	movf	send_data@send_buffer,w,c
  2451  001298  26D9               	addwf	fsr2l,f,c
  2452  00129A  5016               	movf	send_data@send_buffer+1,w,c
  2453  00129C  22DA               	addwfc	fsr2h,f,c
  2454  00129E  0E00               	movlw	0
  2455  0012A0  6EDF               	movwf	indf2,c
  2456  0012A2                     l405:
  2457                           
  2458                           ;SlaveComm_PIC18.c: 530: }
  2459                           ;SlaveComm_PIC18.c: 531: }
  2460                           ;SlaveComm_PIC18.c: 532: }
  2461                           ;SlaveComm_PIC18.c: 534: return send_end;
  2462  0012A2  5019               	movf	send_data@send_end,w,c
  2463  0012A4  0012               	return	
  2464  0012A6                     __end_of_send_data:
  2465                           	opt stack 0
  2466                           tblptru	equ	0xFF8
  2467                           tblptrh	equ	0xFF7
  2468                           tblptrl	equ	0xFF6
  2469                           tablat	equ	0xFF5
  2470                           prodh	equ	0xFF4
  2471                           prodl	equ	0xFF3
  2472                           intcon	equ	0xFF2
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postinc1	equ	0xFE6
  2476                           postdec1	equ	0xFE5
  2477                           fsr1h	equ	0xFE2
  2478                           fsr1l	equ	0xFE1
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _SPI_send_data *****************
  2486 ;; Defined at:
  2487 ;;		line 616 in file "SlaveComm_PIC18.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  data            1    wreg     unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  data            1   18[COMRAM] unsigned char 
  2492 ;;  sendGood        1   19[COMRAM] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      unsigned char 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2502 ;;      Params:         0       0       0       0       0       0       0
  2503 ;;      Locals:         2       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0
  2505 ;;      Totals:         2       0       0       0       0       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_send_data
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text12
  2517  001860                     __ptext12:
  2518                           	opt stack 0
  2519  001860                     _SPI_send_data:
  2520                           	opt stack 27
  2521                           
  2522                           ;incstack = 0
  2523                           ;SPI_send_data@data stored from wreg
  2524  001860  6E13               	movwf	SPI_send_data@data,c
  2525                           
  2526                           ;SlaveComm_PIC18.c: 618: bool sendGood = 0;
  2527  001862  0E00               	movlw	0
  2528  001864  6E14               	movwf	SPI_send_data@sendGood,c
  2529                           
  2530                           ;SlaveComm_PIC18.c: 620: if( SPI_transmit_wait == 0 )
  2531  001866  5040               	movf	_SPI_transmit_wait,w,c
  2532  001868  A4D8               	btfss	status,2,c
  2533  00186A  D006               	goto	l437
  2534                           
  2535                           ;SlaveComm_PIC18.c: 621: {
  2536                           ;SlaveComm_PIC18.c: 622: SSP2BUF = data;
  2537  00186C  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2538                           
  2539                           ;SlaveComm_PIC18.c: 623: SPI_transmit_wait = 1;
  2540  001870  0E01               	movlw	1
  2541  001872  6E40               	movwf	_SPI_transmit_wait,c
  2542                           
  2543                           ;SlaveComm_PIC18.c: 624: sendGood = 1;
  2544  001874  0E01               	movlw	1
  2545  001876  D001               	goto	L4
  2546  001878                     l437:
  2547                           
  2548                           ;SlaveComm_PIC18.c: 626: else
  2549                           ;SlaveComm_PIC18.c: 627: {
  2550                           ;SlaveComm_PIC18.c: 628: sendGood = 0;
  2551  001878  0E00               	movlw	0
  2552  00187A                     L4:
  2553  00187A  6E14               	movwf	SPI_send_data@sendGood,c
  2554                           
  2555                           ;SlaveComm_PIC18.c: 629: }
  2556                           ;SlaveComm_PIC18.c: 631: return sendGood;
  2557  00187C  5014               	movf	SPI_send_data@sendGood,w,c
  2558  00187E  0012               	return	
  2559  001880                     __end_of_SPI_send_data:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postinc1	equ	0xFE6
  2571                           postdec1	equ	0xFE5
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           indf2	equ	0xFDF
  2575                           postinc2	equ	0xFDE
  2576                           fsr2h	equ	0xFDA
  2577                           fsr2l	equ	0xFD9
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _resetCommunications *****************
  2581 ;; Defined at:
  2582 ;;		line 158 in file "SlaveComm_PIC18.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  send_buffer     2   12[BANK0 ] PTR struct buffer
  2585 ;;		 -> communications@send_buffer(42), 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2597 ;;      Params:         0       2       0       0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0
  2599 ;;      Temps:          0       2       0       0       0       0       0
  2600 ;;      Totals:         0       4       0       0       0       0       0
  2601 ;;Total ram usage:        4 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    5
  2604 ;; This function calls:
  2605 ;;		_com_command_setEnergyUsed
  2606 ;;		_com_command_setPower
  2607 ;;		_com_command_setVersion
  2608 ;; This function is called by:
  2609 ;;		_communications
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text13
  2614  0010DA                     __ptext13:
  2615                           	opt stack 0
  2616  0010DA                     _resetCommunications:
  2617                           	opt stack 24
  2618                           
  2619                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2620                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2621                           
  2622                           ;incstack = 0
  2623  0010DA  9A6C               	bcf	3948,5,c	;volatile
  2624                           
  2625                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2626  0010DC  0E06               	movlw	6
  2627  0010DE  0100               	movlb	0	; () banked
  2628  0010E0  6F6E               	movwf	??_resetCommunications& (0+255),b
  2629  0010E2  0E30               	movlw	48
  2630  0010E4                     u3397:
  2631  0010E4  2EE8               	decfsz	wreg,f,c
  2632  0010E6  D7FE               	bra	u3397
  2633  0010E8  2F6E               	decfsz	??_resetCommunications& (0+255),f,b
  2634  0010EA  D7FC               	bra	u3397
  2635  0010EC  F000               	nop	
  2636                           
  2637                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2638  0010EE  8A6C               	bsf	3948,5,c	;volatile
  2639                           
  2640                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2641  0010F0  9E6C               	bcf	3948,7,c	;volatile
  2642                           
  2643                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2644  0010F2  0E00               	movlw	0
  2645  0010F4  6E40               	movwf	_SPI_transmit_wait,c
  2646                           
  2647                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2648  0010F6  0100               	movlb	0	; () banked
  2649  0010F8  EE20 F029          	lfsr	2,41
  2650  0010FC  516C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2651  0010FE  26D9               	addwf	fsr2l,f,c
  2652  001100  516D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2653  001102  22DA               	addwfc	fsr2h,f,c
  2654  001104  0E00               	movlw	0
  2655  001106  6EDF               	movwf	indf2,c
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2659  001108  EE20 F028          	lfsr	2,40
  2660  00110C  516C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2661  00110E  26D9               	addwf	fsr2l,f,c
  2662  001110  516D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2663  001112  22DA               	addwfc	fsr2h,f,c
  2664  001114  0E00               	movlw	0
  2665  001116  6EDF               	movwf	indf2,c
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;SlaveComm_PIC18.c: 177: commState++;
  2669  001118  4BBB               	infsnz	resetCommunications@commState& (0+255),f,b
  2670  00111A  2BBC               	incf	(resetCommunications@commState+1)& (0+255),f,b
  2671                           
  2672                           ;SlaveComm_PIC18.c: 178: switch( commState )
  2673  00111C  D01A               	goto	l315
  2674  00111E                     
  2675                           ; BSR set to: 0
  2676                           ;SlaveComm_PIC18.c: 181: com_command_setVersion( send_buffer );
  2677                           
  2678                           ; BSR set to: 0
  2679  00111E  C06C  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2680  001122  C06D  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2681  001126  ECE8  F00B         	call	_com_command_setVersion	;wreg free
  2682                           
  2683                           ;SlaveComm_PIC18.c: 182: break;
  2684  00112A  0012               	return	
  2685  00112C                     
  2686                           ;SlaveComm_PIC18.c: 184: com_command_setPower( send_buffer );
  2687  00112C  C06C  F037         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2688  001130  C06D  F038         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2689  001134  EC19  F00B         	call	_com_command_setPower	;wreg free
  2690                           
  2691                           ;SlaveComm_PIC18.c: 197: break;
  2692  001138  0012               	return	
  2693  00113A                     
  2694                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed( send_buffer );
  2695  00113A  C06C  F037         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2696  00113E  C06D  F038         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2697  001142  EC3E  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2698  001146                     
  2699                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2700  001146  0E00               	movlw	0
  2701  001148  0100               	movlb	0	; () banked
  2702  00114A  6FBC               	movwf	(resetCommunications@commState+1)& (0+255),b
  2703  00114C  0E00               	movlw	0
  2704  00114E  6FBB               	movwf	resetCommunications@commState& (0+255),b
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;SlaveComm_PIC18.c: 213: }
  2708                           
  2709                           ;SlaveComm_PIC18.c: 212: break;
  2710  001150  0012               	return	
  2711  001152                     l315:
  2712                           
  2713                           ; BSR set to: 0
  2714                           
  2715                           ; BSR set to: 0
  2716  001152  C0BB  F06E         	movff	resetCommunications@commState,??_resetCommunications
  2717  001156  C0BC  F06F         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2718                           
  2719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2720                           ; Switch size 1, requested type "space"
  2721                           ; Number of cases is 1, Range of values is 0 to 0
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte            4     3 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726  00115A  516F               	movf	(??_resetCommunications+1)& (0+255),w,b
  2727  00115C  0A00               	xorlw	0	; case 0
  2728  00115E  A4D8               	btfss	status,2,c
  2729  001160  D7F2               	goto	l320
  2730                           
  2731                           ; BSR set to: 0
  2732                           ; Switch size 1, requested type "space"
  2733                           ; Number of cases is 3, Range of values is 1 to 3
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte           10     6 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738  001162  516E               	movf	??_resetCommunications& (0+255),w,b
  2739  001164  0A01               	xorlw	1	; case 1
  2740  001166  B4D8               	btfsc	status,2,c
  2741  001168  D7DA               	goto	l316
  2742  00116A  0A03               	xorlw	3	; case 2
  2743  00116C  B4D8               	btfsc	status,2,c
  2744  00116E  D7DE               	goto	l318
  2745  001170  0A01               	xorlw	1	; case 3
  2746  001172  B4D8               	btfsc	status,2,c
  2747  001174  D7E2               	goto	l319
  2748  001176  D7E7               	goto	l320
  2749  001178                     __end_of_resetCommunications:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           prodh	equ	0xFF4
  2756                           prodl	equ	0xFF3
  2757                           intcon	equ	0xFF2
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postinc1	equ	0xFE6
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           indf2	equ	0xFDF
  2765                           postinc2	equ	0xFDE
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _com_command_setVersion *****************
  2771 ;; Defined at:
  2772 ;;		line 709 in file "SlaveComm_PIC18.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2775 ;;		 -> communications@send_buffer(42), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2787 ;;      Params:         2       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    4
  2794 ;; This function calls:
  2795 ;;		_command_builder3
  2796 ;; This function is called by:
  2797 ;;		_resetCommunications
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text14
  2802  0017D0                     __ptext14:
  2803                           	opt stack 0
  2804  0017D0                     _com_command_setVersion:
  2805                           	opt stack 24
  2806                           
  2807                           ;SlaveComm_PIC18.c: 711: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2808                           
  2809                           ;incstack = 0
  2810  0017D0  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2811  0017D4  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2812  0017D8  0E54               	movlw	low STR_2
  2813  0017DA  6E21               	movwf	command_builder3@data1,c
  2814  0017DC  0E06               	movlw	high STR_2
  2815  0017DE  6E22               	movwf	command_builder3@data1+1,c
  2816  0017E0  0E0D               	movlw	low STR_12
  2817  0017E2  6E23               	movwf	command_builder3@data2,c
  2818  0017E4  0E06               	movlw	high STR_12
  2819  0017E6  6E24               	movwf	command_builder3@data2+1,c
  2820  0017E8  0E4C               	movlw	low STR_30
  2821  0017EA  6E25               	movwf	command_builder3@data3,c
  2822  0017EC  0E06               	movlw	high STR_30
  2823  0017EE  6E26               	movwf	command_builder3@data3+1,c
  2824  0017F0  ECBC  F008         	call	_command_builder3	;wreg free
  2825  0017F4  0012               	return		;funcret
  2826  0017F6                     __end_of_com_command_setVersion:
  2827                           	opt stack 0
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           postinc1	equ	0xFE6
  2838                           postdec1	equ	0xFE5
  2839                           fsr1h	equ	0xFE2
  2840                           fsr1l	equ	0xFE1
  2841                           indf2	equ	0xFDF
  2842                           postinc2	equ	0xFDE
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _com_command_setPower *****************
  2848 ;; Defined at:
  2849 ;;		line 651 in file "SlaveComm_PIC18.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  2852 ;;		 -> communications@send_buffer(42), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         2       0       0       0       0       0       0
  2865 ;;      Locals:         0      12       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0
  2867 ;;      Totals:         2      12       0       0       0       0       0
  2868 ;;Total ram usage:       14 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    4
  2871 ;; This function calls:
  2872 ;;		_command_builder3
  2873 ;;		_ltoa
  2874 ;; This function is called by:
  2875 ;;		_resetCommunications
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text15
  2880  001632                     __ptext15:
  2881                           	opt stack 0
  2882  001632                     _com_command_setPower:
  2883                           	opt stack 24
  2884                           
  2885                           ;SlaveComm_PIC18.c: 654: char temp[12];
  2886                           ;SlaveComm_PIC18.c: 667: ltoa( temp, meterWatts, 10 );
  2887                           
  2888                           ;incstack = 0
  2889  001632  0E60               	movlw	low com_command_setPower@temp
  2890  001634  6E2D               	movwf	ltoa@buf,c
  2891  001636  0E00               	movlw	high com_command_setPower@temp
  2892  001638  6E2E               	movwf	ltoa@buf+1,c
  2893  00163A  C0B5  F02F         	movff	_meterWatts,ltoa@val
  2894  00163E  C0B6  F030         	movff	_meterWatts+1,ltoa@val+1
  2895  001642  C0B7  F031         	movff	_meterWatts+2,ltoa@val+2
  2896  001646  C0B8  F032         	movff	_meterWatts+3,ltoa@val+3
  2897  00164A  0E00               	movlw	0
  2898  00164C  6E34               	movwf	ltoa@base+1,c
  2899  00164E  0E0A               	movlw	10
  2900  001650  6E33               	movwf	ltoa@base,c
  2901  001652  ECF0  F00A         	call	_ltoa	;wreg free
  2902                           
  2903                           ;SlaveComm_PIC18.c: 669: command_builder3( send_buffer, "Set", "Watts", temp );
  2904  001656  C037  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2905  00165A  C038  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2906  00165E  0E54               	movlw	low STR_2
  2907  001660  6E21               	movwf	command_builder3@data1,c
  2908  001662  0E06               	movlw	high STR_2
  2909  001664  6E22               	movwf	command_builder3@data1+1,c
  2910  001666  0E2A               	movlw	low STR_8
  2911  001668  6E23               	movwf	command_builder3@data2,c
  2912  00166A  0E06               	movlw	high STR_8
  2913  00166C  6E24               	movwf	command_builder3@data2+1,c
  2914  00166E  0E60               	movlw	low com_command_setPower@temp
  2915  001670  6E25               	movwf	command_builder3@data3,c
  2916  001672  0E00               	movlw	high com_command_setPower@temp
  2917  001674  6E26               	movwf	command_builder3@data3+1,c
  2918  001676  ECBC  F008         	call	_command_builder3	;wreg free
  2919  00167A  0012               	return	
  2920  00167C                     __end_of_com_command_setPower:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           intcon	equ	0xFF2
  2929                           postinc0	equ	0xFEE
  2930                           wreg	equ	0xFE8
  2931                           postinc1	equ	0xFE6
  2932                           postdec1	equ	0xFE5
  2933                           fsr1h	equ	0xFE2
  2934                           fsr1l	equ	0xFE1
  2935                           indf2	equ	0xFDF
  2936                           postinc2	equ	0xFDE
  2937                           fsr2h	equ	0xFDA
  2938                           fsr2l	equ	0xFD9
  2939                           status	equ	0xFD8
  2940                           
  2941 ;; *************** function _receive_data *****************
  2942 ;; Defined at:
  2943 ;;		line 217 in file "SlaveComm_PIC18.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2946 ;;		 -> communications@receive_buffer(42), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  data            1   24[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      enum E6751
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2958 ;;      Params:         2       0       0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0       0       0
  2960 ;;      Temps:          1       0       0       0       0       0       0
  2961 ;;      Totals:         4       0       0       0       0       0       0
  2962 ;;Total ram usage:        4 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    2
  2965 ;; This function calls:
  2966 ;;		_SPI_receive_data
  2967 ;; This function is called by:
  2968 ;;		_communications
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text16
  2973  000EC0                     __ptext16:
  2974                           	opt stack 0
  2975  000EC0                     _receive_data:
  2976                           	opt stack 27
  2977                           
  2978                           ;SlaveComm_PIC18.c: 219: char data;
  2979                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2980                           ;SlaveComm_PIC18.c: 223: if( my_status == receive_end_command )
  2981                           
  2982                           ;incstack = 0
  2983  000EC0  0E02               	movlw	2
  2984  000EC2  183E               	xorwf	receive_data@my_status,w,c
  2985  000EC4  A4D8               	btfss	status,2,c
  2986  000EC6  D002               	goto	l326
  2987                           
  2988                           ;SlaveComm_PIC18.c: 224: {
  2989                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2990  000EC8  0E00               	movlw	0
  2991  000ECA  6E3E               	movwf	receive_data@my_status,c
  2992  000ECC                     l326:
  2993                           
  2994                           ;SlaveComm_PIC18.c: 226: }
  2995                           ;SlaveComm_PIC18.c: 228: if( SPI_receive_data( &data ) == 1 )
  2996  000ECC  0E19               	movlw	low receive_data@data
  2997  000ECE  6E13               	movwf	SPI_receive_data@data,c
  2998  000ED0  0E00               	movlw	high receive_data@data
  2999  000ED2  6E14               	movwf	SPI_receive_data@data+1,c
  3000  000ED4  ECD4  F00B         	call	_SPI_receive_data	;wreg free
  3001  000ED8  06E8               	decf	wreg,f,c
  3002  000EDA  A4D8               	btfss	status,2,c
  3003  000EDC  D04F               	goto	l332
  3004                           
  3005                           ;SlaveComm_PIC18.c: 234: }
  3006                           ;SlaveComm_PIC18.c: 236: if( (data == '!') && (my_status != receive_in_command) )
  3007                           
  3008                           ;SlaveComm_PIC18.c: 232: {
  3009  000EDE  0E21               	movlw	33
  3010  000EE0  1819               	xorwf	receive_data@data,w,c
  3011  000EE2  A4D8               	btfss	status,2,c
  3012  000EE4  D015               	goto	l329
  3013  000EE6  043E               	decf	receive_data@my_status,w,c
  3014  000EE8  B4D8               	btfsc	status,2,c
  3015  000EEA  D012               	goto	l329
  3016                           
  3017                           ;SlaveComm_PIC18.c: 237: {
  3018                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  3019  000EEC  0E01               	movlw	1
  3020  000EEE  6E3E               	movwf	receive_data@my_status,c
  3021                           
  3022                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  3023  000EF0  EE20 F029          	lfsr	2,41
  3024  000EF4  5016               	movf	receive_data@receive_buffer,w,c
  3025  000EF6  26D9               	addwf	fsr2l,f,c
  3026  000EF8  5017               	movf	receive_data@receive_buffer+1,w,c
  3027  000EFA  22DA               	addwfc	fsr2h,f,c
  3028  000EFC  0E00               	movlw	0
  3029  000EFE  6EDF               	movwf	indf2,c
  3030                           
  3031                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  3032  000F00  EE20 F028          	lfsr	2,40
  3033  000F04  5016               	movf	receive_data@receive_buffer,w,c
  3034  000F06  26D9               	addwf	fsr2l,f,c
  3035  000F08  5017               	movf	receive_data@receive_buffer+1,w,c
  3036  000F0A  22DA               	addwfc	fsr2h,f,c
  3037  000F0C  0E00               	movlw	0
  3038  000F0E  6EDF               	movwf	indf2,c
  3039  000F10                     l329:
  3040                           
  3041                           ;SlaveComm_PIC18.c: 241: }
  3042                           ;SlaveComm_PIC18.c: 243: if( my_status == receive_in_command )
  3043  000F10  043E               	decf	receive_data@my_status,w,c
  3044  000F12  A4D8               	btfss	status,2,c
  3045  000F14  D02A               	goto	l331
  3046                           
  3047                           ;SlaveComm_PIC18.c: 244: {
  3048                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3049  000F16  EE20 F028          	lfsr	2,40
  3050  000F1A  5016               	movf	receive_data@receive_buffer,w,c
  3051  000F1C  26D9               	addwf	fsr2l,f,c
  3052  000F1E  5017               	movf	receive_data@receive_buffer+1,w,c
  3053  000F20  22DA               	addwfc	fsr2h,f,c
  3054  000F22  50DF               	movf	indf2,w,c
  3055  000F24  6E18               	movwf	??_receive_data& (0+255),c
  3056  000F26  5018               	movf	??_receive_data,w,c
  3057  000F28  0D01               	mullw	1
  3058  000F2A  50F3               	movf	prodl,w,c
  3059  000F2C  2416               	addwf	receive_data@receive_buffer,w,c
  3060  000F2E  6ED9               	movwf	fsr2l,c
  3061  000F30  50F4               	movf	prodh,w,c
  3062  000F32  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3063  000F34  6EDA               	movwf	fsr2h,c
  3064  000F36  C019  FFDF         	movff	receive_data@data,indf2
  3065                           
  3066                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  3067  000F3A  EE20 F028          	lfsr	2,40
  3068  000F3E  5016               	movf	receive_data@receive_buffer,w,c
  3069  000F40  26D9               	addwf	fsr2l,f,c
  3070  000F42  5017               	movf	receive_data@receive_buffer+1,w,c
  3071  000F44  22DA               	addwfc	fsr2h,f,c
  3072  000F46  2ADF               	incf	indf2,f,c
  3073                           
  3074                           ;SlaveComm_PIC18.c: 248: if( receive_buffer->write_position >= 40 )
  3075  000F48  EE20 F028          	lfsr	2,40
  3076  000F4C  5016               	movf	receive_data@receive_buffer,w,c
  3077  000F4E  26D9               	addwf	fsr2l,f,c
  3078  000F50  5017               	movf	receive_data@receive_buffer+1,w,c
  3079  000F52  22DA               	addwfc	fsr2h,f,c
  3080  000F54  0E27               	movlw	39
  3081  000F56  64DF               	cpfsgt	indf2,c
  3082  000F58  D008               	goto	l331
  3083                           
  3084                           ;SlaveComm_PIC18.c: 249: {
  3085                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  3086  000F5A  EE20 F028          	lfsr	2,40
  3087  000F5E  5016               	movf	receive_data@receive_buffer,w,c
  3088  000F60  26D9               	addwf	fsr2l,f,c
  3089  000F62  5017               	movf	receive_data@receive_buffer+1,w,c
  3090  000F64  22DA               	addwfc	fsr2h,f,c
  3091  000F66  0E27               	movlw	39
  3092  000F68  6EDF               	movwf	indf2,c
  3093  000F6A                     l331:
  3094                           
  3095                           ;SlaveComm_PIC18.c: 251: }
  3096                           ;SlaveComm_PIC18.c: 252: }
  3097                           ;SlaveComm_PIC18.c: 254: if( (my_status == receive_in_command) && (data == '*') )
  3098  000F6A  043E               	decf	receive_data@my_status,w,c
  3099  000F6C  A4D8               	btfss	status,2,c
  3100  000F6E  D006               	goto	l332
  3101  000F70  0E2A               	movlw	42
  3102  000F72  1819               	xorwf	receive_data@data,w,c
  3103  000F74  A4D8               	btfss	status,2,c
  3104  000F76  D002               	goto	l332
  3105                           
  3106                           ;SlaveComm_PIC18.c: 255: {
  3107                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  3108  000F78  0E02               	movlw	2
  3109  000F7A  6E3E               	movwf	receive_data@my_status,c
  3110  000F7C                     l332:
  3111                           
  3112                           ;SlaveComm_PIC18.c: 257: }
  3113                           ;SlaveComm_PIC18.c: 258: }
  3114                           ;SlaveComm_PIC18.c: 260: return my_status;
  3115  000F7C  503E               	movf	receive_data@my_status,w,c
  3116  000F7E  0012               	return	
  3117  000F80                     __end_of_receive_data:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon	equ	0xFF2
  3126                           postinc0	equ	0xFEE
  3127                           wreg	equ	0xFE8
  3128                           postinc1	equ	0xFE6
  3129                           postdec1	equ	0xFE5
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           fsr2h	equ	0xFDA
  3135                           fsr2l	equ	0xFD9
  3136                           status	equ	0xFD8
  3137                           
  3138 ;; *************** function _SPI_receive_data *****************
  3139 ;; Defined at:
  3140 ;;		line 595 in file "SlaveComm_PIC18.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  data            2   18[COMRAM] PTR unsigned char 
  3143 ;;		 -> receive_data@data(1), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  recvGood        1   20[COMRAM] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3155 ;;      Params:         2       0       0       0       0       0       0
  3156 ;;      Locals:         1       0       0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0
  3158 ;;      Totals:         3       0       0       0       0       0       0
  3159 ;;Total ram usage:        3 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_receive_data
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text17
  3170  0017A8                     __ptext17:
  3171                           	opt stack 0
  3172  0017A8                     _SPI_receive_data:
  3173                           	opt stack 27
  3174                           
  3175                           ;SlaveComm_PIC18.c: 598: bool recvGood = 0;
  3176                           
  3177                           ;incstack = 0
  3178  0017A8  0E00               	movlw	0
  3179  0017AA  6E15               	movwf	SPI_receive_data@recvGood,c
  3180                           
  3181                           ;SlaveComm_PIC18.c: 600: if( SSP2STATbits.BF == 1 )
  3182  0017AC  A06D               	btfss	3949,0,c	;volatile
  3183  0017AE  D00C               	goto	l432
  3184                           
  3185                           ;SlaveComm_PIC18.c: 601: {
  3186                           ;SlaveComm_PIC18.c: 602: *data = SSP2BUF;
  3187  0017B0  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3188  0017B4  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3189  0017B8  CF6F FFDF          	movff	3951,indf2	;volatile
  3190                           
  3191                           ;SlaveComm_PIC18.c: 603: recvGood = 1;
  3192  0017BC  0E01               	movlw	1
  3193  0017BE  6E15               	movwf	SPI_receive_data@recvGood,c
  3194                           
  3195                           ;SlaveComm_PIC18.c: 604: SSP2CON1bits.WCOL = 0;
  3196  0017C0  9E6C               	bcf	3948,7,c	;volatile
  3197                           
  3198                           ;SlaveComm_PIC18.c: 605: SPI_transmit_wait = 0;
  3199  0017C2  0E00               	movlw	0
  3200  0017C4  6E40               	movwf	_SPI_transmit_wait,c
  3201                           
  3202                           ;SlaveComm_PIC18.c: 606: }
  3203  0017C6  D002               	goto	l433
  3204  0017C8                     l432:
  3205                           
  3206                           ;SlaveComm_PIC18.c: 607: else
  3207                           ;SlaveComm_PIC18.c: 608: {
  3208                           ;SlaveComm_PIC18.c: 609: recvGood = 0;
  3209  0017C8  0E00               	movlw	0
  3210  0017CA  6E15               	movwf	SPI_receive_data@recvGood,c
  3211  0017CC                     l433:
  3212                           
  3213                           ;SlaveComm_PIC18.c: 610: }
  3214                           ;SlaveComm_PIC18.c: 612: return recvGood;
  3215  0017CC  5015               	movf	SPI_receive_data@recvGood,w,c
  3216  0017CE  0012               	return	
  3217  0017D0                     __end_of_SPI_receive_data:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           postinc1	equ	0xFE6
  3229                           postdec1	equ	0xFE5
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _process_data *****************
  3239 ;; Defined at:
  3240 ;;		line 263 in file "SlaveComm_PIC18.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  receive_buff    2   16[BANK0 ] PTR struct buffer
  3243 ;;		 -> communications@receive_buffer(42), 
  3244 ;;  send_buffer     2   18[BANK0 ] PTR struct buffer
  3245 ;;		 -> communications@send_buffer(42), 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  parameters     50   20[BANK0 ] unsigned char [10][5]
  3248 ;;  end_of_trans    1   70[BANK0 ] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      unsigned char 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3258 ;;      Params:         0       4       0       0       0       0       0
  3259 ;;      Locals:         0      51       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0
  3261 ;;      Totals:         0      55       0       0       0       0       0
  3262 ;;Total ram usage:       55 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    6
  3265 ;; This function calls:
  3266 ;;		_process_data_parameterize
  3267 ;;		_process_data_parameters
  3268 ;; This function is called by:
  3269 ;;		_communications
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text18
  3274  001776                     __ptext18:
  3275                           	opt stack 0
  3276  001776                     _process_data:
  3277                           	opt stack 23
  3278                           
  3279                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  3280                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  3281                           ;SlaveComm_PIC18.c: 272: process_data_parameterize( parameters, receive_buffer );
  3282                           
  3283                           ;incstack = 0
  3284  001776  0E74               	movlw	low process_data@parameters
  3285  001778  6E19               	movwf	process_data_parameterize@parameters,c
  3286  00177A  0E00               	movlw	high process_data@parameters
  3287  00177C  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3288  00177E  C070  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3289  001782  C071  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3290  001786  EC29  F004         	call	_process_data_parameterize	;wreg free
  3291                           
  3292                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3293  00178A  0E74               	movlw	low process_data@parameters
  3294  00178C  0100               	movlb	0	; () banked
  3295  00178E  6F6C               	movwf	process_data_parameters@parameters& (0+255),b
  3296  001790  0E00               	movlw	high process_data@parameters
  3297  001792  6F6D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3298  001794  C072  F06E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3299  001798  C073  F06F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3300  00179C  EC2D  F003         	call	_process_data_parameters	;wreg free
  3301  0017A0  0100               	movlb	0	; () banked
  3302  0017A2  6FA6               	movwf	process_data@end_of_transmission_received& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  3306  0017A4  51A6               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3307  0017A6  0012               	return	
  3308  0017A8                     __end_of_process_data:
  3309                           	opt stack 0
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           postinc0	equ	0xFEE
  3318                           wreg	equ	0xFE8
  3319                           postinc1	equ	0xFE6
  3320                           postdec1	equ	0xFE5
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           indf2	equ	0xFDF
  3324                           postinc2	equ	0xFDE
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _process_data_parameters *****************
  3330 ;; Defined at:
  3331 ;;		line 339 in file "SlaveComm_PIC18.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  parameters      2   12[BANK0 ] PTR unsigned char [10]
  3334 ;;		 -> process_data@parameters(50), 
  3335 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  3336 ;;		 -> communications@send_buffer(42), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  end_of_trans    1   56[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      unsigned char 
  3341 ;; Registers used:
  3342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         0       4       0       0       0       0       0
  3349 ;;      Locals:         1       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0
  3351 ;;      Totals:         1       4       0       0       0       0       0
  3352 ;;Total ram usage:        5 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    5
  3355 ;; This function calls:
  3356 ;;		_atol
  3357 ;;		_com_command_setEnergyUsed
  3358 ;;		_send_end_of_transmission
  3359 ;;		_strmatch
  3360 ;; This function is called by:
  3361 ;;		_process_data
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text19
  3366  00065A                     __ptext19:
  3367                           	opt stack 0
  3368  00065A                     _process_data_parameters:
  3369                           	opt stack 23
  3370                           
  3371                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;incstack = 0
  3375  00065A  0E00               	movlw	0
  3376  00065C  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3377                           
  3378                           ;SlaveComm_PIC18.c: 344: if( strmatch( parameters[0], "END" ) == 1 )
  3379  00065E  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3380  000662  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3381  000666  0E50               	movlw	low STR_1
  3382  000668  6E20               	movwf	strmatch@b,c
  3383  00066A  0E06               	movlw	high STR_1
  3384  00066C  6E21               	movwf	strmatch@b+1,c
  3385  00066E  EC87  F00B         	call	_strmatch	;wreg free
  3386  000672  06E8               	decf	wreg,f,c
  3387  000674  A4D8               	btfss	status,2,c
  3388  000676  D003               	goto	l356
  3389                           
  3390                           ;SlaveComm_PIC18.c: 345: {
  3391                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  3392  000678  0E01               	movlw	1
  3393  00067A  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3394                           
  3395                           ;SlaveComm_PIC18.c: 356: }
  3396  00067C  D0E8               	goto	l376
  3397  00067E                     l356:
  3398                           
  3399                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[0], "Set" ) == 1 )
  3400  00067E  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3401  000682  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3402  000686  0E54               	movlw	low STR_2
  3403  000688  6E20               	movwf	strmatch@b,c
  3404  00068A  0E06               	movlw	high STR_2
  3405  00068C  6E21               	movwf	strmatch@b+1,c
  3406  00068E  EC87  F00B         	call	_strmatch	;wreg free
  3407  000692  06E8               	decf	wreg,f,c
  3408  000694  A4D8               	btfss	status,2,c
  3409  000696  D038               	goto	l358
  3410                           
  3411                           ;SlaveComm_PIC18.c: 358: {
  3412                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "Calib" ) == 1 )
  3413  000698  0E0A               	movlw	10
  3414  00069A  0100               	movlb	0	; () banked
  3415  00069C  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3416  00069E  6E1E               	movwf	strmatch@a,c
  3417  0006A0  0E00               	movlw	0
  3418  0006A2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3419  0006A4  6E1F               	movwf	strmatch@a+1,c
  3420  0006A6  0E1E               	movlw	low STR_3
  3421  0006A8  6E20               	movwf	strmatch@b,c
  3422  0006AA  0E06               	movlw	high STR_3
  3423  0006AC  6E21               	movwf	strmatch@b+1,c
  3424  0006AE  EC87  F00B         	call	_strmatch	;wreg free
  3425  0006B2  06E8               	decf	wreg,f,c
  3426  0006B4  B4D8               	btfsc	status,2,c
  3427  0006B6  D0CB               	goto	l376
  3428                           
  3429                           ;SlaveComm_PIC18.c: 363: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3430                           
  3431                           ;SlaveComm_PIC18.c: 360: {
  3432                           ;SlaveComm_PIC18.c: 362: }
  3433  0006B8  0E0A               	movlw	10
  3434  0006BA  0100               	movlb	0	; () banked
  3435  0006BC  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3436  0006BE  6E1E               	movwf	strmatch@a,c
  3437  0006C0  0E00               	movlw	0
  3438  0006C2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3439  0006C4  6E1F               	movwf	strmatch@a+1,c
  3440  0006C6  0E17               	movlw	low STR_4
  3441  0006C8  6E20               	movwf	strmatch@b,c
  3442  0006CA  0E06               	movlw	high STR_4
  3443  0006CC  6E21               	movwf	strmatch@b+1,c
  3444  0006CE  EC87  F00B         	call	_strmatch	;wreg free
  3445  0006D2  06E8               	decf	wreg,f,c
  3446  0006D4  A4D8               	btfss	status,2,c
  3447  0006D6  D0BB               	goto	l376
  3448                           
  3449                           ;SlaveComm_PIC18.c: 364: {
  3450                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol( parameters[2] );
  3451  0006D8  0E14               	movlw	20
  3452  0006DA  0100               	movlb	0	; () banked
  3453  0006DC  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3454  0006DE  6E1F               	movwf	atol@s,c
  3455  0006E0  0E00               	movlw	0
  3456  0006E2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3457  0006E4  6E20               	movwf	atol@s+1,c
  3458  0006E6  EC80  F006         	call	_atol	;wreg free
  3459  0006EA  C01F  F0B1         	movff	?_atol,_meterEnergyUsed
  3460  0006EE  C020  F0B2         	movff	?_atol+1,_meterEnergyUsed+1
  3461  0006F2  C021  F0B3         	movff	?_atol+2,_meterEnergyUsed+2
  3462  0006F6  C022  F0B4         	movff	?_atol+3,_meterEnergyUsed+3
  3463                           
  3464                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed( send_buffer );
  3465  0006FA  C06E  F037         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3466  0006FE  C06F  F038         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3467  000702  EC3E  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3468                           
  3469                           ;SlaveComm_PIC18.c: 371: }
  3470                           ;SlaveComm_PIC18.c: 376: }
  3471  000706  D0A3               	goto	l376
  3472  000708                     l358:
  3473                           
  3474                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[0], "Read" ) == 1 )
  3475  000708  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3476  00070C  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3477  000710  0E35               	movlw	low STR_5
  3478  000712  6E20               	movwf	strmatch@b,c
  3479  000714  0E06               	movlw	high STR_5
  3480  000716  6E21               	movwf	strmatch@b+1,c
  3481  000718  EC87  F00B         	call	_strmatch	;wreg free
  3482  00071C  06E8               	decf	wreg,f,c
  3483  00071E  B4D8               	btfsc	status,2,c
  3484  000720  D096               	goto	l376
  3485                           
  3486                           ;SlaveComm_PIC18.c: 395: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3487                           
  3488                           ;SlaveComm_PIC18.c: 378: {
  3489                           ;SlaveComm_PIC18.c: 380: }
  3490  000722  C06C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3491  000726  C06D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3492  00072A  0E3A               	movlw	low STR_6
  3493  00072C  6E20               	movwf	strmatch@b,c
  3494  00072E  0E06               	movlw	high STR_6
  3495  000730  6E21               	movwf	strmatch@b+1,c
  3496  000732  EC87  F00B         	call	_strmatch	;wreg free
  3497  000736  06E8               	decf	wreg,f,c
  3498  000738  A4D8               	btfss	status,2,c
  3499  00073A  D089               	goto	l376
  3500                           
  3501                           ;SlaveComm_PIC18.c: 396: {
  3502                           ;SlaveComm_PIC18.c: 397: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3503  00073C  0E0A               	movlw	10
  3504  00073E  0100               	movlb	0	; () banked
  3505  000740  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3506  000742  6E1E               	movwf	strmatch@a,c
  3507  000744  0E00               	movlw	0
  3508  000746  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3509  000748  6E1F               	movwf	strmatch@a+1,c
  3510  00074A  0E30               	movlw	low STR_7
  3511  00074C  6E20               	movwf	strmatch@b,c
  3512  00074E  0E06               	movlw	high STR_7
  3513  000750  6E21               	movwf	strmatch@b+1,c
  3514  000752  EC87  F00B         	call	_strmatch	;wreg free
  3515  000756  06E8               	decf	wreg,f,c
  3516  000758  A4D8               	btfss	status,2,c
  3517  00075A  D007               	goto	l366
  3518                           
  3519                           ;SlaveComm_PIC18.c: 398: {
  3520                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission( send_buffer );
  3521  00075C  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3522  000760  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3523  000764  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3524                           
  3525                           ;SlaveComm_PIC18.c: 400: }
  3526  000768  D072               	goto	l376
  3527  00076A                     l366:
  3528                           
  3529                           ;SlaveComm_PIC18.c: 401: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3530  00076A  0E0A               	movlw	10
  3531  00076C  0100               	movlb	0	; () banked
  3532  00076E  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3533  000770  6E1E               	movwf	strmatch@a,c
  3534  000772  0E00               	movlw	0
  3535  000774  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3536  000776  6E1F               	movwf	strmatch@a+1,c
  3537  000778  0E2A               	movlw	low STR_8
  3538  00077A  6E20               	movwf	strmatch@b,c
  3539  00077C  0E06               	movlw	high STR_8
  3540  00077E  6E21               	movwf	strmatch@b+1,c
  3541  000780  EC87  F00B         	call	_strmatch	;wreg free
  3542  000784  06E8               	decf	wreg,f,c
  3543  000786  A4D8               	btfss	status,2,c
  3544  000788  D007               	goto	l368
  3545                           
  3546                           ;SlaveComm_PIC18.c: 402: {
  3547                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission( send_buffer );
  3548  00078A  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3549  00078E  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3550  000792  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3551                           
  3552                           ;SlaveComm_PIC18.c: 404: }
  3553  000796  D05B               	goto	l376
  3554  000798                     l368:
  3555                           
  3556                           ;SlaveComm_PIC18.c: 405: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3557  000798  0E0A               	movlw	10
  3558  00079A  0100               	movlb	0	; () banked
  3559  00079C  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3560  00079E  6E1E               	movwf	strmatch@a,c
  3561  0007A0  0E00               	movlw	0
  3562  0007A2  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3563  0007A4  6E1F               	movwf	strmatch@a+1,c
  3564  0007A6  0E17               	movlw	low STR_4
  3565  0007A8  6E20               	movwf	strmatch@b,c
  3566  0007AA  0E06               	movlw	high STR_4
  3567  0007AC  6E21               	movwf	strmatch@b+1,c
  3568  0007AE  EC87  F00B         	call	_strmatch	;wreg free
  3569  0007B2  06E8               	decf	wreg,f,c
  3570  0007B4  A4D8               	btfss	status,2,c
  3571  0007B6  D007               	goto	l370
  3572                           
  3573                           ;SlaveComm_PIC18.c: 406: {
  3574                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission( send_buffer );
  3575  0007B8  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3576  0007BC  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3577  0007C0  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3578                           
  3579                           ;SlaveComm_PIC18.c: 408: }
  3580  0007C4  D044               	goto	l376
  3581  0007C6                     l370:
  3582                           
  3583                           ;SlaveComm_PIC18.c: 409: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3584  0007C6  0E0A               	movlw	10
  3585  0007C8  0100               	movlb	0	; () banked
  3586  0007CA  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3587  0007CC  6E1E               	movwf	strmatch@a,c
  3588  0007CE  0E00               	movlw	0
  3589  0007D0  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3590  0007D2  6E1F               	movwf	strmatch@a+1,c
  3591  0007D4  0E24               	movlw	low STR_10
  3592  0007D6  6E20               	movwf	strmatch@b,c
  3593  0007D8  0E06               	movlw	high STR_10
  3594  0007DA  6E21               	movwf	strmatch@b+1,c
  3595  0007DC  EC87  F00B         	call	_strmatch	;wreg free
  3596  0007E0  06E8               	decf	wreg,f,c
  3597  0007E2  A4D8               	btfss	status,2,c
  3598  0007E4  D007               	goto	l372
  3599                           
  3600                           ;SlaveComm_PIC18.c: 410: {
  3601                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission( send_buffer );
  3602  0007E6  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3603  0007EA  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3604  0007EE  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3605                           
  3606                           ;SlaveComm_PIC18.c: 412: }
  3607  0007F2  D02D               	goto	l376
  3608  0007F4                     l372:
  3609                           
  3610                           ;SlaveComm_PIC18.c: 413: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3611  0007F4  0E0A               	movlw	10
  3612  0007F6  0100               	movlb	0	; () banked
  3613  0007F8  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3614  0007FA  6E1E               	movwf	strmatch@a,c
  3615  0007FC  0E00               	movlw	0
  3616  0007FE  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3617  000800  6E1F               	movwf	strmatch@a+1,c
  3618  000802  0E3F               	movlw	low STR_11
  3619  000804  6E20               	movwf	strmatch@b,c
  3620  000806  0E06               	movlw	high STR_11
  3621  000808  6E21               	movwf	strmatch@b+1,c
  3622  00080A  EC87  F00B         	call	_strmatch	;wreg free
  3623  00080E  06E8               	decf	wreg,f,c
  3624  000810  A4D8               	btfss	status,2,c
  3625  000812  D007               	goto	l374
  3626                           
  3627                           ;SlaveComm_PIC18.c: 414: {
  3628                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission( send_buffer );
  3629  000814  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3630  000818  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3631  00081C  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3632                           
  3633                           ;SlaveComm_PIC18.c: 416: }
  3634  000820  D016               	goto	l376
  3635  000822                     l374:
  3636                           
  3637                           ;SlaveComm_PIC18.c: 417: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3638  000822  0E0A               	movlw	10
  3639  000824  0100               	movlb	0	; () banked
  3640  000826  256C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3641  000828  6E1E               	movwf	strmatch@a,c
  3642  00082A  0E00               	movlw	0
  3643  00082C  216D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3644  00082E  6E1F               	movwf	strmatch@a+1,c
  3645  000830  0E0D               	movlw	low STR_12
  3646  000832  6E20               	movwf	strmatch@b,c
  3647  000834  0E06               	movlw	high STR_12
  3648  000836  6E21               	movwf	strmatch@b+1,c
  3649  000838  EC87  F00B         	call	_strmatch	;wreg free
  3650  00083C  06E8               	decf	wreg,f,c
  3651  00083E  A4D8               	btfss	status,2,c
  3652  000840  D006               	goto	l376
  3653                           
  3654                           ;SlaveComm_PIC18.c: 418: {
  3655                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission( send_buffer );
  3656  000842  C06E  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3657  000846  C06F  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3658  00084A  EC67  F00C         	call	_send_end_of_transmission	;wreg free
  3659  00084E                     l376:
  3660                           
  3661                           ;SlaveComm_PIC18.c: 420: }
  3662                           ;SlaveComm_PIC18.c: 421: }
  3663                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3664  00084E  5039               	movf	process_data_parameters@end_of_transmission_received,w,c
  3665  000850  0012               	return	
  3666  000852                     __end_of_process_data_parameters:
  3667                           	opt stack 0
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           postinc0	equ	0xFEE
  3676                           wreg	equ	0xFE8
  3677                           postinc1	equ	0xFE6
  3678                           postdec1	equ	0xFE5
  3679                           fsr1h	equ	0xFE2
  3680                           fsr1l	equ	0xFE1
  3681                           indf2	equ	0xFDF
  3682                           postinc2	equ	0xFDE
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _strmatch *****************
  3688 ;; Defined at:
  3689 ;;		line 537 in file "SlaveComm_PIC18.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  a               2   29[COMRAM] PTR unsigned char 
  3692 ;;		 -> process_data@parameters(50), 
  3693 ;;  b               2   31[COMRAM] PTR unsigned char 
  3694 ;;		 -> STR_12(10), STR_11(5), STR_10(6), STR_9(7), 
  3695 ;;		 -> STR_8(6), STR_7(5), STR_6(5), STR_5(5), 
  3696 ;;		 -> STR_4(7), STR_3(6), STR_2(4), STR_1(4), 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  result          2   33[COMRAM] int 
  3699 ;;  match           1   35[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      unsigned char 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3709 ;;      Params:         4       0       0       0       0       0       0
  3710 ;;      Locals:         3       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0
  3712 ;;      Totals:         7       0       0       0       0       0       0
  3713 ;;Total ram usage:        7 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		_strcmp2
  3718 ;; This function is called by:
  3719 ;;		_process_data_parameters
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text20
  3724  00170E                     __ptext20:
  3725                           	opt stack 0
  3726  00170E                     _strmatch:
  3727                           	opt stack 25
  3728                           
  3729                           ;SlaveComm_PIC18.c: 539: int result;
  3730                           ;SlaveComm_PIC18.c: 540: bool match;
  3731                           ;SlaveComm_PIC18.c: 542: static int co = 0;
  3732                           ;SlaveComm_PIC18.c: 543: co++;
  3733                           
  3734                           ;incstack = 0
  3735  00170E  0100               	movlb	0	; () banked
  3736  001710  4BB9               	infsnz	strmatch@co& (0+255),f,b
  3737  001712  2BBA               	incf	(strmatch@co+1)& (0+255),f,b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;SlaveComm_PIC18.c: 545: result = strcmp2( a, b );
  3741  001714  C01E  F013         	movff	strmatch@a,strcmp2@a
  3742  001718  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3743  00171C  C020  F015         	movff	strmatch@b,strcmp2@b
  3744  001720  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3745  001724  ECE9  F004         	call	_strcmp2	;wreg free
  3746  001728  C013  F022         	movff	?_strcmp2,strmatch@result
  3747  00172C  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3748                           
  3749                           ;SlaveComm_PIC18.c: 547: if( result == 0 )
  3750  001730  5022               	movf	strmatch@result,w,c
  3751  001732  1023               	iorwf	strmatch@result+1,w,c
  3752  001734  A4D8               	btfss	status,2,c
  3753  001736  D002               	goto	l411
  3754                           
  3755                           ;SlaveComm_PIC18.c: 548: {
  3756                           ;SlaveComm_PIC18.c: 549: match = 1;
  3757  001738  0E01               	movlw	1
  3758  00173A  D001               	goto	L5
  3759  00173C                     l411:
  3760                           
  3761                           ;SlaveComm_PIC18.c: 551: else
  3762                           ;SlaveComm_PIC18.c: 552: {
  3763                           ;SlaveComm_PIC18.c: 553: match = 0;
  3764  00173C  0E00               	movlw	0
  3765  00173E                     L5:
  3766  00173E  6E24               	movwf	strmatch@match,c
  3767                           
  3768                           ;SlaveComm_PIC18.c: 554: }
  3769                           ;SlaveComm_PIC18.c: 556: return match;
  3770  001740  5024               	movf	strmatch@match,w,c
  3771  001742  0012               	return	
  3772  001744                     __end_of_strmatch:
  3773                           	opt stack 0
  3774                           tblptru	equ	0xFF8
  3775                           tblptrh	equ	0xFF7
  3776                           tblptrl	equ	0xFF6
  3777                           tablat	equ	0xFF5
  3778                           prodh	equ	0xFF4
  3779                           prodl	equ	0xFF3
  3780                           intcon	equ	0xFF2
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postinc1	equ	0xFE6
  3784                           postdec1	equ	0xFE5
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           postinc2	equ	0xFDE
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _strcmp2 *****************
  3794 ;; Defined at:
  3795 ;;		line 559 in file "SlaveComm_PIC18.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  a               2   18[COMRAM] PTR unsigned char 
  3798 ;;		 -> process_data@parameters(50), 
  3799 ;;  b               2   20[COMRAM] PTR unsigned char 
  3800 ;;		 -> STR_12(10), STR_11(5), STR_10(6), STR_9(7), 
  3801 ;;		 -> STR_8(6), STR_7(5), STR_6(5), STR_5(5), 
  3802 ;;		 -> STR_4(7), STR_3(6), STR_2(4), STR_1(4), 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  inx             2   27[COMRAM] int 
  3805 ;;  match           2   25[COMRAM] int 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  2   18[COMRAM] int 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3815 ;;      Params:         4       0       0       0       0       0       0
  3816 ;;      Locals:         4       0       0       0       0       0       0
  3817 ;;      Temps:          3       0       0       0       0       0       0
  3818 ;;      Totals:        11       0       0       0       0       0       0
  3819 ;;Total ram usage:       11 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_strmatch
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text21
  3830  0009D2                     __ptext21:
  3831                           	opt stack 0
  3832  0009D2                     _strcmp2:
  3833                           	opt stack 25
  3834                           
  3835                           ;SlaveComm_PIC18.c: 561: int inx = 0;
  3836                           
  3837                           ;incstack = 0
  3838  0009D2  0E00               	movlw	0
  3839  0009D4  6E1D               	movwf	strcmp2@inx+1,c
  3840  0009D6  0E00               	movlw	0
  3841  0009D8  6E1C               	movwf	strcmp2@inx,c
  3842                           
  3843                           ;SlaveComm_PIC18.c: 562: int match = 0;
  3844  0009DA  0E00               	movlw	0
  3845  0009DC  6E1B               	movwf	strcmp2@match+1,c
  3846  0009DE  0E00               	movlw	0
  3847  0009E0  6E1A               	movwf	strcmp2@match,c
  3848                           
  3849                           ;SlaveComm_PIC18.c: 564: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  3850  0009E2  D035               	goto	l416
  3851  0009E4                     
  3852                           ;SlaveComm_PIC18.c: 565: {
  3853                           ;SlaveComm_PIC18.c: 566: if( a[inx] > b[inx] )
  3854  0009E4  501C               	movf	strcmp2@inx,w,c
  3855  0009E6  2413               	addwf	strcmp2@a,w,c
  3856  0009E8  6ED9               	movwf	fsr2l,c
  3857  0009EA  501D               	movf	strcmp2@inx+1,w,c
  3858  0009EC  2014               	addwfc	strcmp2@a+1,w,c
  3859  0009EE  6EDA               	movwf	fsr2h,c
  3860  0009F0  501C               	movf	strcmp2@inx,w,c
  3861  0009F2  2415               	addwf	strcmp2@b,w,c
  3862  0009F4  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3863  0009F6  501D               	movf	strcmp2@inx+1,w,c
  3864  0009F8  2016               	addwfc	strcmp2@b+1,w,c
  3865  0009FA  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3866  0009FC  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3867  000A00  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3868  000A04                     	if	0	;tblptru may be non-zero
  3869  000A04                     	endif
  3870  000A04                     	if	0	;tblptru may be non-zero
  3871  000A04                     	endif
  3872  000A04  50DE               	movf	postinc2,w,c
  3873  000A06  0009               	tblrd		*+
  3874  000A08  5CF5               	subwf	tablat,w,c
  3875  000A0A  B0D8               	btfsc	status,0,c
  3876  000A0C  D005               	goto	l418
  3877                           
  3878                           ;SlaveComm_PIC18.c: 567: {
  3879                           ;SlaveComm_PIC18.c: 568: match = 1;
  3880  000A0E  0E00               	movlw	0
  3881  000A10  6E1B               	movwf	strcmp2@match+1,c
  3882  000A12  0E01               	movlw	1
  3883  000A14  6E1A               	movwf	strcmp2@match,c
  3884                           
  3885                           ;SlaveComm_PIC18.c: 569: }
  3886  000A16  D019               	goto	l420
  3887  000A18                     l418:
  3888                           
  3889                           ;SlaveComm_PIC18.c: 570: else if( a[inx] < b[inx] )
  3890  000A18  501C               	movf	strcmp2@inx,w,c
  3891  000A1A  2413               	addwf	strcmp2@a,w,c
  3892  000A1C  6ED9               	movwf	fsr2l,c
  3893  000A1E  501D               	movf	strcmp2@inx+1,w,c
  3894  000A20  2014               	addwfc	strcmp2@a+1,w,c
  3895  000A22  6EDA               	movwf	fsr2h,c
  3896  000A24  50DF               	movf	indf2,w,c
  3897  000A26  6E17               	movwf	??_strcmp2& (0+255),c
  3898  000A28  501C               	movf	strcmp2@inx,w,c
  3899  000A2A  2415               	addwf	strcmp2@b,w,c
  3900  000A2C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3901  000A2E  501D               	movf	strcmp2@inx+1,w,c
  3902  000A30  2016               	addwfc	strcmp2@b+1,w,c
  3903  000A32  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3904  000A34  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3905  000A38  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3906  000A3C                     	if	0	;tblptru may be non-zero
  3907  000A3C                     	endif
  3908  000A3C                     	if	0	;tblptru may be non-zero
  3909  000A3C                     	endif
  3910  000A3C  0008               	tblrd		*
  3911  000A3E  50F5               	movf	tablat,w,c
  3912  000A40  5C17               	subwf	??_strcmp2,w,c
  3913  000A42  B0D8               	btfsc	status,0,c
  3914  000A44  D002               	goto	l420
  3915                           
  3916                           ;SlaveComm_PIC18.c: 571: {
  3917                           ;SlaveComm_PIC18.c: 572: match = -1;
  3918  000A46  681A               	setf	strcmp2@match,c
  3919  000A48  681B               	setf	strcmp2@match+1,c
  3920  000A4A                     l420:
  3921                           
  3922                           ;SlaveComm_PIC18.c: 577: }
  3923                           ;SlaveComm_PIC18.c: 579: inx++;
  3924                           
  3925                           ;SlaveComm_PIC18.c: 575: {
  3926  000A4A  4A1C               	infsnz	strcmp2@inx,f,c
  3927  000A4C  2A1D               	incf	strcmp2@inx+1,f,c
  3928  000A4E                     l416:
  3929  000A4E  501C               	movf	strcmp2@inx,w,c
  3930  000A50  2413               	addwf	strcmp2@a,w,c
  3931  000A52  6ED9               	movwf	fsr2l,c
  3932  000A54  501D               	movf	strcmp2@inx+1,w,c
  3933  000A56  2014               	addwfc	strcmp2@a+1,w,c
  3934  000A58  6EDA               	movwf	fsr2h,c
  3935  000A5A  50DF               	movf	indf2,w,c
  3936  000A5C  B4D8               	btfsc	status,2,c
  3937  000A5E  D013               	goto	u2440
  3938  000A60  501C               	movf	strcmp2@inx,w,c
  3939  000A62  2415               	addwf	strcmp2@b,w,c
  3940  000A64  6E17               	movwf	??_strcmp2& (0+255),c
  3941  000A66  501D               	movf	strcmp2@inx+1,w,c
  3942  000A68  2016               	addwfc	strcmp2@b+1,w,c
  3943  000A6A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3944  000A6C  C017  FFF6         	movff	??_strcmp2,tblptrl
  3945  000A70  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3946  000A74                     	if	0	;tblptru may be non-zero
  3947  000A74                     	endif
  3948  000A74                     	if	0	;tblptru may be non-zero
  3949  000A74                     	endif
  3950  000A74  0008               	tblrd		*
  3951  000A76  50F5               	movf	tablat,w,c
  3952  000A78  0900               	iorlw	0
  3953  000A7A  B4D8               	btfsc	status,2,c
  3954  000A7C  D004               	goto	u2440
  3955  000A7E  501A               	movf	strcmp2@match,w,c
  3956  000A80  101B               	iorwf	strcmp2@match+1,w,c
  3957  000A82  B4D8               	btfsc	status,2,c
  3958  000A84  D7AF               	goto	l417
  3959  000A86                     u2440:
  3960                           
  3961                           ;SlaveComm_PIC18.c: 580: }
  3962                           ;SlaveComm_PIC18.c: 582: if( (a[inx] == '\0') && (b[inx] != '\0') )
  3963  000A86  501C               	movf	strcmp2@inx,w,c
  3964  000A88  2413               	addwf	strcmp2@a,w,c
  3965  000A8A  6ED9               	movwf	fsr2l,c
  3966  000A8C  501D               	movf	strcmp2@inx+1,w,c
  3967  000A8E  2014               	addwfc	strcmp2@a+1,w,c
  3968  000A90  6EDA               	movwf	fsr2h,c
  3969  000A92  50DF               	movf	indf2,w,c
  3970  000A94  A4D8               	btfss	status,2,c
  3971  000A96  D012               	goto	l426
  3972  000A98  501C               	movf	strcmp2@inx,w,c
  3973  000A9A  2415               	addwf	strcmp2@b,w,c
  3974  000A9C  6E17               	movwf	??_strcmp2& (0+255),c
  3975  000A9E  501D               	movf	strcmp2@inx+1,w,c
  3976  000AA0  2016               	addwfc	strcmp2@b+1,w,c
  3977  000AA2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3978  000AA4  C017  FFF6         	movff	??_strcmp2,tblptrl
  3979  000AA8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3980  000AAC                     	if	0	;tblptru may be non-zero
  3981  000AAC                     	endif
  3982  000AAC                     	if	0	;tblptru may be non-zero
  3983  000AAC                     	endif
  3984  000AAC  0008               	tblrd		*
  3985  000AAE  50F5               	movf	tablat,w,c
  3986  000AB0  0900               	iorlw	0
  3987  000AB2  B4D8               	btfsc	status,2,c
  3988  000AB4  D003               	goto	l426
  3989                           
  3990                           ;SlaveComm_PIC18.c: 583: {
  3991                           ;SlaveComm_PIC18.c: 584: match = -1;
  3992  000AB6  681A               	setf	strcmp2@match,c
  3993  000AB8  681B               	setf	strcmp2@match+1,c
  3994                           
  3995                           ;SlaveComm_PIC18.c: 585: }
  3996  000ABA  D01C               	goto	l428
  3997  000ABC                     l426:
  3998                           
  3999                           ;SlaveComm_PIC18.c: 586: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  4000  000ABC  501C               	movf	strcmp2@inx,w,c
  4001  000ABE  2413               	addwf	strcmp2@a,w,c
  4002  000AC0  6ED9               	movwf	fsr2l,c
  4003  000AC2  501D               	movf	strcmp2@inx+1,w,c
  4004  000AC4  2014               	addwfc	strcmp2@a+1,w,c
  4005  000AC6  6EDA               	movwf	fsr2h,c
  4006  000AC8  50DF               	movf	indf2,w,c
  4007  000ACA  B4D8               	btfsc	status,2,c
  4008  000ACC  D013               	goto	l428
  4009  000ACE  501C               	movf	strcmp2@inx,w,c
  4010  000AD0  2415               	addwf	strcmp2@b,w,c
  4011  000AD2  6E17               	movwf	??_strcmp2& (0+255),c
  4012  000AD4  501D               	movf	strcmp2@inx+1,w,c
  4013  000AD6  2016               	addwfc	strcmp2@b+1,w,c
  4014  000AD8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4015  000ADA  C017  FFF6         	movff	??_strcmp2,tblptrl
  4016  000ADE  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4017  000AE2                     	if	0	;tblptru may be non-zero
  4018  000AE2                     	endif
  4019  000AE2                     	if	0	;tblptru may be non-zero
  4020  000AE2                     	endif
  4021  000AE2  0008               	tblrd		*
  4022  000AE4  50F5               	movf	tablat,w,c
  4023  000AE6  0900               	iorlw	0
  4024  000AE8  A4D8               	btfss	status,2,c
  4025  000AEA  D004               	goto	l428
  4026                           
  4027                           ;SlaveComm_PIC18.c: 587: {
  4028                           ;SlaveComm_PIC18.c: 588: match = 1;
  4029  000AEC  0E00               	movlw	0
  4030  000AEE  6E1B               	movwf	strcmp2@match+1,c
  4031  000AF0  0E01               	movlw	1
  4032  000AF2  6E1A               	movwf	strcmp2@match,c
  4033  000AF4                     l428:
  4034                           
  4035                           ;SlaveComm_PIC18.c: 589: }
  4036                           ;SlaveComm_PIC18.c: 592: return match;
  4037  000AF4  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4038  000AF8  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4039  000AFC  0012               	return	
  4040  000AFE                     __end_of_strcmp2:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           postinc1	equ	0xFE6
  4052                           postdec1	equ	0xFE5
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           indf2	equ	0xFDF
  4056                           postinc2	equ	0xFDE
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _send_end_of_transmission *****************
  4062 ;; Defined at:
  4063 ;;		line 637 in file "SlaveComm_PIC18.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4066 ;;		 -> communications@send_buffer(42), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         2       0       0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0
  4081 ;;      Totals:         2       0       0       0       0       0       0
  4082 ;;Total ram usage:        2 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		_command_builder1
  4087 ;; This function is called by:
  4088 ;;		_process_data_parameters
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text22
  4093  0018CE                     __ptext22:
  4094                           	opt stack 0
  4095  0018CE                     _send_end_of_transmission:
  4096                           	opt stack 23
  4097                           
  4098                           ;SlaveComm_PIC18.c: 639: command_builder1( send_buffer, "END" );
  4099                           
  4100                           ;incstack = 0
  4101  0018CE  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4102  0018D2  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4103  0018D6  0E50               	movlw	low STR_1
  4104  0018D8  6E21               	movwf	command_builder1@data1,c
  4105  0018DA  0E06               	movlw	high STR_1
  4106  0018DC  6E22               	movwf	command_builder1@data1+1,c
  4107  0018DE  EC6F  F00A         	call	_command_builder1	;wreg free
  4108  0018E2  0012               	return	
  4109  0018E4                     __end_of_send_end_of_transmission:
  4110                           	opt stack 0
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           prodh	equ	0xFF4
  4116                           prodl	equ	0xFF3
  4117                           intcon	equ	0xFF2
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           postinc1	equ	0xFE6
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           indf2	equ	0xFDF
  4125                           postinc2	equ	0xFDE
  4126                           fsr2h	equ	0xFDA
  4127                           fsr2l	equ	0xFD9
  4128                           status	equ	0xFD8
  4129                           
  4130 ;; *************** function _command_builder1 *****************
  4131 ;; Defined at:
  4132 ;;		line 430 in file "SlaveComm_PIC18.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4135 ;;		 -> communications@send_buffer(42), 
  4136 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4137 ;;		 -> STR_13(4), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4149 ;;      Params:         4       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0
  4152 ;;      Totals:         4       0       0       0       0       0       0
  4153 ;;Total ram usage:        4 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    3
  4156 ;; This function calls:
  4157 ;;		_command_builder_add_char
  4158 ;;		_command_builder_add_string
  4159 ;; This function is called by:
  4160 ;;		_send_end_of_transmission
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text23
  4165  0014DE                     __ptext23:
  4166                           	opt stack 0
  4167  0014DE                     _command_builder1:
  4168                           	opt stack 23
  4169                           
  4170                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, '#' );
  4171                           
  4172                           ;incstack = 0
  4173  0014DE  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4174  0014E2  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4175  0014E6  0E23               	movlw	35
  4176  0014E8  6E15               	movwf	command_builder_add_char@data,c
  4177  0014EA  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4178                           
  4179                           ;SlaveComm_PIC18.c: 433: command_builder_add_char( send_buffer, '#' );
  4180  0014EE  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4181  0014F2  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4182  0014F6  0E23               	movlw	35
  4183  0014F8  6E15               	movwf	command_builder_add_char@data,c
  4184  0014FA  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4185                           
  4186                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '!' );
  4187  0014FE  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4188  001502  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4189  001506  0E21               	movlw	33
  4190  001508  6E15               	movwf	command_builder_add_char@data,c
  4191  00150A  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4192                           
  4193                           ;SlaveComm_PIC18.c: 435: command_builder_add_string( send_buffer, data1 );
  4194  00150E  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4195  001512  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4196  001516  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4197  00151A  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4198  00151E  EC94  F009         	call	_command_builder_add_string	;wreg free
  4199                           
  4200                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, '*' );
  4201  001522  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4202  001526  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4203  00152A  0E2A               	movlw	42
  4204  00152C  6E15               	movwf	command_builder_add_char@data,c
  4205  00152E  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4206  001532  0012               	return	
  4207  001534                     __end_of_command_builder1:
  4208                           	opt stack 0
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           intcon	equ	0xFF2
  4216                           postinc0	equ	0xFEE
  4217                           wreg	equ	0xFE8
  4218                           postinc1	equ	0xFE6
  4219                           postdec1	equ	0xFE5
  4220                           fsr1h	equ	0xFE2
  4221                           fsr1l	equ	0xFE1
  4222                           indf2	equ	0xFDF
  4223                           postinc2	equ	0xFDE
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _com_command_setEnergyUsed *****************
  4229 ;; Defined at:
  4230 ;;		line 674 in file "SlaveComm_PIC18.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  4233 ;;		 -> communications@send_buffer(42), 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         2       0       0       0       0       0       0
  4246 ;;      Locals:         0      12       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0
  4248 ;;      Totals:         2      12       0       0       0       0       0
  4249 ;;Total ram usage:       14 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    4
  4252 ;; This function calls:
  4253 ;;		_command_builder3
  4254 ;;		_ltoa
  4255 ;; This function is called by:
  4256 ;;		_resetCommunications
  4257 ;;		_process_data_parameters
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text24
  4262  00167C                     __ptext24:
  4263                           	opt stack 0
  4264  00167C                     _com_command_setEnergyUsed:
  4265                           	opt stack 24
  4266                           
  4267                           ;SlaveComm_PIC18.c: 676: char temp[12];
  4268                           ;SlaveComm_PIC18.c: 678: ltoa( temp, meterEnergyUsed, 10 );
  4269                           
  4270                           ;incstack = 0
  4271  00167C  0E60               	movlw	low com_command_setEnergyUsed@temp
  4272  00167E  6E2D               	movwf	ltoa@buf,c
  4273  001680  0E00               	movlw	high com_command_setEnergyUsed@temp
  4274  001682  6E2E               	movwf	ltoa@buf+1,c
  4275  001684  C0B1  F02F         	movff	_meterEnergyUsed,ltoa@val
  4276  001688  C0B2  F030         	movff	_meterEnergyUsed+1,ltoa@val+1
  4277  00168C  C0B3  F031         	movff	_meterEnergyUsed+2,ltoa@val+2
  4278  001690  C0B4  F032         	movff	_meterEnergyUsed+3,ltoa@val+3
  4279  001694  0E00               	movlw	0
  4280  001696  6E34               	movwf	ltoa@base+1,c
  4281  001698  0E0A               	movlw	10
  4282  00169A  6E33               	movwf	ltoa@base,c
  4283  00169C  ECF0  F00A         	call	_ltoa	;wreg free
  4284                           
  4285                           ;SlaveComm_PIC18.c: 681: command_builder3( send_buffer, "Set", "EnUsed", temp );
  4286  0016A0  C037  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4287  0016A4  C038  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4288  0016A8  0E54               	movlw	low STR_2
  4289  0016AA  6E21               	movwf	command_builder3@data1,c
  4290  0016AC  0E06               	movlw	high STR_2
  4291  0016AE  6E22               	movwf	command_builder3@data1+1,c
  4292  0016B0  0E17               	movlw	low STR_4
  4293  0016B2  6E23               	movwf	command_builder3@data2,c
  4294  0016B4  0E06               	movlw	high STR_4
  4295  0016B6  6E24               	movwf	command_builder3@data2+1,c
  4296  0016B8  0E60               	movlw	low com_command_setEnergyUsed@temp
  4297  0016BA  6E25               	movwf	command_builder3@data3,c
  4298  0016BC  0E00               	movlw	high com_command_setEnergyUsed@temp
  4299  0016BE  6E26               	movwf	command_builder3@data3+1,c
  4300  0016C0  ECBC  F008         	call	_command_builder3	;wreg free
  4301  0016C4  0012               	return	
  4302  0016C6                     __end_of_com_command_setEnergyUsed:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           postinc1	equ	0xFE6
  4314                           postdec1	equ	0xFE5
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _ltoa *****************
  4324 ;; Defined at:
  4325 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  buf             2   44[COMRAM] PTR unsigned char 
  4328 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4329 ;;  val             4   46[COMRAM] long 
  4330 ;;  base            2   50[COMRAM] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  cp              2   52[COMRAM] PTR unsigned char 
  4333 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2   44[COMRAM] PTR unsigned char 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4343 ;;      Params:         8       0       0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0
  4346 ;;      Totals:        10       0       0       0       0       0       0
  4347 ;;Total ram usage:       10 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    3
  4350 ;; This function calls:
  4351 ;;		_ultoa
  4352 ;; This function is called by:
  4353 ;;		_com_command_setPower
  4354 ;;		_com_command_setEnergyUsed
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text25
  4359  0015E0                     __ptext25:
  4360                           	opt stack 0
  4361  0015E0                     _ltoa:
  4362                           	opt stack 24
  4363                           
  4364                           ;incstack = 0
  4365  0015E0  C02D  F035         	movff	ltoa@buf,ltoa@cp
  4366  0015E4  C02E  F036         	movff	ltoa@buf+1,ltoa@cp+1
  4367  0015E8  AE32               	btfss	ltoa@val+3,7,c
  4368  0015EA  D010               	goto	l885
  4369  0015EC  C02D  FFD9         	movff	ltoa@buf,fsr2l
  4370  0015F0  C02E  FFDA         	movff	ltoa@buf+1,fsr2h
  4371  0015F4  0E2D               	movlw	45
  4372  0015F6  6EDF               	movwf	indf2,c
  4373  0015F8  4A2D               	infsnz	ltoa@buf,f,c
  4374  0015FA  2A2E               	incf	ltoa@buf+1,f,c
  4375  0015FC  1E32               	comf	ltoa@val+3,f,c
  4376  0015FE  1E31               	comf	ltoa@val+2,f,c
  4377  001600  1E30               	comf	ltoa@val+1,f,c
  4378  001602  6C2F               	negf	ltoa@val,c
  4379  001604  0E00               	movlw	0
  4380  001606  2230               	addwfc	ltoa@val+1,f,c
  4381  001608  2231               	addwfc	ltoa@val+2,f,c
  4382  00160A  2232               	addwfc	ltoa@val+3,f,c
  4383  00160C                     l885:
  4384  00160C  C02D  F020         	movff	ltoa@buf,ultoa@buf
  4385  001610  C02E  F021         	movff	ltoa@buf+1,ultoa@buf+1
  4386  001614  C02F  F022         	movff	ltoa@val,ultoa@val
  4387  001618  C030  F023         	movff	ltoa@val+1,ultoa@val+1
  4388  00161C  C031  F024         	movff	ltoa@val+2,ultoa@val+2
  4389  001620  C032  F025         	movff	ltoa@val+3,ultoa@val+3
  4390  001624  C033  F026         	movff	ltoa@base,ultoa@base
  4391  001628  C034  F027         	movff	ltoa@base+1,ultoa@base+1
  4392  00162C  EC05  F006         	call	_ultoa	;wreg free
  4393  001630  0012               	return	
  4394  001632                     __end_of_ltoa:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           prodh	equ	0xFF4
  4401                           prodl	equ	0xFF3
  4402                           intcon	equ	0xFF2
  4403                           postinc0	equ	0xFEE
  4404                           wreg	equ	0xFE8
  4405                           postinc1	equ	0xFE6
  4406                           postdec1	equ	0xFE5
  4407                           fsr1h	equ	0xFE2
  4408                           fsr1l	equ	0xFE1
  4409                           indf2	equ	0xFDF
  4410                           postinc2	equ	0xFDE
  4411                           fsr2h	equ	0xFDA
  4412                           fsr2l	equ	0xFD9
  4413                           status	equ	0xFD8
  4414                           
  4415 ;; *************** function _ultoa *****************
  4416 ;; Defined at:
  4417 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4420 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4421 ;;  val             4   33[COMRAM] unsigned long 
  4422 ;;  base            2   37[COMRAM] int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  v               4   39[COMRAM] unsigned long 
  4425 ;;  c               1   43[COMRAM] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2   31[COMRAM] PTR unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4435 ;;      Params:         8       0       0       0       0       0       0
  4436 ;;      Locals:         5       0       0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0
  4438 ;;      Totals:        13       0       0       0       0       0       0
  4439 ;;Total ram usage:       13 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    2
  4442 ;; This function calls:
  4443 ;;		___lldiv
  4444 ;;		___llmod
  4445 ;; This function is called by:
  4446 ;;		_ltoa
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text26
  4451  000C0A                     __ptext26:
  4452                           	opt stack 0
  4453  000C0A                     _ultoa:
  4454                           	opt stack 24
  4455                           
  4456                           ;incstack = 0
  4457  000C0A  C022  F028         	movff	ultoa@val,ultoa@v
  4458  000C0E  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4459  000C12  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4460  000C16  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4461  000C1A  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4462  000C1E  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4463  000C22  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4464  000C26  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4465  000C2A  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4466  000C2E  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4467  000C32  0E00               	movlw	0
  4468  000C34  BE18               	btfsc	___lldiv@divisor+1,7,c
  4469  000C36  0EFF               	movlw	-1
  4470  000C38  6E19               	movwf	___lldiv@divisor+2,c
  4471  000C3A  6E1A               	movwf	___lldiv@divisor+3,c
  4472  000C3C  EC53  F009         	call	___lldiv	;wreg free
  4473  000C40  C013  F028         	movff	?___lldiv,ultoa@v
  4474  000C44  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4475  000C48  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4476  000C4C  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4477  000C50  4A20               	infsnz	ultoa@buf,f,c
  4478  000C52  2A21               	incf	ultoa@buf+1,f,c
  4479  000C54  5028               	movf	ultoa@v,w,c
  4480  000C56  1029               	iorwf	ultoa@v+1,w,c
  4481  000C58  102A               	iorwf	ultoa@v+2,w,c
  4482  000C5A  102B               	iorwf	ultoa@v+3,w,c
  4483  000C5C  A4D8               	btfss	status,2,c
  4484  000C5E  D7DD               	goto	l889
  4485  000C60  C020  FFD9         	movff	ultoa@buf,fsr2l
  4486  000C64  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4487  000C68  0E00               	movlw	0
  4488  000C6A  6EDF               	movwf	indf2,c
  4489  000C6C  0620               	decf	ultoa@buf,f,c
  4490  000C6E  A0D8               	btfss	status,0,c
  4491  000C70  0621               	decf	ultoa@buf+1,f,c
  4492  000C72  C022  F013         	movff	ultoa@val,___llmod@dividend
  4493  000C76  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4494  000C7A  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4495  000C7E  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4496  000C82  C026  F017         	movff	ultoa@base,___llmod@divisor
  4497  000C86  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4498  000C8A  0E00               	movlw	0
  4499  000C8C  BE18               	btfsc	___llmod@divisor+1,7,c
  4500  000C8E  0EFF               	movlw	-1
  4501  000C90  6E19               	movwf	___llmod@divisor+2,c
  4502  000C92  6E1A               	movwf	___llmod@divisor+3,c
  4503  000C94  EC0A  F00A         	call	___llmod	;wreg free
  4504  000C98  5013               	movf	?___llmod,w,c
  4505  000C9A  6E2C               	movwf	ultoa@c,c
  4506  000C9C  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4507  000CA0  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4508  000CA4  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4509  000CA8  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4510  000CAC  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4511  000CB0  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4512  000CB4  0E00               	movlw	0
  4513  000CB6  BE18               	btfsc	___lldiv@divisor+1,7,c
  4514  000CB8  0EFF               	movlw	-1
  4515  000CBA  6E19               	movwf	___lldiv@divisor+2,c
  4516  000CBC  6E1A               	movwf	___lldiv@divisor+3,c
  4517  000CBE  EC53  F009         	call	___lldiv	;wreg free
  4518  000CC2  C013  F022         	movff	?___lldiv,ultoa@val
  4519  000CC6  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4520  000CCA  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4521  000CCE  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4522  000CD2  0E09               	movlw	9
  4523  000CD4  642C               	cpfsgt	ultoa@c,c
  4524  000CD6  D002               	goto	l892
  4525  000CD8  0E07               	movlw	7
  4526  000CDA  262C               	addwf	ultoa@c,f,c
  4527  000CDC                     l892:
  4528  000CDC  0E30               	movlw	48
  4529  000CDE  262C               	addwf	ultoa@c,f,c
  4530  000CE0  C020  FFD9         	movff	ultoa@buf,fsr2l
  4531  000CE4  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4532  000CE8  C02C  FFDF         	movff	ultoa@c,indf2
  4533  000CEC  0620               	decf	ultoa@buf,f,c
  4534  000CEE  A0D8               	btfss	status,0,c
  4535  000CF0  0621               	decf	ultoa@buf+1,f,c
  4536  000CF2  5022               	movf	ultoa@val,w,c
  4537  000CF4  1023               	iorwf	ultoa@val+1,w,c
  4538  000CF6  1024               	iorwf	ultoa@val+2,w,c
  4539  000CF8  1025               	iorwf	ultoa@val+3,w,c
  4540  000CFA  B4D8               	btfsc	status,2,c
  4541  000CFC  0012               	return	
  4542  000CFE  D7B9               	goto	l891
  4543  000D00                     __end_of_ultoa:
  4544                           	opt stack 0
  4545                           tblptru	equ	0xFF8
  4546                           tblptrh	equ	0xFF7
  4547                           tblptrl	equ	0xFF6
  4548                           tablat	equ	0xFF5
  4549                           prodh	equ	0xFF4
  4550                           prodl	equ	0xFF3
  4551                           intcon	equ	0xFF2
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           postinc1	equ	0xFE6
  4555                           postdec1	equ	0xFE5
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           fsr2h	equ	0xFDA
  4561                           fsr2l	equ	0xFD9
  4562                           status	equ	0xFD8
  4563                           
  4564 ;; *************** function ___llmod *****************
  4565 ;; Defined at:
  4566 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  dividend        4   18[COMRAM] unsigned long 
  4569 ;;  divisor         4   22[COMRAM] unsigned long 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  counter         1   26[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  4   18[COMRAM] unsigned long 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4581 ;;      Params:         8       0       0       0       0       0       0
  4582 ;;      Locals:         1       0       0       0       0       0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0
  4584 ;;      Totals:         9       0       0       0       0       0       0
  4585 ;;Total ram usage:        9 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    1
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_ultoa
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text27
  4596  001414                     __ptext27:
  4597                           	opt stack 0
  4598  001414                     ___llmod:
  4599                           	opt stack 24
  4600                           
  4601                           ;incstack = 0
  4602  001414  5017               	movf	___llmod@divisor,w,c
  4603  001416  1018               	iorwf	___llmod@divisor+1,w,c
  4604  001418  1019               	iorwf	___llmod@divisor+2,w,c
  4605  00141A  101A               	iorwf	___llmod@divisor+3,w,c
  4606  00141C  B4D8               	btfsc	status,2,c
  4607  00141E  D024               	goto	l851
  4608  001420  0E01               	movlw	1
  4609  001422  6E1B               	movwf	___llmod@counter,c
  4610  001424  D006               	goto	l846
  4611  001426  90D8               	bcf	status,0,c
  4612  001428  3617               	rlcf	___llmod@divisor,f,c
  4613  00142A  3618               	rlcf	___llmod@divisor+1,f,c
  4614  00142C  3619               	rlcf	___llmod@divisor+2,f,c
  4615  00142E  361A               	rlcf	___llmod@divisor+3,f,c
  4616  001430  2A1B               	incf	___llmod@counter,f,c
  4617  001432                     l846:
  4618  001432  AE1A               	btfss	___llmod@divisor+3,7,c
  4619  001434  D7F8               	goto	l847
  4620  001436                     u2320:
  4621  001436  5017               	movf	___llmod@divisor,w,c
  4622  001438  5C13               	subwf	___llmod@dividend,w,c
  4623  00143A  5018               	movf	___llmod@divisor+1,w,c
  4624  00143C  5814               	subwfb	___llmod@dividend+1,w,c
  4625  00143E  5019               	movf	___llmod@divisor+2,w,c
  4626  001440  5815               	subwfb	___llmod@dividend+2,w,c
  4627  001442  501A               	movf	___llmod@divisor+3,w,c
  4628  001444  5816               	subwfb	___llmod@dividend+3,w,c
  4629  001446  A0D8               	btfss	status,0,c
  4630  001448  D008               	goto	l850
  4631  00144A  5017               	movf	___llmod@divisor,w,c
  4632  00144C  5E13               	subwf	___llmod@dividend,f,c
  4633  00144E  5018               	movf	___llmod@divisor+1,w,c
  4634  001450  5A14               	subwfb	___llmod@dividend+1,f,c
  4635  001452  5019               	movf	___llmod@divisor+2,w,c
  4636  001454  5A15               	subwfb	___llmod@dividend+2,f,c
  4637  001456  501A               	movf	___llmod@divisor+3,w,c
  4638  001458  5A16               	subwfb	___llmod@dividend+3,f,c
  4639  00145A                     l850:
  4640  00145A  90D8               	bcf	status,0,c
  4641  00145C  321A               	rrcf	___llmod@divisor+3,f,c
  4642  00145E  3219               	rrcf	___llmod@divisor+2,f,c
  4643  001460  3218               	rrcf	___llmod@divisor+1,f,c
  4644  001462  3217               	rrcf	___llmod@divisor,f,c
  4645  001464  2E1B               	decfsz	___llmod@counter,f,c
  4646  001466  D7E7               	goto	u2320
  4647  001468                     l851:
  4648  001468  C013  F013         	movff	___llmod@dividend,?___llmod
  4649  00146C  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4650  001470  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4651  001474  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4652  001478  0012               	return		;funcret
  4653  00147A                     __end_of___llmod:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           prodh	equ	0xFF4
  4660                           prodl	equ	0xFF3
  4661                           intcon	equ	0xFF2
  4662                           postinc0	equ	0xFEE
  4663                           wreg	equ	0xFE8
  4664                           postinc1	equ	0xFE6
  4665                           postdec1	equ	0xFE5
  4666                           fsr1h	equ	0xFE2
  4667                           fsr1l	equ	0xFE1
  4668                           indf2	equ	0xFDF
  4669                           postinc2	equ	0xFDE
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           
  4674 ;; *************** function ___lldiv *****************
  4675 ;; Defined at:
  4676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  dividend        4   18[COMRAM] unsigned long 
  4679 ;;  divisor         4   22[COMRAM] unsigned long 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  quotient        4   26[COMRAM] unsigned long 
  4682 ;;  counter         1   30[COMRAM] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  4   18[COMRAM] unsigned long 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4692 ;;      Params:         8       0       0       0       0       0       0
  4693 ;;      Locals:         5       0       0       0       0       0       0
  4694 ;;      Temps:          0       0       0       0       0       0       0
  4695 ;;      Totals:        13       0       0       0       0       0       0
  4696 ;;Total ram usage:       13 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    1
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_ultoa
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text28
  4707  0012A6                     __ptext28:
  4708                           	opt stack 0
  4709  0012A6                     ___lldiv:
  4710                           	opt stack 24
  4711                           
  4712                           ;incstack = 0
  4713  0012A6  0E00               	movlw	0
  4714  0012A8  6E1B               	movwf	___lldiv@quotient,c
  4715  0012AA  0E00               	movlw	0
  4716  0012AC  6E1C               	movwf	___lldiv@quotient+1,c
  4717  0012AE  0E00               	movlw	0
  4718  0012B0  6E1D               	movwf	___lldiv@quotient+2,c
  4719  0012B2  0E00               	movlw	0
  4720  0012B4  6E1E               	movwf	___lldiv@quotient+3,c
  4721  0012B6  5017               	movf	___lldiv@divisor,w,c
  4722  0012B8  1018               	iorwf	___lldiv@divisor+1,w,c
  4723  0012BA  1019               	iorwf	___lldiv@divisor+2,w,c
  4724  0012BC  101A               	iorwf	___lldiv@divisor+3,w,c
  4725  0012BE  B4D8               	btfsc	status,2,c
  4726  0012C0  D02A               	goto	l841
  4727  0012C2  0E01               	movlw	1
  4728  0012C4  6E1F               	movwf	___lldiv@counter,c
  4729  0012C6  D006               	goto	l836
  4730  0012C8  90D8               	bcf	status,0,c
  4731  0012CA  3617               	rlcf	___lldiv@divisor,f,c
  4732  0012CC  3618               	rlcf	___lldiv@divisor+1,f,c
  4733  0012CE  3619               	rlcf	___lldiv@divisor+2,f,c
  4734  0012D0  361A               	rlcf	___lldiv@divisor+3,f,c
  4735  0012D2  2A1F               	incf	___lldiv@counter,f,c
  4736  0012D4                     l836:
  4737  0012D4  AE1A               	btfss	___lldiv@divisor+3,7,c
  4738  0012D6  D7F8               	goto	l837
  4739  0012D8                     u2290:
  4740  0012D8  90D8               	bcf	status,0,c
  4741  0012DA  361B               	rlcf	___lldiv@quotient,f,c
  4742  0012DC  361C               	rlcf	___lldiv@quotient+1,f,c
  4743  0012DE  361D               	rlcf	___lldiv@quotient+2,f,c
  4744  0012E0  361E               	rlcf	___lldiv@quotient+3,f,c
  4745  0012E2  5017               	movf	___lldiv@divisor,w,c
  4746  0012E4  5C13               	subwf	___lldiv@dividend,w,c
  4747  0012E6  5018               	movf	___lldiv@divisor+1,w,c
  4748  0012E8  5814               	subwfb	___lldiv@dividend+1,w,c
  4749  0012EA  5019               	movf	___lldiv@divisor+2,w,c
  4750  0012EC  5815               	subwfb	___lldiv@dividend+2,w,c
  4751  0012EE  501A               	movf	___lldiv@divisor+3,w,c
  4752  0012F0  5816               	subwfb	___lldiv@dividend+3,w,c
  4753  0012F2  A0D8               	btfss	status,0,c
  4754  0012F4  D009               	goto	l840
  4755  0012F6  5017               	movf	___lldiv@divisor,w,c
  4756  0012F8  5E13               	subwf	___lldiv@dividend,f,c
  4757  0012FA  5018               	movf	___lldiv@divisor+1,w,c
  4758  0012FC  5A14               	subwfb	___lldiv@dividend+1,f,c
  4759  0012FE  5019               	movf	___lldiv@divisor+2,w,c
  4760  001300  5A15               	subwfb	___lldiv@dividend+2,f,c
  4761  001302  501A               	movf	___lldiv@divisor+3,w,c
  4762  001304  5A16               	subwfb	___lldiv@dividend+3,f,c
  4763  001306  801B               	bsf	___lldiv@quotient,0,c
  4764  001308                     l840:
  4765  001308  90D8               	bcf	status,0,c
  4766  00130A  321A               	rrcf	___lldiv@divisor+3,f,c
  4767  00130C  3219               	rrcf	___lldiv@divisor+2,f,c
  4768  00130E  3218               	rrcf	___lldiv@divisor+1,f,c
  4769  001310  3217               	rrcf	___lldiv@divisor,f,c
  4770  001312  2E1F               	decfsz	___lldiv@counter,f,c
  4771  001314  D7E1               	goto	u2290
  4772  001316                     l841:
  4773  001316  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4774  00131A  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4775  00131E  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4776  001322  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4777  001326  0012               	return		;funcret
  4778  001328                     __end_of___lldiv:
  4779                           	opt stack 0
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           intcon	equ	0xFF2
  4787                           postinc0	equ	0xFEE
  4788                           wreg	equ	0xFE8
  4789                           postinc1	equ	0xFE6
  4790                           postdec1	equ	0xFE5
  4791                           fsr1h	equ	0xFE2
  4792                           fsr1l	equ	0xFE1
  4793                           indf2	equ	0xFDF
  4794                           postinc2	equ	0xFDE
  4795                           fsr2h	equ	0xFDA
  4796                           fsr2l	equ	0xFD9
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function _command_builder3 *****************
  4800 ;; Defined at:
  4801 ;;		line 454 in file "SlaveComm_PIC18.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4804 ;;		 -> communications@send_buffer(42), 
  4805 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4806 ;;		 -> STR_28(4), STR_23(4), STR_20(4), STR_18(4), 
  4807 ;;		 -> STR_16(4), 
  4808 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4809 ;;		 -> STR_29(10), STR_24(5), STR_21(6), STR_19(7), 
  4810 ;;		 -> STR_17(6), 
  4811 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4812 ;;		 -> STR_30(4), STR_25(4), STR_22(4), com_command_setEnergyUsed@temp(12), 
  4813 ;;		 -> com_command_setPower@temp(12), 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4825 ;;      Params:         8       0       0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0
  4828 ;;      Totals:         8       0       0       0       0       0       0
  4829 ;;Total ram usage:        8 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    3
  4832 ;; This function calls:
  4833 ;;		_command_builder_add_char
  4834 ;;		_command_builder_add_string
  4835 ;; This function is called by:
  4836 ;;		_com_command_setPower
  4837 ;;		_com_command_setEnergyUsed
  4838 ;;		_com_command_setVersion
  4839 ;;		_com_command_setVolts
  4840 ;;		_com_command_setAmps
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text29
  4845  001178                     __ptext29:
  4846                           	opt stack 0
  4847  001178                     _command_builder3:
  4848                           	opt stack 24
  4849                           
  4850                           ;SlaveComm_PIC18.c: 456: command_builder_add_char( send_buffer, '#' );
  4851                           
  4852                           ;incstack = 0
  4853  001178  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4854  00117C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4855  001180  0E23               	movlw	35
  4856  001182  6E15               	movwf	command_builder_add_char@data,c
  4857  001184  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4858                           
  4859                           ;SlaveComm_PIC18.c: 457: command_builder_add_char( send_buffer, '#' );
  4860  001188  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4861  00118C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4862  001190  0E23               	movlw	35
  4863  001192  6E15               	movwf	command_builder_add_char@data,c
  4864  001194  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4865                           
  4866                           ;SlaveComm_PIC18.c: 458: command_builder_add_char( send_buffer, '!' );
  4867  001198  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4868  00119C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4869  0011A0  0E21               	movlw	33
  4870  0011A2  6E15               	movwf	command_builder_add_char@data,c
  4871  0011A4  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4872                           
  4873                           ;SlaveComm_PIC18.c: 459: command_builder_add_string( send_buffer, data1 );
  4874  0011A8  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4875  0011AC  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4876  0011B0  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4877  0011B4  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4878  0011B8  EC94  F009         	call	_command_builder_add_string	;wreg free
  4879                           
  4880                           ;SlaveComm_PIC18.c: 460: command_builder_add_char( send_buffer, ';' );
  4881  0011BC  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4882  0011C0  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4883  0011C4  0E3B               	movlw	59
  4884  0011C6  6E15               	movwf	command_builder_add_char@data,c
  4885  0011C8  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4886                           
  4887                           ;SlaveComm_PIC18.c: 461: command_builder_add_string( send_buffer, data2 );
  4888  0011CC  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4889  0011D0  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4890  0011D4  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4891  0011D8  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4892  0011DC  EC94  F009         	call	_command_builder_add_string	;wreg free
  4893                           
  4894                           ;SlaveComm_PIC18.c: 462: command_builder_add_char( send_buffer, ';' );
  4895  0011E0  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4896  0011E4  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4897  0011E8  0E3B               	movlw	59
  4898  0011EA  6E15               	movwf	command_builder_add_char@data,c
  4899  0011EC  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4900                           
  4901                           ;SlaveComm_PIC18.c: 463: command_builder_add_string( send_buffer, data3 );
  4902  0011F0  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4903  0011F4  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4904  0011F8  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4905  0011FC  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4906  001200  EC94  F009         	call	_command_builder_add_string	;wreg free
  4907                           
  4908                           ;SlaveComm_PIC18.c: 464: command_builder_add_char( send_buffer, '*' );
  4909  001204  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4910  001208  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4911  00120C  0E2A               	movlw	42
  4912  00120E  6E15               	movwf	command_builder_add_char@data,c
  4913  001210  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  4914  001214  0012               	return	
  4915  001216                     __end_of_command_builder3:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postinc1	equ	0xFE6
  4927                           postdec1	equ	0xFE5
  4928                           fsr1h	equ	0xFE2
  4929                           fsr1l	equ	0xFE1
  4930                           indf2	equ	0xFDF
  4931                           postinc2	equ	0xFDE
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _command_builder_add_string *****************
  4937 ;; Defined at:
  4938 ;;		line 499 in file "SlaveComm_PIC18.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4941 ;;		 -> communications@send_buffer(42), 
  4942 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4943 ;;		 -> STR_30(4), STR_29(10), STR_28(4), STR_27(12), 
  4944 ;;		 -> STR_26(5), STR_25(4), STR_24(5), STR_23(4), 
  4945 ;;		 -> STR_22(4), STR_21(6), STR_20(4), STR_19(7), 
  4946 ;;		 -> STR_18(4), com_command_setEnergyUsed@temp(12), STR_17(6), STR_16(4), 
  4947 ;;		 -> com_command_setPower@temp(12), STR_15(5), STR_14(5), STR_13(4), 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  inx             2   28[COMRAM] int 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4959 ;;      Params:         4       0       0       0       0       0       0
  4960 ;;      Locals:         2       0       0       0       0       0       0
  4961 ;;      Temps:          2       0       0       0       0       0       0
  4962 ;;      Totals:         8       0       0       0       0       0       0
  4963 ;;Total ram usage:        8 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    2
  4966 ;; This function calls:
  4967 ;;		_command_builder_add_char
  4968 ;; This function is called by:
  4969 ;;		_command_builder1
  4970 ;;		_command_builder3
  4971 ;;		_command_builder2
  4972 ;;		_command_builder4
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text30
  4977  001328                     __ptext30:
  4978                           	opt stack 0
  4979  001328                     _command_builder_add_string:
  4980                           	opt stack 24
  4981                           
  4982                           ;SlaveComm_PIC18.c: 501: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4983                           
  4984                           ;incstack = 0
  4985  001328  0E00               	movlw	0
  4986  00132A  6E1E               	movwf	command_builder_add_string@inx+1,c
  4987  00132C  0E00               	movlw	0
  4988  00132E  6E1D               	movwf	command_builder_add_string@inx,c
  4989  001330  D01F               	goto	l396
  4990  001332                     
  4991                           ;SlaveComm_PIC18.c: 502: {
  4992                           ;SlaveComm_PIC18.c: 503: command_builder_add_char( send_buffer, data_string[inx] );
  4993  001332  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4994  001336  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4995  00133A  501D               	movf	command_builder_add_string@inx,w,c
  4996  00133C  2419               	addwf	command_builder_add_string@data_string,w,c
  4997  00133E  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4998  001340  501E               	movf	command_builder_add_string@inx+1,w,c
  4999  001342  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5000  001344  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5001  001346  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5002  00134A  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5003  00134E  6AF8               	clrf	tblptru,c
  5004  001350  0E05               	movlw	(high __ramtop+-1)
  5005  001352  64F7               	cpfsgt	tblptrh,c
  5006  001354  D003               	bra	u2347
  5007  001356  0008               	tblrd		*
  5008  001358  50F5               	movf	tablat,w,c
  5009  00135A  D005               	bra	u2340
  5010  00135C                     u2347:
  5011  00135C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5012  001360  CFF7 FFE2          	movff	tblptrh,fsr1h
  5013  001364  50E7               	movf	indf1,w,c
  5014  001366                     u2340:
  5015  001366  6E15               	movwf	command_builder_add_char@data,c
  5016  001368  EC9A  F00A         	call	_command_builder_add_char	;wreg free
  5017  00136C  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5018  00136E  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5019  001370                     l396:
  5020  001370  501D               	movf	command_builder_add_string@inx,w,c
  5021  001372  2419               	addwf	command_builder_add_string@data_string,w,c
  5022  001374  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5023  001376  501E               	movf	command_builder_add_string@inx+1,w,c
  5024  001378  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5025  00137A  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5026  00137C  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5027  001380  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5028  001384  6AF8               	clrf	tblptru,c
  5029  001386  0E05               	movlw	(high __ramtop+-1)
  5030  001388  64F7               	cpfsgt	tblptrh,c
  5031  00138A  D003               	bra	u2357
  5032  00138C  0008               	tblrd		*
  5033  00138E  50F5               	movf	tablat,w,c
  5034  001390  D005               	bra	u2350
  5035  001392                     u2357:
  5036  001392  CFF6 FFE1          	movff	tblptrl,fsr1l
  5037  001396  CFF7 FFE2          	movff	tblptrh,fsr1h
  5038  00139A  50E7               	movf	indf1,w,c
  5039  00139C                     u2350:
  5040  00139C  0900               	iorlw	0
  5041  00139E  B4D8               	btfsc	status,2,c
  5042  0013A0  0012               	return	
  5043  0013A2  D7C7               	goto	l397
  5044  0013A4                     __end_of_command_builder_add_string:
  5045                           	opt stack 0
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           prodh	equ	0xFF4
  5051                           prodl	equ	0xFF3
  5052                           intcon	equ	0xFF2
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           indf1	equ	0xFE7
  5056                           postinc1	equ	0xFE6
  5057                           postdec1	equ	0xFE5
  5058                           fsr1h	equ	0xFE2
  5059                           fsr1l	equ	0xFE1
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           fsr2h	equ	0xFDA
  5063                           fsr2l	equ	0xFD9
  5064                           status	equ	0xFD8
  5065                           
  5066 ;; *************** function _command_builder_add_char *****************
  5067 ;; Defined at:
  5068 ;;		line 486 in file "SlaveComm_PIC18.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5071 ;;		 -> communications@send_buffer(42), 
  5072 ;;  data            1   20[COMRAM] unsigned char 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      void 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5084 ;;      Params:         3       0       0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0
  5086 ;;      Temps:          1       0       0       0       0       0       0
  5087 ;;      Totals:         4       0       0       0       0       0       0
  5088 ;;Total ram usage:        4 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_command_builder1
  5095 ;;		_command_builder3
  5096 ;;		_command_builder_add_string
  5097 ;;		_command_builder2
  5098 ;;		_command_builder4
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text31
  5103  001534                     __ptext31:
  5104                           	opt stack 0
  5105  001534                     _command_builder_add_char:
  5106                           	opt stack 24
  5107                           
  5108                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  5109                           
  5110                           ;incstack = 0
  5111  001534  EE20 F028          	lfsr	2,40
  5112  001538  5013               	movf	command_builder_add_char@send_buffer,w,c
  5113  00153A  26D9               	addwf	fsr2l,f,c
  5114  00153C  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5115  00153E  22DA               	addwfc	fsr2h,f,c
  5116  001540  50DF               	movf	indf2,w,c
  5117  001542  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5118  001544  5016               	movf	??_command_builder_add_char,w,c
  5119  001546  0D01               	mullw	1
  5120  001548  50F3               	movf	prodl,w,c
  5121  00154A  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5122  00154C  6ED9               	movwf	fsr2l,c
  5123  00154E  50F4               	movf	prodh,w,c
  5124  001550  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5125  001552  6EDA               	movwf	fsr2h,c
  5126  001554  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5127                           
  5128                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  5129  001558  EE20 F028          	lfsr	2,40
  5130  00155C  5013               	movf	command_builder_add_char@send_buffer,w,c
  5131  00155E  26D9               	addwf	fsr2l,f,c
  5132  001560  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5133  001562  22DA               	addwfc	fsr2h,f,c
  5134  001564  2ADF               	incf	indf2,f,c
  5135                           
  5136                           ;SlaveComm_PIC18.c: 491: if( send_buffer->write_position >= 40 )
  5137  001566  EE20 F028          	lfsr	2,40
  5138  00156A  5013               	movf	command_builder_add_char@send_buffer,w,c
  5139  00156C  26D9               	addwf	fsr2l,f,c
  5140  00156E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5141  001570  22DA               	addwfc	fsr2h,f,c
  5142  001572  0E27               	movlw	39
  5143  001574  64DF               	cpfsgt	indf2,c
  5144  001576  0012               	return	
  5145                           
  5146                           ;SlaveComm_PIC18.c: 492: {
  5147                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  5148  001578  EE20 F028          	lfsr	2,40
  5149  00157C  5013               	movf	command_builder_add_char@send_buffer,w,c
  5150  00157E  26D9               	addwf	fsr2l,f,c
  5151  001580  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5152  001582  22DA               	addwfc	fsr2h,f,c
  5153  001584  0E00               	movlw	0
  5154  001586  6EDF               	movwf	indf2,c
  5155  001588  0012               	return	
  5156  00158A                     __end_of_command_builder_add_char:
  5157                           	opt stack 0
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           intcon	equ	0xFF2
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           indf1	equ	0xFE7
  5168                           postinc1	equ	0xFE6
  5169                           postdec1	equ	0xFE5
  5170                           fsr1h	equ	0xFE2
  5171                           fsr1l	equ	0xFE1
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _atol *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5183 ;;		 -> process_data@parameters(50), 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  a               4   39[COMRAM] long 
  5186 ;;  c               1   43[COMRAM] unsigned char 
  5187 ;;  sign            1   38[COMRAM] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  4   30[COMRAM] long 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5197 ;;      Params:         4       0       0       0       0       0       0
  5198 ;;      Locals:         6       0       0       0       0       0       0
  5199 ;;      Temps:          4       0       0       0       0       0       0
  5200 ;;      Totals:        14       0       0       0       0       0       0
  5201 ;;Total ram usage:       14 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    2
  5204 ;; This function calls:
  5205 ;;		___lmul
  5206 ;;		_isdigit
  5207 ;; This function is called by:
  5208 ;;		_process_data_parameters
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text32
  5213  000D00                     __ptext32:
  5214                           	opt stack 0
  5215  000D00                     _atol:
  5216                           	opt stack 25
  5217                           
  5218                           ;incstack = 0
  5219  000D00  C01F  FFD9         	movff	atol@s,fsr2l
  5220  000D04  C020  FFDA         	movff	atol@s+1,fsr2h
  5221  000D08  50DF               	movf	indf2,w,c
  5222  000D0A  6E2C               	movwf	atol@c,c
  5223  000D0C  4A1F               	infsnz	atol@s,f,c
  5224  000D0E  2A20               	incf	atol@s+1,f,c
  5225  000D10  0E20               	movlw	32
  5226  000D12  182C               	xorwf	atol@c,w,c
  5227  000D14  B4D8               	btfsc	status,2,c
  5228  000D16  D7F4               	goto	_atol
  5229  000D18  0E09               	movlw	9
  5230  000D1A  182C               	xorwf	atol@c,w,c
  5231  000D1C  B4D8               	btfsc	status,2,c
  5232  000D1E  D7F0               	goto	_atol
  5233  000D20  0E00               	movlw	0
  5234  000D22  6E28               	movwf	atol@a,c
  5235  000D24  0E00               	movlw	0
  5236  000D26  6E29               	movwf	atol@a+1,c
  5237  000D28  0E00               	movlw	0
  5238  000D2A  6E2A               	movwf	atol@a+2,c
  5239  000D2C  0E00               	movlw	0
  5240  000D2E  6E2B               	movwf	atol@a+3,c
  5241  000D30  0E00               	movlw	0
  5242  000D32  6E27               	movwf	atol@sign,c
  5243  000D34  0E2D               	movlw	45
  5244  000D36  182C               	xorwf	atol@c,w,c
  5245  000D38  A4D8               	btfss	status,2,c
  5246  000D3A  D002               	goto	l632
  5247  000D3C  2A27               	incf	atol@sign,f,c
  5248  000D3E  D027               	goto	L8
  5249  000D40                     l632:
  5250  000D40  0E2B               	movlw	43
  5251  000D42  182C               	xorwf	atol@c,w,c
  5252  000D44  A4D8               	btfss	status,2,c
  5253  000D46  D02B               	goto	l635
  5254  000D48  D022               	goto	L8
  5255  000D4A  C028  F013         	movff	atol@a,___lmul@multiplier
  5256  000D4E  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5257  000D52  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5258  000D56  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5259  000D5A  0E0A               	movlw	10
  5260  000D5C  6E17               	movwf	___lmul@multiplicand,c
  5261  000D5E  0E00               	movlw	0
  5262  000D60  6E18               	movwf	___lmul@multiplicand+1,c
  5263  000D62  0E00               	movlw	0
  5264  000D64  6E19               	movwf	___lmul@multiplicand+2,c
  5265  000D66  0E00               	movlw	0
  5266  000D68  6E1A               	movwf	___lmul@multiplicand+3,c
  5267  000D6A  ECC5  F00A         	call	___lmul	;wreg free
  5268  000D6E  C02C  F023         	movff	atol@c,??_atol
  5269  000D72  0ED0               	movlw	208
  5270  000D74  2623               	addwf	??_atol,f,c
  5271  000D76  5023               	movf	??_atol,w,c
  5272  000D78  2413               	addwf	?___lmul,w,c
  5273  000D7A  6E28               	movwf	atol@a,c
  5274  000D7C  0E00               	movlw	0
  5275  000D7E  2014               	addwfc	?___lmul+1,w,c
  5276  000D80  6E29               	movwf	atol@a+1,c
  5277  000D82  0E00               	movlw	0
  5278  000D84  2015               	addwfc	?___lmul+2,w,c
  5279  000D86  6E2A               	movwf	atol@a+2,c
  5280  000D88  0E00               	movlw	0
  5281  000D8A  2016               	addwfc	?___lmul+3,w,c
  5282  000D8C  6E2B               	movwf	atol@a+3,c
  5283  000D8E                     L8:
  5284  000D8E  C01F  FFD9         	movff	atol@s,fsr2l
  5285  000D92  C020  FFDA         	movff	atol@s+1,fsr2h
  5286  000D96  50DF               	movf	indf2,w,c
  5287  000D98  6E2C               	movwf	atol@c,c
  5288  000D9A  4A1F               	infsnz	atol@s,f,c
  5289  000D9C  2A20               	incf	atol@s+1,f,c
  5290  000D9E                     l635:
  5291  000D9E  502C               	movf	atol@c,w,c
  5292  000DA0  EC40  F00C         	call	_isdigit
  5293  000DA4  B0D8               	btfsc	status,0,c
  5294  000DA6  D7D1               	goto	l636
  5295  000DA8  5027               	movf	atol@sign,w,c
  5296  000DAA  B4D8               	btfsc	status,2,c
  5297  000DAC  D01A               	goto	l638
  5298  000DAE  C028  F023         	movff	atol@a,??_atol
  5299  000DB2  C029  F024         	movff	atol@a+1,??_atol+1
  5300  000DB6  C02A  F025         	movff	atol@a+2,??_atol+2
  5301  000DBA  C02B  F026         	movff	atol@a+3,??_atol+3
  5302  000DBE  1E23               	comf	??_atol,f,c
  5303  000DC0  1E24               	comf	??_atol+1,f,c
  5304  000DC2  1E25               	comf	??_atol+2,f,c
  5305  000DC4  1E26               	comf	??_atol+3,f,c
  5306  000DC6  2A23               	incf	??_atol,f,c
  5307  000DC8  0E00               	movlw	0
  5308  000DCA  2224               	addwfc	??_atol+1,f,c
  5309  000DCC  2225               	addwfc	??_atol+2,f,c
  5310  000DCE  2226               	addwfc	??_atol+3,f,c
  5311  000DD0  C023  F01F         	movff	??_atol,?_atol
  5312  000DD4  C024  F020         	movff	??_atol+1,?_atol+1
  5313  000DD8  C025  F021         	movff	??_atol+2,?_atol+2
  5314  000DDC  C026  F022         	movff	??_atol+3,?_atol+3
  5315  000DE0  0012               	return	
  5316  000DE2                     l638:
  5317  000DE2  C028  F01F         	movff	atol@a,?_atol
  5318  000DE6  C029  F020         	movff	atol@a+1,?_atol+1
  5319  000DEA  C02A  F021         	movff	atol@a+2,?_atol+2
  5320  000DEE  C02B  F022         	movff	atol@a+3,?_atol+3
  5321  000DF2  0012               	return		;funcret
  5322  000DF4                     __end_of_atol:
  5323                           	opt stack 0
  5324                           tblptru	equ	0xFF8
  5325                           tblptrh	equ	0xFF7
  5326                           tblptrl	equ	0xFF6
  5327                           tablat	equ	0xFF5
  5328                           prodh	equ	0xFF4
  5329                           prodl	equ	0xFF3
  5330                           intcon	equ	0xFF2
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           indf1	equ	0xFE7
  5334                           postinc1	equ	0xFE6
  5335                           postdec1	equ	0xFE5
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           fsr2h	equ	0xFDA
  5341                           fsr2l	equ	0xFD9
  5342                           status	equ	0xFD8
  5343                           
  5344 ;; *************** function _isdigit *****************
  5345 ;; Defined at:
  5346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  c               1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  c               1   20[COMRAM] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;		None               void
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5360 ;;      Params:         0       0       0       0       0       0       0
  5361 ;;      Locals:         2       0       0       0       0       0       0
  5362 ;;      Temps:          1       0       0       0       0       0       0
  5363 ;;      Totals:         3       0       0       0       0       0       0
  5364 ;;Total ram usage:        3 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    1
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_atol
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text33
  5375  001880                     __ptext33:
  5376                           	opt stack 0
  5377  001880                     _isdigit:
  5378                           	opt stack 25
  5379                           
  5380                           ;incstack = 0
  5381                           ;isdigit@c stored from wreg
  5382  001880  6E15               	movwf	isdigit@c,c
  5383  001882  0E00               	movlw	0
  5384  001884  6E14               	movwf	_isdigit$2073,c
  5385  001886  0E3A               	movlw	58
  5386  001888  6015               	cpfslt	isdigit@c,c
  5387  00188A  D005               	goto	l810
  5388  00188C  0E2F               	movlw	47
  5389  00188E  6415               	cpfsgt	isdigit@c,c
  5390  001890  D002               	goto	l810
  5391  001892  0E01               	movlw	1
  5392  001894  6E14               	movwf	_isdigit$2073,c
  5393  001896                     l810:
  5394  001896  C014  F013         	movff	_isdigit$2073,??_isdigit
  5395  00189A  3013               	rrcf	??_isdigit,w,c
  5396  00189C  0012               	return	
  5397  00189E                     __end_of_isdigit:
  5398                           	opt stack 0
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           postinc0	equ	0xFEE
  5407                           wreg	equ	0xFE8
  5408                           indf1	equ	0xFE7
  5409                           postinc1	equ	0xFE6
  5410                           postdec1	equ	0xFE5
  5411                           fsr1h	equ	0xFE2
  5412                           fsr1l	equ	0xFE1
  5413                           indf2	equ	0xFDF
  5414                           postinc2	equ	0xFDE
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function ___lmul *****************
  5420 ;; Defined at:
  5421 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  multiplier      4   18[COMRAM] unsigned long 
  5424 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  product         4   26[COMRAM] unsigned long 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  4   18[COMRAM] unsigned long 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5436 ;;      Params:         8       0       0       0       0       0       0
  5437 ;;      Locals:         4       0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0
  5439 ;;      Totals:        12       0       0       0       0       0       0
  5440 ;;Total ram usage:       12 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_powerPulseCheck
  5447 ;;		_atol
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text34
  5452  00158A                     __ptext34:
  5453                           	opt stack 0
  5454  00158A                     ___lmul:
  5455                           	opt stack 28
  5456                           
  5457                           ;incstack = 0
  5458  00158A  0E00               	movlw	0
  5459  00158C  6E1B               	movwf	___lmul@product,c
  5460  00158E  0E00               	movlw	0
  5461  001590  6E1C               	movwf	___lmul@product+1,c
  5462  001592  0E00               	movlw	0
  5463  001594  6E1D               	movwf	___lmul@product+2,c
  5464  001596  0E00               	movlw	0
  5465  001598  6E1E               	movwf	___lmul@product+3,c
  5466  00159A  A013               	btfss	___lmul@multiplier,0,c
  5467  00159C  D008               	goto	l479
  5468  00159E  5017               	movf	___lmul@multiplicand,w,c
  5469  0015A0  261B               	addwf	___lmul@product,f,c
  5470  0015A2  5018               	movf	___lmul@multiplicand+1,w,c
  5471  0015A4  221C               	addwfc	___lmul@product+1,f,c
  5472  0015A6  5019               	movf	___lmul@multiplicand+2,w,c
  5473  0015A8  221D               	addwfc	___lmul@product+2,f,c
  5474  0015AA  501A               	movf	___lmul@multiplicand+3,w,c
  5475  0015AC  221E               	addwfc	___lmul@product+3,f,c
  5476  0015AE                     l479:
  5477  0015AE  90D8               	bcf	status,0,c
  5478  0015B0  3617               	rlcf	___lmul@multiplicand,f,c
  5479  0015B2  3618               	rlcf	___lmul@multiplicand+1,f,c
  5480  0015B4  3619               	rlcf	___lmul@multiplicand+2,f,c
  5481  0015B6  361A               	rlcf	___lmul@multiplicand+3,f,c
  5482  0015B8  90D8               	bcf	status,0,c
  5483  0015BA  3216               	rrcf	___lmul@multiplier+3,f,c
  5484  0015BC  3215               	rrcf	___lmul@multiplier+2,f,c
  5485  0015BE  3214               	rrcf	___lmul@multiplier+1,f,c
  5486  0015C0  3213               	rrcf	___lmul@multiplier,f,c
  5487  0015C2  5013               	movf	___lmul@multiplier,w,c
  5488  0015C4  1014               	iorwf	___lmul@multiplier+1,w,c
  5489  0015C6  1015               	iorwf	___lmul@multiplier+2,w,c
  5490  0015C8  1016               	iorwf	___lmul@multiplier+3,w,c
  5491  0015CA  A4D8               	btfss	status,2,c
  5492  0015CC  D7E6               	goto	l478
  5493  0015CE  C01B  F013         	movff	___lmul@product,?___lmul
  5494  0015D2  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5495  0015D6  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5496  0015DA  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5497  0015DE  0012               	return		;funcret
  5498  0015E0                     __end_of___lmul:
  5499                           	opt stack 0
  5500                           tblptru	equ	0xFF8
  5501                           tblptrh	equ	0xFF7
  5502                           tblptrl	equ	0xFF6
  5503                           tablat	equ	0xFF5
  5504                           prodh	equ	0xFF4
  5505                           prodl	equ	0xFF3
  5506                           intcon	equ	0xFF2
  5507                           postinc0	equ	0xFEE
  5508                           wreg	equ	0xFE8
  5509                           indf1	equ	0xFE7
  5510                           postinc1	equ	0xFE6
  5511                           postdec1	equ	0xFE5
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           indf2	equ	0xFDF
  5515                           postinc2	equ	0xFDE
  5516                           fsr2h	equ	0xFDA
  5517                           fsr2l	equ	0xFD9
  5518                           status	equ	0xFD8
  5519                           
  5520 ;; *************** function _process_data_parameterize *****************
  5521 ;; Defined at:
  5522 ;;		line 280 in file "SlaveComm_PIC18.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5525 ;;		 -> process_data@parameters(50), 
  5526 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5527 ;;		 -> communications@receive_buffer(42), 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  inx             2   31[COMRAM] int 
  5530 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5531 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5541 ;;      Params:         4       0       0       0       0       0       0
  5542 ;;      Locals:         4       0       0       0       0       0       0
  5543 ;;      Temps:          3       0       0       0       0       0       0
  5544 ;;      Totals:        11       0       0       0       0       0       0
  5545 ;;Total ram usage:       11 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    2
  5548 ;; This function calls:
  5549 ;;		___wmul
  5550 ;; This function is called by:
  5551 ;;		_process_data
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text35
  5556  000852                     __ptext35:
  5557                           	opt stack 0
  5558  000852                     _process_data_parameterize:
  5559                           	opt stack 26
  5560                           
  5561                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5562                           
  5563                           ;incstack = 0
  5564  000852  0E00               	movlw	0
  5565  000854  6E23               	movwf	process_data_parameterize@parameter_position,c
  5566                           
  5567                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5568  000856  0E00               	movlw	0
  5569  000858  6E22               	movwf	process_data_parameterize@parameter_index,c
  5570                           
  5571                           ;SlaveComm_PIC18.c: 292: for( int inx = 0; inx < 5; inx++ )
  5572  00085A  0E00               	movlw	0
  5573  00085C  6E21               	movwf	process_data_parameterize@inx+1,c
  5574  00085E  0E00               	movlw	0
  5575  000860  6E20               	movwf	process_data_parameterize@inx,c
  5576  000862  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5577  000864  D008               	goto	l339
  5578  000866  5021               	movf	process_data_parameterize@inx+1,w,c
  5579  000868  E105               	bnz	u2620
  5580  00086A  0E05               	movlw	5
  5581  00086C  5C20               	subwf	process_data_parameterize@inx,w,c
  5582  00086E  B0D8               	btfsc	status,0,c
  5583  000870  D082               	goto	l341
  5584  000872  D001               	goto	l339
  5585  000874                     u2620:
  5586  000874  D080               	goto	l341
  5587  000876                     l339:
  5588                           
  5589                           ;SlaveComm_PIC18.c: 293: {
  5590                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5591  000876  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5592  00087A  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5593  00087E  0E00               	movlw	0
  5594  000880  6E16               	movwf	___wmul@multiplicand+1,c
  5595  000882  0E0A               	movlw	10
  5596  000884  6E15               	movwf	___wmul@multiplicand,c
  5597  000886  ECFB  F00B         	call	___wmul	;wreg free
  5598  00088A  5013               	movf	?___wmul,w,c
  5599  00088C  2419               	addwf	process_data_parameterize@parameters,w,c
  5600  00088E  6ED9               	movwf	fsr2l,c
  5601  000890  5014               	movf	?___wmul+1,w,c
  5602  000892  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5603  000894  6EDA               	movwf	fsr2h,c
  5604  000896  0E00               	movlw	0
  5605  000898  6EDF               	movwf	indf2,c
  5606  00089A  4A20               	infsnz	process_data_parameterize@inx,f,c
  5607  00089C  2A21               	incf	process_data_parameterize@inx+1,f,c
  5608  00089E  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5609  0008A0  D7EA               	goto	l339
  5610  0008A2  5021               	movf	process_data_parameterize@inx+1,w,c
  5611  0008A4  E168               	bnz	l3171
  5612  0008A6  D7E1               	goto	L6
  5613  0008A8                     
  5614                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5615  0008A8  0E00               	movlw	0
  5616  0008AA  6E23               	movwf	process_data_parameterize@parameter_position,c
  5617                           
  5618                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5619  0008AC  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5620                           
  5621                           ;SlaveComm_PIC18.c: 309: if( parameter_index >= 5 )
  5622  0008AE  0E04               	movlw	4
  5623  0008B0  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5624  0008B2  D05A               	goto	l345
  5625                           
  5626                           ;SlaveComm_PIC18.c: 310: {
  5627                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5628  0008B4  0E04               	movlw	4
  5629  0008B6  6E22               	movwf	process_data_parameterize@parameter_index,c
  5630                           
  5631                           ;SlaveComm_PIC18.c: 314: }
  5632                           ;SlaveComm_PIC18.c: 316: break;
  5633  0008B8  D057               	goto	l345
  5634  0008BA                     
  5635                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5636  0008BA  EE20 F029          	lfsr	2,41
  5637  0008BE  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5638  0008C0  26D9               	addwf	fsr2l,f,c
  5639  0008C2  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5640  0008C4  22DA               	addwfc	fsr2h,f,c
  5641  0008C6  50DF               	movf	indf2,w,c
  5642  0008C8  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5643  0008CA  501D               	movf	??_process_data_parameterize,w,c
  5644  0008CC  0D01               	mullw	1
  5645  0008CE  50F3               	movf	prodl,w,c
  5646  0008D0  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5647  0008D2  6ED9               	movwf	fsr2l,c
  5648  0008D4  50F4               	movf	prodh,w,c
  5649  0008D6  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5650  0008D8  6EDA               	movwf	fsr2h,c
  5651  0008DA  5022               	movf	process_data_parameterize@parameter_index,w,c
  5652  0008DC  0D0A               	mullw	10
  5653  0008DE  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5654  0008E2  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5655  0008E6  50F3               	movf	prodl,w,c
  5656  0008E8  261E               	addwf	??_process_data_parameterize+1,f,c
  5657  0008EA  50F4               	movf	prodh,w,c
  5658  0008EC  221F               	addwfc	??_process_data_parameterize+2,f,c
  5659  0008EE  5023               	movf	process_data_parameterize@parameter_position,w,c
  5660  0008F0  0D01               	mullw	1
  5661  0008F2  50F3               	movf	prodl,w,c
  5662  0008F4  241E               	addwf	??_process_data_parameterize+1,w,c
  5663  0008F6  6EE1               	movwf	fsr1l,c
  5664  0008F8  50F4               	movf	prodh,w,c
  5665  0008FA  201F               	addwfc	??_process_data_parameterize+2,w,c
  5666  0008FC  6EE2               	movwf	fsr1h,c
  5667  0008FE  CFDF FFE7          	movff	indf2,indf1
  5668                           
  5669                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5670  000902  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5671                           
  5672                           ;SlaveComm_PIC18.c: 321: if( parameter_position >= 10 )
  5673  000904  0E09               	movlw	9
  5674  000906  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5675  000908  D002               	goto	l349
  5676                           
  5677                           ;SlaveComm_PIC18.c: 322: {
  5678                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5679  00090A  0E09               	movlw	9
  5680  00090C  6E23               	movwf	process_data_parameterize@parameter_position,c
  5681  00090E                     l349:
  5682                           
  5683                           ;SlaveComm_PIC18.c: 326: }
  5684                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5685  00090E  5022               	movf	process_data_parameterize@parameter_index,w,c
  5686  000910  0D0A               	mullw	10
  5687  000912  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5688  000916  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5689  00091A  50F3               	movf	prodl,w,c
  5690  00091C  261D               	addwf	??_process_data_parameterize,f,c
  5691  00091E  50F4               	movf	prodh,w,c
  5692  000920  221E               	addwfc	??_process_data_parameterize+1,f,c
  5693  000922  5023               	movf	process_data_parameterize@parameter_position,w,c
  5694  000924  0D01               	mullw	1
  5695  000926  50F3               	movf	prodl,w,c
  5696  000928  241D               	addwf	??_process_data_parameterize,w,c
  5697  00092A  6ED9               	movwf	fsr2l,c
  5698  00092C  50F4               	movf	prodh,w,c
  5699  00092E  201E               	addwfc	??_process_data_parameterize+1,w,c
  5700  000930  6EDA               	movwf	fsr2h,c
  5701  000932  0E00               	movlw	0
  5702  000934  6EDF               	movwf	indf2,c
  5703                           
  5704                           ;SlaveComm_PIC18.c: 331: }
  5705                           
  5706                           ;SlaveComm_PIC18.c: 330: break;
  5707  000936  D018               	goto	l345
  5708  000938  EE20 F029          	lfsr	2,41
  5709  00093C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5710  00093E  26D9               	addwf	fsr2l,f,c
  5711  000940  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5712  000942  22DA               	addwfc	fsr2h,f,c
  5713  000944  50DF               	movf	indf2,w,c
  5714  000946  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5715  000948  501D               	movf	??_process_data_parameterize,w,c
  5716  00094A  0D01               	mullw	1
  5717  00094C  50F3               	movf	prodl,w,c
  5718  00094E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5719  000950  6ED9               	movwf	fsr2l,c
  5720  000952  50F4               	movf	prodh,w,c
  5721  000954  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5722  000956  6EDA               	movwf	fsr2h,c
  5723  000958  50DF               	movf	indf2,w,c
  5724                           
  5725                           ; Switch size 1, requested type "space"
  5726                           ; Number of cases is 2, Range of values is 33 to 59
  5727                           ; switch strategies available:
  5728                           ; Name         Instructions Cycles
  5729                           ; simple_byte            7     4 (average)
  5730                           ;	Chosen strategy is simple_byte
  5731  00095A  0A21               	xorlw	33	; case 33
  5732  00095C  B4D8               	btfsc	status,2,c
  5733  00095E  D004               	goto	l345
  5734  000960  0A1A               	xorlw	26	; case 59
  5735  000962  B4D8               	btfsc	status,2,c
  5736  000964  D7A1               	goto	l346
  5737  000966  D7A9               	goto	l348
  5738  000968                     l345:
  5739                           
  5740                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5741  000968  EE20 F029          	lfsr	2,41
  5742  00096C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5743  00096E  26D9               	addwf	fsr2l,f,c
  5744  000970  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5745  000972  22DA               	addwfc	fsr2h,f,c
  5746  000974  2ADF               	incf	indf2,f,c
  5747  000976                     l341:
  5748  000976                     l3171:
  5749  000976  EE20 F029          	lfsr	2,41
  5750  00097A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5751  00097C  26D9               	addwf	fsr2l,f,c
  5752  00097E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5753  000980  22DA               	addwfc	fsr2h,f,c
  5754  000982  50DF               	movf	indf2,w,c
  5755  000984  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5756  000986  501D               	movf	??_process_data_parameterize,w,c
  5757  000988  0D01               	mullw	1
  5758  00098A  50F3               	movf	prodl,w,c
  5759  00098C  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5760  00098E  6ED9               	movwf	fsr2l,c
  5761  000990  50F4               	movf	prodh,w,c
  5762  000992  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5763  000994  6EDA               	movwf	fsr2h,c
  5764  000996  0E2A               	movlw	42
  5765  000998  18DE               	xorwf	postinc2,w,c
  5766  00099A  B4D8               	btfsc	status,2,c
  5767  00099C  0012               	return	
  5768  00099E  EE20 F029          	lfsr	2,41
  5769  0009A2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5770  0009A4  26D9               	addwf	fsr2l,f,c
  5771  0009A6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5772  0009A8  22DA               	addwfc	fsr2h,f,c
  5773  0009AA  0E28               	movlw	40
  5774  0009AC  60DF               	cpfslt	indf2,c
  5775  0009AE  0012               	return	
  5776  0009B0  EE20 F028          	lfsr	2,40
  5777  0009B4  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5778  0009B6  26D9               	addwf	fsr2l,f,c
  5779  0009B8  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5780  0009BA  22DA               	addwfc	fsr2h,f,c
  5781  0009BC  EE10 F029          	lfsr	1,41
  5782  0009C0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5783  0009C2  26E1               	addwf	fsr1l,f,c
  5784  0009C4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5785  0009C6  22E2               	addwfc	fsr1h,f,c
  5786  0009C8  50DE               	movf	postinc2,w,c
  5787  0009CA  18E6               	xorwf	postinc1,w,c
  5788  0009CC  B4D8               	btfsc	status,2,c
  5789  0009CE  0012               	return	
  5790  0009D0  D7B3               	goto	l343
  5791  0009D2                     __end_of_process_data_parameterize:
  5792                           	opt stack 0
  5793                           tblptru	equ	0xFF8
  5794                           tblptrh	equ	0xFF7
  5795                           tblptrl	equ	0xFF6
  5796                           tablat	equ	0xFF5
  5797                           prodh	equ	0xFF4
  5798                           prodl	equ	0xFF3
  5799                           intcon	equ	0xFF2
  5800                           postinc0	equ	0xFEE
  5801                           wreg	equ	0xFE8
  5802                           indf1	equ	0xFE7
  5803                           postinc1	equ	0xFE6
  5804                           postdec1	equ	0xFE5
  5805                           fsr1h	equ	0xFE2
  5806                           fsr1l	equ	0xFE1
  5807                           indf2	equ	0xFDF
  5808                           postinc2	equ	0xFDE
  5809                           fsr2h	equ	0xFDA
  5810                           fsr2l	equ	0xFD9
  5811                           status	equ	0xFD8
  5812                           
  5813 ;; *************** function ___wmul *****************
  5814 ;; Defined at:
  5815 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5816 ;; Parameters:    Size  Location     Type
  5817 ;;  multiplier      2   18[COMRAM] unsigned int 
  5818 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  product         2   22[COMRAM] unsigned int 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2   18[COMRAM] unsigned int 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, prodl, prodh
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5830 ;;      Params:         4       0       0       0       0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0
  5833 ;;      Totals:         6       0       0       0       0       0       0
  5834 ;;Total ram usage:        6 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    1
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_process_data_parameterize
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text36
  5845  0017F6                     __ptext36:
  5846                           	opt stack 0
  5847  0017F6                     ___wmul:
  5848                           	opt stack 26
  5849                           
  5850                           ;incstack = 0
  5851  0017F6  5013               	movf	___wmul@multiplier,w,c
  5852  0017F8  0215               	mulwf	___wmul@multiplicand,c
  5853  0017FA  CFF3 F017          	movff	prodl,___wmul@product
  5854  0017FE  CFF4 F018          	movff	prodh,___wmul@product+1
  5855  001802  5013               	movf	___wmul@multiplier,w,c
  5856  001804  0216               	mulwf	___wmul@multiplicand+1,c
  5857  001806  50F3               	movf	prodl,w,c
  5858  001808  2618               	addwf	___wmul@product+1,f,c
  5859  00180A  5014               	movf	___wmul@multiplier+1,w,c
  5860  00180C  0215               	mulwf	___wmul@multiplicand,c
  5861  00180E  50F3               	movf	prodl,w,c
  5862  001810  2618               	addwf	___wmul@product+1,f,c
  5863  001812  C017  F013         	movff	___wmul@product,?___wmul
  5864  001816  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5865  00181A  0012               	return	
  5866  00181C                     __end_of___wmul:
  5867                           	opt stack 0
  5868                           tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           intcon	equ	0xFF2
  5875                           postinc0	equ	0xFEE
  5876                           wreg	equ	0xFE8
  5877                           indf1	equ	0xFE7
  5878                           postinc1	equ	0xFE6
  5879                           postdec1	equ	0xFE5
  5880                           fsr1h	equ	0xFE2
  5881                           fsr1l	equ	0xFE1
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           fsr2h	equ	0xFDA
  5885                           fsr2l	equ	0xFD9
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _SPISlaveInit *****************
  5889 ;; Defined at:
  5890 ;;		line 715 in file "SlaveComm_PIC18.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      void 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5904 ;;      Params:         0       0       0       0       0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_communications
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text37
  5919  0016C6                     __ptext37:
  5920                           	opt stack 0
  5921  0016C6                     _SPISlaveInit:
  5922                           	opt stack 28
  5923                           
  5924                           ;SlaveComm_PIC18.c: 718: TRISAbits.TRISA0 = 0;
  5925                           
  5926                           ;incstack = 0
  5927  0016C6  9092               	bcf	3986,0,c	;volatile
  5928                           
  5929                           ;SlaveComm_PIC18.c: 719: TRISAbits.TRISA1 = 1;
  5930  0016C8  8292               	bsf	3986,1,c	;volatile
  5931                           
  5932                           ;SlaveComm_PIC18.c: 721: TRISCbits.TRISC3 = 0;
  5933  0016CA  9694               	bcf	3988,3,c	;volatile
  5934                           
  5935                           ;SlaveComm_PIC18.c: 722: TRISCbits.TRISC5 = 0;
  5936  0016CC  9A94               	bcf	3988,5,c	;volatile
  5937                           
  5938                           ;SlaveComm_PIC18.c: 723: TRISCbits.TRISC6 = 0;
  5939  0016CE  9C94               	bcf	3988,6,c	;volatile
  5940                           
  5941                           ;SlaveComm_PIC18.c: 724: TRISCbits.TRISC7 = 0;
  5942  0016D0  9E94               	bcf	3988,7,c	;volatile
  5943                           
  5944                           ;SlaveComm_PIC18.c: 725: ANSELAbits.ANSA1 = 0b0;
  5945  0016D2  010F               	movlb	15	; () banked
  5946  0016D4  9338               	bcf	56,1,b	;volatile
  5947                           
  5948                           ;SlaveComm_PIC18.c: 727: LATCbits.LATC6 = 1;
  5949  0016D6  8C8B               	bsf	3979,6,c	;volatile
  5950                           
  5951                           ;SlaveComm_PIC18.c: 728: LATCbits.LATC3 = 1;
  5952  0016D8  868B               	bsf	3979,3,c	;volatile
  5953                           
  5954                           ;SlaveComm_PIC18.c: 729: LATCbits.LATC5 = 1;
  5955  0016DA  8A8B               	bsf	3979,5,c	;volatile
  5956                           
  5957                           ;SlaveComm_PIC18.c: 730: LATCbits.LATC7 = 1;
  5958  0016DC  8E8B               	bsf	3979,7,c	;volatile
  5959                           
  5960                           ;SlaveComm_PIC18.c: 733: SSP2CON1bits.SSPEN = 0;
  5961  0016DE  9A6C               	bcf	3948,5,c	;volatile
  5962                           
  5963                           ;SlaveComm_PIC18.c: 735: ANSELBbits.ANSB0 = 0b0;
  5964  0016E0  9139               	bcf	57,0,b	;volatile
  5965                           
  5966                           ;SlaveComm_PIC18.c: 736: ANSELBbits.ANSB1 = 0b0;
  5967  0016E2  9339               	bcf	57,1,b	;volatile
  5968                           
  5969                           ;SlaveComm_PIC18.c: 737: ANSELBbits.ANSB2 = 0b0;
  5970  0016E4  9539               	bcf	57,2,b	;volatile
  5971                           
  5972                           ;SlaveComm_PIC18.c: 738: ANSELBbits.ANSB3 = 0b0;
  5973  0016E6  9739               	bcf	57,3,b	;volatile
  5974                           
  5975                           ;SlaveComm_PIC18.c: 740: TRISBbits.RB0 = 0b1;
  5976  0016E8  8093               	bsf	3987,0,c	;volatile
  5977                           
  5978                           ;SlaveComm_PIC18.c: 741: TRISBbits.RB1 = 0b1;
  5979  0016EA  8293               	bsf	3987,1,c	;volatile
  5980                           
  5981                           ;SlaveComm_PIC18.c: 742: TRISBbits.RB2 = 0b1;
  5982  0016EC  8493               	bsf	3987,2,c	;volatile
  5983                           
  5984                           ;SlaveComm_PIC18.c: 743: TRISBbits.RB3 = 0b0;
  5985  0016EE  9693               	bcf	3987,3,c	;volatile
  5986                           
  5987                           ;SlaveComm_PIC18.c: 745: SSP2STATbits.SMP = 0;
  5988  0016F0  9E6D               	bcf	3949,7,c	;volatile
  5989                           
  5990                           ;SlaveComm_PIC18.c: 746: SSP2STATbits.CKE = 1;
  5991  0016F2  8C6D               	bsf	3949,6,c	;volatile
  5992                           
  5993                           ;SlaveComm_PIC18.c: 748: SSP2CON1bits.WCOL = 0;
  5994  0016F4  9E6C               	bcf	3948,7,c	;volatile
  5995                           
  5996                           ;SlaveComm_PIC18.c: 749: SSP2CON1bits.SSPOV = 0;
  5997  0016F6  9C6C               	bcf	3948,6,c	;volatile
  5998                           
  5999                           ;SlaveComm_PIC18.c: 750: SSP2CON1bits.SSPEN = 0;
  6000  0016F8  9A6C               	bcf	3948,5,c	;volatile
  6001                           
  6002                           ;SlaveComm_PIC18.c: 751: SSP2CON1bits.CKP = 1;
  6003  0016FA  886C               	bsf	3948,4,c	;volatile
  6004                           
  6005                           ; BSR set to: 15
  6006                           ;SlaveComm_PIC18.c: 752: SSP2CON1bits.SSPM = 0b0100;
  6007  0016FC  506C               	movf	3948,w,c	;volatile
  6008  0016FE  0BF0               	andlw	-16
  6009  001700  0904               	iorlw	4
  6010  001702  6E6C               	movwf	3948,c	;volatile
  6011                           
  6012                           ;SlaveComm_PIC18.c: 755: SSP2CON3 = 0x00;
  6013  001704  0E00               	movlw	0
  6014  001706  6E69               	movwf	3945,c	;volatile
  6015                           
  6016                           ; BSR set to: 15
  6017                           ;SlaveComm_PIC18.c: 756: SSP2CON3bits.BOEN = 0b0;
  6018  001708  9869               	bcf	3945,4,c	;volatile
  6019                           
  6020                           ; BSR set to: 15
  6021                           ;SlaveComm_PIC18.c: 758: SSP2CON1bits.SSPEN = 1;
  6022  00170A  8A6C               	bsf	3948,5,c	;volatile
  6023  00170C  0012               	return	
  6024  00170E                     __end_of_SPISlaveInit:
  6025                           	opt stack 0
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           intcon	equ	0xFF2
  6033                           postinc0	equ	0xFEE
  6034                           wreg	equ	0xFE8
  6035                           indf1	equ	0xFE7
  6036                           postinc1	equ	0xFE6
  6037                           postdec1	equ	0xFE5
  6038                           fsr1h	equ	0xFE2
  6039                           fsr1l	equ	0xFE1
  6040                           indf2	equ	0xFDF
  6041                           postinc2	equ	0xFDE
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _Timer0_ISR *****************
  6047 ;; Defined at:
  6048 ;;		line 396 in file "Current_Sense_Main.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, status,2, status,0
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6062 ;;      Params:         0       0       0       0       0       0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0
  6064 ;;      Temps:         18       0       0       0       0       0       0
  6065 ;;      Totals:        18       0       0       0       0       0       0
  6066 ;;Total ram usage:       18 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		Interrupt level 2
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	intcode
  6076  000008                     __pintcode:
  6077                           	opt stack 0
  6078  000008                     _Timer0_ISR:
  6079                           	opt stack 23
  6080                           
  6081                           ; BSR set to: 15
  6082                           ;incstack = 0
  6083  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6084  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6085  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6086  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6087  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6088  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6089  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6090  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6091  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6092  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6093  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6094  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6095  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6096  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6097  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6098  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6099  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6100  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6101  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6102                           
  6103                           ;Current_Sense_Main.c: 399: INTCONbits.TMR0IF = 0;
  6104  000052  94F2               	bcf	intcon,2,c	;volatile
  6105                           
  6106                           ;Current_Sense_Main.c: 401: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6107  000054  0EFC               	movlw	252
  6108  000056  6ED7               	movwf	4055,c	;volatile
  6109                           
  6110                           ;Current_Sense_Main.c: 402: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6111  000058  0E18               	movlw	24
  6112  00005A  6ED6               	movwf	4054,c	;volatile
  6113                           
  6114                           ;Current_Sense_Main.c: 404: timerCountHF++;
  6115  00005C  0E01               	movlw	1
  6116  00005E  2648               	addwf	_timerCountHF,f,c	;volatile
  6117  000060  0E00               	movlw	0
  6118  000062  2249               	addwfc	_timerCountHF+1,f,c	;volatile
  6119  000064  224A               	addwfc	_timerCountHF+2,f,c	;volatile
  6120  000066  224B               	addwfc	_timerCountHF+3,f,c	;volatile
  6121                           
  6122                           ;Current_Sense_Main.c: 405: timerCountLF++;
  6123  000068  0E01               	movlw	1
  6124  00006A  263A               	addwf	_timerCountLF,f,c	;volatile
  6125  00006C  0E00               	movlw	0
  6126  00006E  223B               	addwfc	_timerCountLF+1,f,c	;volatile
  6127  000070  223C               	addwfc	_timerCountLF+2,f,c	;volatile
  6128  000072  223D               	addwfc	_timerCountLF+3,f,c	;volatile
  6129                           
  6130                           ;Current_Sense_Main.c: 407: return;
  6131  000074  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6132  000078  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6133  00007C  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6134  000080  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6135  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6136  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6137  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6138  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6139  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6140  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6141  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6142  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6143  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6144  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6145  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6146  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6147  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6148  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6149  0000BC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6150  0000BE  0011               	retfie		f
  6151  0000C0                     __end_of_Timer0_ISR:
  6152                           	opt stack 0
  6153                           pclatu	equ	0xFFB
  6154                           pclath	equ	0xFFA
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           postinc0	equ	0xFEE
  6163                           fsr0h	equ	0xFEA
  6164                           fsr0l	equ	0xFE9
  6165                           wreg	equ	0xFE8
  6166                           indf1	equ	0xFE7
  6167                           postinc1	equ	0xFE6
  6168                           postdec1	equ	0xFE5
  6169                           fsr1h	equ	0xFE2
  6170                           fsr1l	equ	0xFE1
  6171                           indf2	equ	0xFDF
  6172                           postinc2	equ	0xFDE
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           pclatu	equ	0xFFB
  6177                           pclath	equ	0xFFA
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           postinc0	equ	0xFEE
  6186                           fsr0h	equ	0xFEA
  6187                           fsr0l	equ	0xFE9
  6188                           wreg	equ	0xFE8
  6189                           indf1	equ	0xFE7
  6190                           postinc1	equ	0xFE6
  6191                           postdec1	equ	0xFE5
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           fsr2h	equ	0xFDA
  6197                           fsr2l	equ	0xFD9
  6198                           status	equ	0xFD8
  6199                           
  6200                           	psect	rparam
  6201  0000                     pclatu	equ	0xFFB
  6202                           pclath	equ	0xFFA
  6203                           tblptru	equ	0xFF8
  6204                           tblptrh	equ	0xFF7
  6205                           tblptrl	equ	0xFF6
  6206                           tablat	equ	0xFF5
  6207                           prodh	equ	0xFF4
  6208                           prodl	equ	0xFF3
  6209                           intcon	equ	0xFF2
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           indf1	equ	0xFE7
  6215                           postinc1	equ	0xFE6
  6216                           postdec1	equ	0xFE5
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           fsr2h	equ	0xFDA
  6222                           fsr2l	equ	0xFD9
  6223                           status	equ	0xFD8
  6224                           
  6225                           	psect	temp
  6226  00004D                     btemp:
  6227                           	opt stack 0
  6228  00004D                     	ds	1
  6229  0000                     int$flags	set	btemp
  6230  0000                     wtemp6	set	btemp+1
  6231                           pclatu	equ	0xFFB
  6232                           pclath	equ	0xFFA
  6233                           tblptru	equ	0xFF8
  6234                           tblptrh	equ	0xFF7
  6235                           tblptrl	equ	0xFF6
  6236                           tablat	equ	0xFF5
  6237                           prodh	equ	0xFF4
  6238                           prodl	equ	0xFF3
  6239                           intcon	equ	0xFF2
  6240                           postinc0	equ	0xFEE
  6241                           fsr0h	equ	0xFEA
  6242                           fsr0l	equ	0xFE9
  6243                           wreg	equ	0xFE8
  6244                           indf1	equ	0xFE7
  6245                           postinc1	equ	0xFE6
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8


Data Sizes:
    Strings     87
    Constant    0
    Data        15
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     77     153
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[10]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 10
		 -> STR_12(CODE[10]), STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[4]), STR_29(CODE[10]), STR_28(CODE[4]), STR_27(CODE[12]), 
		 -> STR_26(CODE[5]), STR_25(CODE[4]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_22(CODE[4]), STR_21(CODE[6]), STR_20(CODE[4]), STR_19(CODE[7]), 
		 -> STR_18(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_17(CODE[6]), STR_16(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[5]), STR_14(CODE[5]), STR_13(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_30(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_29(CODE[10]), STR_24(CODE[5]), STR_21(CODE[6]), STR_19(CODE[7]), 
		 -> STR_17(CODE[6]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_28(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_18(CODE[4]), 
		 -> STR_16(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___aldiv
    ___aldiv->___lmul
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ltoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   83321
                                             73 BANK0      4     4      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleBlue
 ---------------------------------------------------------------------------------
 (1) _toggleBlue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                     15    15      0    3148
                                             44 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                            ___aldiv
                            ___awmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1345
                                             30 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     122
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   79983
                                             71 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   44301
                                             12 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   12906
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15485
                                             54 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                               _ltoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     629
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   34604
                                             16 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   32917
                                             56 COMRAM     1     1      0
                                             12 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    3300
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15575
                                             54 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    2493
                                             44 COMRAM    10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1720
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   12785
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1655
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     996
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ltoa
             _ultoa
               ___lldiv
               ___llmod
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initOSC
   _initTimer
   _powerPulseCheck
     ___aldiv
       ___lmul (ARG)
     ___awmod
     ___lmul
   _toggleBlue

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4D      99       4       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F       9        0.0%
DATA                 0      0     10F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jun 05 05:29:24 2019

                                       _SPISlaveInit 16C6                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l120 183A                                                  l115 182C  
                                                l107 0FA6                                                  l108 0FF8  
                                                l301 10A6                                                  l109 1026  
                                                l134 0B2A                                                  l303 106E  
                                                l135 0B5C                                                  l119 1830  
                                                l320 1146                                                  l136 0BAC  
                                                l402 1242                                                  l138 0B8A  
                                                l411 173C                                                  l331 0F6A  
                                                l315 1152                                                  l307 10C0  
                                                l139 0B8C                                                  l420 0A4A  
                                                l332 0F7C                                                  l316 111E  
                                                l341 0976                                                  l405 12A2  
                                                l309 10D2                                                  l326 0ECC  
                                                l318 112C                                                  l343 0938  
                                                l319 113A                                                  l416 0A4E  
                                                l432 17C8                                                  l192 0BE6  
                                                l345 0968                                                  l417 09E4  
                                                l433 17CC                                                  l329 0F10  
                                                l346 08A8                                                  l426 0ABC  
                                                l418 0A18                                                  l370 07C6  
                                                l530 0E98                                                  l522 0E10  
                                                l186 0BB2                                                  l339 0876  
                                                l195 1760                                                  l531 0EAE  
                                                l523 0E28                                                  l348 08BA  
                                                l428 0AF4                                                  l372 07F4  
                                                l356 067E                                                  l196 174E  
                                                l349 090E                                                  l437 1878  
                                                l525 0E56                                                  l374 0822  
                                                l366 076A                                                  l358 0708  
                                                l526 0E4A                                                  l632 0D40  
                                                l376 084E                                                  l368 0798  
                                                l297 105E                                                  l529 0E8A  
                                                l810 1896                                                  l635 0D9E  
                                                l299 1092                                                  l636 0D4A  
                                                l396 1370                                                  l397 1332  
                                                l661 13B8                                                  l478 159A  
                                                l638 0DE2                                                  l670 140A  
                                                l662 13C4                                                  l479 15AE  
                                                l840 1308                                                  l664 13DA  
                                                l841 1316                                                  l665 13D2  
                                                l850 145A                                                  l851 1468  
                                                l836 12D4                                                  l668 13F2  
                                                l837 12C8                                                  l669 13FC  
                                                l846 1432                                                  l847 1426  
                                                l891 0C72                                                  l892 0CDC  
                                                l885 160C                                                  l889 0C1A  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                       ___awmod@sign 0018                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 006E  
                                               l3171 0976                                                 l3561 0BB2  
                                               l3469 0B5C                                                 STR_1 0650  
                                               STR_2 0654                                                 STR_3 061E  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0635                                                 STR_6 063A  
                                               STR_7 0630                                                 STR_8 062A  
                                               STR_9 0617                                                 u3020 13DE  
                                               u3100 0B3C                                                 u2320 1436  
                                               u2340 1366                                                 u2350 139C  
                                               u2440 0A86                                                 u2290 12D8  
                                               u3090 0B14                                                 u2347 135C  
                                               u2620 0874                                                 u2357 1392  
                                               _IPR1 000F9F                                                 u3350 0FF8  
                                               _IPR2 000FA2                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u3367 0FB8  
                                               u3377 0FD6                                                 u3387 1754  
                                               u3397 10E4                                                 u2960 0E5A  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atol 0D00  
                                               _main 0F80                                                 _init 18F2  
                                               _ltoa 15E0                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00A8                 powerPulseCheck@timerCountLFLastValid 0044  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                                     _communications 1036                                      __end_of___aldiv 0EC0  
                                              ?_atol 001F                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 0624  
                                              ?_ltoa 002D                                                STR_11 063F  
                                              STR_12 060D                                                STR_13 0650  
                                              STR_30 064C                                                STR_22 0644  
                                              STR_16 0654                                                STR_17 062A  
                                              STR_25 0648                                                STR_18 0654  
                                              STR_19 0617                                                STR_27 0601  
                                              STR_28 0654                                      __end_of___awmod 1414  
                                              STR_29 060D                                      __end_of___lldiv 1328  
                                    __end_of___llmod 147A                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                       powerPulseCheck@TESTING_count 00BD                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 006E                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 18CE  
                                   ?_powerPulseCheck 0001                                                _isLow 0047  
                        powerPulseCheck@meterWattsHF 0064                          powerPulseCheck@meterWattsLF 0068  
                                    __end_of_isdigit 189E                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0C0A  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0AFE                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 0037                        command_builder_add_string@inx 001D  
                                    __initialization 147A                                         __end_of_atol 0DF4  
                                       __end_of_main 1036                                         __end_of_init 18FC  
                                       __end_of_ltoa 1632                               __end_of_communications 10DA  
                             _com_command_setVersion 17D0                  __size_of_command_builder_add_string 007C  
                     powerPulseCheck@TESTING_oneshot 0046                                     _SPI_receive_data 17A8  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 00A9                                               ??_init 0013  
                                             ??_ltoa 0035                                        _SPI_send_data 1860  
                                      __activetblptr 000002                              _process_data_parameters 065A  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 158A  
                                          ??___aldiv 0027                                               ___wmul 17F6  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___awmod 0017                                            ??___lldiv 001B  
                                          ??___llmod 001B                                               _initIO 183E  
                                             clear_0 14B2                                               clear_1 14BE  
                                             clear_2 14CA                                      ___awmod@divisor 0015  
                                     ?_SPI_send_data 0001                                      ___awmod@counter 0017  
                         ?_com_command_setEnergyUsed 0037                                            ??_initOSC 0013  
                          _process_data_parameterize 0852                                         __pdataCOMRAM 004C  
                                          ??_isdigit 0013                                               ltoa@cp 0035  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 0060  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 1744                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 14D0  
                    powerPulseCheck@timerCountHFLast 00F5                      com_command_setPower@send_buffer 0037  
                    powerPulseCheck@timerCountLFLast 00EB                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                               _powerPulseCheck$2442 0060                                         __pidataBANK0 18E4  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                      __end_of_ultoa 0D00                            ??_process_data_parameters 0039  
                 powerPulseCheck@meterEnergyUsedPart 00AD                         communications@receive_buffer 0100  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 13A4  
                         _command_builder_add_string 1328                                              ??_ultoa 0028  
                                         __pbssBANK0 00AD                                           __pbssBANK1 0100  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0039           communications@end_of_transmission_received 00C0  
                                     ___lmul@product 001B                          __end_of_resetCommunications 1178  
                                    _meterEnergyUsed 00B1                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 167C  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 18CE  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 1534  
                                  __end_of_delayMS10 1776                      __end_of_process_data_parameters 0852  
                           __end_of_SPI_receive_data 17D0                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                            ___aldiv 0DF4                                      __size_of___lmul 0056  
                                            ___awmod 13A4             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 12A6                                      __size_of___wmul 0026  
                                            ___llmod 1414                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0022  
                                            __pcinit 147A                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0F80  
                                            __ptext1 181C                                              __ptext2 0AFE  
                                            __ptext3 13A4                                              __ptext4 0DF4  
                                            __ptext5 189E                                              __ptext6 18F2  
                                            __ptext7 18B6                                              __ptext8 183E  
                                            __ptext9 1744                                           _meterWatts 00B5  
                                          _T0CONbits 000FD5                                              _initOSC 18B6  
                                  __end_of_initTimer 18B6                                              _isdigit 1880  
                                   ___awmod@dividend 0013                                     ___aldiv@dividend 001F  
                                __size_of_Timer0_ISR 00B8                                              main@inx 00AB  
                                            _strcmp2 09D2                                 end_of_initialization 14D0  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 12A6  
                          powerPulseCheck@firstPulse 004C                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 17F6                                              ltoa@buf 002D  
                           __size_of_powerPulseCheck 010C                                              ltoa@val 002F  
                                   ??_communications 003A                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                   ___aldiv@quotient 0029                                              postdec1 000FE5  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                receive_data@my_status 003E  
                               __end_of_receive_data 0F80                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                    communications@last_state_active 00BF                          ??_com_command_setEnergyUsed 0039  
                                      ?_process_data 0070                                           _toggleBlue 181C  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                     powerPulseCheck@timerCountHFCheck 00EF  
                         process_data@receive_buffer 0070                    __end_of_process_data_parameterize 09D2  
                               _com_command_setPower 1632                  communications@receive_current_state 003F  
                                      ?_SPISlaveInit 0001                                       __end_of___lmul 15E0  
                                     __end_of___wmul 181C                                        __pidataCOMRAM 18FC  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 1860  
                                     ??_process_data 003A                          ?_command_builder_add_string 0017  
                                start_initialization 147A                         resetCommunications@commState 00BB  
                                   _command_builder1 14DE                                     _command_builder3 1178  
                          _com_command_setEnergyUsed 167C                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 0037                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    ??_powerPulseCheck 002D  
                                        __pdataBANK0 00EB                                             ??_initIO 0013  
                         ??_send_end_of_transmission 0025                           ??_command_builder_add_char 0016  
                                        ?_toggleBlue 0001                                          __pbssCOMRAM 003A  
                                      __pcstackBANK0 0060                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2073 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 1744                        com_command_setEnergyUsed@temp 0060  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 006C                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___aldiv 001F                                             ?___awmod 0013  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 1880                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 006C  
                                           ?_isdigit 0001                                    __size_of_strmatch 0036  
                                  send_data@send_end 0019                                            _initTimer 189E  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009E  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                                      ___aldiv@divisor 0023  
                                    ___aldiv@counter 0027                                         _receive_data 0EC0  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 17A8                                            _send_data 1216  
                             ??_com_command_setPower 0039                    process_data_parameters@parameters 006C  
                                __size_of_toggleBlue 0022                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                           ?_initTimer 0001  
                  powerPulseCheck@mcpLFoutLastEnergy 0041                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 170E                                            copy_data0 148E  
           process_data@end_of_transmission_received 00A6                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___aldiv 00CC                                     __size_of___awmod 0070  
                   __end_of_send_end_of_transmission 18E4                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 158A  
                           __end_of_command_builder1 1534                             __end_of_command_builder3 1216  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                           __ptext10 1036                                             __ptext11 1216  
                                           __ptext20 170E                                             __ptext12 1860  
                                           __ptext21 09D2                                             __ptext13 10DA  
                                           __ptext30 1328                                             __ptext22 18CE  
                                           __ptext14 17D0                                             __ptext31 1534  
                                           __ptext23 14DE                                             __ptext15 1632  
                                           __ptext32 0D00                                             __ptext24 167C  
                                           __ptext16 0EC0                                             __ptext33 1880  
                                           __ptext25 15E0                                             __ptext17 17A8  
                                           __ptext34 158A                                             __ptext26 0C0A  
                                           __ptext18 1776                                             __ptext35 0852  
                                           __ptext27 1414                                             __ptext19 065A  
                                           __ptext36 17F6                                             __ptext28 12A6  
                                           __ptext37 16C6                                             __ptext29 1178  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0AFE                                        __size_of_atol 00F4  
                                      __size_of_main 00B6                                        strmatch@match 0024  
                                      __size_of_init 000A                                        __size_of_ltoa 0052  
                        powerPulseCheck@mcpHFoutLast 0043                                           strmatch@co 00B9  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                        powerPulseCheck@mcpLFoutLast 0042                                             int$flags 004D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 16C6  
                            __size_of_communications 00A4                                             _strmatch 170E  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0072  
                                       ??_toggleBlue 0013                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0032  
                                           intlevel2 0000                                             ltoa@base 0033  
                             process_data@parameters 0074                                         _timerCountHF 0048  
                                       _timerCountLF 003A                                     ___lldiv@dividend 0013  
                      communications@no_more_to_send 00A7                                          ??_send_data 0017  
                                          strmatch@a 001E                                            strmatch@b 0020  
                                         _OSCCONbits 000FD3                                   __end_of_toggleBlue 183E  
                                _resetCommunications 10DA                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 0020                      powerPulseCheck@multiplierHFRate 00F1  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 1776                                    _SPI_transmit_wait 0040  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 00C1  
                   __size_of_process_data_parameters 01F8                                         ___aldiv@sign 0028  
                                  __CFG_T3CMX$PORTC0 000000                              __end_of_powerPulseCheck 0C0A  
                               ?_resetCommunications 006C                    __size_of_send_end_of_transmission 0016  
                     powerPulseCheck@meterWattsHFNew 006C                            ?_send_end_of_transmission 0023  
                     powerPulseCheck@meterWattsLFNew 006D                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0013  
               powerPulseCheck@timerCountHFLastValid 0045  
