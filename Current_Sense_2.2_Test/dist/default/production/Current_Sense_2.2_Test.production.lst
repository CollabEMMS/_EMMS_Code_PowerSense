

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 13 15:34:27 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F25K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  001968                     __pidataCOMRAM:
    92                           	opt stack 0
    93                           
    94                           ;initializer for powerPulseCheck@timerCountHFCheck
    95  001968  0001               	dw	1
    96                           
    97                           ;initializer for powerPulseCheck@firstLFPulse
    98  00196A  01                 	db	1
    99                           
   100                           ;initializer for powerPulseCheck@firstHFPulse
   101  00196B  01                 	db	1
   102                           
   103                           ;initializer for _useLF
   104  00196C  01                 	db	1
   105                           
   106                           	psect	idataBANK0
   107  00195A                     __pidataBANK0:
   108                           	opt stack 0
   109                           
   110                           ;initializer for powerPulseCheck@timerCountHFLast
   111  00195A  FFFF               	dw	65535
   112  00195C  7FFF               	dw	32767
   113                           
   114                           ;initializer for powerPulseCheck@timerCountLFLast
   115  00195E  FFFF               	dw	65535
   116  001960  7FFF               	dw	32767
   117  0000                     _ANSELBbits	set	3897
   118  0000                     _ANSELAbits	set	3896
   119  0000                     _ANSELC	set	3898
   120  0000                     _ANSELB	set	3897
   121  0000                     _ANSELA	set	3896
   122  0000                     _SSP2CON3bits	set	3945
   123  0000                     _SSP2CON3	set	3945
   124  0000                     _SSP2BUF	set	3951
   125  0000                     _SSP2STATbits	set	3949
   126  0000                     _SSP2CON1bits	set	3948
   127  0000                     _T0CONbits	set	4053
   128  0000                     _IPR5	set	3967
   129  0000                     _IPR4	set	3964
   130  0000                     _IPR3	set	4005
   131  0000                     _IPR2	set	4002
   132  0000                     _IPR1	set	3999
   133  0000                     _PIE5	set	3965
   134  0000                     _PIE4	set	3962
   135  0000                     _PIE3	set	4003
   136  0000                     _PIE2	set	4000
   137  0000                     _PIE1	set	3997
   138  0000                     _PIR5	set	3966
   139  0000                     _PIR4	set	3963
   140  0000                     _PIR3	set	4004
   141  0000                     _PIR2	set	4001
   142  0000                     _PIR1	set	3998
   143  0000                     _RCONbits	set	4048
   144  0000                     _INTCON3	set	4080
   145  0000                     _INTCON2	set	4081
   146  0000                     _INTCON	set	4082
   147  0000                     _ADCON0bits	set	4034
   148  0000                     _OSCTUNEbits	set	3995
   149  0000                     _OSCCON2bits	set	4050
   150  0000                     _OSCCONbits	set	4051
   151  0000                     _TMR0L	set	4054
   152  0000                     _TMR0H	set	4055
   153  0000                     _INTCONbits	set	4082
   154  0000                     _PORTCbits	set	3970
   155  0000                     _PORTBbits	set	3969
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TRISAbits	set	3986
   158  0000                     _LATCbits	set	3979
   159  0000                     _LATBbits	set	3978
   160  0000                     _TRISCbits	set	3988
   161  0000                     _TRISBbits	set	3987
   162                           
   163                           	psect	smallconst
   164  000600                     __psmallconst:
   165                           	opt stack 0
   166  000600  00                 	db	0
   167  000601                     STR_3:
   168  000601  43                 	db	67	;'C'
   169  000602  61                 	db	97	;'a'
   170  000603  6C                 	db	108	;'l'
   171  000604  69                 	db	105	;'i'
   172  000605  62                 	db	98	;'b'
   173  000606  72                 	db	114	;'r'
   174  000607  61                 	db	97	;'a'
   175  000608  74                 	db	116	;'t'
   176  000609  69                 	db	105	;'i'
   177  00060A  6F                 	db	111	;'o'
   178  00060B  6E                 	db	110	;'n'
   179  00060C  00                 	db	0
   180  00060D                     STR_22:
   181  00060D  50                 	db	80	;'P'
   182  00060E  53                 	db	83	;'S'
   183  00060F  56                 	db	86	;'V'
   184  000610  65                 	db	101	;'e'
   185  000611  72                 	db	114	;'r'
   186  000612  73                 	db	115	;'s'
   187  000613  69                 	db	105	;'i'
   188  000614  6F                 	db	111	;'o'
   189  000615  6E                 	db	110	;'n'
   190  000616  00                 	db	0
   191  000617                     STR_4:
   192  000617  45                 	db	69	;'E'
   193  000618  6E                 	db	110	;'n'
   194  000619  55                 	db	85	;'U'
   195  00061A  73                 	db	115	;'s'
   196  00061B  65                 	db	101	;'e'
   197  00061C  64                 	db	100	;'d'
   198  00061D  00                 	db	0
   199  00061E                     STR_20:
   200  00061E  56                 	db	86	;'V'
   201  00061F  6F                 	db	111	;'o'
   202  000620  6C                 	db	108	;'l'
   203  000621  74                 	db	116	;'t'
   204  000622  73                 	db	115	;'s'
   205  000623  00                 	db	0
   206  000624                     STR_18:
   207  000624  57                 	db	87	;'W'
   208  000625  61                 	db	97	;'a'
   209  000626  74                 	db	116	;'t'
   210  000627  74                 	db	116	;'t'
   211  000628  73                 	db	115	;'s'
   212  000629  00                 	db	0
   213  00062A                     STR_7:
   214  00062A  4C                 	db	76	;'L'
   215  00062B  45                 	db	69	;'E'
   216  00062C  44                 	db	68	;'D'
   217  00062D  42                 	db	66	;'B'
   218  00062E  00                 	db	0
   219  00062F                     STR_6:
   220  00062F  44                 	db	68	;'D'
   221  000630  61                 	db	97	;'a'
   222  000631  74                 	db	116	;'t'
   223  000632  61                 	db	97	;'a'
   224  000633  00                 	db	0
   225  000634                     STR_5:
   226  000634  52                 	db	82	;'R'
   227  000635  65                 	db	101	;'e'
   228  000636  61                 	db	97	;'a'
   229  000637  64                 	db	100	;'d'
   230  000638  00                 	db	0
   231  000639                     STR_16:
   232  000639  43                 	db	67	;'C'
   233  00063A  6F                 	db	111	;'o'
   234  00063B  6E                 	db	110	;'n'
   235  00063C  66                 	db	102	;'f'
   236  00063D  00                 	db	0
   237  00063E                     STR_21:
   238  00063E  41                 	db	65	;'A'
   239  00063F  6D                 	db	109	;'m'
   240  000640  70                 	db	112	;'p'
   241  000641  73                 	db	115	;'s'
   242  000642  00                 	db	0
   243  000643  32                 	db	50	;'2'
   244  000644  32                 	db	50	;'2'
   245  000645  32                 	db	50	;'2'
   246  000646  00                 	db	0
   247  000647  33                 	db	51	;'3'
   248  000648  33                 	db	51	;'3'
   249  000649  33                 	db	51	;'3'
   250  00064A  00                 	db	0
   251  00064B                     STR_40:
   252  00064B  34                 	db	52	;'4'
   253  00064C  34                 	db	52	;'4'
   254  00064D  34                 	db	52	;'4'
   255  00064E  00                 	db	0
   256  00064F                     STR_1:
   257  00064F  45                 	db	69	;'E'
   258  000650  4E                 	db	78	;'N'
   259  000651  44                 	db	68	;'D'
   260  000652  00                 	db	0
   261  000653                     STR_11:
   262  000653  4F                 	db	79	;'O'
   263  000654  66                 	db	102	;'f'
   264  000655  66                 	db	102	;'f'
   265  000656  00                 	db	0
   266  000657                     STR_2:
   267  000657  53                 	db	83	;'S'
   268  000658  65                 	db	101	;'e'
   269  000659  74                 	db	116	;'t'
   270  00065A  00                 	db	0
   271  00065B                     STR_8:
   272  00065B  4F                 	db	79	;'O'
   273  00065C  6E                 	db	110	;'n'
   274  00065D  00                 	db	0
   275  0000                     
   276                           ; #config settings
   277  00065E  00                 	db	0	; dummy byte at the end
   278  0000                     
   279                           	psect	cinit
   280  0014D0                     __pcinit:
   281                           	opt stack 0
   282  0014D0                     start_initialization:
   283                           	opt stack 0
   284  0014D0                     __initialization:
   285                           	opt stack 0
   286                           
   287                           ; Initialize objects allocated to BANK0 (8 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289  0014D0  0E5A               	movlw	low __pidataBANK0
   290  0014D2  6EF6               	movwf	tblptrl,c
   291  0014D4  0E19               	movlw	high __pidataBANK0
   292  0014D6  6EF7               	movwf	tblptrh,c
   293  0014D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294  0014DA  6EF8               	movwf	tblptru,c
   295  0014DC  EE00  F0E4         	lfsr	0,__pdataBANK0
   296  0014E0  EE10 F008          	lfsr	1,8
   297  0014E4                     copy_data0:
   298  0014E4  0009               	tblrd		*+
   299  0014E6  CFF5 FFEE          	movff	tablat,postinc0
   300  0014EA  50E5               	movf	postdec1,w,c
   301  0014EC  50E1               	movf	fsr1l,w,c
   302  0014EE  E1FA               	bnz	copy_data0
   303                           
   304                           ; Initialize objects allocated to COMRAM (5 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306  0014F0  0E68               	movlw	low __pidataCOMRAM
   307  0014F2  6EF6               	movwf	tblptrl,c
   308  0014F4  0E19               	movlw	high __pidataCOMRAM
   309  0014F6  6EF7               	movwf	tblptrh,c
   310  0014F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311  0014FA  6EF8               	movwf	tblptru,c
   312  0014FC  EE00  F048         	lfsr	0,__pdataCOMRAM
   313  001500  EE10 F005          	lfsr	1,5
   314  001504                     copy_data1:
   315  001504  0009               	tblrd		*+
   316  001506  CFF5 FFEE          	movff	tablat,postinc0
   317  00150A  50E5               	movf	postdec1,w,c
   318  00150C  50E1               	movf	fsr1l,w,c
   319  00150E  E1FA               	bnz	copy_data1
   320                           
   321                           ; Clear objects allocated to BANK1 (42 bytes)
   322  001510  EE01  F000         	lfsr	0,__pbssBANK1
   323  001514  0E2A               	movlw	42
   324  001516                     clear_0:
   325  001516  6AEE               	clrf	postinc0,c
   326  001518  06E8               	decf	wreg,f,c
   327  00151A  E1FD               	bnz	clear_0
   328                           
   329                           ; Clear objects allocated to BANK0 (64 bytes)
   330  00151C  EE00  F0A4         	lfsr	0,__pbssBANK0
   331  001520  0E40               	movlw	64
   332  001522                     clear_1:
   333  001522  6AEE               	clrf	postinc0,c
   334  001524  06E8               	decf	wreg,f,c
   335  001526  E1FD               	bnz	clear_1
   336                           
   337                           ; Clear objects allocated to COMRAM (18 bytes)
   338  001528  EE00  F036         	lfsr	0,__pbssCOMRAM
   339  00152C  0E12               	movlw	18
   340  00152E                     clear_2:
   341  00152E  6AEE               	clrf	postinc0,c
   342  001530  06E8               	decf	wreg,f,c
   343  001532  E1FD               	bnz	clear_2
   344  001534                     end_of_initialization:
   345                           	opt stack 0
   346  001534                     __end_of__initialization:
   347                           	opt stack 0
   348  001534  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   349  001536  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   350  001538  0E00               	movlw	low (__Lmediumconst shr (0+16))
   351  00153A  6EF8               	movwf	tblptru,c
   352  00153C  0100               	movlb	0
   353  00153E  EF5C  F008         	goto	_main	;jump to C main() function
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssCOMRAM
   364  000036                     __pbssCOMRAM:
   365                           	opt stack 0
   366  000036                     _timerCountLF:
   367                           	opt stack 0
   368  000036                     	ds	4
   369  00003A                     receive_data@my_status:
   370                           	opt stack 0
   371  00003A                     	ds	1
   372  00003B                     communications@last_state_active:
   373                           	opt stack 0
   374  00003B                     	ds	1
   375  00003C                     communications@receive_current_state:
   376                           	opt stack 0
   377  00003C                     	ds	1
   378  00003D                     communications@end_of_transmission_received:
   379                           	opt stack 0
   380  00003D                     	ds	1
   381  00003E                     _SPI_transmit_wait:
   382                           	opt stack 0
   383  00003E                     	ds	1
   384  00003F                     powerPulseCheck@mcpLFoutLast:
   385                           	opt stack 0
   386  00003F                     	ds	1
   387  000040                     powerPulseCheck@mcpHFoutLast:
   388                           	opt stack 0
   389  000040                     	ds	1
   390  000041                     toggleLEDs@runonceHF:
   391                           	opt stack 0
   392  000041                     	ds	1
   393  000042                     toggleLEDs@runonceLF:
   394                           	opt stack 0
   395  000042                     	ds	1
   396  000043                     _isLow:
   397                           	opt stack 0
   398  000043                     	ds	1
   399  000044                     _timerCountHF:
   400                           	opt stack 0
   401  000044                     	ds	4
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	dataCOMRAM
   412  000048                     __pdataCOMRAM:
   413                           	opt stack 0
   414  000048                     powerPulseCheck@timerCountHFCheck:
   415                           	opt stack 0
   416  000048                     	ds	2
   417  00004A                     powerPulseCheck@firstLFPulse:
   418                           	opt stack 0
   419  00004A                     	ds	1
   420  00004B                     powerPulseCheck@firstHFPulse:
   421                           	opt stack 0
   422  00004B                     	ds	1
   423  00004C                     _useLF:
   424                           	opt stack 0
   425  00004C                     	ds	1
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	bssBANK0
   436  0000A4                     __pbssBANK0:
   437                           	opt stack 0
   438  0000A4                     powerPulseCheck@meterWattsLF:
   439                           	opt stack 0
   440  0000A4                     	ds	4
   441  0000A8                     powerPulseCheck@meterWattsHF:
   442                           	opt stack 0
   443  0000A8                     	ds	4
   444  0000AC                     powerPulseCheck@meterEnergyUsedPart:
   445                           	opt stack 0
   446  0000AC                     	ds	4
   447  0000B0                     _meterEnergyUsed:
   448                           	opt stack 0
   449  0000B0                     	ds	4
   450  0000B4                     _meterWatts:
   451                           	opt stack 0
   452  0000B4                     	ds	4
   453  0000B8                     resetCommunications@commState:
   454                           	opt stack 0
   455  0000B8                     	ds	2
   456  0000BA                     communications@send_buffer:
   457                           	opt stack 0
   458  0000BA                     	ds	42
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468                           	psect	dataBANK0
   469  0000E4                     __pdataBANK0:
   470                           	opt stack 0
   471  0000E4                     powerPulseCheck@timerCountHFLast:
   472                           	opt stack 0
   473  0000E4                     	ds	4
   474  0000E8                     powerPulseCheck@timerCountLFLast:
   475                           	opt stack 0
   476  0000E8                     	ds	4
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	bssBANK1
   487  000100                     __pbssBANK1:
   488                           	opt stack 0
   489  000100                     communications@receive_buffer:
   490                           	opt stack 0
   491  000100                     	ds	42
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	cstackBANK0
   502  000060                     __pcstackBANK0:
   503                           	opt stack 0
   504  000060                     com_command_setPower@temp:
   505                           	opt stack 0
   506  000060                     com_command_setEnergyUsed@temp:
   507                           	opt stack 0
   508                           
   509                           ; 12 bytes @ 0x0
   510  000060                     	ds	12
   511  00006C                     process_data@receive_buffer:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xC
   515  00006C                     	ds	2
   516  00006E                     process_data@send_buffer:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520  00006E                     	ds	2
   521  000070                     process_data@parameters:
   522                           	opt stack 0
   523                           
   524                           ; 50 bytes @ 0x10
   525  000070                     	ds	50
   526  0000A2                     process_data@end_of_transmission_received:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x42
   530  0000A2                     	ds	1
   531  0000A3                     main@isLow:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x43
   535  0000A3                     	ds	1
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           postinc0	equ	0xFEE
   541                           wreg	equ	0xFE8
   542                           postdec1	equ	0xFE5
   543                           fsr1l	equ	0xFE1
   544                           
   545                           	psect	cstackCOMRAM
   546  000001                     __pcstackCOMRAM:
   547                           	opt stack 0
   548  000001                     ??_Timer0_ISR:
   549                           
   550                           ; 1 bytes @ 0x0
   551  000001                     	ds	18
   552  000013                     ??_isdigit:
   553  000013                     ?_strcmp2:
   554                           	opt stack 0
   555  000013                     ?___wmul:
   556                           	opt stack 0
   557  000013                     ?___lmul:
   558                           	opt stack 0
   559  000013                     ?___lldiv:
   560                           	opt stack 0
   561  000013                     ?___llmod:
   562                           	opt stack 0
   563  000013                     SPI_send_data@data:
   564                           	opt stack 0
   565  000013                     delayMS10@count:
   566                           	opt stack 0
   567  000013                     command_builder_add_char@send_buffer:
   568                           	opt stack 0
   569  000013                     strcmp2@a:
   570                           	opt stack 0
   571  000013                     SPI_receive_data@data:
   572                           	opt stack 0
   573  000013                     ___wmul@multiplier:
   574                           	opt stack 0
   575  000013                     ___lmul@multiplier:
   576                           	opt stack 0
   577  000013                     ___lldiv@dividend:
   578                           	opt stack 0
   579  000013                     ___llmod@dividend:
   580                           	opt stack 0
   581                           
   582                           ; 4 bytes @ 0x12
   583  000013                     	ds	1
   584  000014                     SPI_send_data@sendGood:
   585                           	opt stack 0
   586  000014                     _isdigit$2231:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x13
   590  000014                     	ds	1
   591  000015                     ??_delayMS10:
   592  000015                     command_builder_add_char@data:
   593                           	opt stack 0
   594  000015                     SPI_receive_data@recvGood:
   595                           	opt stack 0
   596  000015                     isdigit@c:
   597                           	opt stack 0
   598  000015                     send_data@send_buffer:
   599                           	opt stack 0
   600  000015                     strcmp2@b:
   601                           	opt stack 0
   602  000015                     ___wmul@multiplicand:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x14
   606  000015                     	ds	1
   607  000016                     ??_command_builder_add_char:
   608  000016                     delayMS10@inx:
   609                           	opt stack 0
   610  000016                     receive_data@receive_buffer:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x15
   614  000016                     	ds	1
   615  000017                     ??_send_data:
   616  000017                     ??_strcmp2:
   617  000017                     command_builder_add_string@send_buffer:
   618                           	opt stack 0
   619  000017                     ___wmul@product:
   620                           	opt stack 0
   621  000017                     ___lmul@multiplicand:
   622                           	opt stack 0
   623  000017                     ___lldiv@divisor:
   624                           	opt stack 0
   625  000017                     ___llmod@divisor:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0x16
   629  000017                     	ds	1
   630  000018                     ??_receive_data:
   631                           
   632                           ; 1 bytes @ 0x17
   633  000018                     	ds	1
   634  000019                     receive_data@data:
   635                           	opt stack 0
   636  000019                     send_data@send_end:
   637                           	opt stack 0
   638  000019                     process_data_parameterize@parameters:
   639                           	opt stack 0
   640  000019                     command_builder_add_string@data_string:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x18
   644  000019                     	ds	1
   645  00001A                     strcmp2@match:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x19
   649  00001A                     	ds	1
   650  00001B                     ??_command_builder_add_string:
   651  00001B                     ___llmod@counter:
   652                           	opt stack 0
   653  00001B                     process_data_parameterize@buffer_to_parameterize:
   654                           	opt stack 0
   655  00001B                     ___lmul@product:
   656                           	opt stack 0
   657  00001B                     ___lldiv@quotient:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x1A
   661  00001B                     	ds	1
   662  00001C                     strcmp2@inx:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x1B
   666  00001C                     	ds	1
   667  00001D                     ??_process_data_parameterize:
   668  00001D                     command_builder_add_string@inx:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x1C
   672  00001D                     	ds	1
   673  00001E                     strmatch@a:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x1D
   677  00001E                     	ds	1
   678  00001F                     ?_atol:
   679                           	opt stack 0
   680  00001F                     ___lldiv@counter:
   681                           	opt stack 0
   682  00001F                     command_builder1@send_buffer:
   683                           	opt stack 0
   684  00001F                     command_builder3@send_buffer:
   685                           	opt stack 0
   686  00001F                     atol@s:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x1E
   690  00001F                     	ds	1
   691  000020                     process_data_parameterize@inx:
   692                           	opt stack 0
   693  000020                     strmatch@b:
   694                           	opt stack 0
   695  000020                     ultoa@buf:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x1F
   699  000020                     	ds	1
   700  000021                     command_builder1@data1:
   701                           	opt stack 0
   702  000021                     command_builder3@data1:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x20
   706  000021                     	ds	1
   707  000022                     process_data_parameterize@parameter_index:
   708                           	opt stack 0
   709  000022                     strmatch@result:
   710                           	opt stack 0
   711  000022                     ultoa@val:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x21
   715  000022                     	ds	1
   716  000023                     ??_atol:
   717  000023                     process_data_parameterize@parameter_position:
   718                           	opt stack 0
   719  000023                     command_builder3@data2:
   720                           	opt stack 0
   721  000023                     send_end_of_transmission@send_buffer:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x22
   725  000023                     	ds	1
   726  000024                     strmatch@match:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x23
   730  000024                     	ds	1
   731  000025                     command_builder3@data3:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x24
   735  000025                     	ds	1
   736  000026                     ultoa@base:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x25
   740  000026                     	ds	1
   741  000027                     atol@sign:
   742                           	opt stack 0
   743  000027                     com_command_setVersion@send_buffer:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x26
   747  000027                     	ds	1
   748  000028                     atol@a:
   749                           	opt stack 0
   750  000028                     ultoa@v:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x27
   754  000028                     	ds	1
   755  000029                     
   756                           ; 1 bytes @ 0x28
   757  000029                     	ds	3
   758  00002C                     atol@c:
   759                           	opt stack 0
   760  00002C                     ultoa@c:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x2B
   764  00002C                     	ds	1
   765  00002D                     com_command_setPower@send_buffer:
   766                           	opt stack 0
   767  00002D                     com_command_setEnergyUsed@send_buffer:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x2C
   771  00002D                     	ds	2
   772  00002F                     resetCommunications@send_buffer:
   773                           	opt stack 0
   774  00002F                     process_data_parameters@parameters:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x2E
   778  00002F                     	ds	2
   779  000031                     ??_resetCommunications:
   780  000031                     process_data_parameters@send_buffer:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x30
   784  000031                     	ds	2
   785  000033                     process_data_parameters@end_of_transmission_received:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x32
   789  000033                     	ds	1
   790  000034                     communications@no_more_to_send:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x33
   794  000034                     	ds	1
   795  000035                     communications@firstTime:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x34
   799  000035                     	ds	1
   800  000036                     tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           
   809                           ; 1 bytes @ 0x35
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 94 in file "Current_Sense_Main.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  isLow           1   67[BANK0 ] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   829 ;;      Params:         0       0       0       0       0       0       0
   830 ;;      Locals:         0       1       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0
   832 ;;      Totals:         0       1       0       0       0       0       0
   833 ;;Total ram usage:        1 bytes
   834 ;; Hardware stack levels required when called:    8
   835 ;; This function calls:
   836 ;;		_communications
   837 ;;		_delayMS10
   838 ;;		_init
   839 ;;		_initTimer
   840 ;;		_powerPulseCheck
   841 ;;		_toggleLEDs
   842 ;; This function is called by:
   843 ;;		Startup code after reset
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text0
   848  0010B8                     __ptext0:
   849                           	opt stack 0
   850  0010B8                     _main:
   851                           	opt stack 23
   852                           
   853                           ;Current_Sense_Main.c: 96: init();
   854                           
   855                           ;incstack = 0
   856  0010B8  ECB1  F00C         	call	_init	;wreg free
   857                           
   858                           ;Current_Sense_Main.c: 99: TRISBbits.TRISB4 = 0;
   859  0010BC  9893               	bcf	3987,4,c	;volatile
   860                           
   861                           ;Current_Sense_Main.c: 100: TRISCbits.TRISC0 = 0;
   862  0010BE  9094               	bcf	3988,0,c	;volatile
   863                           
   864                           ;Current_Sense_Main.c: 101: TRISCbits.TRISC1 = 0;
   865  0010C0  9294               	bcf	3988,1,c	;volatile
   866                           
   867                           ;Current_Sense_Main.c: 105: LATBbits.LATB4 = 1;
   868  0010C2  888A               	bsf	3978,4,c	;volatile
   869                           
   870                           ;Current_Sense_Main.c: 106: LATCbits.LATC1 = 1;
   871  0010C4  828B               	bsf	3979,1,c	;volatile
   872                           
   873                           ;Current_Sense_Main.c: 107: LATCbits.LATC0 = 1;
   874  0010C6  808B               	bsf	3979,0,c	;volatile
   875                           
   876                           ;Current_Sense_Main.c: 109: delayMS10(10);
   877  0010C8  0E00               	movlw	0
   878  0010CA  6E14               	movwf	delayMS10@count+1,c
   879  0010CC  0E0A               	movlw	10
   880  0010CE  6E13               	movwf	delayMS10@count,c
   881  0010D0  ECE8  F00B         	call	_delayMS10	;wreg free
   882                           
   883                           ;Current_Sense_Main.c: 111: LATBbits.LATB4 = 0;
   884  0010D4  988A               	bcf	3978,4,c	;volatile
   885                           
   886                           ;Current_Sense_Main.c: 112: LATCbits.LATC1 = 0;
   887  0010D6  928B               	bcf	3979,1,c	;volatile
   888                           
   889                           ;Current_Sense_Main.c: 113: LATCbits.LATC0 = 0;
   890  0010D8  908B               	bcf	3979,0,c	;volatile
   891                           
   892                           ;Current_Sense_Main.c: 115: delayMS10(10);
   893  0010DA  0E00               	movlw	0
   894  0010DC  6E14               	movwf	delayMS10@count+1,c
   895  0010DE  0E0A               	movlw	10
   896  0010E0  6E13               	movwf	delayMS10@count,c
   897  0010E2  ECE8  F00B         	call	_delayMS10	;wreg free
   898                           
   899                           ;Current_Sense_Main.c: 117: LATBbits.LATB4 = 1;
   900  0010E6  888A               	bsf	3978,4,c	;volatile
   901                           
   902                           ;Current_Sense_Main.c: 118: LATCbits.LATC1 = 0;
   903  0010E8  928B               	bcf	3979,1,c	;volatile
   904                           
   905                           ;Current_Sense_Main.c: 119: LATCbits.LATC0 = 0;
   906  0010EA  908B               	bcf	3979,0,c	;volatile
   907                           
   908                           ;Current_Sense_Main.c: 121: delayMS10(10);
   909  0010EC  0E00               	movlw	0
   910  0010EE  6E14               	movwf	delayMS10@count+1,c
   911  0010F0  0E0A               	movlw	10
   912  0010F2  6E13               	movwf	delayMS10@count,c
   913  0010F4  ECE8  F00B         	call	_delayMS10	;wreg free
   914                           
   915                           ;Current_Sense_Main.c: 123: LATBbits.LATB4 = 0;
   916  0010F8  988A               	bcf	3978,4,c	;volatile
   917                           
   918                           ;Current_Sense_Main.c: 124: LATCbits.LATC1 = 1;
   919  0010FA  828B               	bsf	3979,1,c	;volatile
   920                           
   921                           ;Current_Sense_Main.c: 125: LATCbits.LATC0 = 0;
   922  0010FC  908B               	bcf	3979,0,c	;volatile
   923                           
   924                           ;Current_Sense_Main.c: 127: delayMS10(10);
   925  0010FE  0E00               	movlw	0
   926  001100  6E14               	movwf	delayMS10@count+1,c
   927  001102  0E0A               	movlw	10
   928  001104  6E13               	movwf	delayMS10@count,c
   929  001106  ECE8  F00B         	call	_delayMS10	;wreg free
   930                           
   931                           ;Current_Sense_Main.c: 129: LATBbits.LATB4 = 0;
   932  00110A  988A               	bcf	3978,4,c	;volatile
   933                           
   934                           ;Current_Sense_Main.c: 130: LATCbits.LATC1 = 0;
   935  00110C  928B               	bcf	3979,1,c	;volatile
   936                           
   937                           ;Current_Sense_Main.c: 131: LATCbits.LATC0 = 1;
   938  00110E  808B               	bsf	3979,0,c	;volatile
   939                           
   940                           ;Current_Sense_Main.c: 133: delayMS10(5);
   941  001110  0E00               	movlw	0
   942  001112  6E14               	movwf	delayMS10@count+1,c
   943  001114  0E05               	movlw	5
   944  001116  6E13               	movwf	delayMS10@count,c
   945  001118  ECE8  F00B         	call	_delayMS10	;wreg free
   946                           
   947                           ;Current_Sense_Main.c: 138: TRISCbits.TRISC7 = 0;
   948  00111C  9E94               	bcf	3988,7,c	;volatile
   949                           
   950                           ;Current_Sense_Main.c: 139: TRISCbits.TRISC4 = 0;
   951  00111E  9894               	bcf	3988,4,c	;volatile
   952                           
   953                           ;Current_Sense_Main.c: 140: TRISCbits.TRISC3 = 0;
   954  001120  9694               	bcf	3988,3,c	;volatile
   955                           
   956                           ;Current_Sense_Main.c: 141: TRISCbits.TRISC6 = 0;
   957  001122  9C94               	bcf	3988,6,c	;volatile
   958                           
   959                           ;Current_Sense_Main.c: 142: ANSELA = 0b00000000;
   960  001124  0E00               	movlw	0
   961  001126  010F               	movlb	15	; () banked
   962  001128  6F38               	movwf	56,b	;volatile
   963                           
   964                           ; BSR set to: 15
   965                           ;Current_Sense_Main.c: 143: ANSELB = 0b00000000;
   966  00112A  0E00               	movlw	0
   967  00112C  6F39               	movwf	57,b	;volatile
   968                           
   969                           ; BSR set to: 15
   970                           ;Current_Sense_Main.c: 144: ANSELC = 0b00000000;
   971  00112E  0E00               	movlw	0
   972  001130  6F3A               	movwf	58,b	;volatile
   973                           
   974                           ; BSR set to: 15
   975                           ;Current_Sense_Main.c: 150: LATCbits.LATC6 = 1;
   976  001132  8C8B               	bsf	3979,6,c	;volatile
   977                           
   978                           ; BSR set to: 15
   979                           ;Current_Sense_Main.c: 151: LATCbits.LATC7 = 1;
   980  001134  8E8B               	bsf	3979,7,c	;volatile
   981                           
   982                           ; BSR set to: 15
   983                           ;Current_Sense_Main.c: 152: LATCbits.LATC4 = 1;
   984  001136  888B               	bsf	3979,4,c	;volatile
   985                           
   986                           ; BSR set to: 15
   987                           ;Current_Sense_Main.c: 153: LATCbits.LATC3 = 0;
   988  001138  968B               	bcf	3979,3,c	;volatile
   989                           
   990                           ; BSR set to: 15
   991                           ;Current_Sense_Main.c: 156: delayMS10(5);
   992  00113A  0E00               	movlw	0
   993  00113C  6E14               	movwf	delayMS10@count+1,c
   994  00113E  0E05               	movlw	5
   995  001140  6E13               	movwf	delayMS10@count,c
   996  001142  ECE8  F00B         	call	_delayMS10	;wreg free
   997                           
   998                           ;Current_Sense_Main.c: 159: TRISAbits.TRISA2 = 1;
   999  001146  8492               	bsf	3986,2,c	;volatile
  1000                           
  1001                           ;Current_Sense_Main.c: 161: LATBbits.LATB4 = 0;
  1002  001148  988A               	bcf	3978,4,c	;volatile
  1003                           
  1004                           ;Current_Sense_Main.c: 162: LATCbits.LATC1 = 0;
  1005  00114A  928B               	bcf	3979,1,c	;volatile
  1006                           
  1007                           ;Current_Sense_Main.c: 163: LATCbits.LATC0 = 0;
  1008  00114C  908B               	bcf	3979,0,c	;volatile
  1009                           
  1010                           ;Current_Sense_Main.c: 165: bool isLow = 0;
  1011  00114E  0E00               	movlw	0
  1012  001150  0100               	movlb	0	; () banked
  1013  001152  6FA3               	movwf	main@isLow& (0+255),b
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;Current_Sense_Main.c: 166: communications(1);
  1017  001154  0E01               	movlw	1
  1018  001156  EC54  F009         	call	_communications
  1019  00115A                     
  1020                           ;Current_Sense_Main.c: 171: {
  1021                           ;Current_Sense_Main.c: 183: toggleLEDs();
  1022  00115A  EC55  F00B         	call	_toggleLEDs	;wreg free
  1023                           
  1024                           ;Current_Sense_Main.c: 220: initTimer();
  1025  00115E  EC8A  F00C         	call	_initTimer	;wreg free
  1026                           
  1027                           ;Current_Sense_Main.c: 263: communications(0);
  1028  001162  0E00               	movlw	0
  1029  001164  EC54  F009         	call	_communications
  1030                           
  1031                           ;Current_Sense_Main.c: 277: powerPulseCheck();
  1032  001168  EC83  F004         	call	_powerPulseCheck	;wreg free
  1033  00116C  D7F6               	goto	l109
  1034  00116E                     __end_of_main:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           
  1045 ;; *************** function _toggleLEDs *****************
  1046 ;; Defined at:
  1047 ;;		line 404 in file "Current_Sense_Main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1061 ;;      Params:         0       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text1
  1076  0016AA                     __ptext1:
  1077                           	opt stack 0
  1078  0016AA                     _toggleLEDs:
  1079                           	opt stack 29
  1080                           
  1081                           ;Current_Sense_Main.c: 406: static bool runonceLF = 0;
  1082                           ;Current_Sense_Main.c: 407: static bool runonceHF = 0;
  1083                           ;Current_Sense_Main.c: 410: if (PORTAbits.RA2 == 0) {
  1084                           
  1085                           ;incstack = 0
  1086  0016AA  B480               	btfsc	3968,2,c	;volatile
  1087  0016AC  D00B               	goto	l129
  1088                           
  1089                           ;Current_Sense_Main.c: 411: if (runonceLF == 0) {
  1090  0016AE  5042               	movf	toggleLEDs@runonceLF,w,c
  1091  0016B0  A4D8               	btfss	status,2,c
  1092  0016B2  D00A               	goto	l133
  1093                           
  1094                           ;Current_Sense_Main.c: 412: runonceLF = 1;
  1095  0016B4  0E01               	movlw	1
  1096  0016B6  6E42               	movwf	toggleLEDs@runonceLF,c
  1097                           
  1098                           ;Current_Sense_Main.c: 413: if (PORTBbits.RB4 == 1) {
  1099  0016B8  A881               	btfss	3969,4,c	;volatile
  1100  0016BA  D002               	goto	l131
  1101                           
  1102                           ;Current_Sense_Main.c: 414: LATBbits.LATB4 = 0;
  1103  0016BC  988A               	bcf	3978,4,c	;volatile
  1104                           
  1105                           ;Current_Sense_Main.c: 415: } else
  1106  0016BE  D004               	goto	l133
  1107  0016C0                     l131:
  1108                           
  1109                           ;Current_Sense_Main.c: 416: {
  1110                           ;Current_Sense_Main.c: 417: LATBbits.LATB4 = 1;
  1111  0016C0  888A               	bsf	3978,4,c	;volatile
  1112                           
  1113                           ;Current_Sense_Main.c: 418: }
  1114                           ;Current_Sense_Main.c: 419: }
  1115                           ;Current_Sense_Main.c: 420: } else {
  1116  0016C2  D002               	goto	l133
  1117  0016C4                     l129:
  1118                           
  1119                           ;Current_Sense_Main.c: 421: runonceLF = 0;
  1120  0016C4  0E00               	movlw	0
  1121  0016C6  6E42               	movwf	toggleLEDs@runonceLF,c
  1122  0016C8                     l133:
  1123                           
  1124                           ;Current_Sense_Main.c: 422: }
  1125                           ;Current_Sense_Main.c: 425: if (PORTAbits.RA3 == 0) {
  1126  0016C8  B680               	btfsc	3968,3,c	;volatile
  1127  0016CA  D00B               	goto	l134
  1128                           
  1129                           ;Current_Sense_Main.c: 426: if (runonceHF == 0) {
  1130  0016CC  5041               	movf	toggleLEDs@runonceHF,w,c
  1131  0016CE  A4D8               	btfss	status,2,c
  1132  0016D0  D00A               	goto	l138
  1133                           
  1134                           ;Current_Sense_Main.c: 427: runonceHF = 1;
  1135  0016D2  0E01               	movlw	1
  1136  0016D4  6E41               	movwf	toggleLEDs@runonceHF,c
  1137                           
  1138                           ;Current_Sense_Main.c: 428: if (PORTCbits.RC0 == 1) {
  1139  0016D6  A082               	btfss	3970,0,c	;volatile
  1140  0016D8  D002               	goto	l136
  1141                           
  1142                           ;Current_Sense_Main.c: 429: LATCbits.LATC0 = 0;
  1143  0016DA  908B               	bcf	3979,0,c	;volatile
  1144                           
  1145                           ;Current_Sense_Main.c: 430: } else {
  1146  0016DC  D004               	goto	l138
  1147  0016DE                     l136:
  1148                           
  1149                           ;Current_Sense_Main.c: 431: LATCbits.LATC0 = 1;
  1150  0016DE  808B               	bsf	3979,0,c	;volatile
  1151                           
  1152                           ;Current_Sense_Main.c: 432: }
  1153                           ;Current_Sense_Main.c: 433: }
  1154                           ;Current_Sense_Main.c: 434: } else {
  1155  0016E0  D002               	goto	l138
  1156  0016E2                     l134:
  1157                           
  1158                           ;Current_Sense_Main.c: 435: runonceHF = 0;
  1159  0016E2  0E00               	movlw	0
  1160  0016E4  6E41               	movwf	toggleLEDs@runonceHF,c
  1161  0016E6                     l138:
  1162                           
  1163                           ;Current_Sense_Main.c: 436: }
  1164                           ;Current_Sense_Main.c: 439: if (useLF) {
  1165  0016E6  504C               	movf	_useLF,w,c	;volatile
  1166  0016E8  B4D8               	btfsc	status,2,c
  1167  0016EA  D002               	goto	l139
  1168                           
  1169                           ;Current_Sense_Main.c: 440: LATCbits.LATC1 = 0;
  1170  0016EC  928B               	bcf	3979,1,c	;volatile
  1171                           
  1172                           ;Current_Sense_Main.c: 441: } else {
  1173  0016EE  0012               	return	
  1174  0016F0                     l139:
  1175                           
  1176                           ;Current_Sense_Main.c: 442: LATCbits.LATC1 = 1;
  1177  0016F0  828B               	bsf	3979,1,c	;volatile
  1178  0016F2  0012               	return	
  1179  0016F4                     __end_of_toggleLEDs:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           postinc0	equ	0xFEE
  1186                           wreg	equ	0xFE8
  1187                           postdec1	equ	0xFE5
  1188                           fsr1l	equ	0xFE1
  1189                           status	equ	0xFD8
  1190                           
  1191 ;; *************** function _powerPulseCheck *****************
  1192 ;; Defined at:
  1193 ;;		line 464 in file "Current_Sense_Main.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1207 ;;      Params:         0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		___lldiv
  1216 ;;		___lmul
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text2
  1223  000906                     __ptext2:
  1224                           	opt stack 0
  1225  000906                     _powerPulseCheck:
  1226                           	opt stack 28
  1227                           
  1228                           ;Current_Sense_Main.c: 478: static unsigned long meterEnergyUsedPart = 0;
  1229                           ;Current_Sense_Main.c: 479: static unsigned long meterWattsHF = 0;
  1230                           ;Current_Sense_Main.c: 480: static unsigned long meterWattsLF = 0;
  1231                           ;Current_Sense_Main.c: 481: static unsigned long timerCountLFLast = 2147483647;
  1232                           ;Current_Sense_Main.c: 482: static unsigned long timerCountHFLast = 2147483647;
  1233                           ;Current_Sense_Main.c: 483: static unsigned int timerCountHFCheck = 1;
  1234                           ;Current_Sense_Main.c: 484: static bool firstHFPulse = 1;
  1235                           ;Current_Sense_Main.c: 485: static bool firstLFPulse = 1;
  1236                           
  1237                           ;incstack = 0
  1238  000906  044B               	decf	powerPulseCheck@firstHFPulse,w,c
  1239  000908  A4D8               	btfss	status,2,c
  1240  00090A  D009               	goto	l169
  1241                           
  1242                           ;Current_Sense_Main.c: 492: {
  1243                           ;Current_Sense_Main.c: 493: meterWatts = 0;
  1244  00090C  0E00               	movlw	0
  1245  00090E  0100               	movlb	0	; () banked
  1246  000910  6FB4               	movwf	_meterWatts& (0+255),b
  1247  000912  0E00               	movlw	0
  1248  000914  6FB5               	movwf	(_meterWatts+1)& (0+255),b
  1249  000916  0E00               	movlw	0
  1250  000918  6FB6               	movwf	(_meterWatts+2)& (0+255),b
  1251  00091A  0E00               	movlw	0
  1252  00091C  6FB7               	movwf	(_meterWatts+3)& (0+255),b
  1253  00091E                     l169:
  1254                           
  1255                           ;Current_Sense_Main.c: 494: }
  1256                           ;Current_Sense_Main.c: 497: if (PORTAbits.RA3 == 0) {
  1257                           
  1258                           ; BSR set to: 0
  1259  00091E  B680               	btfsc	3968,3,c	;volatile
  1260  000920  D043               	goto	l170
  1261                           
  1262                           ;Current_Sense_Main.c: 498: if (mcpHFoutLast == 0) {
  1263  000922  5040               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1264  000924  A4D8               	btfss	status,2,c
  1265  000926  D042               	goto	l174
  1266                           
  1267                           ;Current_Sense_Main.c: 499: mcpHFoutLast = 1;
  1268  000928  0E01               	movlw	1
  1269  00092A  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1270                           
  1271                           ;Current_Sense_Main.c: 500: firstHFPulse = 0;
  1272  00092C  0E00               	movlw	0
  1273  00092E  6E4B               	movwf	powerPulseCheck@firstHFPulse,c
  1274                           
  1275                           ;Current_Sense_Main.c: 502: timerCountHFLast = timerCountHF;
  1276  000930  C044  F0E4         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1277  000934  C045  F0E5         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1278  000938  C046  F0E6         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1279  00093C  C047  F0E7         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1280                           
  1281                           ;Current_Sense_Main.c: 503: timerCountHF = 0;
  1282  000940  0E00               	movlw	0
  1283  000942  6E44               	movwf	_timerCountHF,c	;volatile
  1284  000944  0E00               	movlw	0
  1285  000946  6E45               	movwf	_timerCountHF+1,c	;volatile
  1286  000948  0E00               	movlw	0
  1287  00094A  6E46               	movwf	_timerCountHF+2,c	;volatile
  1288  00094C  0E00               	movlw	0
  1289  00094E  6E47               	movwf	_timerCountHF+3,c	;volatile
  1290                           
  1291                           ;Current_Sense_Main.c: 504: meterWattsHF = (((((unsigned long) 2243 * (unsigned long) 36
      +                          00) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned
      +                           long) timerCountHFLast;
  1292  000950  0E6C               	movlw	108
  1293  000952  6E13               	movwf	___lldiv@dividend,c
  1294  000954  0E3B               	movlw	59
  1295  000956  6E14               	movwf	___lldiv@dividend+1,c
  1296  000958  0E01               	movlw	1
  1297  00095A  6E15               	movwf	___lldiv@dividend+2,c
  1298  00095C  0E00               	movlw	0
  1299  00095E  6E16               	movwf	___lldiv@dividend+3,c
  1300  000960  C0E4  F017         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1301  000964  C0E5  F018         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1302  000968  C0E6  F019         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1303  00096C  C0E7  F01A         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1304  000970  ECE9  F009         	call	___lldiv	;wreg free
  1305  000974  C013  F0A8         	movff	?___lldiv,powerPulseCheck@meterWattsHF
  1306  000978  C014  F0A9         	movff	?___lldiv+1,powerPulseCheck@meterWattsHF+1
  1307  00097C  C015  F0AA         	movff	?___lldiv+2,powerPulseCheck@meterWattsHF+2
  1308  000980  C016  F0AB         	movff	?___lldiv+3,powerPulseCheck@meterWattsHF+3
  1309                           
  1310                           ;Current_Sense_Main.c: 507: timerCountHFCheck = 1;
  1311  000984  0E00               	movlw	0
  1312  000986  6E49               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1313  000988  0E01               	movlw	1
  1314  00098A  6E48               	movwf	powerPulseCheck@timerCountHFCheck,c
  1315                           
  1316                           ;Current_Sense_Main.c: 511: if (meterWattsHF > 50) {
  1317  00098C  0100               	movlb	0	; () banked
  1318  00098E  51AB               	movf	(powerPulseCheck@meterWattsHF+3)& (0+255),w,b
  1319  000990  11AA               	iorwf	(powerPulseCheck@meterWattsHF+2)& (0+255),w,b
  1320  000992  11A9               	iorwf	(powerPulseCheck@meterWattsHF+1)& (0+255),w,b
  1321  000994  E104               	bnz	u2750
  1322  000996  0E33               	movlw	51
  1323  000998  5DA8               	subwf	powerPulseCheck@meterWattsHF& (0+255),w,b
  1324  00099A  A0D8               	btfss	status,0,c
  1325  00099C  D002               	goto	l172
  1326  00099E                     u2750:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;Current_Sense_Main.c: 512: useLF = 1;
  1330  00099E  0E01               	movlw	1
  1331  0009A0  D001               	goto	L1
  1332  0009A2                     l172:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;Current_Sense_Main.c: 514: useLF = 0;
  1336                           
  1337                           ; BSR set to: 0
  1338  0009A2  0E00               	movlw	0
  1339  0009A4                     L1:
  1340  0009A4  6E4C               	movwf	_useLF,c	;volatile
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;Current_Sense_Main.c: 515: }
  1344                           ;Current_Sense_Main.c: 516: }
  1345                           ;Current_Sense_Main.c: 517: } else {
  1346                           
  1347                           ; BSR set to: 0
  1348  0009A6  D002               	goto	l174
  1349  0009A8                     l170:
  1350                           
  1351                           ;Current_Sense_Main.c: 518: mcpHFoutLast = 0;
  1352                           
  1353                           ; BSR set to: 0
  1354  0009A8  0E00               	movlw	0
  1355  0009AA  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1356  0009AC                     l174:
  1357                           
  1358                           ;Current_Sense_Main.c: 519: }
  1359                           ;Current_Sense_Main.c: 523: if (PORTAbits.RA2 == 0) {
  1360  0009AC  B480               	btfsc	3968,2,c	;volatile
  1361  0009AE  D054               	goto	l175
  1362                           
  1363                           ;Current_Sense_Main.c: 524: if (mcpLFoutLast == 0) {
  1364  0009B0  503F               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1365  0009B2  A4D8               	btfss	status,2,c
  1366  0009B4  D053               	goto	l180
  1367                           
  1368                           ;Current_Sense_Main.c: 525: mcpLFoutLast = 1;
  1369  0009B6  0E01               	movlw	1
  1370  0009B8  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1371                           
  1372                           ;Current_Sense_Main.c: 526: firstLFPulse = 0;
  1373  0009BA  0E00               	movlw	0
  1374  0009BC  6E4A               	movwf	powerPulseCheck@firstLFPulse,c
  1375                           
  1376                           ;Current_Sense_Main.c: 528: timerCountLFLast = timerCountLF;
  1377  0009BE  C036  F0E8         	movff	_timerCountLF,powerPulseCheck@timerCountLFLast	;volatile
  1378  0009C2  C037  F0E9         	movff	_timerCountLF+1,powerPulseCheck@timerCountLFLast+1	;volatile
  1379  0009C6  C038  F0EA         	movff	_timerCountLF+2,powerPulseCheck@timerCountLFLast+2	;volatile
  1380  0009CA  C039  F0EB         	movff	_timerCountLF+3,powerPulseCheck@timerCountLFLast+3	;volatile
  1381                           
  1382                           ;Current_Sense_Main.c: 529: timerCountLF = 0;
  1383  0009CE  0E00               	movlw	0
  1384  0009D0  6E36               	movwf	_timerCountLF,c	;volatile
  1385  0009D2  0E00               	movlw	0
  1386  0009D4  6E37               	movwf	_timerCountLF+1,c	;volatile
  1387  0009D6  0E00               	movlw	0
  1388  0009D8  6E38               	movwf	_timerCountLF+2,c	;volatile
  1389  0009DA  0E00               	movlw	0
  1390  0009DC  6E39               	movwf	_timerCountLF+3,c	;volatile
  1391                           
  1392                           ;Current_Sense_Main.c: 531: meterWattsLF = ((((2243 * (unsigned long) 16 * (unsigned lon
      +                          g) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (uns
      +                          igned long) timerCountLFLast;
  1393  0009DE  0EC0               	movlw	192
  1394  0009E0  6E13               	movwf	___lldiv@dividend,c
  1395  0009E2  0EB6               	movlw	182
  1396  0009E4  6E14               	movwf	___lldiv@dividend+1,c
  1397  0009E6  0E13               	movlw	19
  1398  0009E8  6E15               	movwf	___lldiv@dividend+2,c
  1399  0009EA  0E00               	movlw	0
  1400  0009EC  6E16               	movwf	___lldiv@dividend+3,c
  1401  0009EE  C0E8  F017         	movff	powerPulseCheck@timerCountLFLast,___lldiv@divisor
  1402  0009F2  C0E9  F018         	movff	powerPulseCheck@timerCountLFLast+1,___lldiv@divisor+1
  1403  0009F6  C0EA  F019         	movff	powerPulseCheck@timerCountLFLast+2,___lldiv@divisor+2
  1404  0009FA  C0EB  F01A         	movff	powerPulseCheck@timerCountLFLast+3,___lldiv@divisor+3
  1405  0009FE  ECE9  F009         	call	___lldiv	;wreg free
  1406  000A02  C013  F0A4         	movff	?___lldiv,powerPulseCheck@meterWattsLF
  1407  000A06  C014  F0A5         	movff	?___lldiv+1,powerPulseCheck@meterWattsLF+1
  1408  000A0A  C015  F0A6         	movff	?___lldiv+2,powerPulseCheck@meterWattsLF+2
  1409  000A0E  C016  F0A7         	movff	?___lldiv+3,powerPulseCheck@meterWattsLF+3
  1410                           
  1411                           ;Current_Sense_Main.c: 534: meterEnergyUsedPart += 2243 * (unsigned long) 16;
  1412  000A12  0E30               	movlw	48
  1413  000A14  0100               	movlb	0	; () banked
  1414  000A16  27AC               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1415  000A18  0E8C               	movlw	140
  1416  000A1A  23AD               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1417  000A1C  0E00               	movlw	0
  1418  000A1E  23AE               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1419  000A20  0E00               	movlw	0
  1420  000A22  23AF               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1421                           
  1422                           ;Current_Sense_Main.c: 535: while (meterEnergyUsedPart > 100000)
  1423  000A24  D00E               	goto	l177
  1424  000A26                     l3285:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;Current_Sense_Main.c: 536: {
  1428                           ;Current_Sense_Main.c: 537: meterEnergyUsed++;
  1429  000A26  0E01               	movlw	1
  1430  000A28  27B0               	addwf	_meterEnergyUsed& (0+255),f,b
  1431  000A2A  0E00               	movlw	0
  1432  000A2C  23B1               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1433  000A2E  23B2               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1434  000A30  23B3               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1435                           
  1436                           ;Current_Sense_Main.c: 538: meterEnergyUsedPart -= 100000;
  1437  000A32  0EA0               	movlw	160
  1438  000A34  5FAC               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1439  000A36  0E86               	movlw	134
  1440  000A38  5BAD               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1441  000A3A  0E01               	movlw	1
  1442  000A3C  5BAE               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1443  000A3E  0E00               	movlw	0
  1444  000A40  5BAF               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1445  000A42                     l177:
  1446                           
  1447                           ; BSR set to: 0
  1448  000A42  51AF               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1449  000A44  E1F0               	bnz	l3285
  1450  000A46  0EA1               	movlw	161
  1451  000A48  5DAC               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1452  000A4A  0E86               	movlw	134
  1453  000A4C  59AD               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1454  000A4E  0E01               	movlw	1
  1455  000A50  59AE               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1456  000A52  A0D8               	btfss	status,0,c
  1457  000A54  D003               	goto	l180
  1458  000A56  D7E7               	goto	l178
  1459  000A58                     l175:
  1460                           
  1461                           ;Current_Sense_Main.c: 542: mcpLFoutLast = 0;
  1462                           
  1463                           ; BSR set to: 0
  1464  000A58  0E00               	movlw	0
  1465  000A5A  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1466  000A5C                     l180:
  1467                           
  1468                           ;Current_Sense_Main.c: 543: }
  1469                           ;Current_Sense_Main.c: 546: if (useLF) {
  1470  000A5C  504C               	movf	_useLF,w,c	;volatile
  1471  000A5E  B4D8               	btfsc	status,2,c
  1472  000A60  D009               	goto	l181
  1473                           
  1474                           ;Current_Sense_Main.c: 547: meterWatts = meterWattsLF;
  1475  000A62  C0A4  F0B4         	movff	powerPulseCheck@meterWattsLF,_meterWatts
  1476  000A66  C0A5  F0B5         	movff	powerPulseCheck@meterWattsLF+1,_meterWatts+1
  1477  000A6A  C0A6  F0B6         	movff	powerPulseCheck@meterWattsLF+2,_meterWatts+2
  1478  000A6E  C0A7  F0B7         	movff	powerPulseCheck@meterWattsLF+3,_meterWatts+3
  1479                           
  1480                           ;Current_Sense_Main.c: 548: } else {
  1481  000A72  D008               	goto	l182
  1482  000A74                     l181:
  1483                           
  1484                           ;Current_Sense_Main.c: 549: meterWatts = meterWattsHF;
  1485  000A74  C0A8  F0B4         	movff	powerPulseCheck@meterWattsHF,_meterWatts
  1486  000A78  C0A9  F0B5         	movff	powerPulseCheck@meterWattsHF+1,_meterWatts+1
  1487  000A7C  C0AA  F0B6         	movff	powerPulseCheck@meterWattsHF+2,_meterWatts+2
  1488  000A80  C0AB  F0B7         	movff	powerPulseCheck@meterWattsHF+3,_meterWatts+3
  1489  000A84                     l182:
  1490                           
  1491                           ;Current_Sense_Main.c: 550: }
  1492                           ;Current_Sense_Main.c: 559: if ((firstHFPulse == 0) && (timerCountHF > timerCountHFLast)
      +                          )
  1493  000A84  504B               	movf	powerPulseCheck@firstHFPulse,w,c
  1494  000A86  A4D8               	btfss	status,2,c
  1495  000A88  D052               	goto	l183
  1496  000A8A  5044               	movf	_timerCountHF,w,c	;volatile
  1497  000A8C  0100               	movlb	0	; () banked
  1498  000A8E  5DE4               	subwf	powerPulseCheck@timerCountHFLast& (0+255),w,b
  1499  000A90  5045               	movf	_timerCountHF+1,w,c	;volatile
  1500  000A92  59E5               	subwfb	(powerPulseCheck@timerCountHFLast+1)& (0+255),w,b
  1501  000A94  5046               	movf	_timerCountHF+2,w,c	;volatile
  1502  000A96  59E6               	subwfb	(powerPulseCheck@timerCountHFLast+2)& (0+255),w,b
  1503  000A98  5047               	movf	_timerCountHF+3,w,c	;volatile
  1504  000A9A  59E7               	subwfb	(powerPulseCheck@timerCountHFLast+3)& (0+255),w,b
  1505  000A9C  B0D8               	btfsc	status,0,c
  1506  000A9E  D047               	goto	l183
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;Current_Sense_Main.c: 560: {
  1510                           ;Current_Sense_Main.c: 561: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1511  000AA0  C048  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1512  000AA4  C049  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1513  000AA8  6A15               	clrf	___lmul@multiplier+2,c
  1514  000AAA  6A16               	clrf	___lmul@multiplier+3,c
  1515  000AAC  0EE8               	movlw	232
  1516  000AAE  6E17               	movwf	___lmul@multiplicand,c
  1517  000AB0  0E03               	movlw	3
  1518  000AB2  6E18               	movwf	___lmul@multiplicand+1,c
  1519  000AB4  0E00               	movlw	0
  1520  000AB6  6E19               	movwf	___lmul@multiplicand+2,c
  1521  000AB8  0E00               	movlw	0
  1522  000ABA  6E1A               	movwf	___lmul@multiplicand+3,c
  1523  000ABC  EC2A  F00B         	call	___lmul	;wreg free
  1524  000AC0  5044               	movf	_timerCountHF,w,c	;volatile
  1525  000AC2  5C13               	subwf	?___lmul,w,c
  1526  000AC4  5045               	movf	_timerCountHF+1,w,c	;volatile
  1527  000AC6  5814               	subwfb	?___lmul+1,w,c
  1528  000AC8  5046               	movf	_timerCountHF+2,w,c	;volatile
  1529  000ACA  5815               	subwfb	?___lmul+2,w,c
  1530  000ACC  5047               	movf	_timerCountHF+3,w,c	;volatile
  1531  000ACE  5816               	subwfb	?___lmul+3,w,c
  1532  000AD0  B0D8               	btfsc	status,0,c
  1533  000AD2  0012               	return	
  1534                           
  1535                           ;Current_Sense_Main.c: 562: {
  1536                           ;Current_Sense_Main.c: 563: if (timerCountHFCheck < 90)
  1537  000AD4  5049               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1538  000AD6  E121               	bnz	l3303
  1539  000AD8  0E5A               	movlw	90
  1540  000ADA  5C48               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1541  000ADC  B0D8               	btfsc	status,0,c
  1542  000ADE  D01D               	goto	l185
  1543                           
  1544                           ;Current_Sense_Main.c: 564: {
  1545                           ;Current_Sense_Main.c: 565: timerCountHFCheck++;
  1546  000AE0  4A48               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1547  000AE2  2A49               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1548                           
  1549                           ;Current_Sense_Main.c: 566: meterWatts = (((((unsigned long) 2243 * (unsigned long) 3600
      +                          ) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned l
      +                          ong) timerCountHF;
  1550  000AE4  0E6C               	movlw	108
  1551  000AE6  6E13               	movwf	___lldiv@dividend,c
  1552  000AE8  0E3B               	movlw	59
  1553  000AEA  6E14               	movwf	___lldiv@dividend+1,c
  1554  000AEC  0E01               	movlw	1
  1555  000AEE  6E15               	movwf	___lldiv@dividend+2,c
  1556  000AF0  0E00               	movlw	0
  1557  000AF2  6E16               	movwf	___lldiv@dividend+3,c
  1558  000AF4  C044  F017         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1559  000AF8  C045  F018         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1560  000AFC  C046  F019         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1561  000B00  C047  F01A         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1562  000B04  ECE9  F009         	call	___lldiv	;wreg free
  1563  000B08  C013  F0B4         	movff	?___lldiv,_meterWatts
  1564  000B0C  C014  F0B5         	movff	?___lldiv+1,_meterWatts+1
  1565  000B10  C015  F0B6         	movff	?___lldiv+2,_meterWatts+2
  1566  000B14  C016  F0B7         	movff	?___lldiv+3,_meterWatts+3
  1567                           
  1568                           ;Current_Sense_Main.c: 567: }
  1569  000B18  0012               	return	
  1570  000B1A                     l185:
  1571  000B1A                     l3303:
  1572                           
  1573                           ;Current_Sense_Main.c: 568: else
  1574                           ;Current_Sense_Main.c: 569: {
  1575                           ;Current_Sense_Main.c: 570: meterWatts = 0;
  1576  000B1A  0E00               	movlw	0
  1577  000B1C  0100               	movlb	0	; () banked
  1578  000B1E  6FB4               	movwf	_meterWatts& (0+255),b
  1579  000B20  0E00               	movlw	0
  1580  000B22  6FB5               	movwf	(_meterWatts+1)& (0+255),b
  1581  000B24  0E00               	movlw	0
  1582  000B26  6FB6               	movwf	(_meterWatts+2)& (0+255),b
  1583  000B28  0E00               	movlw	0
  1584  000B2A  6FB7               	movwf	(_meterWatts+3)& (0+255),b
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;Current_Sense_Main.c: 571: }
  1588                           ;Current_Sense_Main.c: 573: }
  1589                           ;Current_Sense_Main.c: 574: }
  1590                           
  1591                           ; BSR set to: 0
  1592  000B2C  0012               	return	
  1593  000B2E                     l183:
  1594                           
  1595                           ;Current_Sense_Main.c: 602: else if(timerCountLF >= 200000) {
  1596                           
  1597                           ; BSR set to: 0
  1598  000B2E  5039               	movf	_timerCountLF+3,w,c	;volatile
  1599  000B30  E108               	bnz	u2840
  1600  000B32  0E40               	movlw	64
  1601  000B34  5C36               	subwf	_timerCountLF,w,c	;volatile
  1602  000B36  0E0D               	movlw	13
  1603  000B38  5837               	subwfb	_timerCountLF+1,w,c	;volatile
  1604  000B3A  0E03               	movlw	3
  1605  000B3C  5838               	subwfb	_timerCountLF+2,w,c	;volatile
  1606  000B3E  A0D8               	btfss	status,0,c
  1607  000B40  D002               	goto	l188
  1608  000B42                     u2840:
  1609                           
  1610                           ;Current_Sense_Main.c: 604: LATCbits.LATC1 = 1;
  1611  000B42  828B               	bsf	3979,1,c	;volatile
  1612                           
  1613                           ;Current_Sense_Main.c: 606: }
  1614  000B44  0012               	return	
  1615  000B46                     l188:
  1616                           
  1617                           ;Current_Sense_Main.c: 608: else if(timerCountLF >= 50000) {
  1618  000B46  5039               	movf	_timerCountLF+3,w,c	;volatile
  1619  000B48  1038               	iorwf	_timerCountLF+2,w,c	;volatile
  1620  000B4A  E106               	bnz	u2850
  1621  000B4C  0E50               	movlw	80
  1622  000B4E  5C36               	subwf	_timerCountLF,w,c	;volatile
  1623  000B50  0EC3               	movlw	195
  1624  000B52  5837               	subwfb	_timerCountLF+1,w,c	;volatile
  1625  000B54  A0D8               	btfss	status,0,c
  1626  000B56  D002               	goto	l190
  1627  000B58                     u2850:
  1628                           
  1629                           ;Current_Sense_Main.c: 610: LATCbits.LATC0 = 1;
  1630  000B58  808B               	bsf	3979,0,c	;volatile
  1631                           
  1632                           ;Current_Sense_Main.c: 612: }
  1633  000B5A  0012               	return	
  1634  000B5C                     l190:
  1635                           
  1636                           ;Current_Sense_Main.c: 614: else
  1637                           ;Current_Sense_Main.c: 615: {
  1638                           ;Current_Sense_Main.c: 616: mcpLFoutLast = 0;
  1639  000B5C  0E00               	movlw	0
  1640  000B5E  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1641  000B60  0012               	return	
  1642  000B62                     __end_of_powerPulseCheck:
  1643                           	opt stack 0
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1l	equ	0xFE1
  1652                           status	equ	0xFD8
  1653                           
  1654 ;; *************** function _initTimer *****************
  1655 ;; Defined at:
  1656 ;;		line 706 in file "Current_Sense_Main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         0       0       0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0
  1673 ;;      Totals:         0       0       0       0       0       0       0
  1674 ;;Total ram usage:        0 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text3
  1685  001914                     __ptext3:
  1686                           	opt stack 0
  1687  001914                     _initTimer:
  1688                           	opt stack 29
  1689                           
  1690                           ;Current_Sense_Main.c: 709: T0CONbits.TMR0ON = 0;
  1691                           
  1692                           ;incstack = 0
  1693  001914  9ED5               	bcf	4053,7,c	;volatile
  1694                           
  1695                           ;Current_Sense_Main.c: 710: T0CONbits.T08BIT = 0;
  1696  001916  9CD5               	bcf	4053,6,c	;volatile
  1697                           
  1698                           ;Current_Sense_Main.c: 711: T0CONbits.T0CS = 0;
  1699  001918  9AD5               	bcf	4053,5,c	;volatile
  1700                           
  1701                           ;Current_Sense_Main.c: 712: T0CONbits.PSA = 0;
  1702  00191A  96D5               	bcf	4053,3,c	;volatile
  1703                           
  1704                           ;Current_Sense_Main.c: 713: T0CONbits.T0PS = 0b001;
  1705  00191C  50D5               	movf	4053,w,c	;volatile
  1706  00191E  0BF8               	andlw	-8
  1707  001920  0901               	iorlw	1
  1708  001922  6ED5               	movwf	4053,c	;volatile
  1709                           
  1710                           ;Current_Sense_Main.c: 715: INTCONbits.TMR0IE = 1;
  1711  001924  8AF2               	bsf	intcon,5,c	;volatile
  1712                           
  1713                           ;Current_Sense_Main.c: 716: INTCONbits.GIE = 1;
  1714  001926  8EF2               	bsf	intcon,7,c	;volatile
  1715                           
  1716                           ;Current_Sense_Main.c: 717: T0CONbits.TMR0ON = 1;
  1717  001928  8ED5               	bsf	4053,7,c	;volatile
  1718  00192A  0012               	return		;funcret
  1719  00192C                     __end_of_initTimer:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           intcon	equ	0xFF2
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function _init *****************
  1733 ;; Defined at:
  1734 ;;		line 632 in file "Current_Sense_Main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1748 ;;      Params:         0       0       0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    2
  1755 ;; This function calls:
  1756 ;;		_initOSC
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text4
  1763  001962                     __ptext4:
  1764                           	opt stack 0
  1765  001962                     _init:
  1766                           	opt stack 28
  1767                           
  1768                           ;Current_Sense_Main.c: 634: initOSC();
  1769                           
  1770                           ;incstack = 0
  1771  001962  EC96  F00C         	call	_initOSC	;wreg free
  1772  001966  0012               	return	
  1773  001968                     __end_of_init:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           intcon	equ	0xFF2
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           postdec1	equ	0xFE5
  1783                           fsr1l	equ	0xFE1
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _initOSC *****************
  1787 ;; Defined at:
  1788 ;;		line 642 in file "Current_Sense_Main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         0       0       0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_init
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text5
  1817  00192C                     __ptext5:
  1818                           	opt stack 0
  1819  00192C                     _initOSC:
  1820                           	opt stack 28
  1821                           
  1822                           ;Current_Sense_Main.c: 645: OSCCONbits.IDLEN = 0;
  1823                           
  1824                           ;incstack = 0
  1825  00192C  9ED3               	bcf	4051,7,c	;volatile
  1826                           
  1827                           ;Current_Sense_Main.c: 646: OSCCONbits.IRCF = 0b111;
  1828  00192E  88D3               	bsf	4051,4,c	;volatile
  1829  001930  8AD3               	bsf	4051,5,c	;volatile
  1830  001932  8CD3               	bsf	4051,6,c	;volatile
  1831                           
  1832                           ;Current_Sense_Main.c: 647: OSCCONbits.SCS = 0b11;
  1833  001934  0E03               	movlw	3
  1834  001936  12D3               	iorwf	4051,f,c	;volatile
  1835                           
  1836                           ;Current_Sense_Main.c: 649: OSCCON2bits.MFIOSEL = 0;
  1837  001938  98D2               	bcf	4050,4,c	;volatile
  1838                           
  1839                           ;Current_Sense_Main.c: 650: OSCCON2bits.SOSCGO = 0;
  1840  00193A  96D2               	bcf	4050,3,c	;volatile
  1841                           
  1842                           ;Current_Sense_Main.c: 651: OSCCON2bits.PRISD = 0;
  1843  00193C  94D2               	bcf	4050,2,c	;volatile
  1844                           
  1845                           ;Current_Sense_Main.c: 653: OSCTUNEbits.INTSRC = 1;
  1846  00193E  8E9B               	bsf	3995,7,c	;volatile
  1847                           
  1848                           ;Current_Sense_Main.c: 654: OSCTUNEbits.PLLEN = 0;
  1849  001940  9C9B               	bcf	3995,6,c	;volatile
  1850  001942  0012               	return	
  1851  001944                     __end_of_initOSC:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           intcon	equ	0xFF2
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           postdec1	equ	0xFE5
  1861                           fsr1l	equ	0xFE1
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _delayMS10 *****************
  1865 ;; Defined at:
  1866 ;;		line 623 in file "Current_Sense_Main.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  count           2   18[COMRAM] int 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  inx             2   21[COMRAM] int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1880 ;;      Params:         2       0       0       0       0       0       0
  1881 ;;      Locals:         2       0       0       0       0       0       0
  1882 ;;      Temps:          1       0       0       0       0       0       0
  1883 ;;      Totals:         5       0       0       0       0       0       0
  1884 ;;Total ram usage:        5 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text6
  1895  0017D0                     __ptext6:
  1896                           	opt stack 0
  1897  0017D0                     _delayMS10:
  1898                           	opt stack 29
  1899                           
  1900                           ;Current_Sense_Main.c: 625: for (int inx = 0; inx < count; inx++)
  1901                           
  1902                           ;incstack = 0
  1903  0017D0  0E00               	movlw	0
  1904  0017D2  6E17               	movwf	delayMS10@inx+1,c
  1905  0017D4  0E00               	movlw	0
  1906  0017D6  6E16               	movwf	delayMS10@inx,c
  1907  0017D8  D009               	goto	l195
  1908  0017DA                     
  1909                           ;Current_Sense_Main.c: 626: {
  1910                           ;Current_Sense_Main.c: 628: _delay((unsigned long)((10)*(16000000/4000.0)));
  1911  0017DA  0E34               	movlw	52
  1912  0017DC  6E15               	movwf	??_delayMS10& (0+255),c
  1913  0017DE  0EF2               	movlw	242
  1914  0017E0                     u2867:
  1915  0017E0  2EE8               	decfsz	wreg,f,c
  1916  0017E2  D7FE               	bra	u2867
  1917  0017E4  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1918  0017E6  D7FC               	bra	u2867
  1919  0017E8  4A16               	infsnz	delayMS10@inx,f,c
  1920  0017EA  2A17               	incf	delayMS10@inx+1,f,c
  1921  0017EC                     l195:
  1922  0017EC  5013               	movf	delayMS10@count,w,c
  1923  0017EE  5C16               	subwf	delayMS10@inx,w,c
  1924  0017F0  5017               	movf	delayMS10@inx+1,w,c
  1925  0017F2  0A80               	xorlw	128
  1926  0017F4  6E15               	movwf	??_delayMS10& (0+255),c
  1927  0017F6  5014               	movf	delayMS10@count+1,w,c
  1928  0017F8  0A80               	xorlw	128
  1929  0017FA  5815               	subwfb	??_delayMS10& (0+255),w,c
  1930  0017FC  B0D8               	btfsc	status,0,c
  1931  0017FE  0012               	return	
  1932  001800  D7EC               	goto	l196
  1933  001802                     __end_of_delayMS10:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           intcon	equ	0xFF2
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           fsr1l	equ	0xFE1
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _communications *****************
  1947 ;; Defined at:
  1948 ;;		line 90 in file "SlaveComm_PIC18.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  firstTime       1    wreg     unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  firstTime       1   52[COMRAM] unsigned char 
  1953 ;;  no_more_to_s    1   51[COMRAM] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1963 ;;      Params:         0       0       0       0       0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0
  1966 ;;      Totals:         2       0       0       0       0       0       0
  1967 ;;Total ram usage:        2 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    7
  1970 ;; This function calls:
  1971 ;;		_SPISlaveInit
  1972 ;;		_process_data
  1973 ;;		_receive_data
  1974 ;;		_resetCommunications
  1975 ;;		_send_data
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text7
  1982  0012A8                     __ptext7:
  1983                           	opt stack 0
  1984  0012A8                     _communications:
  1985                           	opt stack 23
  1986                           
  1987                           ;incstack = 0
  1988                           ;communications@firstTime stored from wreg
  1989  0012A8  6E35               	movwf	communications@firstTime,c
  1990                           
  1991                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  1992                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  1993                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  1994                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  1995                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  1996                           ;SlaveComm_PIC18.c: 104: if (firstTime == 1)
  1997  0012AA  0435               	decf	communications@firstTime,w,c
  1998  0012AC  A4D8               	btfss	status,2,c
  1999  0012AE  D00E               	goto	l299
  2000                           
  2001                           ;SlaveComm_PIC18.c: 105: {
  2002                           ;SlaveComm_PIC18.c: 106: SPISlaveInit();
  2003  0012B0  ECC4  F00B         	call	_SPISlaveInit	;wreg free
  2004                           
  2005                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  2006  0012B4  0E00               	movlw	0
  2007  0012B6  0100               	movlb	0	; () banked
  2008  0012B8  6FE2               	movwf	(communications@send_buffer+40)& (0+255),b
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  2012  0012BA  0E00               	movlw	0
  2013  0012BC  6FE3               	movwf	(communications@send_buffer+41)& (0+255),b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;SlaveComm_PIC18.c: 109: resetCommunications(&send_buffer);
  2017  0012BE  0EBA               	movlw	low communications@send_buffer
  2018  0012C0  6E2F               	movwf	resetCommunications@send_buffer,c
  2019  0012C2  0E00               	movlw	high communications@send_buffer
  2020  0012C4  6E30               	movwf	resetCommunications@send_buffer+1,c
  2021  0012C6  EC06  F009         	call	_resetCommunications	;wreg free
  2022                           
  2023                           ;SlaveComm_PIC18.c: 110: }
  2024  0012CA  0012               	return	
  2025  0012CC                     l299:
  2026                           
  2027                           ;SlaveComm_PIC18.c: 111: else
  2028                           ;SlaveComm_PIC18.c: 112: {
  2029                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data(&receive_buffer);
  2030  0012CC  0E00               	movlw	low communications@receive_buffer
  2031  0012CE  6E16               	movwf	receive_data@receive_buffer,c
  2032  0012D0  0E01               	movlw	high communications@receive_buffer
  2033  0012D2  6E17               	movwf	receive_data@receive_buffer+1,c
  2034  0012D4  ECFC  F007         	call	_receive_data	;wreg free
  2035  0012D8  6E3C               	movwf	communications@receive_current_state,c
  2036                           
  2037                           ;SlaveComm_PIC18.c: 117: switch (receive_current_state)
  2038  0012DA  D011               	goto	l301
  2039  0012DC                     
  2040                           ;SlaveComm_PIC18.c: 127: if (process_data(&receive_buffer, &send_buffer) == 1)
  2041  0012DC  0E00               	movlw	low communications@receive_buffer
  2042  0012DE  0100               	movlb	0	; () banked
  2043  0012E0  6F6C               	movwf	process_data@receive_buffer& (0+255),b
  2044  0012E2  0E01               	movlw	high communications@receive_buffer
  2045  0012E4  6F6D               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2046  0012E6  0EBA               	movlw	low communications@send_buffer
  2047  0012E8  6F6E               	movwf	process_data@send_buffer& (0+255),b
  2048  0012EA  0E00               	movlw	high communications@send_buffer
  2049  0012EC  6F6F               	movwf	(process_data@send_buffer+1)& (0+255),b
  2050  0012EE  EC01  F00C         	call	_process_data	;wreg free
  2051  0012F2  06E8               	decf	wreg,f,c
  2052  0012F4  A4D8               	btfss	status,2,c
  2053  0012F6  D00D               	goto	l303
  2054                           
  2055                           ;SlaveComm_PIC18.c: 128: {
  2056                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  2057  0012F8  0E01               	movlw	1
  2058  0012FA  6E3D               	movwf	communications@end_of_transmission_received,c
  2059                           
  2060                           ;SlaveComm_PIC18.c: 133: }
  2061                           
  2062                           ;SlaveComm_PIC18.c: 130: }
  2063                           ;SlaveComm_PIC18.c: 132: break;
  2064  0012FC  D00A               	goto	l303
  2065  0012FE                     l301:
  2066  0012FE  503C               	movf	communications@receive_current_state,w,c
  2067                           
  2068                           ; Switch size 1, requested type "space"
  2069                           ; Number of cases is 3, Range of values is 0 to 2
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte           10     6 (average)
  2073                           ;	Chosen strategy is simple_byte
  2074  001300  0A00               	xorlw	0	; case 0
  2075  001302  B4D8               	btfsc	status,2,c
  2076  001304  D006               	goto	l303
  2077  001306  0A01               	xorlw	1	; case 1
  2078  001308  B4D8               	btfsc	status,2,c
  2079  00130A  D003               	goto	l303
  2080  00130C  0A03               	xorlw	3	; case 2
  2081  00130E  B4D8               	btfsc	status,2,c
  2082  001310  D7E5               	goto	l305
  2083  001312                     l303:
  2084                           
  2085                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data(&send_buffer);
  2086  001312  0EBA               	movlw	low communications@send_buffer
  2087  001314  6E15               	movwf	send_data@send_buffer,c
  2088  001316  0E00               	movlw	high communications@send_buffer
  2089  001318  6E16               	movwf	send_data@send_buffer+1,c
  2090  00131A  ECA1  F009         	call	_send_data	;wreg free
  2091  00131E  6E34               	movwf	communications@no_more_to_send,c
  2092                           
  2093                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  2094                           ;SlaveComm_PIC18.c: 139: if (PORTBbits.SS2 == 0b1)
  2095  001320  A081               	btfss	3969,0,c	;volatile
  2096  001322  D003               	goto	l309
  2097                           
  2098                           ;SlaveComm_PIC18.c: 140: {
  2099                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  2100  001324  0E00               	movlw	0
  2101  001326  6E3B               	movwf	communications@last_state_active,c
  2102                           
  2103                           ;SlaveComm_PIC18.c: 142: }
  2104  001328  0012               	return	
  2105  00132A                     l309:
  2106                           
  2107                           ;SlaveComm_PIC18.c: 143: else
  2108                           ;SlaveComm_PIC18.c: 144: {
  2109                           ;SlaveComm_PIC18.c: 145: if (last_state_active == 0)
  2110  00132A  503B               	movf	communications@last_state_active,w,c
  2111  00132C  A4D8               	btfss	status,2,c
  2112  00132E  D006               	goto	l311
  2113                           
  2114                           ;SlaveComm_PIC18.c: 146: {
  2115                           ;SlaveComm_PIC18.c: 147: resetCommunications(&send_buffer);
  2116  001330  0EBA               	movlw	low communications@send_buffer
  2117  001332  6E2F               	movwf	resetCommunications@send_buffer,c
  2118  001334  0E00               	movlw	high communications@send_buffer
  2119  001336  6E30               	movwf	resetCommunications@send_buffer+1,c
  2120  001338  EC06  F009         	call	_resetCommunications	;wreg free
  2121  00133C                     l311:
  2122                           
  2123                           ;SlaveComm_PIC18.c: 148: }
  2124                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  2125  00133C  0E01               	movlw	1
  2126  00133E  6E3B               	movwf	communications@last_state_active,c
  2127  001340  0012               	return	
  2128  001342                     __end_of_communications:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           intcon	equ	0xFF2
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           postdec1	equ	0xFE5
  2138                           fsr1l	equ	0xFE1
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _send_data *****************
  2142 ;; Defined at:
  2143 ;;		line 509 in file "SlaveComm_PIC18.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2146 ;;		 -> communications@send_buffer(42), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  send_end        1   24[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      unsigned char 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         2       0       0       0       0       0       0
  2159 ;;      Locals:         1       0       0       0       0       0       0
  2160 ;;      Temps:          2       0       0       0       0       0       0
  2161 ;;      Totals:         5       0       0       0       0       0       0
  2162 ;;Total ram usage:        5 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		_SPI_send_data
  2167 ;; This function is called by:
  2168 ;;		_communications
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text8
  2173  001342                     __ptext8:
  2174                           	opt stack 0
  2175  001342                     _send_data:
  2176                           	opt stack 27
  2177                           
  2178                           ;SlaveComm_PIC18.c: 511: bool send_end;
  2179                           ;SlaveComm_PIC18.c: 513: if (send_buffer->read_position == send_buffer->write_position)
  2180                           
  2181                           ;incstack = 0
  2182  001342  EE20 F028          	lfsr	2,40
  2183  001346  5015               	movf	send_data@send_buffer,w,c
  2184  001348  26D9               	addwf	fsr2l,f,c
  2185  00134A  5016               	movf	send_data@send_buffer+1,w,c
  2186  00134C  22DA               	addwfc	fsr2h,f,c
  2187  00134E  EE10 F029          	lfsr	1,41
  2188  001352  5015               	movf	send_data@send_buffer,w,c
  2189  001354  26E1               	addwf	fsr1l,f,c
  2190  001356  5016               	movf	send_data@send_buffer+1,w,c
  2191  001358  22E2               	addwfc	fsr1h,f,c
  2192  00135A  50DE               	movf	postinc2,w,c
  2193  00135C  18E6               	xorwf	postinc1,w,c
  2194  00135E  A4D8               	btfss	status,2,c
  2195  001360  D006               	goto	l410
  2196                           
  2197                           ;SlaveComm_PIC18.c: 514: {
  2198                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  2199  001362  0E01               	movlw	1
  2200  001364  6E19               	movwf	send_data@send_end,c
  2201                           
  2202                           ;SlaveComm_PIC18.c: 516: SPI_send_data('\0');
  2203  001366  0E00               	movlw	0
  2204  001368  EC6B  F00C         	call	_SPI_send_data
  2205                           
  2206                           ;SlaveComm_PIC18.c: 517: }
  2207  00136C  D030               	goto	l413
  2208  00136E                     l410:
  2209                           
  2210                           ;SlaveComm_PIC18.c: 518: else
  2211                           ;SlaveComm_PIC18.c: 519: {
  2212                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  2213  00136E  0E00               	movlw	0
  2214  001370  6E19               	movwf	send_data@send_end,c
  2215                           
  2216                           ;SlaveComm_PIC18.c: 523: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2217  001372  EE20 F029          	lfsr	2,41
  2218  001376  5015               	movf	send_data@send_buffer,w,c
  2219  001378  26D9               	addwf	fsr2l,f,c
  2220  00137A  5016               	movf	send_data@send_buffer+1,w,c
  2221  00137C  22DA               	addwfc	fsr2h,f,c
  2222  00137E  50DF               	movf	indf2,w,c
  2223  001380  6E17               	movwf	??_send_data& (0+255),c
  2224  001382  5017               	movf	??_send_data,w,c
  2225  001384  0D01               	mullw	1
  2226  001386  50F3               	movf	prodl,w,c
  2227  001388  2415               	addwf	send_data@send_buffer,w,c
  2228  00138A  6ED9               	movwf	fsr2l,c
  2229  00138C  50F4               	movf	prodh,w,c
  2230  00138E  2016               	addwfc	send_data@send_buffer+1,w,c
  2231  001390  6EDA               	movwf	fsr2h,c
  2232  001392  50DF               	movf	indf2,w,c
  2233  001394  EC6B  F00C         	call	_SPI_send_data
  2234  001398  06E8               	decf	wreg,f,c
  2235  00139A  A4D8               	btfss	status,2,c
  2236  00139C  D018               	goto	l413
  2237                           
  2238                           ;SlaveComm_PIC18.c: 524: {
  2239                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2240  00139E  EE20 F029          	lfsr	2,41
  2241  0013A2  5015               	movf	send_data@send_buffer,w,c
  2242  0013A4  26D9               	addwf	fsr2l,f,c
  2243  0013A6  5016               	movf	send_data@send_buffer+1,w,c
  2244  0013A8  22DA               	addwfc	fsr2h,f,c
  2245  0013AA  2ADF               	incf	indf2,f,c
  2246                           
  2247                           ;SlaveComm_PIC18.c: 527: if (send_buffer->read_position >= 40)
  2248  0013AC  EE20 F029          	lfsr	2,41
  2249  0013B0  5015               	movf	send_data@send_buffer,w,c
  2250  0013B2  26D9               	addwf	fsr2l,f,c
  2251  0013B4  5016               	movf	send_data@send_buffer+1,w,c
  2252  0013B6  22DA               	addwfc	fsr2h,f,c
  2253  0013B8  0E27               	movlw	39
  2254  0013BA  64DF               	cpfsgt	indf2,c
  2255  0013BC  D008               	goto	l413
  2256                           
  2257                           ;SlaveComm_PIC18.c: 528: {
  2258                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2259  0013BE  EE20 F029          	lfsr	2,41
  2260  0013C2  5015               	movf	send_data@send_buffer,w,c
  2261  0013C4  26D9               	addwf	fsr2l,f,c
  2262  0013C6  5016               	movf	send_data@send_buffer+1,w,c
  2263  0013C8  22DA               	addwfc	fsr2h,f,c
  2264  0013CA  0E00               	movlw	0
  2265  0013CC  6EDF               	movwf	indf2,c
  2266  0013CE                     l413:
  2267                           
  2268                           ;SlaveComm_PIC18.c: 530: }
  2269                           ;SlaveComm_PIC18.c: 531: }
  2270                           ;SlaveComm_PIC18.c: 532: }
  2271                           ;SlaveComm_PIC18.c: 534: return send_end;
  2272  0013CE  5019               	movf	send_data@send_end,w,c
  2273  0013D0  0012               	return	
  2274  0013D2                     __end_of_send_data:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           postinc0	equ	0xFEE
  2284                           wreg	equ	0xFE8
  2285                           postinc1	equ	0xFE6
  2286                           postdec1	equ	0xFE5
  2287                           fsr1h	equ	0xFE2
  2288                           fsr1l	equ	0xFE1
  2289                           indf2	equ	0xFDF
  2290                           postinc2	equ	0xFDE
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _SPI_send_data *****************
  2296 ;; Defined at:
  2297 ;;		line 607 in file "SlaveComm_PIC18.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  data            1    wreg     unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  data            1   18[COMRAM] unsigned char 
  2302 ;;  sendGood        1   19[COMRAM] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      unsigned char 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2312 ;;      Params:         0       0       0       0       0       0       0
  2313 ;;      Locals:         2       0       0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0
  2315 ;;      Totals:         2       0       0       0       0       0       0
  2316 ;;Total ram usage:        2 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_send_data
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text9
  2327  0018D6                     __ptext9:
  2328                           	opt stack 0
  2329  0018D6                     _SPI_send_data:
  2330                           	opt stack 27
  2331                           
  2332                           ;incstack = 0
  2333                           ;SPI_send_data@data stored from wreg
  2334  0018D6  6E13               	movwf	SPI_send_data@data,c
  2335                           
  2336                           ;SlaveComm_PIC18.c: 609: bool sendGood = 0;
  2337  0018D8  0E00               	movlw	0
  2338  0018DA  6E14               	movwf	SPI_send_data@sendGood,c
  2339                           
  2340                           ;SlaveComm_PIC18.c: 611: if (SPI_transmit_wait == 0)
  2341  0018DC  503E               	movf	_SPI_transmit_wait,w,c
  2342  0018DE  A4D8               	btfss	status,2,c
  2343  0018E0  D006               	goto	l441
  2344                           
  2345                           ;SlaveComm_PIC18.c: 612: {
  2346                           ;SlaveComm_PIC18.c: 613: SSP2BUF = data;
  2347  0018E2  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2348                           
  2349                           ;SlaveComm_PIC18.c: 614: SPI_transmit_wait = 1;
  2350  0018E6  0E01               	movlw	1
  2351  0018E8  6E3E               	movwf	_SPI_transmit_wait,c
  2352                           
  2353                           ;SlaveComm_PIC18.c: 615: sendGood = 1;
  2354  0018EA  0E01               	movlw	1
  2355  0018EC  D001               	goto	L2
  2356  0018EE                     l441:
  2357                           
  2358                           ;SlaveComm_PIC18.c: 617: else
  2359                           ;SlaveComm_PIC18.c: 618: {
  2360                           ;SlaveComm_PIC18.c: 619: sendGood = 0;
  2361  0018EE  0E00               	movlw	0
  2362  0018F0                     L2:
  2363  0018F0  6E14               	movwf	SPI_send_data@sendGood,c
  2364                           
  2365                           ;SlaveComm_PIC18.c: 620: }
  2366                           ;SlaveComm_PIC18.c: 622: return sendGood;
  2367  0018F2  5014               	movf	SPI_send_data@sendGood,w,c
  2368  0018F4  0012               	return	
  2369  0018F6                     __end_of_SPI_send_data:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           prodh	equ	0xFF4
  2376                           prodl	equ	0xFF3
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           postinc1	equ	0xFE6
  2381                           postdec1	equ	0xFE5
  2382                           fsr1h	equ	0xFE2
  2383                           fsr1l	equ	0xFE1
  2384                           indf2	equ	0xFDF
  2385                           postinc2	equ	0xFDE
  2386                           fsr2h	equ	0xFDA
  2387                           fsr2l	equ	0xFD9
  2388                           status	equ	0xFD8
  2389                           
  2390 ;; *************** function _resetCommunications *****************
  2391 ;; Defined at:
  2392 ;;		line 158 in file "SlaveComm_PIC18.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  2395 ;;		 -> communications@send_buffer(42), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2407 ;;      Params:         2       0       0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0
  2409 ;;      Temps:          2       0       0       0       0       0       0
  2410 ;;      Totals:         4       0       0       0       0       0       0
  2411 ;;Total ram usage:        4 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    5
  2414 ;; This function calls:
  2415 ;;		_com_command_setEnergyUsed
  2416 ;;		_com_command_setPower
  2417 ;;		_com_command_setVersion
  2418 ;; This function is called by:
  2419 ;;		_communications
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text10
  2424  00120C                     __ptext10:
  2425                           	opt stack 0
  2426  00120C                     _resetCommunications:
  2427                           	opt stack 24
  2428                           
  2429                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2430                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2431                           
  2432                           ;incstack = 0
  2433  00120C  9A6C               	bcf	3948,5,c	;volatile
  2434                           
  2435                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2436  00120E  0E06               	movlw	6
  2437  001210  6E31               	movwf	??_resetCommunications& (0+255),c
  2438  001212  0E30               	movlw	48
  2439  001214                     u2877:
  2440  001214  2EE8               	decfsz	wreg,f,c
  2441  001216  D7FE               	bra	u2877
  2442  001218  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  2443  00121A  D7FC               	bra	u2877
  2444  00121C  D000               	nop2	
  2445                           
  2446                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2447  00121E  8A6C               	bsf	3948,5,c	;volatile
  2448                           
  2449                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2450  001220  9E6C               	bcf	3948,7,c	;volatile
  2451                           
  2452                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2453  001222  0E00               	movlw	0
  2454  001224  6E3E               	movwf	_SPI_transmit_wait,c
  2455                           
  2456                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2457  001226  EE20 F029          	lfsr	2,41
  2458  00122A  502F               	movf	resetCommunications@send_buffer,w,c
  2459  00122C  26D9               	addwf	fsr2l,f,c
  2460  00122E  5030               	movf	resetCommunications@send_buffer+1,w,c
  2461  001230  22DA               	addwfc	fsr2h,f,c
  2462  001232  0E00               	movlw	0
  2463  001234  6EDF               	movwf	indf2,c
  2464                           
  2465                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2466  001236  EE20 F028          	lfsr	2,40
  2467  00123A  502F               	movf	resetCommunications@send_buffer,w,c
  2468  00123C  26D9               	addwf	fsr2l,f,c
  2469  00123E  5030               	movf	resetCommunications@send_buffer+1,w,c
  2470  001240  22DA               	addwfc	fsr2h,f,c
  2471  001242  0E00               	movlw	0
  2472  001244  6EDF               	movwf	indf2,c
  2473                           
  2474                           ;SlaveComm_PIC18.c: 177: commState++;
  2475  001246  0100               	movlb	0	; () banked
  2476  001248  4BB8               	infsnz	resetCommunications@commState& (0+255),f,b
  2477  00124A  2BB9               	incf	(resetCommunications@commState+1)& (0+255),f,b
  2478                           
  2479                           ;SlaveComm_PIC18.c: 178: switch (commState)
  2480  00124C  D01A               	goto	l317
  2481  00124E                     
  2482                           ; BSR set to: 0
  2483                           ;SlaveComm_PIC18.c: 181: com_command_setVersion(send_buffer);
  2484                           
  2485                           ; BSR set to: 0
  2486  00124E  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2487  001252  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2488  001256  EC45  F00C         	call	_com_command_setVersion	;wreg free
  2489                           
  2490                           ;SlaveComm_PIC18.c: 182: break;
  2491  00125A  0012               	return	
  2492  00125C                     
  2493                           ;SlaveComm_PIC18.c: 184: com_command_setPower(send_buffer);
  2494  00125C  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2495  001260  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2496  001264  EC7A  F00B         	call	_com_command_setPower	;wreg free
  2497                           
  2498                           ;SlaveComm_PIC18.c: 197: break;
  2499  001268  0012               	return	
  2500  00126A                     
  2501                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed(send_buffer);
  2502  00126A  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2503  00126E  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2504  001272  EC9F  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2505  001276                     
  2506                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2507  001276  0E00               	movlw	0
  2508  001278  0100               	movlb	0	; () banked
  2509  00127A  6FB9               	movwf	(resetCommunications@commState+1)& (0+255),b
  2510  00127C  0E00               	movlw	0
  2511  00127E  6FB8               	movwf	resetCommunications@commState& (0+255),b
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;SlaveComm_PIC18.c: 213: }
  2515                           
  2516                           ;SlaveComm_PIC18.c: 212: break;
  2517  001280  0012               	return	
  2518  001282                     l317:
  2519                           
  2520                           ; BSR set to: 0
  2521                           
  2522                           ; BSR set to: 0
  2523  001282  C0B8  F031         	movff	resetCommunications@commState,??_resetCommunications
  2524  001286  C0B9  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2525                           
  2526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2527                           ; Switch size 1, requested type "space"
  2528                           ; Number of cases is 1, Range of values is 0 to 0
  2529                           ; switch strategies available:
  2530                           ; Name         Instructions Cycles
  2531                           ; simple_byte            4     3 (average)
  2532                           ;	Chosen strategy is simple_byte
  2533  00128A  5032               	movf	??_resetCommunications+1,w,c
  2534  00128C  0A00               	xorlw	0	; case 0
  2535  00128E  A4D8               	btfss	status,2,c
  2536  001290  D7F2               	goto	l322
  2537                           
  2538                           ; BSR set to: 0
  2539                           ; Switch size 1, requested type "space"
  2540                           ; Number of cases is 3, Range of values is 1 to 3
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte           10     6 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  001292  5031               	movf	??_resetCommunications,w,c
  2546  001294  0A01               	xorlw	1	; case 1
  2547  001296  B4D8               	btfsc	status,2,c
  2548  001298  D7DA               	goto	l318
  2549  00129A  0A03               	xorlw	3	; case 2
  2550  00129C  B4D8               	btfsc	status,2,c
  2551  00129E  D7DE               	goto	l320
  2552  0012A0  0A01               	xorlw	1	; case 3
  2553  0012A2  B4D8               	btfsc	status,2,c
  2554  0012A4  D7E2               	goto	l321
  2555  0012A6  D7E7               	goto	l322
  2556  0012A8                     __end_of_resetCommunications:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           prodh	equ	0xFF4
  2563                           prodl	equ	0xFF3
  2564                           intcon	equ	0xFF2
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postinc1	equ	0xFE6
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           fsr2h	equ	0xFDA
  2574                           fsr2l	equ	0xFD9
  2575                           status	equ	0xFD8
  2576                           
  2577 ;; *************** function _com_command_setVersion *****************
  2578 ;; Defined at:
  2579 ;;		line 700 in file "SlaveComm_PIC18.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2582 ;;		 -> communications@send_buffer(42), 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2594 ;;      Params:         2       0       0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    4
  2601 ;; This function calls:
  2602 ;;		_command_builder3
  2603 ;; This function is called by:
  2604 ;;		_resetCommunications
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text11
  2609  00188A                     __ptext11:
  2610                           	opt stack 0
  2611  00188A                     _com_command_setVersion:
  2612                           	opt stack 24
  2613                           
  2614                           ;SlaveComm_PIC18.c: 702: command_builder3(send_buffer, "Set", "PSVersion", "444");
  2615                           
  2616                           ;incstack = 0
  2617  00188A  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2618  00188E  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2619  001892  0E57               	movlw	low STR_2
  2620  001894  6E21               	movwf	command_builder3@data1,c
  2621  001896  0E06               	movlw	high STR_2
  2622  001898  6E22               	movwf	command_builder3@data1+1,c
  2623  00189A  0E0D               	movlw	low STR_22
  2624  00189C  6E23               	movwf	command_builder3@data2,c
  2625  00189E  0E06               	movlw	high STR_22
  2626  0018A0  6E24               	movwf	command_builder3@data2+1,c
  2627  0018A2  0E4B               	movlw	low STR_40
  2628  0018A4  6E25               	movwf	command_builder3@data3,c
  2629  0018A6  0E06               	movlw	high STR_40
  2630  0018A8  6E26               	movwf	command_builder3@data3+1,c
  2631  0018AA  ECB7  F008         	call	_command_builder3	;wreg free
  2632  0018AE  0012               	return		;funcret
  2633  0018B0                     __end_of_com_command_setVersion:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postinc1	equ	0xFE6
  2645                           postdec1	equ	0xFE5
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _com_command_setPower *****************
  2655 ;; Defined at:
  2656 ;;		line 642 in file "SlaveComm_PIC18.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  2659 ;;		 -> communications@send_buffer(42), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2671 ;;      Params:         2       0       0       0       0       0       0
  2672 ;;      Locals:         0      12       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0
  2674 ;;      Totals:         2      12       0       0       0       0       0
  2675 ;;Total ram usage:       14 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    4
  2678 ;; This function calls:
  2679 ;;		_command_builder3
  2680 ;;		_ultoa
  2681 ;; This function is called by:
  2682 ;;		_resetCommunications
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text12
  2687  0016F4                     __ptext12:
  2688                           	opt stack 0
  2689  0016F4                     _com_command_setPower:
  2690                           	opt stack 24
  2691                           
  2692                           ;SlaveComm_PIC18.c: 645: char temp[12];
  2693                           ;SlaveComm_PIC18.c: 658: ultoa(temp, meterWatts, 10);
  2694                           
  2695                           ;incstack = 0
  2696  0016F4  0E60               	movlw	low com_command_setPower@temp
  2697  0016F6  6E20               	movwf	ultoa@buf,c
  2698  0016F8  0E00               	movlw	high com_command_setPower@temp
  2699  0016FA  6E21               	movwf	ultoa@buf+1,c
  2700  0016FC  C0B4  F022         	movff	_meterWatts,ultoa@val
  2701  001700  C0B5  F023         	movff	_meterWatts+1,ultoa@val+1
  2702  001704  C0B6  F024         	movff	_meterWatts+2,ultoa@val+2
  2703  001708  C0B7  F025         	movff	_meterWatts+3,ultoa@val+3
  2704  00170C  0E00               	movlw	0
  2705  00170E  6E27               	movwf	ultoa@base+1,c
  2706  001710  0E0A               	movlw	10
  2707  001712  6E26               	movwf	ultoa@base,c
  2708  001714  EC07  F007         	call	_ultoa	;wreg free
  2709                           
  2710                           ;SlaveComm_PIC18.c: 660: command_builder3(send_buffer, "Set", "Watts", temp);
  2711  001718  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2712  00171C  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2713  001720  0E57               	movlw	low STR_2
  2714  001722  6E21               	movwf	command_builder3@data1,c
  2715  001724  0E06               	movlw	high STR_2
  2716  001726  6E22               	movwf	command_builder3@data1+1,c
  2717  001728  0E24               	movlw	low STR_18
  2718  00172A  6E23               	movwf	command_builder3@data2,c
  2719  00172C  0E06               	movlw	high STR_18
  2720  00172E  6E24               	movwf	command_builder3@data2+1,c
  2721  001730  0E60               	movlw	low com_command_setPower@temp
  2722  001732  6E25               	movwf	command_builder3@data3,c
  2723  001734  0E00               	movlw	high com_command_setPower@temp
  2724  001736  6E26               	movwf	command_builder3@data3+1,c
  2725  001738  ECB7  F008         	call	_command_builder3	;wreg free
  2726  00173C  0012               	return	
  2727  00173E                     __end_of_com_command_setPower:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postinc1	equ	0xFE6
  2739                           postdec1	equ	0xFE5
  2740                           fsr1h	equ	0xFE2
  2741                           fsr1l	equ	0xFE1
  2742                           indf2	equ	0xFDF
  2743                           postinc2	equ	0xFDE
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _receive_data *****************
  2749 ;; Defined at:
  2750 ;;		line 217 in file "SlaveComm_PIC18.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2753 ;;		 -> communications@receive_buffer(42), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  data            1   24[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      enum E6751
  2758 ;; Registers used:
  2759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2765 ;;      Params:         2       0       0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0       0       0
  2768 ;;      Totals:         4       0       0       0       0       0       0
  2769 ;;Total ram usage:        4 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    2
  2772 ;; This function calls:
  2773 ;;		_SPI_receive_data
  2774 ;; This function is called by:
  2775 ;;		_communications
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text13
  2780  000FF8                     __ptext13:
  2781                           	opt stack 0
  2782  000FF8                     _receive_data:
  2783                           	opt stack 27
  2784                           
  2785                           ;SlaveComm_PIC18.c: 219: char data;
  2786                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2787                           ;SlaveComm_PIC18.c: 223: if (my_status == receive_end_command)
  2788                           
  2789                           ;incstack = 0
  2790  000FF8  0E02               	movlw	2
  2791  000FFA  183A               	xorwf	receive_data@my_status,w,c
  2792  000FFC  A4D8               	btfss	status,2,c
  2793  000FFE  D002               	goto	l328
  2794                           
  2795                           ;SlaveComm_PIC18.c: 224: {
  2796                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2797  001000  0E00               	movlw	0
  2798  001002  6E3A               	movwf	receive_data@my_status,c
  2799  001004                     l328:
  2800                           
  2801                           ;SlaveComm_PIC18.c: 226: }
  2802                           ;SlaveComm_PIC18.c: 228: if (SPI_receive_data(&data) == 1)
  2803  001004  0E19               	movlw	low receive_data@data
  2804  001006  6E13               	movwf	SPI_receive_data@data,c
  2805  001008  0E00               	movlw	high receive_data@data
  2806  00100A  6E14               	movwf	SPI_receive_data@data+1,c
  2807  00100C  EC31  F00C         	call	_SPI_receive_data	;wreg free
  2808  001010  06E8               	decf	wreg,f,c
  2809  001012  A4D8               	btfss	status,2,c
  2810  001014  D04F               	goto	l334
  2811                           
  2812                           ;SlaveComm_PIC18.c: 234: }
  2813                           ;SlaveComm_PIC18.c: 236: if ((data == '!') && (my_status != receive_in_command))
  2814                           
  2815                           ;SlaveComm_PIC18.c: 232: {
  2816  001016  0E21               	movlw	33
  2817  001018  1819               	xorwf	receive_data@data,w,c
  2818  00101A  A4D8               	btfss	status,2,c
  2819  00101C  D015               	goto	l331
  2820  00101E  043A               	decf	receive_data@my_status,w,c
  2821  001020  B4D8               	btfsc	status,2,c
  2822  001022  D012               	goto	l331
  2823                           
  2824                           ;SlaveComm_PIC18.c: 237: {
  2825                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  2826  001024  0E01               	movlw	1
  2827  001026  6E3A               	movwf	receive_data@my_status,c
  2828                           
  2829                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  2830  001028  EE20 F029          	lfsr	2,41
  2831  00102C  5016               	movf	receive_data@receive_buffer,w,c
  2832  00102E  26D9               	addwf	fsr2l,f,c
  2833  001030  5017               	movf	receive_data@receive_buffer+1,w,c
  2834  001032  22DA               	addwfc	fsr2h,f,c
  2835  001034  0E00               	movlw	0
  2836  001036  6EDF               	movwf	indf2,c
  2837                           
  2838                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  2839  001038  EE20 F028          	lfsr	2,40
  2840  00103C  5016               	movf	receive_data@receive_buffer,w,c
  2841  00103E  26D9               	addwf	fsr2l,f,c
  2842  001040  5017               	movf	receive_data@receive_buffer+1,w,c
  2843  001042  22DA               	addwfc	fsr2h,f,c
  2844  001044  0E00               	movlw	0
  2845  001046  6EDF               	movwf	indf2,c
  2846  001048                     l331:
  2847                           
  2848                           ;SlaveComm_PIC18.c: 241: }
  2849                           ;SlaveComm_PIC18.c: 243: if (my_status == receive_in_command)
  2850  001048  043A               	decf	receive_data@my_status,w,c
  2851  00104A  A4D8               	btfss	status,2,c
  2852  00104C  D02A               	goto	l333
  2853                           
  2854                           ;SlaveComm_PIC18.c: 244: {
  2855                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2856  00104E  EE20 F028          	lfsr	2,40
  2857  001052  5016               	movf	receive_data@receive_buffer,w,c
  2858  001054  26D9               	addwf	fsr2l,f,c
  2859  001056  5017               	movf	receive_data@receive_buffer+1,w,c
  2860  001058  22DA               	addwfc	fsr2h,f,c
  2861  00105A  50DF               	movf	indf2,w,c
  2862  00105C  6E18               	movwf	??_receive_data& (0+255),c
  2863  00105E  5018               	movf	??_receive_data,w,c
  2864  001060  0D01               	mullw	1
  2865  001062  50F3               	movf	prodl,w,c
  2866  001064  2416               	addwf	receive_data@receive_buffer,w,c
  2867  001066  6ED9               	movwf	fsr2l,c
  2868  001068  50F4               	movf	prodh,w,c
  2869  00106A  2017               	addwfc	receive_data@receive_buffer+1,w,c
  2870  00106C  6EDA               	movwf	fsr2h,c
  2871  00106E  C019  FFDF         	movff	receive_data@data,indf2
  2872                           
  2873                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  2874  001072  EE20 F028          	lfsr	2,40
  2875  001076  5016               	movf	receive_data@receive_buffer,w,c
  2876  001078  26D9               	addwf	fsr2l,f,c
  2877  00107A  5017               	movf	receive_data@receive_buffer+1,w,c
  2878  00107C  22DA               	addwfc	fsr2h,f,c
  2879  00107E  2ADF               	incf	indf2,f,c
  2880                           
  2881                           ;SlaveComm_PIC18.c: 248: if (receive_buffer->write_position >= 40)
  2882  001080  EE20 F028          	lfsr	2,40
  2883  001084  5016               	movf	receive_data@receive_buffer,w,c
  2884  001086  26D9               	addwf	fsr2l,f,c
  2885  001088  5017               	movf	receive_data@receive_buffer+1,w,c
  2886  00108A  22DA               	addwfc	fsr2h,f,c
  2887  00108C  0E27               	movlw	39
  2888  00108E  64DF               	cpfsgt	indf2,c
  2889  001090  D008               	goto	l333
  2890                           
  2891                           ;SlaveComm_PIC18.c: 249: {
  2892                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  2893  001092  EE20 F028          	lfsr	2,40
  2894  001096  5016               	movf	receive_data@receive_buffer,w,c
  2895  001098  26D9               	addwf	fsr2l,f,c
  2896  00109A  5017               	movf	receive_data@receive_buffer+1,w,c
  2897  00109C  22DA               	addwfc	fsr2h,f,c
  2898  00109E  0E27               	movlw	39
  2899  0010A0  6EDF               	movwf	indf2,c
  2900  0010A2                     l333:
  2901                           
  2902                           ;SlaveComm_PIC18.c: 251: }
  2903                           ;SlaveComm_PIC18.c: 252: }
  2904                           ;SlaveComm_PIC18.c: 254: if ((my_status == receive_in_command) && (data == '*'))
  2905  0010A2  043A               	decf	receive_data@my_status,w,c
  2906  0010A4  A4D8               	btfss	status,2,c
  2907  0010A6  D006               	goto	l334
  2908  0010A8  0E2A               	movlw	42
  2909  0010AA  1819               	xorwf	receive_data@data,w,c
  2910  0010AC  A4D8               	btfss	status,2,c
  2911  0010AE  D002               	goto	l334
  2912                           
  2913                           ;SlaveComm_PIC18.c: 255: {
  2914                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  2915  0010B0  0E02               	movlw	2
  2916  0010B2  6E3A               	movwf	receive_data@my_status,c
  2917  0010B4                     l334:
  2918                           
  2919                           ;SlaveComm_PIC18.c: 257: }
  2920                           ;SlaveComm_PIC18.c: 258: }
  2921                           ;SlaveComm_PIC18.c: 260: return my_status;
  2922  0010B4  503A               	movf	receive_data@my_status,w,c
  2923  0010B6  0012               	return	
  2924  0010B8                     __end_of_receive_data:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           postinc1	equ	0xFE6
  2936                           postdec1	equ	0xFE5
  2937                           fsr1h	equ	0xFE2
  2938                           fsr1l	equ	0xFE1
  2939                           indf2	equ	0xFDF
  2940                           postinc2	equ	0xFDE
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           status	equ	0xFD8
  2944                           
  2945 ;; *************** function _SPI_receive_data *****************
  2946 ;; Defined at:
  2947 ;;		line 586 in file "SlaveComm_PIC18.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  data            2   18[COMRAM] PTR unsigned char 
  2950 ;;		 -> receive_data@data(1), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  recvGood        1   20[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      unsigned char 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr2l, fsr2h, status,2
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2962 ;;      Params:         2       0       0       0       0       0       0
  2963 ;;      Locals:         1       0       0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0
  2965 ;;      Totals:         3       0       0       0       0       0       0
  2966 ;;Total ram usage:        3 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_receive_data
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text14
  2977  001862                     __ptext14:
  2978                           	opt stack 0
  2979  001862                     _SPI_receive_data:
  2980                           	opt stack 27
  2981                           
  2982                           ;SlaveComm_PIC18.c: 589: bool recvGood = 0;
  2983                           
  2984                           ;incstack = 0
  2985  001862  0E00               	movlw	0
  2986  001864  6E15               	movwf	SPI_receive_data@recvGood,c
  2987                           
  2988                           ;SlaveComm_PIC18.c: 591: if (SSP2STATbits.BF == 1)
  2989  001866  A06D               	btfss	3949,0,c	;volatile
  2990  001868  D00C               	goto	l436
  2991                           
  2992                           ;SlaveComm_PIC18.c: 592: {
  2993                           ;SlaveComm_PIC18.c: 593: *data = SSP2BUF;
  2994  00186A  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  2995  00186E  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2996  001872  CF6F FFDF          	movff	3951,indf2	;volatile
  2997                           
  2998                           ;SlaveComm_PIC18.c: 594: recvGood = 1;
  2999  001876  0E01               	movlw	1
  3000  001878  6E15               	movwf	SPI_receive_data@recvGood,c
  3001                           
  3002                           ;SlaveComm_PIC18.c: 595: SSP2CON1bits.WCOL = 0;
  3003  00187A  9E6C               	bcf	3948,7,c	;volatile
  3004                           
  3005                           ;SlaveComm_PIC18.c: 596: SPI_transmit_wait = 0;
  3006  00187C  0E00               	movlw	0
  3007  00187E  6E3E               	movwf	_SPI_transmit_wait,c
  3008                           
  3009                           ;SlaveComm_PIC18.c: 597: }
  3010  001880  D002               	goto	l437
  3011  001882                     l436:
  3012                           
  3013                           ;SlaveComm_PIC18.c: 598: else
  3014                           ;SlaveComm_PIC18.c: 599: {
  3015                           ;SlaveComm_PIC18.c: 600: recvGood = 0;
  3016  001882  0E00               	movlw	0
  3017  001884  6E15               	movwf	SPI_receive_data@recvGood,c
  3018  001886                     l437:
  3019                           
  3020                           ;SlaveComm_PIC18.c: 601: }
  3021                           ;SlaveComm_PIC18.c: 603: return recvGood;
  3022  001886  5015               	movf	SPI_receive_data@recvGood,w,c
  3023  001888  0012               	return	
  3024  00188A                     __end_of_SPI_receive_data:
  3025                           	opt stack 0
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           prodh	equ	0xFF4
  3031                           prodl	equ	0xFF3
  3032                           intcon	equ	0xFF2
  3033                           postinc0	equ	0xFEE
  3034                           wreg	equ	0xFE8
  3035                           postinc1	equ	0xFE6
  3036                           postdec1	equ	0xFE5
  3037                           fsr1h	equ	0xFE2
  3038                           fsr1l	equ	0xFE1
  3039                           indf2	equ	0xFDF
  3040                           postinc2	equ	0xFDE
  3041                           fsr2h	equ	0xFDA
  3042                           fsr2l	equ	0xFD9
  3043                           status	equ	0xFD8
  3044                           
  3045 ;; *************** function _process_data *****************
  3046 ;; Defined at:
  3047 ;;		line 263 in file "SlaveComm_PIC18.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  receive_buff    2   12[BANK0 ] PTR struct buffer
  3050 ;;		 -> communications@receive_buffer(42), 
  3051 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  3052 ;;		 -> communications@send_buffer(42), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  parameters     50   16[BANK0 ] unsigned char [10][5]
  3055 ;;  end_of_trans    1   66[BANK0 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3065 ;;      Params:         0       4       0       0       0       0       0
  3066 ;;      Locals:         0      51       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0
  3068 ;;      Totals:         0      55       0       0       0       0       0
  3069 ;;Total ram usage:       55 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    6
  3072 ;; This function calls:
  3073 ;;		_process_data_parameterize
  3074 ;;		_process_data_parameters
  3075 ;; This function is called by:
  3076 ;;		_communications
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text15
  3081  001802                     __ptext15:
  3082                           	opt stack 0
  3083  001802                     _process_data:
  3084                           	opt stack 23
  3085                           
  3086                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  3087                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  3088                           ;SlaveComm_PIC18.c: 272: process_data_parameterize(parameters, receive_buffer);
  3089                           
  3090                           ;incstack = 0
  3091  001802  0E70               	movlw	low process_data@parameters
  3092  001804  6E19               	movwf	process_data_parameterize@parameters,c
  3093  001806  0E00               	movlw	high process_data@parameters
  3094  001808  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3095  00180A  C06C  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3096  00180E  C06D  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3097  001812  ECB1  F005         	call	_process_data_parameterize	;wreg free
  3098                           
  3099                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3100  001816  0E70               	movlw	low process_data@parameters
  3101  001818  6E2F               	movwf	process_data_parameters@parameters,c
  3102  00181A  0E00               	movlw	high process_data@parameters
  3103  00181C  6E30               	movwf	process_data_parameters@parameters+1,c
  3104  00181E  C06E  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3105  001822  C06F  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3106  001826  EC30  F003         	call	_process_data_parameters	;wreg free
  3107  00182A  0100               	movlb	0	; () banked
  3108  00182C  6FA2               	movwf	process_data@end_of_transmission_received& (0+255),b
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  3112  00182E  51A2               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3113  001830  0012               	return	
  3114  001832                     __end_of_process_data:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           postinc1	equ	0xFE6
  3126                           postdec1	equ	0xFE5
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8
  3134                           
  3135 ;; *************** function _process_data_parameters *****************
  3136 ;; Defined at:
  3137 ;;		line 339 in file "SlaveComm_PIC18.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  3140 ;;		 -> process_data@parameters(50), 
  3141 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  3142 ;;		 -> communications@send_buffer(42), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3154 ;;      Params:         4       0       0       0       0       0       0
  3155 ;;      Locals:         1       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0
  3157 ;;      Totals:         5       0       0       0       0       0       0
  3158 ;;Total ram usage:        5 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    5
  3161 ;; This function calls:
  3162 ;;		_atol
  3163 ;;		_com_command_setEnergyUsed
  3164 ;;		_command_builder3
  3165 ;;		_send_end_of_transmission
  3166 ;;		_strmatch
  3167 ;; This function is called by:
  3168 ;;		_process_data
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text16
  3173  000660                     __ptext16:
  3174                           	opt stack 0
  3175  000660                     _process_data_parameters:
  3176                           	opt stack 23
  3177                           
  3178                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;incstack = 0
  3182  000660  0E00               	movlw	0
  3183  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3184                           
  3185                           ;SlaveComm_PIC18.c: 344: if (strmatch(parameters[0], "END") == 1)
  3186  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3187  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3188  00066C  0E4F               	movlw	low STR_1
  3189  00066E  6E20               	movwf	strmatch@b,c
  3190  000670  0E06               	movlw	high STR_1
  3191  000672  6E21               	movwf	strmatch@b+1,c
  3192  000674  EC19  F00C         	call	_strmatch	;wreg free
  3193  000678  06E8               	decf	wreg,f,c
  3194  00067A  A4D8               	btfss	status,2,c
  3195  00067C  D003               	goto	l358
  3196                           
  3197                           ;SlaveComm_PIC18.c: 345: {
  3198                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  3199  00067E  0E01               	movlw	1
  3200  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3201                           
  3202                           ;SlaveComm_PIC18.c: 356: }
  3203  000682  D13F               	goto	l384
  3204  000684                     l358:
  3205                           
  3206                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Set") == 1)
  3207  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3208  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3209  00068C  0E57               	movlw	low STR_2
  3210  00068E  6E20               	movwf	strmatch@b,c
  3211  000690  0E06               	movlw	high STR_2
  3212  000692  6E21               	movwf	strmatch@b+1,c
  3213  000694  EC19  F00C         	call	_strmatch	;wreg free
  3214  000698  06E8               	decf	wreg,f,c
  3215  00069A  A4D8               	btfss	status,2,c
  3216  00069C  D035               	goto	l360
  3217                           
  3218                           ;SlaveComm_PIC18.c: 358: {
  3219                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "Calibration") == 1)
  3220  00069E  0E0A               	movlw	10
  3221  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3222  0006A2  6E1E               	movwf	strmatch@a,c
  3223  0006A4  0E00               	movlw	0
  3224  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3225  0006A8  6E1F               	movwf	strmatch@a+1,c
  3226  0006AA  0E01               	movlw	low STR_3
  3227  0006AC  6E20               	movwf	strmatch@b,c
  3228  0006AE  0E06               	movlw	high STR_3
  3229  0006B0  6E21               	movwf	strmatch@b+1,c
  3230  0006B2  EC19  F00C         	call	_strmatch	;wreg free
  3231  0006B6  06E8               	decf	wreg,f,c
  3232  0006B8  B4D8               	btfsc	status,2,c
  3233  0006BA  D123               	goto	l384
  3234                           
  3235                           ;SlaveComm_PIC18.c: 363: else if (strmatch(parameters[1], "EnUsed") == 1)
  3236                           
  3237                           ;SlaveComm_PIC18.c: 360: {
  3238                           ;SlaveComm_PIC18.c: 362: }
  3239  0006BC  0E0A               	movlw	10
  3240  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3241  0006C0  6E1E               	movwf	strmatch@a,c
  3242  0006C2  0E00               	movlw	0
  3243  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3244  0006C6  6E1F               	movwf	strmatch@a+1,c
  3245  0006C8  0E17               	movlw	low STR_4
  3246  0006CA  6E20               	movwf	strmatch@b,c
  3247  0006CC  0E06               	movlw	high STR_4
  3248  0006CE  6E21               	movwf	strmatch@b+1,c
  3249  0006D0  EC19  F00C         	call	_strmatch	;wreg free
  3250  0006D4  06E8               	decf	wreg,f,c
  3251  0006D6  A4D8               	btfss	status,2,c
  3252  0006D8  D114               	goto	l384
  3253                           
  3254                           ;SlaveComm_PIC18.c: 364: {
  3255                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol(parameters[2]);
  3256  0006DA  0E14               	movlw	20
  3257  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3258  0006DE  6E1F               	movwf	atol@s,c
  3259  0006E0  0E00               	movlw	0
  3260  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3261  0006E4  6E20               	movwf	atol@s+1,c
  3262  0006E6  EC82  F007         	call	_atol	;wreg free
  3263  0006EA  C01F  F0B0         	movff	?_atol,_meterEnergyUsed
  3264  0006EE  C020  F0B1         	movff	?_atol+1,_meterEnergyUsed+1
  3265  0006F2  C021  F0B2         	movff	?_atol+2,_meterEnergyUsed+2
  3266  0006F6  C022  F0B3         	movff	?_atol+3,_meterEnergyUsed+3
  3267                           
  3268                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed(send_buffer);
  3269  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3270  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3271  000702  EC9F  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3272                           
  3273                           ;SlaveComm_PIC18.c: 371: }
  3274                           ;SlaveComm_PIC18.c: 376: }
  3275  000706  D0FD               	goto	l384
  3276  000708                     l360:
  3277                           
  3278                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[0], "Read") == 1)
  3279  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3280  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3281  000710  0E34               	movlw	low STR_5
  3282  000712  6E20               	movwf	strmatch@b,c
  3283  000714  0E06               	movlw	high STR_5
  3284  000716  6E21               	movwf	strmatch@b+1,c
  3285  000718  EC19  F00C         	call	_strmatch	;wreg free
  3286  00071C  06E8               	decf	wreg,f,c
  3287  00071E  B4D8               	btfsc	status,2,c
  3288  000720  D0F0               	goto	l384
  3289                           
  3290                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[0], "Data") == 1)
  3291                           
  3292                           ;SlaveComm_PIC18.c: 378: {
  3293                           ;SlaveComm_PIC18.c: 380: }
  3294  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3295  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3296  00072A  0E2F               	movlw	low STR_6
  3297  00072C  6E20               	movwf	strmatch@b,c
  3298  00072E  0E06               	movlw	high STR_6
  3299  000730  6E21               	movwf	strmatch@b+1,c
  3300  000732  EC19  F00C         	call	_strmatch	;wreg free
  3301  000736  06E8               	decf	wreg,f,c
  3302  000738  A4D8               	btfss	status,2,c
  3303  00073A  D053               	goto	l367
  3304                           
  3305                           ;SlaveComm_PIC18.c: 382: {
  3306                           ;SlaveComm_PIC18.c: 383: if (strmatch(parameters[1], "LEDB") == 1)
  3307  00073C  0E0A               	movlw	10
  3308  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  3309  000740  6E1E               	movwf	strmatch@a,c
  3310  000742  0E00               	movlw	0
  3311  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3312  000746  6E1F               	movwf	strmatch@a+1,c
  3313  000748  0E2A               	movlw	low STR_7
  3314  00074A  6E20               	movwf	strmatch@b,c
  3315  00074C  0E06               	movlw	high STR_7
  3316  00074E  6E21               	movwf	strmatch@b+1,c
  3317  000750  EC19  F00C         	call	_strmatch	;wreg free
  3318  000754  06E8               	decf	wreg,f,c
  3319  000756  A4D8               	btfss	status,2,c
  3320  000758  D0D4               	goto	l384
  3321                           
  3322                           ;SlaveComm_PIC18.c: 384: {
  3323                           ;SlaveComm_PIC18.c: 385: if (strmatch(parameters[2], "On") == 1)
  3324  00075A  0E14               	movlw	20
  3325  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  3326  00075E  6E1E               	movwf	strmatch@a,c
  3327  000760  0E00               	movlw	0
  3328  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3329  000764  6E1F               	movwf	strmatch@a+1,c
  3330  000766  0E5B               	movlw	low STR_8
  3331  000768  6E20               	movwf	strmatch@b,c
  3332  00076A  0E06               	movlw	high STR_8
  3333  00076C  6E21               	movwf	strmatch@b+1,c
  3334  00076E  EC19  F00C         	call	_strmatch	;wreg free
  3335  000772  06E8               	decf	wreg,f,c
  3336  000774  A4D8               	btfss	status,2,c
  3337  000776  D013               	goto	l369
  3338                           
  3339                           ;SlaveComm_PIC18.c: 386: {
  3340                           ;SlaveComm_PIC18.c: 387: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3341  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3342  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3343  000780  0E57               	movlw	low STR_2
  3344  000782  6E21               	movwf	command_builder3@data1,c
  3345  000784  0E06               	movlw	high STR_2
  3346  000786  6E22               	movwf	command_builder3@data1+1,c
  3347  000788  0E2A               	movlw	low STR_7
  3348  00078A  6E23               	movwf	command_builder3@data2,c
  3349  00078C  0E06               	movlw	high STR_7
  3350  00078E  6E24               	movwf	command_builder3@data2+1,c
  3351  000790  0E53               	movlw	low STR_11
  3352  000792  6E25               	movwf	command_builder3@data3,c
  3353  000794  0E06               	movlw	high STR_11
  3354  000796  6E26               	movwf	command_builder3@data3+1,c
  3355  000798  ECB7  F008         	call	_command_builder3	;wreg free
  3356                           
  3357                           ;SlaveComm_PIC18.c: 388: }
  3358  00079C  D0B2               	goto	l384
  3359  00079E                     l369:
  3360                           
  3361                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[2], "Off") == 1)
  3362  00079E  0E14               	movlw	20
  3363  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  3364  0007A2  6E1E               	movwf	strmatch@a,c
  3365  0007A4  0E00               	movlw	0
  3366  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3367  0007A8  6E1F               	movwf	strmatch@a+1,c
  3368  0007AA  0E53               	movlw	low STR_11
  3369  0007AC  6E20               	movwf	strmatch@b,c
  3370  0007AE  0E06               	movlw	high STR_11
  3371  0007B0  6E21               	movwf	strmatch@b+1,c
  3372  0007B2  EC19  F00C         	call	_strmatch	;wreg free
  3373  0007B6  06E8               	decf	wreg,f,c
  3374  0007B8  A4D8               	btfss	status,2,c
  3375  0007BA  D0A3               	goto	l384
  3376                           
  3377                           ;SlaveComm_PIC18.c: 390: {
  3378                           ;SlaveComm_PIC18.c: 391: command_builder3(send_buffer, "Set", "LEDB", "On");
  3379  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3380  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3381  0007C4  0E57               	movlw	low STR_2
  3382  0007C6  6E21               	movwf	command_builder3@data1,c
  3383  0007C8  0E06               	movlw	high STR_2
  3384  0007CA  6E22               	movwf	command_builder3@data1+1,c
  3385  0007CC  0E2A               	movlw	low STR_7
  3386  0007CE  6E23               	movwf	command_builder3@data2,c
  3387  0007D0  0E06               	movlw	high STR_7
  3388  0007D2  6E24               	movwf	command_builder3@data2+1,c
  3389  0007D4  0E5B               	movlw	low STR_8
  3390  0007D6  6E25               	movwf	command_builder3@data3,c
  3391  0007D8  0E06               	movlw	high STR_8
  3392  0007DA  6E26               	movwf	command_builder3@data3+1,c
  3393  0007DC  ECB7  F008         	call	_command_builder3	;wreg free
  3394                           
  3395                           ;SlaveComm_PIC18.c: 392: }
  3396                           ;SlaveComm_PIC18.c: 393: }
  3397                           ;SlaveComm_PIC18.c: 394: }
  3398  0007E0  D090               	goto	l384
  3399  0007E2                     l367:
  3400                           
  3401                           ;SlaveComm_PIC18.c: 395: else if (strmatch(parameters[0], "Conf") == 1)
  3402  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3403  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3404  0007EA  0E39               	movlw	low STR_16
  3405  0007EC  6E20               	movwf	strmatch@b,c
  3406  0007EE  0E06               	movlw	high STR_16
  3407  0007F0  6E21               	movwf	strmatch@b+1,c
  3408  0007F2  EC19  F00C         	call	_strmatch	;wreg free
  3409  0007F6  06E8               	decf	wreg,f,c
  3410  0007F8  A4D8               	btfss	status,2,c
  3411  0007FA  D083               	goto	l384
  3412                           
  3413                           ;SlaveComm_PIC18.c: 396: {
  3414                           ;SlaveComm_PIC18.c: 397: if (strmatch(parameters[1], "LEDB") == 1)
  3415  0007FC  0E0A               	movlw	10
  3416  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  3417  000800  6E1E               	movwf	strmatch@a,c
  3418  000802  0E00               	movlw	0
  3419  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3420  000806  6E1F               	movwf	strmatch@a+1,c
  3421  000808  0E2A               	movlw	low STR_7
  3422  00080A  6E20               	movwf	strmatch@b,c
  3423  00080C  0E06               	movlw	high STR_7
  3424  00080E  6E21               	movwf	strmatch@b+1,c
  3425  000810  EC19  F00C         	call	_strmatch	;wreg free
  3426  000814  06E8               	decf	wreg,f,c
  3427  000816  A4D8               	btfss	status,2,c
  3428  000818  D007               	goto	l374
  3429                           
  3430                           ;SlaveComm_PIC18.c: 398: {
  3431                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission(send_buffer);
  3432  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3433  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3434  000822  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3435                           
  3436                           ;SlaveComm_PIC18.c: 400: }
  3437  000826  D06D               	goto	l384
  3438  000828                     l374:
  3439                           
  3440                           ;SlaveComm_PIC18.c: 401: else if (strmatch(parameters[1], "Watts") == 1)
  3441  000828  0E0A               	movlw	10
  3442  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  3443  00082C  6E1E               	movwf	strmatch@a,c
  3444  00082E  0E00               	movlw	0
  3445  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3446  000832  6E1F               	movwf	strmatch@a+1,c
  3447  000834  0E24               	movlw	low STR_18
  3448  000836  6E20               	movwf	strmatch@b,c
  3449  000838  0E06               	movlw	high STR_18
  3450  00083A  6E21               	movwf	strmatch@b+1,c
  3451  00083C  EC19  F00C         	call	_strmatch	;wreg free
  3452  000840  06E8               	decf	wreg,f,c
  3453  000842  A4D8               	btfss	status,2,c
  3454  000844  D007               	goto	l376
  3455                           
  3456                           ;SlaveComm_PIC18.c: 402: {
  3457                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission(send_buffer);
  3458  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3459  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3460  00084E  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3461                           
  3462                           ;SlaveComm_PIC18.c: 404: }
  3463  000852  D057               	goto	l384
  3464  000854                     l376:
  3465                           
  3466                           ;SlaveComm_PIC18.c: 405: else if (strmatch(parameters[1], "EnUsed") == 1)
  3467  000854  0E0A               	movlw	10
  3468  000856  242F               	addwf	process_data_parameters@parameters,w,c
  3469  000858  6E1E               	movwf	strmatch@a,c
  3470  00085A  0E00               	movlw	0
  3471  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3472  00085E  6E1F               	movwf	strmatch@a+1,c
  3473  000860  0E17               	movlw	low STR_4
  3474  000862  6E20               	movwf	strmatch@b,c
  3475  000864  0E06               	movlw	high STR_4
  3476  000866  6E21               	movwf	strmatch@b+1,c
  3477  000868  EC19  F00C         	call	_strmatch	;wreg free
  3478  00086C  06E8               	decf	wreg,f,c
  3479  00086E  A4D8               	btfss	status,2,c
  3480  000870  D007               	goto	l378
  3481                           
  3482                           ;SlaveComm_PIC18.c: 406: {
  3483                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission(send_buffer);
  3484  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3485  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3486  00087A  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3487                           
  3488                           ;SlaveComm_PIC18.c: 408: }
  3489  00087E  D041               	goto	l384
  3490  000880                     l378:
  3491                           
  3492                           ;SlaveComm_PIC18.c: 409: else if (strmatch(parameters[1], "Volts") == 1)
  3493  000880  0E0A               	movlw	10
  3494  000882  242F               	addwf	process_data_parameters@parameters,w,c
  3495  000884  6E1E               	movwf	strmatch@a,c
  3496  000886  0E00               	movlw	0
  3497  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3498  00088A  6E1F               	movwf	strmatch@a+1,c
  3499  00088C  0E1E               	movlw	low STR_20
  3500  00088E  6E20               	movwf	strmatch@b,c
  3501  000890  0E06               	movlw	high STR_20
  3502  000892  6E21               	movwf	strmatch@b+1,c
  3503  000894  EC19  F00C         	call	_strmatch	;wreg free
  3504  000898  06E8               	decf	wreg,f,c
  3505  00089A  A4D8               	btfss	status,2,c
  3506  00089C  D007               	goto	l380
  3507                           
  3508                           ;SlaveComm_PIC18.c: 410: {
  3509                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission(send_buffer);
  3510  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3511  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3512  0008A6  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3513                           
  3514                           ;SlaveComm_PIC18.c: 412: }
  3515  0008AA  D02B               	goto	l384
  3516  0008AC                     l380:
  3517                           
  3518                           ;SlaveComm_PIC18.c: 413: else if (strmatch(parameters[1], "Amps") == 1)
  3519  0008AC  0E0A               	movlw	10
  3520  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  3521  0008B0  6E1E               	movwf	strmatch@a,c
  3522  0008B2  0E00               	movlw	0
  3523  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3524  0008B6  6E1F               	movwf	strmatch@a+1,c
  3525  0008B8  0E3E               	movlw	low STR_21
  3526  0008BA  6E20               	movwf	strmatch@b,c
  3527  0008BC  0E06               	movlw	high STR_21
  3528  0008BE  6E21               	movwf	strmatch@b+1,c
  3529  0008C0  EC19  F00C         	call	_strmatch	;wreg free
  3530  0008C4  06E8               	decf	wreg,f,c
  3531  0008C6  A4D8               	btfss	status,2,c
  3532  0008C8  D007               	goto	l382
  3533                           
  3534                           ;SlaveComm_PIC18.c: 414: {
  3535                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission(send_buffer);
  3536  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3537  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3538  0008D2  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3539                           
  3540                           ;SlaveComm_PIC18.c: 416: }
  3541  0008D6  D015               	goto	l384
  3542  0008D8                     l382:
  3543                           
  3544                           ;SlaveComm_PIC18.c: 417: else if (strmatch(parameters[1], "PSVersion") == 1)
  3545  0008D8  0E0A               	movlw	10
  3546  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  3547  0008DC  6E1E               	movwf	strmatch@a,c
  3548  0008DE  0E00               	movlw	0
  3549  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3550  0008E2  6E1F               	movwf	strmatch@a+1,c
  3551  0008E4  0E0D               	movlw	low STR_22
  3552  0008E6  6E20               	movwf	strmatch@b,c
  3553  0008E8  0E06               	movlw	high STR_22
  3554  0008EA  6E21               	movwf	strmatch@b+1,c
  3555  0008EC  EC19  F00C         	call	_strmatch	;wreg free
  3556  0008F0  06E8               	decf	wreg,f,c
  3557  0008F2  A4D8               	btfss	status,2,c
  3558  0008F4  D006               	goto	l384
  3559                           
  3560                           ;SlaveComm_PIC18.c: 418: {
  3561                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission(send_buffer);
  3562  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3563  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3564  0008FE  ECA2  F00C         	call	_send_end_of_transmission	;wreg free
  3565  000902                     l384:
  3566                           
  3567                           ;SlaveComm_PIC18.c: 420: }
  3568                           ;SlaveComm_PIC18.c: 421: }
  3569                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3570  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  3571  000904  0012               	return	
  3572  000906                     __end_of_process_data_parameters:
  3573                           	opt stack 0
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postinc1	equ	0xFE6
  3584                           postdec1	equ	0xFE5
  3585                           fsr1h	equ	0xFE2
  3586                           fsr1l	equ	0xFE1
  3587                           indf2	equ	0xFDF
  3588                           postinc2	equ	0xFDE
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _strmatch *****************
  3594 ;; Defined at:
  3595 ;;		line 537 in file "SlaveComm_PIC18.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  a               2   29[COMRAM] PTR unsigned char 
  3598 ;;		 -> process_data@parameters(50), 
  3599 ;;  b               2   31[COMRAM] PTR unsigned char 
  3600 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3601 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3602 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3603 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  result          2   33[COMRAM] int 
  3606 ;;  match           1   35[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3616 ;;      Params:         4       0       0       0       0       0       0
  3617 ;;      Locals:         3       0       0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0
  3619 ;;      Totals:         7       0       0       0       0       0       0
  3620 ;;Total ram usage:        7 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    2
  3623 ;; This function calls:
  3624 ;;		_strcmp2
  3625 ;; This function is called by:
  3626 ;;		_process_data_parameters
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text17
  3631  001832                     __ptext17:
  3632                           	opt stack 0
  3633  001832                     _strmatch:
  3634                           	opt stack 25
  3635                           
  3636                           ;SlaveComm_PIC18.c: 539: int result;
  3637                           ;SlaveComm_PIC18.c: 540: bool match;
  3638                           ;SlaveComm_PIC18.c: 542: result = strcmp2(a, b);
  3639                           
  3640                           ;incstack = 0
  3641  001832  C01E  F013         	movff	strmatch@a,strcmp2@a
  3642  001836  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3643  00183A  C020  F015         	movff	strmatch@b,strcmp2@b
  3644  00183E  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3645  001842  EC71  F006         	call	_strcmp2	;wreg free
  3646  001846  C013  F022         	movff	?_strcmp2,strmatch@result
  3647  00184A  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3648                           
  3649                           ;SlaveComm_PIC18.c: 544: match = (result == 0) ? 1 : 0;
  3650  00184E  5022               	movf	strmatch@result,w,c
  3651  001850  1023               	iorwf	strmatch@result+1,w,c
  3652  001852  A4D8               	btfss	status,2,c
  3653  001854  D002               	goto	u2160
  3654  001856  0E01               	movlw	1
  3655  001858  D001               	goto	u2170
  3656  00185A                     u2160:
  3657  00185A  0E00               	movlw	0
  3658  00185C                     u2170:
  3659  00185C  6E24               	movwf	strmatch@match,c
  3660                           
  3661                           ;SlaveComm_PIC18.c: 546: return match;
  3662  00185E  5024               	movf	strmatch@match,w,c
  3663  001860  0012               	return	
  3664  001862                     __end_of_strmatch:
  3665                           	opt stack 0
  3666                           tblptru	equ	0xFF8
  3667                           tblptrh	equ	0xFF7
  3668                           tblptrl	equ	0xFF6
  3669                           tablat	equ	0xFF5
  3670                           prodh	equ	0xFF4
  3671                           prodl	equ	0xFF3
  3672                           intcon	equ	0xFF2
  3673                           postinc0	equ	0xFEE
  3674                           wreg	equ	0xFE8
  3675                           postinc1	equ	0xFE6
  3676                           postdec1	equ	0xFE5
  3677                           fsr1h	equ	0xFE2
  3678                           fsr1l	equ	0xFE1
  3679                           indf2	equ	0xFDF
  3680                           postinc2	equ	0xFDE
  3681                           fsr2h	equ	0xFDA
  3682                           fsr2l	equ	0xFD9
  3683                           status	equ	0xFD8
  3684                           
  3685 ;; *************** function _strcmp2 *****************
  3686 ;; Defined at:
  3687 ;;		line 549 in file "SlaveComm_PIC18.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;  a               2   18[COMRAM] PTR unsigned char 
  3690 ;;		 -> process_data@parameters(50), 
  3691 ;;  b               2   20[COMRAM] PTR unsigned char 
  3692 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3693 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3694 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3695 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  inx             2   27[COMRAM] int 
  3698 ;;  match           2   25[COMRAM] int 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  2   18[COMRAM] int 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3708 ;;      Params:         4       0       0       0       0       0       0
  3709 ;;      Locals:         4       0       0       0       0       0       0
  3710 ;;      Temps:          3       0       0       0       0       0       0
  3711 ;;      Totals:        11       0       0       0       0       0       0
  3712 ;;Total ram usage:       11 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_strmatch
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text18
  3723  000CE2                     __ptext18:
  3724                           	opt stack 0
  3725  000CE2                     _strcmp2:
  3726                           	opt stack 25
  3727                           
  3728                           ;SlaveComm_PIC18.c: 551: int inx = 0;
  3729                           
  3730                           ;incstack = 0
  3731  000CE2  0E00               	movlw	0
  3732  000CE4  6E1D               	movwf	strcmp2@inx+1,c
  3733  000CE6  0E00               	movlw	0
  3734  000CE8  6E1C               	movwf	strcmp2@inx,c
  3735                           
  3736                           ;SlaveComm_PIC18.c: 552: int match = 0;
  3737  000CEA  0E00               	movlw	0
  3738  000CEC  6E1B               	movwf	strcmp2@match+1,c
  3739  000CEE  0E00               	movlw	0
  3740  000CF0  6E1A               	movwf	strcmp2@match,c
  3741                           
  3742                           ;SlaveComm_PIC18.c: 554: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  3743  000CF2  D035               	goto	l420
  3744  000CF4                     
  3745                           ;SlaveComm_PIC18.c: 555: {
  3746                           ;SlaveComm_PIC18.c: 556: if (a[inx] > b[inx])
  3747  000CF4  501C               	movf	strcmp2@inx,w,c
  3748  000CF6  2413               	addwf	strcmp2@a,w,c
  3749  000CF8  6ED9               	movwf	fsr2l,c
  3750  000CFA  501D               	movf	strcmp2@inx+1,w,c
  3751  000CFC  2014               	addwfc	strcmp2@a+1,w,c
  3752  000CFE  6EDA               	movwf	fsr2h,c
  3753  000D00  501C               	movf	strcmp2@inx,w,c
  3754  000D02  2415               	addwf	strcmp2@b,w,c
  3755  000D04  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3756  000D06  501D               	movf	strcmp2@inx+1,w,c
  3757  000D08  2016               	addwfc	strcmp2@b+1,w,c
  3758  000D0A  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3759  000D0C  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3760  000D10  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3761  000D14                     	if	0	;tblptru may be non-zero
  3762  000D14                     	endif
  3763  000D14                     	if	0	;tblptru may be non-zero
  3764  000D14                     	endif
  3765  000D14  50DE               	movf	postinc2,w,c
  3766  000D16  0009               	tblrd		*+
  3767  000D18  5CF5               	subwf	tablat,w,c
  3768  000D1A  B0D8               	btfsc	status,0,c
  3769  000D1C  D005               	goto	l422
  3770                           
  3771                           ;SlaveComm_PIC18.c: 557: {
  3772                           ;SlaveComm_PIC18.c: 558: match = 1;
  3773  000D1E  0E00               	movlw	0
  3774  000D20  6E1B               	movwf	strcmp2@match+1,c
  3775  000D22  0E01               	movlw	1
  3776  000D24  6E1A               	movwf	strcmp2@match,c
  3777                           
  3778                           ;SlaveComm_PIC18.c: 559: }
  3779  000D26  D019               	goto	l424
  3780  000D28                     l422:
  3781                           
  3782                           ;SlaveComm_PIC18.c: 560: else if (a[inx] < b[inx])
  3783  000D28  501C               	movf	strcmp2@inx,w,c
  3784  000D2A  2413               	addwf	strcmp2@a,w,c
  3785  000D2C  6ED9               	movwf	fsr2l,c
  3786  000D2E  501D               	movf	strcmp2@inx+1,w,c
  3787  000D30  2014               	addwfc	strcmp2@a+1,w,c
  3788  000D32  6EDA               	movwf	fsr2h,c
  3789  000D34  50DF               	movf	indf2,w,c
  3790  000D36  6E17               	movwf	??_strcmp2& (0+255),c
  3791  000D38  501C               	movf	strcmp2@inx,w,c
  3792  000D3A  2415               	addwf	strcmp2@b,w,c
  3793  000D3C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3794  000D3E  501D               	movf	strcmp2@inx+1,w,c
  3795  000D40  2016               	addwfc	strcmp2@b+1,w,c
  3796  000D42  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3797  000D44  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3798  000D48  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3799  000D4C                     	if	0	;tblptru may be non-zero
  3800  000D4C                     	endif
  3801  000D4C                     	if	0	;tblptru may be non-zero
  3802  000D4C                     	endif
  3803  000D4C  0008               	tblrd		*
  3804  000D4E  50F5               	movf	tablat,w,c
  3805  000D50  5C17               	subwf	??_strcmp2,w,c
  3806  000D52  B0D8               	btfsc	status,0,c
  3807  000D54  D002               	goto	l424
  3808                           
  3809                           ;SlaveComm_PIC18.c: 561: {
  3810                           ;SlaveComm_PIC18.c: 562: match = -1;
  3811  000D56  681A               	setf	strcmp2@match,c
  3812  000D58  681B               	setf	strcmp2@match+1,c
  3813  000D5A                     l424:
  3814                           
  3815                           ;SlaveComm_PIC18.c: 567: }
  3816                           ;SlaveComm_PIC18.c: 569: inx++;
  3817                           
  3818                           ;SlaveComm_PIC18.c: 565: {
  3819  000D5A  4A1C               	infsnz	strcmp2@inx,f,c
  3820  000D5C  2A1D               	incf	strcmp2@inx+1,f,c
  3821  000D5E                     l420:
  3822  000D5E  501C               	movf	strcmp2@inx,w,c
  3823  000D60  2413               	addwf	strcmp2@a,w,c
  3824  000D62  6ED9               	movwf	fsr2l,c
  3825  000D64  501D               	movf	strcmp2@inx+1,w,c
  3826  000D66  2014               	addwfc	strcmp2@a+1,w,c
  3827  000D68  6EDA               	movwf	fsr2h,c
  3828  000D6A  50DF               	movf	indf2,w,c
  3829  000D6C  B4D8               	btfsc	status,2,c
  3830  000D6E  D013               	goto	u2040
  3831  000D70  501C               	movf	strcmp2@inx,w,c
  3832  000D72  2415               	addwf	strcmp2@b,w,c
  3833  000D74  6E17               	movwf	??_strcmp2& (0+255),c
  3834  000D76  501D               	movf	strcmp2@inx+1,w,c
  3835  000D78  2016               	addwfc	strcmp2@b+1,w,c
  3836  000D7A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3837  000D7C  C017  FFF6         	movff	??_strcmp2,tblptrl
  3838  000D80  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3839  000D84                     	if	0	;tblptru may be non-zero
  3840  000D84                     	endif
  3841  000D84                     	if	0	;tblptru may be non-zero
  3842  000D84                     	endif
  3843  000D84  0008               	tblrd		*
  3844  000D86  50F5               	movf	tablat,w,c
  3845  000D88  0900               	iorlw	0
  3846  000D8A  B4D8               	btfsc	status,2,c
  3847  000D8C  D004               	goto	u2040
  3848  000D8E  501A               	movf	strcmp2@match,w,c
  3849  000D90  101B               	iorwf	strcmp2@match+1,w,c
  3850  000D92  B4D8               	btfsc	status,2,c
  3851  000D94  D7AF               	goto	l421
  3852  000D96                     u2040:
  3853                           
  3854                           ;SlaveComm_PIC18.c: 570: }
  3855                           ;SlaveComm_PIC18.c: 573: if ((a[inx] == '\0') && (b[inx] != '\0'))
  3856  000D96  501C               	movf	strcmp2@inx,w,c
  3857  000D98  2413               	addwf	strcmp2@a,w,c
  3858  000D9A  6ED9               	movwf	fsr2l,c
  3859  000D9C  501D               	movf	strcmp2@inx+1,w,c
  3860  000D9E  2014               	addwfc	strcmp2@a+1,w,c
  3861  000DA0  6EDA               	movwf	fsr2h,c
  3862  000DA2  50DF               	movf	indf2,w,c
  3863  000DA4  A4D8               	btfss	status,2,c
  3864  000DA6  D012               	goto	l430
  3865  000DA8  501C               	movf	strcmp2@inx,w,c
  3866  000DAA  2415               	addwf	strcmp2@b,w,c
  3867  000DAC  6E17               	movwf	??_strcmp2& (0+255),c
  3868  000DAE  501D               	movf	strcmp2@inx+1,w,c
  3869  000DB0  2016               	addwfc	strcmp2@b+1,w,c
  3870  000DB2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3871  000DB4  C017  FFF6         	movff	??_strcmp2,tblptrl
  3872  000DB8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3873  000DBC                     	if	0	;tblptru may be non-zero
  3874  000DBC                     	endif
  3875  000DBC                     	if	0	;tblptru may be non-zero
  3876  000DBC                     	endif
  3877  000DBC  0008               	tblrd		*
  3878  000DBE  50F5               	movf	tablat,w,c
  3879  000DC0  0900               	iorlw	0
  3880  000DC2  B4D8               	btfsc	status,2,c
  3881  000DC4  D003               	goto	l430
  3882                           
  3883                           ;SlaveComm_PIC18.c: 574: {
  3884                           ;SlaveComm_PIC18.c: 575: match = -1;
  3885  000DC6  681A               	setf	strcmp2@match,c
  3886  000DC8  681B               	setf	strcmp2@match+1,c
  3887                           
  3888                           ;SlaveComm_PIC18.c: 576: }
  3889  000DCA  D01C               	goto	l432
  3890  000DCC                     l430:
  3891                           
  3892                           ;SlaveComm_PIC18.c: 577: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  3893  000DCC  501C               	movf	strcmp2@inx,w,c
  3894  000DCE  2413               	addwf	strcmp2@a,w,c
  3895  000DD0  6ED9               	movwf	fsr2l,c
  3896  000DD2  501D               	movf	strcmp2@inx+1,w,c
  3897  000DD4  2014               	addwfc	strcmp2@a+1,w,c
  3898  000DD6  6EDA               	movwf	fsr2h,c
  3899  000DD8  50DF               	movf	indf2,w,c
  3900  000DDA  B4D8               	btfsc	status,2,c
  3901  000DDC  D013               	goto	l432
  3902  000DDE  501C               	movf	strcmp2@inx,w,c
  3903  000DE0  2415               	addwf	strcmp2@b,w,c
  3904  000DE2  6E17               	movwf	??_strcmp2& (0+255),c
  3905  000DE4  501D               	movf	strcmp2@inx+1,w,c
  3906  000DE6  2016               	addwfc	strcmp2@b+1,w,c
  3907  000DE8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3908  000DEA  C017  FFF6         	movff	??_strcmp2,tblptrl
  3909  000DEE  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3910  000DF2                     	if	0	;tblptru may be non-zero
  3911  000DF2                     	endif
  3912  000DF2                     	if	0	;tblptru may be non-zero
  3913  000DF2                     	endif
  3914  000DF2  0008               	tblrd		*
  3915  000DF4  50F5               	movf	tablat,w,c
  3916  000DF6  0900               	iorlw	0
  3917  000DF8  A4D8               	btfss	status,2,c
  3918  000DFA  D004               	goto	l432
  3919                           
  3920                           ;SlaveComm_PIC18.c: 578: {
  3921                           ;SlaveComm_PIC18.c: 579: match = 1;
  3922  000DFC  0E00               	movlw	0
  3923  000DFE  6E1B               	movwf	strcmp2@match+1,c
  3924  000E00  0E01               	movlw	1
  3925  000E02  6E1A               	movwf	strcmp2@match,c
  3926  000E04                     l432:
  3927                           
  3928                           ;SlaveComm_PIC18.c: 580: }
  3929                           ;SlaveComm_PIC18.c: 582: return match;
  3930  000E04  C01A  F013         	movff	strcmp2@match,?_strcmp2
  3931  000E08  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  3932  000E0C  0012               	return	
  3933  000E0E                     __end_of_strcmp2:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           intcon	equ	0xFF2
  3942                           postinc0	equ	0xFEE
  3943                           wreg	equ	0xFE8
  3944                           postinc1	equ	0xFE6
  3945                           postdec1	equ	0xFE5
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           fsr2h	equ	0xFDA
  3951                           fsr2l	equ	0xFD9
  3952                           status	equ	0xFD8
  3953                           
  3954 ;; *************** function _send_end_of_transmission *****************
  3955 ;; Defined at:
  3956 ;;		line 628 in file "SlaveComm_PIC18.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  3959 ;;		 -> communications@send_buffer(42), 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3971 ;;      Params:         2       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0
  3974 ;;      Totals:         2       0       0       0       0       0       0
  3975 ;;Total ram usage:        2 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    4
  3978 ;; This function calls:
  3979 ;;		_command_builder1
  3980 ;; This function is called by:
  3981 ;;		_process_data_parameters
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text19
  3986  001944                     __ptext19:
  3987                           	opt stack 0
  3988  001944                     _send_end_of_transmission:
  3989                           	opt stack 23
  3990                           
  3991                           ;SlaveComm_PIC18.c: 630: command_builder1(send_buffer, "END");
  3992                           
  3993                           ;incstack = 0
  3994  001944  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3995  001948  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3996  00194C  0E4F               	movlw	low STR_1
  3997  00194E  6E21               	movwf	command_builder1@data1,c
  3998  001950  0E06               	movlw	high STR_1
  3999  001952  6E22               	movwf	command_builder1@data1+1,c
  4000  001954  ECD4  F00A         	call	_command_builder1	;wreg free
  4001  001958  0012               	return	
  4002  00195A                     __end_of_send_end_of_transmission:
  4003                           	opt stack 0
  4004                           tblptru	equ	0xFF8
  4005                           tblptrh	equ	0xFF7
  4006                           tblptrl	equ	0xFF6
  4007                           tablat	equ	0xFF5
  4008                           prodh	equ	0xFF4
  4009                           prodl	equ	0xFF3
  4010                           intcon	equ	0xFF2
  4011                           postinc0	equ	0xFEE
  4012                           wreg	equ	0xFE8
  4013                           postinc1	equ	0xFE6
  4014                           postdec1	equ	0xFE5
  4015                           fsr1h	equ	0xFE2
  4016                           fsr1l	equ	0xFE1
  4017                           indf2	equ	0xFDF
  4018                           postinc2	equ	0xFDE
  4019                           fsr2h	equ	0xFDA
  4020                           fsr2l	equ	0xFD9
  4021                           status	equ	0xFD8
  4022                           
  4023 ;; *************** function _command_builder1 *****************
  4024 ;; Defined at:
  4025 ;;		line 430 in file "SlaveComm_PIC18.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4028 ;;		 -> communications@send_buffer(42), 
  4029 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4030 ;;		 -> STR_23(4), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         4       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0
  4045 ;;      Totals:         4       0       0       0       0       0       0
  4046 ;;Total ram usage:        4 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    3
  4049 ;; This function calls:
  4050 ;;		_command_builder_add_char
  4051 ;;		_command_builder_add_string
  4052 ;; This function is called by:
  4053 ;;		_send_end_of_transmission
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text20
  4058  0015A8                     __ptext20:
  4059                           	opt stack 0
  4060  0015A8                     _command_builder1:
  4061                           	opt stack 23
  4062                           
  4063                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  4064                           
  4065                           ;incstack = 0
  4066  0015A8  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4067  0015AC  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4068  0015B0  0E23               	movlw	35
  4069  0015B2  6E15               	movwf	command_builder_add_char@data,c
  4070  0015B4  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4071                           
  4072                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  4073  0015B8  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4074  0015BC  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4075  0015C0  0E23               	movlw	35
  4076  0015C2  6E15               	movwf	command_builder_add_char@data,c
  4077  0015C4  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4078                           
  4079                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  4080  0015C8  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4081  0015CC  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4082  0015D0  0E21               	movlw	33
  4083  0015D2  6E15               	movwf	command_builder_add_char@data,c
  4084  0015D4  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4085                           
  4086                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  4087  0015D8  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4088  0015DC  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4089  0015E0  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4090  0015E4  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4091  0015E8  EC2A  F00A         	call	_command_builder_add_string	;wreg free
  4092                           
  4093                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, '*');
  4094  0015EC  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4095  0015F0  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4096  0015F4  0E2A               	movlw	42
  4097  0015F6  6E15               	movwf	command_builder_add_char@data,c
  4098  0015F8  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4099  0015FC  0012               	return	
  4100  0015FE                     __end_of_command_builder1:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           prodh	equ	0xFF4
  4107                           prodl	equ	0xFF3
  4108                           intcon	equ	0xFF2
  4109                           postinc0	equ	0xFEE
  4110                           wreg	equ	0xFE8
  4111                           postinc1	equ	0xFE6
  4112                           postdec1	equ	0xFE5
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           postinc2	equ	0xFDE
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _com_command_setEnergyUsed *****************
  4122 ;; Defined at:
  4123 ;;		line 665 in file "SlaveComm_PIC18.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4126 ;;		 -> communications@send_buffer(42), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         2       0       0       0       0       0       0
  4139 ;;      Locals:         0      12       0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0       0       0
  4141 ;;      Totals:         2      12       0       0       0       0       0
  4142 ;;Total ram usage:       14 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		_command_builder3
  4147 ;;		_ultoa
  4148 ;; This function is called by:
  4149 ;;		_resetCommunications
  4150 ;;		_process_data_parameters
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text21
  4155  00173E                     __ptext21:
  4156                           	opt stack 0
  4157  00173E                     _com_command_setEnergyUsed:
  4158                           	opt stack 24
  4159                           
  4160                           ;SlaveComm_PIC18.c: 667: char temp[12];
  4161                           ;SlaveComm_PIC18.c: 669: ultoa(temp, meterEnergyUsed, 10);
  4162                           
  4163                           ;incstack = 0
  4164  00173E  0E60               	movlw	low com_command_setEnergyUsed@temp
  4165  001740  6E20               	movwf	ultoa@buf,c
  4166  001742  0E00               	movlw	high com_command_setEnergyUsed@temp
  4167  001744  6E21               	movwf	ultoa@buf+1,c
  4168  001746  C0B0  F022         	movff	_meterEnergyUsed,ultoa@val
  4169  00174A  C0B1  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4170  00174E  C0B2  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4171  001752  C0B3  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4172  001756  0E00               	movlw	0
  4173  001758  6E27               	movwf	ultoa@base+1,c
  4174  00175A  0E0A               	movlw	10
  4175  00175C  6E26               	movwf	ultoa@base,c
  4176  00175E  EC07  F007         	call	_ultoa	;wreg free
  4177                           
  4178                           ;SlaveComm_PIC18.c: 672: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4179  001762  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4180  001766  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4181  00176A  0E57               	movlw	low STR_2
  4182  00176C  6E21               	movwf	command_builder3@data1,c
  4183  00176E  0E06               	movlw	high STR_2
  4184  001770  6E22               	movwf	command_builder3@data1+1,c
  4185  001772  0E17               	movlw	low STR_4
  4186  001774  6E23               	movwf	command_builder3@data2,c
  4187  001776  0E06               	movlw	high STR_4
  4188  001778  6E24               	movwf	command_builder3@data2+1,c
  4189  00177A  0E60               	movlw	low com_command_setEnergyUsed@temp
  4190  00177C  6E25               	movwf	command_builder3@data3,c
  4191  00177E  0E00               	movlw	high com_command_setEnergyUsed@temp
  4192  001780  6E26               	movwf	command_builder3@data3+1,c
  4193  001782  ECB7  F008         	call	_command_builder3	;wreg free
  4194  001786  0012               	return	
  4195  001788                     __end_of_com_command_setEnergyUsed:
  4196                           	opt stack 0
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           postinc0	equ	0xFEE
  4205                           wreg	equ	0xFE8
  4206                           postinc1	equ	0xFE6
  4207                           postdec1	equ	0xFE5
  4208                           fsr1h	equ	0xFE2
  4209                           fsr1l	equ	0xFE1
  4210                           indf2	equ	0xFDF
  4211                           postinc2	equ	0xFDE
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _ultoa *****************
  4217 ;; Defined at:
  4218 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4221 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4222 ;;  val             4   33[COMRAM] unsigned long 
  4223 ;;  base            2   37[COMRAM] int 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  v               4   39[COMRAM] unsigned long 
  4226 ;;  c               1   43[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   31[COMRAM] PTR unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:         8       0       0       0       0       0       0
  4237 ;;      Locals:         5       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0
  4239 ;;      Totals:        13       0       0       0       0       0       0
  4240 ;;Total ram usage:       13 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    2
  4243 ;; This function calls:
  4244 ;;		___lldiv
  4245 ;;		___llmod
  4246 ;; This function is called by:
  4247 ;;		_com_command_setPower
  4248 ;;		_com_command_setEnergyUsed
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text22
  4253  000E0E                     __ptext22:
  4254                           	opt stack 0
  4255  000E0E                     _ultoa:
  4256                           	opt stack 25
  4257                           
  4258                           ;incstack = 0
  4259  000E0E  C022  F028         	movff	ultoa@val,ultoa@v
  4260  000E12  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4261  000E16  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4262  000E1A  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4263  000E1E  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4264  000E22  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4265  000E26  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4266  000E2A  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4267  000E2E  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4268  000E32  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4269  000E36  0E00               	movlw	0
  4270  000E38  BE18               	btfsc	___lldiv@divisor+1,7,c
  4271  000E3A  0EFF               	movlw	-1
  4272  000E3C  6E19               	movwf	___lldiv@divisor+2,c
  4273  000E3E  6E1A               	movwf	___lldiv@divisor+3,c
  4274  000E40  ECE9  F009         	call	___lldiv	;wreg free
  4275  000E44  C013  F028         	movff	?___lldiv,ultoa@v
  4276  000E48  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4277  000E4C  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4278  000E50  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4279  000E54  4A20               	infsnz	ultoa@buf,f,c
  4280  000E56  2A21               	incf	ultoa@buf+1,f,c
  4281  000E58  5028               	movf	ultoa@v,w,c
  4282  000E5A  1029               	iorwf	ultoa@v+1,w,c
  4283  000E5C  102A               	iorwf	ultoa@v+2,w,c
  4284  000E5E  102B               	iorwf	ultoa@v+3,w,c
  4285  000E60  A4D8               	btfss	status,2,c
  4286  000E62  D7DD               	goto	l893
  4287  000E64  C020  FFD9         	movff	ultoa@buf,fsr2l
  4288  000E68  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4289  000E6C  0E00               	movlw	0
  4290  000E6E  6EDF               	movwf	indf2,c
  4291  000E70  0620               	decf	ultoa@buf,f,c
  4292  000E72  A0D8               	btfss	status,0,c
  4293  000E74  0621               	decf	ultoa@buf+1,f,c
  4294  000E76  C022  F013         	movff	ultoa@val,___llmod@dividend
  4295  000E7A  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4296  000E7E  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4297  000E82  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4298  000E86  C026  F017         	movff	ultoa@base,___llmod@divisor
  4299  000E8A  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4300  000E8E  0E00               	movlw	0
  4301  000E90  BE18               	btfsc	___llmod@divisor+1,7,c
  4302  000E92  0EFF               	movlw	-1
  4303  000E94  6E19               	movwf	___llmod@divisor+2,c
  4304  000E96  6E1A               	movwf	___llmod@divisor+3,c
  4305  000E98  ECA1  F00A         	call	___llmod	;wreg free
  4306  000E9C  5013               	movf	?___llmod,w,c
  4307  000E9E  6E2C               	movwf	ultoa@c,c
  4308  000EA0  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4309  000EA4  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4310  000EA8  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4311  000EAC  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4312  000EB0  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4313  000EB4  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4314  000EB8  0E00               	movlw	0
  4315  000EBA  BE18               	btfsc	___lldiv@divisor+1,7,c
  4316  000EBC  0EFF               	movlw	-1
  4317  000EBE  6E19               	movwf	___lldiv@divisor+2,c
  4318  000EC0  6E1A               	movwf	___lldiv@divisor+3,c
  4319  000EC2  ECE9  F009         	call	___lldiv	;wreg free
  4320  000EC6  C013  F022         	movff	?___lldiv,ultoa@val
  4321  000ECA  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4322  000ECE  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4323  000ED2  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4324  000ED6  0E09               	movlw	9
  4325  000ED8  642C               	cpfsgt	ultoa@c,c
  4326  000EDA  D002               	goto	l896
  4327  000EDC  0E07               	movlw	7
  4328  000EDE  262C               	addwf	ultoa@c,f,c
  4329  000EE0                     l896:
  4330  000EE0  0E30               	movlw	48
  4331  000EE2  262C               	addwf	ultoa@c,f,c
  4332  000EE4  C020  FFD9         	movff	ultoa@buf,fsr2l
  4333  000EE8  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4334  000EEC  C02C  FFDF         	movff	ultoa@c,indf2
  4335  000EF0  0620               	decf	ultoa@buf,f,c
  4336  000EF2  A0D8               	btfss	status,0,c
  4337  000EF4  0621               	decf	ultoa@buf+1,f,c
  4338  000EF6  5022               	movf	ultoa@val,w,c
  4339  000EF8  1023               	iorwf	ultoa@val+1,w,c
  4340  000EFA  1024               	iorwf	ultoa@val+2,w,c
  4341  000EFC  1025               	iorwf	ultoa@val+3,w,c
  4342  000EFE  B4D8               	btfsc	status,2,c
  4343  000F00  0012               	return	
  4344  000F02  D7B9               	goto	l895
  4345  000F04                     __end_of_ultoa:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           postinc1	equ	0xFE6
  4357                           postdec1	equ	0xFE5
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           postinc2	equ	0xFDE
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function ___llmod *****************
  4367 ;; Defined at:
  4368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  dividend        4   18[COMRAM] unsigned long 
  4371 ;;  divisor         4   22[COMRAM] unsigned long 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  counter         1   26[COMRAM] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  4   18[COMRAM] unsigned long 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4383 ;;      Params:         8       0       0       0       0       0       0
  4384 ;;      Locals:         1       0       0       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0
  4386 ;;      Totals:         9       0       0       0       0       0       0
  4387 ;;Total ram usage:        9 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_ultoa
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text23
  4398  001542                     __ptext23:
  4399                           	opt stack 0
  4400  001542                     ___llmod:
  4401                           	opt stack 25
  4402                           
  4403                           ;incstack = 0
  4404  001542  5017               	movf	___llmod@divisor,w,c
  4405  001544  1018               	iorwf	___llmod@divisor+1,w,c
  4406  001546  1019               	iorwf	___llmod@divisor+2,w,c
  4407  001548  101A               	iorwf	___llmod@divisor+3,w,c
  4408  00154A  B4D8               	btfsc	status,2,c
  4409  00154C  D024               	goto	l855
  4410  00154E  0E01               	movlw	1
  4411  001550  6E1B               	movwf	___llmod@counter,c
  4412  001552  D006               	goto	l850
  4413  001554  90D8               	bcf	status,0,c
  4414  001556  3617               	rlcf	___llmod@divisor,f,c
  4415  001558  3618               	rlcf	___llmod@divisor+1,f,c
  4416  00155A  3619               	rlcf	___llmod@divisor+2,f,c
  4417  00155C  361A               	rlcf	___llmod@divisor+3,f,c
  4418  00155E  2A1B               	incf	___llmod@counter,f,c
  4419  001560                     l850:
  4420  001560  AE1A               	btfss	___llmod@divisor+3,7,c
  4421  001562  D7F8               	goto	l851
  4422  001564                     u1980:
  4423  001564  5017               	movf	___llmod@divisor,w,c
  4424  001566  5C13               	subwf	___llmod@dividend,w,c
  4425  001568  5018               	movf	___llmod@divisor+1,w,c
  4426  00156A  5814               	subwfb	___llmod@dividend+1,w,c
  4427  00156C  5019               	movf	___llmod@divisor+2,w,c
  4428  00156E  5815               	subwfb	___llmod@dividend+2,w,c
  4429  001570  501A               	movf	___llmod@divisor+3,w,c
  4430  001572  5816               	subwfb	___llmod@dividend+3,w,c
  4431  001574  A0D8               	btfss	status,0,c
  4432  001576  D008               	goto	l854
  4433  001578  5017               	movf	___llmod@divisor,w,c
  4434  00157A  5E13               	subwf	___llmod@dividend,f,c
  4435  00157C  5018               	movf	___llmod@divisor+1,w,c
  4436  00157E  5A14               	subwfb	___llmod@dividend+1,f,c
  4437  001580  5019               	movf	___llmod@divisor+2,w,c
  4438  001582  5A15               	subwfb	___llmod@dividend+2,f,c
  4439  001584  501A               	movf	___llmod@divisor+3,w,c
  4440  001586  5A16               	subwfb	___llmod@dividend+3,f,c
  4441  001588                     l854:
  4442  001588  90D8               	bcf	status,0,c
  4443  00158A  321A               	rrcf	___llmod@divisor+3,f,c
  4444  00158C  3219               	rrcf	___llmod@divisor+2,f,c
  4445  00158E  3218               	rrcf	___llmod@divisor+1,f,c
  4446  001590  3217               	rrcf	___llmod@divisor,f,c
  4447  001592  2E1B               	decfsz	___llmod@counter,f,c
  4448  001594  D7E7               	goto	u1980
  4449  001596                     l855:
  4450  001596  C013  F013         	movff	___llmod@dividend,?___llmod
  4451  00159A  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4452  00159E  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4453  0015A2  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4454  0015A6  0012               	return		;funcret
  4455  0015A8                     __end_of___llmod:
  4456                           	opt stack 0
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodh	equ	0xFF4
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postinc1	equ	0xFE6
  4467                           postdec1	equ	0xFE5
  4468                           fsr1h	equ	0xFE2
  4469                           fsr1l	equ	0xFE1
  4470                           indf2	equ	0xFDF
  4471                           postinc2	equ	0xFDE
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function ___lldiv *****************
  4477 ;; Defined at:
  4478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  dividend        4   18[COMRAM] unsigned long 
  4481 ;;  divisor         4   22[COMRAM] unsigned long 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  quotient        4   26[COMRAM] unsigned long 
  4484 ;;  counter         1   30[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  4   18[COMRAM] unsigned long 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4494 ;;      Params:         8       0       0       0       0       0       0
  4495 ;;      Locals:         5       0       0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0
  4497 ;;      Totals:        13       0       0       0       0       0       0
  4498 ;;Total ram usage:       13 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_powerPulseCheck
  4505 ;;		_ultoa
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text24
  4510  0013D2                     __ptext24:
  4511                           	opt stack 0
  4512  0013D2                     ___lldiv:
  4513                           	opt stack 28
  4514                           
  4515                           ;incstack = 0
  4516  0013D2  0E00               	movlw	0
  4517  0013D4  6E1B               	movwf	___lldiv@quotient,c
  4518  0013D6  0E00               	movlw	0
  4519  0013D8  6E1C               	movwf	___lldiv@quotient+1,c
  4520  0013DA  0E00               	movlw	0
  4521  0013DC  6E1D               	movwf	___lldiv@quotient+2,c
  4522  0013DE  0E00               	movlw	0
  4523  0013E0  6E1E               	movwf	___lldiv@quotient+3,c
  4524  0013E2  5017               	movf	___lldiv@divisor,w,c
  4525  0013E4  1018               	iorwf	___lldiv@divisor+1,w,c
  4526  0013E6  1019               	iorwf	___lldiv@divisor+2,w,c
  4527  0013E8  101A               	iorwf	___lldiv@divisor+3,w,c
  4528  0013EA  B4D8               	btfsc	status,2,c
  4529  0013EC  D02A               	goto	l845
  4530  0013EE  0E01               	movlw	1
  4531  0013F0  6E1F               	movwf	___lldiv@counter,c
  4532  0013F2  D006               	goto	l840
  4533  0013F4  90D8               	bcf	status,0,c
  4534  0013F6  3617               	rlcf	___lldiv@divisor,f,c
  4535  0013F8  3618               	rlcf	___lldiv@divisor+1,f,c
  4536  0013FA  3619               	rlcf	___lldiv@divisor+2,f,c
  4537  0013FC  361A               	rlcf	___lldiv@divisor+3,f,c
  4538  0013FE  2A1F               	incf	___lldiv@counter,f,c
  4539  001400                     l840:
  4540  001400  AE1A               	btfss	___lldiv@divisor+3,7,c
  4541  001402  D7F8               	goto	l841
  4542  001404                     u1950:
  4543  001404  90D8               	bcf	status,0,c
  4544  001406  361B               	rlcf	___lldiv@quotient,f,c
  4545  001408  361C               	rlcf	___lldiv@quotient+1,f,c
  4546  00140A  361D               	rlcf	___lldiv@quotient+2,f,c
  4547  00140C  361E               	rlcf	___lldiv@quotient+3,f,c
  4548  00140E  5017               	movf	___lldiv@divisor,w,c
  4549  001410  5C13               	subwf	___lldiv@dividend,w,c
  4550  001412  5018               	movf	___lldiv@divisor+1,w,c
  4551  001414  5814               	subwfb	___lldiv@dividend+1,w,c
  4552  001416  5019               	movf	___lldiv@divisor+2,w,c
  4553  001418  5815               	subwfb	___lldiv@dividend+2,w,c
  4554  00141A  501A               	movf	___lldiv@divisor+3,w,c
  4555  00141C  5816               	subwfb	___lldiv@dividend+3,w,c
  4556  00141E  A0D8               	btfss	status,0,c
  4557  001420  D009               	goto	l844
  4558  001422  5017               	movf	___lldiv@divisor,w,c
  4559  001424  5E13               	subwf	___lldiv@dividend,f,c
  4560  001426  5018               	movf	___lldiv@divisor+1,w,c
  4561  001428  5A14               	subwfb	___lldiv@dividend+1,f,c
  4562  00142A  5019               	movf	___lldiv@divisor+2,w,c
  4563  00142C  5A15               	subwfb	___lldiv@dividend+2,f,c
  4564  00142E  501A               	movf	___lldiv@divisor+3,w,c
  4565  001430  5A16               	subwfb	___lldiv@dividend+3,f,c
  4566  001432  801B               	bsf	___lldiv@quotient,0,c
  4567  001434                     l844:
  4568  001434  90D8               	bcf	status,0,c
  4569  001436  321A               	rrcf	___lldiv@divisor+3,f,c
  4570  001438  3219               	rrcf	___lldiv@divisor+2,f,c
  4571  00143A  3218               	rrcf	___lldiv@divisor+1,f,c
  4572  00143C  3217               	rrcf	___lldiv@divisor,f,c
  4573  00143E  2E1F               	decfsz	___lldiv@counter,f,c
  4574  001440  D7E1               	goto	u1950
  4575  001442                     l845:
  4576  001442  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4577  001446  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4578  00144A  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4579  00144E  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4580  001452  0012               	return		;funcret
  4581  001454                     __end_of___lldiv:
  4582                           	opt stack 0
  4583                           tblptru	equ	0xFF8
  4584                           tblptrh	equ	0xFF7
  4585                           tblptrl	equ	0xFF6
  4586                           tablat	equ	0xFF5
  4587                           prodh	equ	0xFF4
  4588                           prodl	equ	0xFF3
  4589                           intcon	equ	0xFF2
  4590                           postinc0	equ	0xFEE
  4591                           wreg	equ	0xFE8
  4592                           postinc1	equ	0xFE6
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           postinc2	equ	0xFDE
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _command_builder3 *****************
  4603 ;; Defined at:
  4604 ;;		line 454 in file "SlaveComm_PIC18.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4607 ;;		 -> communications@send_buffer(42), 
  4608 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4609 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4610 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4611 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4612 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4613 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4614 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4615 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4616 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4628 ;;      Params:         8       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0
  4631 ;;      Totals:         8       0       0       0       0       0       0
  4632 ;;Total ram usage:        8 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    3
  4635 ;; This function calls:
  4636 ;;		_command_builder_add_char
  4637 ;;		_command_builder_add_string
  4638 ;; This function is called by:
  4639 ;;		_process_data_parameters
  4640 ;;		_com_command_setPower
  4641 ;;		_com_command_setEnergyUsed
  4642 ;;		_com_command_setVersion
  4643 ;;		_com_command_setVolts
  4644 ;;		_com_command_setAmps
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text25
  4649  00116E                     __ptext25:
  4650                           	opt stack 0
  4651  00116E                     _command_builder3:
  4652                           	opt stack 24
  4653                           
  4654                           ;SlaveComm_PIC18.c: 456: command_builder_add_char(send_buffer, '#');
  4655                           
  4656                           ;incstack = 0
  4657  00116E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4658  001172  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4659  001176  0E23               	movlw	35
  4660  001178  6E15               	movwf	command_builder_add_char@data,c
  4661  00117A  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4662                           
  4663                           ;SlaveComm_PIC18.c: 457: command_builder_add_char(send_buffer, '#');
  4664  00117E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4665  001182  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4666  001186  0E23               	movlw	35
  4667  001188  6E15               	movwf	command_builder_add_char@data,c
  4668  00118A  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4669                           
  4670                           ;SlaveComm_PIC18.c: 458: command_builder_add_char(send_buffer, '!');
  4671  00118E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4672  001192  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4673  001196  0E21               	movlw	33
  4674  001198  6E15               	movwf	command_builder_add_char@data,c
  4675  00119A  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4676                           
  4677                           ;SlaveComm_PIC18.c: 459: command_builder_add_string(send_buffer, data1);
  4678  00119E  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4679  0011A2  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4680  0011A6  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4681  0011AA  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4682  0011AE  EC2A  F00A         	call	_command_builder_add_string	;wreg free
  4683                           
  4684                           ;SlaveComm_PIC18.c: 460: command_builder_add_char(send_buffer, ';');
  4685  0011B2  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4686  0011B6  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4687  0011BA  0E3B               	movlw	59
  4688  0011BC  6E15               	movwf	command_builder_add_char@data,c
  4689  0011BE  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4690                           
  4691                           ;SlaveComm_PIC18.c: 461: command_builder_add_string(send_buffer, data2);
  4692  0011C2  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4693  0011C6  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4694  0011CA  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4695  0011CE  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4696  0011D2  EC2A  F00A         	call	_command_builder_add_string	;wreg free
  4697                           
  4698                           ;SlaveComm_PIC18.c: 462: command_builder_add_char(send_buffer, ';');
  4699  0011D6  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4700  0011DA  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4701  0011DE  0E3B               	movlw	59
  4702  0011E0  6E15               	movwf	command_builder_add_char@data,c
  4703  0011E2  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4704                           
  4705                           ;SlaveComm_PIC18.c: 463: command_builder_add_string(send_buffer, data3);
  4706  0011E6  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4707  0011EA  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4708  0011EE  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4709  0011F2  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4710  0011F6  EC2A  F00A         	call	_command_builder_add_string	;wreg free
  4711                           
  4712                           ;SlaveComm_PIC18.c: 464: command_builder_add_char(send_buffer, '*');
  4713  0011FA  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4714  0011FE  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4715  001202  0E2A               	movlw	42
  4716  001204  6E15               	movwf	command_builder_add_char@data,c
  4717  001206  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4718  00120A  0012               	return	
  4719  00120C                     __end_of_command_builder3:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           postinc1	equ	0xFE6
  4731                           postdec1	equ	0xFE5
  4732                           fsr1h	equ	0xFE2
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _command_builder_add_string *****************
  4741 ;; Defined at:
  4742 ;;		line 499 in file "SlaveComm_PIC18.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4745 ;;		 -> communications@send_buffer(42), 
  4746 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4747 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4748 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4749 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4750 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4751 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  4752 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4753 ;;		 -> STR_10(5), STR_9(4), 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  inx             2   28[COMRAM] int 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4765 ;;      Params:         4       0       0       0       0       0       0
  4766 ;;      Locals:         2       0       0       0       0       0       0
  4767 ;;      Temps:          2       0       0       0       0       0       0
  4768 ;;      Totals:         8       0       0       0       0       0       0
  4769 ;;Total ram usage:        8 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    2
  4772 ;; This function calls:
  4773 ;;		_command_builder_add_char
  4774 ;; This function is called by:
  4775 ;;		_command_builder1
  4776 ;;		_command_builder3
  4777 ;;		_command_builder2
  4778 ;;		_command_builder4
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text26
  4783  001454                     __ptext26:
  4784                           	opt stack 0
  4785  001454                     _command_builder_add_string:
  4786                           	opt stack 24
  4787                           
  4788                           ;SlaveComm_PIC18.c: 501: for (int inx = 0; data_string[inx] != '\0'; inx++)
  4789                           
  4790                           ;incstack = 0
  4791  001454  0E00               	movlw	0
  4792  001456  6E1E               	movwf	command_builder_add_string@inx+1,c
  4793  001458  0E00               	movlw	0
  4794  00145A  6E1D               	movwf	command_builder_add_string@inx,c
  4795  00145C  D01F               	goto	l404
  4796  00145E                     
  4797                           ;SlaveComm_PIC18.c: 502: {
  4798                           ;SlaveComm_PIC18.c: 503: command_builder_add_char(send_buffer, data_string[inx]);
  4799  00145E  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4800  001462  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4801  001466  501D               	movf	command_builder_add_string@inx,w,c
  4802  001468  2419               	addwf	command_builder_add_string@data_string,w,c
  4803  00146A  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4804  00146C  501E               	movf	command_builder_add_string@inx+1,w,c
  4805  00146E  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4806  001470  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4807  001472  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4808  001476  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4809  00147A  6AF8               	clrf	tblptru,c
  4810  00147C  0E05               	movlw	(high __ramtop+-1)
  4811  00147E  64F7               	cpfsgt	tblptrh,c
  4812  001480  D003               	bra	u1917
  4813  001482  0008               	tblrd		*
  4814  001484  50F5               	movf	tablat,w,c
  4815  001486  D005               	bra	u1910
  4816  001488                     u1917:
  4817  001488  CFF6 FFE1          	movff	tblptrl,fsr1l
  4818  00148C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4819  001490  50E7               	movf	indf1,w,c
  4820  001492                     u1910:
  4821  001492  6E15               	movwf	command_builder_add_char@data,c
  4822  001494  ECFF  F00A         	call	_command_builder_add_char	;wreg free
  4823  001498  4A1D               	infsnz	command_builder_add_string@inx,f,c
  4824  00149A  2A1E               	incf	command_builder_add_string@inx+1,f,c
  4825  00149C                     l404:
  4826  00149C  501D               	movf	command_builder_add_string@inx,w,c
  4827  00149E  2419               	addwf	command_builder_add_string@data_string,w,c
  4828  0014A0  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4829  0014A2  501E               	movf	command_builder_add_string@inx+1,w,c
  4830  0014A4  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4831  0014A6  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4832  0014A8  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4833  0014AC  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4834  0014B0  6AF8               	clrf	tblptru,c
  4835  0014B2  0E05               	movlw	(high __ramtop+-1)
  4836  0014B4  64F7               	cpfsgt	tblptrh,c
  4837  0014B6  D003               	bra	u1927
  4838  0014B8  0008               	tblrd		*
  4839  0014BA  50F5               	movf	tablat,w,c
  4840  0014BC  D005               	bra	u1920
  4841  0014BE                     u1927:
  4842  0014BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4843  0014C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4844  0014C6  50E7               	movf	indf1,w,c
  4845  0014C8                     u1920:
  4846  0014C8  0900               	iorlw	0
  4847  0014CA  B4D8               	btfsc	status,2,c
  4848  0014CC  0012               	return	
  4849  0014CE  D7C7               	goto	l405
  4850  0014D0                     __end_of_command_builder_add_string:
  4851                           	opt stack 0
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           prodh	equ	0xFF4
  4857                           prodl	equ	0xFF3
  4858                           intcon	equ	0xFF2
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           indf1	equ	0xFE7
  4862                           postinc1	equ	0xFE6
  4863                           postdec1	equ	0xFE5
  4864                           fsr1h	equ	0xFE2
  4865                           fsr1l	equ	0xFE1
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _command_builder_add_char *****************
  4873 ;; Defined at:
  4874 ;;		line 486 in file "SlaveComm_PIC18.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4877 ;;		 -> communications@send_buffer(42), 
  4878 ;;  data            1   20[COMRAM] unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4890 ;;      Params:         3       0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0       0
  4892 ;;      Temps:          1       0       0       0       0       0       0
  4893 ;;      Totals:         4       0       0       0       0       0       0
  4894 ;;Total ram usage:        4 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_command_builder1
  4901 ;;		_command_builder3
  4902 ;;		_command_builder_add_string
  4903 ;;		_command_builder2
  4904 ;;		_command_builder4
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text27
  4909  0015FE                     __ptext27:
  4910                           	opt stack 0
  4911  0015FE                     _command_builder_add_char:
  4912                           	opt stack 24
  4913                           
  4914                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  4915                           
  4916                           ;incstack = 0
  4917  0015FE  EE20 F028          	lfsr	2,40
  4918  001602  5013               	movf	command_builder_add_char@send_buffer,w,c
  4919  001604  26D9               	addwf	fsr2l,f,c
  4920  001606  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4921  001608  22DA               	addwfc	fsr2h,f,c
  4922  00160A  50DF               	movf	indf2,w,c
  4923  00160C  6E16               	movwf	??_command_builder_add_char& (0+255),c
  4924  00160E  5016               	movf	??_command_builder_add_char,w,c
  4925  001610  0D01               	mullw	1
  4926  001612  50F3               	movf	prodl,w,c
  4927  001614  2413               	addwf	command_builder_add_char@send_buffer,w,c
  4928  001616  6ED9               	movwf	fsr2l,c
  4929  001618  50F4               	movf	prodh,w,c
  4930  00161A  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4931  00161C  6EDA               	movwf	fsr2h,c
  4932  00161E  C015  FFDF         	movff	command_builder_add_char@data,indf2
  4933                           
  4934                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  4935  001622  EE20 F028          	lfsr	2,40
  4936  001626  5013               	movf	command_builder_add_char@send_buffer,w,c
  4937  001628  26D9               	addwf	fsr2l,f,c
  4938  00162A  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4939  00162C  22DA               	addwfc	fsr2h,f,c
  4940  00162E  2ADF               	incf	indf2,f,c
  4941                           
  4942                           ;SlaveComm_PIC18.c: 491: if (send_buffer->write_position >= 40)
  4943  001630  EE20 F028          	lfsr	2,40
  4944  001634  5013               	movf	command_builder_add_char@send_buffer,w,c
  4945  001636  26D9               	addwf	fsr2l,f,c
  4946  001638  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4947  00163A  22DA               	addwfc	fsr2h,f,c
  4948  00163C  0E27               	movlw	39
  4949  00163E  64DF               	cpfsgt	indf2,c
  4950  001640  0012               	return	
  4951                           
  4952                           ;SlaveComm_PIC18.c: 492: {
  4953                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  4954  001642  EE20 F028          	lfsr	2,40
  4955  001646  5013               	movf	command_builder_add_char@send_buffer,w,c
  4956  001648  26D9               	addwf	fsr2l,f,c
  4957  00164A  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4958  00164C  22DA               	addwfc	fsr2h,f,c
  4959  00164E  0E00               	movlw	0
  4960  001650  6EDF               	movwf	indf2,c
  4961  001652  0012               	return	
  4962  001654                     __end_of_command_builder_add_char:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           indf1	equ	0xFE7
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _atol *****************
  4985 ;; Defined at:
  4986 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  s               2   30[COMRAM] PTR const unsigned char 
  4989 ;;		 -> process_data@parameters(50), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  a               4   39[COMRAM] long 
  4992 ;;  c               1   43[COMRAM] unsigned char 
  4993 ;;  sign            1   38[COMRAM] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  4   30[COMRAM] long 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5003 ;;      Params:         4       0       0       0       0       0       0
  5004 ;;      Locals:         6       0       0       0       0       0       0
  5005 ;;      Temps:          4       0       0       0       0       0       0
  5006 ;;      Totals:        14       0       0       0       0       0       0
  5007 ;;Total ram usage:       14 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    2
  5010 ;; This function calls:
  5011 ;;		___lmul
  5012 ;;		_isdigit
  5013 ;; This function is called by:
  5014 ;;		_process_data_parameters
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text28
  5019  000F04                     __ptext28:
  5020                           	opt stack 0
  5021  000F04                     _atol:
  5022                           	opt stack 25
  5023                           
  5024                           ;incstack = 0
  5025  000F04  C01F  FFD9         	movff	atol@s,fsr2l
  5026  000F08  C020  FFDA         	movff	atol@s+1,fsr2h
  5027  000F0C  50DF               	movf	indf2,w,c
  5028  000F0E  6E2C               	movwf	atol@c,c
  5029  000F10  4A1F               	infsnz	atol@s,f,c
  5030  000F12  2A20               	incf	atol@s+1,f,c
  5031  000F14  0E20               	movlw	32
  5032  000F16  182C               	xorwf	atol@c,w,c
  5033  000F18  B4D8               	btfsc	status,2,c
  5034  000F1A  D7F4               	goto	_atol
  5035  000F1C  0E09               	movlw	9
  5036  000F1E  182C               	xorwf	atol@c,w,c
  5037  000F20  B4D8               	btfsc	status,2,c
  5038  000F22  D7F0               	goto	_atol
  5039  000F24  0E00               	movlw	0
  5040  000F26  6E28               	movwf	atol@a,c
  5041  000F28  0E00               	movlw	0
  5042  000F2A  6E29               	movwf	atol@a+1,c
  5043  000F2C  0E00               	movlw	0
  5044  000F2E  6E2A               	movwf	atol@a+2,c
  5045  000F30  0E00               	movlw	0
  5046  000F32  6E2B               	movwf	atol@a+3,c
  5047  000F34  0E00               	movlw	0
  5048  000F36  6E27               	movwf	atol@sign,c
  5049  000F38  0E2D               	movlw	45
  5050  000F3A  182C               	xorwf	atol@c,w,c
  5051  000F3C  A4D8               	btfss	status,2,c
  5052  000F3E  D002               	goto	l636
  5053  000F40  2A27               	incf	atol@sign,f,c
  5054  000F42  D027               	goto	L4
  5055  000F44                     l636:
  5056  000F44  0E2B               	movlw	43
  5057  000F46  182C               	xorwf	atol@c,w,c
  5058  000F48  A4D8               	btfss	status,2,c
  5059  000F4A  D02B               	goto	l639
  5060  000F4C  D022               	goto	L4
  5061  000F4E  C028  F013         	movff	atol@a,___lmul@multiplier
  5062  000F52  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5063  000F56  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5064  000F5A  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5065  000F5E  0E0A               	movlw	10
  5066  000F60  6E17               	movwf	___lmul@multiplicand,c
  5067  000F62  0E00               	movlw	0
  5068  000F64  6E18               	movwf	___lmul@multiplicand+1,c
  5069  000F66  0E00               	movlw	0
  5070  000F68  6E19               	movwf	___lmul@multiplicand+2,c
  5071  000F6A  0E00               	movlw	0
  5072  000F6C  6E1A               	movwf	___lmul@multiplicand+3,c
  5073  000F6E  EC2A  F00B         	call	___lmul	;wreg free
  5074  000F72  C02C  F023         	movff	atol@c,??_atol
  5075  000F76  0ED0               	movlw	208
  5076  000F78  2623               	addwf	??_atol,f,c
  5077  000F7A  5023               	movf	??_atol,w,c
  5078  000F7C  2413               	addwf	?___lmul,w,c
  5079  000F7E  6E28               	movwf	atol@a,c
  5080  000F80  0E00               	movlw	0
  5081  000F82  2014               	addwfc	?___lmul+1,w,c
  5082  000F84  6E29               	movwf	atol@a+1,c
  5083  000F86  0E00               	movlw	0
  5084  000F88  2015               	addwfc	?___lmul+2,w,c
  5085  000F8A  6E2A               	movwf	atol@a+2,c
  5086  000F8C  0E00               	movlw	0
  5087  000F8E  2016               	addwfc	?___lmul+3,w,c
  5088  000F90  6E2B               	movwf	atol@a+3,c
  5089  000F92                     L4:
  5090  000F92  C01F  FFD9         	movff	atol@s,fsr2l
  5091  000F96  C020  FFDA         	movff	atol@s+1,fsr2h
  5092  000F9A  50DF               	movf	indf2,w,c
  5093  000F9C  6E2C               	movwf	atol@c,c
  5094  000F9E  4A1F               	infsnz	atol@s,f,c
  5095  000FA0  2A20               	incf	atol@s+1,f,c
  5096  000FA2                     l639:
  5097  000FA2  502C               	movf	atol@c,w,c
  5098  000FA4  EC7B  F00C         	call	_isdigit
  5099  000FA8  B0D8               	btfsc	status,0,c
  5100  000FAA  D7D1               	goto	l640
  5101  000FAC  5027               	movf	atol@sign,w,c
  5102  000FAE  B4D8               	btfsc	status,2,c
  5103  000FB0  D01A               	goto	l642
  5104  000FB2  C028  F023         	movff	atol@a,??_atol
  5105  000FB6  C029  F024         	movff	atol@a+1,??_atol+1
  5106  000FBA  C02A  F025         	movff	atol@a+2,??_atol+2
  5107  000FBE  C02B  F026         	movff	atol@a+3,??_atol+3
  5108  000FC2  1E23               	comf	??_atol,f,c
  5109  000FC4  1E24               	comf	??_atol+1,f,c
  5110  000FC6  1E25               	comf	??_atol+2,f,c
  5111  000FC8  1E26               	comf	??_atol+3,f,c
  5112  000FCA  2A23               	incf	??_atol,f,c
  5113  000FCC  0E00               	movlw	0
  5114  000FCE  2224               	addwfc	??_atol+1,f,c
  5115  000FD0  2225               	addwfc	??_atol+2,f,c
  5116  000FD2  2226               	addwfc	??_atol+3,f,c
  5117  000FD4  C023  F01F         	movff	??_atol,?_atol
  5118  000FD8  C024  F020         	movff	??_atol+1,?_atol+1
  5119  000FDC  C025  F021         	movff	??_atol+2,?_atol+2
  5120  000FE0  C026  F022         	movff	??_atol+3,?_atol+3
  5121  000FE4  0012               	return	
  5122  000FE6                     l642:
  5123  000FE6  C028  F01F         	movff	atol@a,?_atol
  5124  000FEA  C029  F020         	movff	atol@a+1,?_atol+1
  5125  000FEE  C02A  F021         	movff	atol@a+2,?_atol+2
  5126  000FF2  C02B  F022         	movff	atol@a+3,?_atol+3
  5127  000FF6  0012               	return		;funcret
  5128  000FF8                     __end_of_atol:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           prodh	equ	0xFF4
  5135                           prodl	equ	0xFF3
  5136                           intcon	equ	0xFF2
  5137                           postinc0	equ	0xFEE
  5138                           wreg	equ	0xFE8
  5139                           indf1	equ	0xFE7
  5140                           postinc1	equ	0xFE6
  5141                           postdec1	equ	0xFE5
  5142                           fsr1h	equ	0xFE2
  5143                           fsr1l	equ	0xFE1
  5144                           indf2	equ	0xFDF
  5145                           postinc2	equ	0xFDE
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _isdigit *****************
  5151 ;; Defined at:
  5152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  c               1    wreg     unsigned char 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  c               1   20[COMRAM] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;		None               void
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5166 ;;      Params:         0       0       0       0       0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0
  5168 ;;      Temps:          1       0       0       0       0       0       0
  5169 ;;      Totals:         3       0       0       0       0       0       0
  5170 ;;Total ram usage:        3 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    1
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_atol
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text29
  5181  0018F6                     __ptext29:
  5182                           	opt stack 0
  5183  0018F6                     _isdigit:
  5184                           	opt stack 25
  5185                           
  5186                           ;incstack = 0
  5187                           ;isdigit@c stored from wreg
  5188  0018F6  6E15               	movwf	isdigit@c,c
  5189  0018F8  0E00               	movlw	0
  5190  0018FA  6E14               	movwf	_isdigit$2231,c
  5191  0018FC  0E3A               	movlw	58
  5192  0018FE  6015               	cpfslt	isdigit@c,c
  5193  001900  D005               	goto	l814
  5194  001902  0E2F               	movlw	47
  5195  001904  6415               	cpfsgt	isdigit@c,c
  5196  001906  D002               	goto	l814
  5197  001908  0E01               	movlw	1
  5198  00190A  6E14               	movwf	_isdigit$2231,c
  5199  00190C                     l814:
  5200  00190C  C014  F013         	movff	_isdigit$2231,??_isdigit
  5201  001910  3013               	rrcf	??_isdigit,w,c
  5202  001912  0012               	return	
  5203  001914                     __end_of_isdigit:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postinc1	equ	0xFE6
  5216                           postdec1	equ	0xFE5
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           fsr2h	equ	0xFDA
  5222                           fsr2l	equ	0xFD9
  5223                           status	equ	0xFD8
  5224                           
  5225 ;; *************** function ___lmul *****************
  5226 ;; Defined at:
  5227 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  multiplier      4   18[COMRAM] unsigned long 
  5230 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  product         4   26[COMRAM] unsigned long 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  4   18[COMRAM] unsigned long 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5242 ;;      Params:         8       0       0       0       0       0       0
  5243 ;;      Locals:         4       0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0
  5245 ;;      Totals:        12       0       0       0       0       0       0
  5246 ;;Total ram usage:       12 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_powerPulseCheck
  5253 ;;		_atol
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text30
  5258  001654                     __ptext30:
  5259                           	opt stack 0
  5260  001654                     ___lmul:
  5261                           	opt stack 28
  5262                           
  5263                           ;incstack = 0
  5264  001654  0E00               	movlw	0
  5265  001656  6E1B               	movwf	___lmul@product,c
  5266  001658  0E00               	movlw	0
  5267  00165A  6E1C               	movwf	___lmul@product+1,c
  5268  00165C  0E00               	movlw	0
  5269  00165E  6E1D               	movwf	___lmul@product+2,c
  5270  001660  0E00               	movlw	0
  5271  001662  6E1E               	movwf	___lmul@product+3,c
  5272  001664  A013               	btfss	___lmul@multiplier,0,c
  5273  001666  D008               	goto	l483
  5274  001668  5017               	movf	___lmul@multiplicand,w,c
  5275  00166A  261B               	addwf	___lmul@product,f,c
  5276  00166C  5018               	movf	___lmul@multiplicand+1,w,c
  5277  00166E  221C               	addwfc	___lmul@product+1,f,c
  5278  001670  5019               	movf	___lmul@multiplicand+2,w,c
  5279  001672  221D               	addwfc	___lmul@product+2,f,c
  5280  001674  501A               	movf	___lmul@multiplicand+3,w,c
  5281  001676  221E               	addwfc	___lmul@product+3,f,c
  5282  001678                     l483:
  5283  001678  90D8               	bcf	status,0,c
  5284  00167A  3617               	rlcf	___lmul@multiplicand,f,c
  5285  00167C  3618               	rlcf	___lmul@multiplicand+1,f,c
  5286  00167E  3619               	rlcf	___lmul@multiplicand+2,f,c
  5287  001680  361A               	rlcf	___lmul@multiplicand+3,f,c
  5288  001682  90D8               	bcf	status,0,c
  5289  001684  3216               	rrcf	___lmul@multiplier+3,f,c
  5290  001686  3215               	rrcf	___lmul@multiplier+2,f,c
  5291  001688  3214               	rrcf	___lmul@multiplier+1,f,c
  5292  00168A  3213               	rrcf	___lmul@multiplier,f,c
  5293  00168C  5013               	movf	___lmul@multiplier,w,c
  5294  00168E  1014               	iorwf	___lmul@multiplier+1,w,c
  5295  001690  1015               	iorwf	___lmul@multiplier+2,w,c
  5296  001692  1016               	iorwf	___lmul@multiplier+3,w,c
  5297  001694  A4D8               	btfss	status,2,c
  5298  001696  D7E6               	goto	l482
  5299  001698  C01B  F013         	movff	___lmul@product,?___lmul
  5300  00169C  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5301  0016A0  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5302  0016A4  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5303  0016A8  0012               	return		;funcret
  5304  0016AA                     __end_of___lmul:
  5305                           	opt stack 0
  5306                           tblptru	equ	0xFF8
  5307                           tblptrh	equ	0xFF7
  5308                           tblptrl	equ	0xFF6
  5309                           tablat	equ	0xFF5
  5310                           prodh	equ	0xFF4
  5311                           prodl	equ	0xFF3
  5312                           intcon	equ	0xFF2
  5313                           postinc0	equ	0xFEE
  5314                           wreg	equ	0xFE8
  5315                           indf1	equ	0xFE7
  5316                           postinc1	equ	0xFE6
  5317                           postdec1	equ	0xFE5
  5318                           fsr1h	equ	0xFE2
  5319                           fsr1l	equ	0xFE1
  5320                           indf2	equ	0xFDF
  5321                           postinc2	equ	0xFDE
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _process_data_parameterize *****************
  5327 ;; Defined at:
  5328 ;;		line 280 in file "SlaveComm_PIC18.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5331 ;;		 -> process_data@parameters(50), 
  5332 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5333 ;;		 -> communications@receive_buffer(42), 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  inx             2   31[COMRAM] int 
  5336 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5337 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5347 ;;      Params:         4       0       0       0       0       0       0
  5348 ;;      Locals:         4       0       0       0       0       0       0
  5349 ;;      Temps:          3       0       0       0       0       0       0
  5350 ;;      Totals:        11       0       0       0       0       0       0
  5351 ;;Total ram usage:       11 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    2
  5354 ;; This function calls:
  5355 ;;		___wmul
  5356 ;; This function is called by:
  5357 ;;		_process_data
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text31
  5362  000B62                     __ptext31:
  5363                           	opt stack 0
  5364  000B62                     _process_data_parameterize:
  5365                           	opt stack 26
  5366                           
  5367                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5368                           
  5369                           ;incstack = 0
  5370  000B62  0E00               	movlw	0
  5371  000B64  6E23               	movwf	process_data_parameterize@parameter_position,c
  5372                           
  5373                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5374  000B66  0E00               	movlw	0
  5375  000B68  6E22               	movwf	process_data_parameterize@parameter_index,c
  5376                           
  5377                           ;SlaveComm_PIC18.c: 292: for (int inx = 0; inx < 5; inx++)
  5378  000B6A  0E00               	movlw	0
  5379  000B6C  6E21               	movwf	process_data_parameterize@inx+1,c
  5380  000B6E  0E00               	movlw	0
  5381  000B70  6E20               	movwf	process_data_parameterize@inx,c
  5382  000B72  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5383  000B74  D008               	goto	l341
  5384  000B76  5021               	movf	process_data_parameterize@inx+1,w,c
  5385  000B78  E105               	bnz	u2250
  5386  000B7A  0E05               	movlw	5
  5387  000B7C  5C20               	subwf	process_data_parameterize@inx,w,c
  5388  000B7E  B0D8               	btfsc	status,0,c
  5389  000B80  D082               	goto	l343
  5390  000B82  D001               	goto	l341
  5391  000B84                     u2250:
  5392  000B84  D080               	goto	l343
  5393  000B86                     l341:
  5394                           
  5395                           ;SlaveComm_PIC18.c: 293: {
  5396                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5397  000B86  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5398  000B8A  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5399  000B8E  0E00               	movlw	0
  5400  000B90  6E16               	movwf	___wmul@multiplicand+1,c
  5401  000B92  0E0A               	movlw	10
  5402  000B94  6E15               	movwf	___wmul@multiplicand,c
  5403  000B96  EC58  F00C         	call	___wmul	;wreg free
  5404  000B9A  5013               	movf	?___wmul,w,c
  5405  000B9C  2419               	addwf	process_data_parameterize@parameters,w,c
  5406  000B9E  6ED9               	movwf	fsr2l,c
  5407  000BA0  5014               	movf	?___wmul+1,w,c
  5408  000BA2  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5409  000BA4  6EDA               	movwf	fsr2h,c
  5410  000BA6  0E00               	movlw	0
  5411  000BA8  6EDF               	movwf	indf2,c
  5412  000BAA  4A20               	infsnz	process_data_parameterize@inx,f,c
  5413  000BAC  2A21               	incf	process_data_parameterize@inx+1,f,c
  5414  000BAE  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5415  000BB0  D7EA               	goto	l341
  5416  000BB2  5021               	movf	process_data_parameterize@inx+1,w,c
  5417  000BB4  E168               	bnz	l2967
  5418  000BB6  D7E1               	goto	L3
  5419  000BB8                     
  5420                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5421  000BB8  0E00               	movlw	0
  5422  000BBA  6E23               	movwf	process_data_parameterize@parameter_position,c
  5423                           
  5424                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5425  000BBC  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5426                           
  5427                           ;SlaveComm_PIC18.c: 309: if (parameter_index >= 5)
  5428  000BBE  0E04               	movlw	4
  5429  000BC0  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5430  000BC2  D05A               	goto	l347
  5431                           
  5432                           ;SlaveComm_PIC18.c: 310: {
  5433                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5434  000BC4  0E04               	movlw	4
  5435  000BC6  6E22               	movwf	process_data_parameterize@parameter_index,c
  5436                           
  5437                           ;SlaveComm_PIC18.c: 314: }
  5438                           ;SlaveComm_PIC18.c: 316: break;
  5439  000BC8  D057               	goto	l347
  5440  000BCA                     
  5441                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5442  000BCA  EE20 F029          	lfsr	2,41
  5443  000BCE  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5444  000BD0  26D9               	addwf	fsr2l,f,c
  5445  000BD2  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5446  000BD4  22DA               	addwfc	fsr2h,f,c
  5447  000BD6  50DF               	movf	indf2,w,c
  5448  000BD8  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5449  000BDA  501D               	movf	??_process_data_parameterize,w,c
  5450  000BDC  0D01               	mullw	1
  5451  000BDE  50F3               	movf	prodl,w,c
  5452  000BE0  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5453  000BE2  6ED9               	movwf	fsr2l,c
  5454  000BE4  50F4               	movf	prodh,w,c
  5455  000BE6  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5456  000BE8  6EDA               	movwf	fsr2h,c
  5457  000BEA  5022               	movf	process_data_parameterize@parameter_index,w,c
  5458  000BEC  0D0A               	mullw	10
  5459  000BEE  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5460  000BF2  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5461  000BF6  50F3               	movf	prodl,w,c
  5462  000BF8  261E               	addwf	??_process_data_parameterize+1,f,c
  5463  000BFA  50F4               	movf	prodh,w,c
  5464  000BFC  221F               	addwfc	??_process_data_parameterize+2,f,c
  5465  000BFE  5023               	movf	process_data_parameterize@parameter_position,w,c
  5466  000C00  0D01               	mullw	1
  5467  000C02  50F3               	movf	prodl,w,c
  5468  000C04  241E               	addwf	??_process_data_parameterize+1,w,c
  5469  000C06  6EE1               	movwf	fsr1l,c
  5470  000C08  50F4               	movf	prodh,w,c
  5471  000C0A  201F               	addwfc	??_process_data_parameterize+2,w,c
  5472  000C0C  6EE2               	movwf	fsr1h,c
  5473  000C0E  CFDF FFE7          	movff	indf2,indf1
  5474                           
  5475                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5476  000C12  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5477                           
  5478                           ;SlaveComm_PIC18.c: 321: if (parameter_position >= 10)
  5479  000C14  0E09               	movlw	9
  5480  000C16  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5481  000C18  D002               	goto	l351
  5482                           
  5483                           ;SlaveComm_PIC18.c: 322: {
  5484                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5485  000C1A  0E09               	movlw	9
  5486  000C1C  6E23               	movwf	process_data_parameterize@parameter_position,c
  5487  000C1E                     l351:
  5488                           
  5489                           ;SlaveComm_PIC18.c: 326: }
  5490                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5491  000C1E  5022               	movf	process_data_parameterize@parameter_index,w,c
  5492  000C20  0D0A               	mullw	10
  5493  000C22  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5494  000C26  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5495  000C2A  50F3               	movf	prodl,w,c
  5496  000C2C  261D               	addwf	??_process_data_parameterize,f,c
  5497  000C2E  50F4               	movf	prodh,w,c
  5498  000C30  221E               	addwfc	??_process_data_parameterize+1,f,c
  5499  000C32  5023               	movf	process_data_parameterize@parameter_position,w,c
  5500  000C34  0D01               	mullw	1
  5501  000C36  50F3               	movf	prodl,w,c
  5502  000C38  241D               	addwf	??_process_data_parameterize,w,c
  5503  000C3A  6ED9               	movwf	fsr2l,c
  5504  000C3C  50F4               	movf	prodh,w,c
  5505  000C3E  201E               	addwfc	??_process_data_parameterize+1,w,c
  5506  000C40  6EDA               	movwf	fsr2h,c
  5507  000C42  0E00               	movlw	0
  5508  000C44  6EDF               	movwf	indf2,c
  5509                           
  5510                           ;SlaveComm_PIC18.c: 331: }
  5511                           
  5512                           ;SlaveComm_PIC18.c: 330: break;
  5513  000C46  D018               	goto	l347
  5514  000C48  EE20 F029          	lfsr	2,41
  5515  000C4C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5516  000C4E  26D9               	addwf	fsr2l,f,c
  5517  000C50  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5518  000C52  22DA               	addwfc	fsr2h,f,c
  5519  000C54  50DF               	movf	indf2,w,c
  5520  000C56  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5521  000C58  501D               	movf	??_process_data_parameterize,w,c
  5522  000C5A  0D01               	mullw	1
  5523  000C5C  50F3               	movf	prodl,w,c
  5524  000C5E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5525  000C60  6ED9               	movwf	fsr2l,c
  5526  000C62  50F4               	movf	prodh,w,c
  5527  000C64  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5528  000C66  6EDA               	movwf	fsr2h,c
  5529  000C68  50DF               	movf	indf2,w,c
  5530                           
  5531                           ; Switch size 1, requested type "space"
  5532                           ; Number of cases is 2, Range of values is 33 to 59
  5533                           ; switch strategies available:
  5534                           ; Name         Instructions Cycles
  5535                           ; simple_byte            7     4 (average)
  5536                           ;	Chosen strategy is simple_byte
  5537  000C6A  0A21               	xorlw	33	; case 33
  5538  000C6C  B4D8               	btfsc	status,2,c
  5539  000C6E  D004               	goto	l347
  5540  000C70  0A1A               	xorlw	26	; case 59
  5541  000C72  B4D8               	btfsc	status,2,c
  5542  000C74  D7A1               	goto	l348
  5543  000C76  D7A9               	goto	l350
  5544  000C78                     l347:
  5545                           
  5546                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5547  000C78  EE20 F029          	lfsr	2,41
  5548  000C7C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5549  000C7E  26D9               	addwf	fsr2l,f,c
  5550  000C80  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5551  000C82  22DA               	addwfc	fsr2h,f,c
  5552  000C84  2ADF               	incf	indf2,f,c
  5553  000C86                     l343:
  5554  000C86                     l2967:
  5555  000C86  EE20 F029          	lfsr	2,41
  5556  000C8A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5557  000C8C  26D9               	addwf	fsr2l,f,c
  5558  000C8E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5559  000C90  22DA               	addwfc	fsr2h,f,c
  5560  000C92  50DF               	movf	indf2,w,c
  5561  000C94  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5562  000C96  501D               	movf	??_process_data_parameterize,w,c
  5563  000C98  0D01               	mullw	1
  5564  000C9A  50F3               	movf	prodl,w,c
  5565  000C9C  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5566  000C9E  6ED9               	movwf	fsr2l,c
  5567  000CA0  50F4               	movf	prodh,w,c
  5568  000CA2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5569  000CA4  6EDA               	movwf	fsr2h,c
  5570  000CA6  0E2A               	movlw	42
  5571  000CA8  18DE               	xorwf	postinc2,w,c
  5572  000CAA  B4D8               	btfsc	status,2,c
  5573  000CAC  0012               	return	
  5574  000CAE  EE20 F029          	lfsr	2,41
  5575  000CB2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5576  000CB4  26D9               	addwf	fsr2l,f,c
  5577  000CB6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5578  000CB8  22DA               	addwfc	fsr2h,f,c
  5579  000CBA  0E28               	movlw	40
  5580  000CBC  60DF               	cpfslt	indf2,c
  5581  000CBE  0012               	return	
  5582  000CC0  EE20 F028          	lfsr	2,40
  5583  000CC4  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5584  000CC6  26D9               	addwf	fsr2l,f,c
  5585  000CC8  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5586  000CCA  22DA               	addwfc	fsr2h,f,c
  5587  000CCC  EE10 F029          	lfsr	1,41
  5588  000CD0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5589  000CD2  26E1               	addwf	fsr1l,f,c
  5590  000CD4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5591  000CD6  22E2               	addwfc	fsr1h,f,c
  5592  000CD8  50DE               	movf	postinc2,w,c
  5593  000CDA  18E6               	xorwf	postinc1,w,c
  5594  000CDC  B4D8               	btfsc	status,2,c
  5595  000CDE  0012               	return	
  5596  000CE0  D7B3               	goto	l345
  5597  000CE2                     __end_of_process_data_parameterize:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postinc1	equ	0xFE6
  5610                           postdec1	equ	0xFE5
  5611                           fsr1h	equ	0xFE2
  5612                           fsr1l	equ	0xFE1
  5613                           indf2	equ	0xFDF
  5614                           postinc2	equ	0xFDE
  5615                           fsr2h	equ	0xFDA
  5616                           fsr2l	equ	0xFD9
  5617                           status	equ	0xFD8
  5618                           
  5619 ;; *************** function ___wmul *****************
  5620 ;; Defined at:
  5621 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  multiplier      2   18[COMRAM] unsigned int 
  5624 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  product         2   22[COMRAM] unsigned int 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  2   18[COMRAM] unsigned int 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0, prodl, prodh
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5636 ;;      Params:         4       0       0       0       0       0       0
  5637 ;;      Locals:         2       0       0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0
  5639 ;;      Totals:         6       0       0       0       0       0       0
  5640 ;;Total ram usage:        6 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    1
  5643 ;; This function calls:
  5644 ;;		Nothing
  5645 ;; This function is called by:
  5646 ;;		_process_data_parameterize
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text32
  5651  0018B0                     __ptext32:
  5652                           	opt stack 0
  5653  0018B0                     ___wmul:
  5654                           	opt stack 26
  5655                           
  5656                           ;incstack = 0
  5657  0018B0  5013               	movf	___wmul@multiplier,w,c
  5658  0018B2  0215               	mulwf	___wmul@multiplicand,c
  5659  0018B4  CFF3 F017          	movff	prodl,___wmul@product
  5660  0018B8  CFF4 F018          	movff	prodh,___wmul@product+1
  5661  0018BC  5013               	movf	___wmul@multiplier,w,c
  5662  0018BE  0216               	mulwf	___wmul@multiplicand+1,c
  5663  0018C0  50F3               	movf	prodl,w,c
  5664  0018C2  2618               	addwf	___wmul@product+1,f,c
  5665  0018C4  5014               	movf	___wmul@multiplier+1,w,c
  5666  0018C6  0215               	mulwf	___wmul@multiplicand,c
  5667  0018C8  50F3               	movf	prodl,w,c
  5668  0018CA  2618               	addwf	___wmul@product+1,f,c
  5669  0018CC  C017  F013         	movff	___wmul@product,?___wmul
  5670  0018D0  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5671  0018D4  0012               	return	
  5672  0018D6                     __end_of___wmul:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           postinc0	equ	0xFEE
  5682                           wreg	equ	0xFE8
  5683                           indf1	equ	0xFE7
  5684                           postinc1	equ	0xFE6
  5685                           postdec1	equ	0xFE5
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _SPISlaveInit *****************
  5695 ;; Defined at:
  5696 ;;		line 706 in file "SlaveComm_PIC18.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5710 ;;      Params:         0       0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_communications
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text33
  5725  001788                     __ptext33:
  5726                           	opt stack 0
  5727  001788                     _SPISlaveInit:
  5728                           	opt stack 28
  5729                           
  5730                           ;SlaveComm_PIC18.c: 709: TRISAbits.TRISA0 = 0;
  5731                           
  5732                           ;incstack = 0
  5733  001788  9092               	bcf	3986,0,c	;volatile
  5734                           
  5735                           ;SlaveComm_PIC18.c: 710: TRISAbits.TRISA1 = 1;
  5736  00178A  8292               	bsf	3986,1,c	;volatile
  5737                           
  5738                           ;SlaveComm_PIC18.c: 712: TRISCbits.TRISC3 = 0;
  5739  00178C  9694               	bcf	3988,3,c	;volatile
  5740                           
  5741                           ;SlaveComm_PIC18.c: 713: TRISCbits.TRISC5 = 0;
  5742  00178E  9A94               	bcf	3988,5,c	;volatile
  5743                           
  5744                           ;SlaveComm_PIC18.c: 714: TRISCbits.TRISC6 = 0;
  5745  001790  9C94               	bcf	3988,6,c	;volatile
  5746                           
  5747                           ;SlaveComm_PIC18.c: 715: TRISCbits.TRISC7 = 0;
  5748  001792  9E94               	bcf	3988,7,c	;volatile
  5749                           
  5750                           ;SlaveComm_PIC18.c: 716: ANSELAbits.ANSA1 = 0b0;
  5751  001794  010F               	movlb	15	; () banked
  5752  001796  9338               	bcf	56,1,b	;volatile
  5753                           
  5754                           ;SlaveComm_PIC18.c: 718: LATCbits.LATC6 = 1;
  5755  001798  8C8B               	bsf	3979,6,c	;volatile
  5756                           
  5757                           ;SlaveComm_PIC18.c: 719: LATCbits.LATC3 = 1;
  5758  00179A  868B               	bsf	3979,3,c	;volatile
  5759                           
  5760                           ;SlaveComm_PIC18.c: 720: LATCbits.LATC5 = 1;
  5761  00179C  8A8B               	bsf	3979,5,c	;volatile
  5762                           
  5763                           ;SlaveComm_PIC18.c: 721: LATCbits.LATC7 = 1;
  5764  00179E  8E8B               	bsf	3979,7,c	;volatile
  5765                           
  5766                           ;SlaveComm_PIC18.c: 724: SSP2CON1bits.SSPEN = 0;
  5767  0017A0  9A6C               	bcf	3948,5,c	;volatile
  5768                           
  5769                           ;SlaveComm_PIC18.c: 726: ANSELBbits.ANSB0 = 0b0;
  5770  0017A2  9139               	bcf	57,0,b	;volatile
  5771                           
  5772                           ;SlaveComm_PIC18.c: 727: ANSELBbits.ANSB1 = 0b0;
  5773  0017A4  9339               	bcf	57,1,b	;volatile
  5774                           
  5775                           ;SlaveComm_PIC18.c: 728: ANSELBbits.ANSB2 = 0b0;
  5776  0017A6  9539               	bcf	57,2,b	;volatile
  5777                           
  5778                           ;SlaveComm_PIC18.c: 729: ANSELBbits.ANSB3 = 0b0;
  5779  0017A8  9739               	bcf	57,3,b	;volatile
  5780                           
  5781                           ;SlaveComm_PIC18.c: 731: TRISBbits.RB0 = 0b1;
  5782  0017AA  8093               	bsf	3987,0,c	;volatile
  5783                           
  5784                           ;SlaveComm_PIC18.c: 732: TRISBbits.RB1 = 0b1;
  5785  0017AC  8293               	bsf	3987,1,c	;volatile
  5786                           
  5787                           ;SlaveComm_PIC18.c: 733: TRISBbits.RB2 = 0b1;
  5788  0017AE  8493               	bsf	3987,2,c	;volatile
  5789                           
  5790                           ;SlaveComm_PIC18.c: 734: TRISBbits.RB3 = 0b0;
  5791  0017B0  9693               	bcf	3987,3,c	;volatile
  5792                           
  5793                           ;SlaveComm_PIC18.c: 736: SSP2STATbits.SMP = 0;
  5794  0017B2  9E6D               	bcf	3949,7,c	;volatile
  5795                           
  5796                           ;SlaveComm_PIC18.c: 737: SSP2STATbits.CKE = 1;
  5797  0017B4  8C6D               	bsf	3949,6,c	;volatile
  5798                           
  5799                           ;SlaveComm_PIC18.c: 739: SSP2CON1bits.WCOL = 0;
  5800  0017B6  9E6C               	bcf	3948,7,c	;volatile
  5801                           
  5802                           ;SlaveComm_PIC18.c: 740: SSP2CON1bits.SSPOV = 0;
  5803  0017B8  9C6C               	bcf	3948,6,c	;volatile
  5804                           
  5805                           ;SlaveComm_PIC18.c: 741: SSP2CON1bits.SSPEN = 0;
  5806  0017BA  9A6C               	bcf	3948,5,c	;volatile
  5807                           
  5808                           ;SlaveComm_PIC18.c: 742: SSP2CON1bits.CKP = 1;
  5809  0017BC  886C               	bsf	3948,4,c	;volatile
  5810                           
  5811                           ; BSR set to: 15
  5812                           ;SlaveComm_PIC18.c: 743: SSP2CON1bits.SSPM = 0b0100;
  5813  0017BE  506C               	movf	3948,w,c	;volatile
  5814  0017C0  0BF0               	andlw	-16
  5815  0017C2  0904               	iorlw	4
  5816  0017C4  6E6C               	movwf	3948,c	;volatile
  5817                           
  5818                           ;SlaveComm_PIC18.c: 746: SSP2CON3 = 0x00;
  5819  0017C6  0E00               	movlw	0
  5820  0017C8  6E69               	movwf	3945,c	;volatile
  5821                           
  5822                           ; BSR set to: 15
  5823                           ;SlaveComm_PIC18.c: 747: SSP2CON3bits.BOEN = 0b0;
  5824  0017CA  9869               	bcf	3945,4,c	;volatile
  5825                           
  5826                           ; BSR set to: 15
  5827                           ;SlaveComm_PIC18.c: 749: SSP2CON1bits.SSPEN = 1;
  5828  0017CC  8A6C               	bsf	3948,5,c	;volatile
  5829  0017CE  0012               	return	
  5830  0017D0                     __end_of_SPISlaveInit:
  5831                           	opt stack 0
  5832                           tblptru	equ	0xFF8
  5833                           tblptrh	equ	0xFF7
  5834                           tblptrl	equ	0xFF6
  5835                           tablat	equ	0xFF5
  5836                           prodh	equ	0xFF4
  5837                           prodl	equ	0xFF3
  5838                           intcon	equ	0xFF2
  5839                           postinc0	equ	0xFEE
  5840                           wreg	equ	0xFE8
  5841                           indf1	equ	0xFE7
  5842                           postinc1	equ	0xFE6
  5843                           postdec1	equ	0xFE5
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _Timer0_ISR *****************
  5853 ;; Defined at:
  5854 ;;		line 448 in file "Current_Sense_Main.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5868 ;;      Params:         0       0       0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0
  5870 ;;      Temps:         18       0       0       0       0       0       0
  5871 ;;      Totals:        18       0       0       0       0       0       0
  5872 ;;Total ram usage:       18 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		Interrupt level 2
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	intcode
  5882  000008                     __pintcode:
  5883                           	opt stack 0
  5884  000008                     _Timer0_ISR:
  5885                           	opt stack 23
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;incstack = 0
  5889  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5890  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5891  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5892  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5893  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5894  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5895  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5896  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5897  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5898  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5899  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5900  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5901  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5902  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5903  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5904  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  5905  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  5906  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  5907  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  5908                           
  5909                           ;Current_Sense_Main.c: 451: INTCONbits.TMR0IF = 0;
  5910  000052  94F2               	bcf	intcon,2,c	;volatile
  5911                           
  5912                           ;Current_Sense_Main.c: 453: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5913  000054  0EFC               	movlw	252
  5914  000056  6ED7               	movwf	4055,c	;volatile
  5915                           
  5916                           ;Current_Sense_Main.c: 454: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5917  000058  0E18               	movlw	24
  5918  00005A  6ED6               	movwf	4054,c	;volatile
  5919                           
  5920                           ;Current_Sense_Main.c: 456: timerCountHF++;
  5921  00005C  0E01               	movlw	1
  5922  00005E  2644               	addwf	_timerCountHF,f,c	;volatile
  5923  000060  0E00               	movlw	0
  5924  000062  2245               	addwfc	_timerCountHF+1,f,c	;volatile
  5925  000064  2246               	addwfc	_timerCountHF+2,f,c	;volatile
  5926  000066  2247               	addwfc	_timerCountHF+3,f,c	;volatile
  5927                           
  5928                           ;Current_Sense_Main.c: 457: timerCountLF++;
  5929  000068  0E01               	movlw	1
  5930  00006A  2636               	addwf	_timerCountLF,f,c	;volatile
  5931  00006C  0E00               	movlw	0
  5932  00006E  2237               	addwfc	_timerCountLF+1,f,c	;volatile
  5933  000070  2238               	addwfc	_timerCountLF+2,f,c	;volatile
  5934  000072  2239               	addwfc	_timerCountLF+3,f,c	;volatile
  5935                           
  5936                           ;Current_Sense_Main.c: 459: return;
  5937  000074  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  5938  000078  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  5939  00007C  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  5940  000080  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  5941  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5942  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5943  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5944  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5945  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5946  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5947  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5948  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5949  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5950  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5951  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5952  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5953  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5954  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5955  0000BC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5956  0000BE  0011               	retfie		f
  5957  0000C0                     __end_of_Timer0_ISR:
  5958                           	opt stack 0
  5959                           pclatu	equ	0xFFB
  5960                           pclath	equ	0xFFA
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           intcon	equ	0xFF2
  5968                           postinc0	equ	0xFEE
  5969                           fsr0h	equ	0xFEA
  5970                           fsr0l	equ	0xFE9
  5971                           wreg	equ	0xFE8
  5972                           indf1	equ	0xFE7
  5973                           postinc1	equ	0xFE6
  5974                           postdec1	equ	0xFE5
  5975                           fsr1h	equ	0xFE2
  5976                           fsr1l	equ	0xFE1
  5977                           indf2	equ	0xFDF
  5978                           postinc2	equ	0xFDE
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           pclatu	equ	0xFFB
  5983                           pclath	equ	0xFFA
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           postinc0	equ	0xFEE
  5992                           fsr0h	equ	0xFEA
  5993                           fsr0l	equ	0xFE9
  5994                           wreg	equ	0xFE8
  5995                           indf1	equ	0xFE7
  5996                           postinc1	equ	0xFE6
  5997                           postdec1	equ	0xFE5
  5998                           fsr1h	equ	0xFE2
  5999                           fsr1l	equ	0xFE1
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006                           	psect	rparam
  6007  0000                     pclatu	equ	0xFFB
  6008                           pclath	equ	0xFFA
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           intcon	equ	0xFF2
  6016                           postinc0	equ	0xFEE
  6017                           fsr0h	equ	0xFEA
  6018                           fsr0l	equ	0xFE9
  6019                           wreg	equ	0xFE8
  6020                           indf1	equ	0xFE7
  6021                           postinc1	equ	0xFE6
  6022                           postdec1	equ	0xFE5
  6023                           fsr1h	equ	0xFE2
  6024                           fsr1l	equ	0xFE1
  6025                           indf2	equ	0xFDF
  6026                           postinc2	equ	0xFDE
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031                           	psect	temp
  6032  00004D                     btemp:
  6033                           	opt stack 0
  6034  00004D                     	ds	1
  6035  0000                     int$flags	set	btemp
  6036  0000                     wtemp6	set	btemp+1
  6037                           pclatu	equ	0xFFB
  6038                           pclath	equ	0xFFA
  6039                           tblptru	equ	0xFF8
  6040                           tblptrh	equ	0xFF7
  6041                           tblptrl	equ	0xFF6
  6042                           tablat	equ	0xFF5
  6043                           prodh	equ	0xFF4
  6044                           prodl	equ	0xFF3
  6045                           intcon	equ	0xFF2
  6046                           postinc0	equ	0xFEE
  6047                           fsr0h	equ	0xFEA
  6048                           fsr0l	equ	0xFE9
  6049                           wreg	equ	0xFE8
  6050                           indf1	equ	0xFE7
  6051                           postinc1	equ	0xFE6
  6052                           postdec1	equ	0xFE5
  6053                           fsr1h	equ	0xFE2
  6054                           fsr1l	equ	0xFE1
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        13
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      76
    BANK0           160     68     140
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerPulseCheck->___lldiv
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  100022
                                             67 BANK0      1     1      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleLEDs
 ---------------------------------------------------------------------------------
 (1) _toggleLEDs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1777
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     608
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   97634
                                             51 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46943
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   16446
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     629
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49613
                                             12 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47926
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   16536
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2740
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1141
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _toggleLEDs

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     44      8C       4       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     102       9        0.0%
DATA                 0      0     102      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 13 15:34:27 2019

                                       _SPISlaveInit 1788                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l131 16C0                                                  l301 12FE  
                                                l133 16C8                                                  l109 115A  
                                                l134 16E2                                                  l311 133C  
                                                l303 1312                                                  l320 125C  
                                                l136 16DE                                                  l321 126A  
                                                l305 12DC                                                  l129 16C4  
                                                l322 1276                                                  l410 136E  
                                                l170 09A8                                                  l138 16E6  
                                                l331 1048                                                  l139 16F0  
                                                l404 149C                                                  l420 0D5E  
                                                l180 0A5C                                                  l172 09A2  
                                                l341 0B86                                                  l405 145E  
                                                l421 0CF4                                                  l333 10A2  
                                                l317 1282                                                  l413 13CE  
                                                l309 132A                                                  l181 0A74  
                                                l350 0BCA                                                  l430 0DCC  
                                                l422 0D28                                                  l334 10B4  
                                                l318 124E                                                  l190 0B5C  
                                                l182 0A84                                                  l174 09AC  
                                                l343 0C86                                                  l351 0C1E  
                                                l183 0B2E                                                  l175 0A58  
                                                l432 0E04                                                  l424 0D5A  
                                                l360 0708                                                  l328 1004  
                                                l345 0C48                                                  l441 18EE  
                                                l185 0B1A                                                  l177 0A42  
                                                l169 091E                                                  l178 0A26  
                                                l347 0C78                                                  l195 17EC  
                                                l348 0BB8                                                  l380 08AC  
                                                l436 1882                                                  l196 17DA  
                                                l188 0B46                                                  l437 1886  
                                                l382 08D8                                                  l374 0828  
                                                l358 0684                                                  l367 07E2  
                                                l640 0F4E                                                  l384 0902  
                                                l376 0854                                                  l369 079E  
                                                l482 1664                                                  l642 0FE6  
                                                l378 0880                                                  l483 1678  
                                                l299 12CC                                                  l636 0F44  
                                                l814 190C                                                  l639 0FA2  
                                                l840 1400                                                  l841 13F4  
                                                l850 1560                                                  l851 1554  
                                                l844 1434                                                  l845 1442  
                                                l854 1588                                                  l855 1596  
                                                l893 0E1E                                                  l895 0E76  
                                                l896 0EE0                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                                               l3303 0B1A                                                 l3285 0A26  
                                               l2967 0C86                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2040 0D96  
                                               u2160 185A                                                 u2250 0B84  
                                               u2170 185C                                                 _IPR1 000F9F  
                                               u1910 1492                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               u1920 14C8                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1917 1488  
                                               u1950 1404                                                 u2750 099E  
                                               u1927 14BE                                                 u2840 0B42  
                                               u2850 0B58                                                 u1980 1564  
                                               u2867 17E0                                                 u2877 1214  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atol 0F04  
                                               _main 10B8                                                 _init 1962  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C0  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0035  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                                     _communications 12A8                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 062A                                                STR_11 0653  
                                              STR_12 0653                                                STR_20 061E  
                                              STR_13 0657                                                STR_21 063E  
                                              STR_14 062A                                                STR_22 060D  
                                              STR_23 064F                                                STR_15 065B  
                                              STR_40 064B                                                STR_32 0643  
                                              STR_16 0639                                                STR_17 062A  
                                              STR_26 0657                                                STR_18 0624  
                                              STR_19 0617                                                STR_27 0624  
                                              STR_35 0647                                                STR_28 0657  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 1454  
                                    __end_of___llmod 15A8                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0023                                   ??_command_builder3 0027  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 0031  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1944                                     ?_powerPulseCheck 0001  
                                              _isLow 0043                          powerPulseCheck@meterWattsHF 00A8  
                        powerPulseCheck@meterWattsLF 00A4                                      __end_of_isdigit 1914  
                                              _useLF 004C                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0E0E  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0E0E                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 002D                        command_builder_add_string@inx 001D  
                                    __initialization 14D0                                         __end_of_atol 0FF8  
                                       __end_of_main 116E                                         __end_of_init 1968  
                             __end_of_communications 1342                               _com_command_setVersion 188A  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 1862  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 0036                                               ??_init 0013  
                                      _SPI_send_data 18D6                                        __activetblptr 000002  
                            _process_data_parameters 0660                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___lmul 1654                                               ___wmul 18B0  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                             clear_0 1516                                               clear_1 1522  
                                             clear_2 152E                                       ?_SPI_send_data 0001  
                         ?_com_command_setEnergyUsed 002D                                            ??_initOSC 0013  
                          _process_data_parameterize 0B62                                         __pdataCOMRAM 0048  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0060                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1862  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 1534                      powerPulseCheck@timerCountHFLast 00E4  
                    com_command_setPower@send_buffer 002D                      powerPulseCheck@timerCountLFLast 00E8  
                                      ___rparam_used 000001                                    SPI_send_data@data 0013  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 195A  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                      __end_of_ultoa 0F04                            ??_process_data_parameters 0033  
                 powerPulseCheck@meterEnergyUsedPart 00AC                         communications@receive_buffer 0100  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 14D0  
                         _command_builder_add_string 1454                                              ??_ultoa 0028  
                                         __pbssBANK0 00A4                                           __pbssBANK1 0100  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090  process_data_parameters@end_of_transmission_received 0033  
         communications@end_of_transmission_received 003D                                       ___lmul@product 001B  
                        __end_of_resetCommunications 12A8                                      _meterEnergyUsed 00B0  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 173E                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1944                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 15FE                                    __end_of_delayMS10 1802  
                    __end_of_process_data_parameters 0906                             __end_of_SPI_receive_data 188A  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0027  
                                            __Lparam 0000                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 13D2  
                                    __size_of___wmul 0026                                              ___llmod 1542  
                                       __psmallconst 0600                                 SPI_receive_data@data 0013  
                                            __pcinit 14D0                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 10B8  
                                            __ptext1 16AA                                              __ptext2 0906  
                                            __ptext3 1914                                              __ptext4 1962  
                                            __ptext5 192C                                              __ptext6 17D0  
                                            __ptext7 12A8                                              __ptext8 1342  
                                            __ptext9 18D6                                           _meterWatts 00B4  
                                          _T0CONbits 000FD5                                              _initOSC 192C  
                                  __end_of_initTimer 192C                                              _isdigit 18F6  
                                __size_of_Timer0_ISR 00B8                                              _strcmp2 0CE2  
                               end_of_initialization 1534                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 13D2                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 18B0                             __size_of_powerPulseCheck 025C  
                                   ??_communications 0034                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              receive_data@my_status 003A                                 __end_of_receive_data 10B8  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 003B                          ??_com_command_setEnergyUsed 002F  
                                         _toggleLEDs 16AA                                        ?_process_data 006C  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                     powerPulseCheck@timerCountHFCheck 0048  
                         process_data@receive_buffer 006C                    __end_of_process_data_parameterize 0CE2  
                               _com_command_setPower 16F4                  communications@receive_current_state 003C  
                                      ?_SPISlaveInit 0001                                       __end_of___lmul 16AA  
                                     __end_of___wmul 18D6                                        __pidataCOMRAM 1968  
              command_builder_add_string@send_buffer 0017                                       ??_process_data 0034  
                        ?_command_builder_add_string 0017                                  start_initialization 14D0  
                       resetCommunications@commState 00B8                                     _command_builder1 15A8  
                                   _command_builder3 116E                            _com_command_setEnergyUsed 173E  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0027                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 002D  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0023  
                                  ??_powerPulseCheck 0020                                          __pdataBANK0 00E4  
                         ??_send_end_of_transmission 0025                           ??_command_builder_add_char 0016  
                                        ?_toggleLEDs 0001                                          __pbssCOMRAM 0036  
                                      __pcstackBANK0 0060                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2231 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 17D0                        com_command_setEnergyUsed@temp 0060  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 002F                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 18F6                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 002F  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                  send_data@send_end 0019                                            _initTimer 1914  
                                toggleLEDs@runonceHF 0041                                  toggleLEDs@runonceLF 0042  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009C  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                                         _receive_data 0FF8  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 1832                                            _send_data 1342  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 002F  
                                __size_of_toggleLEDs 004A                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                            main@isLow 00A3  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 17D0                                            copy_data0 14E4  
                                          copy_data1 1504             process_data@end_of_transmission_received 00A2  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001F                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                     __end_of_send_end_of_transmission 195A  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                   __end_of_command_builder_add_char 1654                             __end_of_command_builder1 15FE  
                           __end_of_command_builder3 120C                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                             __ptext10 120C  
                                           __ptext11 188A                                             __ptext20 15A8  
                                           __ptext12 16F4                                             __ptext21 173E  
                                           __ptext13 0FF8                                             __ptext30 1654  
                                           __ptext22 0E0E                                             __ptext14 1862  
                                           __ptext31 0B62                                             __ptext23 1542  
                                           __ptext15 1802                                             __ptext32 18B0  
                                           __ptext24 13D2                                             __ptext16 0660  
                                           __ptext33 1788                                             __ptext25 116E  
                                           __ptext17 1832                                             __ptext26 1454  
                                           __ptext18 0CE2                                             __ptext27 15FE  
                                           __ptext19 1944                                             __ptext28 0F04  
                                           __ptext29 18F6                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                      _powerPulseCheck 0906  
                                      __size_of_atol 00F4                                        __size_of_main 00B6  
                                      strmatch@match 0024                                        __size_of_init 0006  
                        powerPulseCheck@mcpHFoutLast 0040                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                          powerPulseCheck@mcpLFoutLast 003F  
                                           int$flags 004D                                             atol@sign 0027  
                  __end_of_com_command_setEnergyUsed 1788                              __size_of_communications 009A  
                                           _strmatch 1832                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 006E                                         ??_toggleLEDs 0013  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                        ??_initTimer 0013                                             isdigit@c 0015  
                                          ultoa@base 0026                             ??_com_command_setVersion 0029  
                              __size_of_process_data 0030                                             intlevel2 0000  
                             process_data@parameters 0070                                         _timerCountHF 0044  
                                       _timerCountLF 0036                                     ___lldiv@dividend 0013  
                      communications@no_more_to_send 0034                                          ??_send_data 0017  
                                          strmatch@a 001E                                            strmatch@b 0020  
                                         _OSCCONbits 000FD3                                   __end_of_toggleLEDs 16F4  
                                _resetCommunications 120C                          powerPulseCheck@firstHFPulse 004B  
                        powerPulseCheck@firstLFPulse 004A                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 0020                                             ultoa@val 0022  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                   ___lldiv@quotient 001B                                         _process_data 1802  
                                  _SPI_transmit_wait 003E                                __size_of_SPISlaveInit 0048  
                          communications@send_buffer 00BA                     __size_of_process_data_parameters 02A6  
                                  __CFG_T3CMX$PORTC0 000000                              __end_of_powerPulseCheck 0B62  
                               ?_resetCommunications 002F                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0023                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0013  
