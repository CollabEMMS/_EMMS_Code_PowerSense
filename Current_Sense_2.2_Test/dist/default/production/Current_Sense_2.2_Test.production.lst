

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 11 22:40:07 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 1.45
    58                           ; Generated 16/11/2017 GMT
    59                           ; 
    60                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F25K22 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  001848                     __pidataCOMRAM:
    94                           	opt stack 0
    95                           
    96                           ;initializer for powerPulseCheck@firstPulse
    97  001848  01                 	db	1
    98                           
    99                           	psect	idataBANK0
   100  001842                     __pidataBANK0:
   101                           	opt stack 0
   102                           
   103                           ;initializer for powerPulseCheck@timerCountHFCheck
   104  001842  0001               	dw	1
   105                           
   106                           ;initializer for powerPulseCheck@timerCountHFLast
   107  001844  FFFF               	dw	65535
   108  001846  7FFF               	dw	32767
   109  0000                     _ANSELBbits	set	3897
   110  0000                     _ANSELAbits	set	3896
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELB	set	3897
   113  0000                     _ANSELA	set	3896
   114  0000                     _SSP2CON3bits	set	3945
   115  0000                     _SSP2CON3	set	3945
   116  0000                     _SSP2BUF	set	3951
   117  0000                     _SSP2STATbits	set	3949
   118  0000                     _SSP2CON1bits	set	3948
   119  0000                     _T0CONbits	set	4053
   120  0000                     _IPR5	set	3967
   121  0000                     _IPR4	set	3964
   122  0000                     _IPR3	set	4005
   123  0000                     _IPR2	set	4002
   124  0000                     _IPR1	set	3999
   125  0000                     _PIE5	set	3965
   126  0000                     _PIE4	set	3962
   127  0000                     _PIE3	set	4003
   128  0000                     _PIE2	set	4000
   129  0000                     _PIE1	set	3997
   130  0000                     _PIR5	set	3966
   131  0000                     _PIR4	set	3963
   132  0000                     _PIR3	set	4004
   133  0000                     _PIR2	set	4001
   134  0000                     _PIR1	set	3998
   135  0000                     _RCONbits	set	4048
   136  0000                     _INTCON3	set	4080
   137  0000                     _INTCON2	set	4081
   138  0000                     _INTCON	set	4082
   139  0000                     _TRISBbits	set	3987
   140  0000                     _ADCON0bits	set	4034
   141  0000                     _OSCTUNEbits	set	3995
   142  0000                     _OSCCON2bits	set	4050
   143  0000                     _OSCCONbits	set	4051
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR0H	set	4055
   146  0000                     _INTCONbits	set	4082
   147  0000                     _PORTBbits	set	3969
   148  0000                     _PORTAbits	set	3968
   149  0000                     _TRISAbits	set	3986
   150  0000                     _TRISCbits	set	3988
   151  0000                     _LATCbits	set	3979
   152  0000                     _LATBbits	set	3978
   153                           
   154                           	psect	smallconst
   155  000600                     __psmallconst:
   156                           	opt stack 0
   157  000600  00                 	db	0
   158  000601                     STR_3:
   159  000601  43                 	db	67	;'C'
   160  000602  61                 	db	97	;'a'
   161  000603  6C                 	db	108	;'l'
   162  000604  69                 	db	105	;'i'
   163  000605  62                 	db	98	;'b'
   164  000606  72                 	db	114	;'r'
   165  000607  61                 	db	97	;'a'
   166  000608  74                 	db	116	;'t'
   167  000609  69                 	db	105	;'i'
   168  00060A  6F                 	db	111	;'o'
   169  00060B  6E                 	db	110	;'n'
   170  00060C  00                 	db	0
   171  00060D                     STR_22:
   172  00060D  50                 	db	80	;'P'
   173  00060E  53                 	db	83	;'S'
   174  00060F  56                 	db	86	;'V'
   175  000610  65                 	db	101	;'e'
   176  000611  72                 	db	114	;'r'
   177  000612  73                 	db	115	;'s'
   178  000613  69                 	db	105	;'i'
   179  000614  6F                 	db	111	;'o'
   180  000615  6E                 	db	110	;'n'
   181  000616  00                 	db	0
   182  000617                     STR_4:
   183  000617  45                 	db	69	;'E'
   184  000618  6E                 	db	110	;'n'
   185  000619  55                 	db	85	;'U'
   186  00061A  73                 	db	115	;'s'
   187  00061B  65                 	db	101	;'e'
   188  00061C  64                 	db	100	;'d'
   189  00061D  00                 	db	0
   190  00061E                     STR_20:
   191  00061E  56                 	db	86	;'V'
   192  00061F  6F                 	db	111	;'o'
   193  000620  6C                 	db	108	;'l'
   194  000621  74                 	db	116	;'t'
   195  000622  73                 	db	115	;'s'
   196  000623  00                 	db	0
   197  000624                     STR_18:
   198  000624  57                 	db	87	;'W'
   199  000625  61                 	db	97	;'a'
   200  000626  74                 	db	116	;'t'
   201  000627  74                 	db	116	;'t'
   202  000628  73                 	db	115	;'s'
   203  000629  00                 	db	0
   204  00062A                     STR_7:
   205  00062A  4C                 	db	76	;'L'
   206  00062B  45                 	db	69	;'E'
   207  00062C  44                 	db	68	;'D'
   208  00062D  42                 	db	66	;'B'
   209  00062E  00                 	db	0
   210  00062F                     STR_6:
   211  00062F  44                 	db	68	;'D'
   212  000630  61                 	db	97	;'a'
   213  000631  74                 	db	116	;'t'
   214  000632  61                 	db	97	;'a'
   215  000633  00                 	db	0
   216  000634                     STR_5:
   217  000634  52                 	db	82	;'R'
   218  000635  65                 	db	101	;'e'
   219  000636  61                 	db	97	;'a'
   220  000637  64                 	db	100	;'d'
   221  000638  00                 	db	0
   222  000639                     STR_16:
   223  000639  43                 	db	67	;'C'
   224  00063A  6F                 	db	111	;'o'
   225  00063B  6E                 	db	110	;'n'
   226  00063C  66                 	db	102	;'f'
   227  00063D  00                 	db	0
   228  00063E                     STR_21:
   229  00063E  41                 	db	65	;'A'
   230  00063F  6D                 	db	109	;'m'
   231  000640  70                 	db	112	;'p'
   232  000641  73                 	db	115	;'s'
   233  000642  00                 	db	0
   234  000643  32                 	db	50	;'2'
   235  000644  32                 	db	50	;'2'
   236  000645  32                 	db	50	;'2'
   237  000646  00                 	db	0
   238  000647  33                 	db	51	;'3'
   239  000648  33                 	db	51	;'3'
   240  000649  33                 	db	51	;'3'
   241  00064A  00                 	db	0
   242  00064B                     STR_40:
   243  00064B  34                 	db	52	;'4'
   244  00064C  34                 	db	52	;'4'
   245  00064D  34                 	db	52	;'4'
   246  00064E  00                 	db	0
   247  00064F                     STR_1:
   248  00064F  45                 	db	69	;'E'
   249  000650  4E                 	db	78	;'N'
   250  000651  44                 	db	68	;'D'
   251  000652  00                 	db	0
   252  000653                     STR_11:
   253  000653  4F                 	db	79	;'O'
   254  000654  66                 	db	102	;'f'
   255  000655  66                 	db	102	;'f'
   256  000656  00                 	db	0
   257  000657                     STR_2:
   258  000657  53                 	db	83	;'S'
   259  000658  65                 	db	101	;'e'
   260  000659  74                 	db	116	;'t'
   261  00065A  00                 	db	0
   262  00065B                     STR_8:
   263  00065B  4F                 	db	79	;'O'
   264  00065C  6E                 	db	110	;'n'
   265  00065D  00                 	db	0
   266  0000                     
   267                           ; #config settings
   268  00065E  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           	psect	cinit
   271  001434                     __pcinit:
   272                           	opt stack 0
   273  001434                     start_initialization:
   274                           	opt stack 0
   275  001434                     __initialization:
   276                           	opt stack 0
   277                           
   278                           ; Initialize objects allocated to BANK0 (6 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280  001434  0E42               	movlw	low __pidataBANK0
   281  001436  6EF6               	movwf	tblptrl,c
   282  001438  0E18               	movlw	high __pidataBANK0
   283  00143A  6EF7               	movwf	tblptrh,c
   284  00143C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   285  00143E  6EF8               	movwf	tblptru,c
   286  001440  EE00  F0D5         	lfsr	0,__pdataBANK0
   287  001444  EE10 F006          	lfsr	1,6
   288  001448                     copy_data0:
   289  001448  0009               	tblrd		*+
   290  00144A  CFF5 FFEE          	movff	tablat,postinc0
   291  00144E  50E5               	movf	postdec1,w,c
   292  001450  50E1               	movf	fsr1l,w,c
   293  001452  E1FA               	bnz	copy_data0
   294                           
   295                           ; Initialize objects allocated to COMRAM (1 bytes)
   296                           ; load TBLPTR registers with __pidataCOMRAM
   297  001454  0E48               	movlw	low __pidataCOMRAM
   298  001456  6EF6               	movwf	tblptrl,c
   299  001458  0E18               	movlw	high __pidataCOMRAM
   300  00145A  6EF7               	movwf	tblptrh,c
   301  00145C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   302  00145E  6EF8               	movwf	tblptru,c
   303  001460  0009               	tblrd		*+	;fetch initializer
   304  001462  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   305                           
   306                           ; Clear objects allocated to BANK0 (98 bytes)
   307  001466  EE00  F060         	lfsr	0,__pbssBANK0
   308  00146A  0E62               	movlw	98
   309  00146C                     clear_0:
   310  00146C  6AEE               	clrf	postinc0,c
   311  00146E  06E8               	decf	wreg,f,c
   312  001470  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to COMRAM (19 bytes)
   315  001472  EE00  F038         	lfsr	0,__pbssCOMRAM
   316  001476  0E13               	movlw	19
   317  001478                     clear_1:
   318  001478  6AEE               	clrf	postinc0,c
   319  00147A  06E8               	decf	wreg,f,c
   320  00147C  E1FD               	bnz	clear_1
   321  00147E                     end_of_initialization:
   322                           	opt stack 0
   323  00147E                     __end_of__initialization:
   324                           	opt stack 0
   325  00147E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   326  001480  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   327  001482  0E00               	movlw	low (__Lmediumconst shr (0+16))
   328  001484  6EF8               	movwf	tblptru,c
   329  001486  0100               	movlb	0
   330  001488  EF9E  F007         	goto	_main	;jump to C main() function
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssCOMRAM
   341  000038                     __pbssCOMRAM:
   342                           	opt stack 0
   343  000038                     _timerCountLF:
   344                           	opt stack 0
   345  000038                     	ds	4
   346  00003C                     powerPulseCheck@TESTING_count:
   347                           	opt stack 0
   348  00003C                     	ds	2
   349  00003E                     receive_data@my_status:
   350                           	opt stack 0
   351  00003E                     	ds	1
   352  00003F                     communications@last_state_active:
   353                           	opt stack 0
   354  00003F                     	ds	1
   355  000040                     communications@receive_current_state:
   356                           	opt stack 0
   357  000040                     	ds	1
   358  000041                     communications@end_of_transmission_received:
   359                           	opt stack 0
   360  000041                     	ds	1
   361  000042                     _SPI_transmit_wait:
   362                           	opt stack 0
   363  000042                     	ds	1
   364  000043                     powerPulseCheck@mcpLFoutLast:
   365                           	opt stack 0
   366  000043                     	ds	1
   367  000044                     powerPulseCheck@mcpHFoutLast:
   368                           	opt stack 0
   369  000044                     	ds	1
   370  000045                     powerPulseCheck@TESTING_oneshot:
   371                           	opt stack 0
   372  000045                     	ds	1
   373  000046                     _isLow:
   374                           	opt stack 0
   375  000046                     	ds	1
   376  000047                     _timerCountHF:
   377                           	opt stack 0
   378  000047                     	ds	4
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	dataCOMRAM
   389  00004B                     __pdataCOMRAM:
   390                           	opt stack 0
   391  00004B                     powerPulseCheck@firstPulse:
   392                           	opt stack 0
   393  00004B                     	ds	1
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403                           	psect	bssBANK0
   404  000060                     __pbssBANK0:
   405                           	opt stack 0
   406  000060                     powerPulseCheck@meterEnergyUsedPart:
   407                           	opt stack 0
   408  000060                     	ds	4
   409  000064                     _meterEnergyUsed:
   410                           	opt stack 0
   411  000064                     	ds	4
   412  000068                     _meterWatts:
   413                           	opt stack 0
   414  000068                     	ds	4
   415  00006C                     resetCommunications@commState:
   416                           	opt stack 0
   417  00006C                     	ds	2
   418  00006E                     communications@send_buffer:
   419                           	opt stack 0
   420  00006E                     	ds	42
   421  000098                     communications@receive_buffer:
   422                           	opt stack 0
   423  000098                     	ds	42
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	dataBANK0
   434  0000D5                     __pdataBANK0:
   435                           	opt stack 0
   436  0000D5                     powerPulseCheck@timerCountHFCheck:
   437                           	opt stack 0
   438  0000D5                     	ds	2
   439  0000D7                     powerPulseCheck@timerCountHFLast:
   440                           	opt stack 0
   441  0000D7                     	ds	4
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackBANK1
   452  000100                     __pcstackBANK1:
   453                           	opt stack 0
   454  000100                     process_data@parameters:
   455                           	opt stack 0
   456                           
   457                           ; 50 bytes @ 0x0
   458  000100                     	ds	50
   459  000132                     process_data@end_of_transmission_received:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x32
   463  000132                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	cstackBANK0
   474  0000C2                     __pcstackBANK0:
   475                           	opt stack 0
   476  0000C2                     com_command_setPower@temp:
   477                           	opt stack 0
   478  0000C2                     com_command_setEnergyUsed@temp:
   479                           	opt stack 0
   480                           
   481                           ; 12 bytes @ 0x0
   482  0000C2                     	ds	12
   483  0000CE                     communications@no_more_to_send:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0xC
   487  0000CE                     	ds	1
   488  0000CF                     communications@firstTime:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0xD
   492  0000CF                     	ds	1
   493  0000D0                     ??_main:
   494                           
   495                           ; 1 bytes @ 0xE
   496  0000D0                     	ds	2
   497  0000D2                     main@isLow:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x10
   501  0000D2                     	ds	1
   502  0000D3                     main@inx:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x11
   506  0000D3                     	ds	2
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	cstackCOMRAM
   517  000001                     __pcstackCOMRAM:
   518                           	opt stack 0
   519  000001                     ??_Timer0_ISR:
   520                           
   521                           ; 1 bytes @ 0x0
   522  000001                     	ds	18
   523  000013                     ??_isdigit:
   524  000013                     ?_strcmp2:
   525                           	opt stack 0
   526  000013                     ?___wmul:
   527                           	opt stack 0
   528  000013                     ?___awmod:
   529                           	opt stack 0
   530  000013                     ?___lmul:
   531                           	opt stack 0
   532  000013                     ?___lldiv:
   533                           	opt stack 0
   534  000013                     ?___llmod:
   535                           	opt stack 0
   536  000013                     SPI_send_data@data:
   537                           	opt stack 0
   538  000013                     delayMS10@count:
   539                           	opt stack 0
   540  000013                     command_builder_add_char@send_buffer:
   541                           	opt stack 0
   542  000013                     strcmp2@a:
   543                           	opt stack 0
   544  000013                     SPI_receive_data@data:
   545                           	opt stack 0
   546  000013                     ___wmul@multiplier:
   547                           	opt stack 0
   548  000013                     ___awmod@dividend:
   549                           	opt stack 0
   550  000013                     ___lmul@multiplier:
   551                           	opt stack 0
   552  000013                     ___lldiv@dividend:
   553                           	opt stack 0
   554  000013                     ___llmod@dividend:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x12
   558  000013                     	ds	1
   559  000014                     SPI_send_data@sendGood:
   560                           	opt stack 0
   561  000014                     _isdigit$2081:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x13
   565  000014                     	ds	1
   566  000015                     ??_delayMS10:
   567  000015                     command_builder_add_char@data:
   568                           	opt stack 0
   569  000015                     SPI_receive_data@recvGood:
   570                           	opt stack 0
   571  000015                     isdigit@c:
   572                           	opt stack 0
   573  000015                     send_data@send_buffer:
   574                           	opt stack 0
   575  000015                     strcmp2@b:
   576                           	opt stack 0
   577  000015                     ___wmul@multiplicand:
   578                           	opt stack 0
   579  000015                     ___awmod@divisor:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x14
   583  000015                     	ds	1
   584  000016                     ??_command_builder_add_char:
   585  000016                     delayMS10@inx:
   586                           	opt stack 0
   587  000016                     receive_data@receive_buffer:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x15
   591  000016                     	ds	1
   592  000017                     ??_send_data:
   593  000017                     ??_strcmp2:
   594  000017                     ___awmod@counter:
   595                           	opt stack 0
   596  000017                     command_builder_add_string@send_buffer:
   597                           	opt stack 0
   598  000017                     ___wmul@product:
   599                           	opt stack 0
   600  000017                     ___lmul@multiplicand:
   601                           	opt stack 0
   602  000017                     ___lldiv@divisor:
   603                           	opt stack 0
   604  000017                     ___llmod@divisor:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x16
   608  000017                     	ds	1
   609  000018                     ??_receive_data:
   610  000018                     ___awmod@sign:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x17
   614  000018                     	ds	1
   615  000019                     receive_data@data:
   616                           	opt stack 0
   617  000019                     send_data@send_end:
   618                           	opt stack 0
   619  000019                     process_data_parameterize@parameters:
   620                           	opt stack 0
   621  000019                     command_builder_add_string@data_string:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x18
   625  000019                     	ds	1
   626  00001A                     strcmp2@match:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x19
   630  00001A                     	ds	1
   631  00001B                     ??_command_builder_add_string:
   632  00001B                     ___llmod@counter:
   633                           	opt stack 0
   634  00001B                     process_data_parameterize@buffer_to_parameterize:
   635                           	opt stack 0
   636  00001B                     ___lmul@product:
   637                           	opt stack 0
   638  00001B                     ___lldiv@quotient:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x1A
   642  00001B                     	ds	1
   643  00001C                     strcmp2@inx:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x1B
   647  00001C                     	ds	1
   648  00001D                     ??_process_data_parameterize:
   649  00001D                     command_builder_add_string@inx:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x1C
   653  00001D                     	ds	1
   654  00001E                     strmatch@a:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1D
   658  00001E                     	ds	1
   659  00001F                     ?_atol:
   660                           	opt stack 0
   661  00001F                     ___lldiv@counter:
   662                           	opt stack 0
   663  00001F                     command_builder1@send_buffer:
   664                           	opt stack 0
   665  00001F                     command_builder3@send_buffer:
   666                           	opt stack 0
   667  00001F                     atol@s:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x1E
   671  00001F                     	ds	1
   672  000020                     process_data_parameterize@inx:
   673                           	opt stack 0
   674  000020                     strmatch@b:
   675                           	opt stack 0
   676  000020                     ultoa@buf:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x1F
   680  000020                     	ds	1
   681  000021                     command_builder1@data1:
   682                           	opt stack 0
   683  000021                     command_builder3@data1:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x20
   687  000021                     	ds	1
   688  000022                     process_data_parameterize@parameter_index:
   689                           	opt stack 0
   690  000022                     strmatch@result:
   691                           	opt stack 0
   692  000022                     ultoa@val:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x21
   696  000022                     	ds	1
   697  000023                     ??_atol:
   698  000023                     process_data_parameterize@parameter_position:
   699                           	opt stack 0
   700  000023                     command_builder3@data2:
   701                           	opt stack 0
   702  000023                     send_end_of_transmission@send_buffer:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x22
   706  000023                     	ds	1
   707  000024                     strmatch@match:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x23
   711  000024                     	ds	1
   712  000025                     command_builder3@data3:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x24
   716  000025                     	ds	1
   717  000026                     ultoa@base:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x25
   721  000026                     	ds	1
   722  000027                     atol@sign:
   723                           	opt stack 0
   724  000027                     com_command_setVersion@send_buffer:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x26
   728  000027                     	ds	1
   729  000028                     atol@a:
   730                           	opt stack 0
   731  000028                     ultoa@v:
   732                           	opt stack 0
   733                           
   734                           ; 4 bytes @ 0x27
   735  000028                     	ds	1
   736  000029                     
   737                           ; 1 bytes @ 0x28
   738  000029                     	ds	3
   739  00002C                     atol@c:
   740                           	opt stack 0
   741  00002C                     ultoa@c:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x2B
   745  00002C                     	ds	1
   746  00002D                     com_command_setPower@send_buffer:
   747                           	opt stack 0
   748  00002D                     com_command_setEnergyUsed@send_buffer:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x2C
   752  00002D                     	ds	2
   753  00002F                     resetCommunications@send_buffer:
   754                           	opt stack 0
   755  00002F                     process_data_parameters@parameters:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x2E
   759  00002F                     	ds	2
   760  000031                     ??_resetCommunications:
   761  000031                     process_data_parameters@send_buffer:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x30
   765  000031                     	ds	2
   766  000033                     process_data_parameters@end_of_transmission_received:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x32
   770  000033                     	ds	1
   771  000034                     process_data@receive_buffer:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x33
   775  000034                     	ds	2
   776  000036                     process_data@send_buffer:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x35
   780  000036                     	ds	2
   781  000038                     tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           postdec1	equ	0xFE5
   788                           fsr1l	equ	0xFE1
   789                           
   790                           ; 1 bytes @ 0x37
   791 ;;
   792 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   793 ;;
   794 ;; *************** function _main *****************
   795 ;; Defined at:
   796 ;;		line 90 in file "Current_Sense_Main.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  inx             2   17[BANK0 ] int 
   801 ;;  isLow           1   16[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       3       0       0       0       0       0
   813 ;;      Temps:          0       2       0       0       0       0       0
   814 ;;      Totals:         0       5       0       0       0       0       0
   815 ;;Total ram usage:        5 bytes
   816 ;; Hardware stack levels required when called:    8
   817 ;; This function calls:
   818 ;;		_communications
   819 ;;		_delayMS10
   820 ;;		_init
   821 ;;		_initTimer
   822 ;;		_powerPulseCheck
   823 ;;		_toggleBlue
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830  000F3C                     __ptext0:
   831                           	opt stack 0
   832  000F3C                     _main:
   833                           	opt stack 23
   834                           
   835                           ;Current_Sense_Main.c: 92: ANSELA = 0b00000000;
   836                           
   837                           ;incstack = 0
   838  000F3C  0E00               	movlw	0
   839  000F3E  010F               	movlb	15	; () banked
   840  000F40  6F38               	movwf	56,b	;volatile
   841                           
   842                           ;Current_Sense_Main.c: 93: ANSELB = 0b00000000;
   843  000F42  0E00               	movlw	0
   844  000F44  6F39               	movwf	57,b	;volatile
   845                           
   846                           ;Current_Sense_Main.c: 94: ANSELC = 0b00000000;
   847  000F46  0E00               	movlw	0
   848  000F48  6F3A               	movwf	58,b	;volatile
   849                           
   850                           ; BSR set to: 15
   851                           ;Current_Sense_Main.c: 96: init( );
   852  000F4A  EC1C  F00C         	call	_init	;wreg free
   853                           
   854                           ;Current_Sense_Main.c: 101: for( int inx = 0; inx < 3; inx++ )
   855  000F4E  0E00               	movlw	0
   856  000F50  0100               	movlb	0	; () banked
   857  000F52  6FD4               	movwf	(main@inx+1)& (0+255),b
   858  000F54  0E00               	movlw	0
   859  000F56  6FD3               	movwf	main@inx& (0+255),b
   860                           
   861                           ; BSR set to: 0
   862  000F58  BFD4               	btfsc	(main@inx+1)& (0+255),7,b
   863  000F5A  D003               	goto	l107
   864  000F5C  51D4               	movf	(main@inx+1)& (0+255),w,b
   865  000F5E  E12A               	bnz	l108
   866  000F60  D025               	goto	L1
   867  000F62                     l107:
   868                           
   869                           ; BSR set to: 0
   870                           ;Current_Sense_Main.c: 102: {
   871                           ;Current_Sense_Main.c: 103: LATBbits.LATB4 = 1;
   872  000F62  888A               	bsf	3978,4,c	;volatile
   873                           
   874                           ;Current_Sense_Main.c: 104: LATCbits.LATC1 = 1;
   875  000F64  828B               	bsf	3979,1,c	;volatile
   876                           
   877                           ;Current_Sense_Main.c: 105: LATCbits.LATC0 = 1;
   878  000F66  808B               	bsf	3979,0,c	;volatile
   879                           
   880                           ; BSR set to: 0
   881                           ;Current_Sense_Main.c: 106: _delay((unsigned long)((100)*(16000000/4000.0)));
   882  000F68  0E03               	movlw	3
   883  000F6A  0100               	movlb	0	; () banked
   884  000F6C  6FD1               	movwf	(??_main+1)& (0+255),b
   885  000F6E  0E08               	movlw	8
   886  000F70  6FD0               	movwf	??_main& (0+255),b
   887  000F72  0E77               	movlw	119
   888  000F74                     u3077:
   889  000F74  2EE8               	decfsz	wreg,f,c
   890  000F76  D7FE               	bra	u3077
   891  000F78  2FD0               	decfsz	??_main& (0+255),f,b
   892  000F7A  D7FC               	bra	u3077
   893  000F7C  2FD1               	decfsz	(??_main+1)& (0+255),f,b
   894  000F7E  D7FA               	bra	u3077
   895                           
   896                           ;Current_Sense_Main.c: 107: LATBbits.LATB4 = 0;
   897  000F80  988A               	bcf	3978,4,c	;volatile
   898                           
   899                           ;Current_Sense_Main.c: 108: LATCbits.LATC1 = 0;
   900  000F82  928B               	bcf	3979,1,c	;volatile
   901                           
   902                           ;Current_Sense_Main.c: 109: LATCbits.LATC0 = 0;
   903  000F84  908B               	bcf	3979,0,c	;volatile
   904                           
   905                           ;Current_Sense_Main.c: 110: _delay((unsigned long)((100)*(16000000/4000.0)));
   906  000F86  0E03               	movlw	3
   907  000F88  0100               	movlb	0	; () banked
   908  000F8A  6FD1               	movwf	(??_main+1)& (0+255),b
   909  000F8C  0E08               	movlw	8
   910  000F8E  6FD0               	movwf	??_main& (0+255),b
   911  000F90  0E77               	movlw	119
   912  000F92                     u3087:
   913  000F92  2EE8               	decfsz	wreg,f,c
   914  000F94  D7FE               	bra	u3087
   915  000F96  2FD0               	decfsz	??_main& (0+255),f,b
   916  000F98  D7FC               	bra	u3087
   917  000F9A  2FD1               	decfsz	(??_main+1)& (0+255),f,b
   918  000F9C  D7FA               	bra	u3087
   919  000F9E  0100               	movlb	0	; () banked
   920  000FA0  4BD3               	infsnz	main@inx& (0+255),f,b
   921  000FA2  2BD4               	incf	(main@inx+1)& (0+255),f,b
   922  000FA4  BFD4               	btfsc	(main@inx+1)& (0+255),7,b
   923  000FA6  D7DD               	goto	l107
   924  000FA8  51D4               	movf	(main@inx+1)& (0+255),w,b
   925  000FAA  E104               	bnz	u3060
   926  000FAC                     L1:
   927  000FAC  0E03               	movlw	3
   928  000FAE  5DD3               	subwf	main@inx& (0+255),w,b
   929  000FB0  A0D8               	btfss	status,0,c
   930  000FB2  D7D7               	goto	l107
   931  000FB4                     u3060:
   932  000FB4                     l108:
   933                           
   934                           ; BSR set to: 0
   935                           ;Current_Sense_Main.c: 113: }
   936                           ;Current_Sense_Main.c: 116: LATBbits.LATB4 = 0;
   937  000FB4  988A               	bcf	3978,4,c	;volatile
   938                           
   939                           ;Current_Sense_Main.c: 117: LATCbits.LATC1 = 0;
   940  000FB6  928B               	bcf	3979,1,c	;volatile
   941                           
   942                           ;Current_Sense_Main.c: 118: LATCbits.LATC0 = 0;
   943  000FB8  908B               	bcf	3979,0,c	;volatile
   944                           
   945                           ;Current_Sense_Main.c: 121: TRISCbits.TRISC7 = 0;
   946  000FBA  9E94               	bcf	3988,7,c	;volatile
   947                           
   948                           ;Current_Sense_Main.c: 122: TRISCbits.TRISC4 = 0;
   949  000FBC  9894               	bcf	3988,4,c	;volatile
   950                           
   951                           ;Current_Sense_Main.c: 123: TRISCbits.TRISC3 = 0;
   952  000FBE  9694               	bcf	3988,3,c	;volatile
   953                           
   954                           ;Current_Sense_Main.c: 124: TRISCbits.TRISC6 = 0;
   955  000FC0  9C94               	bcf	3988,6,c	;volatile
   956                           
   957                           ;Current_Sense_Main.c: 127: LATCbits.LATC6 = 1;
   958  000FC2  8C8B               	bsf	3979,6,c	;volatile
   959                           
   960                           ;Current_Sense_Main.c: 128: LATCbits.LATC7 = 1;
   961  000FC4  8E8B               	bsf	3979,7,c	;volatile
   962                           
   963                           ;Current_Sense_Main.c: 129: LATCbits.LATC4 = 1;
   964  000FC6  888B               	bsf	3979,4,c	;volatile
   965                           
   966                           ;Current_Sense_Main.c: 130: LATCbits.LATC3 = 0;
   967  000FC8  968B               	bcf	3979,3,c	;volatile
   968                           
   969                           ; BSR set to: 0
   970                           ;Current_Sense_Main.c: 133: delayMS10( 5 );
   971  000FCA  0E00               	movlw	0
   972  000FCC  6E14               	movwf	delayMS10@count+1,c
   973  000FCE  0E05               	movlw	5
   974  000FD0  6E13               	movwf	delayMS10@count,c
   975  000FD2  EC35  F00B         	call	_delayMS10	;wreg free
   976                           
   977                           ;Current_Sense_Main.c: 136: TRISAbits.TRISA2 = 1;
   978  000FD6  8492               	bsf	3986,2,c	;volatile
   979                           
   980                           ;Current_Sense_Main.c: 138: bool isLow = 0;
   981  000FD8  0E00               	movlw	0
   982  000FDA  0100               	movlb	0	; () banked
   983  000FDC  6FD2               	movwf	main@isLow& (0+255),b
   984                           
   985                           ; BSR set to: 0
   986                           ;Current_Sense_Main.c: 139: communications( 1 );
   987  000FDE  0E01               	movlw	1
   988  000FE0  ECFC  F007         	call	_communications
   989                           
   990                           ;Current_Sense_Main.c: 141: initTimer( );
   991  000FE4  ECF9  F00B         	call	_initTimer	;wreg free
   992  000FE8                     
   993                           ;Current_Sense_Main.c: 145: {
   994                           ;Current_Sense_Main.c: 156: toggleBlue( );
   995  000FE8  ECB8  F00B         	call	_toggleBlue	;wreg free
   996                           
   997                           ;Current_Sense_Main.c: 235: communications( 0 );
   998  000FEC  0E00               	movlw	0
   999  000FEE  ECFC  F007         	call	_communications
  1000                           
  1001                           ;Current_Sense_Main.c: 249: powerPulseCheck( );
  1002  000FF2  ECCE  F006         	call	_powerPulseCheck	;wreg free
  1003  000FF6  D7F8               	goto	l109
  1004  000FF8                     __end_of_main:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           status	equ	0xFD8
  1015                           
  1016 ;; *************** function _toggleBlue *****************
  1017 ;; Defined at:
  1018 ;;		line 307 in file "Current_Sense_Main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1032 ;;      Params:         0       0       0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text1
  1047  001770                     __ptext1:
  1048                           	opt stack 0
  1049  001770                     _toggleBlue:
  1050                           	opt stack 29
  1051                           
  1052                           ;Current_Sense_Main.c: 310: if( PORTAbits.RA2 == 0 )
  1053                           
  1054                           ;incstack = 0
  1055  001770  B480               	btfsc	3968,2,c	;volatile
  1056  001772  D006               	goto	l115
  1057                           
  1058                           ;Current_Sense_Main.c: 311: {
  1059                           ;Current_Sense_Main.c: 312: if( isLow == 0 )
  1060  001774  5046               	movf	_isLow,w,c
  1061  001776  A4D8               	btfss	status,2,c
  1062  001778  D005               	goto	l119
  1063                           
  1064                           ;Current_Sense_Main.c: 313: {
  1065                           ;Current_Sense_Main.c: 315: if( PORTBbits.RB4 == 0 )
  1066  00177A  5081               	movf	3969,w,c	;volatile
  1067                           
  1068                           ;Current_Sense_Main.c: 324: }
  1069                           ;Current_Sense_Main.c: 325: isLow = 1;
  1070                           
  1071                           ;Current_Sense_Main.c: 320: else
  1072                           ;Current_Sense_Main.c: 321: {
  1073                           
  1074                           ;Current_Sense_Main.c: 316: {
  1075                           ;Current_Sense_Main.c: 319: }
  1076  00177C  0E01               	movlw	1
  1077  00177E  D001               	goto	L4
  1078  001780                     l115:
  1079                           
  1080                           ;Current_Sense_Main.c: 329: else
  1081                           ;Current_Sense_Main.c: 330: {
  1082                           ;Current_Sense_Main.c: 331: isLow = 0;
  1083  001780  0E00               	movlw	0
  1084  001782                     L4:
  1085  001782  6E46               	movwf	_isLow,c
  1086  001784                     l119:
  1087                           
  1088                           ;Current_Sense_Main.c: 332: }
  1089                           ;Current_Sense_Main.c: 334: if( isLow )
  1090  001784  5046               	movf	_isLow,w,c
  1091  001786  B4D8               	btfsc	status,2,c
  1092  001788  D002               	goto	l120
  1093                           
  1094                           ;Current_Sense_Main.c: 335: {
  1095                           ;Current_Sense_Main.c: 336: LATCbits.LATC1 = 0;
  1096  00178A  928B               	bcf	3979,1,c	;volatile
  1097                           
  1098                           ;Current_Sense_Main.c: 337: }
  1099  00178C  0012               	return	
  1100  00178E                     l120:
  1101                           
  1102                           ;Current_Sense_Main.c: 338: else
  1103                           ;Current_Sense_Main.c: 339: {
  1104                           ;Current_Sense_Main.c: 340: LATCbits.LATC1 = 1;
  1105  00178E  828B               	bsf	3979,1,c	;volatile
  1106  001790  0012               	return	
  1107  001792                     __end_of_toggleBlue:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           postdec1	equ	0xFE5
  1116                           fsr1l	equ	0xFE1
  1117                           status	equ	0xFD8
  1118                           
  1119 ;; *************** function _powerPulseCheck *****************
  1120 ;; Defined at:
  1121 ;;		line 417 in file "Current_Sense_Main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1135 ;;      Params:         0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		___awmod
  1144 ;;		___lldiv
  1145 ;;		___lmul
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text2
  1152  000D9C                     __ptext2:
  1153                           	opt stack 0
  1154  000D9C                     _powerPulseCheck:
  1155                           	opt stack 28
  1156                           
  1157                           ;Current_Sense_Main.c: 422: static int TESTING_count = 0;
  1158                           ;Current_Sense_Main.c: 423: static bool TESTING_oneshot = 0;
  1159                           ;Current_Sense_Main.c: 425: if( timerCountHF >= 1000 )
  1160                           
  1161                           ;incstack = 0
  1162  000D9C  504A               	movf	_timerCountHF+3,w,c	;volatile
  1163  000D9E  1049               	iorwf	_timerCountHF+2,w,c	;volatile
  1164  000DA0  E106               	bnz	u2880
  1165  000DA2  0EE8               	movlw	232
  1166  000DA4  5C47               	subwf	_timerCountHF,w,c	;volatile
  1167  000DA6  0E03               	movlw	3
  1168  000DA8  5848               	subwfb	_timerCountHF+1,w,c	;volatile
  1169  000DAA  A0D8               	btfss	status,0,c
  1170  000DAC  D00A               	goto	l134
  1171  000DAE                     u2880:
  1172                           
  1173                           ;Current_Sense_Main.c: 426: {
  1174                           ;Current_Sense_Main.c: 427: TESTING_count++;
  1175  000DAE  4A3C               	infsnz	powerPulseCheck@TESTING_count,f,c
  1176  000DB0  2A3D               	incf	powerPulseCheck@TESTING_count+1,f,c
  1177                           
  1178                           ;Current_Sense_Main.c: 428: timerCountHF = 0;
  1179  000DB2  0E00               	movlw	0
  1180  000DB4  6E47               	movwf	_timerCountHF,c	;volatile
  1181  000DB6  0E00               	movlw	0
  1182  000DB8  6E48               	movwf	_timerCountHF+1,c	;volatile
  1183  000DBA  0E00               	movlw	0
  1184  000DBC  6E49               	movwf	_timerCountHF+2,c	;volatile
  1185  000DBE  0E00               	movlw	0
  1186  000DC0  6E4A               	movwf	_timerCountHF+3,c	;volatile
  1187  000DC2                     l134:
  1188                           
  1189                           ;Current_Sense_Main.c: 429: }
  1190                           ;Current_Sense_Main.c: 431: if( TESTING_count < 5 )
  1191  000DC2  BE3D               	btfsc	powerPulseCheck@TESTING_count+1,7,c
  1192  000DC4  D006               	goto	u2890
  1193  000DC6  503D               	movf	powerPulseCheck@TESTING_count+1,w,c
  1194  000DC8  E115               	bnz	l3250
  1195  000DCA  0E05               	movlw	5
  1196  000DCC  5C3C               	subwf	powerPulseCheck@TESTING_count,w,c
  1197  000DCE  B0D8               	btfsc	status,0,c
  1198  000DD0  D011               	goto	l135
  1199  000DD2                     u2890:
  1200                           
  1201                           ;Current_Sense_Main.c: 432: {
  1202                           ;Current_Sense_Main.c: 433: meterEnergyUsed = 0;
  1203  000DD2  0E00               	movlw	0
  1204  000DD4  0100               	movlb	0	; () banked
  1205  000DD6  6F64               	movwf	_meterEnergyUsed& (0+255),b
  1206  000DD8  0E00               	movlw	0
  1207  000DDA  6F65               	movwf	(_meterEnergyUsed+1)& (0+255),b
  1208  000DDC  0E00               	movlw	0
  1209  000DDE  6F66               	movwf	(_meterEnergyUsed+2)& (0+255),b
  1210  000DE0  0E00               	movlw	0
  1211  000DE2  6F67               	movwf	(_meterEnergyUsed+3)& (0+255),b
  1212                           
  1213                           ;Current_Sense_Main.c: 434: meterWatts = 0;
  1214  000DE4  0E00               	movlw	0
  1215  000DE6  6F68               	movwf	_meterWatts& (0+255),b
  1216  000DE8  0E00               	movlw	0
  1217  000DEA  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1218  000DEC  0E00               	movlw	0
  1219  000DEE  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1220  000DF0  0E00               	movlw	0
  1221  000DF2  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1222  000DF4                     l135:
  1223  000DF4                     l3250:
  1224                           
  1225                           ;Current_Sense_Main.c: 435: }
  1226                           ;Current_Sense_Main.c: 437: if( TESTING_count % 10 == 0 )
  1227  000DF4  C03C  F013         	movff	powerPulseCheck@TESTING_count,___awmod@dividend
  1228  000DF8  C03D  F014         	movff	powerPulseCheck@TESTING_count+1,___awmod@dividend+1
  1229  000DFC  0E00               	movlw	0
  1230  000DFE  6E16               	movwf	___awmod@divisor+1,c
  1231  000E00  0E0A               	movlw	10
  1232  000E02  6E15               	movwf	___awmod@divisor,c
  1233  000E04  ECAF  F009         	call	___awmod	;wreg free
  1234  000E08  5013               	movf	?___awmod,w,c
  1235  000E0A  1014               	iorwf	?___awmod+1,w,c
  1236  000E0C  A4D8               	btfss	status,2,c
  1237  000E0E  D01A               	goto	l136
  1238                           
  1239                           ;Current_Sense_Main.c: 438: {
  1240                           ;Current_Sense_Main.c: 439: if( TESTING_oneshot == 0 )
  1241  000E10  5045               	movf	powerPulseCheck@TESTING_oneshot,w,c
  1242  000E12  A4D8               	btfss	status,2,c
  1243  000E14  0012               	return	
  1244                           
  1245                           ;Current_Sense_Main.c: 440: {
  1246                           ;Current_Sense_Main.c: 441: TESTING_oneshot = 1;
  1247  000E16  0E01               	movlw	1
  1248  000E18  6E45               	movwf	powerPulseCheck@TESTING_oneshot,c
  1249                           
  1250                           ;Current_Sense_Main.c: 443: if( PORTBbits.RB4 == 0 )
  1251  000E1A  B881               	btfsc	3969,4,c	;volatile
  1252  000E1C  D002               	goto	l138
  1253                           
  1254                           ;Current_Sense_Main.c: 444: {
  1255                           ;Current_Sense_Main.c: 445: LATBbits.LATB4 = 1;
  1256  000E1E  888A               	bsf	3978,4,c	;volatile
  1257                           
  1258                           ;Current_Sense_Main.c: 448: }
  1259  000E20  D001               	goto	l139
  1260  000E22                     l138:
  1261                           
  1262                           ;Current_Sense_Main.c: 449: else
  1263                           ;Current_Sense_Main.c: 450: {
  1264                           ;Current_Sense_Main.c: 452: LATBbits.LATB4 = 0;
  1265  000E22  988A               	bcf	3978,4,c	;volatile
  1266  000E24                     l139:
  1267                           
  1268                           ;Current_Sense_Main.c: 455: }
  1269                           ;Current_Sense_Main.c: 457: meterEnergyUsed++;
  1270  000E24  0E01               	movlw	1
  1271  000E26  0100               	movlb	0	; () banked
  1272  000E28  2764               	addwf	_meterEnergyUsed& (0+255),f,b
  1273  000E2A  0E00               	movlw	0
  1274  000E2C  2365               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1275  000E2E  2366               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1276  000E30  2367               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Current_Sense_Main.c: 458: meterWatts = meterEnergyUsed;
  1280  000E32  C064  F068         	movff	_meterEnergyUsed,_meterWatts
  1281  000E36  C065  F069         	movff	_meterEnergyUsed+1,_meterWatts+1
  1282  000E3A  C066  F06A         	movff	_meterEnergyUsed+2,_meterWatts+2
  1283  000E3E  C067  F06B         	movff	_meterEnergyUsed+3,_meterWatts+3
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;Current_Sense_Main.c: 460: }
  1287                           ;Current_Sense_Main.c: 461: }
  1288  000E42  0012               	return	
  1289  000E44                     l136:
  1290                           
  1291                           ;Current_Sense_Main.c: 462: else
  1292                           ;Current_Sense_Main.c: 463: {
  1293                           ;Current_Sense_Main.c: 464: TESTING_oneshot = 0;
  1294                           
  1295                           ; BSR set to: 0
  1296  000E44  0E00               	movlw	0
  1297  000E46  6E45               	movwf	powerPulseCheck@TESTING_oneshot,c
  1298                           
  1299                           ;Current_Sense_Main.c: 465: }
  1300                           ;Current_Sense_Main.c: 467: return;
  1301  000E48  0012               	return	
  1302  000E4A                     l3306:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;Current_Sense_Main.c: 556: {
  1306                           ;Current_Sense_Main.c: 557: meterEnergyUsed++;
  1307  000E4A  0E01               	movlw	1
  1308  000E4C  2764               	addwf	_meterEnergyUsed& (0+255),f,b
  1309  000E4E  0E00               	movlw	0
  1310  000E50  2365               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1311  000E52  2366               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1312  000E54  2367               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1313                           
  1314                           ;Current_Sense_Main.c: 558: meterEnergyUsedPart -= 100000;
  1315  000E56  0EA0               	movlw	160
  1316  000E58  5F60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1317  000E5A  0E86               	movlw	134
  1318  000E5C  5B61               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1319  000E5E  0E01               	movlw	1
  1320  000E60  5B62               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1321  000E62  0E00               	movlw	0
  1322  000E64  5B63               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1323                           
  1324                           ; BSR set to: 0
  1325  000E66  5163               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1326  000E68  E1F0               	bnz	l3306
  1327  000E6A  0EA1               	movlw	161
  1328  000E6C  5D60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1329  000E6E  0E86               	movlw	134
  1330  000E70  5961               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1331  000E72  0E01               	movlw	1
  1332  000E74  5962               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1333  000E76  A0D8               	btfss	status,0,c
  1334  000E78  0012               	return	
  1335  000E7A  D7E7               	goto	l165
  1336  000E7C                     __end_of_powerPulseCheck:
  1337                           	opt stack 0
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           postdec1	equ	0xFE5
  1345                           fsr1l	equ	0xFE1
  1346                           status	equ	0xFD8
  1347                           
  1348 ;; *************** function ___awmod *****************
  1349 ;; Defined at:
  1350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  dividend        2   18[COMRAM] int 
  1353 ;;  divisor         2   20[COMRAM] int 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  sign            1   23[COMRAM] unsigned char 
  1356 ;;  counter         1   22[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2   18[COMRAM] int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1366 ;;      Params:         4       0       0       0       0       0       0
  1367 ;;      Locals:         2       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0
  1369 ;;      Totals:         6       0       0       0       0       0       0
  1370 ;;Total ram usage:        6 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_powerPulseCheck
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text3
  1381  00135E                     __ptext3:
  1382                           	opt stack 0
  1383  00135E                     ___awmod:
  1384                           	opt stack 28
  1385                           
  1386                           ;incstack = 0
  1387  00135E  0E00               	movlw	0
  1388  001360  6E18               	movwf	___awmod@sign,c
  1389  001362  AE14               	btfss	___awmod@dividend+1,7,c
  1390  001364  D006               	goto	l644
  1391  001366  6C13               	negf	___awmod@dividend,c
  1392  001368  1E14               	comf	___awmod@dividend+1,f,c
  1393  00136A  B0D8               	btfsc	status,0,c
  1394  00136C  2A14               	incf	___awmod@dividend+1,f,c
  1395  00136E  0E01               	movlw	1
  1396  001370  6E18               	movwf	___awmod@sign,c
  1397  001372                     l644:
  1398  001372  AE16               	btfss	___awmod@divisor+1,7,c
  1399  001374  D004               	goto	l645
  1400  001376  6C15               	negf	___awmod@divisor,c
  1401  001378  1E16               	comf	___awmod@divisor+1,f,c
  1402  00137A  B0D8               	btfsc	status,0,c
  1403  00137C  2A16               	incf	___awmod@divisor+1,f,c
  1404  00137E                     l645:
  1405  00137E  5015               	movf	___awmod@divisor,w,c
  1406  001380  1016               	iorwf	___awmod@divisor+1,w,c
  1407  001382  B4D8               	btfsc	status,2,c
  1408  001384  D018               	goto	l652
  1409  001386  0E01               	movlw	1
  1410  001388  6E17               	movwf	___awmod@counter,c
  1411  00138A  D004               	goto	l647
  1412  00138C  90D8               	bcf	status,0,c
  1413  00138E  3615               	rlcf	___awmod@divisor,f,c
  1414  001390  3616               	rlcf	___awmod@divisor+1,f,c
  1415  001392  2A17               	incf	___awmod@counter,f,c
  1416  001394                     l647:
  1417  001394  AE16               	btfss	___awmod@divisor+1,7,c
  1418  001396  D7FA               	goto	l648
  1419  001398                     u2770:
  1420  001398  5015               	movf	___awmod@divisor,w,c
  1421  00139A  5C13               	subwf	___awmod@dividend,w,c
  1422  00139C  5016               	movf	___awmod@divisor+1,w,c
  1423  00139E  5814               	subwfb	___awmod@dividend+1,w,c
  1424  0013A0  A0D8               	btfss	status,0,c
  1425  0013A2  D004               	goto	l651
  1426  0013A4  5015               	movf	___awmod@divisor,w,c
  1427  0013A6  5E13               	subwf	___awmod@dividend,f,c
  1428  0013A8  5016               	movf	___awmod@divisor+1,w,c
  1429  0013AA  5A14               	subwfb	___awmod@dividend+1,f,c
  1430  0013AC                     l651:
  1431  0013AC  90D8               	bcf	status,0,c
  1432  0013AE  3216               	rrcf	___awmod@divisor+1,f,c
  1433  0013B0  3215               	rrcf	___awmod@divisor,f,c
  1434  0013B2  2E17               	decfsz	___awmod@counter,f,c
  1435  0013B4  D7F1               	goto	u2770
  1436  0013B6                     l652:
  1437  0013B6  5018               	movf	___awmod@sign,w,c
  1438  0013B8  B4D8               	btfsc	status,2,c
  1439  0013BA  D004               	goto	l653
  1440  0013BC  6C13               	negf	___awmod@dividend,c
  1441  0013BE  1E14               	comf	___awmod@dividend+1,f,c
  1442  0013C0  B0D8               	btfsc	status,0,c
  1443  0013C2  2A14               	incf	___awmod@dividend+1,f,c
  1444  0013C4                     l653:
  1445  0013C4  C013  F013         	movff	___awmod@dividend,?___awmod
  1446  0013C8  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1447  0013CC  0012               	return	
  1448  0013CE                     __end_of___awmod:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           postdec1	equ	0xFE5
  1457                           fsr1l	equ	0xFE1
  1458                           status	equ	0xFD8
  1459                           
  1460 ;; *************** function _initTimer *****************
  1461 ;; Defined at:
  1462 ;;		line 682 in file "Current_Sense_Main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1476 ;;      Params:         0       0       0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0
  1479 ;;      Totals:         0       0       0       0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text4
  1491  0017F2                     __ptext4:
  1492                           	opt stack 0
  1493  0017F2                     _initTimer:
  1494                           	opt stack 29
  1495                           
  1496                           ;Current_Sense_Main.c: 685: T0CONbits.TMR0ON = 0;
  1497                           
  1498                           ;incstack = 0
  1499  0017F2  9ED5               	bcf	4053,7,c	;volatile
  1500                           
  1501                           ;Current_Sense_Main.c: 686: T0CONbits.T08BIT = 0;
  1502  0017F4  9CD5               	bcf	4053,6,c	;volatile
  1503                           
  1504                           ;Current_Sense_Main.c: 687: T0CONbits.T0CS = 0;
  1505  0017F6  9AD5               	bcf	4053,5,c	;volatile
  1506                           
  1507                           ;Current_Sense_Main.c: 688: T0CONbits.PSA = 0;
  1508  0017F8  96D5               	bcf	4053,3,c	;volatile
  1509                           
  1510                           ;Current_Sense_Main.c: 689: T0CONbits.T0PS = 0b001;
  1511  0017FA  50D5               	movf	4053,w,c	;volatile
  1512  0017FC  0BF8               	andlw	-8
  1513  0017FE  0901               	iorlw	1
  1514  001800  6ED5               	movwf	4053,c	;volatile
  1515                           
  1516                           ;Current_Sense_Main.c: 691: INTCONbits.TMR0IE = 1;
  1517  001802  8AF2               	bsf	intcon,5,c	;volatile
  1518                           
  1519                           ;Current_Sense_Main.c: 692: INTCONbits.GIE = 1;
  1520  001804  8EF2               	bsf	intcon,7,c	;volatile
  1521                           
  1522                           ;Current_Sense_Main.c: 693: T0CONbits.TMR0ON = 1;
  1523  001806  8ED5               	bsf	4053,7,c	;volatile
  1524  001808  0012               	return		;funcret
  1525  00180A                     __end_of_initTimer:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           intcon	equ	0xFF2
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1l	equ	0xFE1
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _init *****************
  1539 ;; Defined at:
  1540 ;;		line 602 in file "Current_Sense_Main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1554 ;;      Params:         0       0       0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    2
  1561 ;; This function calls:
  1562 ;;		_initIO
  1563 ;;		_initOSC
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text5
  1570  001838                     __ptext5:
  1571                           	opt stack 0
  1572  001838                     _init:
  1573                           	opt stack 28
  1574                           
  1575                           ;Current_Sense_Main.c: 604: initOSC( );
  1576                           
  1577                           ;incstack = 0
  1578  001838  EC05  F00C         	call	_initOSC	;wreg free
  1579                           
  1580                           ;Current_Sense_Main.c: 605: initIO( );
  1581  00183C  ECC9  F00B         	call	_initIO	;wreg free
  1582  001840  0012               	return	
  1583  001842                     __end_of_init:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           intcon	equ	0xFF2
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           postdec1	equ	0xFE5
  1593                           fsr1l	equ	0xFE1
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _initOSC *****************
  1597 ;; Defined at:
  1598 ;;		line 612 in file "Current_Sense_Main.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1612 ;;      Params:         0       0       0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_init
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text6
  1627  00180A                     __ptext6:
  1628                           	opt stack 0
  1629  00180A                     _initOSC:
  1630                           	opt stack 28
  1631                           
  1632                           ;Current_Sense_Main.c: 615: OSCCONbits.IDLEN = 0;
  1633                           
  1634                           ;incstack = 0
  1635  00180A  9ED3               	bcf	4051,7,c	;volatile
  1636                           
  1637                           ;Current_Sense_Main.c: 616: OSCCONbits.IRCF = 0b111;
  1638  00180C  88D3               	bsf	4051,4,c	;volatile
  1639  00180E  8AD3               	bsf	4051,5,c	;volatile
  1640  001810  8CD3               	bsf	4051,6,c	;volatile
  1641                           
  1642                           ;Current_Sense_Main.c: 617: OSCCONbits.SCS = 0b11;
  1643  001812  0E03               	movlw	3
  1644  001814  12D3               	iorwf	4051,f,c	;volatile
  1645                           
  1646                           ;Current_Sense_Main.c: 619: OSCCON2bits.MFIOSEL = 0;
  1647  001816  98D2               	bcf	4050,4,c	;volatile
  1648                           
  1649                           ;Current_Sense_Main.c: 620: OSCCON2bits.SOSCGO = 0;
  1650  001818  96D2               	bcf	4050,3,c	;volatile
  1651                           
  1652                           ;Current_Sense_Main.c: 621: OSCCON2bits.PRISD = 0;
  1653  00181A  94D2               	bcf	4050,2,c	;volatile
  1654                           
  1655                           ;Current_Sense_Main.c: 623: OSCTUNEbits.INTSRC = 1;
  1656  00181C  8E9B               	bsf	3995,7,c	;volatile
  1657                           
  1658                           ;Current_Sense_Main.c: 624: OSCTUNEbits.PLLEN = 0;
  1659  00181E  9C9B               	bcf	3995,6,c	;volatile
  1660  001820  0012               	return	
  1661  001822                     __end_of_initOSC:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           intcon	equ	0xFF2
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _initIO *****************
  1675 ;; Defined at:
  1676 ;;		line 629 in file "Current_Sense_Main.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_init
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text7
  1705  001792                     __ptext7:
  1706                           	opt stack 0
  1707  001792                     _initIO:
  1708                           	opt stack 28
  1709                           
  1710                           ;Current_Sense_Main.c: 631: ADCON0bits.ADON = 0;
  1711                           
  1712                           ;incstack = 0
  1713  001792  90C2               	bcf	4034,0,c	;volatile
  1714                           
  1715                           ;Current_Sense_Main.c: 632: ANSELA = 0b00000000;
  1716  001794  0E00               	movlw	0
  1717  001796  010F               	movlb	15	; () banked
  1718  001798  6F38               	movwf	56,b	;volatile
  1719                           
  1720                           ;Current_Sense_Main.c: 633: ANSELB = 0b00000000;
  1721  00179A  0E00               	movlw	0
  1722  00179C  6F39               	movwf	57,b	;volatile
  1723                           
  1724                           ;Current_Sense_Main.c: 634: ANSELC = 0b00000000;
  1725  00179E  0E00               	movlw	0
  1726  0017A0  6F3A               	movwf	58,b	;volatile
  1727                           
  1728                           ; BSR set to: 15
  1729                           ;Current_Sense_Main.c: 636: TRISBbits.TRISB4 = 0;
  1730  0017A2  9893               	bcf	3987,4,c	;volatile
  1731                           
  1732                           ; BSR set to: 15
  1733                           ;Current_Sense_Main.c: 637: TRISCbits.TRISC0 = 0;
  1734  0017A4  9094               	bcf	3988,0,c	;volatile
  1735                           
  1736                           ; BSR set to: 15
  1737                           ;Current_Sense_Main.c: 638: TRISCbits.TRISC1 = 0;
  1738  0017A6  9294               	bcf	3988,1,c	;volatile
  1739                           
  1740                           ; BSR set to: 15
  1741                           ;Current_Sense_Main.c: 640: LATBbits.LATB4 = 0;
  1742  0017A8  988A               	bcf	3978,4,c	;volatile
  1743                           
  1744                           ; BSR set to: 15
  1745                           ;Current_Sense_Main.c: 641: LATCbits.LATC0 = 0;
  1746  0017AA  908B               	bcf	3979,0,c	;volatile
  1747                           
  1748                           ; BSR set to: 15
  1749                           ;Current_Sense_Main.c: 642: LATCbits.LATC1 = 0;
  1750  0017AC  928B               	bcf	3979,1,c	;volatile
  1751                           
  1752                           ; BSR set to: 15
  1753                           ;Current_Sense_Main.c: 645: TRISAbits.TRISA3 = 1;
  1754  0017AE  8692               	bsf	3986,3,c	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;Current_Sense_Main.c: 646: TRISAbits.TRISA2 = 1;
  1758  0017B0  8492               	bsf	3986,2,c	;volatile
  1759  0017B2  0012               	return	
  1760  0017B4                     __end_of_initIO:
  1761                           	opt stack 0
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           intcon	equ	0xFF2
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           postdec1	equ	0xFE5
  1770                           fsr1l	equ	0xFE1
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _delayMS10 *****************
  1774 ;; Defined at:
  1775 ;;		line 593 in file "Current_Sense_Main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  count           2   18[COMRAM] int 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  inx             2   21[COMRAM] int 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1789 ;;      Params:         2       0       0       0       0       0       0
  1790 ;;      Locals:         2       0       0       0       0       0       0
  1791 ;;      Temps:          1       0       0       0       0       0       0
  1792 ;;      Totals:         5       0       0       0       0       0       0
  1793 ;;Total ram usage:        5 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text8
  1804  00166A                     __ptext8:
  1805                           	opt stack 0
  1806  00166A                     _delayMS10:
  1807                           	opt stack 29
  1808                           
  1809                           ;Current_Sense_Main.c: 595: for( int inx = 0; inx < count; inx++ )
  1810                           
  1811                           ; BSR set to: 15
  1812                           ;incstack = 0
  1813  00166A  0E00               	movlw	0
  1814  00166C  6E17               	movwf	delayMS10@inx+1,c
  1815  00166E  0E00               	movlw	0
  1816  001670  6E16               	movwf	delayMS10@inx,c
  1817  001672  D009               	goto	l174
  1818  001674                     
  1819                           ;Current_Sense_Main.c: 596: {
  1820                           ;Current_Sense_Main.c: 598: _delay((unsigned long)((10)*(16000000/4000.0)));
  1821  001674  0E34               	movlw	52
  1822  001676  6E15               	movwf	??_delayMS10& (0+255),c
  1823  001678  0EF2               	movlw	242
  1824  00167A                     u3097:
  1825  00167A  2EE8               	decfsz	wreg,f,c
  1826  00167C  D7FE               	bra	u3097
  1827  00167E  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1828  001680  D7FC               	bra	u3097
  1829  001682  4A16               	infsnz	delayMS10@inx,f,c
  1830  001684  2A17               	incf	delayMS10@inx+1,f,c
  1831  001686                     l174:
  1832  001686  5013               	movf	delayMS10@count,w,c
  1833  001688  5C16               	subwf	delayMS10@inx,w,c
  1834  00168A  5017               	movf	delayMS10@inx+1,w,c
  1835  00168C  0A80               	xorlw	128
  1836  00168E  6E15               	movwf	??_delayMS10& (0+255),c
  1837  001690  5014               	movf	delayMS10@count+1,w,c
  1838  001692  0A80               	xorlw	128
  1839  001694  5815               	subwfb	??_delayMS10& (0+255),w,c
  1840  001696  B0D8               	btfsc	status,0,c
  1841  001698  0012               	return	
  1842  00169A  D7EC               	goto	l175
  1843  00169C                     __end_of_delayMS10:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1l	equ	0xFE1
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _communications *****************
  1857 ;; Defined at:
  1858 ;;		line 90 in file "SlaveComm_PIC18.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  firstTime       1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  firstTime       1   13[BANK0 ] unsigned char 
  1863 ;;  no_more_to_s    1   12[BANK0 ] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1873 ;;      Params:         0       0       0       0       0       0       0
  1874 ;;      Locals:         0       2       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0
  1876 ;;      Totals:         0       2       0       0       0       0       0
  1877 ;;Total ram usage:        2 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    7
  1880 ;; This function calls:
  1881 ;;		_SPISlaveInit
  1882 ;;		_process_data
  1883 ;;		_receive_data
  1884 ;;		_resetCommunications
  1885 ;;		_send_data
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text9
  1892  000FF8                     __ptext9:
  1893                           	opt stack 0
  1894  000FF8                     _communications:
  1895                           	opt stack 23
  1896                           
  1897                           ;incstack = 0
  1898                           ;communications@firstTime stored from wreg
  1899  000FF8  0100               	movlb	0	; () banked
  1900  000FFA  6FCF               	movwf	communications@firstTime& (0+255),b
  1901                           
  1902                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  1903                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  1904                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  1905                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  1906                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  1907                           ;SlaveComm_PIC18.c: 104: if( firstTime == 1 )
  1908  000FFC  0100               	movlb	0	; () banked
  1909  000FFE  05CF               	decf	communications@firstTime& (0+255),w,b
  1910  001000  A4D8               	btfss	status,2,c
  1911  001002  D00E               	goto	l278
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;SlaveComm_PIC18.c: 105: {
  1915                           ;SlaveComm_PIC18.c: 106: SPISlaveInit( );
  1916  001004  EC11  F00B         	call	_SPISlaveInit	;wreg free
  1917                           
  1918                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  1919  001008  0E00               	movlw	0
  1920  00100A  0100               	movlb	0	; () banked
  1921  00100C  6F96               	movwf	(communications@send_buffer+40)& (0+255),b
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  1925  00100E  0E00               	movlw	0
  1926  001010  6F97               	movwf	(communications@send_buffer+41)& (0+255),b
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;SlaveComm_PIC18.c: 109: resetCommunications( &send_buffer );
  1930  001012  0E6E               	movlw	low communications@send_buffer
  1931  001014  6E2F               	movwf	resetCommunications@send_buffer,c
  1932  001016  0E00               	movlw	high communications@send_buffer
  1933  001018  6E30               	movwf	resetCommunications@send_buffer+1,c
  1934  00101A  EC9A  F008         	call	_resetCommunications	;wreg free
  1935                           
  1936                           ;SlaveComm_PIC18.c: 110: }
  1937  00101E  0012               	return	
  1938  001020                     l278:
  1939                           
  1940                           ;SlaveComm_PIC18.c: 111: else
  1941                           ;SlaveComm_PIC18.c: 112: {
  1942                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data( &receive_buffer );
  1943  001020  0E98               	movlw	low communications@receive_buffer
  1944  001022  6E16               	movwf	receive_data@receive_buffer,c
  1945  001024  0E00               	movlw	high communications@receive_buffer
  1946  001026  6E17               	movwf	receive_data@receive_buffer+1,c
  1947  001028  EC3E  F007         	call	_receive_data	;wreg free
  1948  00102C  6E40               	movwf	communications@receive_current_state,c
  1949                           
  1950                           ;SlaveComm_PIC18.c: 117: switch( receive_current_state )
  1951  00102E  D010               	goto	l280
  1952  001030                     
  1953                           ;SlaveComm_PIC18.c: 127: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  1954  001030  0E98               	movlw	low communications@receive_buffer
  1955  001032  6E34               	movwf	process_data@receive_buffer,c
  1956  001034  0E00               	movlw	high communications@receive_buffer
  1957  001036  6E35               	movwf	process_data@receive_buffer+1,c
  1958  001038  0E6E               	movlw	low communications@send_buffer
  1959  00103A  6E36               	movwf	process_data@send_buffer,c
  1960  00103C  0E00               	movlw	high communications@send_buffer
  1961  00103E  6E37               	movwf	process_data@send_buffer+1,c
  1962  001040  EC4E  F00B         	call	_process_data	;wreg free
  1963  001044  06E8               	decf	wreg,f,c
  1964  001046  A4D8               	btfss	status,2,c
  1965  001048  D00D               	goto	l282
  1966                           
  1967                           ;SlaveComm_PIC18.c: 128: {
  1968                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  1969  00104A  0E01               	movlw	1
  1970  00104C  6E41               	movwf	communications@end_of_transmission_received,c
  1971                           
  1972                           ;SlaveComm_PIC18.c: 133: }
  1973                           
  1974                           ;SlaveComm_PIC18.c: 130: }
  1975                           ;SlaveComm_PIC18.c: 132: break;
  1976  00104E  D00A               	goto	l282
  1977  001050                     l280:
  1978  001050  5040               	movf	communications@receive_current_state,w,c
  1979                           
  1980                           ; Switch size 1, requested type "space"
  1981                           ; Number of cases is 3, Range of values is 0 to 2
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte           10     6 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986  001052  0A00               	xorlw	0	; case 0
  1987  001054  B4D8               	btfsc	status,2,c
  1988  001056  D006               	goto	l282
  1989  001058  0A01               	xorlw	1	; case 1
  1990  00105A  B4D8               	btfsc	status,2,c
  1991  00105C  D003               	goto	l282
  1992  00105E  0A03               	xorlw	3	; case 2
  1993  001060  B4D8               	btfsc	status,2,c
  1994  001062  D7E6               	goto	l284
  1995  001064                     l282:
  1996                           
  1997                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data( &send_buffer );
  1998  001064  0E6E               	movlw	low communications@send_buffer
  1999  001066  6E15               	movwf	send_data@send_buffer,c
  2000  001068  0E00               	movlw	high communications@send_buffer
  2001  00106A  6E16               	movwf	send_data@send_buffer+1,c
  2002  00106C  ECE8  F008         	call	_send_data	;wreg free
  2003  001070  0100               	movlb	0	; () banked
  2004  001072  6FCE               	movwf	communications@no_more_to_send& (0+255),b
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  2008                           ;SlaveComm_PIC18.c: 139: if( PORTBbits.SS2 == 0b1 )
  2009  001074  A081               	btfss	3969,0,c	;volatile
  2010  001076  D003               	goto	l288
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;SlaveComm_PIC18.c: 140: {
  2014                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  2015  001078  0E00               	movlw	0
  2016  00107A  6E3F               	movwf	communications@last_state_active,c
  2017                           
  2018                           ;SlaveComm_PIC18.c: 142: }
  2019  00107C  0012               	return	
  2020  00107E                     l288:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;SlaveComm_PIC18.c: 143: else
  2024                           ;SlaveComm_PIC18.c: 144: {
  2025                           ;SlaveComm_PIC18.c: 145: if( last_state_active == 0 )
  2026                           
  2027                           ; BSR set to: 0
  2028  00107E  503F               	movf	communications@last_state_active,w,c
  2029  001080  A4D8               	btfss	status,2,c
  2030  001082  D006               	goto	l290
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;SlaveComm_PIC18.c: 146: {
  2034                           ;SlaveComm_PIC18.c: 147: resetCommunications( &send_buffer );
  2035  001084  0E6E               	movlw	low communications@send_buffer
  2036  001086  6E2F               	movwf	resetCommunications@send_buffer,c
  2037  001088  0E00               	movlw	high communications@send_buffer
  2038  00108A  6E30               	movwf	resetCommunications@send_buffer+1,c
  2039  00108C  EC9A  F008         	call	_resetCommunications	;wreg free
  2040  001090                     l290:
  2041                           
  2042                           ;SlaveComm_PIC18.c: 148: }
  2043                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  2044  001090  0E01               	movlw	1
  2045  001092  6E3F               	movwf	communications@last_state_active,c
  2046  001094  0012               	return	
  2047  001096                     __end_of_communications:
  2048                           	opt stack 0
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           intcon	equ	0xFF2
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           postdec1	equ	0xFE5
  2057                           fsr1l	equ	0xFE1
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _send_data *****************
  2061 ;; Defined at:
  2062 ;;		line 509 in file "SlaveComm_PIC18.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2065 ;;		 -> communications@send_buffer(42), 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  send_end        1   24[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      unsigned char 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         2       0       0       0       0       0       0
  2078 ;;      Locals:         1       0       0       0       0       0       0
  2079 ;;      Temps:          2       0       0       0       0       0       0
  2080 ;;      Totals:         5       0       0       0       0       0       0
  2081 ;;Total ram usage:        5 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		_SPI_send_data
  2086 ;; This function is called by:
  2087 ;;		_communications
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text10
  2092  0011D0                     __ptext10:
  2093                           	opt stack 0
  2094  0011D0                     _send_data:
  2095                           	opt stack 27
  2096                           
  2097                           ;SlaveComm_PIC18.c: 511: bool send_end;
  2098                           ;SlaveComm_PIC18.c: 513: if( send_buffer->read_position == send_buffer->write_position )
  2099                           
  2100                           ;incstack = 0
  2101  0011D0  EE20 F028          	lfsr	2,40
  2102  0011D4  5015               	movf	send_data@send_buffer,w,c
  2103  0011D6  26D9               	addwf	fsr2l,f,c
  2104  0011D8  5016               	movf	send_data@send_buffer+1,w,c
  2105  0011DA  22DA               	addwfc	fsr2h,f,c
  2106  0011DC  EE10 F029          	lfsr	1,41
  2107  0011E0  5015               	movf	send_data@send_buffer,w,c
  2108  0011E2  26E1               	addwf	fsr1l,f,c
  2109  0011E4  5016               	movf	send_data@send_buffer+1,w,c
  2110  0011E6  22E2               	addwfc	fsr1h,f,c
  2111  0011E8  50DE               	movf	postinc2,w,c
  2112  0011EA  18E6               	xorwf	postinc1,w,c
  2113  0011EC  A4D8               	btfss	status,2,c
  2114  0011EE  D006               	goto	l389
  2115                           
  2116                           ;SlaveComm_PIC18.c: 514: {
  2117                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  2118  0011F0  0E01               	movlw	1
  2119  0011F2  6E19               	movwf	send_data@send_end,c
  2120                           
  2121                           ;SlaveComm_PIC18.c: 516: SPI_send_data( '\0' );
  2122  0011F4  0E00               	movlw	0
  2123  0011F6  ECDA  F00B         	call	_SPI_send_data
  2124                           
  2125                           ;SlaveComm_PIC18.c: 517: }
  2126  0011FA  D030               	goto	l392
  2127  0011FC                     l389:
  2128                           
  2129                           ;SlaveComm_PIC18.c: 518: else
  2130                           ;SlaveComm_PIC18.c: 519: {
  2131                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  2132  0011FC  0E00               	movlw	0
  2133  0011FE  6E19               	movwf	send_data@send_end,c
  2134                           
  2135                           ;SlaveComm_PIC18.c: 523: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  2136  001200  EE20 F029          	lfsr	2,41
  2137  001204  5015               	movf	send_data@send_buffer,w,c
  2138  001206  26D9               	addwf	fsr2l,f,c
  2139  001208  5016               	movf	send_data@send_buffer+1,w,c
  2140  00120A  22DA               	addwfc	fsr2h,f,c
  2141  00120C  50DF               	movf	indf2,w,c
  2142  00120E  6E17               	movwf	??_send_data& (0+255),c
  2143  001210  5017               	movf	??_send_data,w,c
  2144  001212  0D01               	mullw	1
  2145  001214  50F3               	movf	prodl,w,c
  2146  001216  2415               	addwf	send_data@send_buffer,w,c
  2147  001218  6ED9               	movwf	fsr2l,c
  2148  00121A  50F4               	movf	prodh,w,c
  2149  00121C  2016               	addwfc	send_data@send_buffer+1,w,c
  2150  00121E  6EDA               	movwf	fsr2h,c
  2151  001220  50DF               	movf	indf2,w,c
  2152  001222  ECDA  F00B         	call	_SPI_send_data
  2153  001226  06E8               	decf	wreg,f,c
  2154  001228  A4D8               	btfss	status,2,c
  2155  00122A  D018               	goto	l392
  2156                           
  2157                           ;SlaveComm_PIC18.c: 524: {
  2158                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2159  00122C  EE20 F029          	lfsr	2,41
  2160  001230  5015               	movf	send_data@send_buffer,w,c
  2161  001232  26D9               	addwf	fsr2l,f,c
  2162  001234  5016               	movf	send_data@send_buffer+1,w,c
  2163  001236  22DA               	addwfc	fsr2h,f,c
  2164  001238  2ADF               	incf	indf2,f,c
  2165                           
  2166                           ;SlaveComm_PIC18.c: 527: if( send_buffer->read_position >= 40 )
  2167  00123A  EE20 F029          	lfsr	2,41
  2168  00123E  5015               	movf	send_data@send_buffer,w,c
  2169  001240  26D9               	addwf	fsr2l,f,c
  2170  001242  5016               	movf	send_data@send_buffer+1,w,c
  2171  001244  22DA               	addwfc	fsr2h,f,c
  2172  001246  0E27               	movlw	39
  2173  001248  64DF               	cpfsgt	indf2,c
  2174  00124A  D008               	goto	l392
  2175                           
  2176                           ;SlaveComm_PIC18.c: 528: {
  2177                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2178  00124C  EE20 F029          	lfsr	2,41
  2179  001250  5015               	movf	send_data@send_buffer,w,c
  2180  001252  26D9               	addwf	fsr2l,f,c
  2181  001254  5016               	movf	send_data@send_buffer+1,w,c
  2182  001256  22DA               	addwfc	fsr2h,f,c
  2183  001258  0E00               	movlw	0
  2184  00125A  6EDF               	movwf	indf2,c
  2185  00125C                     l392:
  2186                           
  2187                           ;SlaveComm_PIC18.c: 530: }
  2188                           ;SlaveComm_PIC18.c: 531: }
  2189                           ;SlaveComm_PIC18.c: 532: }
  2190                           ;SlaveComm_PIC18.c: 534: return send_end;
  2191  00125C  5019               	movf	send_data@send_end,w,c
  2192  00125E  0012               	return	
  2193  001260                     __end_of_send_data:
  2194                           	opt stack 0
  2195                           tblptru	equ	0xFF8
  2196                           tblptrh	equ	0xFF7
  2197                           tblptrl	equ	0xFF6
  2198                           tablat	equ	0xFF5
  2199                           prodh	equ	0xFF4
  2200                           prodl	equ	0xFF3
  2201                           intcon	equ	0xFF2
  2202                           postinc0	equ	0xFEE
  2203                           wreg	equ	0xFE8
  2204                           postinc1	equ	0xFE6
  2205                           postdec1	equ	0xFE5
  2206                           fsr1h	equ	0xFE2
  2207                           fsr1l	equ	0xFE1
  2208                           indf2	equ	0xFDF
  2209                           postinc2	equ	0xFDE
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _SPI_send_data *****************
  2215 ;; Defined at:
  2216 ;;		line 607 in file "SlaveComm_PIC18.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  data            1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  data            1   18[COMRAM] unsigned char 
  2221 ;;  sendGood        1   19[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_send_data
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text11
  2246  0017B4                     __ptext11:
  2247                           	opt stack 0
  2248  0017B4                     _SPI_send_data:
  2249                           	opt stack 27
  2250                           
  2251                           ;incstack = 0
  2252                           ;SPI_send_data@data stored from wreg
  2253  0017B4  6E13               	movwf	SPI_send_data@data,c
  2254                           
  2255                           ;SlaveComm_PIC18.c: 609: bool sendGood = 0;
  2256  0017B6  0E00               	movlw	0
  2257  0017B8  6E14               	movwf	SPI_send_data@sendGood,c
  2258                           
  2259                           ;SlaveComm_PIC18.c: 611: if( SPI_transmit_wait == 0 )
  2260  0017BA  5042               	movf	_SPI_transmit_wait,w,c
  2261  0017BC  A4D8               	btfss	status,2,c
  2262  0017BE  D006               	goto	l420
  2263                           
  2264                           ;SlaveComm_PIC18.c: 612: {
  2265                           ;SlaveComm_PIC18.c: 613: SSP2BUF = data;
  2266  0017C0  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2267                           
  2268                           ;SlaveComm_PIC18.c: 614: SPI_transmit_wait = 1;
  2269  0017C4  0E01               	movlw	1
  2270  0017C6  6E42               	movwf	_SPI_transmit_wait,c
  2271                           
  2272                           ;SlaveComm_PIC18.c: 615: sendGood = 1;
  2273  0017C8  0E01               	movlw	1
  2274  0017CA  D001               	goto	L2
  2275  0017CC                     l420:
  2276                           
  2277                           ;SlaveComm_PIC18.c: 617: else
  2278                           ;SlaveComm_PIC18.c: 618: {
  2279                           ;SlaveComm_PIC18.c: 619: sendGood = 0;
  2280  0017CC  0E00               	movlw	0
  2281  0017CE                     L2:
  2282  0017CE  6E14               	movwf	SPI_send_data@sendGood,c
  2283                           
  2284                           ;SlaveComm_PIC18.c: 620: }
  2285                           ;SlaveComm_PIC18.c: 622: return sendGood;
  2286  0017D0  5014               	movf	SPI_send_data@sendGood,w,c
  2287  0017D2  0012               	return	
  2288  0017D4                     __end_of_SPI_send_data:
  2289                           	opt stack 0
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           intcon	equ	0xFF2
  2297                           postinc0	equ	0xFEE
  2298                           wreg	equ	0xFE8
  2299                           postinc1	equ	0xFE6
  2300                           postdec1	equ	0xFE5
  2301                           fsr1h	equ	0xFE2
  2302                           fsr1l	equ	0xFE1
  2303                           indf2	equ	0xFDF
  2304                           postinc2	equ	0xFDE
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _resetCommunications *****************
  2310 ;; Defined at:
  2311 ;;		line 158 in file "SlaveComm_PIC18.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  2314 ;;		 -> communications@send_buffer(42), 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2326 ;;      Params:         2       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0
  2328 ;;      Temps:          2       0       0       0       0       0       0
  2329 ;;      Totals:         4       0       0       0       0       0       0
  2330 ;;Total ram usage:        4 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    5
  2333 ;; This function calls:
  2334 ;;		_com_command_setEnergyUsed
  2335 ;;		_com_command_setPower
  2336 ;;		_com_command_setVersion
  2337 ;; This function is called by:
  2338 ;;		_communications
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text12
  2343  001134                     __ptext12:
  2344                           	opt stack 0
  2345  001134                     _resetCommunications:
  2346                           	opt stack 24
  2347                           
  2348                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2349                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2350                           
  2351                           ;incstack = 0
  2352  001134  9A6C               	bcf	3948,5,c	;volatile
  2353                           
  2354                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2355  001136  0E06               	movlw	6
  2356  001138  6E31               	movwf	??_resetCommunications& (0+255),c
  2357  00113A  0E30               	movlw	48
  2358  00113C                     u3107:
  2359  00113C  2EE8               	decfsz	wreg,f,c
  2360  00113E  D7FE               	bra	u3107
  2361  001140  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  2362  001142  D7FC               	bra	u3107
  2363  001144  D000               	nop2	
  2364                           
  2365                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2366  001146  8A6C               	bsf	3948,5,c	;volatile
  2367                           
  2368                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2369  001148  9E6C               	bcf	3948,7,c	;volatile
  2370                           
  2371                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2372  00114A  0E00               	movlw	0
  2373  00114C  6E42               	movwf	_SPI_transmit_wait,c
  2374                           
  2375                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2376  00114E  EE20 F029          	lfsr	2,41
  2377  001152  502F               	movf	resetCommunications@send_buffer,w,c
  2378  001154  26D9               	addwf	fsr2l,f,c
  2379  001156  5030               	movf	resetCommunications@send_buffer+1,w,c
  2380  001158  22DA               	addwfc	fsr2h,f,c
  2381  00115A  0E00               	movlw	0
  2382  00115C  6EDF               	movwf	indf2,c
  2383                           
  2384                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2385  00115E  EE20 F028          	lfsr	2,40
  2386  001162  502F               	movf	resetCommunications@send_buffer,w,c
  2387  001164  26D9               	addwf	fsr2l,f,c
  2388  001166  5030               	movf	resetCommunications@send_buffer+1,w,c
  2389  001168  22DA               	addwfc	fsr2h,f,c
  2390  00116A  0E00               	movlw	0
  2391  00116C  6EDF               	movwf	indf2,c
  2392                           
  2393                           ;SlaveComm_PIC18.c: 177: commState++;
  2394  00116E  0100               	movlb	0	; () banked
  2395  001170  4B6C               	infsnz	resetCommunications@commState& (0+255),f,b
  2396  001172  2B6D               	incf	(resetCommunications@commState+1)& (0+255),f,b
  2397                           
  2398                           ;SlaveComm_PIC18.c: 178: switch( commState )
  2399  001174  D01A               	goto	l296
  2400  001176                     
  2401                           ; BSR set to: 0
  2402                           ;SlaveComm_PIC18.c: 181: com_command_setVersion( send_buffer );
  2403                           
  2404                           ; BSR set to: 0
  2405  001176  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2406  00117A  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2407  00117E  EC92  F00B         	call	_com_command_setVersion	;wreg free
  2408                           
  2409                           ;SlaveComm_PIC18.c: 182: break;
  2410  001182  0012               	return	
  2411  001184                     
  2412                           ;SlaveComm_PIC18.c: 184: com_command_setPower( send_buffer );
  2413  001184  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2414  001188  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2415  00118C  ECC7  F00A         	call	_com_command_setPower	;wreg free
  2416                           
  2417                           ;SlaveComm_PIC18.c: 197: break;
  2418  001190  0012               	return	
  2419  001192                     
  2420                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed( send_buffer );
  2421  001192  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2422  001196  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2423  00119A  ECEC  F00A         	call	_com_command_setEnergyUsed	;wreg free
  2424  00119E                     
  2425                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2426  00119E  0E00               	movlw	0
  2427  0011A0  0100               	movlb	0	; () banked
  2428  0011A2  6F6D               	movwf	(resetCommunications@commState+1)& (0+255),b
  2429  0011A4  0E00               	movlw	0
  2430  0011A6  6F6C               	movwf	resetCommunications@commState& (0+255),b
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;SlaveComm_PIC18.c: 213: }
  2434                           
  2435                           ;SlaveComm_PIC18.c: 212: break;
  2436  0011A8  0012               	return	
  2437  0011AA                     l296:
  2438                           
  2439                           ; BSR set to: 0
  2440                           
  2441                           ; BSR set to: 0
  2442  0011AA  C06C  F031         	movff	resetCommunications@commState,??_resetCommunications
  2443  0011AE  C06D  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2444                           
  2445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2446                           ; Switch size 1, requested type "space"
  2447                           ; Number of cases is 1, Range of values is 0 to 0
  2448                           ; switch strategies available:
  2449                           ; Name         Instructions Cycles
  2450                           ; simple_byte            4     3 (average)
  2451                           ;	Chosen strategy is simple_byte
  2452  0011B2  5032               	movf	??_resetCommunications+1,w,c
  2453  0011B4  0A00               	xorlw	0	; case 0
  2454  0011B6  A4D8               	btfss	status,2,c
  2455  0011B8  D7F2               	goto	l301
  2456                           
  2457                           ; BSR set to: 0
  2458                           ; Switch size 1, requested type "space"
  2459                           ; Number of cases is 3, Range of values is 1 to 3
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte           10     6 (average)
  2463                           ;	Chosen strategy is simple_byte
  2464  0011BA  5031               	movf	??_resetCommunications,w,c
  2465  0011BC  0A01               	xorlw	1	; case 1
  2466  0011BE  B4D8               	btfsc	status,2,c
  2467  0011C0  D7DA               	goto	l297
  2468  0011C2  0A03               	xorlw	3	; case 2
  2469  0011C4  B4D8               	btfsc	status,2,c
  2470  0011C6  D7DE               	goto	l299
  2471  0011C8  0A01               	xorlw	1	; case 3
  2472  0011CA  B4D8               	btfsc	status,2,c
  2473  0011CC  D7E2               	goto	l300
  2474  0011CE  D7E7               	goto	l301
  2475  0011D0                     __end_of_resetCommunications:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           postinc1	equ	0xFE6
  2487                           postdec1	equ	0xFE5
  2488                           fsr1h	equ	0xFE2
  2489                           fsr1l	equ	0xFE1
  2490                           indf2	equ	0xFDF
  2491                           postinc2	equ	0xFDE
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _com_command_setVersion *****************
  2497 ;; Defined at:
  2498 ;;		line 700 in file "SlaveComm_PIC18.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2501 ;;		 -> communications@send_buffer(42), 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2513 ;;      Params:         2       0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0
  2516 ;;      Totals:         2       0       0       0       0       0       0
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    4
  2520 ;; This function calls:
  2521 ;;		_command_builder3
  2522 ;; This function is called by:
  2523 ;;		_resetCommunications
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text13
  2528  001724                     __ptext13:
  2529                           	opt stack 0
  2530  001724                     _com_command_setVersion:
  2531                           	opt stack 24
  2532                           
  2533                           ;SlaveComm_PIC18.c: 702: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2534                           
  2535                           ;incstack = 0
  2536  001724  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2537  001728  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2538  00172C  0E57               	movlw	low STR_2
  2539  00172E  6E21               	movwf	command_builder3@data1,c
  2540  001730  0E06               	movlw	high STR_2
  2541  001732  6E22               	movwf	command_builder3@data1+1,c
  2542  001734  0E0D               	movlw	low STR_22
  2543  001736  6E23               	movwf	command_builder3@data2,c
  2544  001738  0E06               	movlw	high STR_22
  2545  00173A  6E24               	movwf	command_builder3@data2+1,c
  2546  00173C  0E4B               	movlw	low STR_40
  2547  00173E  6E25               	movwf	command_builder3@data3,c
  2548  001740  0E06               	movlw	high STR_40
  2549  001742  6E26               	movwf	command_builder3@data3+1,c
  2550  001744  EC4B  F008         	call	_command_builder3	;wreg free
  2551  001748  0012               	return		;funcret
  2552  00174A                     __end_of_com_command_setVersion:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           intcon	equ	0xFF2
  2561                           postinc0	equ	0xFEE
  2562                           wreg	equ	0xFE8
  2563                           postinc1	equ	0xFE6
  2564                           postdec1	equ	0xFE5
  2565                           fsr1h	equ	0xFE2
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _com_command_setPower *****************
  2574 ;; Defined at:
  2575 ;;		line 642 in file "SlaveComm_PIC18.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  2578 ;;		 -> communications@send_buffer(42), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2590 ;;      Params:         2       0       0       0       0       0       0
  2591 ;;      Locals:         0      12       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0
  2593 ;;      Totals:         2      12       0       0       0       0       0
  2594 ;;Total ram usage:       14 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    4
  2597 ;; This function calls:
  2598 ;;		_command_builder3
  2599 ;;		_ultoa
  2600 ;; This function is called by:
  2601 ;;		_resetCommunications
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text14
  2606  00158E                     __ptext14:
  2607                           	opt stack 0
  2608  00158E                     _com_command_setPower:
  2609                           	opt stack 24
  2610                           
  2611                           ;SlaveComm_PIC18.c: 645: char temp[12];
  2612                           ;SlaveComm_PIC18.c: 658: ultoa( temp, meterWatts, 10 );
  2613                           
  2614                           ;incstack = 0
  2615  00158E  0EC2               	movlw	low com_command_setPower@temp
  2616  001590  6E20               	movwf	ultoa@buf,c
  2617  001592  0E00               	movlw	high com_command_setPower@temp
  2618  001594  6E21               	movwf	ultoa@buf+1,c
  2619  001596  C068  F022         	movff	_meterWatts,ultoa@val
  2620  00159A  C069  F023         	movff	_meterWatts+1,ultoa@val+1
  2621  00159E  C06A  F024         	movff	_meterWatts+2,ultoa@val+2
  2622  0015A2  C06B  F025         	movff	_meterWatts+3,ultoa@val+3
  2623  0015A6  0E00               	movlw	0
  2624  0015A8  6E27               	movwf	ultoa@base+1,c
  2625  0015AA  0E0A               	movlw	10
  2626  0015AC  6E26               	movwf	ultoa@base,c
  2627  0015AE  ECD9  F005         	call	_ultoa	;wreg free
  2628                           
  2629                           ;SlaveComm_PIC18.c: 660: command_builder3( send_buffer, "Set", "Watts", temp );
  2630  0015B2  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2631  0015B6  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2632  0015BA  0E57               	movlw	low STR_2
  2633  0015BC  6E21               	movwf	command_builder3@data1,c
  2634  0015BE  0E06               	movlw	high STR_2
  2635  0015C0  6E22               	movwf	command_builder3@data1+1,c
  2636  0015C2  0E24               	movlw	low STR_18
  2637  0015C4  6E23               	movwf	command_builder3@data2,c
  2638  0015C6  0E06               	movlw	high STR_18
  2639  0015C8  6E24               	movwf	command_builder3@data2+1,c
  2640  0015CA  0EC2               	movlw	low com_command_setPower@temp
  2641  0015CC  6E25               	movwf	command_builder3@data3,c
  2642  0015CE  0E00               	movlw	high com_command_setPower@temp
  2643  0015D0  6E26               	movwf	command_builder3@data3+1,c
  2644  0015D2  EC4B  F008         	call	_command_builder3	;wreg free
  2645  0015D6  0012               	return	
  2646  0015D8                     __end_of_com_command_setPower:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postinc1	equ	0xFE6
  2658                           postdec1	equ	0xFE5
  2659                           fsr1h	equ	0xFE2
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           postinc2	equ	0xFDE
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _receive_data *****************
  2668 ;; Defined at:
  2669 ;;		line 217 in file "SlaveComm_PIC18.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2672 ;;		 -> communications@receive_buffer(42), 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  data            1   24[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      enum E6751
  2677 ;; Registers used:
  2678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2684 ;;      Params:         2       0       0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0       0       0
  2686 ;;      Temps:          1       0       0       0       0       0       0
  2687 ;;      Totals:         4       0       0       0       0       0       0
  2688 ;;Total ram usage:        4 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    2
  2691 ;; This function calls:
  2692 ;;		_SPI_receive_data
  2693 ;; This function is called by:
  2694 ;;		_communications
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text15
  2699  000E7C                     __ptext15:
  2700                           	opt stack 0
  2701  000E7C                     _receive_data:
  2702                           	opt stack 27
  2703                           
  2704                           ;SlaveComm_PIC18.c: 219: char data;
  2705                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2706                           ;SlaveComm_PIC18.c: 223: if( my_status == receive_end_command )
  2707                           
  2708                           ;incstack = 0
  2709  000E7C  0E02               	movlw	2
  2710  000E7E  183E               	xorwf	receive_data@my_status,w,c
  2711  000E80  A4D8               	btfss	status,2,c
  2712  000E82  D002               	goto	l307
  2713                           
  2714                           ;SlaveComm_PIC18.c: 224: {
  2715                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2716  000E84  0E00               	movlw	0
  2717  000E86  6E3E               	movwf	receive_data@my_status,c
  2718  000E88                     l307:
  2719                           
  2720                           ;SlaveComm_PIC18.c: 226: }
  2721                           ;SlaveComm_PIC18.c: 228: if( SPI_receive_data( &data ) == 1 )
  2722  000E88  0E19               	movlw	low receive_data@data
  2723  000E8A  6E13               	movwf	SPI_receive_data@data,c
  2724  000E8C  0E00               	movlw	high receive_data@data
  2725  000E8E  6E14               	movwf	SPI_receive_data@data+1,c
  2726  000E90  EC7E  F00B         	call	_SPI_receive_data	;wreg free
  2727  000E94  06E8               	decf	wreg,f,c
  2728  000E96  A4D8               	btfss	status,2,c
  2729  000E98  D04F               	goto	l313
  2730                           
  2731                           ;SlaveComm_PIC18.c: 234: }
  2732                           ;SlaveComm_PIC18.c: 236: if( (data == '!') && (my_status != receive_in_command) )
  2733                           
  2734                           ;SlaveComm_PIC18.c: 232: {
  2735  000E9A  0E21               	movlw	33
  2736  000E9C  1819               	xorwf	receive_data@data,w,c
  2737  000E9E  A4D8               	btfss	status,2,c
  2738  000EA0  D015               	goto	l310
  2739  000EA2  043E               	decf	receive_data@my_status,w,c
  2740  000EA4  B4D8               	btfsc	status,2,c
  2741  000EA6  D012               	goto	l310
  2742                           
  2743                           ;SlaveComm_PIC18.c: 237: {
  2744                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  2745  000EA8  0E01               	movlw	1
  2746  000EAA  6E3E               	movwf	receive_data@my_status,c
  2747                           
  2748                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  2749  000EAC  EE20 F029          	lfsr	2,41
  2750  000EB0  5016               	movf	receive_data@receive_buffer,w,c
  2751  000EB2  26D9               	addwf	fsr2l,f,c
  2752  000EB4  5017               	movf	receive_data@receive_buffer+1,w,c
  2753  000EB6  22DA               	addwfc	fsr2h,f,c
  2754  000EB8  0E00               	movlw	0
  2755  000EBA  6EDF               	movwf	indf2,c
  2756                           
  2757                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  2758  000EBC  EE20 F028          	lfsr	2,40
  2759  000EC0  5016               	movf	receive_data@receive_buffer,w,c
  2760  000EC2  26D9               	addwf	fsr2l,f,c
  2761  000EC4  5017               	movf	receive_data@receive_buffer+1,w,c
  2762  000EC6  22DA               	addwfc	fsr2h,f,c
  2763  000EC8  0E00               	movlw	0
  2764  000ECA  6EDF               	movwf	indf2,c
  2765  000ECC                     l310:
  2766                           
  2767                           ;SlaveComm_PIC18.c: 241: }
  2768                           ;SlaveComm_PIC18.c: 243: if( my_status == receive_in_command )
  2769  000ECC  043E               	decf	receive_data@my_status,w,c
  2770  000ECE  A4D8               	btfss	status,2,c
  2771  000ED0  D02A               	goto	l312
  2772                           
  2773                           ;SlaveComm_PIC18.c: 244: {
  2774                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2775  000ED2  EE20 F028          	lfsr	2,40
  2776  000ED6  5016               	movf	receive_data@receive_buffer,w,c
  2777  000ED8  26D9               	addwf	fsr2l,f,c
  2778  000EDA  5017               	movf	receive_data@receive_buffer+1,w,c
  2779  000EDC  22DA               	addwfc	fsr2h,f,c
  2780  000EDE  50DF               	movf	indf2,w,c
  2781  000EE0  6E18               	movwf	??_receive_data& (0+255),c
  2782  000EE2  5018               	movf	??_receive_data,w,c
  2783  000EE4  0D01               	mullw	1
  2784  000EE6  50F3               	movf	prodl,w,c
  2785  000EE8  2416               	addwf	receive_data@receive_buffer,w,c
  2786  000EEA  6ED9               	movwf	fsr2l,c
  2787  000EEC  50F4               	movf	prodh,w,c
  2788  000EEE  2017               	addwfc	receive_data@receive_buffer+1,w,c
  2789  000EF0  6EDA               	movwf	fsr2h,c
  2790  000EF2  C019  FFDF         	movff	receive_data@data,indf2
  2791                           
  2792                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  2793  000EF6  EE20 F028          	lfsr	2,40
  2794  000EFA  5016               	movf	receive_data@receive_buffer,w,c
  2795  000EFC  26D9               	addwf	fsr2l,f,c
  2796  000EFE  5017               	movf	receive_data@receive_buffer+1,w,c
  2797  000F00  22DA               	addwfc	fsr2h,f,c
  2798  000F02  2ADF               	incf	indf2,f,c
  2799                           
  2800                           ;SlaveComm_PIC18.c: 248: if( receive_buffer->write_position >= 40 )
  2801  000F04  EE20 F028          	lfsr	2,40
  2802  000F08  5016               	movf	receive_data@receive_buffer,w,c
  2803  000F0A  26D9               	addwf	fsr2l,f,c
  2804  000F0C  5017               	movf	receive_data@receive_buffer+1,w,c
  2805  000F0E  22DA               	addwfc	fsr2h,f,c
  2806  000F10  0E27               	movlw	39
  2807  000F12  64DF               	cpfsgt	indf2,c
  2808  000F14  D008               	goto	l312
  2809                           
  2810                           ;SlaveComm_PIC18.c: 249: {
  2811                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  2812  000F16  EE20 F028          	lfsr	2,40
  2813  000F1A  5016               	movf	receive_data@receive_buffer,w,c
  2814  000F1C  26D9               	addwf	fsr2l,f,c
  2815  000F1E  5017               	movf	receive_data@receive_buffer+1,w,c
  2816  000F20  22DA               	addwfc	fsr2h,f,c
  2817  000F22  0E27               	movlw	39
  2818  000F24  6EDF               	movwf	indf2,c
  2819  000F26                     l312:
  2820                           
  2821                           ;SlaveComm_PIC18.c: 251: }
  2822                           ;SlaveComm_PIC18.c: 252: }
  2823                           ;SlaveComm_PIC18.c: 254: if( (my_status == receive_in_command) && (data == '*') )
  2824  000F26  043E               	decf	receive_data@my_status,w,c
  2825  000F28  A4D8               	btfss	status,2,c
  2826  000F2A  D006               	goto	l313
  2827  000F2C  0E2A               	movlw	42
  2828  000F2E  1819               	xorwf	receive_data@data,w,c
  2829  000F30  A4D8               	btfss	status,2,c
  2830  000F32  D002               	goto	l313
  2831                           
  2832                           ;SlaveComm_PIC18.c: 255: {
  2833                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  2834  000F34  0E02               	movlw	2
  2835  000F36  6E3E               	movwf	receive_data@my_status,c
  2836  000F38                     l313:
  2837                           
  2838                           ;SlaveComm_PIC18.c: 257: }
  2839                           ;SlaveComm_PIC18.c: 258: }
  2840                           ;SlaveComm_PIC18.c: 260: return my_status;
  2841  000F38  503E               	movf	receive_data@my_status,w,c
  2842  000F3A  0012               	return	
  2843  000F3C                     __end_of_receive_data:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postinc1	equ	0xFE6
  2855                           postdec1	equ	0xFE5
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function _SPI_receive_data *****************
  2865 ;; Defined at:
  2866 ;;		line 586 in file "SlaveComm_PIC18.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  data            2   18[COMRAM] PTR unsigned char 
  2869 ;;		 -> receive_data@data(1), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  recvGood        1   20[COMRAM] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      unsigned char 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         2       0       0       0       0       0       0
  2882 ;;      Locals:         1       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0
  2884 ;;      Totals:         3       0       0       0       0       0       0
  2885 ;;Total ram usage:        3 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_receive_data
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text16
  2896  0016FC                     __ptext16:
  2897                           	opt stack 0
  2898  0016FC                     _SPI_receive_data:
  2899                           	opt stack 27
  2900                           
  2901                           ;SlaveComm_PIC18.c: 589: bool recvGood = 0;
  2902                           
  2903                           ;incstack = 0
  2904  0016FC  0E00               	movlw	0
  2905  0016FE  6E15               	movwf	SPI_receive_data@recvGood,c
  2906                           
  2907                           ;SlaveComm_PIC18.c: 591: if( SSP2STATbits.BF == 1 )
  2908  001700  A06D               	btfss	3949,0,c	;volatile
  2909  001702  D00C               	goto	l415
  2910                           
  2911                           ;SlaveComm_PIC18.c: 592: {
  2912                           ;SlaveComm_PIC18.c: 593: *data = SSP2BUF;
  2913  001704  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  2914  001708  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2915  00170C  CF6F FFDF          	movff	3951,indf2	;volatile
  2916                           
  2917                           ;SlaveComm_PIC18.c: 594: recvGood = 1;
  2918  001710  0E01               	movlw	1
  2919  001712  6E15               	movwf	SPI_receive_data@recvGood,c
  2920                           
  2921                           ;SlaveComm_PIC18.c: 595: SSP2CON1bits.WCOL = 0;
  2922  001714  9E6C               	bcf	3948,7,c	;volatile
  2923                           
  2924                           ;SlaveComm_PIC18.c: 596: SPI_transmit_wait = 0;
  2925  001716  0E00               	movlw	0
  2926  001718  6E42               	movwf	_SPI_transmit_wait,c
  2927                           
  2928                           ;SlaveComm_PIC18.c: 597: }
  2929  00171A  D002               	goto	l416
  2930  00171C                     l415:
  2931                           
  2932                           ;SlaveComm_PIC18.c: 598: else
  2933                           ;SlaveComm_PIC18.c: 599: {
  2934                           ;SlaveComm_PIC18.c: 600: recvGood = 0;
  2935  00171C  0E00               	movlw	0
  2936  00171E  6E15               	movwf	SPI_receive_data@recvGood,c
  2937  001720                     l416:
  2938                           
  2939                           ;SlaveComm_PIC18.c: 601: }
  2940                           ;SlaveComm_PIC18.c: 603: return recvGood;
  2941  001720  5015               	movf	SPI_receive_data@recvGood,w,c
  2942  001722  0012               	return	
  2943  001724                     __end_of_SPI_receive_data:
  2944                           	opt stack 0
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           intcon	equ	0xFF2
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           postinc1	equ	0xFE6
  2955                           postdec1	equ	0xFE5
  2956                           fsr1h	equ	0xFE2
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           fsr2h	equ	0xFDA
  2961                           fsr2l	equ	0xFD9
  2962                           status	equ	0xFD8
  2963                           
  2964 ;; *************** function _process_data *****************
  2965 ;; Defined at:
  2966 ;;		line 263 in file "SlaveComm_PIC18.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  receive_buff    2   51[COMRAM] PTR struct buffer
  2969 ;;		 -> communications@receive_buffer(42), 
  2970 ;;  send_buffer     2   53[COMRAM] PTR struct buffer
  2971 ;;		 -> communications@send_buffer(42), 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  2974 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      unsigned char 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2984 ;;      Params:         4       0       0       0       0       0       0
  2985 ;;      Locals:         0       0      51       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0
  2987 ;;      Totals:         4       0      51       0       0       0       0
  2988 ;;Total ram usage:       55 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    6
  2991 ;; This function calls:
  2992 ;;		_process_data_parameterize
  2993 ;;		_process_data_parameters
  2994 ;; This function is called by:
  2995 ;;		_communications
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text17
  3000  00169C                     __ptext17:
  3001                           	opt stack 0
  3002  00169C                     _process_data:
  3003                           	opt stack 23
  3004                           
  3005                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  3006                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  3007                           ;SlaveComm_PIC18.c: 272: process_data_parameterize( parameters, receive_buffer );
  3008                           
  3009                           ;incstack = 0
  3010  00169C  0E00               	movlw	low process_data@parameters
  3011  00169E  6E19               	movwf	process_data_parameterize@parameters,c
  3012  0016A0  0E01               	movlw	high process_data@parameters
  3013  0016A2  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3014  0016A4  C034  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3015  0016A8  C035  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3016  0016AC  EC83  F004         	call	_process_data_parameterize	;wreg free
  3017                           
  3018                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3019  0016B0  0E00               	movlw	low process_data@parameters
  3020  0016B2  6E2F               	movwf	process_data_parameters@parameters,c
  3021  0016B4  0E01               	movlw	high process_data@parameters
  3022  0016B6  6E30               	movwf	process_data_parameters@parameters+1,c
  3023  0016B8  C036  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3024  0016BC  C037  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3025  0016C0  EC30  F003         	call	_process_data_parameters	;wreg free
  3026  0016C4  0101               	movlb	1	; () banked
  3027  0016C6  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  3028                           
  3029                           ; BSR set to: 1
  3030                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  3031  0016C8  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3032  0016CA  0012               	return	
  3033  0016CC                     __end_of_process_data:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           postinc1	equ	0xFE6
  3045                           postdec1	equ	0xFE5
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _process_data_parameters *****************
  3055 ;; Defined at:
  3056 ;;		line 339 in file "SlaveComm_PIC18.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  3059 ;;		 -> process_data@parameters(50), 
  3060 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  3061 ;;		 -> communications@send_buffer(42), 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      unsigned char 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         4       0       0       0       0       0       0
  3074 ;;      Locals:         1       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0
  3076 ;;      Totals:         5       0       0       0       0       0       0
  3077 ;;Total ram usage:        5 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    5
  3080 ;; This function calls:
  3081 ;;		_atol
  3082 ;;		_com_command_setEnergyUsed
  3083 ;;		_command_builder3
  3084 ;;		_send_end_of_transmission
  3085 ;;		_strmatch
  3086 ;; This function is called by:
  3087 ;;		_process_data
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text18
  3092  000660                     __ptext18:
  3093                           	opt stack 0
  3094  000660                     _process_data_parameters:
  3095                           	opt stack 23
  3096                           
  3097                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;incstack = 0
  3101  000660  0E00               	movlw	0
  3102  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3103                           
  3104                           ;SlaveComm_PIC18.c: 344: if( strmatch( parameters[0], "END" ) == 1 )
  3105  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3106  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3107  00066C  0E4F               	movlw	low STR_1
  3108  00066E  6E20               	movwf	strmatch@b,c
  3109  000670  0E06               	movlw	high STR_1
  3110  000672  6E21               	movwf	strmatch@b+1,c
  3111  000674  EC66  F00B         	call	_strmatch	;wreg free
  3112  000678  06E8               	decf	wreg,f,c
  3113  00067A  A4D8               	btfss	status,2,c
  3114  00067C  D003               	goto	l337
  3115                           
  3116                           ;SlaveComm_PIC18.c: 345: {
  3117                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  3118  00067E  0E01               	movlw	1
  3119  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3120                           
  3121                           ;SlaveComm_PIC18.c: 356: }
  3122  000682  D13F               	goto	l363
  3123  000684                     l337:
  3124                           
  3125                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[0], "Set" ) == 1 )
  3126  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3127  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3128  00068C  0E57               	movlw	low STR_2
  3129  00068E  6E20               	movwf	strmatch@b,c
  3130  000690  0E06               	movlw	high STR_2
  3131  000692  6E21               	movwf	strmatch@b+1,c
  3132  000694  EC66  F00B         	call	_strmatch	;wreg free
  3133  000698  06E8               	decf	wreg,f,c
  3134  00069A  A4D8               	btfss	status,2,c
  3135  00069C  D035               	goto	l339
  3136                           
  3137                           ;SlaveComm_PIC18.c: 358: {
  3138                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "Calibration" ) == 1 )
  3139  00069E  0E0A               	movlw	10
  3140  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3141  0006A2  6E1E               	movwf	strmatch@a,c
  3142  0006A4  0E00               	movlw	0
  3143  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3144  0006A8  6E1F               	movwf	strmatch@a+1,c
  3145  0006AA  0E01               	movlw	low STR_3
  3146  0006AC  6E20               	movwf	strmatch@b,c
  3147  0006AE  0E06               	movlw	high STR_3
  3148  0006B0  6E21               	movwf	strmatch@b+1,c
  3149  0006B2  EC66  F00B         	call	_strmatch	;wreg free
  3150  0006B6  06E8               	decf	wreg,f,c
  3151  0006B8  B4D8               	btfsc	status,2,c
  3152  0006BA  D123               	goto	l363
  3153                           
  3154                           ;SlaveComm_PIC18.c: 363: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3155                           
  3156                           ;SlaveComm_PIC18.c: 360: {
  3157                           ;SlaveComm_PIC18.c: 362: }
  3158  0006BC  0E0A               	movlw	10
  3159  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3160  0006C0  6E1E               	movwf	strmatch@a,c
  3161  0006C2  0E00               	movlw	0
  3162  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3163  0006C6  6E1F               	movwf	strmatch@a+1,c
  3164  0006C8  0E17               	movlw	low STR_4
  3165  0006CA  6E20               	movwf	strmatch@b,c
  3166  0006CC  0E06               	movlw	high STR_4
  3167  0006CE  6E21               	movwf	strmatch@b+1,c
  3168  0006D0  EC66  F00B         	call	_strmatch	;wreg free
  3169  0006D4  06E8               	decf	wreg,f,c
  3170  0006D6  A4D8               	btfss	status,2,c
  3171  0006D8  D114               	goto	l363
  3172                           
  3173                           ;SlaveComm_PIC18.c: 364: {
  3174                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol( parameters[2] );
  3175  0006DA  0E14               	movlw	20
  3176  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3177  0006DE  6E1F               	movwf	atol@s,c
  3178  0006E0  0E00               	movlw	0
  3179  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3180  0006E4  6E20               	movwf	atol@s+1,c
  3181  0006E6  EC54  F006         	call	_atol	;wreg free
  3182  0006EA  C01F  F064         	movff	?_atol,_meterEnergyUsed
  3183  0006EE  C020  F065         	movff	?_atol+1,_meterEnergyUsed+1
  3184  0006F2  C021  F066         	movff	?_atol+2,_meterEnergyUsed+2
  3185  0006F6  C022  F067         	movff	?_atol+3,_meterEnergyUsed+3
  3186                           
  3187                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed( send_buffer );
  3188  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3189  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3190  000702  ECEC  F00A         	call	_com_command_setEnergyUsed	;wreg free
  3191                           
  3192                           ;SlaveComm_PIC18.c: 371: }
  3193                           ;SlaveComm_PIC18.c: 376: }
  3194  000706  D0FD               	goto	l363
  3195  000708                     l339:
  3196                           
  3197                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[0], "Read" ) == 1 )
  3198  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3199  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3200  000710  0E34               	movlw	low STR_5
  3201  000712  6E20               	movwf	strmatch@b,c
  3202  000714  0E06               	movlw	high STR_5
  3203  000716  6E21               	movwf	strmatch@b+1,c
  3204  000718  EC66  F00B         	call	_strmatch	;wreg free
  3205  00071C  06E8               	decf	wreg,f,c
  3206  00071E  B4D8               	btfsc	status,2,c
  3207  000720  D0F0               	goto	l363
  3208                           
  3209                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[0], "Data" ) == 1 )
  3210                           
  3211                           ;SlaveComm_PIC18.c: 378: {
  3212                           ;SlaveComm_PIC18.c: 380: }
  3213  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3214  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3215  00072A  0E2F               	movlw	low STR_6
  3216  00072C  6E20               	movwf	strmatch@b,c
  3217  00072E  0E06               	movlw	high STR_6
  3218  000730  6E21               	movwf	strmatch@b+1,c
  3219  000732  EC66  F00B         	call	_strmatch	;wreg free
  3220  000736  06E8               	decf	wreg,f,c
  3221  000738  A4D8               	btfss	status,2,c
  3222  00073A  D053               	goto	l346
  3223                           
  3224                           ;SlaveComm_PIC18.c: 382: {
  3225                           ;SlaveComm_PIC18.c: 383: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3226  00073C  0E0A               	movlw	10
  3227  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  3228  000740  6E1E               	movwf	strmatch@a,c
  3229  000742  0E00               	movlw	0
  3230  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3231  000746  6E1F               	movwf	strmatch@a+1,c
  3232  000748  0E2A               	movlw	low STR_7
  3233  00074A  6E20               	movwf	strmatch@b,c
  3234  00074C  0E06               	movlw	high STR_7
  3235  00074E  6E21               	movwf	strmatch@b+1,c
  3236  000750  EC66  F00B         	call	_strmatch	;wreg free
  3237  000754  06E8               	decf	wreg,f,c
  3238  000756  A4D8               	btfss	status,2,c
  3239  000758  D0D4               	goto	l363
  3240                           
  3241                           ;SlaveComm_PIC18.c: 384: {
  3242                           ;SlaveComm_PIC18.c: 385: if( strmatch( parameters[2], "On" ) == 1 )
  3243  00075A  0E14               	movlw	20
  3244  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  3245  00075E  6E1E               	movwf	strmatch@a,c
  3246  000760  0E00               	movlw	0
  3247  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3248  000764  6E1F               	movwf	strmatch@a+1,c
  3249  000766  0E5B               	movlw	low STR_8
  3250  000768  6E20               	movwf	strmatch@b,c
  3251  00076A  0E06               	movlw	high STR_8
  3252  00076C  6E21               	movwf	strmatch@b+1,c
  3253  00076E  EC66  F00B         	call	_strmatch	;wreg free
  3254  000772  06E8               	decf	wreg,f,c
  3255  000774  A4D8               	btfss	status,2,c
  3256  000776  D013               	goto	l348
  3257                           
  3258                           ;SlaveComm_PIC18.c: 386: {
  3259                           ;SlaveComm_PIC18.c: 387: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  3260  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3261  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3262  000780  0E57               	movlw	low STR_2
  3263  000782  6E21               	movwf	command_builder3@data1,c
  3264  000784  0E06               	movlw	high STR_2
  3265  000786  6E22               	movwf	command_builder3@data1+1,c
  3266  000788  0E2A               	movlw	low STR_7
  3267  00078A  6E23               	movwf	command_builder3@data2,c
  3268  00078C  0E06               	movlw	high STR_7
  3269  00078E  6E24               	movwf	command_builder3@data2+1,c
  3270  000790  0E53               	movlw	low STR_11
  3271  000792  6E25               	movwf	command_builder3@data3,c
  3272  000794  0E06               	movlw	high STR_11
  3273  000796  6E26               	movwf	command_builder3@data3+1,c
  3274  000798  EC4B  F008         	call	_command_builder3	;wreg free
  3275                           
  3276                           ;SlaveComm_PIC18.c: 388: }
  3277  00079C  D0B2               	goto	l363
  3278  00079E                     l348:
  3279                           
  3280                           ;SlaveComm_PIC18.c: 389: else if( strmatch( parameters[2], "Off" ) == 1 )
  3281  00079E  0E14               	movlw	20
  3282  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  3283  0007A2  6E1E               	movwf	strmatch@a,c
  3284  0007A4  0E00               	movlw	0
  3285  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3286  0007A8  6E1F               	movwf	strmatch@a+1,c
  3287  0007AA  0E53               	movlw	low STR_11
  3288  0007AC  6E20               	movwf	strmatch@b,c
  3289  0007AE  0E06               	movlw	high STR_11
  3290  0007B0  6E21               	movwf	strmatch@b+1,c
  3291  0007B2  EC66  F00B         	call	_strmatch	;wreg free
  3292  0007B6  06E8               	decf	wreg,f,c
  3293  0007B8  A4D8               	btfss	status,2,c
  3294  0007BA  D0A3               	goto	l363
  3295                           
  3296                           ;SlaveComm_PIC18.c: 390: {
  3297                           ;SlaveComm_PIC18.c: 391: command_builder3( send_buffer, "Set", "LEDB", "On" );
  3298  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3299  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3300  0007C4  0E57               	movlw	low STR_2
  3301  0007C6  6E21               	movwf	command_builder3@data1,c
  3302  0007C8  0E06               	movlw	high STR_2
  3303  0007CA  6E22               	movwf	command_builder3@data1+1,c
  3304  0007CC  0E2A               	movlw	low STR_7
  3305  0007CE  6E23               	movwf	command_builder3@data2,c
  3306  0007D0  0E06               	movlw	high STR_7
  3307  0007D2  6E24               	movwf	command_builder3@data2+1,c
  3308  0007D4  0E5B               	movlw	low STR_8
  3309  0007D6  6E25               	movwf	command_builder3@data3,c
  3310  0007D8  0E06               	movlw	high STR_8
  3311  0007DA  6E26               	movwf	command_builder3@data3+1,c
  3312  0007DC  EC4B  F008         	call	_command_builder3	;wreg free
  3313                           
  3314                           ;SlaveComm_PIC18.c: 392: }
  3315                           ;SlaveComm_PIC18.c: 393: }
  3316                           ;SlaveComm_PIC18.c: 394: }
  3317  0007E0  D090               	goto	l363
  3318  0007E2                     l346:
  3319                           
  3320                           ;SlaveComm_PIC18.c: 395: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3321  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3322  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3323  0007EA  0E39               	movlw	low STR_16
  3324  0007EC  6E20               	movwf	strmatch@b,c
  3325  0007EE  0E06               	movlw	high STR_16
  3326  0007F0  6E21               	movwf	strmatch@b+1,c
  3327  0007F2  EC66  F00B         	call	_strmatch	;wreg free
  3328  0007F6  06E8               	decf	wreg,f,c
  3329  0007F8  A4D8               	btfss	status,2,c
  3330  0007FA  D083               	goto	l363
  3331                           
  3332                           ;SlaveComm_PIC18.c: 396: {
  3333                           ;SlaveComm_PIC18.c: 397: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3334  0007FC  0E0A               	movlw	10
  3335  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  3336  000800  6E1E               	movwf	strmatch@a,c
  3337  000802  0E00               	movlw	0
  3338  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3339  000806  6E1F               	movwf	strmatch@a+1,c
  3340  000808  0E2A               	movlw	low STR_7
  3341  00080A  6E20               	movwf	strmatch@b,c
  3342  00080C  0E06               	movlw	high STR_7
  3343  00080E  6E21               	movwf	strmatch@b+1,c
  3344  000810  EC66  F00B         	call	_strmatch	;wreg free
  3345  000814  06E8               	decf	wreg,f,c
  3346  000816  A4D8               	btfss	status,2,c
  3347  000818  D007               	goto	l353
  3348                           
  3349                           ;SlaveComm_PIC18.c: 398: {
  3350                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission( send_buffer );
  3351  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3352  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3353  000822  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3354                           
  3355                           ;SlaveComm_PIC18.c: 400: }
  3356  000826  D06D               	goto	l363
  3357  000828                     l353:
  3358                           
  3359                           ;SlaveComm_PIC18.c: 401: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3360  000828  0E0A               	movlw	10
  3361  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  3362  00082C  6E1E               	movwf	strmatch@a,c
  3363  00082E  0E00               	movlw	0
  3364  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3365  000832  6E1F               	movwf	strmatch@a+1,c
  3366  000834  0E24               	movlw	low STR_18
  3367  000836  6E20               	movwf	strmatch@b,c
  3368  000838  0E06               	movlw	high STR_18
  3369  00083A  6E21               	movwf	strmatch@b+1,c
  3370  00083C  EC66  F00B         	call	_strmatch	;wreg free
  3371  000840  06E8               	decf	wreg,f,c
  3372  000842  A4D8               	btfss	status,2,c
  3373  000844  D007               	goto	l355
  3374                           
  3375                           ;SlaveComm_PIC18.c: 402: {
  3376                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission( send_buffer );
  3377  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3378  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3379  00084E  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3380                           
  3381                           ;SlaveComm_PIC18.c: 404: }
  3382  000852  D057               	goto	l363
  3383  000854                     l355:
  3384                           
  3385                           ;SlaveComm_PIC18.c: 405: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3386  000854  0E0A               	movlw	10
  3387  000856  242F               	addwf	process_data_parameters@parameters,w,c
  3388  000858  6E1E               	movwf	strmatch@a,c
  3389  00085A  0E00               	movlw	0
  3390  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3391  00085E  6E1F               	movwf	strmatch@a+1,c
  3392  000860  0E17               	movlw	low STR_4
  3393  000862  6E20               	movwf	strmatch@b,c
  3394  000864  0E06               	movlw	high STR_4
  3395  000866  6E21               	movwf	strmatch@b+1,c
  3396  000868  EC66  F00B         	call	_strmatch	;wreg free
  3397  00086C  06E8               	decf	wreg,f,c
  3398  00086E  A4D8               	btfss	status,2,c
  3399  000870  D007               	goto	l357
  3400                           
  3401                           ;SlaveComm_PIC18.c: 406: {
  3402                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission( send_buffer );
  3403  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3404  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3405  00087A  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3406                           
  3407                           ;SlaveComm_PIC18.c: 408: }
  3408  00087E  D041               	goto	l363
  3409  000880                     l357:
  3410                           
  3411                           ;SlaveComm_PIC18.c: 409: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3412  000880  0E0A               	movlw	10
  3413  000882  242F               	addwf	process_data_parameters@parameters,w,c
  3414  000884  6E1E               	movwf	strmatch@a,c
  3415  000886  0E00               	movlw	0
  3416  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3417  00088A  6E1F               	movwf	strmatch@a+1,c
  3418  00088C  0E1E               	movlw	low STR_20
  3419  00088E  6E20               	movwf	strmatch@b,c
  3420  000890  0E06               	movlw	high STR_20
  3421  000892  6E21               	movwf	strmatch@b+1,c
  3422  000894  EC66  F00B         	call	_strmatch	;wreg free
  3423  000898  06E8               	decf	wreg,f,c
  3424  00089A  A4D8               	btfss	status,2,c
  3425  00089C  D007               	goto	l359
  3426                           
  3427                           ;SlaveComm_PIC18.c: 410: {
  3428                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission( send_buffer );
  3429  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3430  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3431  0008A6  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3432                           
  3433                           ;SlaveComm_PIC18.c: 412: }
  3434  0008AA  D02B               	goto	l363
  3435  0008AC                     l359:
  3436                           
  3437                           ;SlaveComm_PIC18.c: 413: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3438  0008AC  0E0A               	movlw	10
  3439  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  3440  0008B0  6E1E               	movwf	strmatch@a,c
  3441  0008B2  0E00               	movlw	0
  3442  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3443  0008B6  6E1F               	movwf	strmatch@a+1,c
  3444  0008B8  0E3E               	movlw	low STR_21
  3445  0008BA  6E20               	movwf	strmatch@b,c
  3446  0008BC  0E06               	movlw	high STR_21
  3447  0008BE  6E21               	movwf	strmatch@b+1,c
  3448  0008C0  EC66  F00B         	call	_strmatch	;wreg free
  3449  0008C4  06E8               	decf	wreg,f,c
  3450  0008C6  A4D8               	btfss	status,2,c
  3451  0008C8  D007               	goto	l361
  3452                           
  3453                           ;SlaveComm_PIC18.c: 414: {
  3454                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission( send_buffer );
  3455  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3456  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3457  0008D2  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3458                           
  3459                           ;SlaveComm_PIC18.c: 416: }
  3460  0008D6  D015               	goto	l363
  3461  0008D8                     l361:
  3462                           
  3463                           ;SlaveComm_PIC18.c: 417: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3464  0008D8  0E0A               	movlw	10
  3465  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  3466  0008DC  6E1E               	movwf	strmatch@a,c
  3467  0008DE  0E00               	movlw	0
  3468  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3469  0008E2  6E1F               	movwf	strmatch@a+1,c
  3470  0008E4  0E0D               	movlw	low STR_22
  3471  0008E6  6E20               	movwf	strmatch@b,c
  3472  0008E8  0E06               	movlw	high STR_22
  3473  0008EA  6E21               	movwf	strmatch@b+1,c
  3474  0008EC  EC66  F00B         	call	_strmatch	;wreg free
  3475  0008F0  06E8               	decf	wreg,f,c
  3476  0008F2  A4D8               	btfss	status,2,c
  3477  0008F4  D006               	goto	l363
  3478                           
  3479                           ;SlaveComm_PIC18.c: 418: {
  3480                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission( send_buffer );
  3481  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3482  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3483  0008FE  EC11  F00C         	call	_send_end_of_transmission	;wreg free
  3484  000902                     l363:
  3485                           
  3486                           ;SlaveComm_PIC18.c: 420: }
  3487                           ;SlaveComm_PIC18.c: 421: }
  3488                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3489  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  3490  000904  0012               	return	
  3491  000906                     __end_of_process_data_parameters:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           wreg	equ	0xFE8
  3502                           postinc1	equ	0xFE6
  3503                           postdec1	equ	0xFE5
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           fsr2h	equ	0xFDA
  3509                           fsr2l	equ	0xFD9
  3510                           status	equ	0xFD8
  3511                           
  3512 ;; *************** function _strmatch *****************
  3513 ;; Defined at:
  3514 ;;		line 537 in file "SlaveComm_PIC18.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  a               2   29[COMRAM] PTR unsigned char 
  3517 ;;		 -> process_data@parameters(50), 
  3518 ;;  b               2   31[COMRAM] PTR unsigned char 
  3519 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3520 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3521 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3522 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  result          2   33[COMRAM] int 
  3525 ;;  match           1   35[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      unsigned char 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3535 ;;      Params:         4       0       0       0       0       0       0
  3536 ;;      Locals:         3       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0
  3538 ;;      Totals:         7       0       0       0       0       0       0
  3539 ;;Total ram usage:        7 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    2
  3542 ;; This function calls:
  3543 ;;		_strcmp2
  3544 ;; This function is called by:
  3545 ;;		_process_data_parameters
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text19
  3550  0016CC                     __ptext19:
  3551                           	opt stack 0
  3552  0016CC                     _strmatch:
  3553                           	opt stack 25
  3554                           
  3555                           ;SlaveComm_PIC18.c: 539: int result;
  3556                           ;SlaveComm_PIC18.c: 540: bool match;
  3557                           ;SlaveComm_PIC18.c: 542: result = strcmp2( a, b );
  3558                           
  3559                           ;incstack = 0
  3560  0016CC  C01E  F013         	movff	strmatch@a,strcmp2@a
  3561  0016D0  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3562  0016D4  C020  F015         	movff	strmatch@b,strcmp2@b
  3563  0016D8  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3564  0016DC  EC43  F005         	call	_strcmp2	;wreg free
  3565  0016E0  C013  F022         	movff	?_strcmp2,strmatch@result
  3566  0016E4  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3567                           
  3568                           ;SlaveComm_PIC18.c: 544: match = (result == 0) ? 1 : 0;
  3569  0016E8  5022               	movf	strmatch@result,w,c
  3570  0016EA  1023               	iorwf	strmatch@result+1,w,c
  3571  0016EC  A4D8               	btfss	status,2,c
  3572  0016EE  D002               	goto	u2300
  3573  0016F0  0E01               	movlw	1
  3574  0016F2  D001               	goto	u2310
  3575  0016F4                     u2300:
  3576  0016F4  0E00               	movlw	0
  3577  0016F6                     u2310:
  3578  0016F6  6E24               	movwf	strmatch@match,c
  3579                           
  3580                           ;SlaveComm_PIC18.c: 546: return match;
  3581  0016F8  5024               	movf	strmatch@match,w,c
  3582  0016FA  0012               	return	
  3583  0016FC                     __end_of_strmatch:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postinc1	equ	0xFE6
  3595                           postdec1	equ	0xFE5
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function _strcmp2 *****************
  3605 ;; Defined at:
  3606 ;;		line 549 in file "SlaveComm_PIC18.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  a               2   18[COMRAM] PTR unsigned char 
  3609 ;;		 -> process_data@parameters(50), 
  3610 ;;  b               2   20[COMRAM] PTR unsigned char 
  3611 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3612 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3613 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3614 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  inx             2   27[COMRAM] int 
  3617 ;;  match           2   25[COMRAM] int 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  2   18[COMRAM] int 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3627 ;;      Params:         4       0       0       0       0       0       0
  3628 ;;      Locals:         4       0       0       0       0       0       0
  3629 ;;      Temps:          3       0       0       0       0       0       0
  3630 ;;      Totals:        11       0       0       0       0       0       0
  3631 ;;Total ram usage:       11 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_strmatch
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text20
  3642  000A86                     __ptext20:
  3643                           	opt stack 0
  3644  000A86                     _strcmp2:
  3645                           	opt stack 25
  3646                           
  3647                           ;SlaveComm_PIC18.c: 551: int inx = 0;
  3648                           
  3649                           ;incstack = 0
  3650  000A86  0E00               	movlw	0
  3651  000A88  6E1D               	movwf	strcmp2@inx+1,c
  3652  000A8A  0E00               	movlw	0
  3653  000A8C  6E1C               	movwf	strcmp2@inx,c
  3654                           
  3655                           ;SlaveComm_PIC18.c: 552: int match = 0;
  3656  000A8E  0E00               	movlw	0
  3657  000A90  6E1B               	movwf	strcmp2@match+1,c
  3658  000A92  0E00               	movlw	0
  3659  000A94  6E1A               	movwf	strcmp2@match,c
  3660                           
  3661                           ;SlaveComm_PIC18.c: 554: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  3662  000A96  D035               	goto	l399
  3663  000A98                     
  3664                           ;SlaveComm_PIC18.c: 555: {
  3665                           ;SlaveComm_PIC18.c: 556: if( a[inx] > b[inx] )
  3666  000A98  501C               	movf	strcmp2@inx,w,c
  3667  000A9A  2413               	addwf	strcmp2@a,w,c
  3668  000A9C  6ED9               	movwf	fsr2l,c
  3669  000A9E  501D               	movf	strcmp2@inx+1,w,c
  3670  000AA0  2014               	addwfc	strcmp2@a+1,w,c
  3671  000AA2  6EDA               	movwf	fsr2h,c
  3672  000AA4  501C               	movf	strcmp2@inx,w,c
  3673  000AA6  2415               	addwf	strcmp2@b,w,c
  3674  000AA8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3675  000AAA  501D               	movf	strcmp2@inx+1,w,c
  3676  000AAC  2016               	addwfc	strcmp2@b+1,w,c
  3677  000AAE  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3678  000AB0  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3679  000AB4  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3680  000AB8                     	if	0	;tblptru may be non-zero
  3681  000AB8                     	endif
  3682  000AB8                     	if	0	;tblptru may be non-zero
  3683  000AB8                     	endif
  3684  000AB8  50DE               	movf	postinc2,w,c
  3685  000ABA  0009               	tblrd		*+
  3686  000ABC  5CF5               	subwf	tablat,w,c
  3687  000ABE  B0D8               	btfsc	status,0,c
  3688  000AC0  D005               	goto	l401
  3689                           
  3690                           ;SlaveComm_PIC18.c: 557: {
  3691                           ;SlaveComm_PIC18.c: 558: match = 1;
  3692  000AC2  0E00               	movlw	0
  3693  000AC4  6E1B               	movwf	strcmp2@match+1,c
  3694  000AC6  0E01               	movlw	1
  3695  000AC8  6E1A               	movwf	strcmp2@match,c
  3696                           
  3697                           ;SlaveComm_PIC18.c: 559: }
  3698  000ACA  D019               	goto	l403
  3699  000ACC                     l401:
  3700                           
  3701                           ;SlaveComm_PIC18.c: 560: else if( a[inx] < b[inx] )
  3702  000ACC  501C               	movf	strcmp2@inx,w,c
  3703  000ACE  2413               	addwf	strcmp2@a,w,c
  3704  000AD0  6ED9               	movwf	fsr2l,c
  3705  000AD2  501D               	movf	strcmp2@inx+1,w,c
  3706  000AD4  2014               	addwfc	strcmp2@a+1,w,c
  3707  000AD6  6EDA               	movwf	fsr2h,c
  3708  000AD8  50DF               	movf	indf2,w,c
  3709  000ADA  6E17               	movwf	??_strcmp2& (0+255),c
  3710  000ADC  501C               	movf	strcmp2@inx,w,c
  3711  000ADE  2415               	addwf	strcmp2@b,w,c
  3712  000AE0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3713  000AE2  501D               	movf	strcmp2@inx+1,w,c
  3714  000AE4  2016               	addwfc	strcmp2@b+1,w,c
  3715  000AE6  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3716  000AE8  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3717  000AEC  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3718  000AF0                     	if	0	;tblptru may be non-zero
  3719  000AF0                     	endif
  3720  000AF0                     	if	0	;tblptru may be non-zero
  3721  000AF0                     	endif
  3722  000AF0  0008               	tblrd		*
  3723  000AF2  50F5               	movf	tablat,w,c
  3724  000AF4  5C17               	subwf	??_strcmp2,w,c
  3725  000AF6  B0D8               	btfsc	status,0,c
  3726  000AF8  D002               	goto	l403
  3727                           
  3728                           ;SlaveComm_PIC18.c: 561: {
  3729                           ;SlaveComm_PIC18.c: 562: match = -1;
  3730  000AFA  681A               	setf	strcmp2@match,c
  3731  000AFC  681B               	setf	strcmp2@match+1,c
  3732  000AFE                     l403:
  3733                           
  3734                           ;SlaveComm_PIC18.c: 567: }
  3735                           ;SlaveComm_PIC18.c: 569: inx++;
  3736                           
  3737                           ;SlaveComm_PIC18.c: 565: {
  3738  000AFE  4A1C               	infsnz	strcmp2@inx,f,c
  3739  000B00  2A1D               	incf	strcmp2@inx+1,f,c
  3740  000B02                     l399:
  3741  000B02  501C               	movf	strcmp2@inx,w,c
  3742  000B04  2413               	addwf	strcmp2@a,w,c
  3743  000B06  6ED9               	movwf	fsr2l,c
  3744  000B08  501D               	movf	strcmp2@inx+1,w,c
  3745  000B0A  2014               	addwfc	strcmp2@a+1,w,c
  3746  000B0C  6EDA               	movwf	fsr2h,c
  3747  000B0E  50DF               	movf	indf2,w,c
  3748  000B10  B4D8               	btfsc	status,2,c
  3749  000B12  D013               	goto	u2180
  3750  000B14  501C               	movf	strcmp2@inx,w,c
  3751  000B16  2415               	addwf	strcmp2@b,w,c
  3752  000B18  6E17               	movwf	??_strcmp2& (0+255),c
  3753  000B1A  501D               	movf	strcmp2@inx+1,w,c
  3754  000B1C  2016               	addwfc	strcmp2@b+1,w,c
  3755  000B1E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3756  000B20  C017  FFF6         	movff	??_strcmp2,tblptrl
  3757  000B24  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3758  000B28                     	if	0	;tblptru may be non-zero
  3759  000B28                     	endif
  3760  000B28                     	if	0	;tblptru may be non-zero
  3761  000B28                     	endif
  3762  000B28  0008               	tblrd		*
  3763  000B2A  50F5               	movf	tablat,w,c
  3764  000B2C  0900               	iorlw	0
  3765  000B2E  B4D8               	btfsc	status,2,c
  3766  000B30  D004               	goto	u2180
  3767  000B32  501A               	movf	strcmp2@match,w,c
  3768  000B34  101B               	iorwf	strcmp2@match+1,w,c
  3769  000B36  B4D8               	btfsc	status,2,c
  3770  000B38  D7AF               	goto	l400
  3771  000B3A                     u2180:
  3772                           
  3773                           ;SlaveComm_PIC18.c: 570: }
  3774                           ;SlaveComm_PIC18.c: 573: if( (a[inx] == '\0') && (b[inx] != '\0') )
  3775  000B3A  501C               	movf	strcmp2@inx,w,c
  3776  000B3C  2413               	addwf	strcmp2@a,w,c
  3777  000B3E  6ED9               	movwf	fsr2l,c
  3778  000B40  501D               	movf	strcmp2@inx+1,w,c
  3779  000B42  2014               	addwfc	strcmp2@a+1,w,c
  3780  000B44  6EDA               	movwf	fsr2h,c
  3781  000B46  50DF               	movf	indf2,w,c
  3782  000B48  A4D8               	btfss	status,2,c
  3783  000B4A  D012               	goto	l409
  3784  000B4C  501C               	movf	strcmp2@inx,w,c
  3785  000B4E  2415               	addwf	strcmp2@b,w,c
  3786  000B50  6E17               	movwf	??_strcmp2& (0+255),c
  3787  000B52  501D               	movf	strcmp2@inx+1,w,c
  3788  000B54  2016               	addwfc	strcmp2@b+1,w,c
  3789  000B56  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3790  000B58  C017  FFF6         	movff	??_strcmp2,tblptrl
  3791  000B5C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3792  000B60                     	if	0	;tblptru may be non-zero
  3793  000B60                     	endif
  3794  000B60                     	if	0	;tblptru may be non-zero
  3795  000B60                     	endif
  3796  000B60  0008               	tblrd		*
  3797  000B62  50F5               	movf	tablat,w,c
  3798  000B64  0900               	iorlw	0
  3799  000B66  B4D8               	btfsc	status,2,c
  3800  000B68  D003               	goto	l409
  3801                           
  3802                           ;SlaveComm_PIC18.c: 574: {
  3803                           ;SlaveComm_PIC18.c: 575: match = -1;
  3804  000B6A  681A               	setf	strcmp2@match,c
  3805  000B6C  681B               	setf	strcmp2@match+1,c
  3806                           
  3807                           ;SlaveComm_PIC18.c: 576: }
  3808  000B6E  D01C               	goto	l411
  3809  000B70                     l409:
  3810                           
  3811                           ;SlaveComm_PIC18.c: 577: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  3812  000B70  501C               	movf	strcmp2@inx,w,c
  3813  000B72  2413               	addwf	strcmp2@a,w,c
  3814  000B74  6ED9               	movwf	fsr2l,c
  3815  000B76  501D               	movf	strcmp2@inx+1,w,c
  3816  000B78  2014               	addwfc	strcmp2@a+1,w,c
  3817  000B7A  6EDA               	movwf	fsr2h,c
  3818  000B7C  50DF               	movf	indf2,w,c
  3819  000B7E  B4D8               	btfsc	status,2,c
  3820  000B80  D013               	goto	l411
  3821  000B82  501C               	movf	strcmp2@inx,w,c
  3822  000B84  2415               	addwf	strcmp2@b,w,c
  3823  000B86  6E17               	movwf	??_strcmp2& (0+255),c
  3824  000B88  501D               	movf	strcmp2@inx+1,w,c
  3825  000B8A  2016               	addwfc	strcmp2@b+1,w,c
  3826  000B8C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3827  000B8E  C017  FFF6         	movff	??_strcmp2,tblptrl
  3828  000B92  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3829  000B96                     	if	0	;tblptru may be non-zero
  3830  000B96                     	endif
  3831  000B96                     	if	0	;tblptru may be non-zero
  3832  000B96                     	endif
  3833  000B96  0008               	tblrd		*
  3834  000B98  50F5               	movf	tablat,w,c
  3835  000B9A  0900               	iorlw	0
  3836  000B9C  A4D8               	btfss	status,2,c
  3837  000B9E  D004               	goto	l411
  3838                           
  3839                           ;SlaveComm_PIC18.c: 578: {
  3840                           ;SlaveComm_PIC18.c: 579: match = 1;
  3841  000BA0  0E00               	movlw	0
  3842  000BA2  6E1B               	movwf	strcmp2@match+1,c
  3843  000BA4  0E01               	movlw	1
  3844  000BA6  6E1A               	movwf	strcmp2@match,c
  3845  000BA8                     l411:
  3846                           
  3847                           ;SlaveComm_PIC18.c: 580: }
  3848                           ;SlaveComm_PIC18.c: 582: return match;
  3849  000BA8  C01A  F013         	movff	strcmp2@match,?_strcmp2
  3850  000BAC  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  3851  000BB0  0012               	return	
  3852  000BB2                     __end_of_strcmp2:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           postinc0	equ	0xFEE
  3862                           wreg	equ	0xFE8
  3863                           postinc1	equ	0xFE6
  3864                           postdec1	equ	0xFE5
  3865                           fsr1h	equ	0xFE2
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           postinc2	equ	0xFDE
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _send_end_of_transmission *****************
  3874 ;; Defined at:
  3875 ;;		line 628 in file "SlaveComm_PIC18.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  3878 ;;		 -> communications@send_buffer(42), 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3890 ;;      Params:         2       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0
  3893 ;;      Totals:         2       0       0       0       0       0       0
  3894 ;;Total ram usage:        2 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    4
  3897 ;; This function calls:
  3898 ;;		_command_builder1
  3899 ;; This function is called by:
  3900 ;;		_process_data_parameters
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text21
  3905  001822                     __ptext21:
  3906                           	opt stack 0
  3907  001822                     _send_end_of_transmission:
  3908                           	opt stack 23
  3909                           
  3910                           ;SlaveComm_PIC18.c: 630: command_builder1( send_buffer, "END" );
  3911                           
  3912                           ;incstack = 0
  3913  001822  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3914  001826  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3915  00182A  0E4F               	movlw	low STR_1
  3916  00182C  6E21               	movwf	command_builder1@data1,c
  3917  00182E  0E06               	movlw	high STR_1
  3918  001830  6E22               	movwf	command_builder1@data1+1,c
  3919  001832  EC46  F00A         	call	_command_builder1	;wreg free
  3920  001836  0012               	return	
  3921  001838                     __end_of_send_end_of_transmission:
  3922                           	opt stack 0
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           postinc0	equ	0xFEE
  3931                           wreg	equ	0xFE8
  3932                           postinc1	equ	0xFE6
  3933                           postdec1	equ	0xFE5
  3934                           fsr1h	equ	0xFE2
  3935                           fsr1l	equ	0xFE1
  3936                           indf2	equ	0xFDF
  3937                           postinc2	equ	0xFDE
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _command_builder1 *****************
  3943 ;; Defined at:
  3944 ;;		line 430 in file "SlaveComm_PIC18.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  3947 ;;		 -> communications@send_buffer(42), 
  3948 ;;  data1           2   32[COMRAM] PTR unsigned char 
  3949 ;;		 -> STR_23(4), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3961 ;;      Params:         4       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0
  3964 ;;      Totals:         4       0       0       0       0       0       0
  3965 ;;Total ram usage:        4 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		_command_builder_add_char
  3970 ;;		_command_builder_add_string
  3971 ;; This function is called by:
  3972 ;;		_send_end_of_transmission
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text22
  3977  00148C                     __ptext22:
  3978                           	opt stack 0
  3979  00148C                     _command_builder1:
  3980                           	opt stack 23
  3981                           
  3982                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, '#' );
  3983                           
  3984                           ;incstack = 0
  3985  00148C  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3986  001490  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3987  001494  0E23               	movlw	35
  3988  001496  6E15               	movwf	command_builder_add_char@data,c
  3989  001498  EC71  F00A         	call	_command_builder_add_char	;wreg free
  3990                           
  3991                           ;SlaveComm_PIC18.c: 433: command_builder_add_char( send_buffer, '#' );
  3992  00149C  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3993  0014A0  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3994  0014A4  0E23               	movlw	35
  3995  0014A6  6E15               	movwf	command_builder_add_char@data,c
  3996  0014A8  EC71  F00A         	call	_command_builder_add_char	;wreg free
  3997                           
  3998                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '!' );
  3999  0014AC  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4000  0014B0  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4001  0014B4  0E21               	movlw	33
  4002  0014B6  6E15               	movwf	command_builder_add_char@data,c
  4003  0014B8  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4004                           
  4005                           ;SlaveComm_PIC18.c: 435: command_builder_add_string( send_buffer, data1 );
  4006  0014BC  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4007  0014C0  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4008  0014C4  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4009  0014C8  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4010  0014CC  EC71  F009         	call	_command_builder_add_string	;wreg free
  4011                           
  4012                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, '*' );
  4013  0014D0  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4014  0014D4  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4015  0014D8  0E2A               	movlw	42
  4016  0014DA  6E15               	movwf	command_builder_add_char@data,c
  4017  0014DC  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4018  0014E0  0012               	return	
  4019  0014E2                     __end_of_command_builder1:
  4020                           	opt stack 0
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           intcon	equ	0xFF2
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postinc1	equ	0xFE6
  4031                           postdec1	equ	0xFE5
  4032                           fsr1h	equ	0xFE2
  4033                           fsr1l	equ	0xFE1
  4034                           indf2	equ	0xFDF
  4035                           postinc2	equ	0xFDE
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function _com_command_setEnergyUsed *****************
  4041 ;; Defined at:
  4042 ;;		line 665 in file "SlaveComm_PIC18.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4045 ;;		 -> communications@send_buffer(42), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4057 ;;      Params:         2       0       0       0       0       0       0
  4058 ;;      Locals:         0      12       0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0
  4060 ;;      Totals:         2      12       0       0       0       0       0
  4061 ;;Total ram usage:       14 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    4
  4064 ;; This function calls:
  4065 ;;		_command_builder3
  4066 ;;		_ultoa
  4067 ;; This function is called by:
  4068 ;;		_resetCommunications
  4069 ;;		_process_data_parameters
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text23
  4074  0015D8                     __ptext23:
  4075                           	opt stack 0
  4076  0015D8                     _com_command_setEnergyUsed:
  4077                           	opt stack 24
  4078                           
  4079                           ;SlaveComm_PIC18.c: 667: char temp[12];
  4080                           ;SlaveComm_PIC18.c: 669: ultoa( temp, meterEnergyUsed, 10 );
  4081                           
  4082                           ;incstack = 0
  4083  0015D8  0EC2               	movlw	low com_command_setEnergyUsed@temp
  4084  0015DA  6E20               	movwf	ultoa@buf,c
  4085  0015DC  0E00               	movlw	high com_command_setEnergyUsed@temp
  4086  0015DE  6E21               	movwf	ultoa@buf+1,c
  4087  0015E0  C064  F022         	movff	_meterEnergyUsed,ultoa@val
  4088  0015E4  C065  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4089  0015E8  C066  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4090  0015EC  C067  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4091  0015F0  0E00               	movlw	0
  4092  0015F2  6E27               	movwf	ultoa@base+1,c
  4093  0015F4  0E0A               	movlw	10
  4094  0015F6  6E26               	movwf	ultoa@base,c
  4095  0015F8  ECD9  F005         	call	_ultoa	;wreg free
  4096                           
  4097                           ;SlaveComm_PIC18.c: 672: command_builder3( send_buffer, "Set", "EnUsed", temp );
  4098  0015FC  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4099  001600  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4100  001604  0E57               	movlw	low STR_2
  4101  001606  6E21               	movwf	command_builder3@data1,c
  4102  001608  0E06               	movlw	high STR_2
  4103  00160A  6E22               	movwf	command_builder3@data1+1,c
  4104  00160C  0E17               	movlw	low STR_4
  4105  00160E  6E23               	movwf	command_builder3@data2,c
  4106  001610  0E06               	movlw	high STR_4
  4107  001612  6E24               	movwf	command_builder3@data2+1,c
  4108  001614  0EC2               	movlw	low com_command_setEnergyUsed@temp
  4109  001616  6E25               	movwf	command_builder3@data3,c
  4110  001618  0E00               	movlw	high com_command_setEnergyUsed@temp
  4111  00161A  6E26               	movwf	command_builder3@data3+1,c
  4112  00161C  EC4B  F008         	call	_command_builder3	;wreg free
  4113  001620  0012               	return	
  4114  001622                     __end_of_com_command_setEnergyUsed:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           prodh	equ	0xFF4
  4121                           prodl	equ	0xFF3
  4122                           intcon	equ	0xFF2
  4123                           postinc0	equ	0xFEE
  4124                           wreg	equ	0xFE8
  4125                           postinc1	equ	0xFE6
  4126                           postdec1	equ	0xFE5
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           indf2	equ	0xFDF
  4130                           postinc2	equ	0xFDE
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _ultoa *****************
  4136 ;; Defined at:
  4137 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4140 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4141 ;;  val             4   33[COMRAM] unsigned long 
  4142 ;;  base            2   37[COMRAM] int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  v               4   39[COMRAM] unsigned long 
  4145 ;;  c               1   43[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  2   31[COMRAM] PTR unsigned char 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4155 ;;      Params:         8       0       0       0       0       0       0
  4156 ;;      Locals:         5       0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0
  4158 ;;      Totals:        13       0       0       0       0       0       0
  4159 ;;Total ram usage:       13 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		___lldiv
  4164 ;;		___llmod
  4165 ;; This function is called by:
  4166 ;;		_com_command_setPower
  4167 ;;		_com_command_setEnergyUsed
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text24
  4172  000BB2                     __ptext24:
  4173                           	opt stack 0
  4174  000BB2                     _ultoa:
  4175                           	opt stack 25
  4176                           
  4177                           ;incstack = 0
  4178  000BB2  C022  F028         	movff	ultoa@val,ultoa@v
  4179  000BB6  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4180  000BBA  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4181  000BBE  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4182  000BC2  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4183  000BC6  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4184  000BCA  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4185  000BCE  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4186  000BD2  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4187  000BD6  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4188  000BDA  0E00               	movlw	0
  4189  000BDC  BE18               	btfsc	___lldiv@divisor+1,7,c
  4190  000BDE  0EFF               	movlw	-1
  4191  000BE0  6E19               	movwf	___lldiv@divisor+2,c
  4192  000BE2  6E1A               	movwf	___lldiv@divisor+3,c
  4193  000BE4  EC30  F009         	call	___lldiv	;wreg free
  4194  000BE8  C013  F028         	movff	?___lldiv,ultoa@v
  4195  000BEC  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4196  000BF0  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4197  000BF4  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4198  000BF8  4A20               	infsnz	ultoa@buf,f,c
  4199  000BFA  2A21               	incf	ultoa@buf+1,f,c
  4200  000BFC  5028               	movf	ultoa@v,w,c
  4201  000BFE  1029               	iorwf	ultoa@v+1,w,c
  4202  000C00  102A               	iorwf	ultoa@v+2,w,c
  4203  000C02  102B               	iorwf	ultoa@v+3,w,c
  4204  000C04  A4D8               	btfss	status,2,c
  4205  000C06  D7DD               	goto	l872
  4206  000C08  C020  FFD9         	movff	ultoa@buf,fsr2l
  4207  000C0C  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4208  000C10  0E00               	movlw	0
  4209  000C12  6EDF               	movwf	indf2,c
  4210  000C14  0620               	decf	ultoa@buf,f,c
  4211  000C16  A0D8               	btfss	status,0,c
  4212  000C18  0621               	decf	ultoa@buf+1,f,c
  4213  000C1A  C022  F013         	movff	ultoa@val,___llmod@dividend
  4214  000C1E  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4215  000C22  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4216  000C26  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4217  000C2A  C026  F017         	movff	ultoa@base,___llmod@divisor
  4218  000C2E  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4219  000C32  0E00               	movlw	0
  4220  000C34  BE18               	btfsc	___llmod@divisor+1,7,c
  4221  000C36  0EFF               	movlw	-1
  4222  000C38  6E19               	movwf	___llmod@divisor+2,c
  4223  000C3A  6E1A               	movwf	___llmod@divisor+3,c
  4224  000C3C  ECE7  F009         	call	___llmod	;wreg free
  4225  000C40  5013               	movf	?___llmod,w,c
  4226  000C42  6E2C               	movwf	ultoa@c,c
  4227  000C44  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4228  000C48  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4229  000C4C  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4230  000C50  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4231  000C54  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4232  000C58  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4233  000C5C  0E00               	movlw	0
  4234  000C5E  BE18               	btfsc	___lldiv@divisor+1,7,c
  4235  000C60  0EFF               	movlw	-1
  4236  000C62  6E19               	movwf	___lldiv@divisor+2,c
  4237  000C64  6E1A               	movwf	___lldiv@divisor+3,c
  4238  000C66  EC30  F009         	call	___lldiv	;wreg free
  4239  000C6A  C013  F022         	movff	?___lldiv,ultoa@val
  4240  000C6E  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4241  000C72  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4242  000C76  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4243  000C7A  0E09               	movlw	9
  4244  000C7C  642C               	cpfsgt	ultoa@c,c
  4245  000C7E  D002               	goto	l875
  4246  000C80  0E07               	movlw	7
  4247  000C82  262C               	addwf	ultoa@c,f,c
  4248  000C84                     l875:
  4249  000C84  0E30               	movlw	48
  4250  000C86  262C               	addwf	ultoa@c,f,c
  4251  000C88  C020  FFD9         	movff	ultoa@buf,fsr2l
  4252  000C8C  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4253  000C90  C02C  FFDF         	movff	ultoa@c,indf2
  4254  000C94  0620               	decf	ultoa@buf,f,c
  4255  000C96  A0D8               	btfss	status,0,c
  4256  000C98  0621               	decf	ultoa@buf+1,f,c
  4257  000C9A  5022               	movf	ultoa@val,w,c
  4258  000C9C  1023               	iorwf	ultoa@val+1,w,c
  4259  000C9E  1024               	iorwf	ultoa@val+2,w,c
  4260  000CA0  1025               	iorwf	ultoa@val+3,w,c
  4261  000CA2  B4D8               	btfsc	status,2,c
  4262  000CA4  0012               	return	
  4263  000CA6  D7B9               	goto	l874
  4264  000CA8                     __end_of_ultoa:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           prodh	equ	0xFF4
  4271                           prodl	equ	0xFF3
  4272                           intcon	equ	0xFF2
  4273                           postinc0	equ	0xFEE
  4274                           wreg	equ	0xFE8
  4275                           postinc1	equ	0xFE6
  4276                           postdec1	equ	0xFE5
  4277                           fsr1h	equ	0xFE2
  4278                           fsr1l	equ	0xFE1
  4279                           indf2	equ	0xFDF
  4280                           postinc2	equ	0xFDE
  4281                           fsr2h	equ	0xFDA
  4282                           fsr2l	equ	0xFD9
  4283                           status	equ	0xFD8
  4284                           
  4285 ;; *************** function ___llmod *****************
  4286 ;; Defined at:
  4287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  dividend        4   18[COMRAM] unsigned long 
  4290 ;;  divisor         4   22[COMRAM] unsigned long 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  counter         1   26[COMRAM] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  4   18[COMRAM] unsigned long 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4302 ;;      Params:         8       0       0       0       0       0       0
  4303 ;;      Locals:         1       0       0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0
  4305 ;;      Totals:         9       0       0       0       0       0       0
  4306 ;;Total ram usage:        9 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_ultoa
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text25
  4317  0013CE                     __ptext25:
  4318                           	opt stack 0
  4319  0013CE                     ___llmod:
  4320                           	opt stack 25
  4321                           
  4322                           ;incstack = 0
  4323  0013CE  5017               	movf	___llmod@divisor,w,c
  4324  0013D0  1018               	iorwf	___llmod@divisor+1,w,c
  4325  0013D2  1019               	iorwf	___llmod@divisor+2,w,c
  4326  0013D4  101A               	iorwf	___llmod@divisor+3,w,c
  4327  0013D6  B4D8               	btfsc	status,2,c
  4328  0013D8  D024               	goto	l834
  4329  0013DA  0E01               	movlw	1
  4330  0013DC  6E1B               	movwf	___llmod@counter,c
  4331  0013DE  D006               	goto	l829
  4332  0013E0  90D8               	bcf	status,0,c
  4333  0013E2  3617               	rlcf	___llmod@divisor,f,c
  4334  0013E4  3618               	rlcf	___llmod@divisor+1,f,c
  4335  0013E6  3619               	rlcf	___llmod@divisor+2,f,c
  4336  0013E8  361A               	rlcf	___llmod@divisor+3,f,c
  4337  0013EA  2A1B               	incf	___llmod@counter,f,c
  4338  0013EC                     l829:
  4339  0013EC  AE1A               	btfss	___llmod@divisor+3,7,c
  4340  0013EE  D7F8               	goto	l830
  4341  0013F0                     u2120:
  4342  0013F0  5017               	movf	___llmod@divisor,w,c
  4343  0013F2  5C13               	subwf	___llmod@dividend,w,c
  4344  0013F4  5018               	movf	___llmod@divisor+1,w,c
  4345  0013F6  5814               	subwfb	___llmod@dividend+1,w,c
  4346  0013F8  5019               	movf	___llmod@divisor+2,w,c
  4347  0013FA  5815               	subwfb	___llmod@dividend+2,w,c
  4348  0013FC  501A               	movf	___llmod@divisor+3,w,c
  4349  0013FE  5816               	subwfb	___llmod@dividend+3,w,c
  4350  001400  A0D8               	btfss	status,0,c
  4351  001402  D008               	goto	l833
  4352  001404  5017               	movf	___llmod@divisor,w,c
  4353  001406  5E13               	subwf	___llmod@dividend,f,c
  4354  001408  5018               	movf	___llmod@divisor+1,w,c
  4355  00140A  5A14               	subwfb	___llmod@dividend+1,f,c
  4356  00140C  5019               	movf	___llmod@divisor+2,w,c
  4357  00140E  5A15               	subwfb	___llmod@dividend+2,f,c
  4358  001410  501A               	movf	___llmod@divisor+3,w,c
  4359  001412  5A16               	subwfb	___llmod@dividend+3,f,c
  4360  001414                     l833:
  4361  001414  90D8               	bcf	status,0,c
  4362  001416  321A               	rrcf	___llmod@divisor+3,f,c
  4363  001418  3219               	rrcf	___llmod@divisor+2,f,c
  4364  00141A  3218               	rrcf	___llmod@divisor+1,f,c
  4365  00141C  3217               	rrcf	___llmod@divisor,f,c
  4366  00141E  2E1B               	decfsz	___llmod@counter,f,c
  4367  001420  D7E7               	goto	u2120
  4368  001422                     l834:
  4369  001422  C013  F013         	movff	___llmod@dividend,?___llmod
  4370  001426  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4371  00142A  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4372  00142E  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4373  001432  0012               	return		;funcret
  4374  001434                     __end_of___llmod:
  4375                           	opt stack 0
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           prodh	equ	0xFF4
  4381                           prodl	equ	0xFF3
  4382                           intcon	equ	0xFF2
  4383                           postinc0	equ	0xFEE
  4384                           wreg	equ	0xFE8
  4385                           postinc1	equ	0xFE6
  4386                           postdec1	equ	0xFE5
  4387                           fsr1h	equ	0xFE2
  4388                           fsr1l	equ	0xFE1
  4389                           indf2	equ	0xFDF
  4390                           postinc2	equ	0xFDE
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function ___lldiv *****************
  4396 ;; Defined at:
  4397 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  dividend        4   18[COMRAM] unsigned long 
  4400 ;;  divisor         4   22[COMRAM] unsigned long 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  quotient        4   26[COMRAM] unsigned long 
  4403 ;;  counter         1   30[COMRAM] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  4   18[COMRAM] unsigned long 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4413 ;;      Params:         8       0       0       0       0       0       0
  4414 ;;      Locals:         5       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0
  4416 ;;      Totals:        13       0       0       0       0       0       0
  4417 ;;Total ram usage:       13 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_powerPulseCheck
  4424 ;;		_ultoa
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text26
  4429  001260                     __ptext26:
  4430                           	opt stack 0
  4431  001260                     ___lldiv:
  4432                           	opt stack 28
  4433                           
  4434                           ;incstack = 0
  4435  001260  0E00               	movlw	0
  4436  001262  6E1B               	movwf	___lldiv@quotient,c
  4437  001264  0E00               	movlw	0
  4438  001266  6E1C               	movwf	___lldiv@quotient+1,c
  4439  001268  0E00               	movlw	0
  4440  00126A  6E1D               	movwf	___lldiv@quotient+2,c
  4441  00126C  0E00               	movlw	0
  4442  00126E  6E1E               	movwf	___lldiv@quotient+3,c
  4443  001270  5017               	movf	___lldiv@divisor,w,c
  4444  001272  1018               	iorwf	___lldiv@divisor+1,w,c
  4445  001274  1019               	iorwf	___lldiv@divisor+2,w,c
  4446  001276  101A               	iorwf	___lldiv@divisor+3,w,c
  4447  001278  B4D8               	btfsc	status,2,c
  4448  00127A  D02A               	goto	l824
  4449  00127C  0E01               	movlw	1
  4450  00127E  6E1F               	movwf	___lldiv@counter,c
  4451  001280  D006               	goto	l819
  4452  001282  90D8               	bcf	status,0,c
  4453  001284  3617               	rlcf	___lldiv@divisor,f,c
  4454  001286  3618               	rlcf	___lldiv@divisor+1,f,c
  4455  001288  3619               	rlcf	___lldiv@divisor+2,f,c
  4456  00128A  361A               	rlcf	___lldiv@divisor+3,f,c
  4457  00128C  2A1F               	incf	___lldiv@counter,f,c
  4458  00128E                     l819:
  4459  00128E  AE1A               	btfss	___lldiv@divisor+3,7,c
  4460  001290  D7F8               	goto	l820
  4461  001292                     u2090:
  4462  001292  90D8               	bcf	status,0,c
  4463  001294  361B               	rlcf	___lldiv@quotient,f,c
  4464  001296  361C               	rlcf	___lldiv@quotient+1,f,c
  4465  001298  361D               	rlcf	___lldiv@quotient+2,f,c
  4466  00129A  361E               	rlcf	___lldiv@quotient+3,f,c
  4467  00129C  5017               	movf	___lldiv@divisor,w,c
  4468  00129E  5C13               	subwf	___lldiv@dividend,w,c
  4469  0012A0  5018               	movf	___lldiv@divisor+1,w,c
  4470  0012A2  5814               	subwfb	___lldiv@dividend+1,w,c
  4471  0012A4  5019               	movf	___lldiv@divisor+2,w,c
  4472  0012A6  5815               	subwfb	___lldiv@dividend+2,w,c
  4473  0012A8  501A               	movf	___lldiv@divisor+3,w,c
  4474  0012AA  5816               	subwfb	___lldiv@dividend+3,w,c
  4475  0012AC  A0D8               	btfss	status,0,c
  4476  0012AE  D009               	goto	l823
  4477  0012B0  5017               	movf	___lldiv@divisor,w,c
  4478  0012B2  5E13               	subwf	___lldiv@dividend,f,c
  4479  0012B4  5018               	movf	___lldiv@divisor+1,w,c
  4480  0012B6  5A14               	subwfb	___lldiv@dividend+1,f,c
  4481  0012B8  5019               	movf	___lldiv@divisor+2,w,c
  4482  0012BA  5A15               	subwfb	___lldiv@dividend+2,f,c
  4483  0012BC  501A               	movf	___lldiv@divisor+3,w,c
  4484  0012BE  5A16               	subwfb	___lldiv@dividend+3,f,c
  4485  0012C0  801B               	bsf	___lldiv@quotient,0,c
  4486  0012C2                     l823:
  4487  0012C2  90D8               	bcf	status,0,c
  4488  0012C4  321A               	rrcf	___lldiv@divisor+3,f,c
  4489  0012C6  3219               	rrcf	___lldiv@divisor+2,f,c
  4490  0012C8  3218               	rrcf	___lldiv@divisor+1,f,c
  4491  0012CA  3217               	rrcf	___lldiv@divisor,f,c
  4492  0012CC  2E1F               	decfsz	___lldiv@counter,f,c
  4493  0012CE  D7E1               	goto	u2090
  4494  0012D0                     l824:
  4495  0012D0  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4496  0012D4  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4497  0012D8  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4498  0012DC  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4499  0012E0  0012               	return		;funcret
  4500  0012E2                     __end_of___lldiv:
  4501                           	opt stack 0
  4502                           tblptru	equ	0xFF8
  4503                           tblptrh	equ	0xFF7
  4504                           tblptrl	equ	0xFF6
  4505                           tablat	equ	0xFF5
  4506                           prodh	equ	0xFF4
  4507                           prodl	equ	0xFF3
  4508                           intcon	equ	0xFF2
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           postinc1	equ	0xFE6
  4512                           postdec1	equ	0xFE5
  4513                           fsr1h	equ	0xFE2
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function _command_builder3 *****************
  4522 ;; Defined at:
  4523 ;;		line 454 in file "SlaveComm_PIC18.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4526 ;;		 -> communications@send_buffer(42), 
  4527 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4528 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4529 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4530 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4531 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4532 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4533 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4534 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4535 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         8       0       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0
  4550 ;;      Totals:         8       0       0       0       0       0       0
  4551 ;;Total ram usage:        8 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    3
  4554 ;; This function calls:
  4555 ;;		_command_builder_add_char
  4556 ;;		_command_builder_add_string
  4557 ;; This function is called by:
  4558 ;;		_process_data_parameters
  4559 ;;		_com_command_setPower
  4560 ;;		_com_command_setEnergyUsed
  4561 ;;		_com_command_setVersion
  4562 ;;		_com_command_setVolts
  4563 ;;		_com_command_setAmps
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text27
  4568  001096                     __ptext27:
  4569                           	opt stack 0
  4570  001096                     _command_builder3:
  4571                           	opt stack 24
  4572                           
  4573                           ;SlaveComm_PIC18.c: 456: command_builder_add_char( send_buffer, '#' );
  4574                           
  4575                           ;incstack = 0
  4576  001096  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4577  00109A  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4578  00109E  0E23               	movlw	35
  4579  0010A0  6E15               	movwf	command_builder_add_char@data,c
  4580  0010A2  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4581                           
  4582                           ;SlaveComm_PIC18.c: 457: command_builder_add_char( send_buffer, '#' );
  4583  0010A6  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4584  0010AA  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4585  0010AE  0E23               	movlw	35
  4586  0010B0  6E15               	movwf	command_builder_add_char@data,c
  4587  0010B2  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4588                           
  4589                           ;SlaveComm_PIC18.c: 458: command_builder_add_char( send_buffer, '!' );
  4590  0010B6  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4591  0010BA  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4592  0010BE  0E21               	movlw	33
  4593  0010C0  6E15               	movwf	command_builder_add_char@data,c
  4594  0010C2  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4595                           
  4596                           ;SlaveComm_PIC18.c: 459: command_builder_add_string( send_buffer, data1 );
  4597  0010C6  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4598  0010CA  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4599  0010CE  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4600  0010D2  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4601  0010D6  EC71  F009         	call	_command_builder_add_string	;wreg free
  4602                           
  4603                           ;SlaveComm_PIC18.c: 460: command_builder_add_char( send_buffer, ';' );
  4604  0010DA  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4605  0010DE  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4606  0010E2  0E3B               	movlw	59
  4607  0010E4  6E15               	movwf	command_builder_add_char@data,c
  4608  0010E6  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4609                           
  4610                           ;SlaveComm_PIC18.c: 461: command_builder_add_string( send_buffer, data2 );
  4611  0010EA  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4612  0010EE  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4613  0010F2  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4614  0010F6  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4615  0010FA  EC71  F009         	call	_command_builder_add_string	;wreg free
  4616                           
  4617                           ;SlaveComm_PIC18.c: 462: command_builder_add_char( send_buffer, ';' );
  4618  0010FE  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4619  001102  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4620  001106  0E3B               	movlw	59
  4621  001108  6E15               	movwf	command_builder_add_char@data,c
  4622  00110A  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4623                           
  4624                           ;SlaveComm_PIC18.c: 463: command_builder_add_string( send_buffer, data3 );
  4625  00110E  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4626  001112  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4627  001116  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4628  00111A  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4629  00111E  EC71  F009         	call	_command_builder_add_string	;wreg free
  4630                           
  4631                           ;SlaveComm_PIC18.c: 464: command_builder_add_char( send_buffer, '*' );
  4632  001122  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4633  001126  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4634  00112A  0E2A               	movlw	42
  4635  00112C  6E15               	movwf	command_builder_add_char@data,c
  4636  00112E  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4637  001132  0012               	return	
  4638  001134                     __end_of_command_builder3:
  4639                           	opt stack 0
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodh	equ	0xFF4
  4645                           prodl	equ	0xFF3
  4646                           intcon	equ	0xFF2
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           postinc1	equ	0xFE6
  4650                           postdec1	equ	0xFE5
  4651                           fsr1h	equ	0xFE2
  4652                           fsr1l	equ	0xFE1
  4653                           indf2	equ	0xFDF
  4654                           postinc2	equ	0xFDE
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function _command_builder_add_string *****************
  4660 ;; Defined at:
  4661 ;;		line 499 in file "SlaveComm_PIC18.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4664 ;;		 -> communications@send_buffer(42), 
  4665 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4666 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4667 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4668 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4669 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4670 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  4671 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4672 ;;		 -> STR_10(5), STR_9(4), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  inx             2   28[COMRAM] int 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         4       0       0       0       0       0       0
  4685 ;;      Locals:         2       0       0       0       0       0       0
  4686 ;;      Temps:          2       0       0       0       0       0       0
  4687 ;;      Totals:         8       0       0       0       0       0       0
  4688 ;;Total ram usage:        8 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    2
  4691 ;; This function calls:
  4692 ;;		_command_builder_add_char
  4693 ;; This function is called by:
  4694 ;;		_command_builder1
  4695 ;;		_command_builder3
  4696 ;;		_command_builder2
  4697 ;;		_command_builder4
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text28
  4702  0012E2                     __ptext28:
  4703                           	opt stack 0
  4704  0012E2                     _command_builder_add_string:
  4705                           	opt stack 24
  4706                           
  4707                           ;SlaveComm_PIC18.c: 501: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4708                           
  4709                           ;incstack = 0
  4710  0012E2  0E00               	movlw	0
  4711  0012E4  6E1E               	movwf	command_builder_add_string@inx+1,c
  4712  0012E6  0E00               	movlw	0
  4713  0012E8  6E1D               	movwf	command_builder_add_string@inx,c
  4714  0012EA  D01F               	goto	l383
  4715  0012EC                     
  4716                           ;SlaveComm_PIC18.c: 502: {
  4717                           ;SlaveComm_PIC18.c: 503: command_builder_add_char( send_buffer, data_string[inx] );
  4718  0012EC  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4719  0012F0  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4720  0012F4  501D               	movf	command_builder_add_string@inx,w,c
  4721  0012F6  2419               	addwf	command_builder_add_string@data_string,w,c
  4722  0012F8  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4723  0012FA  501E               	movf	command_builder_add_string@inx+1,w,c
  4724  0012FC  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4725  0012FE  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4726  001300  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4727  001304  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4728  001308  6AF8               	clrf	tblptru,c
  4729  00130A  0E05               	movlw	(high __ramtop+-1)
  4730  00130C  64F7               	cpfsgt	tblptrh,c
  4731  00130E  D003               	bra	u2057
  4732  001310  0008               	tblrd		*
  4733  001312  50F5               	movf	tablat,w,c
  4734  001314  D005               	bra	u2050
  4735  001316                     u2057:
  4736  001316  CFF6 FFE1          	movff	tblptrl,fsr1l
  4737  00131A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4738  00131E  50E7               	movf	indf1,w,c
  4739  001320                     u2050:
  4740  001320  6E15               	movwf	command_builder_add_char@data,c
  4741  001322  EC71  F00A         	call	_command_builder_add_char	;wreg free
  4742  001326  4A1D               	infsnz	command_builder_add_string@inx,f,c
  4743  001328  2A1E               	incf	command_builder_add_string@inx+1,f,c
  4744  00132A                     l383:
  4745  00132A  501D               	movf	command_builder_add_string@inx,w,c
  4746  00132C  2419               	addwf	command_builder_add_string@data_string,w,c
  4747  00132E  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4748  001330  501E               	movf	command_builder_add_string@inx+1,w,c
  4749  001332  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4750  001334  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4751  001336  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4752  00133A  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4753  00133E  6AF8               	clrf	tblptru,c
  4754  001340  0E05               	movlw	(high __ramtop+-1)
  4755  001342  64F7               	cpfsgt	tblptrh,c
  4756  001344  D003               	bra	u2067
  4757  001346  0008               	tblrd		*
  4758  001348  50F5               	movf	tablat,w,c
  4759  00134A  D005               	bra	u2060
  4760  00134C                     u2067:
  4761  00134C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4762  001350  CFF7 FFE2          	movff	tblptrh,fsr1h
  4763  001354  50E7               	movf	indf1,w,c
  4764  001356                     u2060:
  4765  001356  0900               	iorlw	0
  4766  001358  B4D8               	btfsc	status,2,c
  4767  00135A  0012               	return	
  4768  00135C  D7C7               	goto	l384
  4769  00135E                     __end_of_command_builder_add_string:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           prodh	equ	0xFF4
  4776                           prodl	equ	0xFF3
  4777                           intcon	equ	0xFF2
  4778                           postinc0	equ	0xFEE
  4779                           wreg	equ	0xFE8
  4780                           indf1	equ	0xFE7
  4781                           postinc1	equ	0xFE6
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           indf2	equ	0xFDF
  4786                           postinc2	equ	0xFDE
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _command_builder_add_char *****************
  4792 ;; Defined at:
  4793 ;;		line 486 in file "SlaveComm_PIC18.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4796 ;;		 -> communications@send_buffer(42), 
  4797 ;;  data            1   20[COMRAM] unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4809 ;;      Params:         3       0       0       0       0       0       0
  4810 ;;      Locals:         0       0       0       0       0       0       0
  4811 ;;      Temps:          1       0       0       0       0       0       0
  4812 ;;      Totals:         4       0       0       0       0       0       0
  4813 ;;Total ram usage:        4 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:    1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_command_builder1
  4820 ;;		_command_builder3
  4821 ;;		_command_builder_add_string
  4822 ;;		_command_builder2
  4823 ;;		_command_builder4
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text29
  4828  0014E2                     __ptext29:
  4829                           	opt stack 0
  4830  0014E2                     _command_builder_add_char:
  4831                           	opt stack 24
  4832                           
  4833                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  4834                           
  4835                           ;incstack = 0
  4836  0014E2  EE20 F028          	lfsr	2,40
  4837  0014E6  5013               	movf	command_builder_add_char@send_buffer,w,c
  4838  0014E8  26D9               	addwf	fsr2l,f,c
  4839  0014EA  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4840  0014EC  22DA               	addwfc	fsr2h,f,c
  4841  0014EE  50DF               	movf	indf2,w,c
  4842  0014F0  6E16               	movwf	??_command_builder_add_char& (0+255),c
  4843  0014F2  5016               	movf	??_command_builder_add_char,w,c
  4844  0014F4  0D01               	mullw	1
  4845  0014F6  50F3               	movf	prodl,w,c
  4846  0014F8  2413               	addwf	command_builder_add_char@send_buffer,w,c
  4847  0014FA  6ED9               	movwf	fsr2l,c
  4848  0014FC  50F4               	movf	prodh,w,c
  4849  0014FE  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4850  001500  6EDA               	movwf	fsr2h,c
  4851  001502  C015  FFDF         	movff	command_builder_add_char@data,indf2
  4852                           
  4853                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  4854  001506  EE20 F028          	lfsr	2,40
  4855  00150A  5013               	movf	command_builder_add_char@send_buffer,w,c
  4856  00150C  26D9               	addwf	fsr2l,f,c
  4857  00150E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4858  001510  22DA               	addwfc	fsr2h,f,c
  4859  001512  2ADF               	incf	indf2,f,c
  4860                           
  4861                           ;SlaveComm_PIC18.c: 491: if( send_buffer->write_position >= 40 )
  4862  001514  EE20 F028          	lfsr	2,40
  4863  001518  5013               	movf	command_builder_add_char@send_buffer,w,c
  4864  00151A  26D9               	addwf	fsr2l,f,c
  4865  00151C  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4866  00151E  22DA               	addwfc	fsr2h,f,c
  4867  001520  0E27               	movlw	39
  4868  001522  64DF               	cpfsgt	indf2,c
  4869  001524  0012               	return	
  4870                           
  4871                           ;SlaveComm_PIC18.c: 492: {
  4872                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  4873  001526  EE20 F028          	lfsr	2,40
  4874  00152A  5013               	movf	command_builder_add_char@send_buffer,w,c
  4875  00152C  26D9               	addwf	fsr2l,f,c
  4876  00152E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4877  001530  22DA               	addwfc	fsr2h,f,c
  4878  001532  0E00               	movlw	0
  4879  001534  6EDF               	movwf	indf2,c
  4880  001536  0012               	return	
  4881  001538                     __end_of_command_builder_add_char:
  4882                           	opt stack 0
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           postinc1	equ	0xFE6
  4894                           postdec1	equ	0xFE5
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function _atol *****************
  4904 ;; Defined at:
  4905 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  s               2   30[COMRAM] PTR const unsigned char 
  4908 ;;		 -> process_data@parameters(50), 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  a               4   39[COMRAM] long 
  4911 ;;  c               1   43[COMRAM] unsigned char 
  4912 ;;  sign            1   38[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  4   30[COMRAM] long 
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4922 ;;      Params:         4       0       0       0       0       0       0
  4923 ;;      Locals:         6       0       0       0       0       0       0
  4924 ;;      Temps:          4       0       0       0       0       0       0
  4925 ;;      Totals:        14       0       0       0       0       0       0
  4926 ;;Total ram usage:       14 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    2
  4929 ;; This function calls:
  4930 ;;		___lmul
  4931 ;;		_isdigit
  4932 ;; This function is called by:
  4933 ;;		_process_data_parameters
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text30
  4938  000CA8                     __ptext30:
  4939                           	opt stack 0
  4940  000CA8                     _atol:
  4941                           	opt stack 25
  4942                           
  4943                           ;incstack = 0
  4944  000CA8  C01F  FFD9         	movff	atol@s,fsr2l
  4945  000CAC  C020  FFDA         	movff	atol@s+1,fsr2h
  4946  000CB0  50DF               	movf	indf2,w,c
  4947  000CB2  6E2C               	movwf	atol@c,c
  4948  000CB4  4A1F               	infsnz	atol@s,f,c
  4949  000CB6  2A20               	incf	atol@s+1,f,c
  4950  000CB8  0E20               	movlw	32
  4951  000CBA  182C               	xorwf	atol@c,w,c
  4952  000CBC  B4D8               	btfsc	status,2,c
  4953  000CBE  D7F4               	goto	_atol
  4954  000CC0  0E09               	movlw	9
  4955  000CC2  182C               	xorwf	atol@c,w,c
  4956  000CC4  B4D8               	btfsc	status,2,c
  4957  000CC6  D7F0               	goto	_atol
  4958  000CC8  0E00               	movlw	0
  4959  000CCA  6E28               	movwf	atol@a,c
  4960  000CCC  0E00               	movlw	0
  4961  000CCE  6E29               	movwf	atol@a+1,c
  4962  000CD0  0E00               	movlw	0
  4963  000CD2  6E2A               	movwf	atol@a+2,c
  4964  000CD4  0E00               	movlw	0
  4965  000CD6  6E2B               	movwf	atol@a+3,c
  4966  000CD8  0E00               	movlw	0
  4967  000CDA  6E27               	movwf	atol@sign,c
  4968  000CDC  0E2D               	movlw	45
  4969  000CDE  182C               	xorwf	atol@c,w,c
  4970  000CE0  A4D8               	btfss	status,2,c
  4971  000CE2  D002               	goto	l615
  4972  000CE4  2A27               	incf	atol@sign,f,c
  4973  000CE6  D027               	goto	L5
  4974  000CE8                     l615:
  4975  000CE8  0E2B               	movlw	43
  4976  000CEA  182C               	xorwf	atol@c,w,c
  4977  000CEC  A4D8               	btfss	status,2,c
  4978  000CEE  D02B               	goto	l618
  4979  000CF0  D022               	goto	L5
  4980  000CF2  C028  F013         	movff	atol@a,___lmul@multiplier
  4981  000CF6  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  4982  000CFA  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  4983  000CFE  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  4984  000D02  0E0A               	movlw	10
  4985  000D04  6E17               	movwf	___lmul@multiplicand,c
  4986  000D06  0E00               	movlw	0
  4987  000D08  6E18               	movwf	___lmul@multiplicand+1,c
  4988  000D0A  0E00               	movlw	0
  4989  000D0C  6E19               	movwf	___lmul@multiplicand+2,c
  4990  000D0E  0E00               	movlw	0
  4991  000D10  6E1A               	movwf	___lmul@multiplicand+3,c
  4992  000D12  EC9C  F00A         	call	___lmul	;wreg free
  4993  000D16  C02C  F023         	movff	atol@c,??_atol
  4994  000D1A  0ED0               	movlw	208
  4995  000D1C  2623               	addwf	??_atol,f,c
  4996  000D1E  5023               	movf	??_atol,w,c
  4997  000D20  2413               	addwf	?___lmul,w,c
  4998  000D22  6E28               	movwf	atol@a,c
  4999  000D24  0E00               	movlw	0
  5000  000D26  2014               	addwfc	?___lmul+1,w,c
  5001  000D28  6E29               	movwf	atol@a+1,c
  5002  000D2A  0E00               	movlw	0
  5003  000D2C  2015               	addwfc	?___lmul+2,w,c
  5004  000D2E  6E2A               	movwf	atol@a+2,c
  5005  000D30  0E00               	movlw	0
  5006  000D32  2016               	addwfc	?___lmul+3,w,c
  5007  000D34  6E2B               	movwf	atol@a+3,c
  5008  000D36                     L5:
  5009  000D36  C01F  FFD9         	movff	atol@s,fsr2l
  5010  000D3A  C020  FFDA         	movff	atol@s+1,fsr2h
  5011  000D3E  50DF               	movf	indf2,w,c
  5012  000D40  6E2C               	movwf	atol@c,c
  5013  000D42  4A1F               	infsnz	atol@s,f,c
  5014  000D44  2A20               	incf	atol@s+1,f,c
  5015  000D46                     l618:
  5016  000D46  502C               	movf	atol@c,w,c
  5017  000D48  ECEA  F00B         	call	_isdigit
  5018  000D4C  B0D8               	btfsc	status,0,c
  5019  000D4E  D7D1               	goto	l619
  5020  000D50  5027               	movf	atol@sign,w,c
  5021  000D52  B4D8               	btfsc	status,2,c
  5022  000D54  D01A               	goto	l621
  5023  000D56  C028  F023         	movff	atol@a,??_atol
  5024  000D5A  C029  F024         	movff	atol@a+1,??_atol+1
  5025  000D5E  C02A  F025         	movff	atol@a+2,??_atol+2
  5026  000D62  C02B  F026         	movff	atol@a+3,??_atol+3
  5027  000D66  1E23               	comf	??_atol,f,c
  5028  000D68  1E24               	comf	??_atol+1,f,c
  5029  000D6A  1E25               	comf	??_atol+2,f,c
  5030  000D6C  1E26               	comf	??_atol+3,f,c
  5031  000D6E  2A23               	incf	??_atol,f,c
  5032  000D70  0E00               	movlw	0
  5033  000D72  2224               	addwfc	??_atol+1,f,c
  5034  000D74  2225               	addwfc	??_atol+2,f,c
  5035  000D76  2226               	addwfc	??_atol+3,f,c
  5036  000D78  C023  F01F         	movff	??_atol,?_atol
  5037  000D7C  C024  F020         	movff	??_atol+1,?_atol+1
  5038  000D80  C025  F021         	movff	??_atol+2,?_atol+2
  5039  000D84  C026  F022         	movff	??_atol+3,?_atol+3
  5040  000D88  0012               	return	
  5041  000D8A                     l621:
  5042  000D8A  C028  F01F         	movff	atol@a,?_atol
  5043  000D8E  C029  F020         	movff	atol@a+1,?_atol+1
  5044  000D92  C02A  F021         	movff	atol@a+2,?_atol+2
  5045  000D96  C02B  F022         	movff	atol@a+3,?_atol+3
  5046  000D9A  0012               	return		;funcret
  5047  000D9C                     __end_of_atol:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           postinc0	equ	0xFEE
  5057                           wreg	equ	0xFE8
  5058                           indf1	equ	0xFE7
  5059                           postinc1	equ	0xFE6
  5060                           postdec1	equ	0xFE5
  5061                           fsr1h	equ	0xFE2
  5062                           fsr1l	equ	0xFE1
  5063                           indf2	equ	0xFDF
  5064                           postinc2	equ	0xFDE
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _isdigit *****************
  5070 ;; Defined at:
  5071 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  c               1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  c               1   20[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5085 ;;      Params:         0       0       0       0       0       0       0
  5086 ;;      Locals:         2       0       0       0       0       0       0
  5087 ;;      Temps:          1       0       0       0       0       0       0
  5088 ;;      Totals:         3       0       0       0       0       0       0
  5089 ;;Total ram usage:        3 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    1
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_atol
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text31
  5100  0017D4                     __ptext31:
  5101                           	opt stack 0
  5102  0017D4                     _isdigit:
  5103                           	opt stack 25
  5104                           
  5105                           ;incstack = 0
  5106                           ;isdigit@c stored from wreg
  5107  0017D4  6E15               	movwf	isdigit@c,c
  5108  0017D6  0E00               	movlw	0
  5109  0017D8  6E14               	movwf	_isdigit$2081,c
  5110  0017DA  0E3A               	movlw	58
  5111  0017DC  6015               	cpfslt	isdigit@c,c
  5112  0017DE  D005               	goto	l793
  5113  0017E0  0E2F               	movlw	47
  5114  0017E2  6415               	cpfsgt	isdigit@c,c
  5115  0017E4  D002               	goto	l793
  5116  0017E6  0E01               	movlw	1
  5117  0017E8  6E14               	movwf	_isdigit$2081,c
  5118  0017EA                     l793:
  5119  0017EA  C014  F013         	movff	_isdigit$2081,??_isdigit
  5120  0017EE  3013               	rrcf	??_isdigit,w,c
  5121  0017F0  0012               	return	
  5122  0017F2                     __end_of_isdigit:
  5123                           	opt stack 0
  5124                           tblptru	equ	0xFF8
  5125                           tblptrh	equ	0xFF7
  5126                           tblptrl	equ	0xFF6
  5127                           tablat	equ	0xFF5
  5128                           prodh	equ	0xFF4
  5129                           prodl	equ	0xFF3
  5130                           intcon	equ	0xFF2
  5131                           postinc0	equ	0xFEE
  5132                           wreg	equ	0xFE8
  5133                           indf1	equ	0xFE7
  5134                           postinc1	equ	0xFE6
  5135                           postdec1	equ	0xFE5
  5136                           fsr1h	equ	0xFE2
  5137                           fsr1l	equ	0xFE1
  5138                           indf2	equ	0xFDF
  5139                           postinc2	equ	0xFDE
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function ___lmul *****************
  5145 ;; Defined at:
  5146 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  multiplier      4   18[COMRAM] unsigned long 
  5149 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  product         4   26[COMRAM] unsigned long 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4   18[COMRAM] unsigned long 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5161 ;;      Params:         8       0       0       0       0       0       0
  5162 ;;      Locals:         4       0       0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0
  5164 ;;      Totals:        12       0       0       0       0       0       0
  5165 ;;Total ram usage:       12 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_powerPulseCheck
  5172 ;;		_atol
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text32
  5177  001538                     __ptext32:
  5178                           	opt stack 0
  5179  001538                     ___lmul:
  5180                           	opt stack 28
  5181                           
  5182                           ;incstack = 0
  5183  001538  0E00               	movlw	0
  5184  00153A  6E1B               	movwf	___lmul@product,c
  5185  00153C  0E00               	movlw	0
  5186  00153E  6E1C               	movwf	___lmul@product+1,c
  5187  001540  0E00               	movlw	0
  5188  001542  6E1D               	movwf	___lmul@product+2,c
  5189  001544  0E00               	movlw	0
  5190  001546  6E1E               	movwf	___lmul@product+3,c
  5191  001548  A013               	btfss	___lmul@multiplier,0,c
  5192  00154A  D008               	goto	l462
  5193  00154C  5017               	movf	___lmul@multiplicand,w,c
  5194  00154E  261B               	addwf	___lmul@product,f,c
  5195  001550  5018               	movf	___lmul@multiplicand+1,w,c
  5196  001552  221C               	addwfc	___lmul@product+1,f,c
  5197  001554  5019               	movf	___lmul@multiplicand+2,w,c
  5198  001556  221D               	addwfc	___lmul@product+2,f,c
  5199  001558  501A               	movf	___lmul@multiplicand+3,w,c
  5200  00155A  221E               	addwfc	___lmul@product+3,f,c
  5201  00155C                     l462:
  5202  00155C  90D8               	bcf	status,0,c
  5203  00155E  3617               	rlcf	___lmul@multiplicand,f,c
  5204  001560  3618               	rlcf	___lmul@multiplicand+1,f,c
  5205  001562  3619               	rlcf	___lmul@multiplicand+2,f,c
  5206  001564  361A               	rlcf	___lmul@multiplicand+3,f,c
  5207  001566  90D8               	bcf	status,0,c
  5208  001568  3216               	rrcf	___lmul@multiplier+3,f,c
  5209  00156A  3215               	rrcf	___lmul@multiplier+2,f,c
  5210  00156C  3214               	rrcf	___lmul@multiplier+1,f,c
  5211  00156E  3213               	rrcf	___lmul@multiplier,f,c
  5212  001570  5013               	movf	___lmul@multiplier,w,c
  5213  001572  1014               	iorwf	___lmul@multiplier+1,w,c
  5214  001574  1015               	iorwf	___lmul@multiplier+2,w,c
  5215  001576  1016               	iorwf	___lmul@multiplier+3,w,c
  5216  001578  A4D8               	btfss	status,2,c
  5217  00157A  D7E6               	goto	l461
  5218  00157C  C01B  F013         	movff	___lmul@product,?___lmul
  5219  001580  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5220  001584  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5221  001588  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5222  00158C  0012               	return		;funcret
  5223  00158E                     __end_of___lmul:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           indf1	equ	0xFE7
  5235                           postinc1	equ	0xFE6
  5236                           postdec1	equ	0xFE5
  5237                           fsr1h	equ	0xFE2
  5238                           fsr1l	equ	0xFE1
  5239                           indf2	equ	0xFDF
  5240                           postinc2	equ	0xFDE
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function _process_data_parameterize *****************
  5246 ;; Defined at:
  5247 ;;		line 280 in file "SlaveComm_PIC18.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5250 ;;		 -> process_data@parameters(50), 
  5251 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5252 ;;		 -> communications@receive_buffer(42), 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  inx             2   31[COMRAM] int 
  5255 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5256 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5266 ;;      Params:         4       0       0       0       0       0       0
  5267 ;;      Locals:         4       0       0       0       0       0       0
  5268 ;;      Temps:          3       0       0       0       0       0       0
  5269 ;;      Totals:        11       0       0       0       0       0       0
  5270 ;;Total ram usage:       11 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    2
  5273 ;; This function calls:
  5274 ;;		___wmul
  5275 ;; This function is called by:
  5276 ;;		_process_data
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text33
  5281  000906                     __ptext33:
  5282                           	opt stack 0
  5283  000906                     _process_data_parameterize:
  5284                           	opt stack 26
  5285                           
  5286                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5287                           
  5288                           ;incstack = 0
  5289  000906  0E00               	movlw	0
  5290  000908  6E23               	movwf	process_data_parameterize@parameter_position,c
  5291                           
  5292                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5293  00090A  0E00               	movlw	0
  5294  00090C  6E22               	movwf	process_data_parameterize@parameter_index,c
  5295                           
  5296                           ;SlaveComm_PIC18.c: 292: for( int inx = 0; inx < 5; inx++ )
  5297  00090E  0E00               	movlw	0
  5298  000910  6E21               	movwf	process_data_parameterize@inx+1,c
  5299  000912  0E00               	movlw	0
  5300  000914  6E20               	movwf	process_data_parameterize@inx,c
  5301  000916  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5302  000918  D008               	goto	l320
  5303  00091A  5021               	movf	process_data_parameterize@inx+1,w,c
  5304  00091C  E105               	bnz	u2390
  5305  00091E  0E05               	movlw	5
  5306  000920  5C20               	subwf	process_data_parameterize@inx,w,c
  5307  000922  B0D8               	btfsc	status,0,c
  5308  000924  D082               	goto	l322
  5309  000926  D001               	goto	l320
  5310  000928                     u2390:
  5311  000928  D080               	goto	l322
  5312  00092A                     l320:
  5313                           
  5314                           ;SlaveComm_PIC18.c: 293: {
  5315                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5316  00092A  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5317  00092E  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5318  000932  0E00               	movlw	0
  5319  000934  6E16               	movwf	___wmul@multiplicand+1,c
  5320  000936  0E0A               	movlw	10
  5321  000938  6E15               	movwf	___wmul@multiplicand,c
  5322  00093A  ECA5  F00B         	call	___wmul	;wreg free
  5323  00093E  5013               	movf	?___wmul,w,c
  5324  000940  2419               	addwf	process_data_parameterize@parameters,w,c
  5325  000942  6ED9               	movwf	fsr2l,c
  5326  000944  5014               	movf	?___wmul+1,w,c
  5327  000946  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5328  000948  6EDA               	movwf	fsr2h,c
  5329  00094A  0E00               	movlw	0
  5330  00094C  6EDF               	movwf	indf2,c
  5331  00094E  4A20               	infsnz	process_data_parameterize@inx,f,c
  5332  000950  2A21               	incf	process_data_parameterize@inx+1,f,c
  5333  000952  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5334  000954  D7EA               	goto	l320
  5335  000956  5021               	movf	process_data_parameterize@inx+1,w,c
  5336  000958  E168               	bnz	l2912
  5337  00095A  D7E1               	goto	L3
  5338  00095C                     
  5339                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5340  00095C  0E00               	movlw	0
  5341  00095E  6E23               	movwf	process_data_parameterize@parameter_position,c
  5342                           
  5343                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5344  000960  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5345                           
  5346                           ;SlaveComm_PIC18.c: 309: if( parameter_index >= 5 )
  5347  000962  0E04               	movlw	4
  5348  000964  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5349  000966  D05A               	goto	l326
  5350                           
  5351                           ;SlaveComm_PIC18.c: 310: {
  5352                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5353  000968  0E04               	movlw	4
  5354  00096A  6E22               	movwf	process_data_parameterize@parameter_index,c
  5355                           
  5356                           ;SlaveComm_PIC18.c: 314: }
  5357                           ;SlaveComm_PIC18.c: 316: break;
  5358  00096C  D057               	goto	l326
  5359  00096E                     
  5360                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5361  00096E  EE20 F029          	lfsr	2,41
  5362  000972  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5363  000974  26D9               	addwf	fsr2l,f,c
  5364  000976  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5365  000978  22DA               	addwfc	fsr2h,f,c
  5366  00097A  50DF               	movf	indf2,w,c
  5367  00097C  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5368  00097E  501D               	movf	??_process_data_parameterize,w,c
  5369  000980  0D01               	mullw	1
  5370  000982  50F3               	movf	prodl,w,c
  5371  000984  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5372  000986  6ED9               	movwf	fsr2l,c
  5373  000988  50F4               	movf	prodh,w,c
  5374  00098A  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5375  00098C  6EDA               	movwf	fsr2h,c
  5376  00098E  5022               	movf	process_data_parameterize@parameter_index,w,c
  5377  000990  0D0A               	mullw	10
  5378  000992  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5379  000996  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5380  00099A  50F3               	movf	prodl,w,c
  5381  00099C  261E               	addwf	??_process_data_parameterize+1,f,c
  5382  00099E  50F4               	movf	prodh,w,c
  5383  0009A0  221F               	addwfc	??_process_data_parameterize+2,f,c
  5384  0009A2  5023               	movf	process_data_parameterize@parameter_position,w,c
  5385  0009A4  0D01               	mullw	1
  5386  0009A6  50F3               	movf	prodl,w,c
  5387  0009A8  241E               	addwf	??_process_data_parameterize+1,w,c
  5388  0009AA  6EE1               	movwf	fsr1l,c
  5389  0009AC  50F4               	movf	prodh,w,c
  5390  0009AE  201F               	addwfc	??_process_data_parameterize+2,w,c
  5391  0009B0  6EE2               	movwf	fsr1h,c
  5392  0009B2  CFDF FFE7          	movff	indf2,indf1
  5393                           
  5394                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5395  0009B6  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5396                           
  5397                           ;SlaveComm_PIC18.c: 321: if( parameter_position >= 10 )
  5398  0009B8  0E09               	movlw	9
  5399  0009BA  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5400  0009BC  D002               	goto	l330
  5401                           
  5402                           ;SlaveComm_PIC18.c: 322: {
  5403                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5404  0009BE  0E09               	movlw	9
  5405  0009C0  6E23               	movwf	process_data_parameterize@parameter_position,c
  5406  0009C2                     l330:
  5407                           
  5408                           ;SlaveComm_PIC18.c: 326: }
  5409                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5410  0009C2  5022               	movf	process_data_parameterize@parameter_index,w,c
  5411  0009C4  0D0A               	mullw	10
  5412  0009C6  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5413  0009CA  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5414  0009CE  50F3               	movf	prodl,w,c
  5415  0009D0  261D               	addwf	??_process_data_parameterize,f,c
  5416  0009D2  50F4               	movf	prodh,w,c
  5417  0009D4  221E               	addwfc	??_process_data_parameterize+1,f,c
  5418  0009D6  5023               	movf	process_data_parameterize@parameter_position,w,c
  5419  0009D8  0D01               	mullw	1
  5420  0009DA  50F3               	movf	prodl,w,c
  5421  0009DC  241D               	addwf	??_process_data_parameterize,w,c
  5422  0009DE  6ED9               	movwf	fsr2l,c
  5423  0009E0  50F4               	movf	prodh,w,c
  5424  0009E2  201E               	addwfc	??_process_data_parameterize+1,w,c
  5425  0009E4  6EDA               	movwf	fsr2h,c
  5426  0009E6  0E00               	movlw	0
  5427  0009E8  6EDF               	movwf	indf2,c
  5428                           
  5429                           ;SlaveComm_PIC18.c: 331: }
  5430                           
  5431                           ;SlaveComm_PIC18.c: 330: break;
  5432  0009EA  D018               	goto	l326
  5433  0009EC  EE20 F029          	lfsr	2,41
  5434  0009F0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5435  0009F2  26D9               	addwf	fsr2l,f,c
  5436  0009F4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5437  0009F6  22DA               	addwfc	fsr2h,f,c
  5438  0009F8  50DF               	movf	indf2,w,c
  5439  0009FA  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5440  0009FC  501D               	movf	??_process_data_parameterize,w,c
  5441  0009FE  0D01               	mullw	1
  5442  000A00  50F3               	movf	prodl,w,c
  5443  000A02  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5444  000A04  6ED9               	movwf	fsr2l,c
  5445  000A06  50F4               	movf	prodh,w,c
  5446  000A08  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5447  000A0A  6EDA               	movwf	fsr2h,c
  5448  000A0C  50DF               	movf	indf2,w,c
  5449                           
  5450                           ; Switch size 1, requested type "space"
  5451                           ; Number of cases is 2, Range of values is 33 to 59
  5452                           ; switch strategies available:
  5453                           ; Name         Instructions Cycles
  5454                           ; simple_byte            7     4 (average)
  5455                           ;	Chosen strategy is simple_byte
  5456  000A0E  0A21               	xorlw	33	; case 33
  5457  000A10  B4D8               	btfsc	status,2,c
  5458  000A12  D004               	goto	l326
  5459  000A14  0A1A               	xorlw	26	; case 59
  5460  000A16  B4D8               	btfsc	status,2,c
  5461  000A18  D7A1               	goto	l327
  5462  000A1A  D7A9               	goto	l329
  5463  000A1C                     l326:
  5464                           
  5465                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5466  000A1C  EE20 F029          	lfsr	2,41
  5467  000A20  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5468  000A22  26D9               	addwf	fsr2l,f,c
  5469  000A24  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5470  000A26  22DA               	addwfc	fsr2h,f,c
  5471  000A28  2ADF               	incf	indf2,f,c
  5472  000A2A                     l322:
  5473  000A2A                     l2912:
  5474  000A2A  EE20 F029          	lfsr	2,41
  5475  000A2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5476  000A30  26D9               	addwf	fsr2l,f,c
  5477  000A32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5478  000A34  22DA               	addwfc	fsr2h,f,c
  5479  000A36  50DF               	movf	indf2,w,c
  5480  000A38  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5481  000A3A  501D               	movf	??_process_data_parameterize,w,c
  5482  000A3C  0D01               	mullw	1
  5483  000A3E  50F3               	movf	prodl,w,c
  5484  000A40  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5485  000A42  6ED9               	movwf	fsr2l,c
  5486  000A44  50F4               	movf	prodh,w,c
  5487  000A46  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5488  000A48  6EDA               	movwf	fsr2h,c
  5489  000A4A  0E2A               	movlw	42
  5490  000A4C  18DE               	xorwf	postinc2,w,c
  5491  000A4E  B4D8               	btfsc	status,2,c
  5492  000A50  0012               	return	
  5493  000A52  EE20 F029          	lfsr	2,41
  5494  000A56  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5495  000A58  26D9               	addwf	fsr2l,f,c
  5496  000A5A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5497  000A5C  22DA               	addwfc	fsr2h,f,c
  5498  000A5E  0E28               	movlw	40
  5499  000A60  60DF               	cpfslt	indf2,c
  5500  000A62  0012               	return	
  5501  000A64  EE20 F028          	lfsr	2,40
  5502  000A68  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5503  000A6A  26D9               	addwf	fsr2l,f,c
  5504  000A6C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5505  000A6E  22DA               	addwfc	fsr2h,f,c
  5506  000A70  EE10 F029          	lfsr	1,41
  5507  000A74  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5508  000A76  26E1               	addwf	fsr1l,f,c
  5509  000A78  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5510  000A7A  22E2               	addwfc	fsr1h,f,c
  5511  000A7C  50DE               	movf	postinc2,w,c
  5512  000A7E  18E6               	xorwf	postinc1,w,c
  5513  000A80  B4D8               	btfsc	status,2,c
  5514  000A82  0012               	return	
  5515  000A84  D7B3               	goto	l324
  5516  000A86                     __end_of_process_data_parameterize:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           intcon	equ	0xFF2
  5525                           postinc0	equ	0xFEE
  5526                           wreg	equ	0xFE8
  5527                           indf1	equ	0xFE7
  5528                           postinc1	equ	0xFE6
  5529                           postdec1	equ	0xFE5
  5530                           fsr1h	equ	0xFE2
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           postinc2	equ	0xFDE
  5534                           fsr2h	equ	0xFDA
  5535                           fsr2l	equ	0xFD9
  5536                           status	equ	0xFD8
  5537                           
  5538 ;; *************** function ___wmul *****************
  5539 ;; Defined at:
  5540 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  multiplier      2   18[COMRAM] unsigned int 
  5543 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  product         2   22[COMRAM] unsigned int 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  2   18[COMRAM] unsigned int 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, prodl, prodh
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5555 ;;      Params:         4       0       0       0       0       0       0
  5556 ;;      Locals:         2       0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0
  5558 ;;      Totals:         6       0       0       0       0       0       0
  5559 ;;Total ram usage:        6 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    1
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_process_data_parameterize
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text34
  5570  00174A                     __ptext34:
  5571                           	opt stack 0
  5572  00174A                     ___wmul:
  5573                           	opt stack 26
  5574                           
  5575                           ;incstack = 0
  5576  00174A  5013               	movf	___wmul@multiplier,w,c
  5577  00174C  0215               	mulwf	___wmul@multiplicand,c
  5578  00174E  CFF3 F017          	movff	prodl,___wmul@product
  5579  001752  CFF4 F018          	movff	prodh,___wmul@product+1
  5580  001756  5013               	movf	___wmul@multiplier,w,c
  5581  001758  0216               	mulwf	___wmul@multiplicand+1,c
  5582  00175A  50F3               	movf	prodl,w,c
  5583  00175C  2618               	addwf	___wmul@product+1,f,c
  5584  00175E  5014               	movf	___wmul@multiplier+1,w,c
  5585  001760  0215               	mulwf	___wmul@multiplicand,c
  5586  001762  50F3               	movf	prodl,w,c
  5587  001764  2618               	addwf	___wmul@product+1,f,c
  5588  001766  C017  F013         	movff	___wmul@product,?___wmul
  5589  00176A  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5590  00176E  0012               	return	
  5591  001770                     __end_of___wmul:
  5592                           	opt stack 0
  5593                           tblptru	equ	0xFF8
  5594                           tblptrh	equ	0xFF7
  5595                           tblptrl	equ	0xFF6
  5596                           tablat	equ	0xFF5
  5597                           prodh	equ	0xFF4
  5598                           prodl	equ	0xFF3
  5599                           intcon	equ	0xFF2
  5600                           postinc0	equ	0xFEE
  5601                           wreg	equ	0xFE8
  5602                           indf1	equ	0xFE7
  5603                           postinc1	equ	0xFE6
  5604                           postdec1	equ	0xFE5
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           fsr2h	equ	0xFDA
  5610                           fsr2l	equ	0xFD9
  5611                           status	equ	0xFD8
  5612                           
  5613 ;; *************** function _SPISlaveInit *****************
  5614 ;; Defined at:
  5615 ;;		line 706 in file "SlaveComm_PIC18.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5629 ;;      Params:         0       0       0       0       0       0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_communications
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text35
  5644  001622                     __ptext35:
  5645                           	opt stack 0
  5646  001622                     _SPISlaveInit:
  5647                           	opt stack 28
  5648                           
  5649                           ;SlaveComm_PIC18.c: 709: TRISAbits.TRISA0 = 0;
  5650                           
  5651                           ;incstack = 0
  5652  001622  9092               	bcf	3986,0,c	;volatile
  5653                           
  5654                           ;SlaveComm_PIC18.c: 710: TRISAbits.TRISA1 = 1;
  5655  001624  8292               	bsf	3986,1,c	;volatile
  5656                           
  5657                           ;SlaveComm_PIC18.c: 712: TRISCbits.TRISC3 = 0;
  5658  001626  9694               	bcf	3988,3,c	;volatile
  5659                           
  5660                           ;SlaveComm_PIC18.c: 713: TRISCbits.TRISC5 = 0;
  5661  001628  9A94               	bcf	3988,5,c	;volatile
  5662                           
  5663                           ;SlaveComm_PIC18.c: 714: TRISCbits.TRISC6 = 0;
  5664  00162A  9C94               	bcf	3988,6,c	;volatile
  5665                           
  5666                           ;SlaveComm_PIC18.c: 715: TRISCbits.TRISC7 = 0;
  5667  00162C  9E94               	bcf	3988,7,c	;volatile
  5668                           
  5669                           ;SlaveComm_PIC18.c: 716: ANSELAbits.ANSA1 = 0b0;
  5670  00162E  010F               	movlb	15	; () banked
  5671  001630  9338               	bcf	56,1,b	;volatile
  5672                           
  5673                           ;SlaveComm_PIC18.c: 718: LATCbits.LATC6 = 1;
  5674  001632  8C8B               	bsf	3979,6,c	;volatile
  5675                           
  5676                           ;SlaveComm_PIC18.c: 719: LATCbits.LATC3 = 1;
  5677  001634  868B               	bsf	3979,3,c	;volatile
  5678                           
  5679                           ;SlaveComm_PIC18.c: 720: LATCbits.LATC5 = 1;
  5680  001636  8A8B               	bsf	3979,5,c	;volatile
  5681                           
  5682                           ;SlaveComm_PIC18.c: 721: LATCbits.LATC7 = 1;
  5683  001638  8E8B               	bsf	3979,7,c	;volatile
  5684                           
  5685                           ;SlaveComm_PIC18.c: 724: SSP2CON1bits.SSPEN = 0;
  5686  00163A  9A6C               	bcf	3948,5,c	;volatile
  5687                           
  5688                           ;SlaveComm_PIC18.c: 726: ANSELBbits.ANSB0 = 0b0;
  5689  00163C  9139               	bcf	57,0,b	;volatile
  5690                           
  5691                           ;SlaveComm_PIC18.c: 727: ANSELBbits.ANSB1 = 0b0;
  5692  00163E  9339               	bcf	57,1,b	;volatile
  5693                           
  5694                           ;SlaveComm_PIC18.c: 728: ANSELBbits.ANSB2 = 0b0;
  5695  001640  9539               	bcf	57,2,b	;volatile
  5696                           
  5697                           ;SlaveComm_PIC18.c: 729: ANSELBbits.ANSB3 = 0b0;
  5698  001642  9739               	bcf	57,3,b	;volatile
  5699                           
  5700                           ;SlaveComm_PIC18.c: 731: TRISBbits.RB0 = 0b1;
  5701  001644  8093               	bsf	3987,0,c	;volatile
  5702                           
  5703                           ;SlaveComm_PIC18.c: 732: TRISBbits.RB1 = 0b1;
  5704  001646  8293               	bsf	3987,1,c	;volatile
  5705                           
  5706                           ;SlaveComm_PIC18.c: 733: TRISBbits.RB2 = 0b1;
  5707  001648  8493               	bsf	3987,2,c	;volatile
  5708                           
  5709                           ;SlaveComm_PIC18.c: 734: TRISBbits.RB3 = 0b0;
  5710  00164A  9693               	bcf	3987,3,c	;volatile
  5711                           
  5712                           ;SlaveComm_PIC18.c: 736: SSP2STATbits.SMP = 0;
  5713  00164C  9E6D               	bcf	3949,7,c	;volatile
  5714                           
  5715                           ;SlaveComm_PIC18.c: 737: SSP2STATbits.CKE = 1;
  5716  00164E  8C6D               	bsf	3949,6,c	;volatile
  5717                           
  5718                           ;SlaveComm_PIC18.c: 739: SSP2CON1bits.WCOL = 0;
  5719  001650  9E6C               	bcf	3948,7,c	;volatile
  5720                           
  5721                           ;SlaveComm_PIC18.c: 740: SSP2CON1bits.SSPOV = 0;
  5722  001652  9C6C               	bcf	3948,6,c	;volatile
  5723                           
  5724                           ;SlaveComm_PIC18.c: 741: SSP2CON1bits.SSPEN = 0;
  5725  001654  9A6C               	bcf	3948,5,c	;volatile
  5726                           
  5727                           ;SlaveComm_PIC18.c: 742: SSP2CON1bits.CKP = 1;
  5728  001656  886C               	bsf	3948,4,c	;volatile
  5729                           
  5730                           ; BSR set to: 15
  5731                           ;SlaveComm_PIC18.c: 743: SSP2CON1bits.SSPM = 0b0100;
  5732  001658  506C               	movf	3948,w,c	;volatile
  5733  00165A  0BF0               	andlw	-16
  5734  00165C  0904               	iorlw	4
  5735  00165E  6E6C               	movwf	3948,c	;volatile
  5736                           
  5737                           ;SlaveComm_PIC18.c: 746: SSP2CON3 = 0x00;
  5738  001660  0E00               	movlw	0
  5739  001662  6E69               	movwf	3945,c	;volatile
  5740                           
  5741                           ; BSR set to: 15
  5742                           ;SlaveComm_PIC18.c: 747: SSP2CON3bits.BOEN = 0b0;
  5743  001664  9869               	bcf	3945,4,c	;volatile
  5744                           
  5745                           ; BSR set to: 15
  5746                           ;SlaveComm_PIC18.c: 749: SSP2CON1bits.SSPEN = 1;
  5747  001666  8A6C               	bsf	3948,5,c	;volatile
  5748  001668  0012               	return	
  5749  00166A                     __end_of_SPISlaveInit:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           indf1	equ	0xFE7
  5761                           postinc1	equ	0xFE6
  5762                           postdec1	equ	0xFE5
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           indf2	equ	0xFDF
  5766                           postinc2	equ	0xFDE
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _Timer0_ISR *****************
  5772 ;; Defined at:
  5773 ;;		line 403 in file "Current_Sense_Main.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5787 ;;      Params:         0       0       0       0       0       0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0
  5789 ;;      Temps:         18       0       0       0       0       0       0
  5790 ;;      Totals:        18       0       0       0       0       0       0
  5791 ;;Total ram usage:       18 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		Interrupt level 2
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	intcode
  5801  000008                     __pintcode:
  5802                           	opt stack 0
  5803  000008                     _Timer0_ISR:
  5804                           	opt stack 23
  5805                           
  5806                           ; BSR set to: 15
  5807                           ;incstack = 0
  5808  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5809  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5810  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5811  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5812  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5813  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5814  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5815  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5816  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5817  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5818  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5819  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5820  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5821  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5822  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5823  000042  C04C  F00F         	movff	btemp,??_Timer0_ISR+14
  5824  000046  C04D  F010         	movff	btemp+1,??_Timer0_ISR+15
  5825  00004A  C04E  F011         	movff	btemp+2,??_Timer0_ISR+16
  5826  00004E  C04F  F012         	movff	btemp+3,??_Timer0_ISR+17
  5827                           
  5828                           ;Current_Sense_Main.c: 406: INTCONbits.TMR0IF = 0;
  5829  000052  94F2               	bcf	intcon,2,c	;volatile
  5830                           
  5831                           ;Current_Sense_Main.c: 408: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5832  000054  0EFC               	movlw	252
  5833  000056  6ED7               	movwf	4055,c	;volatile
  5834                           
  5835                           ;Current_Sense_Main.c: 409: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5836  000058  0E18               	movlw	24
  5837  00005A  6ED6               	movwf	4054,c	;volatile
  5838                           
  5839                           ;Current_Sense_Main.c: 411: timerCountHF++;
  5840  00005C  0E01               	movlw	1
  5841  00005E  2647               	addwf	_timerCountHF,f,c	;volatile
  5842  000060  0E00               	movlw	0
  5843  000062  2248               	addwfc	_timerCountHF+1,f,c	;volatile
  5844  000064  2249               	addwfc	_timerCountHF+2,f,c	;volatile
  5845  000066  224A               	addwfc	_timerCountHF+3,f,c	;volatile
  5846                           
  5847                           ;Current_Sense_Main.c: 412: timerCountLF++;
  5848  000068  0E01               	movlw	1
  5849  00006A  2638               	addwf	_timerCountLF,f,c	;volatile
  5850  00006C  0E00               	movlw	0
  5851  00006E  2239               	addwfc	_timerCountLF+1,f,c	;volatile
  5852  000070  223A               	addwfc	_timerCountLF+2,f,c	;volatile
  5853  000072  223B               	addwfc	_timerCountLF+3,f,c	;volatile
  5854                           
  5855                           ;Current_Sense_Main.c: 414: return;
  5856  000074  C012  F04F         	movff	??_Timer0_ISR+17,btemp+3
  5857  000078  C011  F04E         	movff	??_Timer0_ISR+16,btemp+2
  5858  00007C  C010  F04D         	movff	??_Timer0_ISR+15,btemp+1
  5859  000080  C00F  F04C         	movff	??_Timer0_ISR+14,btemp
  5860  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5861  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5862  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5863  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5864  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5865  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5866  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5867  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5868  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5869  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5870  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5871  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5872  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5873  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5874  0000BC  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5875  0000BE  0011               	retfie		f
  5876  0000C0                     __end_of_Timer0_ISR:
  5877                           	opt stack 0
  5878                           pclatu	equ	0xFFB
  5879                           pclath	equ	0xFFA
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           prodh	equ	0xFF4
  5885                           prodl	equ	0xFF3
  5886                           intcon	equ	0xFF2
  5887                           postinc0	equ	0xFEE
  5888                           fsr0h	equ	0xFEA
  5889                           fsr0l	equ	0xFE9
  5890                           wreg	equ	0xFE8
  5891                           indf1	equ	0xFE7
  5892                           postinc1	equ	0xFE6
  5893                           postdec1	equ	0xFE5
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           pclatu	equ	0xFFB
  5902                           pclath	equ	0xFFA
  5903                           tblptru	equ	0xFF8
  5904                           tblptrh	equ	0xFF7
  5905                           tblptrl	equ	0xFF6
  5906                           tablat	equ	0xFF5
  5907                           prodh	equ	0xFF4
  5908                           prodl	equ	0xFF3
  5909                           intcon	equ	0xFF2
  5910                           postinc0	equ	0xFEE
  5911                           fsr0h	equ	0xFEA
  5912                           fsr0l	equ	0xFE9
  5913                           wreg	equ	0xFE8
  5914                           indf1	equ	0xFE7
  5915                           postinc1	equ	0xFE6
  5916                           postdec1	equ	0xFE5
  5917                           fsr1h	equ	0xFE2
  5918                           fsr1l	equ	0xFE1
  5919                           indf2	equ	0xFDF
  5920                           postinc2	equ	0xFDE
  5921                           fsr2h	equ	0xFDA
  5922                           fsr2l	equ	0xFD9
  5923                           status	equ	0xFD8
  5924                           
  5925                           	psect	rparam
  5926  0000                     pclatu	equ	0xFFB
  5927                           pclath	equ	0xFFA
  5928                           tblptru	equ	0xFF8
  5929                           tblptrh	equ	0xFF7
  5930                           tblptrl	equ	0xFF6
  5931                           tablat	equ	0xFF5
  5932                           prodh	equ	0xFF4
  5933                           prodl	equ	0xFF3
  5934                           intcon	equ	0xFF2
  5935                           postinc0	equ	0xFEE
  5936                           fsr0h	equ	0xFEA
  5937                           fsr0l	equ	0xFE9
  5938                           wreg	equ	0xFE8
  5939                           indf1	equ	0xFE7
  5940                           postinc1	equ	0xFE6
  5941                           postdec1	equ	0xFE5
  5942                           fsr1h	equ	0xFE2
  5943                           fsr1l	equ	0xFE1
  5944                           indf2	equ	0xFDF
  5945                           postinc2	equ	0xFDE
  5946                           fsr2h	equ	0xFDA
  5947                           fsr2l	equ	0xFD9
  5948                           status	equ	0xFD8
  5949                           
  5950                           	psect	temp
  5951  00004C                     btemp:
  5952                           	opt stack 0
  5953  00004C                     	ds	1
  5954  0000                     int$flags	set	btemp
  5955  0000                     wtemp6	set	btemp+1
  5956                           pclatu	equ	0xFFB
  5957                           pclath	equ	0xFFA
  5958                           tblptru	equ	0xFF8
  5959                           tblptrh	equ	0xFF7
  5960                           tblptrl	equ	0xFF6
  5961                           tablat	equ	0xFF5
  5962                           prodh	equ	0xFF4
  5963                           prodl	equ	0xFF3
  5964                           intcon	equ	0xFF2
  5965                           postinc0	equ	0xFEE
  5966                           fsr0h	equ	0xFEA
  5967                           fsr0l	equ	0xFE9
  5968                           wreg	equ	0xFE8
  5969                           indf1	equ	0xFE7
  5970                           postinc1	equ	0xFE6
  5971                           postdec1	equ	0xFE5
  5972                           fsr1h	equ	0xFE2
  5973                           fsr1l	equ	0xFE1
  5974                           indf2	equ	0xFDF
  5975                           postinc2	equ	0xFDE
  5976                           fsr2h	equ	0xFDA
  5977                           fsr2l	equ	0xFD9
  5978                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      75
    BANK0           160     19     123
    BANK1           256     51      51
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   99533
                                             14 BANK0      5     5      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleBlue
 ---------------------------------------------------------------------------------
 (1) _toggleBlue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    2210
                            ___awmod
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     613
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     158
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   97094
                                             12 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46583
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   16266
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     629
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             51 COMRAM     4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47746
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   16356
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2560
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initOSC
   _initTimer
   _powerPulseCheck
     ___awmod
     ___lldiv
     ___lmul
   _toggleBlue

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      33       6       19.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      7B       4       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4B       1       79.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9       9        0.0%
DATA                 0      0      F9      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 11 22:40:07 2019

                                       _SPISlaveInit 1622                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l120 178E                                                  l115 1780  
                                                l107 0F62                                                  l300 1192  
                                                l108 0FB4                                                  l301 119E  
                                                l109 0FE8                                                  l310 0ECC  
                                                l134 0DC2                                                  l135 0DF4  
                                                l119 1784                                                  l320 092A  
                                                l400 0A98                                                  l312 0F26  
                                                l136 0E44                                                  l401 0ACC  
                                                l313 0F38                                                  l322 0A2A  
                                                l330 09C2                                                  l138 0E22  
                                                l411 0BA8                                                  l403 0AFE  
                                                l307 0E88                                                  l139 0E24  
                                                l324 09EC                                                  l420 17CC  
                                                l165 0E4A                                                  l326 0A1C  
                                                l174 1686                                                  l327 095C  
                                                l415 171C                                                  l175 1674  
                                                l416 1720                                                  l280 1050  
                                                l329 096E                                                  l409 0B70  
                                                l361 08D8                                                  l353 0828  
                                                l337 0684                                                  l346 07E2  
                                                l290 1090                                                  l282 1064  
                                                l363 0902                                                  l355 0854  
                                                l339 0708                                                  l348 079E  
                                                l284 1030                                                  l461 1548  
                                                l621 0D8A                                                  l357 0880  
                                                l462 155C                                                  l278 1020  
                                                l615 0CE8                                                  l383 132A  
                                                l359 08AC                                                  l384 12EC  
                                                l296 11AA                                                  l392 125C  
                                                l288 107E                                                  l297 1176  
                                                l618 0D46                                                  l619 0CF2  
                                                l299 1184                                                  l651 13AC  
                                                l820 1282                                                  l652 13B6  
                                                l644 1372                                                  l389 11FC  
                                                l653 13C4                                                  l645 137E  
                                                l830 13E0                                                  l823 12C2  
                                                l399 0B02                                                  l647 1394  
                                                l824 12D0                                                  l648 138C  
                                                l833 1414                                                  l834 1422  
                                                l819 128E                                                  l829 13EC  
                                                l872 0BC2                                                  l793 17EA  
                                                l874 0C1A                                                  l875 0C84  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                       ___awmod@sign 0018                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                                               l3306 0E4A                                                 l3250 0DF4  
                                               l2912 0A2A                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2120 13F0  
                                               u2050 1320                                                 u2060 1356  
                                               u2300 16F4                                                 u2310 16F6  
                                               u2057 1316                                                 u2090 1292  
                                               u2067 134C                                                 u3107 113C  
                                               u2180 0B3A                                                 u3060 0FB4  
                                               u3077 0F74                                                 _IPR1 000F9F  
                                               u2390 0928                                                 _IPR2 000FA2  
                                               u3087 0F92                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 u3097 167A  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               u2770 1398                                                 u2880 0DAE  
                                               u2890 0DD2                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0CA8                                                 _main 0F3C  
                                               _init 1838                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004C  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00CF                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 0FF8  
                                              ?_atol 001F                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                      __end_of___awmod 13CE  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 12E2  
                                    __end_of___llmod 1434                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                       powerPulseCheck@TESTING_count 003C                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0031                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 1822  
                                   ?_powerPulseCheck 0001                                                _isLow 0046  
                                    __end_of_isdigit 17F2                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0BB2  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004D  
                                    __end_of_strcmp2 0BB2                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 002D                        command_builder_add_string@inx 001D  
                                    __initialization 1434                                         __end_of_atol 0D9C  
                                       __end_of_main 0FF8                                         __end_of_init 1842  
                             __end_of_communications 1096                               _com_command_setVersion 1724  
                __size_of_command_builder_add_string 007C                       powerPulseCheck@TESTING_oneshot 0045  
                                   _SPI_receive_data 16FC                         command_builder_add_char@data 0015  
                                             ??_atol 0023                                               ??_main 00D0  
                                             ??_init 0013                                        _SPI_send_data 17B4  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 1538  
                                             ___wmul 174A                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___awmod 0017  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                             _initIO 1792                                               clear_0 146C  
                                             clear_1 1478                                      ___awmod@divisor 0015  
                                     ?_SPI_send_data 0001                                      ___awmod@counter 0017  
                         ?_com_command_setEnergyUsed 002D                                            ??_initOSC 0013  
                          _process_data_parameterize 0906                                         __pdataCOMRAM 004B  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 00C2                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 16FC  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 147E                      powerPulseCheck@timerCountHFLast 00D7  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1842                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0CA8  
                          ??_process_data_parameters 0033                   powerPulseCheck@meterEnergyUsedPart 0060  
                       communications@receive_buffer 0098                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 135E                           _command_builder_add_string 12E2  
                                            ??_ultoa 0028                                           __pbssBANK0 0060  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0033           communications@end_of_transmission_received 0041  
                                     ___lmul@product 001B                          __end_of_resetCommunications 11D0  
                                    _meterEnergyUsed 0064                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 15D8  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1822  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 14E2  
                                  __end_of_delayMS10 169C                      __end_of_process_data_parameters 0906  
                           __end_of_SPI_receive_data 1724                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                    __size_of___lmul 0056                                              ___awmod 135E  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 1260  
                                    __size_of___wmul 0026                                              ___llmod 13CE  
                                       __psmallconst 0600                                 SPI_receive_data@data 0013  
                                    __size_of_initIO 0022                                              __pcinit 1434  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 0F3C                                              __ptext1 1770  
                                            __ptext2 0D9C                                              __ptext3 135E  
                                            __ptext4 17F2                                              __ptext5 1838  
                                            __ptext6 180A                                              __ptext7 1792  
                                            __ptext8 166A                                              __ptext9 0FF8  
                                         _meterWatts 0068                                            _T0CONbits 000FD5  
                                            _initOSC 180A                                    __end_of_initTimer 180A  
                                            _isdigit 17D4                                     ___awmod@dividend 0013  
                                __size_of_Timer0_ISR 00B8                                              main@inx 00D3  
                                            _strcmp2 0A86                                 end_of_initialization 147E  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 1260  
                          powerPulseCheck@firstPulse 004B                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 174A                             __size_of_powerPulseCheck 00E0  
                                   ??_communications 0038                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              receive_data@my_status 003E                                 __end_of_receive_data 0F3C  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                      communications@last_state_active 003F  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 0034  
                                         _toggleBlue 1770                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                   powerPulseCheck@timerCountHFCheck 00D5                           process_data@receive_buffer 0034  
                  __end_of_process_data_parameterize 0A86                                 _com_command_setPower 158E  
                communications@receive_current_state 0040                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 158E                                       __end_of___wmul 1770  
                                      __pidataCOMRAM 1848                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 17B4                                       ??_process_data 0038  
                        ?_command_builder_add_string 0017                                  start_initialization 1434  
                       resetCommunications@commState 006C                                     _command_builder1 148C  
                                   _command_builder3 1096                            _com_command_setEnergyUsed 15D8  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0027                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 002D  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0023  
                                  ??_powerPulseCheck 0020                                          __pdataBANK0 00D5  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0025  
                         ??_command_builder_add_char 0016                                          ?_toggleBlue 0001  
                                        __pbssCOMRAM 0038                                        __pcstackBANK0 00C2  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2081 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 166A                        com_command_setEnergyUsed@temp 00C2  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 002F                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___awmod 0013                                             ?___lldiv 0013  
                                           ?___llmod 0013                                __end_of_SPI_send_data 17D4  
                                           ?_initOSC 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 002F                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                    send_data@send_end 0019  
                                          _initTimer 17F2                                             ?_strcmp2 0013  
                       __size_of_resetCommunications 009C                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                  process_data_parameterize@parameters 0019  
                                       _receive_data 0E7C                                       ___wmul@product 0017  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 0013                                 __end_of_process_data 16CC  
                                          _send_data 11D0                               ??_com_command_setPower 002F  
                  process_data_parameters@parameters 002F                                  __size_of_toggleBlue 0022  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                          main@isLow 00D2                                           ?_initTimer 0001  
                                  ___lmul@multiplier 0013                                 __end_of_SPISlaveInit 166A  
                                          copy_data0 1448             process_data@end_of_transmission_received 0132  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001F                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                                     __size_of___awmod 0070  
                   __end_of_send_end_of_transmission 1838                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 1538  
                           __end_of_command_builder1 14E2                             __end_of_command_builder3 1134  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                           __ptext10 11D0                                             __ptext11 17B4  
                                           __ptext20 0A86                                             __ptext12 1134  
                                           __ptext21 1822                                             __ptext13 1724  
                                           __ptext30 0CA8                                             __ptext22 148C  
                                           __ptext14 158E                                             __ptext31 17D4  
                                           __ptext23 15D8                                             __ptext15 0E7C  
                                           __ptext32 1538                                             __ptext24 0BB2  
                                           __ptext16 16FC                                             __ptext33 0906  
                                           __ptext25 13CE                                             __ptext17 169C  
                                           __ptext34 174A                                             __ptext26 1260  
                                           __ptext18 0660                                             __ptext35 1622  
                                           __ptext27 1096                                             __ptext19 16CC  
                                           __ptext28 12E2                                             __ptext29 14E2  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0D9C                                        __size_of_atol 00F4  
                                      __size_of_main 00BC                                        strmatch@match 0024  
                                      __size_of_init 000A                          powerPulseCheck@mcpHFoutLast 0044  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                        powerPulseCheck@mcpLFoutLast 0043                                             int$flags 004C  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 1622  
                            __size_of_communications 009E                                             _strmatch 16CC  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0036  
                                       ??_toggleBlue 0013                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0030  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0047                                         _timerCountLF 0038  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 00CE  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                 __end_of_toggleBlue 1792                                  _resetCommunications 1134  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 169C                                    _SPI_transmit_wait 0042  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 006E  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0E7C                                 ?_resetCommunications 002F  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0023  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013  
