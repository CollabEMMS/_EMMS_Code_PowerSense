

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Dec 03 09:58:26 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 1.45
    80                           ; Generated 16/11/2017 GMT
    81                           ; 
    82                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F25K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     _ANSELC	set	3898
   114  0000                     _ANSELB	set	3897
   115  0000                     _ANSELA	set	3896
   116  0000                     _ANSELBbits	set	3897
   117  0000                     _ANSELAbits	set	3896
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR0H	set	4055
   120  0000                     _INTCONbits	set	4082
   121  0000                     _T0CONbits	set	4053
   122  0000                     _PORTAbits	set	3968
   123  0000                     _IPR5	set	3967
   124  0000                     _IPR4	set	3964
   125  0000                     _IPR3	set	4005
   126  0000                     _IPR2	set	4002
   127  0000                     _IPR1	set	3999
   128  0000                     _PIE5	set	3965
   129  0000                     _PIE4	set	3962
   130  0000                     _PIE3	set	4003
   131  0000                     _PIE2	set	4000
   132  0000                     _PIE1	set	3997
   133  0000                     _PIR5	set	3966
   134  0000                     _PIR4	set	3963
   135  0000                     _PIR3	set	4004
   136  0000                     _PIR2	set	4001
   137  0000                     _PIR1	set	3998
   138  0000                     _RCONbits	set	4048
   139  0000                     _INTCON3	set	4080
   140  0000                     _INTCON2	set	4081
   141  0000                     _INTCON	set	4082
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _OSCTUNEbits	set	3995
   144  0000                     _OSCCON2bits	set	4050
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _SSP2CON3bits	set	3945
   147  0000                     _SSP2CON3	set	3945
   148  0000                     _TRISAbits	set	3986
   149  0000                     _SSP2BUF	set	3951
   150  0000                     _SSP2STATbits	set	3949
   151  0000                     _SSP2CON1bits	set	3948
   152  0000                     _PORTCbits	set	3970
   153  0000                     _PORTBbits	set	3969
   154  0000                     _LATCbits	set	3979
   155  0000                     _LATBbits	set	3978
   156  0000                     _TRISCbits	set	3988
   157  0000                     _TRISBbits	set	3987
   158                           
   159                           	psect	smallconst
   160  000600                     __psmallconst:
   161                           	opt stack 0
   162  000600  00                 	db	0
   163  000601                     STR_3:
   164                           
   165                           ; BSR set to: 0
   166  000601  43                 	db	67	;'C'
   167  000602  61                 	db	97	;'a'
   168  000603  6C                 	db	108	;'l'
   169  000604  69                 	db	105	;'i'
   170  000605  62                 	db	98	;'b'
   171  000606  72                 	db	114	;'r'
   172  000607  61                 	db	97	;'a'
   173  000608  74                 	db	116	;'t'
   174  000609  69                 	db	105	;'i'
   175  00060A  6F                 	db	111	;'o'
   176  00060B  6E                 	db	110	;'n'
   177  00060C  00                 	db	0
   178  00060D                     STR_11:
   179                           
   180                           ; BSR set to: 0
   181  00060D  50                 	db	80	;'P'
   182  00060E  53                 	db	83	;'S'
   183  00060F  56                 	db	86	;'V'
   184  000610  65                 	db	101	;'e'
   185  000611  72                 	db	114	;'r'
   186  000612  73                 	db	115	;'s'
   187  000613  69                 	db	105	;'i'
   188  000614  6F                 	db	111	;'o'
   189  000615  6E                 	db	110	;'n'
   190  000616  00                 	db	0
   191  000617                     STR_4:
   192                           
   193                           ; BSR set to: 0
   194  000617  45                 	db	69	;'E'
   195  000618  6E                 	db	110	;'n'
   196  000619  55                 	db	85	;'U'
   197  00061A  73                 	db	115	;'s'
   198  00061B  65                 	db	101	;'e'
   199  00061C  64                 	db	100	;'d'
   200  00061D  00                 	db	0
   201  00061E                     STR_9:
   202                           
   203                           ; BSR set to: 0
   204  00061E  56                 	db	86	;'V'
   205  00061F  6F                 	db	111	;'o'
   206  000620  6C                 	db	108	;'l'
   207  000621  74                 	db	116	;'t'
   208  000622  73                 	db	115	;'s'
   209  000623  00                 	db	0
   210  000624                     STR_7:
   211                           
   212                           ; BSR set to: 0
   213  000624  57                 	db	87	;'W'
   214  000625  61                 	db	97	;'a'
   215  000626  74                 	db	116	;'t'
   216  000627  74                 	db	116	;'t'
   217  000628  73                 	db	115	;'s'
   218  000629  00                 	db	0
   219  00062A                     
   220                           ; BSR set to: 0
   221  00062A  4C                 	db	76	;'L'
   222  00062B  45                 	db	69	;'E'
   223  00062C  44                 	db	68	;'D'
   224  00062D  42                 	db	66	;'B'
   225  00062E  00                 	db	0
   226  00062F                     STR_5:
   227                           
   228                           ; BSR set to: 0
   229  00062F  52                 	db	82	;'R'
   230  000630  65                 	db	101	;'e'
   231  000631  61                 	db	97	;'a'
   232  000632  64                 	db	100	;'d'
   233  000633  00                 	db	0
   234  000634                     STR_6:
   235                           
   236                           ; BSR set to: 0
   237  000634  43                 	db	67	;'C'
   238  000635  6F                 	db	111	;'o'
   239  000636  6E                 	db	110	;'n'
   240  000637  66                 	db	102	;'f'
   241  000638  00                 	db	0
   242  000639                     STR_10:
   243                           
   244                           ; BSR set to: 0
   245  000639  41                 	db	65	;'A'
   246  00063A  6D                 	db	109	;'m'
   247  00063B  70                 	db	112	;'p'
   248  00063C  73                 	db	115	;'s'
   249  00063D  00                 	db	0
   250  00063E                     
   251                           ; BSR set to: 0
   252  00063E  32                 	db	50	;'2'
   253  00063F  32                 	db	50	;'2'
   254  000640  32                 	db	50	;'2'
   255  000641  00                 	db	0
   256  000642                     
   257                           ; BSR set to: 0
   258  000642  33                 	db	51	;'3'
   259  000643  33                 	db	51	;'3'
   260  000644  33                 	db	51	;'3'
   261  000645  00                 	db	0
   262  000646                     STR_29:
   263                           
   264                           ; BSR set to: 0
   265  000646  34                 	db	52	;'4'
   266  000647  34                 	db	52	;'4'
   267  000648  34                 	db	52	;'4'
   268  000649  00                 	db	0
   269  00064A                     STR_1:
   270                           
   271                           ; BSR set to: 0
   272  00064A  45                 	db	69	;'E'
   273  00064B  4E                 	db	78	;'N'
   274  00064C  44                 	db	68	;'D'
   275  00064D  00                 	db	0
   276  00064E                     STR_2:
   277                           
   278                           ; BSR set to: 0
   279  00064E  53                 	db	83	;'S'
   280  00064F  65                 	db	101	;'e'
   281  000650  74                 	db	116	;'t'
   282  000651  00                 	db	0
   283  0000                     
   284                           ; #config settings
   285  000652  00                 	db	0	; dummy byte at the end
   286  0000                     
   287                           	psect	cinit
   288  001ED8                     __pcinit:
   289                           	opt stack 0
   290  001ED8                     start_initialization:
   291                           	opt stack 0
   292  001ED8                     __initialization:
   293                           	opt stack 0
   294                           
   295                           ; Clear objects allocated to BANK1 (92 bytes)
   296  001ED8  EE01  F06A         	lfsr	0,__pbssBANK1
   297  001EDC  0E5C               	movlw	92
   298  001EDE                     clear_0:
   299  001EDE  6AEE               	clrf	postinc0,c
   300  001EE0  06E8               	decf	wreg,f,c
   301  001EE2  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK0 (24 bytes)
   304  001EE4  EE00  F08D         	lfsr	0,__pbssBANK0
   305  001EE8  0E18               	movlw	24
   306  001EEA                     clear_1:
   307  001EEA  6AEE               	clrf	postinc0,c
   308  001EEC  06E8               	decf	wreg,f,c
   309  001EEE  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to COMRAM (16 bytes)
   312  001EF0  EE00  F03D         	lfsr	0,__pbssCOMRAM
   313  001EF4  0E10               	movlw	16
   314  001EF6                     clear_2:
   315  001EF6  6AEE               	clrf	postinc0,c
   316  001EF8  06E8               	decf	wreg,f,c
   317  001EFA  E1FD               	bnz	clear_2
   318  001EFC                     end_of_initialization:
   319                           	opt stack 0
   320  001EFC                     __end_of__initialization:
   321                           	opt stack 0
   322  001EFC  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323  001EFE  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324  001F00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   325  001F02  6EF8               	movwf	tblptru,c
   326  001F04  0100               	movlb	0
   327  001F06  EFB1  F007         	goto	_main	;jump to C main() function
   328                           tblptru	equ	0xFF8
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332                           	psect	bssCOMRAM
   333  00003D                     __pbssCOMRAM:
   334                           	opt stack 0
   335  00003D                     _meterEnergyUsed_global:
   336                           	opt stack 0
   337  00003D                     	ds	4
   338  000041                     	ds	2
   339  000043                     mcpUpdatePower@meterWattsLF:
   340                           	opt stack 0
   341  000043                     	ds	2
   342  000045                     mcpUpdatePower@meterWattsHF:
   343                           	opt stack 0
   344  000045                     	ds	2
   345  000047                     resetCommunications@commState:
   346                           	opt stack 0
   347  000047                     	ds	2
   348  000049                     mcpUpdatePower@oneShotLFout:
   349                           	opt stack 0
   350  000049                     	ds	1
   351  00004A                     mcpUpdatePower@oneShotHFout:
   352                           	opt stack 0
   353  00004A                     	ds	1
   354  00004B                     receive_data@my_status:
   355                           	opt stack 0
   356  00004B                     	ds	1
   357  00004C                     _SPI_transmit_wait:
   358                           	opt stack 0
   359  00004C                     	ds	1
   360                           tblptru	equ	0xFF8
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	bssBANK0
   365  00008D                     __pbssBANK0:
   366                           	opt stack 0
   367  00008D                     _timerCount_ms:
   368                           	opt stack 0
   369  00008D                     	ds	16
   370  00009D                     _meterWatts_global:
   371                           	opt stack 0
   372  00009D                     	ds	4
   373  0000A1                     main@oneShot:
   374                           	opt stack 0
   375  0000A1                     	ds	1
   376  0000A2                     communications@last_state_active:
   377                           	opt stack 0
   378  0000A2                     	ds	1
   379  0000A3                     communications@receive_current_state:
   380                           	opt stack 0
   381  0000A3                     	ds	1
   382  0000A4                     communications@end_of_transmission_received:
   383                           	opt stack 0
   384  0000A4                     	ds	1
   385                           tblptru	equ	0xFF8
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           
   389                           	psect	bssBANK1
   390  00016A                     __pbssBANK1:
   391                           	opt stack 0
   392  00016A                     mcpUpdatePower@timerHFoutLast_ms:
   393                           	opt stack 0
   394  00016A                     	ds	4
   395  00016E                     _meterEnergyUsedPart:
   396                           	opt stack 0
   397  00016E                     	ds	4
   398  000172                     communications@send_buffer:
   399                           	opt stack 0
   400  000172                     	ds	42
   401  00019C                     communications@receive_buffer:
   402                           	opt stack 0
   403  00019C                     	ds	42
   404                           tblptru	equ	0xFF8
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           
   408                           	psect	cstackBANK1
   409  000100                     __pcstackBANK1:
   410                           	opt stack 0
   411  000100                     process_data@parameters:
   412                           	opt stack 0
   413                           
   414                           ; 105 bytes @ 0x0
   415  000100                     	ds	105
   416  000169                     process_data@end_of_transmission_received:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x69
   420  000169                     	ds	1
   421                           tblptru	equ	0xFF8
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           
   425                           	psect	cstackBANK0
   426  000060                     __pcstackBANK0:
   427                           	opt stack 0
   428  000060                     xsum_builder@xsumBuf:
   429                           	opt stack 0
   430                           
   431                           ; 16 bytes @ 0x0
   432  000060                     	ds	16
   433  000070                     com_command_setPower@temp:
   434                           	opt stack 0
   435  000070                     com_command_setEnergyUsed@temp:
   436                           	opt stack 0
   437                           
   438                           ; 12 bytes @ 0x10
   439  000070                     	ds	12
   440  00007C                     ??_resetCommunications:
   441  00007C                     process_data_parameters@parameters:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x1C
   445  00007C                     	ds	2
   446  00007E                     process_data_parameters@send_buffer:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x1E
   450  00007E                     	ds	2
   451  000080                     process_data@receive_buffer:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x20
   455  000080                     	ds	2
   456  000082                     process_data@send_buffer:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x22
   460  000082                     	ds	2
   461  000084                     communications@no_more_to_send:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x24
   465  000084                     	ds	1
   466  000085                     communications@firstTime:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x25
   470  000085                     	ds	1
   471  000086                     ??_main:
   472                           
   473                           ; 1 bytes @ 0x26
   474  000086                     	ds	1
   475  000087                     main@timerHeartbeat:
   476                           	opt stack 0
   477                           
   478                           ; 4 bytes @ 0x27
   479  000087                     	ds	4
   480  00008B                     main@inx:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x2B
   484  00008B                     	ds	2
   485                           tblptru	equ	0xFF8
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           
   489                           	psect	cstackCOMRAM
   490  000001                     __pcstackCOMRAM:
   491                           	opt stack 0
   492  000001                     ??_Timer0_ISR:
   493                           
   494                           ; 1 bytes @ 0x0
   495  000001                     	ds	18
   496  000013                     ??_isdigit:
   497  000013                     ?_command_builder_add_char:
   498                           	opt stack 0
   499  000013                     ?_strcmp2:
   500                           	opt stack 0
   501  000013                     ?___wmul:
   502                           	opt stack 0
   503  000013                     ?___awdiv:
   504                           	opt stack 0
   505  000013                     ?___lwdiv:
   506                           	opt stack 0
   507  000013                     ?___lwmod:
   508                           	opt stack 0
   509  000013                     ?_timerGetCount:
   510                           	opt stack 0
   511  000013                     ?___lmul:
   512                           	opt stack 0
   513  000013                     ?___lldiv:
   514                           	opt stack 0
   515  000013                     ?___llmod:
   516                           	opt stack 0
   517  000013                     SPI_send_data@data:
   518                           	opt stack 0
   519  000013                     ledSet@ledNum:
   520                           	opt stack 0
   521  000013                     command_builder_add_char@send_buffer:
   522                           	opt stack 0
   523  000013                     strcmp2@a:
   524                           	opt stack 0
   525  000013                     SPI_receive_data@data:
   526                           	opt stack 0
   527  000013                     timerGetCount@timerIndex:
   528                           	opt stack 0
   529  000013                     timerResetCount@timerIndex:
   530                           	opt stack 0
   531  000013                     delayMS10@count:
   532                           	opt stack 0
   533  000013                     ___wmul@multiplier:
   534                           	opt stack 0
   535  000013                     ___awdiv@dividend:
   536                           	opt stack 0
   537  000013                     ___lwdiv@dividend:
   538                           	opt stack 0
   539  000013                     ___lwmod@dividend:
   540                           	opt stack 0
   541  000013                     ___lmul@multiplier:
   542                           	opt stack 0
   543  000013                     ___lldiv@dividend:
   544                           	opt stack 0
   545  000013                     ___llmod@dividend:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0x12
   549  000013                     	ds	1
   550  000014                     SPI_send_data@sendGood:
   551                           	opt stack 0
   552  000014                     _isdigit$2432:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x13
   556  000014                     	ds	1
   557  000015                     ??_delayMS10:
   558  000015                     ??_timerResetCount:
   559  000015                     command_builder_add_char@data:
   560                           	opt stack 0
   561  000015                     SPI_receive_data@recvGood:
   562                           	opt stack 0
   563  000015                     isdigit@c:
   564                           	opt stack 0
   565  000015                     ledSet@setValue:
   566                           	opt stack 0
   567  000015                     send_data@send_buffer:
   568                           	opt stack 0
   569  000015                     strcmp2@b:
   570                           	opt stack 0
   571  000015                     ___wmul@multiplicand:
   572                           	opt stack 0
   573  000015                     ___awdiv@divisor:
   574                           	opt stack 0
   575  000015                     ___lwdiv@divisor:
   576                           	opt stack 0
   577  000015                     ___lwmod@divisor:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x14
   581  000015                     	ds	1
   582  000016                     ??_command_builder_add_char:
   583  000016                     receive_data@receive_buffer:
   584                           	opt stack 0
   585  000016                     delayMS10@inx:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x15
   589  000016                     	ds	1
   590  000017                     ??_send_data:
   591  000017                     ??_strcmp2:
   592  000017                     ??_timerGetCount:
   593  000017                     ??_ledSet:
   594  000017                     ?_command_builder_add_string:
   595                           	opt stack 0
   596  000017                     ___awdiv@counter:
   597                           	opt stack 0
   598  000017                     ___lwdiv@counter:
   599                           	opt stack 0
   600  000017                     ___lwmod@counter:
   601                           	opt stack 0
   602  000017                     command_builder_add_string@send_buffer:
   603                           	opt stack 0
   604  000017                     ___wmul@product:
   605                           	opt stack 0
   606  000017                     ___lmul@multiplicand:
   607                           	opt stack 0
   608  000017                     ___lldiv@divisor:
   609                           	opt stack 0
   610  000017                     ___llmod@divisor:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0x16
   614  000017                     	ds	1
   615  000018                     ??_receive_data:
   616  000018                     ??_mcpInitF:
   617  000018                     ___awdiv@sign:
   618                           	opt stack 0
   619  000018                     ___lwdiv@quotient:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x17
   623  000018                     	ds	1
   624  000019                     ?_atoi:
   625                           	opt stack 0
   626  000019                     receive_data@data:
   627                           	opt stack 0
   628  000019                     send_data@send_end:
   629                           	opt stack 0
   630  000019                     ledSetAll@led1Value:
   631                           	opt stack 0
   632  000019                     ledToggle@ledNum:
   633                           	opt stack 0
   634  000019                     process_data_parameterize@parameters:
   635                           	opt stack 0
   636  000019                     command_builder_add_string@data_string:
   637                           	opt stack 0
   638  000019                     atoi@s:
   639                           	opt stack 0
   640  000019                     ___awdiv@quotient:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x18
   644  000019                     	ds	1
   645  00001A                     strcmp2@match:
   646                           	opt stack 0
   647  00001A                     utoa@buf:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x19
   651  00001A                     	ds	1
   652  00001B                     ??_atoi:
   653  00001B                     ??_command_builder_add_string:
   654  00001B                     ??_ledToggle:
   655  00001B                     ___llmod@counter:
   656                           	opt stack 0
   657  00001B                     ledSetAll@led2Value:
   658                           	opt stack 0
   659  00001B                     process_data_parameterize@buffer_to_parameterize:
   660                           	opt stack 0
   661  00001B                     ___lmul@product:
   662                           	opt stack 0
   663  00001B                     ___lldiv@quotient:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x1A
   667  00001B                     	ds	1
   668  00001C                     strcmp2@inx:
   669                           	opt stack 0
   670  00001C                     utoa@val:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x1B
   674  00001C                     	ds	1
   675  00001D                     ??_process_data_parameterize:
   676  00001D                     atoi@sign:
   677                           	opt stack 0
   678  00001D                     ledSetAll@led3Value:
   679                           	opt stack 0
   680  00001D                     ledToggle@setValue:
   681                           	opt stack 0
   682  00001D                     command_builder_add_string@xsumAdd:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x1C
   686  00001D                     	ds	1
   687  00001E                     strmatch@a:
   688                           	opt stack 0
   689  00001E                     atoi@a:
   690                           	opt stack 0
   691  00001E                     utoa@base:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x1D
   695  00001E                     	ds	1
   696  00001F                     ?_atol:
   697                           	opt stack 0
   698  00001F                     ___lldiv@counter:
   699                           	opt stack 0
   700  00001F                     ledToggle@getValue:
   701                           	opt stack 0
   702  00001F                     ledRunUp@ledRunDelay:
   703                           	opt stack 0
   704  00001F                     ledRunDown@ledRunDelay:
   705                           	opt stack 0
   706  00001F                     command_builder_add_string@inx:
   707                           	opt stack 0
   708  00001F                     atol@s:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x1E
   712  00001F                     	ds	1
   713  000020                     ?_powerCalculateWatts:
   714                           	opt stack 0
   715  000020                     process_data_parameterize@inx:
   716                           	opt stack 0
   717  000020                     xSumCheck@check_buffer:
   718                           	opt stack 0
   719  000020                     strmatch@b:
   720                           	opt stack 0
   721  000020                     utoa@v:
   722                           	opt stack 0
   723  000020                     ultoa@buf:
   724                           	opt stack 0
   725  000020                     powerCalculateWatts@timer_ms:
   726                           	opt stack 0
   727  000020                     powerReduction@timerLast_ms:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x1F
   731  000020                     	ds	1
   732  000021                     ledTestToggle@ledNum:
   733                           	opt stack 0
   734  000021                     ledGoToggle@ledNum:
   735                           	opt stack 0
   736  000021                     ledRunUp@delay10ms:
   737                           	opt stack 0
   738  000021                     ledRunDown@delay10ms:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x20
   742  000021                     	ds	1
   743  000022                     ??_xSumCheck:
   744  000022                     process_data_parameterize@parameter_index:
   745                           	opt stack 0
   746  000022                     utoa@c:
   747                           	opt stack 0
   748  000022                     strmatch@result:
   749                           	opt stack 0
   750  000022                     ultoa@val:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x21
   754  000022                     	ds	1
   755  000023                     ??_atol:
   756  000023                     process_data_parameterize@parameter_position:
   757                           	opt stack 0
   758  000023                     ledRun@ledRunDelay:
   759                           	opt stack 0
   760  000023                     itoa@buf:
   761                           	opt stack 0
   762  000023                     xSumCheck@xSumChars:
   763                           	opt stack 0
   764                           
   765                           ; 7 bytes @ 0x22
   766  000023                     	ds	1
   767  000024                     strmatch@match:
   768                           	opt stack 0
   769  000024                     powerCalculateWatts@outHF:
   770                           	opt stack 0
   771  000024                     powerReduction@timerReduce_ms:
   772                           	opt stack 0
   773                           
   774                           ; 4 bytes @ 0x23
   775  000024                     	ds	1
   776  000025                     powerCalculateWatts@calcWatts:
   777                           	opt stack 0
   778  000025                     itoa@val:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x24
   782  000025                     	ds	1
   783  000026                     ultoa@base:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x25
   787  000026                     	ds	1
   788  000027                     atol@sign:
   789                           	opt stack 0
   790  000027                     itoa@base:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x26
   794  000027                     	ds	1
   795  000028                     mcpUpdatePower@timerLFout_ms:
   796                           	opt stack 0
   797  000028                     atol@a:
   798                           	opt stack 0
   799  000028                     ultoa@v:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x27
   803  000028                     	ds	1
   804  000029                     itoa@cp:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x28
   808  000029                     	ds	1
   809  00002A                     xSumCheck@xSumCharsValue:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x29
   813  00002A                     	ds	1
   814  00002B                     xsum_builder@send_buffer:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x2A
   818  00002B                     	ds	1
   819  00002C                     xSumCheck@xSumMatches:
   820                           	opt stack 0
   821  00002C                     atol@c:
   822                           	opt stack 0
   823  00002C                     ultoa@c:
   824                           	opt stack 0
   825  00002C                     mcpUpdatePower@timerHFout_ms:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x2B
   829  00002C                     	ds	1
   830  00002D                     xSumCheck@xSumAdderValue:
   831                           	opt stack 0
   832  00002D                     xsum_builder@xsum:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x2C
   836  00002D                     	ds	2
   837  00002F                     xSumCheck@xSumCharsPos:
   838                           	opt stack 0
   839  00002F                     command_builder1@send_buffer:
   840                           	opt stack 0
   841  00002F                     command_builder3@send_buffer:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x2E
   845  00002F                     	ds	2
   846  000031                     xSumCheck@receiveBufferPos:
   847                           	opt stack 0
   848  000031                     command_builder1@data1:
   849                           	opt stack 0
   850  000031                     command_builder3@data1:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x30
   854  000031                     	ds	2
   855  000033                     command_builder1@xsum:
   856                           	opt stack 0
   857  000033                     command_builder3@data2:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x32
   861  000033                     	ds	2
   862  000035                     command_builder3@data3:
   863                           	opt stack 0
   864  000035                     send_end_of_transmission@send_buffer:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x34
   868  000035                     	ds	2
   869  000037                     command_builder3@xsum:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x36
   873  000037                     	ds	2
   874  000039                     com_command_setPower@send_buffer:
   875                           	opt stack 0
   876  000039                     com_command_setEnergyUsed@send_buffer:
   877                           	opt stack 0
   878  000039                     com_command_setVersion@send_buffer:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x38
   882  000039                     	ds	2
   883  00003B                     process_data_parameters@end_of_transmission_received:
   884                           	opt stack 0
   885  00003B                     resetCommunications@send_buffer:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x3A
   889  00003B                     	ds	1
   890  00003C                     
   891                           ; 1 bytes @ 0x3B
   892  00003C                     	ds	1
   893  00003D                     tblptru	equ	0xFF8
   894                           postinc0	equ	0xFEE
   895                           wreg	equ	0xFE8
   896                           
   897                           ; 1 bytes @ 0x3C
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 48 in file "Main_PowerSense.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  timerHeartbe    4   39[BANK0 ] unsigned long 
   908 ;;  inx             2   43[BANK0 ] int 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   918 ;;      Params:         0       0       0       0       0       0       0
   919 ;;      Locals:         0       6       0       0       0       0       0
   920 ;;      Temps:          0       1       0       0       0       0       0
   921 ;;      Totals:         0       7       0       0       0       0       0
   922 ;;Total ram usage:        7 bytes
   923 ;; Hardware stack levels required when called:   11
   924 ;; This function calls:
   925 ;;		___llmod
   926 ;;		_commInit
   927 ;;		_commRun
   928 ;;		_initIO
   929 ;;		_initInterruptsClear
   930 ;;		_initOSC
   931 ;;		_ledInit
   932 ;;		_ledRun
   933 ;;		_ledSetAllOff
   934 ;;		_ledSetAllOn
   935 ;;		_ledTestToggle
   936 ;;		_mcpInit
   937 ;;		_mcpUpdatePower
   938 ;;		_timerGetCount
   939 ;;		_timerInit
   940 ;; This function is called by:
   941 ;;		Startup code after reset
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text0
   946  000F62                     __ptext0:
   947                           	opt stack 0
   948  000F62                     _main:
   949                           	opt stack 20
   950                           
   951                           ;Main_PowerSense.c: 83: initOSC( );
   952                           
   953                           ;incstack = 0
   954  000F62  EC96  F010         	call	_initOSC	;wreg free
   955                           
   956                           ;Main_PowerSense.c: 84: initIO( );
   957  000F66  ECAD  F010         	call	_initIO	;wreg free
   958                           
   959                           ;Main_PowerSense.c: 85: ledInit( );
   960  000F6A  ECBD  F010         	call	_ledInit	;wreg free
   961                           
   962                           ;Main_PowerSense.c: 87: ledSetAllOff( );
   963  000F6E  EC6B  F010         	call	_ledSetAllOff	;wreg free
   964                           
   965                           ;Main_PowerSense.c: 89: initInterruptsClear( );
   966  000F72  EC77  F00E         	call	_initInterruptsClear	;wreg free
   967                           
   968                           ;Main_PowerSense.c: 90: timerInit( );
   969  000F76  EC47  F00D         	call	_timerInit	;wreg free
   970                           
   971                           ;Main_PowerSense.c: 92: mcpInit( );
   972  000F7A  ECFD  F00F         	call	_mcpInit	;wreg free
   973                           
   974                           ;Main_PowerSense.c: 95: for( int inx = 0; inx < 5; inx++ )
   975  000F7E  0E00               	movlw	0
   976  000F80  0100               	movlb	0	; () banked
   977  000F82  6F8C               	movwf	(main@inx+1)& (0+255),b
   978  000F84  0E00               	movlw	0
   979  000F86  6F8B               	movwf	main@inx& (0+255),b
   980  000F88  BF8C               	btfsc	(main@inx+1)& (0+255),7,b
   981  000F8A  D006               	goto	l476
   982  000F8C  518C               	movf	(main@inx+1)& (0+255),w,b
   983  000F8E  E11E               	bnz	l4360
   984  000F90  0E05               	movlw	5
   985  000F92  5D8B               	subwf	main@inx& (0+255),w,b
   986  000F94  B0D8               	btfsc	status,0,c
   987  000F96  D01A               	goto	u3400
   988  000F98                     l476:
   989                           
   990                           ; BSR set to: 0
   991                           ;Main_PowerSense.c: 96: {
   992                           ;Main_PowerSense.c: 97: ledSetAllOn( );
   993                           
   994                           ; BSR set to: 0
   995  000F98  EC5C  F010         	call	_ledSetAllOn	;wreg free
   996                           
   997                           ;Main_PowerSense.c: 98: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   998  000F9C  0E34               	movlw	52
   999  000F9E  0100               	movlb	0	; () banked
  1000  000FA0  6F86               	movwf	??_main& (0+255),b
  1001  000FA2  0EF1               	movlw	241
  1002  000FA4                     u3437:
  1003  000FA4  2EE8               	decfsz	wreg,f,c
  1004  000FA6  D7FE               	bra	u3437
  1005  000FA8  2F86               	decfsz	??_main& (0+255),f,b
  1006  000FAA  D7FC               	bra	u3437
  1007  000FAC  D000               	nop2	
  1008                           
  1009                           ;Main_PowerSense.c: 99: ledSetAllOff( );
  1010  000FAE  EC6B  F010         	call	_ledSetAllOff	;wreg free
  1011                           
  1012                           ;Main_PowerSense.c: 100: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1013  000FB2  0E34               	movlw	52
  1014  000FB4  0100               	movlb	0	; () banked
  1015  000FB6  6F86               	movwf	??_main& (0+255),b
  1016  000FB8  0EF1               	movlw	241
  1017  000FBA                     u3447:
  1018  000FBA  2EE8               	decfsz	wreg,f,c
  1019  000FBC  D7FE               	bra	u3447
  1020  000FBE  2F86               	decfsz	??_main& (0+255),f,b
  1021  000FC0  D7FC               	bra	u3447
  1022  000FC2  D000               	nop2	
  1023  000FC4  0100               	movlb	0	; () banked
  1024  000FC6  4B8B               	infsnz	main@inx& (0+255),f,b
  1025  000FC8  2B8C               	incf	(main@inx+1)& (0+255),f,b
  1026  000FCA  D7DE               	goto	L1
  1027  000FCC                     u3400:
  1028  000FCC                     l4360:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;Main_PowerSense.c: 101: }
  1032                           ;Main_PowerSense.c: 104: commInit( );
  1033  000FCC  ECC7  F010         	call	_commInit	;wreg free
  1034                           
  1035                           ;Main_PowerSense.c: 106: ledRun( 100 );
  1036  000FD0  0E00               	movlw	0
  1037  000FD2  6E24               	movwf	ledRun@ledRunDelay+1,c
  1038  000FD4  0E64               	movlw	100
  1039  000FD6  6E23               	movwf	ledRun@ledRunDelay,c
  1040  000FD8  EC89  F010         	call	_ledRun	;wreg free
  1041  000FDC                     
  1042                           ;Main_PowerSense.c: 109: {
  1043                           ;Main_PowerSense.c: 110: mcpUpdatePower( );
  1044  000FDC  ECE3  F004         	call	_mcpUpdatePower	;wreg free
  1045                           
  1046                           ;Main_PowerSense.c: 111: commRun( );
  1047  000FE0  ECC3  F010         	call	_commRun	;wreg free
  1048                           
  1049                           ;Main_PowerSense.c: 114: {
  1050                           ;Main_PowerSense.c: 115: static bool oneShot = 0;
  1051                           ;Main_PowerSense.c: 116: unsigned long timerHeartbeat;
  1052                           ;Main_PowerSense.c: 117: timerHeartbeat = timerGetCount( 3 );
  1053  000FE4  0E00               	movlw	0
  1054  000FE6  6E14               	movwf	timerGetCount@timerIndex+1,c
  1055  000FE8  0E03               	movlw	3
  1056  000FEA  6E13               	movwf	timerGetCount@timerIndex,c
  1057  000FEC  EC85  F00F         	call	_timerGetCount	;wreg free
  1058  000FF0  C013  F087         	movff	?_timerGetCount,main@timerHeartbeat
  1059  000FF4  C014  F088         	movff	?_timerGetCount+1,main@timerHeartbeat+1
  1060  000FF8  C015  F089         	movff	?_timerGetCount+2,main@timerHeartbeat+2
  1061  000FFC  C016  F08A         	movff	?_timerGetCount+3,main@timerHeartbeat+3
  1062                           
  1063                           ;Main_PowerSense.c: 118: if( ( timerHeartbeat % 500 ) == 0 )
  1064  001000  C087  F013         	movff	main@timerHeartbeat,___llmod@dividend
  1065  001004  C088  F014         	movff	main@timerHeartbeat+1,___llmod@dividend+1
  1066  001008  C089  F015         	movff	main@timerHeartbeat+2,___llmod@dividend+2
  1067  00100C  C08A  F016         	movff	main@timerHeartbeat+3,___llmod@dividend+3
  1068  001010  0EF4               	movlw	244
  1069  001012  6E17               	movwf	___llmod@divisor,c
  1070  001014  0E01               	movlw	1
  1071  001016  6E18               	movwf	___llmod@divisor+1,c
  1072  001018  0E00               	movlw	0
  1073  00101A  6E19               	movwf	___llmod@divisor+2,c
  1074  00101C  0E00               	movlw	0
  1075  00101E  6E1A               	movwf	___llmod@divisor+3,c
  1076  001020  EC14  F00D         	call	___llmod	;wreg free
  1077  001024  5013               	movf	?___llmod,w,c
  1078  001026  1014               	iorwf	?___llmod+1,w,c
  1079  001028  1015               	iorwf	?___llmod+2,w,c
  1080  00102A  1016               	iorwf	?___llmod+3,w,c
  1081  00102C  A4D8               	btfss	status,2,c
  1082  00102E  D00D               	goto	l481
  1083                           
  1084                           ;Main_PowerSense.c: 119: {
  1085                           ;Main_PowerSense.c: 120: if( oneShot == 0 )
  1086  001030  0100               	movlb	0	; () banked
  1087  001032  51A1               	movf	main@oneShot& (0+255),w,b
  1088  001034  A4D8               	btfss	status,2,c
  1089  001036  D7D2               	goto	l478
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;Main_PowerSense.c: 121: {
  1093                           ;Main_PowerSense.c: 122: oneShot = 1;
  1094  001038  0E01               	movlw	1
  1095  00103A  6FA1               	movwf	main@oneShot& (0+255),b
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;Main_PowerSense.c: 123: ledTestToggle( 1 );
  1099  00103C  0E00               	movlw	0
  1100  00103E  6E22               	movwf	ledTestToggle@ledNum+1,c
  1101  001040  0E01               	movlw	1
  1102  001042  6E21               	movwf	ledTestToggle@ledNum,c
  1103  001044  ECB6  F010         	call	_ledTestToggle	;wreg free
  1104                           
  1105                           ;Main_PowerSense.c: 124: }
  1106                           ;Main_PowerSense.c: 126: }
  1107  001048  D7C9               	goto	l478
  1108  00104A                     l481:
  1109                           
  1110                           ;Main_PowerSense.c: 127: else
  1111                           ;Main_PowerSense.c: 128: {
  1112                           ;Main_PowerSense.c: 129: oneShot = 0;
  1113  00104A  0E00               	movlw	0
  1114  00104C  0100               	movlb	0	; () banked
  1115  00104E  6FA1               	movwf	main@oneShot& (0+255),b
  1116                           
  1117                           ; BSR set to: 0
  1118                           
  1119                           ; BSR set to: 0
  1120  001050  D7C5               	goto	l478
  1121  001052                     __end_of_main:
  1122                           	opt stack 0
  1123                           tblptru	equ	0xFF8
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _timerInit *****************
  1129 ;; Defined at:
  1130 ;;		line 53 in file "Timer.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159  001A8E                     __ptext1:
  1160                           	opt stack 0
  1161  001A8E                     _timerInit:
  1162                           	opt stack 29
  1163                           
  1164                           ;Timer.c: 56: T0CONbits.TMR0ON = 0;
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;incstack = 0
  1168  001A8E  9ED5               	bcf	4053,7,c	;volatile
  1169                           
  1170                           ;Timer.c: 57: T0CONbits.T08BIT = 0;
  1171  001A90  9CD5               	bcf	4053,6,c	;volatile
  1172                           
  1173                           ;Timer.c: 58: T0CONbits.T0CS = 0;
  1174  001A92  9AD5               	bcf	4053,5,c	;volatile
  1175                           
  1176                           ;Timer.c: 59: T0CONbits.PSA = 0;
  1177  001A94  96D5               	bcf	4053,3,c	;volatile
  1178                           
  1179                           ;Timer.c: 60: T0CONbits.T0PS = 0b001;
  1180  001A96  50D5               	movf	4053,w,c	;volatile
  1181  001A98  0BF8               	andlw	-8
  1182  001A9A  0901               	iorlw	1
  1183  001A9C  6ED5               	movwf	4053,c	;volatile
  1184                           
  1185                           ;Timer.c: 62: INTCONbits.TMR0IE = 1;
  1186  001A9E  8AF2               	bsf	intcon,5,c	;volatile
  1187                           
  1188                           ;Timer.c: 63: INTCONbits.GIE = 1;
  1189  001AA0  8EF2               	bsf	intcon,7,c	;volatile
  1190                           
  1191                           ;Timer.c: 64: T0CONbits.TMR0ON = 1;
  1192  001AA2  8ED5               	bsf	4053,7,c	;volatile
  1193                           
  1194                           ;Timer.c: 68: timerCount_ms[0] = 0;
  1195  001AA4  0E00               	movlw	0
  1196  001AA6  0100               	movlb	0	; () banked
  1197  001AA8  6F8D               	movwf	_timerCount_ms& (0+255),b	;volatile
  1198  001AAA  0E00               	movlw	0
  1199  001AAC  6F8E               	movwf	(_timerCount_ms+1)& (0+255),b	;volatile
  1200  001AAE  0E00               	movlw	0
  1201  001AB0  6F8F               	movwf	(_timerCount_ms+2)& (0+255),b	;volatile
  1202  001AB2  0E00               	movlw	0
  1203  001AB4  6F90               	movwf	(_timerCount_ms+3)& (0+255),b	;volatile
  1204                           
  1205                           ;Timer.c: 69: timerCount_ms[1] = 0;
  1206  001AB6  0E00               	movlw	0
  1207  001AB8  6F91               	movwf	(_timerCount_ms+4)& (0+255),b	;volatile
  1208  001ABA  0E00               	movlw	0
  1209  001ABC  6F92               	movwf	(_timerCount_ms+5)& (0+255),b	;volatile
  1210  001ABE  0E00               	movlw	0
  1211  001AC0  6F93               	movwf	(_timerCount_ms+6)& (0+255),b	;volatile
  1212  001AC2  0E00               	movlw	0
  1213  001AC4  6F94               	movwf	(_timerCount_ms+7)& (0+255),b	;volatile
  1214                           
  1215                           ;Timer.c: 70: timerCount_ms[2] = 0;
  1216  001AC6  0E00               	movlw	0
  1217  001AC8  6F95               	movwf	(_timerCount_ms+8)& (0+255),b	;volatile
  1218  001ACA  0E00               	movlw	0
  1219  001ACC  6F96               	movwf	(_timerCount_ms+9)& (0+255),b	;volatile
  1220  001ACE  0E00               	movlw	0
  1221  001AD0  6F97               	movwf	(_timerCount_ms+10)& (0+255),b	;volatile
  1222  001AD2  0E00               	movlw	0
  1223  001AD4  6F98               	movwf	(_timerCount_ms+11)& (0+255),b	;volatile
  1224                           
  1225                           ;Timer.c: 71: timerCount_ms[3] = 0;
  1226  001AD6  0E00               	movlw	0
  1227  001AD8  6F99               	movwf	(_timerCount_ms+12)& (0+255),b	;volatile
  1228  001ADA  0E00               	movlw	0
  1229  001ADC  6F9A               	movwf	(_timerCount_ms+13)& (0+255),b	;volatile
  1230  001ADE  0E00               	movlw	0
  1231  001AE0  6F9B               	movwf	(_timerCount_ms+14)& (0+255),b	;volatile
  1232  001AE2  0E00               	movlw	0
  1233  001AE4  6F9C               	movwf	(_timerCount_ms+15)& (0+255),b	;volatile
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;Timer.c: 73: INTCONbits.TMR0IF = 0;
  1237  001AE6  94F2               	bcf	intcon,2,c	;volatile
  1238                           
  1239                           ;Timer.c: 75: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  1240  001AE8  0EFC               	movlw	252
  1241  001AEA  6ED7               	movwf	4055,c	;volatile
  1242                           
  1243                           ;Timer.c: 76: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  1244  001AEC  0E18               	movlw	24
  1245  001AEE  6ED6               	movwf	4054,c	;volatile
  1246                           
  1247                           ; BSR set to: 0
  1248  001AF0  0012               	return		;funcret
  1249  001AF2                     __end_of_timerInit:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _mcpUpdatePower *****************
  1258 ;; Defined at:
  1259 ;;		line 203 in file "MCP3909_Interface.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  timerLFout_m    4   39[COMRAM] unsigned long 
  1264 ;;  timerHFout_m    4   43[COMRAM] unsigned long 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         8       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0
  1277 ;;      Totals:         8       0       0       0       0       0       0
  1278 ;;Total ram usage:        8 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    4
  1281 ;; This function calls:
  1282 ;;		_ledGoToggle
  1283 ;;		_powerCalculateWatts
  1284 ;;		_powerReduction
  1285 ;;		_timerGetCount
  1286 ;;		_timerResetCount
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text2
  1293  0009C6                     __ptext2:
  1294                           	opt stack 0
  1295  0009C6                     _mcpUpdatePower:
  1296                           	opt stack 26
  1297                           
  1298                           ;MCP3909_Interface.c: 217: static int meterWattsHF = 0;
  1299                           ;MCP3909_Interface.c: 218: static unsigned long timerHFoutLast_ms = 0;
  1300                           ;MCP3909_Interface.c: 220: static bool oneShotHFout = 0;
  1301                           ;MCP3909_Interface.c: 222: if( PORTAbits.RA3 == 0 )
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;incstack = 0
  1305  0009C6  B680               	btfsc	3968,3,c	;volatile
  1306  0009C8  D03E               	goto	l540
  1307                           
  1308                           ;MCP3909_Interface.c: 223: {
  1309                           ;MCP3909_Interface.c: 224: if( oneShotHFout == 0 )
  1310  0009CA  504A               	movf	mcpUpdatePower@oneShotHFout,w,c
  1311  0009CC  A4D8               	btfss	status,2,c
  1312  0009CE  D03D               	goto	l542
  1313                           
  1314                           ;MCP3909_Interface.c: 225: {
  1315                           ;MCP3909_Interface.c: 227: ledGoToggle( 0 );
  1316  0009D0  0E00               	movlw	0
  1317  0009D2  6E22               	movwf	ledGoToggle@ledNum+1,c
  1318  0009D4  0E00               	movlw	0
  1319  0009D6  6E21               	movwf	ledGoToggle@ledNum,c
  1320  0009D8  ECCB  F010         	call	_ledGoToggle	;wreg free
  1321                           
  1322                           ;MCP3909_Interface.c: 229: oneShotHFout = 1;
  1323  0009DC  0E01               	movlw	1
  1324  0009DE  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1325                           
  1326                           ;MCP3909_Interface.c: 231: unsigned long timerHFout_ms;
  1327                           ;MCP3909_Interface.c: 232: timerHFout_ms = timerGetCount( 0 );
  1328  0009E0  0E00               	movlw	0
  1329  0009E2  6E14               	movwf	timerGetCount@timerIndex+1,c
  1330  0009E4  0E00               	movlw	0
  1331  0009E6  6E13               	movwf	timerGetCount@timerIndex,c
  1332  0009E8  EC85  F00F         	call	_timerGetCount	;wreg free
  1333  0009EC  C013  F02C         	movff	?_timerGetCount,mcpUpdatePower@timerHFout_ms
  1334  0009F0  C014  F02D         	movff	?_timerGetCount+1,mcpUpdatePower@timerHFout_ms+1
  1335  0009F4  C015  F02E         	movff	?_timerGetCount+2,mcpUpdatePower@timerHFout_ms+2
  1336  0009F8  C016  F02F         	movff	?_timerGetCount+3,mcpUpdatePower@timerHFout_ms+3
  1337                           
  1338                           ;MCP3909_Interface.c: 233: timerResetCount( 0 );
  1339  0009FC  0E00               	movlw	0
  1340  0009FE  6E14               	movwf	timerResetCount@timerIndex+1,c
  1341  000A00  0E00               	movlw	0
  1342  000A02  6E13               	movwf	timerResetCount@timerIndex,c
  1343  000A04  ECE8  F00F         	call	_timerResetCount	;wreg free
  1344                           
  1345                           ;MCP3909_Interface.c: 234: timerResetCount( 2 );
  1346  000A08  0E00               	movlw	0
  1347  000A0A  6E14               	movwf	timerResetCount@timerIndex+1,c
  1348  000A0C  0E02               	movlw	2
  1349  000A0E  6E13               	movwf	timerResetCount@timerIndex,c
  1350  000A10  ECE8  F00F         	call	_timerResetCount	;wreg free
  1351                           
  1352                           ;MCP3909_Interface.c: 236: meterWattsHF = powerCalculateWatts( timerHFout_ms, 1 );
  1353  000A14  C02C  F020         	movff	mcpUpdatePower@timerHFout_ms,powerCalculateWatts@timer_ms
  1354  000A18  C02D  F021         	movff	mcpUpdatePower@timerHFout_ms+1,powerCalculateWatts@timer_ms+1
  1355  000A1C  C02E  F022         	movff	mcpUpdatePower@timerHFout_ms+2,powerCalculateWatts@timer_ms+2
  1356  000A20  C02F  F023         	movff	mcpUpdatePower@timerHFout_ms+3,powerCalculateWatts@timer_ms+3
  1357  000A24  0E01               	movlw	1
  1358  000A26  6E24               	movwf	powerCalculateWatts@outHF,c
  1359  000A28  ECA8  F00C         	call	_powerCalculateWatts	;wreg free
  1360  000A2C  C020  F045         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsHF
  1361  000A30  C021  F046         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsHF+1
  1362                           
  1363                           ;MCP3909_Interface.c: 238: timerHFoutLast_ms = timerHFout_ms;
  1364  000A34  C02C  F16A         	movff	mcpUpdatePower@timerHFout_ms,mcpUpdatePower@timerHFoutLast_ms
  1365  000A38  C02D  F16B         	movff	mcpUpdatePower@timerHFout_ms+1,mcpUpdatePower@timerHFoutLast_ms+1
  1366  000A3C  C02E  F16C         	movff	mcpUpdatePower@timerHFout_ms+2,mcpUpdatePower@timerHFoutLast_ms+2
  1367  000A40  C02F  F16D         	movff	mcpUpdatePower@timerHFout_ms+3,mcpUpdatePower@timerHFoutLast_ms+3
  1368                           
  1369                           ;MCP3909_Interface.c: 239: }
  1370                           ;MCP3909_Interface.c: 240: }
  1371  000A44  D002               	goto	l542
  1372  000A46                     l540:
  1373                           
  1374                           ;MCP3909_Interface.c: 241: else
  1375                           ;MCP3909_Interface.c: 242: {
  1376                           ;MCP3909_Interface.c: 243: oneShotHFout = 0;
  1377  000A46  0E00               	movlw	0
  1378  000A48  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1379  000A4A                     l542:
  1380                           
  1381                           ;MCP3909_Interface.c: 244: }
  1382                           ;MCP3909_Interface.c: 248: static int meterWattsLF = 0;
  1383                           ;MCP3909_Interface.c: 250: static bool oneShotLFout = 0;
  1384                           ;MCP3909_Interface.c: 252: if( (PORTAbits.RA2 == 0) || (PORTAbits.RA4 == 0) )
  1385  000A4A  A480               	btfss	3968,2,c	;volatile
  1386  000A4C  D002               	goto	u3350
  1387  000A4E  B880               	btfsc	3968,4,c	;volatile
  1388  000A50  D058               	goto	l547
  1389  000A52                     u3350:
  1390                           
  1391                           ;MCP3909_Interface.c: 253: {
  1392                           ;MCP3909_Interface.c: 254: if( oneShotLFout == 0 )
  1393  000A52  5049               	movf	mcpUpdatePower@oneShotLFout,w,c
  1394  000A54  A4D8               	btfss	status,2,c
  1395  000A56  D057               	goto	l554
  1396                           
  1397                           ;MCP3909_Interface.c: 255: {
  1398                           ;MCP3909_Interface.c: 257: ledGoToggle( 1 );
  1399  000A58  0E00               	movlw	0
  1400  000A5A  6E22               	movwf	ledGoToggle@ledNum+1,c
  1401  000A5C  0E01               	movlw	1
  1402  000A5E  6E21               	movwf	ledGoToggle@ledNum,c
  1403  000A60  ECCB  F010         	call	_ledGoToggle	;wreg free
  1404                           
  1405                           ;MCP3909_Interface.c: 259: oneShotLFout = 1;
  1406  000A64  0E01               	movlw	1
  1407  000A66  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1408                           
  1409                           ;MCP3909_Interface.c: 261: unsigned long timerLFout_ms;
  1410                           ;MCP3909_Interface.c: 262: timerLFout_ms = timerGetCount( 1 );
  1411  000A68  0E00               	movlw	0
  1412  000A6A  6E14               	movwf	timerGetCount@timerIndex+1,c
  1413  000A6C  0E01               	movlw	1
  1414  000A6E  6E13               	movwf	timerGetCount@timerIndex,c
  1415  000A70  EC85  F00F         	call	_timerGetCount	;wreg free
  1416  000A74  C013  F028         	movff	?_timerGetCount,mcpUpdatePower@timerLFout_ms
  1417  000A78  C014  F029         	movff	?_timerGetCount+1,mcpUpdatePower@timerLFout_ms+1
  1418  000A7C  C015  F02A         	movff	?_timerGetCount+2,mcpUpdatePower@timerLFout_ms+2
  1419  000A80  C016  F02B         	movff	?_timerGetCount+3,mcpUpdatePower@timerLFout_ms+3
  1420                           
  1421                           ;MCP3909_Interface.c: 263: timerResetCount( 1 );
  1422  000A84  0E00               	movlw	0
  1423  000A86  6E14               	movwf	timerResetCount@timerIndex+1,c
  1424  000A88  0E01               	movlw	1
  1425  000A8A  6E13               	movwf	timerResetCount@timerIndex,c
  1426  000A8C  ECE8  F00F         	call	_timerResetCount	;wreg free
  1427                           
  1428                           ;MCP3909_Interface.c: 264: timerResetCount( 2 );
  1429  000A90  0E00               	movlw	0
  1430  000A92  6E14               	movwf	timerResetCount@timerIndex+1,c
  1431  000A94  0E02               	movlw	2
  1432  000A96  6E13               	movwf	timerResetCount@timerIndex,c
  1433  000A98  ECE8  F00F         	call	_timerResetCount	;wreg free
  1434                           
  1435                           ;MCP3909_Interface.c: 267: meterWattsLF = powerCalculateWatts( timerLFout_ms, 0 );
  1436  000A9C  C028  F020         	movff	mcpUpdatePower@timerLFout_ms,powerCalculateWatts@timer_ms
  1437  000AA0  C029  F021         	movff	mcpUpdatePower@timerLFout_ms+1,powerCalculateWatts@timer_ms+1
  1438  000AA4  C02A  F022         	movff	mcpUpdatePower@timerLFout_ms+2,powerCalculateWatts@timer_ms+2
  1439  000AA8  C02B  F023         	movff	mcpUpdatePower@timerLFout_ms+3,powerCalculateWatts@timer_ms+3
  1440  000AAC  0E00               	movlw	0
  1441  000AAE  6E24               	movwf	powerCalculateWatts@outHF,c
  1442  000AB0  ECA8  F00C         	call	_powerCalculateWatts	;wreg free
  1443  000AB4  C020  F043         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsLF
  1444  000AB8  C021  F044         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsLF+1
  1445                           
  1446                           ;MCP3909_Interface.c: 270: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1447  000ABC  0E80               	movlw	128
  1448  000ABE  0101               	movlb	1	; () banked
  1449  000AC0  276E               	addwf	_meterEnergyUsedPart& (0+255),f,b
  1450  000AC2  0E97               	movlw	151
  1451  000AC4  236F               	addwfc	(_meterEnergyUsedPart+1)& (0+255),f,b
  1452  000AC6  0E06               	movlw	6
  1453  000AC8  2370               	addwfc	(_meterEnergyUsedPart+2)& (0+255),f,b
  1454  000ACA  0E00               	movlw	0
  1455  000ACC  2371               	addwfc	(_meterEnergyUsedPart+3)& (0+255),f,b
  1456                           
  1457                           ;MCP3909_Interface.c: 271: while( meterEnergyUsedPart > 100000 )
  1458  000ACE  D00E               	goto	l551
  1459  000AD0                     l4288:
  1460                           
  1461                           ; BSR set to: 1
  1462                           ;MCP3909_Interface.c: 272: {
  1463                           ;MCP3909_Interface.c: 273: meterEnergyUsed_global++;
  1464  000AD0  0E01               	movlw	1
  1465  000AD2  263D               	addwf	_meterEnergyUsed_global,f,c
  1466  000AD4  0E00               	movlw	0
  1467  000AD6  223E               	addwfc	_meterEnergyUsed_global+1,f,c
  1468  000AD8  223F               	addwfc	_meterEnergyUsed_global+2,f,c
  1469  000ADA  2240               	addwfc	_meterEnergyUsed_global+3,f,c
  1470                           
  1471                           ;MCP3909_Interface.c: 274: meterEnergyUsedPart -= 100000;
  1472  000ADC  0EA0               	movlw	160
  1473  000ADE  5F6E               	subwf	_meterEnergyUsedPart& (0+255),f,b
  1474  000AE0  0E86               	movlw	134
  1475  000AE2  5B6F               	subwfb	(_meterEnergyUsedPart+1)& (0+255),f,b
  1476  000AE4  0E01               	movlw	1
  1477  000AE6  5B70               	subwfb	(_meterEnergyUsedPart+2)& (0+255),f,b
  1478  000AE8  0E00               	movlw	0
  1479  000AEA  5B71               	subwfb	(_meterEnergyUsedPart+3)& (0+255),f,b
  1480  000AEC                     l551:
  1481                           
  1482                           ; BSR set to: 1
  1483  000AEC  5171               	movf	(_meterEnergyUsedPart+3)& (0+255),w,b
  1484  000AEE  E1F0               	bnz	l4288
  1485  000AF0  0EA1               	movlw	161
  1486  000AF2  5D6E               	subwf	_meterEnergyUsedPart& (0+255),w,b
  1487  000AF4  0E86               	movlw	134
  1488  000AF6  596F               	subwfb	(_meterEnergyUsedPart+1)& (0+255),w,b
  1489  000AF8  0E01               	movlw	1
  1490  000AFA  5970               	subwfb	(_meterEnergyUsedPart+2)& (0+255),w,b
  1491  000AFC  A0D8               	btfss	status,0,c
  1492  000AFE  D003               	goto	l554
  1493  000B00  D7E7               	goto	l552
  1494  000B02                     l547:
  1495                           
  1496                           ;MCP3909_Interface.c: 278: else
  1497                           ;MCP3909_Interface.c: 279: {
  1498                           ;MCP3909_Interface.c: 280: oneShotLFout = 0;
  1499                           
  1500                           ; BSR set to: 1
  1501  000B02  0E00               	movlw	0
  1502  000B04  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1503  000B06                     l554:
  1504                           
  1505                           ;MCP3909_Interface.c: 281: }
  1506                           ;MCP3909_Interface.c: 291: if( meterWattsLF > 500 )
  1507  000B06  BE44               	btfsc	mcpUpdatePower@meterWattsLF+1,7,c
  1508  000B08  D00B               	goto	l555
  1509  000B0A  0EF5               	movlw	245
  1510  000B0C  5C43               	subwf	mcpUpdatePower@meterWattsLF,w,c
  1511  000B0E  0E01               	movlw	1
  1512  000B10  5844               	subwfb	mcpUpdatePower@meterWattsLF+1,w,c
  1513  000B12  A0D8               	btfss	status,0,c
  1514  000B14  D005               	goto	l555
  1515                           
  1516                           ;MCP3909_Interface.c: 292: {
  1517                           ;MCP3909_Interface.c: 293: meterWatts_global = meterWattsLF;
  1518  000B16  C043  F09D         	movff	mcpUpdatePower@meterWattsLF,_meterWatts_global
  1519  000B1A  C044  F09E         	movff	mcpUpdatePower@meterWattsLF+1,_meterWatts_global+1
  1520  000B1E  D004               	goto	L2
  1521  000B20                     l555:
  1522                           
  1523                           ;MCP3909_Interface.c: 295: else
  1524                           ;MCP3909_Interface.c: 296: {
  1525                           ;MCP3909_Interface.c: 297: meterWatts_global = meterWattsHF;
  1526                           
  1527                           ; BSR set to: 0
  1528  000B20  C045  F09D         	movff	mcpUpdatePower@meterWattsHF,_meterWatts_global
  1529  000B24  C046  F09E         	movff	mcpUpdatePower@meterWattsHF+1,_meterWatts_global+1
  1530  000B28                     L2:
  1531  000B28  0100               	movlb	0	; () banked
  1532  000B2A  0E00               	movlw	0
  1533  000B2C  BF9E               	btfsc	(_meterWatts_global+1)& (0+255),7,b
  1534  000B2E  0EFF               	movlw	-1
  1535  000B30  6F9F               	movwf	(_meterWatts_global+2)& (0+255),b
  1536  000B32  6FA0               	movwf	(_meterWatts_global+3)& (0+255),b
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;MCP3909_Interface.c: 298: }
  1540                           ;MCP3909_Interface.c: 301: powerReduction( timerHFoutLast_ms );
  1541                           
  1542                           ; BSR set to: 0
  1543  000B34  C16A  F020         	movff	mcpUpdatePower@timerHFoutLast_ms,powerReduction@timerLast_ms
  1544  000B38  C16B  F021         	movff	mcpUpdatePower@timerHFoutLast_ms+1,powerReduction@timerLast_ms+1
  1545  000B3C  C16C  F022         	movff	mcpUpdatePower@timerHFoutLast_ms+2,powerReduction@timerLast_ms+2
  1546  000B40  C16D  F023         	movff	mcpUpdatePower@timerHFoutLast_ms+3,powerReduction@timerLast_ms+3
  1547  000B44  EC0B  F00B         	call	_powerReduction	;wreg free
  1548  000B48  0012               	return	
  1549  000B4A                     __end_of_mcpUpdatePower:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           intcon	equ	0xFF2
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           status	equ	0xFD8
  1556                           
  1557 ;; *************** function _timerResetCount *****************
  1558 ;; Defined at:
  1559 ;;		line 100 in file "Timer.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  timerIndex      2   18[COMRAM] int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1573 ;;      Params:         2       0       0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0
  1575 ;;      Temps:          2       0       0       0       0       0       0
  1576 ;;      Totals:         4       0       0       0       0       0       0
  1577 ;;Total ram usage:        4 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_mcpUpdatePower
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text3
  1588  001FD0                     __ptext3:
  1589                           	opt stack 0
  1590  001FD0                     _timerResetCount:
  1591                           	opt stack 28
  1592                           
  1593                           ;Timer.c: 102: timerCount_ms[timerIndex] = 0;
  1594                           
  1595                           ;incstack = 0
  1596  001FD0  0E8D               	movlw	low _timerCount_ms
  1597  001FD2  6E15               	movwf	??_timerResetCount& (0+255),c
  1598  001FD4  0E00               	movlw	high _timerCount_ms
  1599  001FD6  6E16               	movwf	(??_timerResetCount+1)& (0+255),c
  1600  001FD8  90D8               	bcf	status,0,c
  1601  001FDA  3413               	rlcf	timerResetCount@timerIndex,w,c
  1602  001FDC  6ED9               	movwf	fsr2l,c
  1603  001FDE  3414               	rlcf	timerResetCount@timerIndex+1,w,c
  1604  001FE0  6EDA               	movwf	fsr2h,c
  1605  001FE2  90D8               	bcf	status,0,c
  1606  001FE4  36D9               	rlcf	fsr2l,f,c
  1607  001FE6  36DA               	rlcf	fsr2h,f,c
  1608  001FE8  5015               	movf	??_timerResetCount,w,c
  1609  001FEA  26D9               	addwf	fsr2l,f,c
  1610  001FEC  5016               	movf	??_timerResetCount+1,w,c
  1611  001FEE  22DA               	addwfc	fsr2h,f,c
  1612  001FF0  6ADE               	clrf	postinc2,c
  1613  001FF2  6ADE               	clrf	postinc2,c
  1614  001FF4  6ADE               	clrf	postinc2,c
  1615  001FF6  6ADD               	clrf	postdec2,c
  1616  001FF8  0012               	return	
  1617  001FFA                     __end_of_timerResetCount:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           intcon	equ	0xFF2
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           postinc2	equ	0xFDE
  1624                           postdec2	equ	0xFDD
  1625                           fsr2h	equ	0xFDA
  1626                           fsr2l	equ	0xFD9
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _powerReduction *****************
  1630 ;; Defined at:
  1631 ;;		line 326 in file "MCP3909_Interface.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  timerLast_ms    4   31[COMRAM] unsigned long 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  timerReduce_    4   35[COMRAM] unsigned long 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1645 ;;      Params:         4       0       0       0       0       0       0
  1646 ;;      Locals:         4       0       0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0
  1648 ;;      Totals:         8       0       0       0       0       0       0
  1649 ;;Total ram usage:        8 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		___lldiv
  1654 ;;		_timerGetCount
  1655 ;; This function is called by:
  1656 ;;		_mcpUpdatePower
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text4
  1661  001616                     __ptext4:
  1662                           	opt stack 0
  1663  001616                     _powerReduction:
  1664                           	opt stack 27
  1665                           
  1666                           ;MCP3909_Interface.c: 335: unsigned long timerReduce_ms;
  1667                           ;MCP3909_Interface.c: 336: static int countReduce = 0;
  1668                           ;MCP3909_Interface.c: 338: timerReduce_ms = timerGetCount( 2 );
  1669                           
  1670                           ;incstack = 0
  1671  001616  0E00               	movlw	0
  1672  001618  6E14               	movwf	timerGetCount@timerIndex+1,c
  1673  00161A  0E02               	movlw	2
  1674  00161C  6E13               	movwf	timerGetCount@timerIndex,c
  1675  00161E  EC85  F00F         	call	_timerGetCount	;wreg free
  1676  001622  C013  F024         	movff	?_timerGetCount,powerReduction@timerReduce_ms
  1677  001626  C014  F025         	movff	?_timerGetCount+1,powerReduction@timerReduce_ms+1
  1678  00162A  C015  F026         	movff	?_timerGetCount+2,powerReduction@timerReduce_ms+2
  1679  00162E  C016  F027         	movff	?_timerGetCount+3,powerReduction@timerReduce_ms+3
  1680                           
  1681                           ;MCP3909_Interface.c: 340: if( (timerReduce_ms > 90000) || (timerLast_ms == 0) )
  1682  001632  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1683  001634  E10E               	bnz	l4218
  1684  001636  0E91               	movlw	145
  1685  001638  5C24               	subwf	powerReduction@timerReduce_ms,w,c
  1686  00163A  0E5F               	movlw	95
  1687  00163C  5825               	subwfb	powerReduction@timerReduce_ms+1,w,c
  1688  00163E  0E01               	movlw	1
  1689  001640  5826               	subwfb	powerReduction@timerReduce_ms+2,w,c
  1690  001642  B0D8               	btfsc	status,0,c
  1691  001644  D006               	goto	u3300
  1692  001646  5020               	movf	powerReduction@timerLast_ms,w,c
  1693  001648  1021               	iorwf	powerReduction@timerLast_ms+1,w,c
  1694  00164A  1022               	iorwf	powerReduction@timerLast_ms+2,w,c
  1695  00164C  1023               	iorwf	powerReduction@timerLast_ms+3,w,c
  1696  00164E  A4D8               	btfss	status,2,c
  1697  001650  D00A               	goto	l567
  1698  001652                     u3300:
  1699  001652                     l4218:
  1700                           
  1701                           ;MCP3909_Interface.c: 341: {
  1702                           ;MCP3909_Interface.c: 342: meterWatts_global = 0;
  1703  001652  0E00               	movlw	0
  1704  001654  0100               	movlb	0	; () banked
  1705  001656  6F9D               	movwf	_meterWatts_global& (0+255),b
  1706  001658  0E00               	movlw	0
  1707  00165A  6F9E               	movwf	(_meterWatts_global+1)& (0+255),b
  1708  00165C  0E00               	movlw	0
  1709  00165E  6F9F               	movwf	(_meterWatts_global+2)& (0+255),b
  1710  001660  0E00               	movlw	0
  1711  001662  6FA0               	movwf	(_meterWatts_global+3)& (0+255),b
  1712                           
  1713                           ;MCP3909_Interface.c: 343: }
  1714  001664  0012               	return	
  1715  001666                     l567:
  1716                           
  1717                           ;MCP3909_Interface.c: 344: else if( timerReduce_ms > timerLast_ms )
  1718                           
  1719                           ; BSR set to: 0
  1720  001666  5024               	movf	powerReduction@timerReduce_ms,w,c
  1721  001668  5C20               	subwf	powerReduction@timerLast_ms,w,c
  1722  00166A  5025               	movf	powerReduction@timerReduce_ms+1,w,c
  1723  00166C  5821               	subwfb	powerReduction@timerLast_ms+1,w,c
  1724  00166E  5026               	movf	powerReduction@timerReduce_ms+2,w,c
  1725  001670  5822               	subwfb	powerReduction@timerLast_ms+2,w,c
  1726  001672  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1727  001674  5823               	subwfb	powerReduction@timerLast_ms+3,w,c
  1728  001676  B0D8               	btfsc	status,0,c
  1729  001678  0012               	return	
  1730                           
  1731                           ;MCP3909_Interface.c: 345: {
  1732                           ;MCP3909_Interface.c: 346: meterWatts_global = (((((unsigned long) 27000 * (unsigned lon
      +                          g) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (uns
      +                          igned long) timerReduce_ms;
  1733  00167A  0EE0               	movlw	224
  1734  00167C  6E13               	movwf	___lldiv@dividend,c
  1735  00167E  0ED4               	movlw	212
  1736  001680  6E14               	movwf	___lldiv@dividend+1,c
  1737  001682  0E0E               	movlw	14
  1738  001684  6E15               	movwf	___lldiv@dividend+2,c
  1739  001686  0E00               	movlw	0
  1740  001688  6E16               	movwf	___lldiv@dividend+3,c
  1741  00168A  C024  F017         	movff	powerReduction@timerReduce_ms,___lldiv@divisor
  1742  00168E  C025  F018         	movff	powerReduction@timerReduce_ms+1,___lldiv@divisor+1
  1743  001692  C026  F019         	movff	powerReduction@timerReduce_ms+2,___lldiv@divisor+2
  1744  001696  C027  F01A         	movff	powerReduction@timerReduce_ms+3,___lldiv@divisor+3
  1745  00169A  EC2C  F00C         	call	___lldiv	;wreg free
  1746  00169E  C013  F09D         	movff	?___lldiv,_meterWatts_global
  1747  0016A2  C014  F09E         	movff	?___lldiv+1,_meterWatts_global+1
  1748  0016A6  C015  F09F         	movff	?___lldiv+2,_meterWatts_global+2
  1749  0016AA  C016  F0A0         	movff	?___lldiv+3,_meterWatts_global+3
  1750  0016AE  0012               	return	
  1751  0016B0                     __end_of_powerReduction:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           intcon	equ	0xFF2
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postinc2	equ	0xFDE
  1758                           postdec2	equ	0xFDD
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _timerGetCount *****************
  1764 ;; Defined at:
  1765 ;;		line 95 in file "Timer.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  timerIndex      2   18[COMRAM] int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  4   18[COMRAM] unsigned long 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         4       0       0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0
  1781 ;;      Temps:          2       0       0       0       0       0       0
  1782 ;;      Totals:         6       0       0       0       0       0       0
  1783 ;;Total ram usage:        6 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;;		_mcpUpdatePower
  1791 ;;		_powerReduction
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text5
  1796  001F0A                     __ptext5:
  1797                           	opt stack 0
  1798  001F0A                     _timerGetCount:
  1799                           	opt stack 29
  1800                           
  1801                           ;Timer.c: 97: return timerCount_ms[timerIndex];
  1802                           
  1803                           ;incstack = 0
  1804  001F0A  0E8D               	movlw	low _timerCount_ms
  1805  001F0C  6E17               	movwf	??_timerGetCount& (0+255),c
  1806  001F0E  0E00               	movlw	high _timerCount_ms
  1807  001F10  6E18               	movwf	(??_timerGetCount+1)& (0+255),c
  1808  001F12  90D8               	bcf	status,0,c
  1809  001F14  3413               	rlcf	timerGetCount@timerIndex,w,c
  1810  001F16  6ED9               	movwf	fsr2l,c
  1811  001F18  3414               	rlcf	timerGetCount@timerIndex+1,w,c
  1812  001F1A  6EDA               	movwf	fsr2h,c
  1813  001F1C  90D8               	bcf	status,0,c
  1814  001F1E  36D9               	rlcf	fsr2l,f,c
  1815  001F20  36DA               	rlcf	fsr2h,f,c
  1816  001F22  5017               	movf	??_timerGetCount,w,c
  1817  001F24  26D9               	addwf	fsr2l,f,c
  1818  001F26  5018               	movf	??_timerGetCount+1,w,c
  1819  001F28  22DA               	addwfc	fsr2h,f,c
  1820  001F2A  CFDE F013          	movff	postinc2,?_timerGetCount
  1821  001F2E  CFDE F014          	movff	postinc2,?_timerGetCount+1
  1822  001F32  CFDE F015          	movff	postinc2,?_timerGetCount+2
  1823  001F36  CFDE F016          	movff	postinc2,?_timerGetCount+3
  1824  001F3A  0012               	return	
  1825  001F3C                     __end_of_timerGetCount:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           intcon	equ	0xFF2
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postinc2	equ	0xFDE
  1832                           postdec2	equ	0xFDD
  1833                           fsr2h	equ	0xFDA
  1834                           fsr2l	equ	0xFD9
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function _powerCalculateWatts *****************
  1838 ;; Defined at:
  1839 ;;		line 305 in file "MCP3909_Interface.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  timer_ms        4   31[COMRAM] unsigned long 
  1842 ;;  outHF           1   35[COMRAM] unsigned char 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  calcWatts       2   36[COMRAM] int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4   31[COMRAM] unsigned long 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         5       0       0       0       0       0       0
  1855 ;;      Locals:         2       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         7       0       0       0       0       0       0
  1858 ;;Total ram usage:        7 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    2
  1861 ;; This function calls:
  1862 ;;		___lldiv
  1863 ;; This function is called by:
  1864 ;;		_mcpUpdatePower
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text6
  1869  001950                     __ptext6:
  1870                           	opt stack 0
  1871  001950                     _powerCalculateWatts:
  1872                           	opt stack 27
  1873                           
  1874                           ;MCP3909_Interface.c: 311: int calcWatts;
  1875                           ;MCP3909_Interface.c: 313: if( outHF == 1 )
  1876                           
  1877                           ;incstack = 0
  1878  001950  0424               	decf	powerCalculateWatts@outHF,w,c
  1879  001952  A4D8               	btfss	status,2,c
  1880  001954  D013               	goto	l560
  1881                           
  1882                           ;MCP3909_Interface.c: 314: {
  1883                           ;MCP3909_Interface.c: 316: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1884  001956  0EE0               	movlw	224
  1885  001958  6E13               	movwf	___lldiv@dividend,c
  1886  00195A  0ED4               	movlw	212
  1887  00195C  6E14               	movwf	___lldiv@dividend+1,c
  1888  00195E  0E0E               	movlw	14
  1889  001960  6E15               	movwf	___lldiv@dividend+2,c
  1890  001962  0E00               	movlw	0
  1891  001964  6E16               	movwf	___lldiv@dividend+3,c
  1892  001966  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1893  00196A  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1894  00196E  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1895  001972  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1896  001976  EC2C  F00C         	call	___lldiv	;wreg free
  1897  00197A  D012               	goto	L3
  1898  00197C                     l560:
  1899                           
  1900                           ;MCP3909_Interface.c: 318: else
  1901                           ;MCP3909_Interface.c: 319: {
  1902                           ;MCP3909_Interface.c: 321: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1903  00197C  0EE0               	movlw	224
  1904  00197E  6E13               	movwf	___lldiv@dividend,c
  1905  001980  0ED4               	movlw	212
  1906  001982  6E14               	movwf	___lldiv@dividend+1,c
  1907  001984  0E0E               	movlw	14
  1908  001986  6E15               	movwf	___lldiv@dividend+2,c
  1909  001988  0E00               	movlw	0
  1910  00198A  6E16               	movwf	___lldiv@dividend+3,c
  1911  00198C  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1912  001990  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1913  001994  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1914  001998  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1915  00199C  EC2C  F00C         	call	___lldiv	;wreg free
  1916  0019A0                     L3:
  1917  0019A0  C013  F025         	movff	?___lldiv,powerCalculateWatts@calcWatts
  1918  0019A4  C014  F026         	movff	?___lldiv+1,powerCalculateWatts@calcWatts+1
  1919                           
  1920                           ;MCP3909_Interface.c: 322: }
  1921                           ;MCP3909_Interface.c: 324: return calcWatts;
  1922  0019A8  C025  F020         	movff	powerCalculateWatts@calcWatts,?_powerCalculateWatts
  1923  0019AC  C026  F021         	movff	powerCalculateWatts@calcWatts+1,?_powerCalculateWatts+1
  1924  0019B0  0E00               	movlw	0
  1925  0019B2  BE21               	btfsc	?_powerCalculateWatts+1,7,c
  1926  0019B4  0EFF               	movlw	-1
  1927  0019B6  6E22               	movwf	?_powerCalculateWatts+2,c
  1928  0019B8  6E23               	movwf	?_powerCalculateWatts+3,c
  1929  0019BA  0012               	return	
  1930  0019BC                     __end_of_powerCalculateWatts:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           intcon	equ	0xFF2
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           postinc2	equ	0xFDE
  1937                           postdec2	equ	0xFDD
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _ledGoToggle *****************
  1943 ;; Defined at:
  1944 ;;		line 286 in file "LEDControl.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  ledNum          2   32[COMRAM] int 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         2       0       0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         2       0       0       0       0       0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    3
  1965 ;; This function calls:
  1966 ;;		_ledToggle
  1967 ;; This function is called by:
  1968 ;;		_mcpUpdatePower
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text7
  1973  002196                     __ptext7:
  1974                           	opt stack 0
  1975  002196                     _ledGoToggle:
  1976                           	opt stack 26
  1977                           
  1978                           ;LEDControl.c: 288: if( 1 != 1 )
  1979                           
  1980                           ;incstack = 0
  1981  002196  0012               	return	
  1982  002198                     __end_of_ledGoToggle:
  1983                           	opt stack 0
  1984                           tblptru	equ	0xFF8
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _mcpInit *****************
  1995 ;; Defined at:
  1996 ;;		line 154 in file "MCP3909_Interface.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2010 ;;      Params:         0       0       0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		_delayMS10
  2019 ;;		_mcpInitF
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text8
  2026  001FFA                     __ptext8:
  2027                           	opt stack 0
  2028  001FFA                     _mcpInit:
  2029                           	opt stack 27
  2030                           
  2031                           ;MCP3909_Interface.c: 156: TRISAbits.TRISA3 = 1;
  2032                           
  2033                           ;incstack = 0
  2034  001FFA  8692               	bsf	3986,3,c	;volatile
  2035                           
  2036                           ;MCP3909_Interface.c: 157: TRISAbits.TRISA2 = 1;
  2037  001FFC  8492               	bsf	3986,2,c	;volatile
  2038                           
  2039                           ;MCP3909_Interface.c: 158: TRISAbits.TRISA4 = 1;
  2040  001FFE  8892               	bsf	3986,4,c	;volatile
  2041                           
  2042                           ;MCP3909_Interface.c: 160: meterEnergyUsedPart = 0;
  2043  002000  0E00               	movlw	0
  2044  002002  0101               	movlb	1	; () banked
  2045  002004  6F6E               	movwf	_meterEnergyUsedPart& (0+255),b
  2046  002006  0E00               	movlw	0
  2047  002008  6F6F               	movwf	(_meterEnergyUsedPart+1)& (0+255),b
  2048  00200A  0E00               	movlw	0
  2049  00200C  6F70               	movwf	(_meterEnergyUsedPart+2)& (0+255),b
  2050  00200E  0E00               	movlw	0
  2051  002010  6F71               	movwf	(_meterEnergyUsedPart+3)& (0+255),b
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;MCP3909_Interface.c: 162: delayMS10( 100 );
  2055  002012  0E00               	movlw	0
  2056  002014  6E14               	movwf	delayMS10@count+1,c
  2057  002016  0E64               	movlw	100
  2058  002018  6E13               	movwf	delayMS10@count,c
  2059  00201A  EC9E  F00F         	call	_delayMS10	;wreg free
  2060                           
  2061                           ;MCP3909_Interface.c: 164: mcpInitF( );
  2062  00201E  ECDE  F00C         	call	_mcpInitF	;wreg free
  2063  002022  0012               	return	
  2064  002024                     __end_of_mcpInit:
  2065                           	opt stack 0
  2066                           tblptru	equ	0xFF8
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function _mcpInitF *****************
  2077 ;; Defined at:
  2078 ;;		line 168 in file "MCP3909_Interface.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2092 ;;      Params:         0       0       0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0
  2094 ;;      Temps:          1       0       0       0       0       0       0
  2095 ;;      Totals:         1       0       0       0       0       0       0
  2096 ;;Total ram usage:        1 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    2
  2099 ;; This function calls:
  2100 ;;		_delayMS10
  2101 ;; This function is called by:
  2102 ;;		_mcpInit
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text9
  2107  0019BC                     __ptext9:
  2108                           	opt stack 0
  2109  0019BC                     _mcpInitF:
  2110                           	opt stack 27
  2111                           
  2112                           ;MCP3909_Interface.c: 173: TRISCbits.TRISC6 = 0;
  2113                           
  2114                           ;incstack = 0
  2115  0019BC  9C94               	bcf	3988,6,c	;volatile
  2116                           
  2117                           ;MCP3909_Interface.c: 174: TRISCbits.TRISC7 = 0;
  2118  0019BE  9E94               	bcf	3988,7,c	;volatile
  2119                           
  2120                           ;MCP3909_Interface.c: 175: TRISCbits.TRISC4 = 0;
  2121  0019C0  9894               	bcf	3988,4,c	;volatile
  2122                           
  2123                           ;MCP3909_Interface.c: 176: TRISCbits.TRISC3 = 0;
  2124  0019C2  9694               	bcf	3988,3,c	;volatile
  2125                           
  2126                           ;MCP3909_Interface.c: 179: LATCbits.LC7 = 0;
  2127  0019C4  9E8B               	bcf	3979,7,c	;volatile
  2128                           
  2129                           ;MCP3909_Interface.c: 180: LATCbits.LC4 = 0;
  2130  0019C6  988B               	bcf	3979,4,c	;volatile
  2131                           
  2132                           ;MCP3909_Interface.c: 181: LATCbits.LC4 = 0;
  2133  0019C8  988B               	bcf	3979,4,c	;volatile
  2134                           
  2135                           ;MCP3909_Interface.c: 183: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2136  0019CA  0E1A               	movlw	26
  2137  0019CC  6E18               	movwf	??_mcpInitF& (0+255),c
  2138  0019CE  0EF8               	movlw	248
  2139  0019D0                     u3457:
  2140  0019D0  2EE8               	decfsz	wreg,f,c
  2141  0019D2  D7FE               	bra	u3457
  2142  0019D4  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2143  0019D6  D7FC               	bra	u3457
  2144  0019D8  D000               	nop2	
  2145                           
  2146                           ;MCP3909_Interface.c: 184: LATCbits.LATC6 = 0;
  2147  0019DA  9C8B               	bcf	3979,6,c	;volatile
  2148                           
  2149                           ;MCP3909_Interface.c: 185: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2150  0019DC  0E1A               	movlw	26
  2151  0019DE  6E18               	movwf	??_mcpInitF& (0+255),c
  2152  0019E0  0EF8               	movlw	248
  2153  0019E2                     u3467:
  2154  0019E2  2EE8               	decfsz	wreg,f,c
  2155  0019E4  D7FE               	bra	u3467
  2156  0019E6  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2157  0019E8  D7FC               	bra	u3467
  2158  0019EA  D000               	nop2	
  2159                           
  2160                           ;MCP3909_Interface.c: 187: LATCbits.LC7 = 0;
  2161  0019EC  9E8B               	bcf	3979,7,c	;volatile
  2162                           
  2163                           ;MCP3909_Interface.c: 188: LATCbits.LC4 = 0;
  2164  0019EE  988B               	bcf	3979,4,c	;volatile
  2165                           
  2166                           ;MCP3909_Interface.c: 189: LATCbits.LC4 = 0;
  2167  0019F0  988B               	bcf	3979,4,c	;volatile
  2168                           
  2169                           ;MCP3909_Interface.c: 191: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2170  0019F2  0E1A               	movlw	26
  2171  0019F4  6E18               	movwf	??_mcpInitF& (0+255),c
  2172  0019F6  0EF8               	movlw	248
  2173  0019F8                     u3477:
  2174  0019F8  2EE8               	decfsz	wreg,f,c
  2175  0019FA  D7FE               	bra	u3477
  2176  0019FC  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2177  0019FE  D7FC               	bra	u3477
  2178  001A00  D000               	nop2	
  2179                           
  2180                           ;MCP3909_Interface.c: 193: LATCbits.LC7 = 1;
  2181  001A02  8E8B               	bsf	3979,7,c	;volatile
  2182                           
  2183                           ;MCP3909_Interface.c: 194: LATCbits.LC4 = 1;
  2184  001A04  888B               	bsf	3979,4,c	;volatile
  2185                           
  2186                           ;MCP3909_Interface.c: 195: LATCbits.LC4 = 1;
  2187  001A06  888B               	bsf	3979,4,c	;volatile
  2188                           
  2189                           ;MCP3909_Interface.c: 197: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2190  001A08  0E1A               	movlw	26
  2191  001A0A  6E18               	movwf	??_mcpInitF& (0+255),c
  2192  001A0C  0EF8               	movlw	248
  2193  001A0E                     u3487:
  2194  001A0E  2EE8               	decfsz	wreg,f,c
  2195  001A10  D7FE               	bra	u3487
  2196  001A12  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2197  001A14  D7FC               	bra	u3487
  2198  001A16  D000               	nop2	
  2199                           
  2200                           ;MCP3909_Interface.c: 198: LATCbits.LATC6 = 1;
  2201  001A18  8C8B               	bsf	3979,6,c	;volatile
  2202                           
  2203                           ;MCP3909_Interface.c: 199: delayMS10( 10 );
  2204  001A1A  0E00               	movlw	0
  2205  001A1C  6E14               	movwf	delayMS10@count+1,c
  2206  001A1E  0E0A               	movlw	10
  2207  001A20  6E13               	movwf	delayMS10@count,c
  2208  001A22  EC9E  F00F         	call	_delayMS10	;wreg free
  2209  001A26  0012               	return	
  2210  001A28                     __end_of_mcpInitF:
  2211                           	opt stack 0
  2212                           tblptru	equ	0xFF8
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           postinc2	equ	0xFDE
  2217                           postdec2	equ	0xFDD
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _ledTestToggle *****************
  2223 ;; Defined at:
  2224 ;;		line 276 in file "LEDControl.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  ledNum          2   32[COMRAM] int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2238 ;;      Params:         2       0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0
  2241 ;;      Totals:         2       0       0       0       0       0       0
  2242 ;;Total ram usage:        2 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    3
  2245 ;; This function calls:
  2246 ;;		_ledToggle
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text10
  2253  00216C                     __ptext10:
  2254                           	opt stack 0
  2255  00216C                     _ledTestToggle:
  2256                           	opt stack 27
  2257                           
  2258                           ;LEDControl.c: 279: {
  2259                           ;LEDControl.c: 280: ledToggle( ledNum );
  2260                           
  2261                           ;incstack = 0
  2262  00216C  C021  F019         	movff	ledTestToggle@ledNum,ledToggle@ledNum
  2263  002170  C022  F01A         	movff	ledTestToggle@ledNum+1,ledToggle@ledNum+1
  2264  002174  EC6D  F00C         	call	_ledToggle	;wreg free
  2265  002178  0012               	return	
  2266  00217A                     __end_of_ledTestToggle:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           intcon	equ	0xFF2
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           postinc2	equ	0xFDE
  2273                           postdec2	equ	0xFDD
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _ledToggle *****************
  2279 ;; Defined at:
  2280 ;;		line 243 in file "LEDControl.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  ledNum          2   24[COMRAM] int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  getValue        2   30[COMRAM] int 
  2285 ;;  setValue        2   28[COMRAM] int 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         2       0       0       0       0       0       0
  2296 ;;      Locals:         4       0       0       0       0       0       0
  2297 ;;      Temps:          2       0       0       0       0       0       0
  2298 ;;      Totals:         8       0       0       0       0       0       0
  2299 ;;Total ram usage:        8 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		_ledSet
  2304 ;; This function is called by:
  2305 ;;		_ledTestToggle
  2306 ;;		_ledGoToggle
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text11
  2311  0018DA                     __ptext11:
  2312                           	opt stack 0
  2313  0018DA                     _ledToggle:
  2314                           	opt stack 26
  2315                           
  2316                           ;LEDControl.c: 246: int getValue;
  2317                           ;LEDControl.c: 247: int setValue;
  2318                           ;LEDControl.c: 249: switch( ledNum )
  2319                           
  2320                           ;incstack = 0
  2321  0018DA  D011               	goto	l85
  2322  0018DC                     
  2323                           ;LEDControl.c: 252: getValue = PORTBbits.RB4;
  2324  0018DC  A881               	btfss	3969,4,c	;volatile
  2325  0018DE  D00D               	goto	u2000
  2326  0018E0  D009               	goto	u2001
  2327  0018E2                     u1988:
  2328  0018E2  501B               	movf	??_ledToggle,w,c
  2329  0018E4  6E1F               	movwf	ledToggle@getValue,c
  2330  0018E6  6A20               	clrf	ledToggle@getValue+1,c
  2331                           
  2332                           ;LEDControl.c: 253: break;
  2333  0018E8  D01C               	goto	l87
  2334  0018EA                     
  2335                           ;LEDControl.c: 255: getValue = PORTCbits.RC1;
  2336  0018EA  A282               	btfss	3970,1,c	;volatile
  2337  0018EC  D006               	goto	u2000
  2338  0018EE  D002               	goto	u2001
  2339  0018F0                     
  2340                           ;LEDControl.c: 258: getValue = PORTCbits.RC0;
  2341  0018F0  A082               	btfss	3970,0,c	;volatile
  2342  0018F2  D003               	goto	u2000
  2343  0018F4                     u2001:
  2344  0018F4  6A1B               	clrf	??_ledToggle& (0+255),c
  2345  0018F6  2A1B               	incf	??_ledToggle& (0+255),f,c
  2346  0018F8  D7F4               	goto	u1988
  2347  0018FA                     u2000:
  2348  0018FA  6A1B               	clrf	??_ledToggle& (0+255),c
  2349  0018FC  D7F2               	goto	u1988
  2350  0018FE                     l85:
  2351  0018FE  C019  F01B         	movff	ledToggle@ledNum,??_ledToggle
  2352  001902  C01A  F01C         	movff	ledToggle@ledNum+1,??_ledToggle+1
  2353                           
  2354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2355                           ; Switch size 1, requested type "space"
  2356                           ; Number of cases is 1, Range of values is 0 to 0
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361  001906  501C               	movf	??_ledToggle+1,w,c
  2362  001908  0A00               	xorlw	0	; case 0
  2363  00190A  A4D8               	btfss	status,2,c
  2364  00190C  D00A               	goto	l87
  2365                           
  2366                           ; Switch size 1, requested type "space"
  2367                           ; Number of cases is 3, Range of values is 1 to 3
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; simple_byte           10     6 (average)
  2371                           ;	Chosen strategy is simple_byte
  2372  00190E  501B               	movf	??_ledToggle,w,c
  2373  001910  0A01               	xorlw	1	; case 1
  2374  001912  B4D8               	btfsc	status,2,c
  2375  001914  D7E3               	goto	l86
  2376  001916  0A03               	xorlw	3	; case 2
  2377  001918  B4D8               	btfsc	status,2,c
  2378  00191A  D7E7               	goto	l88
  2379  00191C  0A01               	xorlw	1	; case 3
  2380  00191E  B4D8               	btfsc	status,2,c
  2381  001920  D7E7               	goto	l89
  2382  001922                     l87:
  2383                           
  2384                           ;LEDControl.c: 262: if( getValue == 0 )
  2385  001922  501F               	movf	ledToggle@getValue,w,c
  2386  001924  1020               	iorwf	ledToggle@getValue+1,w,c
  2387  001926  A4D8               	btfss	status,2,c
  2388  001928  D004               	goto	l90
  2389                           
  2390                           ;LEDControl.c: 263: {
  2391                           ;LEDControl.c: 264: setValue = 1;
  2392  00192A  0E00               	movlw	0
  2393  00192C  6E1E               	movwf	ledToggle@setValue+1,c
  2394  00192E  0E01               	movlw	1
  2395  001930  D003               	goto	L4
  2396  001932                     l90:
  2397                           
  2398                           ;LEDControl.c: 266: else
  2399                           ;LEDControl.c: 267: {
  2400                           ;LEDControl.c: 268: setValue = 0;
  2401  001932  0E00               	movlw	0
  2402  001934  6E1E               	movwf	ledToggle@setValue+1,c
  2403  001936  0E00               	movlw	0
  2404  001938                     L4:
  2405  001938  6E1D               	movwf	ledToggle@setValue,c
  2406                           
  2407                           ;LEDControl.c: 269: }
  2408                           ;LEDControl.c: 271: ledSet( ledNum, setValue );
  2409  00193A  C019  F013         	movff	ledToggle@ledNum,ledSet@ledNum
  2410  00193E  C01A  F014         	movff	ledToggle@ledNum+1,ledSet@ledNum+1
  2411  001942  C01D  F015         	movff	ledToggle@setValue,ledSet@setValue
  2412  001946  C01E  F016         	movff	ledToggle@setValue+1,ledSet@setValue+1
  2413  00194A  EC51  F00E         	call	_ledSet	;wreg free
  2414  00194E  0012               	return	
  2415  001950                     __end_of_ledToggle:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           intcon	equ	0xFF2
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           postinc2	equ	0xFDE
  2422                           postdec2	equ	0xFDD
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _ledSetAllOn *****************
  2428 ;; Defined at:
  2429 ;;		line 187 in file "LEDControl.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         0       0       0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    3
  2450 ;; This function calls:
  2451 ;;		_ledSetAll
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;;		_ledTestSetAllOn
  2455 ;;		_ledGoSetAllOn
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text12
  2460  0020B8                     __ptext12:
  2461                           	opt stack 0
  2462  0020B8                     _ledSetAllOn:
  2463                           	opt stack 27
  2464                           
  2465                           ;LEDControl.c: 189: ledSetAll( 1, 1, 1 );
  2466                           
  2467                           ;incstack = 0
  2468  0020B8  0E00               	movlw	0
  2469  0020BA  6E1A               	movwf	ledSetAll@led1Value+1,c
  2470  0020BC  0E01               	movlw	1
  2471  0020BE  6E19               	movwf	ledSetAll@led1Value,c
  2472  0020C0  0E00               	movlw	0
  2473  0020C2  6E1C               	movwf	ledSetAll@led2Value+1,c
  2474  0020C4  0E01               	movlw	1
  2475  0020C6  6E1B               	movwf	ledSetAll@led2Value,c
  2476  0020C8  0E00               	movlw	0
  2477  0020CA  6E1E               	movwf	ledSetAll@led3Value+1,c
  2478  0020CC  0E01               	movlw	1
  2479  0020CE  6E1D               	movwf	ledSetAll@led3Value,c
  2480  0020D0  EC4D  F00F         	call	_ledSetAll	;wreg free
  2481  0020D4  0012               	return	
  2482  0020D6                     __end_of_ledSetAllOn:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           intcon	equ	0xFF2
  2486                           postinc0	equ	0xFEE
  2487                           wreg	equ	0xFE8
  2488                           postinc2	equ	0xFDE
  2489                           postdec2	equ	0xFDD
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _ledRun *****************
  2495 ;; Defined at:
  2496 ;;		line 334 in file "LEDControl.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  ledRunDelay     2   34[COMRAM] int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         2       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:         2       0       0       0       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    4
  2517 ;; This function calls:
  2518 ;;		_ledRunDown
  2519 ;;		_ledRunUp
  2520 ;; This function is called by:
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text13
  2526  002112                     __ptext13:
  2527                           	opt stack 0
  2528  002112                     _ledRun:
  2529                           	opt stack 26
  2530                           
  2531                           ;LEDControl.c: 336: ledRunUp( ledRunDelay );
  2532                           
  2533                           ;incstack = 0
  2534  002112  C023  F01F         	movff	ledRun@ledRunDelay,ledRunUp@ledRunDelay
  2535  002116  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunUp@ledRunDelay+1
  2536  00211A  EC51  F009         	call	_ledRunUp	;wreg free
  2537                           
  2538                           ;LEDControl.c: 337: ledRunDown( ledRunDelay );
  2539  00211E  C023  F01F         	movff	ledRun@ledRunDelay,ledRunDown@ledRunDelay
  2540  002122  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunDown@ledRunDelay+1
  2541  002126  ECB0  F009         	call	_ledRunDown	;wreg free
  2542  00212A  0012               	return	
  2543  00212C                     __end_of_ledRun:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           intcon	equ	0xFF2
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _ledRunUp *****************
  2556 ;; Defined at:
  2557 ;;		line 296 in file "LEDControl.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  ledRunDelay     2   30[COMRAM] int 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  delay10ms       2   32[COMRAM] int 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         2       0       0       0       0       0       0
  2572 ;;      Locals:         2       0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0
  2574 ;;      Totals:         4       0       0       0       0       0       0
  2575 ;;Total ram usage:        4 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		___awdiv
  2580 ;;		_delayMS10
  2581 ;;		_ledSetAll
  2582 ;; This function is called by:
  2583 ;;		_ledRun
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text14
  2588  0012A2                     __ptext14:
  2589                           	opt stack 0
  2590  0012A2                     _ledRunUp:
  2591                           	opt stack 26
  2592                           
  2593                           ;LEDControl.c: 299: int delay10ms;
  2594                           ;LEDControl.c: 300: delay10ms = ledRunDelay / 10;
  2595                           
  2596                           ;incstack = 0
  2597  0012A2  C01F  F013         	movff	ledRunUp@ledRunDelay,___awdiv@dividend
  2598  0012A6  C020  F014         	movff	ledRunUp@ledRunDelay+1,___awdiv@dividend+1
  2599  0012AA  0E00               	movlw	0
  2600  0012AC  6E16               	movwf	___awdiv@divisor+1,c
  2601  0012AE  0E0A               	movlw	10
  2602  0012B0  6E15               	movwf	___awdiv@divisor,c
  2603  0012B2  ECEA  F00B         	call	___awdiv	;wreg free
  2604  0012B6  C013  F021         	movff	?___awdiv,ledRunUp@delay10ms
  2605  0012BA  C014  F022         	movff	?___awdiv+1,ledRunUp@delay10ms+1
  2606                           
  2607                           ;LEDControl.c: 304: ledSetAll( 0, 0, 0 );
  2608  0012BE  0E00               	movlw	0
  2609  0012C0  6E1A               	movwf	ledSetAll@led1Value+1,c
  2610  0012C2  0E00               	movlw	0
  2611  0012C4  6E19               	movwf	ledSetAll@led1Value,c
  2612  0012C6  0E00               	movlw	0
  2613  0012C8  6E1C               	movwf	ledSetAll@led2Value+1,c
  2614  0012CA  0E00               	movlw	0
  2615  0012CC  6E1B               	movwf	ledSetAll@led2Value,c
  2616  0012CE  0E00               	movlw	0
  2617  0012D0  6E1E               	movwf	ledSetAll@led3Value+1,c
  2618  0012D2  0E00               	movlw	0
  2619  0012D4  6E1D               	movwf	ledSetAll@led3Value,c
  2620  0012D6  EC4D  F00F         	call	_ledSetAll	;wreg free
  2621                           
  2622                           ;LEDControl.c: 305: delayMS10( delay10ms );
  2623  0012DA  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2624  0012DE  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2625  0012E2  EC9E  F00F         	call	_delayMS10	;wreg free
  2626                           
  2627                           ;LEDControl.c: 306: ledSetAll( 1, 0, 0 );
  2628  0012E6  0E00               	movlw	0
  2629  0012E8  6E1A               	movwf	ledSetAll@led1Value+1,c
  2630  0012EA  0E01               	movlw	1
  2631  0012EC  6E19               	movwf	ledSetAll@led1Value,c
  2632  0012EE  0E00               	movlw	0
  2633  0012F0  6E1C               	movwf	ledSetAll@led2Value+1,c
  2634  0012F2  0E00               	movlw	0
  2635  0012F4  6E1B               	movwf	ledSetAll@led2Value,c
  2636  0012F6  0E00               	movlw	0
  2637  0012F8  6E1E               	movwf	ledSetAll@led3Value+1,c
  2638  0012FA  0E00               	movlw	0
  2639  0012FC  6E1D               	movwf	ledSetAll@led3Value,c
  2640  0012FE  EC4D  F00F         	call	_ledSetAll	;wreg free
  2641                           
  2642                           ;LEDControl.c: 307: delayMS10( delay10ms );
  2643  001302  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2644  001306  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2645  00130A  EC9E  F00F         	call	_delayMS10	;wreg free
  2646                           
  2647                           ;LEDControl.c: 308: ledSetAll( 0, 1, 0 );
  2648  00130E  0E00               	movlw	0
  2649  001310  6E1A               	movwf	ledSetAll@led1Value+1,c
  2650  001312  0E00               	movlw	0
  2651  001314  6E19               	movwf	ledSetAll@led1Value,c
  2652  001316  0E00               	movlw	0
  2653  001318  6E1C               	movwf	ledSetAll@led2Value+1,c
  2654  00131A  0E01               	movlw	1
  2655  00131C  6E1B               	movwf	ledSetAll@led2Value,c
  2656  00131E  0E00               	movlw	0
  2657  001320  6E1E               	movwf	ledSetAll@led3Value+1,c
  2658  001322  0E00               	movlw	0
  2659  001324  6E1D               	movwf	ledSetAll@led3Value,c
  2660  001326  EC4D  F00F         	call	_ledSetAll	;wreg free
  2661                           
  2662                           ;LEDControl.c: 309: delayMS10( delay10ms );
  2663  00132A  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2664  00132E  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2665  001332  EC9E  F00F         	call	_delayMS10	;wreg free
  2666                           
  2667                           ;LEDControl.c: 310: ledSetAll( 0, 0, 1 );
  2668  001336  0E00               	movlw	0
  2669  001338  6E1A               	movwf	ledSetAll@led1Value+1,c
  2670  00133A  0E00               	movlw	0
  2671  00133C  6E19               	movwf	ledSetAll@led1Value,c
  2672  00133E  0E00               	movlw	0
  2673  001340  6E1C               	movwf	ledSetAll@led2Value+1,c
  2674  001342  0E00               	movlw	0
  2675  001344  6E1B               	movwf	ledSetAll@led2Value,c
  2676  001346  0E00               	movlw	0
  2677  001348  6E1E               	movwf	ledSetAll@led3Value+1,c
  2678  00134A  0E01               	movlw	1
  2679  00134C  6E1D               	movwf	ledSetAll@led3Value,c
  2680  00134E  EC4D  F00F         	call	_ledSetAll	;wreg free
  2681                           
  2682                           ;LEDControl.c: 311: delayMS10( delay10ms );
  2683  001352  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2684  001356  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2685  00135A  EC9E  F00F         	call	_delayMS10	;wreg free
  2686  00135E  0012               	return	
  2687  001360                     __end_of_ledRunUp:
  2688                           	opt stack 0
  2689                           tblptru	equ	0xFF8
  2690                           intcon	equ	0xFF2
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postinc2	equ	0xFDE
  2694                           postdec2	equ	0xFDD
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _ledRunDown *****************
  2700 ;; Defined at:
  2701 ;;		line 316 in file "LEDControl.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  ledRunDelay     2   30[COMRAM] int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  delay10ms       2   32[COMRAM] int 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2715 ;;      Params:         2       0       0       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0
  2718 ;;      Totals:         4       0       0       0       0       0       0
  2719 ;;Total ram usage:        4 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    3
  2722 ;; This function calls:
  2723 ;;		___awdiv
  2724 ;;		_delayMS10
  2725 ;;		_ledSetAll
  2726 ;; This function is called by:
  2727 ;;		_ledRun
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text15
  2732  001360                     __ptext15:
  2733                           	opt stack 0
  2734  001360                     _ledRunDown:
  2735                           	opt stack 26
  2736                           
  2737                           ;LEDControl.c: 319: int delay10ms;
  2738                           ;LEDControl.c: 320: delay10ms = ledRunDelay / 10;
  2739                           
  2740                           ;incstack = 0
  2741  001360  C01F  F013         	movff	ledRunDown@ledRunDelay,___awdiv@dividend
  2742  001364  C020  F014         	movff	ledRunDown@ledRunDelay+1,___awdiv@dividend+1
  2743  001368  0E00               	movlw	0
  2744  00136A  6E16               	movwf	___awdiv@divisor+1,c
  2745  00136C  0E0A               	movlw	10
  2746  00136E  6E15               	movwf	___awdiv@divisor,c
  2747  001370  ECEA  F00B         	call	___awdiv	;wreg free
  2748  001374  C013  F021         	movff	?___awdiv,ledRunDown@delay10ms
  2749  001378  C014  F022         	movff	?___awdiv+1,ledRunDown@delay10ms+1
  2750                           
  2751                           ;LEDControl.c: 322: ledSetAll( 0, 0, 1 );
  2752  00137C  0E00               	movlw	0
  2753  00137E  6E1A               	movwf	ledSetAll@led1Value+1,c
  2754  001380  0E00               	movlw	0
  2755  001382  6E19               	movwf	ledSetAll@led1Value,c
  2756  001384  0E00               	movlw	0
  2757  001386  6E1C               	movwf	ledSetAll@led2Value+1,c
  2758  001388  0E00               	movlw	0
  2759  00138A  6E1B               	movwf	ledSetAll@led2Value,c
  2760  00138C  0E00               	movlw	0
  2761  00138E  6E1E               	movwf	ledSetAll@led3Value+1,c
  2762  001390  0E01               	movlw	1
  2763  001392  6E1D               	movwf	ledSetAll@led3Value,c
  2764  001394  EC4D  F00F         	call	_ledSetAll	;wreg free
  2765                           
  2766                           ;LEDControl.c: 323: delayMS10( delay10ms );
  2767  001398  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2768  00139C  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2769  0013A0  EC9E  F00F         	call	_delayMS10	;wreg free
  2770                           
  2771                           ;LEDControl.c: 324: ledSetAll( 0, 1, 0 );
  2772  0013A4  0E00               	movlw	0
  2773  0013A6  6E1A               	movwf	ledSetAll@led1Value+1,c
  2774  0013A8  0E00               	movlw	0
  2775  0013AA  6E19               	movwf	ledSetAll@led1Value,c
  2776  0013AC  0E00               	movlw	0
  2777  0013AE  6E1C               	movwf	ledSetAll@led2Value+1,c
  2778  0013B0  0E01               	movlw	1
  2779  0013B2  6E1B               	movwf	ledSetAll@led2Value,c
  2780  0013B4  0E00               	movlw	0
  2781  0013B6  6E1E               	movwf	ledSetAll@led3Value+1,c
  2782  0013B8  0E00               	movlw	0
  2783  0013BA  6E1D               	movwf	ledSetAll@led3Value,c
  2784  0013BC  EC4D  F00F         	call	_ledSetAll	;wreg free
  2785                           
  2786                           ;LEDControl.c: 325: delayMS10( delay10ms );
  2787  0013C0  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2788  0013C4  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2789  0013C8  EC9E  F00F         	call	_delayMS10	;wreg free
  2790                           
  2791                           ;LEDControl.c: 326: ledSetAll( 1, 0, 0 );
  2792  0013CC  0E00               	movlw	0
  2793  0013CE  6E1A               	movwf	ledSetAll@led1Value+1,c
  2794  0013D0  0E01               	movlw	1
  2795  0013D2  6E19               	movwf	ledSetAll@led1Value,c
  2796  0013D4  0E00               	movlw	0
  2797  0013D6  6E1C               	movwf	ledSetAll@led2Value+1,c
  2798  0013D8  0E00               	movlw	0
  2799  0013DA  6E1B               	movwf	ledSetAll@led2Value,c
  2800  0013DC  0E00               	movlw	0
  2801  0013DE  6E1E               	movwf	ledSetAll@led3Value+1,c
  2802  0013E0  0E00               	movlw	0
  2803  0013E2  6E1D               	movwf	ledSetAll@led3Value,c
  2804  0013E4  EC4D  F00F         	call	_ledSetAll	;wreg free
  2805                           
  2806                           ;LEDControl.c: 327: delayMS10( delay10ms );
  2807  0013E8  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2808  0013EC  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2809  0013F0  EC9E  F00F         	call	_delayMS10	;wreg free
  2810                           
  2811                           ;LEDControl.c: 328: ledSetAll( 0, 0, 0 );
  2812  0013F4  0E00               	movlw	0
  2813  0013F6  6E1A               	movwf	ledSetAll@led1Value+1,c
  2814  0013F8  0E00               	movlw	0
  2815  0013FA  6E19               	movwf	ledSetAll@led1Value,c
  2816  0013FC  0E00               	movlw	0
  2817  0013FE  6E1C               	movwf	ledSetAll@led2Value+1,c
  2818  001400  0E00               	movlw	0
  2819  001402  6E1B               	movwf	ledSetAll@led2Value,c
  2820  001404  0E00               	movlw	0
  2821  001406  6E1E               	movwf	ledSetAll@led3Value+1,c
  2822  001408  0E00               	movlw	0
  2823  00140A  6E1D               	movwf	ledSetAll@led3Value,c
  2824  00140C  EC4D  F00F         	call	_ledSetAll	;wreg free
  2825                           
  2826                           ;LEDControl.c: 329: delayMS10( delay10ms );
  2827  001410  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2828  001414  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2829  001418  EC9E  F00F         	call	_delayMS10	;wreg free
  2830  00141C  0012               	return	
  2831  00141E                     __end_of_ledRunDown:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           intcon	equ	0xFF2
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           postinc2	equ	0xFDE
  2838                           postdec2	equ	0xFDD
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _delayMS10 *****************
  2844 ;; Defined at:
  2845 ;;		line 111 in file "Timer.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  count           2   18[COMRAM] int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  inx             2   21[COMRAM] int 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2859 ;;      Params:         2       0       0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0
  2861 ;;      Temps:          1       0       0       0       0       0       0
  2862 ;;      Totals:         5       0       0       0       0       0       0
  2863 ;;Total ram usage:        5 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_ledRunUp
  2870 ;;		_ledRunDown
  2871 ;;		_mcpInit
  2872 ;;		_mcpInitF
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text16
  2877  001F3C                     __ptext16:
  2878                           	opt stack 0
  2879  001F3C                     _delayMS10:
  2880                           	opt stack 27
  2881                           
  2882                           ;Timer.c: 113: for( int inx = 0; inx < count; inx++ )
  2883                           
  2884                           ;incstack = 0
  2885  001F3C  0E00               	movlw	0
  2886  001F3E  6E17               	movwf	delayMS10@inx+1,c
  2887  001F40  0E00               	movlw	0
  2888  001F42  6E16               	movwf	delayMS10@inx,c
  2889  001F44  D009               	goto	l601
  2890  001F46                     
  2891                           ;Timer.c: 114: {
  2892                           ;Timer.c: 115: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  2893  001F46  0E34               	movlw	52
  2894  001F48  6E15               	movwf	??_delayMS10& (0+255),c
  2895  001F4A  0EF2               	movlw	242
  2896  001F4C                     u3497:
  2897  001F4C  2EE8               	decfsz	wreg,f,c
  2898  001F4E  D7FE               	bra	u3497
  2899  001F50  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2900  001F52  D7FC               	bra	u3497
  2901  001F54  4A16               	infsnz	delayMS10@inx,f,c
  2902  001F56  2A17               	incf	delayMS10@inx+1,f,c
  2903  001F58                     l601:
  2904  001F58  5013               	movf	delayMS10@count,w,c
  2905  001F5A  5C16               	subwf	delayMS10@inx,w,c
  2906  001F5C  5017               	movf	delayMS10@inx+1,w,c
  2907  001F5E  0A80               	xorlw	128
  2908  001F60  6E15               	movwf	??_delayMS10& (0+255),c
  2909  001F62  5014               	movf	delayMS10@count+1,w,c
  2910  001F64  0A80               	xorlw	128
  2911  001F66  5815               	subwfb	??_delayMS10& (0+255),w,c
  2912  001F68  B0D8               	btfsc	status,0,c
  2913  001F6A  0012               	return	
  2914  001F6C  D7EC               	goto	l602
  2915  001F6E                     __end_of_delayMS10:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           intcon	equ	0xFF2
  2919                           postinc0	equ	0xFEE
  2920                           wreg	equ	0xFE8
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function ___awdiv *****************
  2928 ;; Defined at:
  2929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  dividend        2   18[COMRAM] int 
  2932 ;;  divisor         2   20[COMRAM] int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  quotient        2   24[COMRAM] int 
  2935 ;;  sign            1   23[COMRAM] unsigned char 
  2936 ;;  counter         1   22[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  2   18[COMRAM] int 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2946 ;;      Params:         4       0       0       0       0       0       0
  2947 ;;      Locals:         4       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0
  2949 ;;      Totals:         8       0       0       0       0       0       0
  2950 ;;Total ram usage:        8 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_ledRunUp
  2957 ;;		_ledRunDown
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text17
  2962  0017D4                     __ptext17:
  2963                           	opt stack 0
  2964  0017D4                     ___awdiv:
  2965                           	opt stack 27
  2966                           
  2967                           ;incstack = 0
  2968  0017D4  0E00               	movlw	0
  2969  0017D6  6E18               	movwf	___awdiv@sign,c
  2970  0017D8  AE16               	btfss	___awdiv@divisor+1,7,c
  2971  0017DA  D006               	goto	l801
  2972  0017DC  6C15               	negf	___awdiv@divisor,c
  2973  0017DE  1E16               	comf	___awdiv@divisor+1,f,c
  2974  0017E0  B0D8               	btfsc	status,0,c
  2975  0017E2  2A16               	incf	___awdiv@divisor+1,f,c
  2976  0017E4  0E01               	movlw	1
  2977  0017E6  6E18               	movwf	___awdiv@sign,c
  2978  0017E8                     l801:
  2979  0017E8  AE14               	btfss	___awdiv@dividend+1,7,c
  2980  0017EA  D006               	goto	l802
  2981  0017EC  6C13               	negf	___awdiv@dividend,c
  2982  0017EE  1E14               	comf	___awdiv@dividend+1,f,c
  2983  0017F0  B0D8               	btfsc	status,0,c
  2984  0017F2  2A14               	incf	___awdiv@dividend+1,f,c
  2985  0017F4  0E01               	movlw	1
  2986  0017F6  1A18               	xorwf	___awdiv@sign,f,c
  2987  0017F8                     l802:
  2988  0017F8  0E00               	movlw	0
  2989  0017FA  6E1A               	movwf	___awdiv@quotient+1,c
  2990  0017FC  0E00               	movlw	0
  2991  0017FE  6E19               	movwf	___awdiv@quotient,c
  2992  001800  5015               	movf	___awdiv@divisor,w,c
  2993  001802  1016               	iorwf	___awdiv@divisor+1,w,c
  2994  001804  B4D8               	btfsc	status,2,c
  2995  001806  D01C               	goto	l809
  2996  001808  0E01               	movlw	1
  2997  00180A  6E17               	movwf	___awdiv@counter,c
  2998  00180C  D004               	goto	l804
  2999  00180E  90D8               	bcf	status,0,c
  3000  001810  3615               	rlcf	___awdiv@divisor,f,c
  3001  001812  3616               	rlcf	___awdiv@divisor+1,f,c
  3002  001814  2A17               	incf	___awdiv@counter,f,c
  3003  001816                     l804:
  3004  001816  AE16               	btfss	___awdiv@divisor+1,7,c
  3005  001818  D7FA               	goto	l805
  3006  00181A                     u2240:
  3007  00181A  90D8               	bcf	status,0,c
  3008  00181C  3619               	rlcf	___awdiv@quotient,f,c
  3009  00181E  361A               	rlcf	___awdiv@quotient+1,f,c
  3010  001820  5015               	movf	___awdiv@divisor,w,c
  3011  001822  5C13               	subwf	___awdiv@dividend,w,c
  3012  001824  5016               	movf	___awdiv@divisor+1,w,c
  3013  001826  5814               	subwfb	___awdiv@dividend+1,w,c
  3014  001828  A0D8               	btfss	status,0,c
  3015  00182A  D005               	goto	l808
  3016  00182C  5015               	movf	___awdiv@divisor,w,c
  3017  00182E  5E13               	subwf	___awdiv@dividend,f,c
  3018  001830  5016               	movf	___awdiv@divisor+1,w,c
  3019  001832  5A14               	subwfb	___awdiv@dividend+1,f,c
  3020  001834  8019               	bsf	___awdiv@quotient,0,c
  3021  001836                     l808:
  3022  001836  90D8               	bcf	status,0,c
  3023  001838  3216               	rrcf	___awdiv@divisor+1,f,c
  3024  00183A  3215               	rrcf	___awdiv@divisor,f,c
  3025  00183C  2E17               	decfsz	___awdiv@counter,f,c
  3026  00183E  D7ED               	goto	u2240
  3027  001840                     l809:
  3028  001840  5018               	movf	___awdiv@sign,w,c
  3029  001842  B4D8               	btfsc	status,2,c
  3030  001844  D004               	goto	l810
  3031  001846  6C19               	negf	___awdiv@quotient,c
  3032  001848  1E1A               	comf	___awdiv@quotient+1,f,c
  3033  00184A  B0D8               	btfsc	status,0,c
  3034  00184C  2A1A               	incf	___awdiv@quotient+1,f,c
  3035  00184E                     l810:
  3036  00184E  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3037  001852  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3038  001856  0012               	return	
  3039  001858                     __end_of___awdiv:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           postinc2	equ	0xFDE
  3046                           postdec2	equ	0xFDD
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _ledInit *****************
  3052 ;; Defined at:
  3053 ;;		line 71 in file "LEDControl.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3067 ;;      Params:         0       0       0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    4
  3074 ;; This function calls:
  3075 ;;		_ledSetAllOff
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text18
  3082  00217A                     __ptext18:
  3083                           	opt stack 0
  3084  00217A                     _ledInit:
  3085                           	opt stack 26
  3086                           
  3087                           ;LEDControl.c: 73: TRISBbits.TRISB4 = 0;
  3088                           
  3089                           ;incstack = 0
  3090  00217A  9893               	bcf	3987,4,c	;volatile
  3091                           
  3092                           ;LEDControl.c: 74: TRISCbits.TRISC1 = 0;
  3093  00217C  9294               	bcf	3988,1,c	;volatile
  3094                           
  3095                           ;LEDControl.c: 75: TRISCbits.TRISC0 = 0;
  3096  00217E  9094               	bcf	3988,0,c	;volatile
  3097                           
  3098                           ;LEDControl.c: 77: ledSetAllOff( );
  3099  002180  EC6B  F010         	call	_ledSetAllOff	;wreg free
  3100  002184  0012               	return	
  3101  002186                     __end_of_ledInit:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           intcon	equ	0xFF2
  3105                           postinc0	equ	0xFEE
  3106                           wreg	equ	0xFE8
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _ledSetAllOff *****************
  3114 ;; Defined at:
  3115 ;;		line 194 in file "LEDControl.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3129 ;;      Params:         0       0       0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_ledSetAll
  3138 ;; This function is called by:
  3139 ;;		_ledInit
  3140 ;;		_main
  3141 ;;		_ledTestSetAllOff
  3142 ;;		_ledGoSetAllOff
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text19
  3147  0020D6                     __ptext19:
  3148                           	opt stack 0
  3149  0020D6                     _ledSetAllOff:
  3150                           	opt stack 27
  3151                           
  3152                           ;LEDControl.c: 196: ledSetAll( 0, 0, 0 );
  3153                           
  3154                           ;incstack = 0
  3155  0020D6  0E00               	movlw	0
  3156  0020D8  6E1A               	movwf	ledSetAll@led1Value+1,c
  3157  0020DA  0E00               	movlw	0
  3158  0020DC  6E19               	movwf	ledSetAll@led1Value,c
  3159  0020DE  0E00               	movlw	0
  3160  0020E0  6E1C               	movwf	ledSetAll@led2Value+1,c
  3161  0020E2  0E00               	movlw	0
  3162  0020E4  6E1B               	movwf	ledSetAll@led2Value,c
  3163  0020E6  0E00               	movlw	0
  3164  0020E8  6E1E               	movwf	ledSetAll@led3Value+1,c
  3165  0020EA  0E00               	movlw	0
  3166  0020EC  6E1D               	movwf	ledSetAll@led3Value,c
  3167  0020EE  EC4D  F00F         	call	_ledSetAll	;wreg free
  3168  0020F2  0012               	return	
  3169  0020F4                     __end_of_ledSetAllOff:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           intcon	equ	0xFF2
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _ledSetAll *****************
  3182 ;; Defined at:
  3183 ;;		line 158 in file "LEDControl.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  led1Value       2   24[COMRAM] int 
  3186 ;;  led2Value       2   26[COMRAM] int 
  3187 ;;  led3Value       2   28[COMRAM] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3199 ;;      Params:         6       0       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0
  3202 ;;      Totals:         6       0       0       0       0       0       0
  3203 ;;Total ram usage:        6 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    2
  3206 ;; This function calls:
  3207 ;;		_ledSet
  3208 ;; This function is called by:
  3209 ;;		_ledSetAllOn
  3210 ;;		_ledSetAllOff
  3211 ;;		_ledRunUp
  3212 ;;		_ledRunDown
  3213 ;;		_ledTestSetAll
  3214 ;;		_ledGoSetAll
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text20
  3219  001E9A                     __ptext20:
  3220                           	opt stack 0
  3221  001E9A                     _ledSetAll:
  3222                           	opt stack 27
  3223                           
  3224                           ;LEDControl.c: 160: ledSet( 1, led1Value );
  3225                           
  3226                           ;incstack = 0
  3227  001E9A  0E00               	movlw	0
  3228  001E9C  6E14               	movwf	ledSet@ledNum+1,c
  3229  001E9E  0E01               	movlw	1
  3230  001EA0  6E13               	movwf	ledSet@ledNum,c
  3231  001EA2  C019  F015         	movff	ledSetAll@led1Value,ledSet@setValue
  3232  001EA6  C01A  F016         	movff	ledSetAll@led1Value+1,ledSet@setValue+1
  3233  001EAA  EC51  F00E         	call	_ledSet	;wreg free
  3234                           
  3235                           ;LEDControl.c: 161: ledSet( 2, led2Value );
  3236  001EAE  0E00               	movlw	0
  3237  001EB0  6E14               	movwf	ledSet@ledNum+1,c
  3238  001EB2  0E02               	movlw	2
  3239  001EB4  6E13               	movwf	ledSet@ledNum,c
  3240  001EB6  C01B  F015         	movff	ledSetAll@led2Value,ledSet@setValue
  3241  001EBA  C01C  F016         	movff	ledSetAll@led2Value+1,ledSet@setValue+1
  3242  001EBE  EC51  F00E         	call	_ledSet	;wreg free
  3243                           
  3244                           ;LEDControl.c: 162: ledSet( 3, led3Value );
  3245  001EC2  0E00               	movlw	0
  3246  001EC4  6E14               	movwf	ledSet@ledNum+1,c
  3247  001EC6  0E03               	movlw	3
  3248  001EC8  6E13               	movwf	ledSet@ledNum,c
  3249  001ECA  C01D  F015         	movff	ledSetAll@led3Value,ledSet@setValue
  3250  001ECE  C01E  F016         	movff	ledSetAll@led3Value+1,ledSet@setValue+1
  3251  001ED2  EC51  F00E         	call	_ledSet	;wreg free
  3252  001ED6  0012               	return	
  3253  001ED8                     __end_of_ledSetAll:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           intcon	equ	0xFF2
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _ledSet *****************
  3266 ;; Defined at:
  3267 ;;		line 82 in file "LEDControl.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  ledNum          2   18[COMRAM] int 
  3270 ;;  setValue        2   20[COMRAM] int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3282 ;;      Params:         4       0       0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0
  3284 ;;      Temps:          2       0       0       0       0       0       0
  3285 ;;      Totals:         6       0       0       0       0       0       0
  3286 ;;Total ram usage:        6 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_ledSetAll
  3293 ;;		_ledToggle
  3294 ;;		_ledSetOn
  3295 ;;		_ledSetOff
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text21
  3300  001CA2                     __ptext21:
  3301                           	opt stack 0
  3302  001CA2                     _ledSet:
  3303                           	opt stack 26
  3304                           
  3305                           ;LEDControl.c: 84: switch( ledNum )
  3306                           
  3307                           ;incstack = 0
  3308  001CA2  D012               	goto	l22
  3309  001CA4                     l23:
  3310                           
  3311                           ;LEDControl.c: 87: LATBbits.LATB4 = setValue;
  3312  001CA4  B015               	btfsc	ledSet@setValue,0,c
  3313  001CA6  D002               	bra	u1685
  3314  001CA8  988A               	bcf	3978,4,c	;volatile
  3315  001CAA  D001               	bra	u1686
  3316  001CAC                     u1685:
  3317  001CAC  888A               	bsf	3978,4,c	;volatile
  3318  001CAE                     u1686:
  3319                           
  3320                           ;LEDControl.c: 88: break;
  3321  001CAE  0012               	return	
  3322  001CB0                     l25:
  3323                           
  3324                           ;LEDControl.c: 90: LATCbits.LATC1 = setValue;
  3325  001CB0  B015               	btfsc	ledSet@setValue,0,c
  3326  001CB2  D002               	bra	u1695
  3327  001CB4  928B               	bcf	3979,1,c	;volatile
  3328  001CB6  D001               	bra	u1696
  3329  001CB8                     u1695:
  3330  001CB8  828B               	bsf	3979,1,c	;volatile
  3331  001CBA                     u1696:
  3332                           
  3333                           ;LEDControl.c: 91: break;
  3334  001CBA  0012               	return	
  3335  001CBC                     l26:
  3336                           
  3337                           ;LEDControl.c: 93: LATCbits.LATC0 = setValue;
  3338  001CBC  B015               	btfsc	ledSet@setValue,0,c
  3339  001CBE  D002               	bra	u1705
  3340  001CC0  908B               	bcf	3979,0,c	;volatile
  3341  001CC2  D001               	bra	u1706
  3342  001CC4                     u1705:
  3343  001CC4  808B               	bsf	3979,0,c	;volatile
  3344  001CC6                     u1706:
  3345                           
  3346                           ;LEDControl.c: 95: }
  3347                           
  3348                           ;LEDControl.c: 94: break;
  3349  001CC6  0012               	return	
  3350  001CC8                     l22:
  3351  001CC8  C013  F017         	movff	ledSet@ledNum,??_ledSet
  3352  001CCC  C014  F018         	movff	ledSet@ledNum+1,??_ledSet+1
  3353                           
  3354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3355                           ; Switch size 1, requested type "space"
  3356                           ; Number of cases is 1, Range of values is 0 to 0
  3357                           ; switch strategies available:
  3358                           ; Name         Instructions Cycles
  3359                           ; simple_byte            4     3 (average)
  3360                           ;	Chosen strategy is simple_byte
  3361  001CD0  5018               	movf	??_ledSet+1,w,c
  3362  001CD2  0A00               	xorlw	0	; case 0
  3363  001CD4  A4D8               	btfss	status,2,c
  3364  001CD6  0012               	return	
  3365                           
  3366                           ; Switch size 1, requested type "space"
  3367                           ; Number of cases is 3, Range of values is 1 to 3
  3368                           ; switch strategies available:
  3369                           ; Name         Instructions Cycles
  3370                           ; simple_byte           10     6 (average)
  3371                           ;	Chosen strategy is simple_byte
  3372  001CD8  5017               	movf	??_ledSet,w,c
  3373  001CDA  0A01               	xorlw	1	; case 1
  3374  001CDC  B4D8               	btfsc	status,2,c
  3375  001CDE  D7E2               	goto	l23
  3376  001CE0  0A03               	xorlw	3	; case 2
  3377  001CE2  B4D8               	btfsc	status,2,c
  3378  001CE4  D7E5               	goto	l25
  3379  001CE6  0A01               	xorlw	1	; case 3
  3380  001CE8  A4D8               	btfss	status,2,c
  3381  001CEA  0012               	return	
  3382  001CEC  D7E7               	goto	l26
  3383  001CEE                     __end_of_ledSet:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           intcon	equ	0xFF2
  3387                           postinc0	equ	0xFEE
  3388                           wreg	equ	0xFE8
  3389                           postinc2	equ	0xFDE
  3390                           postdec2	equ	0xFDD
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _initOSC *****************
  3396 ;; Defined at:
  3397 ;;		line 136 in file "Main_PowerSense.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3411 ;;      Params:         0       0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text22
  3426  00212C                     __ptext22:
  3427                           	opt stack 0
  3428  00212C                     _initOSC:
  3429                           	opt stack 29
  3430                           
  3431                           ;Main_PowerSense.c: 139: OSCCONbits.IDLEN = 0;
  3432                           
  3433                           ;incstack = 0
  3434  00212C  9ED3               	bcf	4051,7,c	;volatile
  3435                           
  3436                           ;Main_PowerSense.c: 140: OSCCONbits.IRCF = 0b111;
  3437  00212E  88D3               	bsf	4051,4,c	;volatile
  3438  002130  8AD3               	bsf	4051,5,c	;volatile
  3439  002132  8CD3               	bsf	4051,6,c	;volatile
  3440                           
  3441                           ;Main_PowerSense.c: 141: OSCCONbits.SCS = 0b11;
  3442  002134  0E03               	movlw	3
  3443  002136  12D3               	iorwf	4051,f,c	;volatile
  3444                           
  3445                           ;Main_PowerSense.c: 143: OSCCON2bits.MFIOSEL = 0;
  3446  002138  98D2               	bcf	4050,4,c	;volatile
  3447                           
  3448                           ;Main_PowerSense.c: 144: OSCCON2bits.SOSCGO = 0;
  3449  00213A  96D2               	bcf	4050,3,c	;volatile
  3450                           
  3451                           ;Main_PowerSense.c: 145: OSCCON2bits.PRISD = 0;
  3452  00213C  94D2               	bcf	4050,2,c	;volatile
  3453                           
  3454                           ;Main_PowerSense.c: 147: OSCTUNEbits.INTSRC = 1;
  3455  00213E  8E9B               	bsf	3995,7,c	;volatile
  3456                           
  3457                           ;Main_PowerSense.c: 148: OSCTUNEbits.PLLEN = 0;
  3458  002140  9C9B               	bcf	3995,6,c	;volatile
  3459  002142  0012               	return	
  3460  002144                     __end_of_initOSC:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           intcon	equ	0xFF2
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           fsr2h	equ	0xFDA
  3469                           fsr2l	equ	0xFD9
  3470                           status	equ	0xFD8
  3471                           
  3472 ;; *************** function _initInterruptsClear *****************
  3473 ;; Defined at:
  3474 ;;		line 172 in file "Main_PowerSense.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3488 ;;      Params:         0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text23
  3503  001CEE                     __ptext23:
  3504                           	opt stack 0
  3505  001CEE                     _initInterruptsClear:
  3506                           	opt stack 29
  3507                           
  3508                           ;Main_PowerSense.c: 175: INTCON = 0b00000000;
  3509                           
  3510                           ;incstack = 0
  3511  001CEE  0E00               	movlw	0
  3512  001CF0  6EF2               	movwf	intcon,c	;volatile
  3513                           
  3514                           ;Main_PowerSense.c: 176: INTCON2 = 0b00000000;
  3515  001CF2  0E00               	movlw	0
  3516  001CF4  6EF1               	movwf	intcon2,c	;volatile
  3517                           
  3518                           ;Main_PowerSense.c: 177: INTCON3 = 0b00000000;
  3519  001CF6  0E00               	movlw	0
  3520  001CF8  6EF0               	movwf	intcon3,c	;volatile
  3521                           
  3522                           ;Main_PowerSense.c: 179: RCONbits.IPEN = 0;
  3523  001CFA  9ED0               	bcf	4048,7,c	;volatile
  3524                           
  3525                           ;Main_PowerSense.c: 181: PIR1 = 0b00000000;
  3526  001CFC  0E00               	movlw	0
  3527  001CFE  6E9E               	movwf	3998,c	;volatile
  3528                           
  3529                           ;Main_PowerSense.c: 182: PIR2 = 0b00000000;
  3530  001D00  0E00               	movlw	0
  3531  001D02  6EA1               	movwf	4001,c	;volatile
  3532                           
  3533                           ;Main_PowerSense.c: 183: PIR3 = 0b00000000;
  3534  001D04  0E00               	movlw	0
  3535  001D06  6EA4               	movwf	4004,c	;volatile
  3536                           
  3537                           ;Main_PowerSense.c: 184: PIR4 = 0b00000000;
  3538  001D08  0E00               	movlw	0
  3539  001D0A  6E7B               	movwf	3963,c	;volatile
  3540                           
  3541                           ;Main_PowerSense.c: 185: PIR5 = 0b00000000;
  3542  001D0C  0E00               	movlw	0
  3543  001D0E  6E7E               	movwf	3966,c	;volatile
  3544                           
  3545                           ;Main_PowerSense.c: 187: PIE1 = 0b00000000;
  3546  001D10  0E00               	movlw	0
  3547  001D12  6E9D               	movwf	3997,c	;volatile
  3548                           
  3549                           ;Main_PowerSense.c: 188: PIE2 = 0b00000000;
  3550  001D14  0E00               	movlw	0
  3551  001D16  6EA0               	movwf	4000,c	;volatile
  3552                           
  3553                           ;Main_PowerSense.c: 189: PIE3 = 0b00000000;
  3554  001D18  0E00               	movlw	0
  3555  001D1A  6EA3               	movwf	4003,c	;volatile
  3556                           
  3557                           ;Main_PowerSense.c: 190: PIE4 = 0b00000000;
  3558  001D1C  0E00               	movlw	0
  3559  001D1E  6E7A               	movwf	3962,c	;volatile
  3560                           
  3561                           ;Main_PowerSense.c: 191: PIE5 = 0b00000000;
  3562  001D20  0E00               	movlw	0
  3563  001D22  6E7D               	movwf	3965,c	;volatile
  3564                           
  3565                           ;Main_PowerSense.c: 193: IPR1 = 0b00000000;
  3566  001D24  0E00               	movlw	0
  3567  001D26  6E9F               	movwf	3999,c	;volatile
  3568                           
  3569                           ;Main_PowerSense.c: 194: IPR2 = 0b00000000;
  3570  001D28  0E00               	movlw	0
  3571  001D2A  6EA2               	movwf	4002,c	;volatile
  3572                           
  3573                           ;Main_PowerSense.c: 195: IPR3 = 0b00000000;
  3574  001D2C  0E00               	movlw	0
  3575  001D2E  6EA5               	movwf	4005,c	;volatile
  3576                           
  3577                           ;Main_PowerSense.c: 196: IPR4 = 0b00000000;
  3578  001D30  0E00               	movlw	0
  3579  001D32  6E7C               	movwf	3964,c	;volatile
  3580                           
  3581                           ;Main_PowerSense.c: 197: IPR5 = 0b00000000;
  3582  001D34  0E00               	movlw	0
  3583  001D36  6E7F               	movwf	3967,c	;volatile
  3584  001D38  0012               	return	
  3585  001D3A                     __end_of_initInterruptsClear:
  3586                           	opt stack 0
  3587                           tblptru	equ	0xFF8
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           intcon3	equ	0xFF0
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postinc2	equ	0xFDE
  3594                           postdec2	equ	0xFDD
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _initIO *****************
  3600 ;; Defined at:
  3601 ;;		line 153 in file "Main_PowerSense.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3615 ;;      Params:         0       0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text24
  3630  00215A                     __ptext24:
  3631                           	opt stack 0
  3632  00215A                     _initIO:
  3633                           	opt stack 29
  3634                           
  3635                           ;Main_PowerSense.c: 155: ADCON0bits.ADON = 0;
  3636                           
  3637                           ;incstack = 0
  3638  00215A  90C2               	bcf	4034,0,c	;volatile
  3639                           
  3640                           ;Main_PowerSense.c: 156: ANSELA = 0b00000000;
  3641  00215C  0E00               	movlw	0
  3642  00215E  010F               	movlb	15	; () banked
  3643  002160  6F38               	movwf	56,b	;volatile
  3644                           
  3645                           ;Main_PowerSense.c: 157: ANSELB = 0b00000000;
  3646  002162  0E00               	movlw	0
  3647  002164  6F39               	movwf	57,b	;volatile
  3648                           
  3649                           ;Main_PowerSense.c: 158: ANSELC = 0b00000000;
  3650  002166  0E00               	movlw	0
  3651  002168  6F3A               	movwf	58,b	;volatile
  3652  00216A  0012               	return	
  3653  00216C                     __end_of_initIO:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           intcon	equ	0xFF2
  3657                           intcon2	equ	0xFF1
  3658                           intcon3	equ	0xFF0
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postinc2	equ	0xFDE
  3662                           postdec2	equ	0xFDD
  3663                           fsr2h	equ	0xFDA
  3664                           fsr2l	equ	0xFD9
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function _commRun *****************
  3668 ;; Defined at:
  3669 ;;		line 113 in file "SlaveComm.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3683 ;;      Params:         0       0       0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:   10
  3690 ;; This function calls:
  3691 ;;		_communications
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text25
  3698  002186                     __ptext25:
  3699                           	opt stack 0
  3700  002186                     _commRun:
  3701                           	opt stack 20
  3702                           
  3703                           ;SlaveComm.c: 115: communications( 0 );
  3704                           
  3705                           ; BSR set to: 15
  3706                           ;incstack = 0
  3707  002186  0E00               	movlw	0
  3708  002188  EC0F  F00A         	call	_communications
  3709  00218C  0012               	return	
  3710  00218E                     __end_of_commRun:
  3711                           	opt stack 0
  3712                           tblptru	equ	0xFF8
  3713                           intcon	equ	0xFF2
  3714                           intcon2	equ	0xFF1
  3715                           intcon3	equ	0xFF0
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           fsr2h	equ	0xFDA
  3721                           fsr2l	equ	0xFD9
  3722                           status	equ	0xFD8
  3723                           
  3724 ;; *************** function _commInit *****************
  3725 ;; Defined at:
  3726 ;;		line 107 in file "SlaveComm.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:   10
  3747 ;; This function calls:
  3748 ;;		_communications
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text26
  3755  00218E                     __ptext26:
  3756                           	opt stack 0
  3757  00218E                     _commInit:
  3758                           	opt stack 20
  3759                           
  3760                           ;SlaveComm.c: 109: communications( 1 );
  3761                           
  3762                           ;incstack = 0
  3763  00218E  0E01               	movlw	1
  3764  002190  EC0F  F00A         	call	_communications
  3765  002194  0012               	return	
  3766  002196                     __end_of_commInit:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           intcon	equ	0xFF2
  3770                           intcon2	equ	0xFF1
  3771                           intcon3	equ	0xFF0
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           postinc2	equ	0xFDE
  3775                           postdec2	equ	0xFDD
  3776                           fsr2h	equ	0xFDA
  3777                           fsr2l	equ	0xFD9
  3778                           status	equ	0xFD8
  3779                           
  3780 ;; *************** function _communications *****************
  3781 ;; Defined at:
  3782 ;;		line 119 in file "SlaveComm.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  firstTime       1    wreg     unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  firstTime       1   37[BANK0 ] unsigned char 
  3787 ;;  no_more_to_s    1   36[BANK0 ] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         0       0       0       0       0       0       0
  3798 ;;      Locals:         0       2       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    9
  3804 ;; This function calls:
  3805 ;;		_SPISlaveInit
  3806 ;;		_process_data
  3807 ;;		_receive_data
  3808 ;;		_resetCommunications
  3809 ;;		_send_data
  3810 ;;		_xSumCheck
  3811 ;; This function is called by:
  3812 ;;		_commInit
  3813 ;;		_commRun
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text27
  3818  00141E                     __ptext27:
  3819                           	opt stack 0
  3820  00141E                     _communications:
  3821                           	opt stack 20
  3822                           
  3823                           ;incstack = 0
  3824                           ;communications@firstTime stored from wreg
  3825  00141E  0100               	movlb	0	; () banked
  3826  001420  6F85               	movwf	communications@firstTime& (0+255),b
  3827                           
  3828                           ;SlaveComm.c: 121: static struct buffer receive_buffer;
  3829                           ;SlaveComm.c: 122: static struct buffer send_buffer;
  3830                           ;SlaveComm.c: 124: static bool end_of_transmission_received = 0;
  3831                           ;SlaveComm.c: 125: bool no_more_to_send;
  3832                           ;SlaveComm.c: 127: static enum receive_status receive_current_state;
  3833                           ;SlaveComm.c: 130: if( firstTime == 1 )
  3834  001422  0100               	movlb	0	; () banked
  3835  001424  0585               	decf	communications@firstTime& (0+255),w,b
  3836  001426  A4D8               	btfss	status,2,c
  3837  001428  D00E               	goto	l206
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;SlaveComm.c: 131: {
  3841                           ;SlaveComm.c: 132: SPISlaveInit( );
  3842  00142A  ECE7  F00E         	call	_SPISlaveInit	;wreg free
  3843                           
  3844                           ;SlaveComm.c: 133: send_buffer.write_position = 0;
  3845  00142E  0E00               	movlw	0
  3846  001430  0101               	movlb	1	; () banked
  3847  001432  6F9A               	movwf	(communications@send_buffer+40)& (0+255),b
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;SlaveComm.c: 134: send_buffer.read_position = 0;
  3851  001434  0E00               	movlw	0
  3852  001436  6F9B               	movwf	(communications@send_buffer+41)& (0+255),b
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;SlaveComm.c: 135: resetCommunications( &send_buffer );
  3856  001438  0E72               	movlw	low communications@send_buffer
  3857  00143A  6E3B               	movwf	resetCommunications@send_buffer,c
  3858  00143C  0E01               	movlw	high communications@send_buffer
  3859  00143E  6E3C               	movwf	resetCommunications@send_buffer+1,c
  3860  001440  ECBD  F00A         	call	_resetCommunications	;wreg free
  3861                           
  3862                           ;SlaveComm.c: 136: }
  3863  001444  0012               	return	
  3864  001446                     l206:
  3865                           
  3866                           ;SlaveComm.c: 137: else
  3867                           ;SlaveComm.c: 138: {
  3868                           ;SlaveComm.c: 139: receive_current_state = receive_data( &receive_buffer );
  3869  001446  0E9C               	movlw	low communications@receive_buffer
  3870  001448  6E16               	movwf	receive_data@receive_buffer,c
  3871  00144A  0E01               	movlw	high communications@receive_buffer
  3872  00144C  6E17               	movwf	receive_data@receive_buffer+1,c
  3873  00144E  ECF1  F008         	call	_receive_data	;wreg free
  3874  001452  0100               	movlb	0	; () banked
  3875  001454  6FA3               	movwf	communications@receive_current_state& (0+255),b
  3876                           
  3877                           ;SlaveComm.c: 141: switch( receive_current_state )
  3878  001456  D01B               	goto	l208
  3879  001458                     
  3880                           ; BSR set to: 0
  3881                           ;SlaveComm.c: 151: if( xSumCheck( receive_buffer.data_buffer ) == 1 )
  3882                           
  3883                           ; BSR set to: 0
  3884  001458  0E9C               	movlw	low communications@receive_buffer
  3885  00145A  6E20               	movwf	xSumCheck@check_buffer,c
  3886  00145C  0E01               	movlw	high communications@receive_buffer
  3887  00145E  6E21               	movwf	xSumCheck@check_buffer+1,c
  3888  001460  EC3B  F006         	call	_xSumCheck	;wreg free
  3889  001464  06E8               	decf	wreg,f,c
  3890  001466  A4D8               	btfss	status,2,c
  3891  001468  D01C               	goto	l210
  3892                           
  3893                           ;SlaveComm.c: 152: {
  3894                           ;SlaveComm.c: 153: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  3895  00146A  0E9C               	movlw	low communications@receive_buffer
  3896  00146C  0100               	movlb	0	; () banked
  3897  00146E  6F80               	movwf	process_data@receive_buffer& (0+255),b
  3898  001470  0E01               	movlw	high communications@receive_buffer
  3899  001472  6F81               	movwf	(process_data@receive_buffer+1)& (0+255),b
  3900  001474  0E72               	movlw	low communications@send_buffer
  3901  001476  6F82               	movwf	process_data@send_buffer& (0+255),b
  3902  001478  0E01               	movlw	high communications@send_buffer
  3903  00147A  6F83               	movwf	(process_data@send_buffer+1)& (0+255),b
  3904  00147C  ECB7  F00F         	call	_process_data	;wreg free
  3905  001480  06E8               	decf	wreg,f,c
  3906  001482  A4D8               	btfss	status,2,c
  3907  001484  D00E               	goto	l210
  3908                           
  3909                           ;SlaveComm.c: 154: {
  3910                           ;SlaveComm.c: 155: end_of_transmission_received = 1;
  3911  001486  0E01               	movlw	1
  3912  001488  0100               	movlb	0	; () banked
  3913  00148A  6FA4               	movwf	communications@end_of_transmission_received& (0+255),b
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;SlaveComm.c: 160: }
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;SlaveComm.c: 156: }
  3920                           ;SlaveComm.c: 157: }
  3921                           ;SlaveComm.c: 159: break;
  3922                           
  3923                           ; BSR set to: 0
  3924  00148C  D00A               	goto	l210
  3925  00148E                     l208:
  3926                           
  3927                           ; BSR set to: 0
  3928                           
  3929                           ; BSR set to: 0
  3930  00148E  51A3               	movf	communications@receive_current_state& (0+255),w,b
  3931                           
  3932                           ; Switch size 1, requested type "space"
  3933                           ; Number of cases is 3, Range of values is 0 to 2
  3934                           ; switch strategies available:
  3935                           ; Name         Instructions Cycles
  3936                           ; simple_byte           10     6 (average)
  3937                           ;	Chosen strategy is simple_byte
  3938  001490  0A00               	xorlw	0	; case 0
  3939  001492  B4D8               	btfsc	status,2,c
  3940  001494  D006               	goto	l210
  3941  001496  0A01               	xorlw	1	; case 1
  3942  001498  B4D8               	btfsc	status,2,c
  3943  00149A  D003               	goto	l210
  3944  00149C  0A03               	xorlw	3	; case 2
  3945  00149E  B4D8               	btfsc	status,2,c
  3946  0014A0  D7DB               	goto	l212
  3947  0014A2                     l210:
  3948                           
  3949                           ;SlaveComm.c: 162: no_more_to_send = send_data( &send_buffer );
  3950                           
  3951                           ; BSR set to: 0
  3952  0014A2  0E72               	movlw	low communications@send_buffer
  3953  0014A4  6E15               	movwf	send_data@send_buffer,c
  3954  0014A6  0E01               	movlw	high communications@send_buffer
  3955  0014A8  6E16               	movwf	send_data@send_buffer+1,c
  3956  0014AA  ECA2  F00B         	call	_send_data	;wreg free
  3957  0014AE  0100               	movlb	0	; () banked
  3958  0014B0  6F84               	movwf	communications@no_more_to_send& (0+255),b
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;SlaveComm.c: 165: static bool last_state_active = 0;
  3962                           ;SlaveComm.c: 166: if( PORTBbits.SS2 == 0b1 )
  3963  0014B2  A081               	btfss	3969,0,c	;volatile
  3964  0014B4  D003               	goto	l217
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;SlaveComm.c: 167: {
  3968                           ;SlaveComm.c: 168: last_state_active = 0;
  3969  0014B6  0E00               	movlw	0
  3970  0014B8  6FA2               	movwf	communications@last_state_active& (0+255),b
  3971                           
  3972                           ;SlaveComm.c: 169: }
  3973  0014BA  0012               	return	
  3974  0014BC                     l217:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;SlaveComm.c: 170: else
  3978                           ;SlaveComm.c: 171: {
  3979                           ;SlaveComm.c: 172: if( last_state_active == 0 )
  3980                           
  3981                           ; BSR set to: 0
  3982  0014BC  51A2               	movf	communications@last_state_active& (0+255),w,b
  3983  0014BE  A4D8               	btfss	status,2,c
  3984  0014C0  D006               	goto	l219
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;SlaveComm.c: 173: {
  3988                           ;SlaveComm.c: 174: resetCommunications( &send_buffer );
  3989  0014C2  0E72               	movlw	low communications@send_buffer
  3990  0014C4  6E3B               	movwf	resetCommunications@send_buffer,c
  3991  0014C6  0E01               	movlw	high communications@send_buffer
  3992  0014C8  6E3C               	movwf	resetCommunications@send_buffer+1,c
  3993  0014CA  ECBD  F00A         	call	_resetCommunications	;wreg free
  3994  0014CE                     l219:
  3995                           
  3996                           ;SlaveComm.c: 175: }
  3997                           ;SlaveComm.c: 177: last_state_active = 1;
  3998  0014CE  0E01               	movlw	1
  3999  0014D0  0100               	movlb	0	; () banked
  4000  0014D2  6FA2               	movwf	communications@last_state_active& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           
  4004                           ; BSR set to: 0
  4005  0014D4  0012               	return	
  4006  0014D6                     __end_of_communications:
  4007                           	opt stack 0
  4008                           tblptru	equ	0xFF8
  4009                           intcon	equ	0xFF2
  4010                           intcon2	equ	0xFF1
  4011                           intcon3	equ	0xFF0
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postinc2	equ	0xFDE
  4015                           postdec2	equ	0xFDD
  4016                           fsr2h	equ	0xFDA
  4017                           fsr2l	equ	0xFD9
  4018                           status	equ	0xFD8
  4019                           
  4020 ;; *************** function _xSumCheck *****************
  4021 ;; Defined at:
  4022 ;;		line 414 in file "SlaveComm.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  check_buffer    2   31[COMRAM] PTR unsigned char 
  4025 ;;		 -> communications@receive_buffer(42), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  xSumChars       7   34[COMRAM] unsigned char [7]
  4028 ;;  receiveBuffe    2   48[COMRAM] int 
  4029 ;;  xSumCharsPos    2   46[COMRAM] int 
  4030 ;;  xSumAdderVal    2   44[COMRAM] int 
  4031 ;;  xSumCharsVal    2   41[COMRAM] int 
  4032 ;;  xSumMatches     1   43[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         2       0       0       0       0       0       0
  4043 ;;      Locals:        16       0       0       0       0       0       0
  4044 ;;      Temps:          1       0       0       0       0       0       0
  4045 ;;      Totals:        19       0       0       0       0       0       0
  4046 ;;Total ram usage:       19 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    3
  4049 ;; This function calls:
  4050 ;;		_atoi
  4051 ;; This function is called by:
  4052 ;;		_communications
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text28
  4057  000C76                     __ptext28:
  4058                           	opt stack 0
  4059  000C76                     _xSumCheck:
  4060                           	opt stack 25
  4061                           
  4062                           ;SlaveComm.c: 424: int receiveBufferPos;
  4063                           ;SlaveComm.c: 425: int xSumAdderValue;
  4064                           ;SlaveComm.c: 426: char xSumChars [7];
  4065                           ;SlaveComm.c: 427: int xSumCharsPos;
  4066                           ;SlaveComm.c: 428: int xSumCharsValue;
  4067                           ;SlaveComm.c: 431: receiveBufferPos = 1;
  4068                           
  4069                           ;incstack = 0
  4070  000C76  0E00               	movlw	0
  4071  000C78  6E32               	movwf	xSumCheck@receiveBufferPos+1,c
  4072  000C7A  0E01               	movlw	1
  4073  000C7C  6E31               	movwf	xSumCheck@receiveBufferPos,c
  4074                           
  4075                           ;SlaveComm.c: 432: xSumAdderValue = 0;
  4076  000C7E  0E00               	movlw	0
  4077  000C80  6E2E               	movwf	xSumCheck@xSumAdderValue+1,c
  4078  000C82  0E00               	movlw	0
  4079  000C84  6E2D               	movwf	xSumCheck@xSumAdderValue,c
  4080                           
  4081                           ;SlaveComm.c: 433: xSumCharsPos = 0;
  4082  000C86  0E00               	movlw	0
  4083  000C88  6E30               	movwf	xSumCheck@xSumCharsPos+1,c
  4084  000C8A  0E00               	movlw	0
  4085  000C8C  6E2F               	movwf	xSumCheck@xSumCharsPos,c
  4086                           
  4087                           ;SlaveComm.c: 435: while(
  4088                           ;SlaveComm.c: 436: (check_buffer[ receiveBufferPos ] != '$')
  4089                           ;SlaveComm.c: 437: && (check_buffer[ receiveBufferPos ] != '*')
  4090                           ;SlaveComm.c: 438: && (receiveBufferPos < 40)
  4091                           ;SlaveComm.c: 439: )
  4092  000C8E  D00E               	goto	l287
  4093  000C90                     
  4094                           ;SlaveComm.c: 440: {
  4095                           ;SlaveComm.c: 441: xSumAdderValue += check_buffer[ receiveBufferPos ];
  4096  000C90  5031               	movf	xSumCheck@receiveBufferPos,w,c
  4097  000C92  2420               	addwf	xSumCheck@check_buffer,w,c
  4098  000C94  6ED9               	movwf	fsr2l,c
  4099  000C96  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4100  000C98  2021               	addwfc	xSumCheck@check_buffer+1,w,c
  4101  000C9A  6EDA               	movwf	fsr2h,c
  4102  000C9C  50DF               	movf	indf2,w,c
  4103  000C9E  6E22               	movwf	??_xSumCheck& (0+255),c
  4104  000CA0  5022               	movf	??_xSumCheck,w,c
  4105  000CA2  262D               	addwf	xSumCheck@xSumAdderValue,f,c
  4106  000CA4  0E00               	movlw	0
  4107  000CA6  222E               	addwfc	xSumCheck@xSumAdderValue+1,f,c
  4108                           
  4109                           ;SlaveComm.c: 442: receiveBufferPos++;
  4110  000CA8  4A31               	infsnz	xSumCheck@receiveBufferPos,f,c
  4111  000CAA  2A32               	incf	xSumCheck@receiveBufferPos+1,f,c
  4112  000CAC                     l287:
  4113  000CAC  5031               	movf	xSumCheck@receiveBufferPos,w,c
  4114  000CAE  2420               	addwf	xSumCheck@check_buffer,w,c
  4115  000CB0  6ED9               	movwf	fsr2l,c
  4116  000CB2  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4117  000CB4  2021               	addwfc	xSumCheck@check_buffer+1,w,c
  4118  000CB6  6EDA               	movwf	fsr2h,c
  4119  000CB8  0E24               	movlw	36
  4120  000CBA  18DE               	xorwf	postinc2,w,c
  4121  000CBC  B4D8               	btfsc	status,2,c
  4122  000CBE  D012               	goto	u3180
  4123  000CC0  5031               	movf	xSumCheck@receiveBufferPos,w,c
  4124  000CC2  2420               	addwf	xSumCheck@check_buffer,w,c
  4125  000CC4  6ED9               	movwf	fsr2l,c
  4126  000CC6  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4127  000CC8  2021               	addwfc	xSumCheck@check_buffer+1,w,c
  4128  000CCA  6EDA               	movwf	fsr2h,c
  4129  000CCC  0E2A               	movlw	42
  4130  000CCE  18DE               	xorwf	postinc2,w,c
  4131  000CD0  B4D8               	btfsc	status,2,c
  4132  000CD2  D008               	goto	u3180
  4133  000CD4  BE32               	btfsc	xSumCheck@receiveBufferPos+1,7,c
  4134  000CD6  D7DC               	goto	l288
  4135  000CD8  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4136  000CDA  E104               	bnz	l4134
  4137  000CDC  0E28               	movlw	40
  4138  000CDE  5C31               	subwf	xSumCheck@receiveBufferPos,w,c
  4139  000CE0  A0D8               	btfss	status,0,c
  4140  000CE2  D7D6               	goto	l288
  4141  000CE4                     u3180:
  4142  000CE4                     l4134:
  4143                           
  4144                           ;SlaveComm.c: 443: }
  4145                           ;SlaveComm.c: 445: receiveBufferPos++;
  4146  000CE4  4A31               	infsnz	xSumCheck@receiveBufferPos,f,c
  4147  000CE6  2A32               	incf	xSumCheck@receiveBufferPos+1,f,c
  4148                           
  4149                           ;SlaveComm.c: 446: xSumCharsPos = 0;
  4150  000CE8  0E00               	movlw	0
  4151  000CEA  6E30               	movwf	xSumCheck@xSumCharsPos+1,c
  4152  000CEC  0E00               	movlw	0
  4153  000CEE  6E2F               	movwf	xSumCheck@xSumCharsPos,c
  4154                           
  4155                           ;SlaveComm.c: 447: while(
  4156                           ;SlaveComm.c: 448: (check_buffer[ receiveBufferPos ] != '*')
  4157                           ;SlaveComm.c: 449: && (receiveBufferPos < 40)
  4158                           ;SlaveComm.c: 450: )
  4159  000CF0  D01A               	goto	l292
  4160  000CF2                     
  4161                           ;SlaveComm.c: 451: {
  4162                           ;SlaveComm.c: 452: xSumChars[xSumCharsPos] = check_buffer[ receiveBufferPos ];
  4163  000CF2  5031               	movf	xSumCheck@receiveBufferPos,w,c
  4164  000CF4  2420               	addwf	xSumCheck@check_buffer,w,c
  4165  000CF6  6ED9               	movwf	fsr2l,c
  4166  000CF8  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4167  000CFA  2021               	addwfc	xSumCheck@check_buffer+1,w,c
  4168  000CFC  6EDA               	movwf	fsr2h,c
  4169  000CFE  0E23               	movlw	low xSumCheck@xSumChars
  4170  000D00  242F               	addwf	xSumCheck@xSumCharsPos,w,c
  4171  000D02  6EE1               	movwf	fsr1l,c
  4172  000D04  0E00               	movlw	high xSumCheck@xSumChars
  4173  000D06  2030               	addwfc	xSumCheck@xSumCharsPos+1,w,c
  4174  000D08  6EE2               	movwf	fsr1h,c
  4175  000D0A  CFDF FFE7          	movff	indf2,indf1
  4176                           
  4177                           ;SlaveComm.c: 453: xSumCharsPos++;
  4178  000D0E  4A2F               	infsnz	xSumCheck@xSumCharsPos,f,c
  4179  000D10  2A30               	incf	xSumCheck@xSumCharsPos+1,f,c
  4180                           
  4181                           ;SlaveComm.c: 454: xSumChars[xSumCharsPos] = '\0';
  4182  000D12  0E23               	movlw	low xSumCheck@xSumChars
  4183  000D14  242F               	addwf	xSumCheck@xSumCharsPos,w,c
  4184  000D16  6ED9               	movwf	fsr2l,c
  4185  000D18  0E00               	movlw	high xSumCheck@xSumChars
  4186  000D1A  2030               	addwfc	xSumCheck@xSumCharsPos+1,w,c
  4187  000D1C  6EDA               	movwf	fsr2h,c
  4188  000D1E  0E00               	movlw	0
  4189  000D20  6EDF               	movwf	indf2,c
  4190                           
  4191                           ;SlaveComm.c: 455: receiveBufferPos++;
  4192  000D22  4A31               	infsnz	xSumCheck@receiveBufferPos,f,c
  4193  000D24  2A32               	incf	xSumCheck@receiveBufferPos+1,f,c
  4194  000D26                     l292:
  4195  000D26  5031               	movf	xSumCheck@receiveBufferPos,w,c
  4196  000D28  2420               	addwf	xSumCheck@check_buffer,w,c
  4197  000D2A  6ED9               	movwf	fsr2l,c
  4198  000D2C  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4199  000D2E  2021               	addwfc	xSumCheck@check_buffer+1,w,c
  4200  000D30  6EDA               	movwf	fsr2h,c
  4201  000D32  0E2A               	movlw	42
  4202  000D34  18DE               	xorwf	postinc2,w,c
  4203  000D36  B4D8               	btfsc	status,2,c
  4204  000D38  D008               	goto	u3200
  4205  000D3A  BE32               	btfsc	xSumCheck@receiveBufferPos+1,7,c
  4206  000D3C  D7DA               	goto	l293
  4207  000D3E  5032               	movf	xSumCheck@receiveBufferPos+1,w,c
  4208  000D40  E104               	bnz	l4150
  4209  000D42  0E28               	movlw	40
  4210  000D44  5C31               	subwf	xSumCheck@receiveBufferPos,w,c
  4211  000D46  A0D8               	btfss	status,0,c
  4212  000D48  D7D4               	goto	l293
  4213  000D4A                     u3200:
  4214  000D4A                     l4150:
  4215                           
  4216                           ;SlaveComm.c: 456: }
  4217                           ;SlaveComm.c: 458: xSumCharsValue = atoi( xSumChars );
  4218  000D4A  0E23               	movlw	low xSumCheck@xSumChars
  4219  000D4C  6E19               	movwf	atoi@s,c
  4220  000D4E  0E00               	movlw	high xSumCheck@xSumChars
  4221  000D50  6E1A               	movwf	atoi@s+1,c
  4222  000D52  EC29  F008         	call	_atoi	;wreg free
  4223  000D56  C019  F02A         	movff	?_atoi,xSumCheck@xSumCharsValue
  4224  000D5A  C01A  F02B         	movff	?_atoi+1,xSumCheck@xSumCharsValue+1
  4225                           
  4226                           ;SlaveComm.c: 460: bool xSumMatches;
  4227                           ;SlaveComm.c: 462: xSumMatches = (xSumAdderValue == xSumCharsValue);
  4228  000D5E  502A               	movf	xSumCheck@xSumCharsValue,w,c
  4229  000D60  182D               	xorwf	xSumCheck@xSumAdderValue,w,c
  4230  000D62  E106               	bnz	u3210
  4231  000D64  502B               	movf	xSumCheck@xSumCharsValue+1,w,c
  4232  000D66  182E               	xorwf	xSumCheck@xSumAdderValue+1,w,c
  4233  000D68  A4D8               	btfss	status,2,c
  4234  000D6A  D002               	goto	u3210
  4235  000D6C  0E01               	movlw	1
  4236  000D6E  D001               	goto	u3220
  4237  000D70                     u3210:
  4238  000D70  0E00               	movlw	0
  4239  000D72                     u3220:
  4240  000D72  6E2C               	movwf	xSumCheck@xSumMatches,c
  4241                           
  4242                           ;SlaveComm.c: 464: return xSumMatches;
  4243  000D74  502C               	movf	xSumCheck@xSumMatches,w,c
  4244  000D76  0012               	return	
  4245  000D78                     __end_of_xSumCheck:
  4246                           	opt stack 0
  4247                           tblptru	equ	0xFF8
  4248                           intcon	equ	0xFF2
  4249                           intcon2	equ	0xFF1
  4250                           intcon3	equ	0xFF0
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           indf1	equ	0xFE7
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           postinc2	equ	0xFDE
  4258                           postdec2	equ	0xFDD
  4259                           fsr2h	equ	0xFDA
  4260                           fsr2l	equ	0xFD9
  4261                           status	equ	0xFD8
  4262                           
  4263 ;; *************** function _atoi *****************
  4264 ;; Defined at:
  4265 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  s               2   24[COMRAM] PTR const unsigned char 
  4268 ;;		 -> xSumCheck@xSumChars(7), 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  a               2   29[COMRAM] int 
  4271 ;;  sign            1   28[COMRAM] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  2   24[COMRAM] int 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4281 ;;      Params:         2       0       0       0       0       0       0
  4282 ;;      Locals:         3       0       0       0       0       0       0
  4283 ;;      Temps:          2       0       0       0       0       0       0
  4284 ;;      Totals:         7       0       0       0       0       0       0
  4285 ;;Total ram usage:        7 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    2
  4288 ;; This function calls:
  4289 ;;		___wmul
  4290 ;;		_isdigit
  4291 ;; This function is called by:
  4292 ;;		_xSumCheck
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text29
  4297  001052                     __ptext29:
  4298                           	opt stack 0
  4299  001052                     _atoi:
  4300                           	opt stack 25
  4301                           
  4302                           ;incstack = 0
  4303  001052  D002               	goto	l768
  4304  001054  4A19               	infsnz	atoi@s,f,c
  4305  001056  2A1A               	incf	atoi@s+1,f,c
  4306  001058                     l768:
  4307  001058  C019  FFD9         	movff	atoi@s,fsr2l
  4308  00105C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4309  001060  0E20               	movlw	32
  4310  001062  18DE               	xorwf	postinc2,w,c
  4311  001064  B4D8               	btfsc	status,2,c
  4312  001066  D7F6               	goto	l769
  4313  001068  C019  FFD9         	movff	atoi@s,fsr2l
  4314  00106C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4315  001070  0E09               	movlw	9
  4316  001072  18DE               	xorwf	postinc2,w,c
  4317  001074  B4D8               	btfsc	status,2,c
  4318  001076  D7EE               	goto	l769
  4319  001078  0E00               	movlw	0
  4320  00107A  6E1F               	movwf	atoi@a+1,c
  4321  00107C  0E00               	movlw	0
  4322  00107E  6E1E               	movwf	atoi@a,c
  4323  001080  0E00               	movlw	0
  4324  001082  6E1D               	movwf	atoi@sign,c
  4325  001084  C019  FFD9         	movff	atoi@s,fsr2l
  4326  001088  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4327  00108C  0E2D               	movlw	45
  4328  00108E  18DE               	xorwf	postinc2,w,c
  4329  001090  A4D8               	btfss	status,2,c
  4330  001092  D002               	goto	l771
  4331  001094  2A1D               	incf	atoi@sign,f,c
  4332  001096  D024               	goto	l4082
  4333  001098                     l771:
  4334  001098  C019  FFD9         	movff	atoi@s,fsr2l
  4335  00109C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4336  0010A0  0E2B               	movlw	43
  4337  0010A2  18DE               	xorwf	postinc2,w,c
  4338  0010A4  A4D8               	btfss	status,2,c
  4339  0010A6  D01E               	goto	l774
  4340  0010A8  D01B               	goto	l4082
  4341  0010AA  C01E  F013         	movff	atoi@a,___wmul@multiplier
  4342  0010AE  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  4343  0010B2  0E00               	movlw	0
  4344  0010B4  6E16               	movwf	___wmul@multiplicand+1,c
  4345  0010B6  0E0A               	movlw	10
  4346  0010B8  6E15               	movwf	___wmul@multiplicand,c
  4347  0010BA  EC39  F010         	call	___wmul	;wreg free
  4348  0010BE  C019  FFD9         	movff	atoi@s,fsr2l
  4349  0010C2  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4350  0010C6  50DF               	movf	indf2,w,c
  4351  0010C8  6E1B               	movwf	??_atoi& (0+255),c
  4352  0010CA  6A1C               	clrf	(??_atoi+1)& (0+255),c
  4353  0010CC  5013               	movf	?___wmul,w,c
  4354  0010CE  261B               	addwf	??_atoi,f,c
  4355  0010D0  5014               	movf	?___wmul+1,w,c
  4356  0010D2  221C               	addwfc	??_atoi+1,f,c
  4357  0010D4  0ED0               	movlw	208
  4358  0010D6  241B               	addwf	??_atoi,w,c
  4359  0010D8  6E1E               	movwf	atoi@a,c
  4360  0010DA  0EFF               	movlw	255
  4361  0010DC  201C               	addwfc	??_atoi+1,w,c
  4362  0010DE  6E1F               	movwf	atoi@a+1,c
  4363  0010E0                     l4082:
  4364  0010E0  4A19               	infsnz	atoi@s,f,c
  4365  0010E2  2A1A               	incf	atoi@s+1,f,c
  4366  0010E4                     l774:
  4367  0010E4  C019  FFD9         	movff	atoi@s,fsr2l
  4368  0010E8  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4369  0010EC  50DF               	movf	indf2,w,c
  4370  0010EE  EC7A  F010         	call	_isdigit
  4371  0010F2  B0D8               	btfsc	status,0,c
  4372  0010F4  D7DA               	goto	l775
  4373  0010F6  501D               	movf	atoi@sign,w,c
  4374  0010F8  B4D8               	btfsc	status,2,c
  4375  0010FA  D00D               	goto	l777
  4376  0010FC  C01E  F01B         	movff	atoi@a,??_atoi
  4377  001100  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  4378  001104  1E1B               	comf	??_atoi,f,c
  4379  001106  1E1C               	comf	??_atoi+1,f,c
  4380  001108  4A1B               	infsnz	??_atoi,f,c
  4381  00110A  2A1C               	incf	??_atoi+1,f,c
  4382  00110C  C01B  F019         	movff	??_atoi,?_atoi
  4383  001110  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  4384  001114  0012               	return	
  4385  001116                     l777:
  4386  001116  C01E  F019         	movff	atoi@a,?_atoi
  4387  00111A  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  4388  00111E  0012               	return		;funcret
  4389  001120                     __end_of_atoi:
  4390                           	opt stack 0
  4391                           tblptru	equ	0xFF8
  4392                           intcon	equ	0xFF2
  4393                           intcon2	equ	0xFF1
  4394                           intcon3	equ	0xFF0
  4395                           postinc0	equ	0xFEE
  4396                           wreg	equ	0xFE8
  4397                           indf1	equ	0xFE7
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           indf2	equ	0xFDF
  4401                           postinc2	equ	0xFDE
  4402                           postdec2	equ	0xFDD
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _send_data *****************
  4408 ;; Defined at:
  4409 ;;		line 563 in file "SlaveComm.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  4412 ;;		 -> communications@send_buffer(42), 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  send_end        1   24[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      unsigned char 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         2       0       0       0       0       0       0
  4425 ;;      Locals:         1       0       0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0
  4427 ;;      Totals:         5       0       0       0       0       0       0
  4428 ;;Total ram usage:        5 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    2
  4431 ;; This function calls:
  4432 ;;		_SPI_send_data
  4433 ;; This function is called by:
  4434 ;;		_communications
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text30
  4439  001744                     __ptext30:
  4440                           	opt stack 0
  4441  001744                     _send_data:
  4442                           	opt stack 26
  4443                           
  4444                           ;SlaveComm.c: 565: bool send_end;
  4445                           ;SlaveComm.c: 567: if( send_buffer->read_position == send_buffer->write_position )
  4446                           
  4447                           ;incstack = 0
  4448  001744  EE20 F028          	lfsr	2,40
  4449  001748  5015               	movf	send_data@send_buffer,w,c
  4450  00174A  26D9               	addwf	fsr2l,f,c
  4451  00174C  5016               	movf	send_data@send_buffer+1,w,c
  4452  00174E  22DA               	addwfc	fsr2h,f,c
  4453  001750  EE10 F029          	lfsr	1,41
  4454  001754  5015               	movf	send_data@send_buffer,w,c
  4455  001756  26E1               	addwf	fsr1l,f,c
  4456  001758  5016               	movf	send_data@send_buffer+1,w,c
  4457  00175A  22E2               	addwfc	fsr1h,f,c
  4458  00175C  50DE               	movf	postinc2,w,c
  4459  00175E  18E6               	xorwf	postinc1,w,c
  4460  001760  A4D8               	btfss	status,2,c
  4461  001762  D006               	goto	l325
  4462                           
  4463                           ;SlaveComm.c: 568: {
  4464                           ;SlaveComm.c: 569: send_end = 1;
  4465  001764  0E01               	movlw	1
  4466  001766  6E19               	movwf	send_data@send_end,c
  4467                           
  4468                           ;SlaveComm.c: 570: SPI_send_data( '\0' );
  4469  001768  0E00               	movlw	0
  4470  00176A  EC4C  F010         	call	_SPI_send_data
  4471                           
  4472                           ;SlaveComm.c: 571: }
  4473  00176E  D030               	goto	l328
  4474  001770                     l325:
  4475                           
  4476                           ;SlaveComm.c: 572: else
  4477                           ;SlaveComm.c: 573: {
  4478                           ;SlaveComm.c: 574: send_end = 0;
  4479  001770  0E00               	movlw	0
  4480  001772  6E19               	movwf	send_data@send_end,c
  4481                           
  4482                           ;SlaveComm.c: 577: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_positio
      +                          n] ) == 1 )
  4483  001774  EE20 F029          	lfsr	2,41
  4484  001778  5015               	movf	send_data@send_buffer,w,c
  4485  00177A  26D9               	addwf	fsr2l,f,c
  4486  00177C  5016               	movf	send_data@send_buffer+1,w,c
  4487  00177E  22DA               	addwfc	fsr2h,f,c
  4488  001780  50DF               	movf	indf2,w,c
  4489  001782  6E17               	movwf	??_send_data& (0+255),c
  4490  001784  5017               	movf	??_send_data,w,c
  4491  001786  0D01               	mullw	1
  4492  001788  50F3               	movf	prodl,w,c
  4493  00178A  2415               	addwf	send_data@send_buffer,w,c
  4494  00178C  6ED9               	movwf	fsr2l,c
  4495  00178E  50F4               	movf	prodh,w,c
  4496  001790  2016               	addwfc	send_data@send_buffer+1,w,c
  4497  001792  6EDA               	movwf	fsr2h,c
  4498  001794  50DF               	movf	indf2,w,c
  4499  001796  EC4C  F010         	call	_SPI_send_data
  4500  00179A  06E8               	decf	wreg,f,c
  4501  00179C  A4D8               	btfss	status,2,c
  4502  00179E  D018               	goto	l328
  4503                           
  4504                           ;SlaveComm.c: 578: {
  4505                           ;SlaveComm.c: 580: send_buffer->read_position++;
  4506  0017A0  EE20 F029          	lfsr	2,41
  4507  0017A4  5015               	movf	send_data@send_buffer,w,c
  4508  0017A6  26D9               	addwf	fsr2l,f,c
  4509  0017A8  5016               	movf	send_data@send_buffer+1,w,c
  4510  0017AA  22DA               	addwfc	fsr2h,f,c
  4511  0017AC  2ADF               	incf	indf2,f,c
  4512                           
  4513                           ;SlaveComm.c: 581: if( send_buffer->read_position >= 40 )
  4514  0017AE  EE20 F029          	lfsr	2,41
  4515  0017B2  5015               	movf	send_data@send_buffer,w,c
  4516  0017B4  26D9               	addwf	fsr2l,f,c
  4517  0017B6  5016               	movf	send_data@send_buffer+1,w,c
  4518  0017B8  22DA               	addwfc	fsr2h,f,c
  4519  0017BA  0E27               	movlw	39
  4520  0017BC  64DF               	cpfsgt	indf2,c
  4521  0017BE  D008               	goto	l328
  4522                           
  4523                           ;SlaveComm.c: 582: {
  4524                           ;SlaveComm.c: 583: send_buffer->read_position = 0;
  4525  0017C0  EE20 F029          	lfsr	2,41
  4526  0017C4  5015               	movf	send_data@send_buffer,w,c
  4527  0017C6  26D9               	addwf	fsr2l,f,c
  4528  0017C8  5016               	movf	send_data@send_buffer+1,w,c
  4529  0017CA  22DA               	addwfc	fsr2h,f,c
  4530  0017CC  0E00               	movlw	0
  4531  0017CE  6EDF               	movwf	indf2,c
  4532  0017D0                     l328:
  4533                           
  4534                           ;SlaveComm.c: 584: }
  4535                           ;SlaveComm.c: 585: }
  4536                           ;SlaveComm.c: 586: }
  4537                           ;SlaveComm.c: 588: return send_end;
  4538  0017D0  5019               	movf	send_data@send_end,w,c
  4539  0017D2  0012               	return	
  4540  0017D4                     __end_of_send_data:
  4541                           	opt stack 0
  4542                           tblptru	equ	0xFF8
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           intcon2	equ	0xFF1
  4547                           intcon3	equ	0xFF0
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           postinc1	equ	0xFE6
  4552                           fsr1h	equ	0xFE2
  4553                           fsr1l	equ	0xFE1
  4554                           indf2	equ	0xFDF
  4555                           postinc2	equ	0xFDE
  4556                           postdec2	equ	0xFDD
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8
  4560                           
  4561 ;; *************** function _SPI_send_data *****************
  4562 ;; Defined at:
  4563 ;;		line 657 in file "SlaveComm.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  data            1    wreg     unsigned char 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  data            1   18[COMRAM] unsigned char 
  4568 ;;  sendGood        1   19[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4578 ;;      Params:         0       0       0       0       0       0       0
  4579 ;;      Locals:         2       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0
  4581 ;;      Totals:         2       0       0       0       0       0       0
  4582 ;;Total ram usage:        2 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_send_data
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text31
  4593  002098                     __ptext31:
  4594                           	opt stack 0
  4595  002098                     _SPI_send_data:
  4596                           	opt stack 26
  4597                           
  4598                           ;incstack = 0
  4599                           ;SPI_send_data@data stored from wreg
  4600  002098  6E13               	movwf	SPI_send_data@data,c
  4601                           
  4602                           ;SlaveComm.c: 659: bool sendGood = 0;
  4603  00209A  0E00               	movlw	0
  4604  00209C  6E14               	movwf	SPI_send_data@sendGood,c
  4605                           
  4606                           ;SlaveComm.c: 661: if( SPI_transmit_wait == 0 )
  4607  00209E  504C               	movf	_SPI_transmit_wait,w,c
  4608  0020A0  A4D8               	btfss	status,2,c
  4609  0020A2  D006               	goto	l356
  4610                           
  4611                           ;SlaveComm.c: 662: {
  4612                           ;SlaveComm.c: 663: SSP2BUF = data;
  4613  0020A4  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  4614                           
  4615                           ;SlaveComm.c: 664: SPI_transmit_wait = 1;
  4616  0020A8  0E01               	movlw	1
  4617  0020AA  6E4C               	movwf	_SPI_transmit_wait,c
  4618                           
  4619                           ;SlaveComm.c: 665: sendGood = 1;
  4620  0020AC  0E01               	movlw	1
  4621  0020AE  D001               	goto	L5
  4622  0020B0                     l356:
  4623                           
  4624                           ;SlaveComm.c: 667: else
  4625                           ;SlaveComm.c: 668: {
  4626                           ;SlaveComm.c: 669: sendGood = 0;
  4627  0020B0  0E00               	movlw	0
  4628  0020B2                     L5:
  4629  0020B2  6E14               	movwf	SPI_send_data@sendGood,c
  4630                           
  4631                           ;SlaveComm.c: 670: }
  4632                           ;SlaveComm.c: 672: return sendGood;
  4633  0020B4  5014               	movf	SPI_send_data@sendGood,w,c
  4634  0020B6  0012               	return	
  4635  0020B8                     __end_of_SPI_send_data:
  4636                           	opt stack 0
  4637                           tblptru	equ	0xFF8
  4638                           prodh	equ	0xFF4
  4639                           prodl	equ	0xFF3
  4640                           intcon	equ	0xFF2
  4641                           intcon2	equ	0xFF1
  4642                           intcon3	equ	0xFF0
  4643                           postinc0	equ	0xFEE
  4644                           wreg	equ	0xFE8
  4645                           indf1	equ	0xFE7
  4646                           postinc1	equ	0xFE6
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _resetCommunications *****************
  4657 ;; Defined at:
  4658 ;;		line 184 in file "SlaveComm.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  send_buffer     2   58[COMRAM] PTR struct buffer
  4661 ;;		 -> communications@send_buffer(42), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         2       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0
  4675 ;;      Temps:          0       2       0       0       0       0       0
  4676 ;;      Totals:         2       2       0       0       0       0       0
  4677 ;;Total ram usage:        4 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    7
  4680 ;; This function calls:
  4681 ;;		_com_command_setEnergyUsed
  4682 ;;		_com_command_setPower
  4683 ;;		_com_command_setVersion
  4684 ;; This function is called by:
  4685 ;;		_communications
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text32
  4690  00157A                     __ptext32:
  4691                           	opt stack 0
  4692  00157A                     _resetCommunications:
  4693                           	opt stack 21
  4694                           
  4695                           ;SlaveComm.c: 187: static int commState = 0;
  4696                           ;SlaveComm.c: 190: SSP2CON1bits.SSPEN = 0;
  4697                           
  4698                           ;incstack = 0
  4699  00157A  9A6C               	bcf	3948,5,c	;volatile
  4700                           
  4701                           ;SlaveComm.c: 191: _delay((unsigned long)((1)*(16000000UL/4000.0)));
  4702  00157C  0E06               	movlw	6
  4703  00157E  0100               	movlb	0	; () banked
  4704  001580  6F7C               	movwf	??_resetCommunications& (0+255),b
  4705  001582  0E30               	movlw	48
  4706  001584                     u3507:
  4707  001584  2EE8               	decfsz	wreg,f,c
  4708  001586  D7FE               	bra	u3507
  4709  001588  2F7C               	decfsz	??_resetCommunications& (0+255),f,b
  4710  00158A  D7FC               	bra	u3507
  4711  00158C  F000               	nop	
  4712                           
  4713                           ;SlaveComm.c: 192: SSP2CON1bits.SSPEN = 1;
  4714  00158E  8A6C               	bsf	3948,5,c	;volatile
  4715                           
  4716                           ;SlaveComm.c: 194: SSP2CON1bits.WCOL = 0;
  4717  001590  9E6C               	bcf	3948,7,c	;volatile
  4718                           
  4719                           ;SlaveComm.c: 195: SPI_transmit_wait = 0;
  4720  001592  0E00               	movlw	0
  4721  001594  6E4C               	movwf	_SPI_transmit_wait,c
  4722                           
  4723                           ;SlaveComm.c: 197: send_buffer->read_position = 0;
  4724  001596  EE20 F029          	lfsr	2,41
  4725  00159A  503B               	movf	resetCommunications@send_buffer,w,c
  4726  00159C  26D9               	addwf	fsr2l,f,c
  4727  00159E  503C               	movf	resetCommunications@send_buffer+1,w,c
  4728  0015A0  22DA               	addwfc	fsr2h,f,c
  4729  0015A2  0E00               	movlw	0
  4730  0015A4  6EDF               	movwf	indf2,c
  4731                           
  4732                           ;SlaveComm.c: 198: send_buffer->write_position = 0;
  4733  0015A6  EE20 F028          	lfsr	2,40
  4734  0015AA  503B               	movf	resetCommunications@send_buffer,w,c
  4735  0015AC  26D9               	addwf	fsr2l,f,c
  4736  0015AE  503C               	movf	resetCommunications@send_buffer+1,w,c
  4737  0015B0  22DA               	addwfc	fsr2h,f,c
  4738  0015B2  0E00               	movlw	0
  4739  0015B4  6EDF               	movwf	indf2,c
  4740                           
  4741                           ;SlaveComm.c: 203: commState++;
  4742  0015B6  4A47               	infsnz	resetCommunications@commState,f,c
  4743  0015B8  2A48               	incf	resetCommunications@commState+1,f,c
  4744                           
  4745                           ;SlaveComm.c: 204: switch( commState )
  4746  0015BA  D019               	goto	l225
  4747  0015BC                     
  4748                           ;SlaveComm.c: 207: com_command_setVersion( send_buffer );
  4749  0015BC  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  4750  0015C0  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  4751  0015C4  EC26  F010         	call	_com_command_setVersion	;wreg free
  4752                           
  4753                           ;SlaveComm.c: 208: break;
  4754  0015C8  0012               	return	
  4755  0015CA                     
  4756                           ;SlaveComm.c: 210: com_command_setPower( send_buffer );
  4757  0015CA  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  4758  0015CE  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  4759  0015D2  EC9D  F00E         	call	_com_command_setPower	;wreg free
  4760                           
  4761                           ;SlaveComm.c: 211: break;
  4762  0015D6  0012               	return	
  4763  0015D8                     
  4764                           ;SlaveComm.c: 213: com_command_setEnergyUsed( send_buffer );
  4765  0015D8  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  4766  0015DC  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  4767  0015E0  ECC2  F00E         	call	_com_command_setEnergyUsed	;wreg free
  4768  0015E4                     
  4769                           ;SlaveComm.c: 225: commState = 0;
  4770  0015E4  0E00               	movlw	0
  4771  0015E6  6E48               	movwf	resetCommunications@commState+1,c
  4772  0015E8  0E00               	movlw	0
  4773  0015EA  6E47               	movwf	resetCommunications@commState,c
  4774                           
  4775                           ;SlaveComm.c: 227: }
  4776                           
  4777                           ;SlaveComm.c: 226: break;
  4778  0015EC  0012               	return	
  4779  0015EE                     l225:
  4780  0015EE  C047  F07C         	movff	resetCommunications@commState,??_resetCommunications
  4781  0015F2  C048  F07D         	movff	resetCommunications@commState+1,??_resetCommunications+1
  4782                           
  4783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4784                           ; Switch size 1, requested type "space"
  4785                           ; Number of cases is 1, Range of values is 0 to 0
  4786                           ; switch strategies available:
  4787                           ; Name         Instructions Cycles
  4788                           ; simple_byte            4     3 (average)
  4789                           ;	Chosen strategy is simple_byte
  4790  0015F6  0100               	movlb	0	; () banked
  4791  0015F8  517D               	movf	(??_resetCommunications+1)& (0+255),w,b
  4792  0015FA  0A00               	xorlw	0	; case 0
  4793  0015FC  A4D8               	btfss	status,2,c
  4794  0015FE  D7F2               	goto	l230
  4795                           
  4796                           ; BSR set to: 0
  4797                           ; Switch size 1, requested type "space"
  4798                           ; Number of cases is 3, Range of values is 1 to 3
  4799                           ; switch strategies available:
  4800                           ; Name         Instructions Cycles
  4801                           ; simple_byte           10     6 (average)
  4802                           ;	Chosen strategy is simple_byte
  4803  001600  517C               	movf	??_resetCommunications& (0+255),w,b
  4804  001602  0A01               	xorlw	1	; case 1
  4805  001604  B4D8               	btfsc	status,2,c
  4806  001606  D7DA               	goto	l226
  4807  001608  0A03               	xorlw	3	; case 2
  4808  00160A  B4D8               	btfsc	status,2,c
  4809  00160C  D7DE               	goto	l228
  4810  00160E  0A01               	xorlw	1	; case 3
  4811  001610  B4D8               	btfsc	status,2,c
  4812  001612  D7E2               	goto	l229
  4813  001614  D7E7               	goto	l230
  4814  001616                     __end_of_resetCommunications:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           intcon2	equ	0xFF1
  4821                           intcon3	equ	0xFF0
  4822                           postinc0	equ	0xFEE
  4823                           wreg	equ	0xFE8
  4824                           indf1	equ	0xFE7
  4825                           postinc1	equ	0xFE6
  4826                           fsr1h	equ	0xFE2
  4827                           fsr1l	equ	0xFE1
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _com_command_setVersion *****************
  4836 ;; Defined at:
  4837 ;;		line 728 in file "SlaveComm.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4840 ;;		 -> communications@send_buffer(42), 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4852 ;;      Params:         2       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0
  4855 ;;      Totals:         2       0       0       0       0       0       0
  4856 ;;Total ram usage:        2 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    6
  4859 ;; This function calls:
  4860 ;;		_command_builder3
  4861 ;; This function is called by:
  4862 ;;		_resetCommunications
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text33
  4867  00204C                     __ptext33:
  4868                           	opt stack 0
  4869  00204C                     _com_command_setVersion:
  4870                           	opt stack 21
  4871                           
  4872                           ;SlaveComm.c: 730: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  4873                           
  4874                           ;incstack = 0
  4875  00204C  C039  F02F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  4876  002050  C03A  F030         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  4877  002054  0E4E               	movlw	low STR_2
  4878  002056  6E31               	movwf	command_builder3@data1,c
  4879  002058  0E06               	movlw	high STR_2
  4880  00205A  6E32               	movwf	command_builder3@data1+1,c
  4881  00205C  0E0D               	movlw	low STR_11
  4882  00205E  6E33               	movwf	command_builder3@data2,c
  4883  002060  0E06               	movlw	high STR_11
  4884  002062  6E34               	movwf	command_builder3@data2+1,c
  4885  002064  0E46               	movlw	low STR_29
  4886  002066  6E35               	movwf	command_builder3@data3,c
  4887  002068  0E06               	movlw	high STR_29
  4888  00206A  6E36               	movwf	command_builder3@data3+1,c
  4889  00206C  EC90  F008         	call	_command_builder3	;wreg free
  4890  002070  0012               	return	
  4891  002072                     __end_of_com_command_setVersion:
  4892                           	opt stack 0
  4893                           tblptru	equ	0xFF8
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           intcon	equ	0xFF2
  4897                           intcon2	equ	0xFF1
  4898                           intcon3	equ	0xFF0
  4899                           postinc0	equ	0xFEE
  4900                           wreg	equ	0xFE8
  4901                           indf1	equ	0xFE7
  4902                           postinc1	equ	0xFE6
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _com_command_setPower *****************
  4913 ;; Defined at:
  4914 ;;		line 689 in file "SlaveComm.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4917 ;;		 -> communications@send_buffer(42), 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  temp           12   16[BANK0 ] unsigned char [12]
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4929 ;;      Params:         2       0       0       0       0       0       0
  4930 ;;      Locals:         0      12       0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0       0       0
  4932 ;;      Totals:         2      12       0       0       0       0       0
  4933 ;;Total ram usage:       14 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    6
  4936 ;; This function calls:
  4937 ;;		_command_builder3
  4938 ;;		_ultoa
  4939 ;; This function is called by:
  4940 ;;		_resetCommunications
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text34
  4945  001D3A                     __ptext34:
  4946                           	opt stack 0
  4947  001D3A                     _com_command_setPower:
  4948                           	opt stack 21
  4949                           
  4950                           ;SlaveComm.c: 693: char temp[12];
  4951                           ;SlaveComm.c: 695: ultoa( temp, meterWatts_global, 10 );
  4952                           
  4953                           ;incstack = 0
  4954  001D3A  0E70               	movlw	low com_command_setPower@temp
  4955  001D3C  6E20               	movwf	ultoa@buf,c
  4956  001D3E  0E00               	movlw	high com_command_setPower@temp
  4957  001D40  6E21               	movwf	ultoa@buf+1,c
  4958  001D42  C09D  F022         	movff	_meterWatts_global,ultoa@val
  4959  001D46  C09E  F023         	movff	_meterWatts_global+1,ultoa@val+1
  4960  001D4A  C09F  F024         	movff	_meterWatts_global+2,ultoa@val+2
  4961  001D4E  C0A0  F025         	movff	_meterWatts_global+3,ultoa@val+3
  4962  001D52  0E00               	movlw	0
  4963  001D54  6E27               	movwf	ultoa@base+1,c
  4964  001D56  0E0A               	movlw	10
  4965  001D58  6E26               	movwf	ultoa@base,c
  4966  001D5A  ECBC  F006         	call	_ultoa	;wreg free
  4967                           
  4968                           ;SlaveComm.c: 696: command_builder3( send_buffer, "Set", "Watts", temp );
  4969  001D5E  C039  F02F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  4970  001D62  C03A  F030         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  4971  001D66  0E4E               	movlw	low STR_2
  4972  001D68  6E31               	movwf	command_builder3@data1,c
  4973  001D6A  0E06               	movlw	high STR_2
  4974  001D6C  6E32               	movwf	command_builder3@data1+1,c
  4975  001D6E  0E24               	movlw	low STR_7
  4976  001D70  6E33               	movwf	command_builder3@data2,c
  4977  001D72  0E06               	movlw	high STR_7
  4978  001D74  6E34               	movwf	command_builder3@data2+1,c
  4979  001D76  0E70               	movlw	low com_command_setPower@temp
  4980  001D78  6E35               	movwf	command_builder3@data3,c
  4981  001D7A  0E00               	movlw	high com_command_setPower@temp
  4982  001D7C  6E36               	movwf	command_builder3@data3+1,c
  4983  001D7E  EC90  F008         	call	_command_builder3	;wreg free
  4984  001D82  0012               	return	
  4985  001D84                     __end_of_com_command_setPower:
  4986                           	opt stack 0
  4987                           tblptru	equ	0xFF8
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           intcon2	equ	0xFF1
  4992                           intcon3	equ	0xFF0
  4993                           postinc0	equ	0xFEE
  4994                           wreg	equ	0xFE8
  4995                           indf1	equ	0xFE7
  4996                           postinc1	equ	0xFE6
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _receive_data *****************
  5007 ;; Defined at:
  5008 ;;		line 230 in file "SlaveComm.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  5011 ;;		 -> communications@receive_buffer(42), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  data            1   24[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      enum E6750
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5023 ;;      Params:         2       0       0       0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0
  5025 ;;      Temps:          1       0       0       0       0       0       0
  5026 ;;      Totals:         4       0       0       0       0       0       0
  5027 ;;Total ram usage:        4 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    2
  5030 ;; This function calls:
  5031 ;;		_SPI_receive_data
  5032 ;; This function is called by:
  5033 ;;		_communications
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text35
  5038  0011E2                     __ptext35:
  5039                           	opt stack 0
  5040  0011E2                     _receive_data:
  5041                           	opt stack 26
  5042                           
  5043                           ;SlaveComm.c: 232: char data;
  5044                           ;SlaveComm.c: 234: static enum receive_status my_status = receive_waiting;
  5045                           ;SlaveComm.c: 236: if( my_status == receive_end_command )
  5046                           
  5047                           ;incstack = 0
  5048  0011E2  0E02               	movlw	2
  5049  0011E4  184B               	xorwf	receive_data@my_status,w,c
  5050  0011E6  A4D8               	btfss	status,2,c
  5051  0011E8  D002               	goto	l236
  5052                           
  5053                           ;SlaveComm.c: 237: {
  5054                           ;SlaveComm.c: 238: my_status = receive_waiting;
  5055  0011EA  0E00               	movlw	0
  5056  0011EC  6E4B               	movwf	receive_data@my_status,c
  5057  0011EE                     l236:
  5058                           
  5059                           ;SlaveComm.c: 239: }
  5060                           ;SlaveComm.c: 241: if( SPI_receive_data( &data ) == 1 )
  5061  0011EE  0E19               	movlw	low receive_data@data
  5062  0011F0  6E13               	movwf	SPI_receive_data@data,c
  5063  0011F2  0E00               	movlw	high receive_data@data
  5064  0011F4  6E14               	movwf	SPI_receive_data@data+1,c
  5065  0011F6  EC12  F010         	call	_SPI_receive_data	;wreg free
  5066  0011FA  06E8               	decf	wreg,f,c
  5067  0011FC  A4D8               	btfss	status,2,c
  5068  0011FE  D04F               	goto	l241
  5069                           
  5070                           ;SlaveComm.c: 242: {
  5071                           ;SlaveComm.c: 243: if( (data == '!') && (my_status != receive_in_command) )
  5072  001200  0E21               	movlw	33
  5073  001202  1819               	xorwf	receive_data@data,w,c
  5074  001204  A4D8               	btfss	status,2,c
  5075  001206  D015               	goto	l238
  5076  001208  044B               	decf	receive_data@my_status,w,c
  5077  00120A  B4D8               	btfsc	status,2,c
  5078  00120C  D012               	goto	l238
  5079                           
  5080                           ;SlaveComm.c: 244: {
  5081                           ;SlaveComm.c: 245: my_status = receive_in_command;
  5082  00120E  0E01               	movlw	1
  5083  001210  6E4B               	movwf	receive_data@my_status,c
  5084                           
  5085                           ;SlaveComm.c: 246: receive_buffer->read_position = 0;
  5086  001212  EE20 F029          	lfsr	2,41
  5087  001216  5016               	movf	receive_data@receive_buffer,w,c
  5088  001218  26D9               	addwf	fsr2l,f,c
  5089  00121A  5017               	movf	receive_data@receive_buffer+1,w,c
  5090  00121C  22DA               	addwfc	fsr2h,f,c
  5091  00121E  0E00               	movlw	0
  5092  001220  6EDF               	movwf	indf2,c
  5093                           
  5094                           ;SlaveComm.c: 247: receive_buffer->write_position = 0;
  5095  001222  EE20 F028          	lfsr	2,40
  5096  001226  5016               	movf	receive_data@receive_buffer,w,c
  5097  001228  26D9               	addwf	fsr2l,f,c
  5098  00122A  5017               	movf	receive_data@receive_buffer+1,w,c
  5099  00122C  22DA               	addwfc	fsr2h,f,c
  5100  00122E  0E00               	movlw	0
  5101  001230  6EDF               	movwf	indf2,c
  5102  001232                     l238:
  5103                           
  5104                           ;SlaveComm.c: 248: }
  5105                           ;SlaveComm.c: 250: if( my_status == receive_in_command )
  5106  001232  044B               	decf	receive_data@my_status,w,c
  5107  001234  A4D8               	btfss	status,2,c
  5108  001236  D02A               	goto	l240
  5109                           
  5110                           ;SlaveComm.c: 251: {
  5111                           ;SlaveComm.c: 252: receive_buffer->data_buffer[ receive_buffer->write_position] = data;
  5112  001238  EE20 F028          	lfsr	2,40
  5113  00123C  5016               	movf	receive_data@receive_buffer,w,c
  5114  00123E  26D9               	addwf	fsr2l,f,c
  5115  001240  5017               	movf	receive_data@receive_buffer+1,w,c
  5116  001242  22DA               	addwfc	fsr2h,f,c
  5117  001244  50DF               	movf	indf2,w,c
  5118  001246  6E18               	movwf	??_receive_data& (0+255),c
  5119  001248  5018               	movf	??_receive_data,w,c
  5120  00124A  0D01               	mullw	1
  5121  00124C  50F3               	movf	prodl,w,c
  5122  00124E  2416               	addwf	receive_data@receive_buffer,w,c
  5123  001250  6ED9               	movwf	fsr2l,c
  5124  001252  50F4               	movf	prodh,w,c
  5125  001254  2017               	addwfc	receive_data@receive_buffer+1,w,c
  5126  001256  6EDA               	movwf	fsr2h,c
  5127  001258  C019  FFDF         	movff	receive_data@data,indf2
  5128                           
  5129                           ;SlaveComm.c: 254: receive_buffer->write_position++;
  5130  00125C  EE20 F028          	lfsr	2,40
  5131  001260  5016               	movf	receive_data@receive_buffer,w,c
  5132  001262  26D9               	addwf	fsr2l,f,c
  5133  001264  5017               	movf	receive_data@receive_buffer+1,w,c
  5134  001266  22DA               	addwfc	fsr2h,f,c
  5135  001268  2ADF               	incf	indf2,f,c
  5136                           
  5137                           ;SlaveComm.c: 255: if( receive_buffer->write_position >= 40 )
  5138  00126A  EE20 F028          	lfsr	2,40
  5139  00126E  5016               	movf	receive_data@receive_buffer,w,c
  5140  001270  26D9               	addwf	fsr2l,f,c
  5141  001272  5017               	movf	receive_data@receive_buffer+1,w,c
  5142  001274  22DA               	addwfc	fsr2h,f,c
  5143  001276  0E27               	movlw	39
  5144  001278  64DF               	cpfsgt	indf2,c
  5145  00127A  D008               	goto	l240
  5146                           
  5147                           ;SlaveComm.c: 256: {
  5148                           ;SlaveComm.c: 257: receive_buffer->write_position = (40 - 1);
  5149  00127C  EE20 F028          	lfsr	2,40
  5150  001280  5016               	movf	receive_data@receive_buffer,w,c
  5151  001282  26D9               	addwf	fsr2l,f,c
  5152  001284  5017               	movf	receive_data@receive_buffer+1,w,c
  5153  001286  22DA               	addwfc	fsr2h,f,c
  5154  001288  0E27               	movlw	39
  5155  00128A  6EDF               	movwf	indf2,c
  5156  00128C                     l240:
  5157                           
  5158                           ;SlaveComm.c: 258: }
  5159                           ;SlaveComm.c: 259: }
  5160                           ;SlaveComm.c: 261: if( (my_status == receive_in_command) && (data == '*') )
  5161  00128C  044B               	decf	receive_data@my_status,w,c
  5162  00128E  A4D8               	btfss	status,2,c
  5163  001290  D006               	goto	l241
  5164  001292  0E2A               	movlw	42
  5165  001294  1819               	xorwf	receive_data@data,w,c
  5166  001296  A4D8               	btfss	status,2,c
  5167  001298  D002               	goto	l241
  5168                           
  5169                           ;SlaveComm.c: 262: {
  5170                           ;SlaveComm.c: 263: my_status = receive_end_command;
  5171  00129A  0E02               	movlw	2
  5172  00129C  6E4B               	movwf	receive_data@my_status,c
  5173  00129E                     l241:
  5174                           
  5175                           ;SlaveComm.c: 264: }
  5176                           ;SlaveComm.c: 265: }
  5177                           ;SlaveComm.c: 267: return my_status;
  5178  00129E  504B               	movf	receive_data@my_status,w,c
  5179  0012A0  0012               	return	
  5180  0012A2                     __end_of_receive_data:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           intcon2	equ	0xFF1
  5187                           intcon3	equ	0xFF0
  5188                           postinc0	equ	0xFEE
  5189                           wreg	equ	0xFE8
  5190                           indf1	equ	0xFE7
  5191                           postinc1	equ	0xFE6
  5192                           fsr1h	equ	0xFE2
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _SPI_receive_data *****************
  5202 ;; Defined at:
  5203 ;;		line 637 in file "SlaveComm.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  data            2   18[COMRAM] PTR unsigned char 
  5206 ;;		 -> receive_data@data(1), 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  recvGood        1   20[COMRAM] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      unsigned char 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr2l, fsr2h, status,2
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5218 ;;      Params:         2       0       0       0       0       0       0
  5219 ;;      Locals:         1       0       0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0
  5221 ;;      Totals:         3       0       0       0       0       0       0
  5222 ;;Total ram usage:        3 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_receive_data
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text36
  5233  002024                     __ptext36:
  5234                           	opt stack 0
  5235  002024                     _SPI_receive_data:
  5236                           	opt stack 26
  5237                           
  5238                           ;SlaveComm.c: 640: bool recvGood = 0;
  5239                           
  5240                           ;incstack = 0
  5241  002024  0E00               	movlw	0
  5242  002026  6E15               	movwf	SPI_receive_data@recvGood,c
  5243                           
  5244                           ;SlaveComm.c: 642: if( SSP2STATbits.BF == 1 )
  5245  002028  A06D               	btfss	3949,0,c	;volatile
  5246  00202A  D00C               	goto	l351
  5247                           
  5248                           ;SlaveComm.c: 643: {
  5249                           ;SlaveComm.c: 644: *data = SSP2BUF;
  5250  00202C  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  5251  002030  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  5252  002034  CF6F FFDF          	movff	3951,indf2	;volatile
  5253                           
  5254                           ;SlaveComm.c: 645: recvGood = 1;
  5255  002038  0E01               	movlw	1
  5256  00203A  6E15               	movwf	SPI_receive_data@recvGood,c
  5257                           
  5258                           ;SlaveComm.c: 646: SSP2CON1bits.WCOL = 0;
  5259  00203C  9E6C               	bcf	3948,7,c	;volatile
  5260                           
  5261                           ;SlaveComm.c: 647: SPI_transmit_wait = 0;
  5262  00203E  0E00               	movlw	0
  5263  002040  6E4C               	movwf	_SPI_transmit_wait,c
  5264                           
  5265                           ;SlaveComm.c: 648: }
  5266  002042  D002               	goto	l352
  5267  002044                     l351:
  5268                           
  5269                           ;SlaveComm.c: 649: else
  5270                           ;SlaveComm.c: 650: {
  5271                           ;SlaveComm.c: 651: recvGood = 0;
  5272  002044  0E00               	movlw	0
  5273  002046  6E15               	movwf	SPI_receive_data@recvGood,c
  5274  002048                     l352:
  5275                           
  5276                           ;SlaveComm.c: 652: }
  5277                           ;SlaveComm.c: 654: return recvGood;
  5278  002048  5015               	movf	SPI_receive_data@recvGood,w,c
  5279  00204A  0012               	return	
  5280  00204C                     __end_of_SPI_receive_data:
  5281                           	opt stack 0
  5282                           tblptru	equ	0xFF8
  5283                           prodh	equ	0xFF4
  5284                           prodl	equ	0xFF3
  5285                           intcon	equ	0xFF2
  5286                           intcon2	equ	0xFF1
  5287                           intcon3	equ	0xFF0
  5288                           postinc0	equ	0xFEE
  5289                           wreg	equ	0xFE8
  5290                           indf1	equ	0xFE7
  5291                           postinc1	equ	0xFE6
  5292                           fsr1h	equ	0xFE2
  5293                           fsr1l	equ	0xFE1
  5294                           indf2	equ	0xFDF
  5295                           postinc2	equ	0xFDE
  5296                           postdec2	equ	0xFDD
  5297                           fsr2h	equ	0xFDA
  5298                           fsr2l	equ	0xFD9
  5299                           status	equ	0xFD8
  5300                           
  5301 ;; *************** function _process_data *****************
  5302 ;; Defined at:
  5303 ;;		line 269 in file "SlaveComm.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  receive_buff    2   32[BANK0 ] PTR struct buffer
  5306 ;;		 -> communications@receive_buffer(42), 
  5307 ;;  send_buffer     2   34[BANK0 ] PTR struct buffer
  5308 ;;		 -> communications@send_buffer(42), 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  parameters    105    0[BANK1 ] unsigned char [15][7]
  5311 ;;  end_of_trans    1  105[BANK1 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      unsigned char 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5321 ;;      Params:         0       4       0       0       0       0       0
  5322 ;;      Locals:         0       0     106       0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0
  5324 ;;      Totals:         0       4     106       0       0       0       0
  5325 ;;Total ram usage:      110 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    8
  5328 ;; This function calls:
  5329 ;;		_process_data_parameterize
  5330 ;;		_process_data_parameters
  5331 ;; This function is called by:
  5332 ;;		_communications
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text37
  5337  001F6E                     __ptext37:
  5338                           	opt stack 0
  5339  001F6E                     _process_data:
  5340                           	opt stack 20
  5341                           
  5342                           ;SlaveComm.c: 271: bool end_of_transmission_received;
  5343                           ;SlaveComm.c: 276: char parameters[7][15];
  5344                           ;SlaveComm.c: 278: process_data_parameterize( parameters, receive_buffer );
  5345                           
  5346                           ;incstack = 0
  5347  001F6E  0E00               	movlw	low process_data@parameters
  5348  001F70  6E19               	movwf	process_data_parameterize@parameters,c
  5349  001F72  0E01               	movlw	high process_data@parameters
  5350  001F74  6E1A               	movwf	process_data_parameterize@parameters+1,c
  5351  001F76  C080  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  5352  001F7A  C081  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  5353  001F7E  EC0F  F004         	call	_process_data_parameterize	;wreg free
  5354                           
  5355                           ;SlaveComm.c: 281: end_of_transmission_received = process_data_parameters( parameters, s
      +                          end_buffer );
  5356  001F82  0E00               	movlw	low process_data@parameters
  5357  001F84  0100               	movlb	0	; () banked
  5358  001F86  6F7C               	movwf	process_data_parameters@parameters& (0+255),b
  5359  001F88  0E01               	movlw	high process_data@parameters
  5360  001F8A  6F7D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  5361  001F8C  C082  F07E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  5362  001F90  C083  F07F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  5363  001F94  EC2A  F003         	call	_process_data_parameters	;wreg free
  5364  001F98  0101               	movlb	1	; () banked
  5365  001F9A  6F69               	movwf	process_data@end_of_transmission_received& (0+255),b
  5366                           
  5367                           ; BSR set to: 1
  5368                           ;SlaveComm.c: 284: return end_of_transmission_received;
  5369  001F9C  5169               	movf	process_data@end_of_transmission_received& (0+255),w,b
  5370  001F9E  0012               	return	
  5371  001FA0                     __end_of_process_data:
  5372                           	opt stack 0
  5373                           tblptru	equ	0xFF8
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           intcon2	equ	0xFF1
  5378                           intcon3	equ	0xFF0
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           indf1	equ	0xFE7
  5382                           postinc1	equ	0xFE6
  5383                           fsr1h	equ	0xFE2
  5384                           fsr1l	equ	0xFE1
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _process_data_parameters *****************
  5393 ;; Defined at:
  5394 ;;		line 350 in file "SlaveComm.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  parameters      2   28[BANK0 ] PTR unsigned char [15]
  5397 ;;		 -> process_data@parameters(105), 
  5398 ;;  send_buffer     2   30[BANK0 ] PTR struct buffer
  5399 ;;		 -> communications@send_buffer(42), 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  end_of_trans    1   58[COMRAM] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      unsigned char 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5411 ;;      Params:         0       4       0       0       0       0       0
  5412 ;;      Locals:         1       0       0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0
  5414 ;;      Totals:         1       4       0       0       0       0       0
  5415 ;;Total ram usage:        5 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    7
  5418 ;; This function calls:
  5419 ;;		_atol
  5420 ;;		_com_command_setEnergyUsed
  5421 ;;		_send_end_of_transmission
  5422 ;;		_strmatch
  5423 ;; This function is called by:
  5424 ;;		_process_data
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text38
  5429  000654                     __ptext38:
  5430                           	opt stack 0
  5431  000654                     _process_data_parameters:
  5432                           	opt stack 20
  5433                           
  5434                           ;SlaveComm.c: 352: bool end_of_transmission_received = 0;
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;incstack = 0
  5438  000654  0E00               	movlw	0
  5439  000656  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5440                           
  5441                           ;SlaveComm.c: 355: if( strmatch( parameters[0], "END" ) == 1 )
  5442  000658  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5443  00065C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5444  000660  0E4A               	movlw	low STR_1
  5445  000662  6E20               	movwf	strmatch@b,c
  5446  000664  0E06               	movlw	high STR_1
  5447  000666  6E21               	movwf	strmatch@b+1,c
  5448  000668  ECD0  F00F         	call	_strmatch	;wreg free
  5449  00066C  06E8               	decf	wreg,f,c
  5450  00066E  A4D8               	btfss	status,2,c
  5451  000670  D003               	goto	l265
  5452                           
  5453                           ;SlaveComm.c: 356: {
  5454                           ;SlaveComm.c: 357: end_of_transmission_received = 1;
  5455  000672  0E01               	movlw	1
  5456  000674  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5457                           
  5458                           ;SlaveComm.c: 358: }
  5459  000676  D0D1               	goto	l283
  5460  000678                     l265:
  5461                           
  5462                           ;SlaveComm.c: 359: else if( strmatch( parameters[0], "Set" ) == 1 )
  5463  000678  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5464  00067C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5465  000680  0E4E               	movlw	low STR_2
  5466  000682  6E20               	movwf	strmatch@b,c
  5467  000684  0E06               	movlw	high STR_2
  5468  000686  6E21               	movwf	strmatch@b+1,c
  5469  000688  ECD0  F00F         	call	_strmatch	;wreg free
  5470  00068C  06E8               	decf	wreg,f,c
  5471  00068E  A4D8               	btfss	status,2,c
  5472  000690  D038               	goto	l267
  5473                           
  5474                           ;SlaveComm.c: 360: {
  5475                           ;SlaveComm.c: 361: if( strmatch( parameters[1], "Calibration" ) == 1 )
  5476  000692  0E0F               	movlw	15
  5477  000694  0100               	movlb	0	; () banked
  5478  000696  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5479  000698  6E1E               	movwf	strmatch@a,c
  5480  00069A  0E00               	movlw	0
  5481  00069C  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5482  00069E  6E1F               	movwf	strmatch@a+1,c
  5483  0006A0  0E01               	movlw	low STR_3
  5484  0006A2  6E20               	movwf	strmatch@b,c
  5485  0006A4  0E06               	movlw	high STR_3
  5486  0006A6  6E21               	movwf	strmatch@b+1,c
  5487  0006A8  ECD0  F00F         	call	_strmatch	;wreg free
  5488  0006AC  06E8               	decf	wreg,f,c
  5489  0006AE  B4D8               	btfsc	status,2,c
  5490  0006B0  D0B4               	goto	l283
  5491                           
  5492                           ;SlaveComm.c: 365: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5493                           
  5494                           ;SlaveComm.c: 362: {
  5495                           ;SlaveComm.c: 364: }
  5496  0006B2  0E0F               	movlw	15
  5497  0006B4  0100               	movlb	0	; () banked
  5498  0006B6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5499  0006B8  6E1E               	movwf	strmatch@a,c
  5500  0006BA  0E00               	movlw	0
  5501  0006BC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5502  0006BE  6E1F               	movwf	strmatch@a+1,c
  5503  0006C0  0E17               	movlw	low STR_4
  5504  0006C2  6E20               	movwf	strmatch@b,c
  5505  0006C4  0E06               	movlw	high STR_4
  5506  0006C6  6E21               	movwf	strmatch@b+1,c
  5507  0006C8  ECD0  F00F         	call	_strmatch	;wreg free
  5508  0006CC  06E8               	decf	wreg,f,c
  5509  0006CE  A4D8               	btfss	status,2,c
  5510  0006D0  D0A4               	goto	l283
  5511                           
  5512                           ;SlaveComm.c: 366: {
  5513                           ;SlaveComm.c: 371: meterEnergyUsed_global = atol( parameters[2] );
  5514  0006D2  0E1E               	movlw	30
  5515  0006D4  0100               	movlb	0	; () banked
  5516  0006D6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5517  0006D8  6E1F               	movwf	atol@s,c
  5518  0006DA  0E00               	movlw	0
  5519  0006DC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5520  0006DE  6E20               	movwf	atol@s+1,c
  5521  0006E0  EC37  F007         	call	_atol	;wreg free
  5522  0006E4  C01F  F03D         	movff	?_atol,_meterEnergyUsed_global
  5523  0006E8  C020  F03E         	movff	?_atol+1,_meterEnergyUsed_global+1
  5524  0006EC  C021  F03F         	movff	?_atol+2,_meterEnergyUsed_global+2
  5525  0006F0  C022  F040         	movff	?_atol+3,_meterEnergyUsed_global+3
  5526                           
  5527                           ;SlaveComm.c: 372: com_command_setEnergyUsed( send_buffer );
  5528  0006F4  C07E  F039         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  5529  0006F8  C07F  F03A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  5530  0006FC  ECC2  F00E         	call	_com_command_setEnergyUsed	;wreg free
  5531                           
  5532                           ;SlaveComm.c: 373: }
  5533                           ;SlaveComm.c: 374: }
  5534  000700  D08C               	goto	l283
  5535  000702                     l267:
  5536                           
  5537                           ;SlaveComm.c: 375: else if( strmatch( parameters[0], "Read" ) == 1 )
  5538  000702  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5539  000706  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5540  00070A  0E2F               	movlw	low STR_5
  5541  00070C  6E20               	movwf	strmatch@b,c
  5542  00070E  0E06               	movlw	high STR_5
  5543  000710  6E21               	movwf	strmatch@b+1,c
  5544  000712  ECD0  F00F         	call	_strmatch	;wreg free
  5545  000716  06E8               	decf	wreg,f,c
  5546  000718  B4D8               	btfsc	status,2,c
  5547  00071A  D07F               	goto	l283
  5548                           
  5549                           ;SlaveComm.c: 380: else if( strmatch( parameters[0], "Conf" ) == 1 )
  5550                           
  5551                           ;SlaveComm.c: 376: {
  5552                           ;SlaveComm.c: 379: }
  5553  00071C  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5554  000720  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5555  000724  0E34               	movlw	low STR_6
  5556  000726  6E20               	movwf	strmatch@b,c
  5557  000728  0E06               	movlw	high STR_6
  5558  00072A  6E21               	movwf	strmatch@b+1,c
  5559  00072C  ECD0  F00F         	call	_strmatch	;wreg free
  5560  000730  06E8               	decf	wreg,f,c
  5561  000732  A4D8               	btfss	status,2,c
  5562  000734  D072               	goto	l283
  5563                           
  5564                           ;SlaveComm.c: 381: {
  5565                           ;SlaveComm.c: 382: if( strmatch( parameters[1], "Watts" ) == 1 )
  5566  000736  0E0F               	movlw	15
  5567  000738  0100               	movlb	0	; () banked
  5568  00073A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5569  00073C  6E1E               	movwf	strmatch@a,c
  5570  00073E  0E00               	movlw	0
  5571  000740  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5572  000742  6E1F               	movwf	strmatch@a+1,c
  5573  000744  0E24               	movlw	low STR_7
  5574  000746  6E20               	movwf	strmatch@b,c
  5575  000748  0E06               	movlw	high STR_7
  5576  00074A  6E21               	movwf	strmatch@b+1,c
  5577  00074C  ECD0  F00F         	call	_strmatch	;wreg free
  5578  000750  06E8               	decf	wreg,f,c
  5579  000752  A4D8               	btfss	status,2,c
  5580  000754  D007               	goto	l275
  5581                           
  5582                           ;SlaveComm.c: 383: {
  5583                           ;SlaveComm.c: 384: send_end_of_transmission( send_buffer );
  5584  000756  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5585  00075A  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5586  00075E  ECA2  F010         	call	_send_end_of_transmission	;wreg free
  5587                           
  5588                           ;SlaveComm.c: 385: }
  5589  000762  D05B               	goto	l283
  5590  000764                     l275:
  5591                           
  5592                           ;SlaveComm.c: 386: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5593  000764  0E0F               	movlw	15
  5594  000766  0100               	movlb	0	; () banked
  5595  000768  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5596  00076A  6E1E               	movwf	strmatch@a,c
  5597  00076C  0E00               	movlw	0
  5598  00076E  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5599  000770  6E1F               	movwf	strmatch@a+1,c
  5600  000772  0E17               	movlw	low STR_4
  5601  000774  6E20               	movwf	strmatch@b,c
  5602  000776  0E06               	movlw	high STR_4
  5603  000778  6E21               	movwf	strmatch@b+1,c
  5604  00077A  ECD0  F00F         	call	_strmatch	;wreg free
  5605  00077E  06E8               	decf	wreg,f,c
  5606  000780  A4D8               	btfss	status,2,c
  5607  000782  D007               	goto	l277
  5608                           
  5609                           ;SlaveComm.c: 387: {
  5610                           ;SlaveComm.c: 388: send_end_of_transmission( send_buffer );
  5611  000784  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5612  000788  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5613  00078C  ECA2  F010         	call	_send_end_of_transmission	;wreg free
  5614                           
  5615                           ;SlaveComm.c: 389: }
  5616  000790  D044               	goto	l283
  5617  000792                     l277:
  5618                           
  5619                           ;SlaveComm.c: 390: else if( strmatch( parameters[1], "Volts" ) == 1 )
  5620  000792  0E0F               	movlw	15
  5621  000794  0100               	movlb	0	; () banked
  5622  000796  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5623  000798  6E1E               	movwf	strmatch@a,c
  5624  00079A  0E00               	movlw	0
  5625  00079C  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5626  00079E  6E1F               	movwf	strmatch@a+1,c
  5627  0007A0  0E1E               	movlw	low STR_9
  5628  0007A2  6E20               	movwf	strmatch@b,c
  5629  0007A4  0E06               	movlw	high STR_9
  5630  0007A6  6E21               	movwf	strmatch@b+1,c
  5631  0007A8  ECD0  F00F         	call	_strmatch	;wreg free
  5632  0007AC  06E8               	decf	wreg,f,c
  5633  0007AE  A4D8               	btfss	status,2,c
  5634  0007B0  D007               	goto	l279
  5635                           
  5636                           ;SlaveComm.c: 391: {
  5637                           ;SlaveComm.c: 392: send_end_of_transmission( send_buffer );
  5638  0007B2  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5639  0007B6  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5640  0007BA  ECA2  F010         	call	_send_end_of_transmission	;wreg free
  5641                           
  5642                           ;SlaveComm.c: 393: }
  5643  0007BE  D02D               	goto	l283
  5644  0007C0                     l279:
  5645                           
  5646                           ;SlaveComm.c: 394: else if( strmatch( parameters[1], "Amps" ) == 1 )
  5647  0007C0  0E0F               	movlw	15
  5648  0007C2  0100               	movlb	0	; () banked
  5649  0007C4  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5650  0007C6  6E1E               	movwf	strmatch@a,c
  5651  0007C8  0E00               	movlw	0
  5652  0007CA  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5653  0007CC  6E1F               	movwf	strmatch@a+1,c
  5654  0007CE  0E39               	movlw	low STR_10
  5655  0007D0  6E20               	movwf	strmatch@b,c
  5656  0007D2  0E06               	movlw	high STR_10
  5657  0007D4  6E21               	movwf	strmatch@b+1,c
  5658  0007D6  ECD0  F00F         	call	_strmatch	;wreg free
  5659  0007DA  06E8               	decf	wreg,f,c
  5660  0007DC  A4D8               	btfss	status,2,c
  5661  0007DE  D007               	goto	l281
  5662                           
  5663                           ;SlaveComm.c: 395: {
  5664                           ;SlaveComm.c: 396: send_end_of_transmission( send_buffer );
  5665  0007E0  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5666  0007E4  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5667  0007E8  ECA2  F010         	call	_send_end_of_transmission	;wreg free
  5668                           
  5669                           ;SlaveComm.c: 397: }
  5670  0007EC  D016               	goto	l283
  5671  0007EE                     l281:
  5672                           
  5673                           ;SlaveComm.c: 398: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  5674  0007EE  0E0F               	movlw	15
  5675  0007F0  0100               	movlb	0	; () banked
  5676  0007F2  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5677  0007F4  6E1E               	movwf	strmatch@a,c
  5678  0007F6  0E00               	movlw	0
  5679  0007F8  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5680  0007FA  6E1F               	movwf	strmatch@a+1,c
  5681  0007FC  0E0D               	movlw	low STR_11
  5682  0007FE  6E20               	movwf	strmatch@b,c
  5683  000800  0E06               	movlw	high STR_11
  5684  000802  6E21               	movwf	strmatch@b+1,c
  5685  000804  ECD0  F00F         	call	_strmatch	;wreg free
  5686  000808  06E8               	decf	wreg,f,c
  5687  00080A  A4D8               	btfss	status,2,c
  5688  00080C  D006               	goto	l283
  5689                           
  5690                           ;SlaveComm.c: 399: {
  5691                           ;SlaveComm.c: 400: send_end_of_transmission( send_buffer );
  5692  00080E  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5693  000812  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5694  000816  ECA2  F010         	call	_send_end_of_transmission	;wreg free
  5695  00081A                     l283:
  5696                           
  5697                           ;SlaveComm.c: 401: }
  5698                           ;SlaveComm.c: 402: }
  5699                           ;SlaveComm.c: 408: return end_of_transmission_received;
  5700  00081A  503B               	movf	process_data_parameters@end_of_transmission_received,w,c
  5701  00081C  0012               	return	
  5702  00081E                     __end_of_process_data_parameters:
  5703                           	opt stack 0
  5704                           tblptru	equ	0xFF8
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           intcon	equ	0xFF2
  5708                           intcon2	equ	0xFF1
  5709                           intcon3	equ	0xFF0
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           indf1	equ	0xFE7
  5713                           postinc1	equ	0xFE6
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _strmatch *****************
  5724 ;; Defined at:
  5725 ;;		line 590 in file "SlaveComm.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  a               2   29[COMRAM] PTR unsigned char 
  5728 ;;		 -> process_data@parameters(105), 
  5729 ;;  b               2   31[COMRAM] PTR unsigned char 
  5730 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5731 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5732 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  result          2   33[COMRAM] int 
  5735 ;;  match           1   35[COMRAM] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      unsigned char 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5745 ;;      Params:         4       0       0       0       0       0       0
  5746 ;;      Locals:         3       0       0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0
  5748 ;;      Totals:         7       0       0       0       0       0       0
  5749 ;;Total ram usage:        7 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		_strcmp2
  5754 ;; This function is called by:
  5755 ;;		_process_data_parameters
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text39
  5760  001FA0                     __ptext39:
  5761                           	opt stack 0
  5762  001FA0                     _strmatch:
  5763                           	opt stack 24
  5764                           
  5765                           ;SlaveComm.c: 592: int result;
  5766                           ;SlaveComm.c: 593: bool match;
  5767                           ;SlaveComm.c: 595: result = strcmp2( a, b );
  5768                           
  5769                           ;incstack = 0
  5770  001FA0  C01E  F013         	movff	strmatch@a,strcmp2@a
  5771  001FA4  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  5772  001FA8  C020  F015         	movff	strmatch@b,strcmp2@b
  5773  001FAC  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  5774  001FB0  ECA5  F005         	call	_strcmp2	;wreg free
  5775  001FB4  C013  F022         	movff	?_strcmp2,strmatch@result
  5776  001FB8  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  5777                           
  5778                           ;SlaveComm.c: 597: match = (result == 0) ? 1 : 0;
  5779  001FBC  5022               	movf	strmatch@result,w,c
  5780  001FBE  1023               	iorwf	strmatch@result+1,w,c
  5781  001FC0  A4D8               	btfss	status,2,c
  5782  001FC2  D002               	goto	u2830
  5783  001FC4  0E01               	movlw	1
  5784  001FC6  D001               	goto	u2840
  5785  001FC8                     u2830:
  5786  001FC8  0E00               	movlw	0
  5787  001FCA                     u2840:
  5788  001FCA  6E24               	movwf	strmatch@match,c
  5789                           
  5790                           ;SlaveComm.c: 599: return match;
  5791  001FCC  5024               	movf	strmatch@match,w,c
  5792  001FCE  0012               	return	
  5793  001FD0                     __end_of_strmatch:
  5794                           	opt stack 0
  5795                           tblptru	equ	0xFF8
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           intcon2	equ	0xFF1
  5800                           intcon3	equ	0xFF0
  5801                           postinc0	equ	0xFEE
  5802                           wreg	equ	0xFE8
  5803                           indf1	equ	0xFE7
  5804                           postinc1	equ	0xFE6
  5805                           fsr1h	equ	0xFE2
  5806                           fsr1l	equ	0xFE1
  5807                           indf2	equ	0xFDF
  5808                           postinc2	equ	0xFDE
  5809                           postdec2	equ	0xFDD
  5810                           fsr2h	equ	0xFDA
  5811                           fsr2l	equ	0xFD9
  5812                           status	equ	0xFD8
  5813                           
  5814 ;; *************** function _strcmp2 *****************
  5815 ;; Defined at:
  5816 ;;		line 601 in file "SlaveComm.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  a               2   18[COMRAM] PTR unsigned char 
  5819 ;;		 -> process_data@parameters(105), 
  5820 ;;  b               2   20[COMRAM] PTR unsigned char 
  5821 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5822 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5823 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  inx             2   27[COMRAM] int 
  5826 ;;  match           2   25[COMRAM] int 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  2   18[COMRAM] int 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5836 ;;      Params:         4       0       0       0       0       0       0
  5837 ;;      Locals:         4       0       0       0       0       0       0
  5838 ;;      Temps:          3       0       0       0       0       0       0
  5839 ;;      Totals:        11       0       0       0       0       0       0
  5840 ;;Total ram usage:       11 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    1
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_strmatch
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text40
  5851  000B4A                     __ptext40:
  5852                           	opt stack 0
  5853  000B4A                     _strcmp2:
  5854                           	opt stack 24
  5855                           
  5856                           ;SlaveComm.c: 603: int inx = 0;
  5857                           
  5858                           ;incstack = 0
  5859  000B4A  0E00               	movlw	0
  5860  000B4C  6E1D               	movwf	strcmp2@inx+1,c
  5861  000B4E  0E00               	movlw	0
  5862  000B50  6E1C               	movwf	strcmp2@inx,c
  5863                           
  5864                           ;SlaveComm.c: 604: int match = 0;
  5865  000B52  0E00               	movlw	0
  5866  000B54  6E1B               	movwf	strcmp2@match+1,c
  5867  000B56  0E00               	movlw	0
  5868  000B58  6E1A               	movwf	strcmp2@match,c
  5869                           
  5870                           ;SlaveComm.c: 606: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  5871  000B5A  D035               	goto	l335
  5872  000B5C                     
  5873                           ;SlaveComm.c: 607: {
  5874                           ;SlaveComm.c: 608: if( a[inx] > b[inx] )
  5875  000B5C  501C               	movf	strcmp2@inx,w,c
  5876  000B5E  2413               	addwf	strcmp2@a,w,c
  5877  000B60  6ED9               	movwf	fsr2l,c
  5878  000B62  501D               	movf	strcmp2@inx+1,w,c
  5879  000B64  2014               	addwfc	strcmp2@a+1,w,c
  5880  000B66  6EDA               	movwf	fsr2h,c
  5881  000B68  501C               	movf	strcmp2@inx,w,c
  5882  000B6A  2415               	addwf	strcmp2@b,w,c
  5883  000B6C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5884  000B6E  501D               	movf	strcmp2@inx+1,w,c
  5885  000B70  2016               	addwfc	strcmp2@b+1,w,c
  5886  000B72  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  5887  000B74  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  5888  000B78  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  5889  000B7C                     	if	0	;tblptru may be non-zero
  5890  000B7C                     	endif
  5891  000B7C                     	if	0	;tblptru may be non-zero
  5892  000B7C                     	endif
  5893  000B7C  50DE               	movf	postinc2,w,c
  5894  000B7E  0009               	tblrd		*+
  5895  000B80  5CF5               	subwf	tablat,w,c
  5896  000B82  B0D8               	btfsc	status,0,c
  5897  000B84  D005               	goto	l337
  5898                           
  5899                           ;SlaveComm.c: 609: {
  5900                           ;SlaveComm.c: 610: match = 1;
  5901  000B86  0E00               	movlw	0
  5902  000B88  6E1B               	movwf	strcmp2@match+1,c
  5903  000B8A  0E01               	movlw	1
  5904  000B8C  6E1A               	movwf	strcmp2@match,c
  5905                           
  5906                           ;SlaveComm.c: 611: }
  5907  000B8E  D019               	goto	l339
  5908  000B90                     l337:
  5909                           
  5910                           ;SlaveComm.c: 612: else if( a[inx] < b[inx] )
  5911  000B90  501C               	movf	strcmp2@inx,w,c
  5912  000B92  2413               	addwf	strcmp2@a,w,c
  5913  000B94  6ED9               	movwf	fsr2l,c
  5914  000B96  501D               	movf	strcmp2@inx+1,w,c
  5915  000B98  2014               	addwfc	strcmp2@a+1,w,c
  5916  000B9A  6EDA               	movwf	fsr2h,c
  5917  000B9C  50DF               	movf	indf2,w,c
  5918  000B9E  6E17               	movwf	??_strcmp2& (0+255),c
  5919  000BA0  501C               	movf	strcmp2@inx,w,c
  5920  000BA2  2415               	addwf	strcmp2@b,w,c
  5921  000BA4  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5922  000BA6  501D               	movf	strcmp2@inx+1,w,c
  5923  000BA8  2016               	addwfc	strcmp2@b+1,w,c
  5924  000BAA  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  5925  000BAC  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  5926  000BB0  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  5927  000BB4                     	if	0	;tblptru may be non-zero
  5928  000BB4                     	endif
  5929  000BB4                     	if	0	;tblptru may be non-zero
  5930  000BB4                     	endif
  5931  000BB4  0008               	tblrd		*
  5932  000BB6  50F5               	movf	tablat,w,c
  5933  000BB8  5C17               	subwf	??_strcmp2,w,c
  5934  000BBA  B0D8               	btfsc	status,0,c
  5935  000BBC  D002               	goto	l339
  5936                           
  5937                           ;SlaveComm.c: 613: {
  5938                           ;SlaveComm.c: 614: match = -1;
  5939  000BBE  681A               	setf	strcmp2@match,c
  5940  000BC0  681B               	setf	strcmp2@match+1,c
  5941  000BC2                     l339:
  5942                           
  5943                           ;SlaveComm.c: 619: }
  5944                           ;SlaveComm.c: 621: inx++;
  5945                           
  5946                           ;SlaveComm.c: 617: {
  5947  000BC2  4A1C               	infsnz	strcmp2@inx,f,c
  5948  000BC4  2A1D               	incf	strcmp2@inx+1,f,c
  5949  000BC6                     l335:
  5950  000BC6  501C               	movf	strcmp2@inx,w,c
  5951  000BC8  2413               	addwf	strcmp2@a,w,c
  5952  000BCA  6ED9               	movwf	fsr2l,c
  5953  000BCC  501D               	movf	strcmp2@inx+1,w,c
  5954  000BCE  2014               	addwfc	strcmp2@a+1,w,c
  5955  000BD0  6EDA               	movwf	fsr2h,c
  5956  000BD2  50DF               	movf	indf2,w,c
  5957  000BD4  B4D8               	btfsc	status,2,c
  5958  000BD6  D013               	goto	u2710
  5959  000BD8  501C               	movf	strcmp2@inx,w,c
  5960  000BDA  2415               	addwf	strcmp2@b,w,c
  5961  000BDC  6E17               	movwf	??_strcmp2& (0+255),c
  5962  000BDE  501D               	movf	strcmp2@inx+1,w,c
  5963  000BE0  2016               	addwfc	strcmp2@b+1,w,c
  5964  000BE2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5965  000BE4  C017  FFF6         	movff	??_strcmp2,tblptrl
  5966  000BE8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  5967  000BEC                     	if	0	;tblptru may be non-zero
  5968  000BEC                     	endif
  5969  000BEC                     	if	0	;tblptru may be non-zero
  5970  000BEC                     	endif
  5971  000BEC  0008               	tblrd		*
  5972  000BEE  50F5               	movf	tablat,w,c
  5973  000BF0  0900               	iorlw	0
  5974  000BF2  B4D8               	btfsc	status,2,c
  5975  000BF4  D004               	goto	u2710
  5976  000BF6  501A               	movf	strcmp2@match,w,c
  5977  000BF8  101B               	iorwf	strcmp2@match+1,w,c
  5978  000BFA  B4D8               	btfsc	status,2,c
  5979  000BFC  D7AF               	goto	l336
  5980  000BFE                     u2710:
  5981                           
  5982                           ;SlaveComm.c: 622: }
  5983                           ;SlaveComm.c: 625: if( (a[inx] == '\0') && (b[inx] != '\0') )
  5984  000BFE  501C               	movf	strcmp2@inx,w,c
  5985  000C00  2413               	addwf	strcmp2@a,w,c
  5986  000C02  6ED9               	movwf	fsr2l,c
  5987  000C04  501D               	movf	strcmp2@inx+1,w,c
  5988  000C06  2014               	addwfc	strcmp2@a+1,w,c
  5989  000C08  6EDA               	movwf	fsr2h,c
  5990  000C0A  50DF               	movf	indf2,w,c
  5991  000C0C  A4D8               	btfss	status,2,c
  5992  000C0E  D012               	goto	l345
  5993  000C10  501C               	movf	strcmp2@inx,w,c
  5994  000C12  2415               	addwf	strcmp2@b,w,c
  5995  000C14  6E17               	movwf	??_strcmp2& (0+255),c
  5996  000C16  501D               	movf	strcmp2@inx+1,w,c
  5997  000C18  2016               	addwfc	strcmp2@b+1,w,c
  5998  000C1A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5999  000C1C  C017  FFF6         	movff	??_strcmp2,tblptrl
  6000  000C20  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  6001  000C24                     	if	0	;tblptru may be non-zero
  6002  000C24                     	endif
  6003  000C24                     	if	0	;tblptru may be non-zero
  6004  000C24                     	endif
  6005  000C24  0008               	tblrd		*
  6006  000C26  50F5               	movf	tablat,w,c
  6007  000C28  0900               	iorlw	0
  6008  000C2A  B4D8               	btfsc	status,2,c
  6009  000C2C  D003               	goto	l345
  6010                           
  6011                           ;SlaveComm.c: 626: {
  6012                           ;SlaveComm.c: 627: match = -1;
  6013  000C2E  681A               	setf	strcmp2@match,c
  6014  000C30  681B               	setf	strcmp2@match+1,c
  6015                           
  6016                           ;SlaveComm.c: 628: }
  6017  000C32  D01C               	goto	l347
  6018  000C34                     l345:
  6019                           
  6020                           ;SlaveComm.c: 629: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  6021  000C34  501C               	movf	strcmp2@inx,w,c
  6022  000C36  2413               	addwf	strcmp2@a,w,c
  6023  000C38  6ED9               	movwf	fsr2l,c
  6024  000C3A  501D               	movf	strcmp2@inx+1,w,c
  6025  000C3C  2014               	addwfc	strcmp2@a+1,w,c
  6026  000C3E  6EDA               	movwf	fsr2h,c
  6027  000C40  50DF               	movf	indf2,w,c
  6028  000C42  B4D8               	btfsc	status,2,c
  6029  000C44  D013               	goto	l347
  6030  000C46  501C               	movf	strcmp2@inx,w,c
  6031  000C48  2415               	addwf	strcmp2@b,w,c
  6032  000C4A  6E17               	movwf	??_strcmp2& (0+255),c
  6033  000C4C  501D               	movf	strcmp2@inx+1,w,c
  6034  000C4E  2016               	addwfc	strcmp2@b+1,w,c
  6035  000C50  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  6036  000C52  C017  FFF6         	movff	??_strcmp2,tblptrl
  6037  000C56  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  6038  000C5A                     	if	0	;tblptru may be non-zero
  6039  000C5A                     	endif
  6040  000C5A                     	if	0	;tblptru may be non-zero
  6041  000C5A                     	endif
  6042  000C5A  0008               	tblrd		*
  6043  000C5C  50F5               	movf	tablat,w,c
  6044  000C5E  0900               	iorlw	0
  6045  000C60  A4D8               	btfss	status,2,c
  6046  000C62  D004               	goto	l347
  6047                           
  6048                           ;SlaveComm.c: 630: {
  6049                           ;SlaveComm.c: 631: match = 1;
  6050  000C64  0E00               	movlw	0
  6051  000C66  6E1B               	movwf	strcmp2@match+1,c
  6052  000C68  0E01               	movlw	1
  6053  000C6A  6E1A               	movwf	strcmp2@match,c
  6054  000C6C                     l347:
  6055                           
  6056                           ;SlaveComm.c: 632: }
  6057                           ;SlaveComm.c: 634: return match;
  6058  000C6C  C01A  F013         	movff	strcmp2@match,?_strcmp2
  6059  000C70  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  6060  000C74  0012               	return	
  6061  000C76                     __end_of_strcmp2:
  6062                           	opt stack 0
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           intcon	equ	0xFF2
  6070                           intcon2	equ	0xFF1
  6071                           intcon3	equ	0xFF0
  6072                           postinc0	equ	0xFEE
  6073                           wreg	equ	0xFE8
  6074                           indf1	equ	0xFE7
  6075                           postinc1	equ	0xFE6
  6076                           fsr1h	equ	0xFE2
  6077                           fsr1l	equ	0xFE1
  6078                           indf2	equ	0xFDF
  6079                           postinc2	equ	0xFDE
  6080                           postdec2	equ	0xFDD
  6081                           fsr2h	equ	0xFDA
  6082                           fsr2l	equ	0xFD9
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function _send_end_of_transmission *****************
  6086 ;; Defined at:
  6087 ;;		line 677 in file "SlaveComm.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  send_buffer     2   52[COMRAM] PTR struct buffer
  6090 ;;		 -> communications@send_buffer(42), 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6102 ;;      Params:         2       0       0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0
  6105 ;;      Totals:         2       0       0       0       0       0       0
  6106 ;;Total ram usage:        2 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    6
  6109 ;; This function calls:
  6110 ;;		_command_builder1
  6111 ;; This function is called by:
  6112 ;;		_process_data_parameters
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text41
  6117  002144                     __ptext41:
  6118                           	opt stack 0
  6119  002144                     _send_end_of_transmission:
  6120                           	opt stack 20
  6121                           
  6122                           ;SlaveComm.c: 679: command_builder1( send_buffer, "END" );
  6123                           
  6124                           ;incstack = 0
  6125  002144  C035  F02F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  6126  002148  C036  F030         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  6127  00214C  0E4A               	movlw	low STR_1
  6128  00214E  6E31               	movwf	command_builder1@data1,c
  6129  002150  0E06               	movlw	high STR_1
  6130  002152  6E32               	movwf	command_builder1@data1+1,c
  6131  002154  ECA7  F00D         	call	_command_builder1	;wreg free
  6132  002158  0012               	return	
  6133  00215A                     __end_of_send_end_of_transmission:
  6134                           	opt stack 0
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon	equ	0xFF2
  6142                           intcon2	equ	0xFF1
  6143                           intcon3	equ	0xFF0
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           indf1	equ	0xFE7
  6147                           postinc1	equ	0xFE6
  6148                           fsr1h	equ	0xFE2
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           fsr2h	equ	0xFDA
  6154                           fsr2l	equ	0xFD9
  6155                           status	equ	0xFD8
  6156                           
  6157 ;; *************** function _command_builder1 *****************
  6158 ;; Defined at:
  6159 ;;		line 467 in file "SlaveComm.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  6162 ;;		 -> communications@send_buffer(42), 
  6163 ;;  data1           2   48[COMRAM] PTR unsigned char 
  6164 ;;		 -> STR_12(4), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  xsum            2   50[COMRAM] int 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6176 ;;      Params:         4       0       0       0       0       0       0
  6177 ;;      Locals:         2       0       0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0
  6179 ;;      Totals:         6       0       0       0       0       0       0
  6180 ;;Total ram usage:        6 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    5
  6183 ;; This function calls:
  6184 ;;		_command_builder_add_char
  6185 ;;		_command_builder_add_string
  6186 ;;		_xsum_builder
  6187 ;; This function is called by:
  6188 ;;		_send_end_of_transmission
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text42
  6193  001B4E                     __ptext42:
  6194                           	opt stack 0
  6195  001B4E                     _command_builder1:
  6196                           	opt stack 20
  6197                           
  6198                           ;SlaveComm.c: 469: command_builder_add_char( send_buffer, '#' );
  6199                           
  6200                           ;incstack = 0
  6201  001B4E  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  6202  001B52  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  6203  001B56  0E23               	movlw	35
  6204  001B58  6E15               	movwf	command_builder_add_char@data,c
  6205  001B5A  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6206                           
  6207                           ;SlaveComm.c: 470: command_builder_add_char( send_buffer, '!' );
  6208  001B5E  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  6209  001B62  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  6210  001B66  0E21               	movlw	33
  6211  001B68  6E15               	movwf	command_builder_add_char@data,c
  6212  001B6A  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6213                           
  6214                           ;SlaveComm.c: 472: int xsum = 0;
  6215  001B6E  0E00               	movlw	0
  6216  001B70  6E34               	movwf	command_builder1@xsum+1,c
  6217  001B72  0E00               	movlw	0
  6218  001B74  6E33               	movwf	command_builder1@xsum,c
  6219                           
  6220                           ;SlaveComm.c: 473: xsum += command_builder_add_string( send_buffer, data1 );
  6221  001B76  C02F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  6222  001B7A  C030  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  6223  001B7E  C031  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  6224  001B82  C032  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  6225  001B86  EC58  F00B         	call	_command_builder_add_string	;wreg free
  6226  001B8A  5017               	movf	?_command_builder_add_string,w,c
  6227  001B8C  2633               	addwf	command_builder1@xsum,f,c
  6228  001B8E  5018               	movf	?_command_builder_add_string+1,w,c
  6229  001B90  2234               	addwfc	command_builder1@xsum+1,f,c
  6230                           
  6231                           ;SlaveComm.c: 475: xsum_builder( send_buffer, xsum );
  6232  001B92  C02F  F02B         	movff	command_builder1@send_buffer,xsum_builder@send_buffer
  6233  001B96  C030  F02C         	movff	command_builder1@send_buffer+1,xsum_builder@send_buffer+1
  6234  001B9A  C033  F02D         	movff	command_builder1@xsum,xsum_builder@xsum
  6235  001B9E  C034  F02E         	movff	command_builder1@xsum+1,xsum_builder@xsum+1
  6236  001BA2  ECFF  F00D         	call	_xsum_builder	;wreg free
  6237  001BA6  0012               	return	
  6238  001BA8                     __end_of_command_builder1:
  6239                           	opt stack 0
  6240                           tblptru	equ	0xFF8
  6241                           tblptrh	equ	0xFF7
  6242                           tblptrl	equ	0xFF6
  6243                           tablat	equ	0xFF5
  6244                           prodh	equ	0xFF4
  6245                           prodl	equ	0xFF3
  6246                           intcon	equ	0xFF2
  6247                           intcon2	equ	0xFF1
  6248                           intcon3	equ	0xFF0
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           indf1	equ	0xFE7
  6252                           postinc1	equ	0xFE6
  6253                           fsr1h	equ	0xFE2
  6254                           fsr1l	equ	0xFE1
  6255                           indf2	equ	0xFDF
  6256                           postinc2	equ	0xFDE
  6257                           postdec2	equ	0xFDD
  6258                           fsr2h	equ	0xFDA
  6259                           fsr2l	equ	0xFD9
  6260                           status	equ	0xFD8
  6261                           
  6262 ;; *************** function _com_command_setEnergyUsed *****************
  6263 ;; Defined at:
  6264 ;;		line 700 in file "SlaveComm.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  6267 ;;		 -> communications@send_buffer(42), 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  temp           12   16[BANK0 ] unsigned char [12]
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6279 ;;      Params:         2       0       0       0       0       0       0
  6280 ;;      Locals:         0      12       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0
  6282 ;;      Totals:         2      12       0       0       0       0       0
  6283 ;;Total ram usage:       14 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    6
  6286 ;; This function calls:
  6287 ;;		_command_builder3
  6288 ;;		_ultoa
  6289 ;; This function is called by:
  6290 ;;		_resetCommunications
  6291 ;;		_process_data_parameters
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text43
  6296  001D84                     __ptext43:
  6297                           	opt stack 0
  6298  001D84                     _com_command_setEnergyUsed:
  6299                           	opt stack 21
  6300                           
  6301                           ;SlaveComm.c: 702: char temp[12];
  6302                           ;SlaveComm.c: 704: ultoa( temp, meterEnergyUsed_global, 10 );
  6303                           
  6304                           ;incstack = 0
  6305  001D84  0E70               	movlw	low com_command_setEnergyUsed@temp
  6306  001D86  6E20               	movwf	ultoa@buf,c
  6307  001D88  0E00               	movlw	high com_command_setEnergyUsed@temp
  6308  001D8A  6E21               	movwf	ultoa@buf+1,c
  6309  001D8C  C03D  F022         	movff	_meterEnergyUsed_global,ultoa@val
  6310  001D90  C03E  F023         	movff	_meterEnergyUsed_global+1,ultoa@val+1
  6311  001D94  C03F  F024         	movff	_meterEnergyUsed_global+2,ultoa@val+2
  6312  001D98  C040  F025         	movff	_meterEnergyUsed_global+3,ultoa@val+3
  6313  001D9C  0E00               	movlw	0
  6314  001D9E  6E27               	movwf	ultoa@base+1,c
  6315  001DA0  0E0A               	movlw	10
  6316  001DA2  6E26               	movwf	ultoa@base,c
  6317  001DA4  ECBC  F006         	call	_ultoa	;wreg free
  6318                           
  6319                           ;SlaveComm.c: 706: command_builder3( send_buffer, "Set", "EnUsed", temp );
  6320  001DA8  C039  F02F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  6321  001DAC  C03A  F030         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  6322  001DB0  0E4E               	movlw	low STR_2
  6323  001DB2  6E31               	movwf	command_builder3@data1,c
  6324  001DB4  0E06               	movlw	high STR_2
  6325  001DB6  6E32               	movwf	command_builder3@data1+1,c
  6326  001DB8  0E17               	movlw	low STR_4
  6327  001DBA  6E33               	movwf	command_builder3@data2,c
  6328  001DBC  0E06               	movlw	high STR_4
  6329  001DBE  6E34               	movwf	command_builder3@data2+1,c
  6330  001DC0  0E70               	movlw	low com_command_setEnergyUsed@temp
  6331  001DC2  6E35               	movwf	command_builder3@data3,c
  6332  001DC4  0E00               	movlw	high com_command_setEnergyUsed@temp
  6333  001DC6  6E36               	movwf	command_builder3@data3+1,c
  6334  001DC8  EC90  F008         	call	_command_builder3	;wreg free
  6335  001DCC  0012               	return	
  6336  001DCE                     __end_of_com_command_setEnergyUsed:
  6337                           	opt stack 0
  6338                           tblptru	equ	0xFF8
  6339                           tblptrh	equ	0xFF7
  6340                           tblptrl	equ	0xFF6
  6341                           tablat	equ	0xFF5
  6342                           prodh	equ	0xFF4
  6343                           prodl	equ	0xFF3
  6344                           intcon	equ	0xFF2
  6345                           intcon2	equ	0xFF1
  6346                           intcon3	equ	0xFF0
  6347                           postinc0	equ	0xFEE
  6348                           wreg	equ	0xFE8
  6349                           indf1	equ	0xFE7
  6350                           postinc1	equ	0xFE6
  6351                           fsr1h	equ	0xFE2
  6352                           fsr1l	equ	0xFE1
  6353                           indf2	equ	0xFDF
  6354                           postinc2	equ	0xFDE
  6355                           postdec2	equ	0xFDD
  6356                           fsr2h	equ	0xFDA
  6357                           fsr2l	equ	0xFD9
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function _ultoa *****************
  6361 ;; Defined at:
  6362 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  buf             2   31[COMRAM] PTR unsigned char 
  6365 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  6366 ;;  val             4   33[COMRAM] unsigned long 
  6367 ;;  base            2   37[COMRAM] int 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  v               4   39[COMRAM] unsigned long 
  6370 ;;  c               1   43[COMRAM] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2   31[COMRAM] PTR unsigned char 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6380 ;;      Params:         8       0       0       0       0       0       0
  6381 ;;      Locals:         5       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0
  6383 ;;      Totals:        13       0       0       0       0       0       0
  6384 ;;Total ram usage:       13 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    2
  6387 ;; This function calls:
  6388 ;;		___lldiv
  6389 ;;		___llmod
  6390 ;; This function is called by:
  6391 ;;		_com_command_setPower
  6392 ;;		_com_command_setEnergyUsed
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text44
  6397  000D78                     __ptext44:
  6398                           	opt stack 0
  6399  000D78                     _ultoa:
  6400                           	opt stack 24
  6401                           
  6402                           ;incstack = 0
  6403  000D78  C022  F028         	movff	ultoa@val,ultoa@v
  6404  000D7C  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  6405  000D80  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  6406  000D84  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  6407  000D88  C028  F013         	movff	ultoa@v,___lldiv@dividend
  6408  000D8C  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  6409  000D90  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  6410  000D94  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  6411  000D98  C026  F017         	movff	ultoa@base,___lldiv@divisor
  6412  000D9C  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  6413  000DA0  0E00               	movlw	0
  6414  000DA2  BE18               	btfsc	___lldiv@divisor+1,7,c
  6415  000DA4  0EFF               	movlw	-1
  6416  000DA6  6E19               	movwf	___lldiv@divisor+2,c
  6417  000DA8  6E1A               	movwf	___lldiv@divisor+3,c
  6418  000DAA  EC2C  F00C         	call	___lldiv	;wreg free
  6419  000DAE  C013  F028         	movff	?___lldiv,ultoa@v
  6420  000DB2  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  6421  000DB6  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  6422  000DBA  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  6423  000DBE  4A20               	infsnz	ultoa@buf,f,c
  6424  000DC0  2A21               	incf	ultoa@buf+1,f,c
  6425  000DC2  5028               	movf	ultoa@v,w,c
  6426  000DC4  1029               	iorwf	ultoa@v+1,w,c
  6427  000DC6  102A               	iorwf	ultoa@v+2,w,c
  6428  000DC8  102B               	iorwf	ultoa@v+3,w,c
  6429  000DCA  A4D8               	btfss	status,2,c
  6430  000DCC  D7DD               	goto	l1056
  6431  000DCE  C020  FFD9         	movff	ultoa@buf,fsr2l
  6432  000DD2  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  6433  000DD6  0E00               	movlw	0
  6434  000DD8  6EDF               	movwf	indf2,c
  6435  000DDA  0620               	decf	ultoa@buf,f,c
  6436  000DDC  A0D8               	btfss	status,0,c
  6437  000DDE  0621               	decf	ultoa@buf+1,f,c
  6438  000DE0  C022  F013         	movff	ultoa@val,___llmod@dividend
  6439  000DE4  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  6440  000DE8  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  6441  000DEC  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  6442  000DF0  C026  F017         	movff	ultoa@base,___llmod@divisor
  6443  000DF4  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  6444  000DF8  0E00               	movlw	0
  6445  000DFA  BE18               	btfsc	___llmod@divisor+1,7,c
  6446  000DFC  0EFF               	movlw	-1
  6447  000DFE  6E19               	movwf	___llmod@divisor+2,c
  6448  000E00  6E1A               	movwf	___llmod@divisor+3,c
  6449  000E02  EC14  F00D         	call	___llmod	;wreg free
  6450  000E06  5013               	movf	?___llmod,w,c
  6451  000E08  6E2C               	movwf	ultoa@c,c
  6452  000E0A  C022  F013         	movff	ultoa@val,___lldiv@dividend
  6453  000E0E  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  6454  000E12  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  6455  000E16  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  6456  000E1A  C026  F017         	movff	ultoa@base,___lldiv@divisor
  6457  000E1E  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  6458  000E22  0E00               	movlw	0
  6459  000E24  BE18               	btfsc	___lldiv@divisor+1,7,c
  6460  000E26  0EFF               	movlw	-1
  6461  000E28  6E19               	movwf	___lldiv@divisor+2,c
  6462  000E2A  6E1A               	movwf	___lldiv@divisor+3,c
  6463  000E2C  EC2C  F00C         	call	___lldiv	;wreg free
  6464  000E30  C013  F022         	movff	?___lldiv,ultoa@val
  6465  000E34  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  6466  000E38  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  6467  000E3C  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  6468  000E40  0E09               	movlw	9
  6469  000E42  642C               	cpfsgt	ultoa@c,c
  6470  000E44  D002               	goto	l1059
  6471  000E46  0E07               	movlw	7
  6472  000E48  262C               	addwf	ultoa@c,f,c
  6473  000E4A                     l1059:
  6474  000E4A  0E30               	movlw	48
  6475  000E4C  262C               	addwf	ultoa@c,f,c
  6476  000E4E  C020  FFD9         	movff	ultoa@buf,fsr2l
  6477  000E52  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  6478  000E56  C02C  FFDF         	movff	ultoa@c,indf2
  6479  000E5A  0620               	decf	ultoa@buf,f,c
  6480  000E5C  A0D8               	btfss	status,0,c
  6481  000E5E  0621               	decf	ultoa@buf+1,f,c
  6482  000E60  5022               	movf	ultoa@val,w,c
  6483  000E62  1023               	iorwf	ultoa@val+1,w,c
  6484  000E64  1024               	iorwf	ultoa@val+2,w,c
  6485  000E66  1025               	iorwf	ultoa@val+3,w,c
  6486  000E68  B4D8               	btfsc	status,2,c
  6487  000E6A  0012               	return	
  6488  000E6C  D7B9               	goto	l1058
  6489  000E6E                     __end_of_ultoa:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon	equ	0xFF2
  6498                           intcon2	equ	0xFF1
  6499                           intcon3	equ	0xFF0
  6500                           postinc0	equ	0xFEE
  6501                           wreg	equ	0xFE8
  6502                           indf1	equ	0xFE7
  6503                           postinc1	equ	0xFE6
  6504                           fsr1h	equ	0xFE2
  6505                           fsr1l	equ	0xFE1
  6506                           indf2	equ	0xFDF
  6507                           postinc2	equ	0xFDE
  6508                           postdec2	equ	0xFDD
  6509                           fsr2h	equ	0xFDA
  6510                           fsr2l	equ	0xFD9
  6511                           status	equ	0xFD8
  6512                           
  6513 ;; *************** function ___llmod *****************
  6514 ;; Defined at:
  6515 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  dividend        4   18[COMRAM] unsigned long 
  6518 ;;  divisor         4   22[COMRAM] unsigned long 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  counter         1   26[COMRAM] unsigned char 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  4   18[COMRAM] unsigned long 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6530 ;;      Params:         8       0       0       0       0       0       0
  6531 ;;      Locals:         1       0       0       0       0       0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0
  6533 ;;      Totals:         9       0       0       0       0       0       0
  6534 ;;Total ram usage:        9 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    1
  6537 ;; This function calls:
  6538 ;;		Nothing
  6539 ;; This function is called by:
  6540 ;;		_main
  6541 ;;		_ultoa
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text45
  6546  001A28                     __ptext45:
  6547                           	opt stack 0
  6548  001A28                     ___llmod:
  6549                           	opt stack 24
  6550                           
  6551                           ;incstack = 0
  6552  001A28  5017               	movf	___llmod@divisor,w,c
  6553  001A2A  1018               	iorwf	___llmod@divisor+1,w,c
  6554  001A2C  1019               	iorwf	___llmod@divisor+2,w,c
  6555  001A2E  101A               	iorwf	___llmod@divisor+3,w,c
  6556  001A30  B4D8               	btfsc	status,2,c
  6557  001A32  D024               	goto	l1018
  6558  001A34  0E01               	movlw	1
  6559  001A36  6E1B               	movwf	___llmod@counter,c
  6560  001A38  D006               	goto	l1013
  6561  001A3A  90D8               	bcf	status,0,c
  6562  001A3C  3617               	rlcf	___llmod@divisor,f,c
  6563  001A3E  3618               	rlcf	___llmod@divisor+1,f,c
  6564  001A40  3619               	rlcf	___llmod@divisor+2,f,c
  6565  001A42  361A               	rlcf	___llmod@divisor+3,f,c
  6566  001A44  2A1B               	incf	___llmod@counter,f,c
  6567  001A46                     l1013:
  6568  001A46  AE1A               	btfss	___llmod@divisor+3,7,c
  6569  001A48  D7F8               	goto	l1014
  6570  001A4A                     u2650:
  6571  001A4A  5017               	movf	___llmod@divisor,w,c
  6572  001A4C  5C13               	subwf	___llmod@dividend,w,c
  6573  001A4E  5018               	movf	___llmod@divisor+1,w,c
  6574  001A50  5814               	subwfb	___llmod@dividend+1,w,c
  6575  001A52  5019               	movf	___llmod@divisor+2,w,c
  6576  001A54  5815               	subwfb	___llmod@dividend+2,w,c
  6577  001A56  501A               	movf	___llmod@divisor+3,w,c
  6578  001A58  5816               	subwfb	___llmod@dividend+3,w,c
  6579  001A5A  A0D8               	btfss	status,0,c
  6580  001A5C  D008               	goto	l1017
  6581  001A5E  5017               	movf	___llmod@divisor,w,c
  6582  001A60  5E13               	subwf	___llmod@dividend,f,c
  6583  001A62  5018               	movf	___llmod@divisor+1,w,c
  6584  001A64  5A14               	subwfb	___llmod@dividend+1,f,c
  6585  001A66  5019               	movf	___llmod@divisor+2,w,c
  6586  001A68  5A15               	subwfb	___llmod@dividend+2,f,c
  6587  001A6A  501A               	movf	___llmod@divisor+3,w,c
  6588  001A6C  5A16               	subwfb	___llmod@dividend+3,f,c
  6589  001A6E                     l1017:
  6590  001A6E  90D8               	bcf	status,0,c
  6591  001A70  321A               	rrcf	___llmod@divisor+3,f,c
  6592  001A72  3219               	rrcf	___llmod@divisor+2,f,c
  6593  001A74  3218               	rrcf	___llmod@divisor+1,f,c
  6594  001A76  3217               	rrcf	___llmod@divisor,f,c
  6595  001A78  2E1B               	decfsz	___llmod@counter,f,c
  6596  001A7A  D7E7               	goto	u2650
  6597  001A7C                     l1018:
  6598  001A7C  C013  F013         	movff	___llmod@dividend,?___llmod
  6599  001A80  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  6600  001A84  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  6601  001A88  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  6602  001A8C  0012               	return		;funcret
  6603  001A8E                     __end_of___llmod:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           intcon	equ	0xFF2
  6612                           intcon2	equ	0xFF1
  6613                           intcon3	equ	0xFF0
  6614                           postinc0	equ	0xFEE
  6615                           wreg	equ	0xFE8
  6616                           indf1	equ	0xFE7
  6617                           postinc1	equ	0xFE6
  6618                           fsr1h	equ	0xFE2
  6619                           fsr1l	equ	0xFE1
  6620                           indf2	equ	0xFDF
  6621                           postinc2	equ	0xFDE
  6622                           postdec2	equ	0xFDD
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function ___lldiv *****************
  6628 ;; Defined at:
  6629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dividend        4   18[COMRAM] unsigned long 
  6632 ;;  divisor         4   22[COMRAM] unsigned long 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  quotient        4   26[COMRAM] unsigned long 
  6635 ;;  counter         1   30[COMRAM] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  4   18[COMRAM] unsigned long 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6645 ;;      Params:         8       0       0       0       0       0       0
  6646 ;;      Locals:         5       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0
  6648 ;;      Totals:        13       0       0       0       0       0       0
  6649 ;;Total ram usage:       13 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_powerCalculateWatts
  6656 ;;		_powerReduction
  6657 ;;		_ultoa
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text46
  6662  001858                     __ptext46:
  6663                           	opt stack 0
  6664  001858                     ___lldiv:
  6665                           	opt stack 27
  6666                           
  6667                           ;incstack = 0
  6668  001858  0E00               	movlw	0
  6669  00185A  6E1B               	movwf	___lldiv@quotient,c
  6670  00185C  0E00               	movlw	0
  6671  00185E  6E1C               	movwf	___lldiv@quotient+1,c
  6672  001860  0E00               	movlw	0
  6673  001862  6E1D               	movwf	___lldiv@quotient+2,c
  6674  001864  0E00               	movlw	0
  6675  001866  6E1E               	movwf	___lldiv@quotient+3,c
  6676  001868  5017               	movf	___lldiv@divisor,w,c
  6677  00186A  1018               	iorwf	___lldiv@divisor+1,w,c
  6678  00186C  1019               	iorwf	___lldiv@divisor+2,w,c
  6679  00186E  101A               	iorwf	___lldiv@divisor+3,w,c
  6680  001870  B4D8               	btfsc	status,2,c
  6681  001872  D02A               	goto	l1008
  6682  001874  0E01               	movlw	1
  6683  001876  6E1F               	movwf	___lldiv@counter,c
  6684  001878  D006               	goto	l1003
  6685  00187A  90D8               	bcf	status,0,c
  6686  00187C  3617               	rlcf	___lldiv@divisor,f,c
  6687  00187E  3618               	rlcf	___lldiv@divisor+1,f,c
  6688  001880  3619               	rlcf	___lldiv@divisor+2,f,c
  6689  001882  361A               	rlcf	___lldiv@divisor+3,f,c
  6690  001884  2A1F               	incf	___lldiv@counter,f,c
  6691  001886                     l1003:
  6692  001886  AE1A               	btfss	___lldiv@divisor+3,7,c
  6693  001888  D7F8               	goto	l1004
  6694  00188A                     u2620:
  6695  00188A  90D8               	bcf	status,0,c
  6696  00188C  361B               	rlcf	___lldiv@quotient,f,c
  6697  00188E  361C               	rlcf	___lldiv@quotient+1,f,c
  6698  001890  361D               	rlcf	___lldiv@quotient+2,f,c
  6699  001892  361E               	rlcf	___lldiv@quotient+3,f,c
  6700  001894  5017               	movf	___lldiv@divisor,w,c
  6701  001896  5C13               	subwf	___lldiv@dividend,w,c
  6702  001898  5018               	movf	___lldiv@divisor+1,w,c
  6703  00189A  5814               	subwfb	___lldiv@dividend+1,w,c
  6704  00189C  5019               	movf	___lldiv@divisor+2,w,c
  6705  00189E  5815               	subwfb	___lldiv@dividend+2,w,c
  6706  0018A0  501A               	movf	___lldiv@divisor+3,w,c
  6707  0018A2  5816               	subwfb	___lldiv@dividend+3,w,c
  6708  0018A4  A0D8               	btfss	status,0,c
  6709  0018A6  D009               	goto	l1007
  6710  0018A8  5017               	movf	___lldiv@divisor,w,c
  6711  0018AA  5E13               	subwf	___lldiv@dividend,f,c
  6712  0018AC  5018               	movf	___lldiv@divisor+1,w,c
  6713  0018AE  5A14               	subwfb	___lldiv@dividend+1,f,c
  6714  0018B0  5019               	movf	___lldiv@divisor+2,w,c
  6715  0018B2  5A15               	subwfb	___lldiv@dividend+2,f,c
  6716  0018B4  501A               	movf	___lldiv@divisor+3,w,c
  6717  0018B6  5A16               	subwfb	___lldiv@dividend+3,f,c
  6718  0018B8  801B               	bsf	___lldiv@quotient,0,c
  6719  0018BA                     l1007:
  6720  0018BA  90D8               	bcf	status,0,c
  6721  0018BC  321A               	rrcf	___lldiv@divisor+3,f,c
  6722  0018BE  3219               	rrcf	___lldiv@divisor+2,f,c
  6723  0018C0  3218               	rrcf	___lldiv@divisor+1,f,c
  6724  0018C2  3217               	rrcf	___lldiv@divisor,f,c
  6725  0018C4  2E1F               	decfsz	___lldiv@counter,f,c
  6726  0018C6  D7E1               	goto	u2620
  6727  0018C8                     l1008:
  6728  0018C8  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  6729  0018CC  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  6730  0018D0  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  6731  0018D4  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  6732  0018D8  0012               	return		;funcret
  6733  0018DA                     __end_of___lldiv:
  6734                           	opt stack 0
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           intcon2	equ	0xFF1
  6743                           intcon3	equ	0xFF0
  6744                           postinc0	equ	0xFEE
  6745                           wreg	equ	0xFE8
  6746                           indf1	equ	0xFE7
  6747                           postinc1	equ	0xFE6
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function _command_builder3 *****************
  6758 ;; Defined at:
  6759 ;;		line 493 in file "SlaveComm.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  6762 ;;		 -> communications@send_buffer(42), 
  6763 ;;  data1           2   48[COMRAM] PTR unsigned char 
  6764 ;;		 -> STR_27(4), STR_22(4), STR_19(4), STR_17(4), 
  6765 ;;		 -> STR_15(4), 
  6766 ;;  data2           2   50[COMRAM] PTR unsigned char 
  6767 ;;		 -> STR_28(10), STR_23(5), STR_20(6), STR_18(7), 
  6768 ;;		 -> STR_16(6), 
  6769 ;;  data3           2   52[COMRAM] PTR unsigned char 
  6770 ;;		 -> STR_29(4), STR_24(4), STR_21(4), com_command_setEnergyUsed@temp(12), 
  6771 ;;		 -> com_command_setPower@temp(12), 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  xsum            2   54[COMRAM] int 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6783 ;;      Params:         8       0       0       0       0       0       0
  6784 ;;      Locals:         2       0       0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0       0
  6786 ;;      Totals:        10       0       0       0       0       0       0
  6787 ;;Total ram usage:       10 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    5
  6790 ;; This function calls:
  6791 ;;		_command_builder_add_char
  6792 ;;		_command_builder_add_string
  6793 ;;		_xsum_builder
  6794 ;; This function is called by:
  6795 ;;		_com_command_setPower
  6796 ;;		_com_command_setEnergyUsed
  6797 ;;		_com_command_setVersion
  6798 ;;		_com_command_setVolts
  6799 ;;		_com_command_setAmps
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text47
  6804  001120                     __ptext47:
  6805                           	opt stack 0
  6806  001120                     _command_builder3:
  6807                           	opt stack 21
  6808                           
  6809                           ;SlaveComm.c: 495: command_builder_add_char( send_buffer, '#' );
  6810                           
  6811                           ;incstack = 0
  6812  001120  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6813  001124  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6814  001128  0E23               	movlw	35
  6815  00112A  6E15               	movwf	command_builder_add_char@data,c
  6816  00112C  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6817                           
  6818                           ;SlaveComm.c: 496: command_builder_add_char( send_buffer, '!' );
  6819  001130  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6820  001134  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6821  001138  0E21               	movlw	33
  6822  00113A  6E15               	movwf	command_builder_add_char@data,c
  6823  00113C  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6824                           
  6825                           ;SlaveComm.c: 498: int xsum = 0;
  6826  001140  0E00               	movlw	0
  6827  001142  6E38               	movwf	command_builder3@xsum+1,c
  6828  001144  0E00               	movlw	0
  6829  001146  6E37               	movwf	command_builder3@xsum,c
  6830                           
  6831                           ;SlaveComm.c: 499: xsum += command_builder_add_string( send_buffer, data1 );
  6832  001148  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6833  00114C  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6834  001150  C031  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  6835  001154  C032  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  6836  001158  EC58  F00B         	call	_command_builder_add_string	;wreg free
  6837  00115C  5017               	movf	?_command_builder_add_string,w,c
  6838  00115E  2637               	addwf	command_builder3@xsum,f,c
  6839  001160  5018               	movf	?_command_builder_add_string+1,w,c
  6840  001162  2238               	addwfc	command_builder3@xsum+1,f,c
  6841                           
  6842                           ;SlaveComm.c: 500: xsum += command_builder_add_char( send_buffer, ';' );
  6843  001164  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6844  001168  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6845  00116C  0E3B               	movlw	59
  6846  00116E  6E15               	movwf	command_builder_add_char@data,c
  6847  001170  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6848  001174  5013               	movf	?_command_builder_add_char,w,c
  6849  001176  2637               	addwf	command_builder3@xsum,f,c
  6850  001178  5014               	movf	?_command_builder_add_char+1,w,c
  6851  00117A  2238               	addwfc	command_builder3@xsum+1,f,c
  6852                           
  6853                           ;SlaveComm.c: 501: xsum += command_builder_add_string( send_buffer, data2 );
  6854  00117C  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6855  001180  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6856  001184  C033  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  6857  001188  C034  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  6858  00118C  EC58  F00B         	call	_command_builder_add_string	;wreg free
  6859  001190  5017               	movf	?_command_builder_add_string,w,c
  6860  001192  2637               	addwf	command_builder3@xsum,f,c
  6861  001194  5018               	movf	?_command_builder_add_string+1,w,c
  6862  001196  2238               	addwfc	command_builder3@xsum+1,f,c
  6863                           
  6864                           ;SlaveComm.c: 502: xsum += command_builder_add_char( send_buffer, ';' );
  6865  001198  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6866  00119C  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6867  0011A0  0E3B               	movlw	59
  6868  0011A2  6E15               	movwf	command_builder_add_char@data,c
  6869  0011A4  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6870  0011A8  5013               	movf	?_command_builder_add_char,w,c
  6871  0011AA  2637               	addwf	command_builder3@xsum,f,c
  6872  0011AC  5014               	movf	?_command_builder_add_char+1,w,c
  6873  0011AE  2238               	addwfc	command_builder3@xsum+1,f,c
  6874                           
  6875                           ;SlaveComm.c: 503: xsum += command_builder_add_string( send_buffer, data3 );
  6876  0011B0  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6877  0011B4  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6878  0011B8  C035  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  6879  0011BC  C036  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  6880  0011C0  EC58  F00B         	call	_command_builder_add_string	;wreg free
  6881  0011C4  5017               	movf	?_command_builder_add_string,w,c
  6882  0011C6  2637               	addwf	command_builder3@xsum,f,c
  6883  0011C8  5018               	movf	?_command_builder_add_string+1,w,c
  6884  0011CA  2238               	addwfc	command_builder3@xsum+1,f,c
  6885                           
  6886                           ;SlaveComm.c: 505: xsum_builder( send_buffer, xsum );
  6887  0011CC  C02F  F02B         	movff	command_builder3@send_buffer,xsum_builder@send_buffer
  6888  0011D0  C030  F02C         	movff	command_builder3@send_buffer+1,xsum_builder@send_buffer+1
  6889  0011D4  C037  F02D         	movff	command_builder3@xsum,xsum_builder@xsum
  6890  0011D8  C038  F02E         	movff	command_builder3@xsum+1,xsum_builder@xsum+1
  6891  0011DC  ECFF  F00D         	call	_xsum_builder	;wreg free
  6892  0011E0  0012               	return	
  6893  0011E2                     __end_of_command_builder3:
  6894                           	opt stack 0
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           intcon	equ	0xFF2
  6902                           intcon2	equ	0xFF1
  6903                           intcon3	equ	0xFF0
  6904                           postinc0	equ	0xFEE
  6905                           wreg	equ	0xFE8
  6906                           indf1	equ	0xFE7
  6907                           postinc1	equ	0xFE6
  6908                           fsr1h	equ	0xFE2
  6909                           fsr1l	equ	0xFE1
  6910                           indf2	equ	0xFDF
  6911                           postinc2	equ	0xFDE
  6912                           postdec2	equ	0xFDD
  6913                           fsr2h	equ	0xFDA
  6914                           fsr2l	equ	0xFD9
  6915                           status	equ	0xFD8
  6916                           
  6917 ;; *************** function _xsum_builder *****************
  6918 ;; Defined at:
  6919 ;;		line 527 in file "SlaveComm.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  send_buffer     2   42[COMRAM] PTR struct buffer
  6922 ;;		 -> communications@send_buffer(42), 
  6923 ;;  xsum            2   44[COMRAM] int 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  xsumBuf        16    0[BANK0 ] unsigned char [16]
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6935 ;;      Params:         4       0       0       0       0       0       0
  6936 ;;      Locals:         0      16       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0
  6938 ;;      Totals:         4      16       0       0       0       0       0
  6939 ;;Total ram usage:       20 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		_command_builder_add_char
  6944 ;;		_command_builder_add_string
  6945 ;;		_itoa
  6946 ;; This function is called by:
  6947 ;;		_command_builder1
  6948 ;;		_command_builder3
  6949 ;;		_command_builder2
  6950 ;;		_command_builder4
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text48
  6955  001BFE                     __ptext48:
  6956                           	opt stack 0
  6957  001BFE                     _xsum_builder:
  6958                           	opt stack 21
  6959                           
  6960                           ;SlaveComm.c: 531: command_builder_add_char( send_buffer, '$' );
  6961                           
  6962                           ;incstack = 0
  6963  001BFE  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  6964  001C02  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  6965  001C06  0E24               	movlw	36
  6966  001C08  6E15               	movwf	command_builder_add_char@data,c
  6967  001C0A  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6968                           
  6969                           ;SlaveComm.c: 532: char xsumBuf[16];
  6970                           ;SlaveComm.c: 533: itoa( xsumBuf, xsum, 10 );
  6971  001C0E  0E60               	movlw	low xsum_builder@xsumBuf
  6972  001C10  6E23               	movwf	itoa@buf,c
  6973  001C12  0E00               	movlw	high xsum_builder@xsumBuf
  6974  001C14  6E24               	movwf	itoa@buf+1,c
  6975  001C16  C02D  F025         	movff	xsum_builder@xsum,itoa@val
  6976  001C1A  C02E  F026         	movff	xsum_builder@xsum+1,itoa@val+1
  6977  001C1E  0E00               	movlw	0
  6978  001C20  6E28               	movwf	itoa@base+1,c
  6979  001C22  0E0A               	movlw	10
  6980  001C24  6E27               	movwf	itoa@base,c
  6981  001C26  EC0B  F00F         	call	_itoa	;wreg free
  6982                           
  6983                           ;SlaveComm.c: 534: command_builder_add_string( send_buffer, xsumBuf );
  6984  001C2A  C02B  F017         	movff	xsum_builder@send_buffer,command_builder_add_string@send_buffer
  6985  001C2E  C02C  F018         	movff	xsum_builder@send_buffer+1,command_builder_add_string@send_buffer+1
  6986  001C32  0E60               	movlw	low xsum_builder@xsumBuf
  6987  001C34  6E19               	movwf	command_builder_add_string@data_string,c
  6988  001C36  0E00               	movlw	high xsum_builder@xsumBuf
  6989  001C38  6E1A               	movwf	command_builder_add_string@data_string+1,c
  6990  001C3A  EC58  F00B         	call	_command_builder_add_string	;wreg free
  6991                           
  6992                           ;SlaveComm.c: 536: command_builder_add_char( send_buffer, '*' );
  6993  001C3E  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  6994  001C42  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  6995  001C46  0E2A               	movlw	42
  6996  001C48  6E15               	movwf	command_builder_add_char@data,c
  6997  001C4A  EC79  F00D         	call	_command_builder_add_char	;wreg free
  6998  001C4E  0012               	return	
  6999  001C50                     __end_of_xsum_builder:
  7000                           	opt stack 0
  7001                           tblptru	equ	0xFF8
  7002                           tblptrh	equ	0xFF7
  7003                           tblptrl	equ	0xFF6
  7004                           tablat	equ	0xFF5
  7005                           prodh	equ	0xFF4
  7006                           prodl	equ	0xFF3
  7007                           intcon	equ	0xFF2
  7008                           intcon2	equ	0xFF1
  7009                           intcon3	equ	0xFF0
  7010                           postinc0	equ	0xFEE
  7011                           wreg	equ	0xFE8
  7012                           indf1	equ	0xFE7
  7013                           postinc1	equ	0xFE6
  7014                           fsr1h	equ	0xFE2
  7015                           fsr1l	equ	0xFE1
  7016                           indf2	equ	0xFDF
  7017                           postinc2	equ	0xFDE
  7018                           postdec2	equ	0xFDD
  7019                           fsr2h	equ	0xFDA
  7020                           fsr2l	equ	0xFD9
  7021                           status	equ	0xFD8
  7022                           
  7023 ;; *************** function _itoa *****************
  7024 ;; Defined at:
  7025 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  buf             2   34[COMRAM] PTR unsigned char 
  7028 ;;		 -> xsum_builder@xsumBuf(16), 
  7029 ;;  val             2   36[COMRAM] int 
  7030 ;;  base            2   38[COMRAM] int 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  cp              2   40[COMRAM] PTR unsigned char 
  7033 ;;		 -> xsum_builder@xsumBuf(16), 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  2   34[COMRAM] PTR unsigned char 
  7036 ;; Registers used:
  7037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7043 ;;      Params:         6       0       0       0       0       0       0
  7044 ;;      Locals:         2       0       0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0
  7046 ;;      Totals:         8       0       0       0       0       0       0
  7047 ;;Total ram usage:        8 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    3
  7050 ;; This function calls:
  7051 ;;		_utoa
  7052 ;; This function is called by:
  7053 ;;		_xsum_builder
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text49
  7058  001E16                     __ptext49:
  7059                           	opt stack 0
  7060  001E16                     _itoa:
  7061                           	opt stack 21
  7062                           
  7063                           ;incstack = 0
  7064  001E16  C023  F029         	movff	itoa@buf,itoa@cp
  7065  001E1A  C024  F02A         	movff	itoa@buf+1,itoa@cp+1
  7066  001E1E  AE26               	btfss	itoa@val+1,7,c
  7067  001E20  D00C               	goto	l969
  7068  001E22  C023  FFD9         	movff	itoa@buf,fsr2l
  7069  001E26  C024  FFDA         	movff	itoa@buf+1,fsr2h
  7070  001E2A  0E2D               	movlw	45
  7071  001E2C  6EDF               	movwf	indf2,c
  7072  001E2E  4A23               	infsnz	itoa@buf,f,c
  7073  001E30  2A24               	incf	itoa@buf+1,f,c
  7074  001E32  6C25               	negf	itoa@val,c
  7075  001E34  1E26               	comf	itoa@val+1,f,c
  7076  001E36  B0D8               	btfsc	status,0,c
  7077  001E38  2A26               	incf	itoa@val+1,f,c
  7078  001E3A                     l969:
  7079  001E3A  C023  F01A         	movff	itoa@buf,utoa@buf
  7080  001E3E  C024  F01B         	movff	itoa@buf+1,utoa@buf+1
  7081  001E42  C025  F01C         	movff	itoa@val,utoa@val
  7082  001E46  C026  F01D         	movff	itoa@val+1,utoa@val+1
  7083  001E4A  C027  F01E         	movff	itoa@base,utoa@base
  7084  001E4E  C028  F01F         	movff	itoa@base+1,utoa@base+1
  7085  001E52  EC6B  F00A         	call	_utoa	;wreg free
  7086  001E56  0012               	return	
  7087  001E58                     __end_of_itoa:
  7088                           	opt stack 0
  7089                           tblptru	equ	0xFF8
  7090                           tblptrh	equ	0xFF7
  7091                           tblptrl	equ	0xFF6
  7092                           tablat	equ	0xFF5
  7093                           prodh	equ	0xFF4
  7094                           prodl	equ	0xFF3
  7095                           intcon	equ	0xFF2
  7096                           intcon2	equ	0xFF1
  7097                           intcon3	equ	0xFF0
  7098                           postinc0	equ	0xFEE
  7099                           wreg	equ	0xFE8
  7100                           indf1	equ	0xFE7
  7101                           postinc1	equ	0xFE6
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           indf2	equ	0xFDF
  7105                           postinc2	equ	0xFDE
  7106                           postdec2	equ	0xFDD
  7107                           fsr2h	equ	0xFDA
  7108                           fsr2l	equ	0xFD9
  7109                           status	equ	0xFD8
  7110                           
  7111 ;; *************** function _utoa *****************
  7112 ;; Defined at:
  7113 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7116 ;;		 -> xsum_builder@xsumBuf(16), 
  7117 ;;  val             2   27[COMRAM] unsigned int 
  7118 ;;  base            2   29[COMRAM] int 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  v               2   31[COMRAM] unsigned int 
  7121 ;;  c               1   33[COMRAM] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  2   25[COMRAM] PTR unsigned char 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7131 ;;      Params:         6       0       0       0       0       0       0
  7132 ;;      Locals:         3       0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0
  7134 ;;      Totals:         9       0       0       0       0       0       0
  7135 ;;Total ram usage:        9 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    2
  7138 ;; This function calls:
  7139 ;;		___lwdiv
  7140 ;;		___lwmod
  7141 ;; This function is called by:
  7142 ;;		_itoa
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text50
  7147  0014D6                     __ptext50:
  7148                           	opt stack 0
  7149  0014D6                     _utoa:
  7150                           	opt stack 21
  7151                           
  7152                           ;incstack = 0
  7153  0014D6  C01C  F020         	movff	utoa@val,utoa@v
  7154  0014DA  C01D  F021         	movff	utoa@val+1,utoa@v+1
  7155  0014DE  C020  F013         	movff	utoa@v,___lwdiv@dividend
  7156  0014E2  C021  F014         	movff	utoa@v+1,___lwdiv@dividend+1
  7157  0014E6  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  7158  0014EA  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  7159  0014EE  EC28  F00E         	call	___lwdiv	;wreg free
  7160  0014F2  C013  F020         	movff	?___lwdiv,utoa@v
  7161  0014F6  C014  F021         	movff	?___lwdiv+1,utoa@v+1
  7162  0014FA  4A1A               	infsnz	utoa@buf,f,c
  7163  0014FC  2A1B               	incf	utoa@buf+1,f,c
  7164  0014FE  5020               	movf	utoa@v,w,c
  7165  001500  1021               	iorwf	utoa@v+1,w,c
  7166  001502  A4D8               	btfss	status,2,c
  7167  001504  D7EC               	goto	l973
  7168  001506  C01A  FFD9         	movff	utoa@buf,fsr2l
  7169  00150A  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  7170  00150E  0E00               	movlw	0
  7171  001510  6EDF               	movwf	indf2,c
  7172  001512  061A               	decf	utoa@buf,f,c
  7173  001514  A0D8               	btfss	status,0,c
  7174  001516  061B               	decf	utoa@buf+1,f,c
  7175  001518  C01C  F013         	movff	utoa@val,___lwmod@dividend
  7176  00151C  C01D  F014         	movff	utoa@val+1,___lwmod@dividend+1
  7177  001520  C01E  F015         	movff	utoa@base,___lwmod@divisor
  7178  001524  C01F  F016         	movff	utoa@base+1,___lwmod@divisor+1
  7179  001528  EC2C  F00F         	call	___lwmod	;wreg free
  7180  00152C  5013               	movf	?___lwmod,w,c
  7181  00152E  6E22               	movwf	utoa@c,c
  7182  001530  C01C  F013         	movff	utoa@val,___lwdiv@dividend
  7183  001534  C01D  F014         	movff	utoa@val+1,___lwdiv@dividend+1
  7184  001538  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  7185  00153C  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  7186  001540  EC28  F00E         	call	___lwdiv	;wreg free
  7187  001544  C013  F01C         	movff	?___lwdiv,utoa@val
  7188  001548  C014  F01D         	movff	?___lwdiv+1,utoa@val+1
  7189  00154C  0E09               	movlw	9
  7190  00154E  6422               	cpfsgt	utoa@c,c
  7191  001550  D002               	goto	l976
  7192  001552  0E07               	movlw	7
  7193  001554  2622               	addwf	utoa@c,f,c
  7194  001556                     l976:
  7195  001556  0E30               	movlw	48
  7196  001558  2622               	addwf	utoa@c,f,c
  7197  00155A  C01A  FFD9         	movff	utoa@buf,fsr2l
  7198  00155E  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  7199  001562  C022  FFDF         	movff	utoa@c,indf2
  7200  001566  061A               	decf	utoa@buf,f,c
  7201  001568  A0D8               	btfss	status,0,c
  7202  00156A  061B               	decf	utoa@buf+1,f,c
  7203  00156C  501C               	movf	utoa@val,w,c
  7204  00156E  101D               	iorwf	utoa@val+1,w,c
  7205  001570  A4D8               	btfss	status,2,c
  7206  001572  D7D2               	goto	l975
  7207                           
  7208                           ;	Return value of _utoa is never used
  7209  001574  4A1A               	infsnz	utoa@buf,f,c
  7210  001576  2A1B               	incf	utoa@buf+1,f,c
  7211  001578  0012               	return	
  7212  00157A                     __end_of_utoa:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           intcon2	equ	0xFF1
  7222                           intcon3	equ	0xFF0
  7223                           postinc0	equ	0xFEE
  7224                           wreg	equ	0xFE8
  7225                           indf1	equ	0xFE7
  7226                           postinc1	equ	0xFE6
  7227                           fsr1h	equ	0xFE2
  7228                           fsr1l	equ	0xFE1
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function ___lwmod *****************
  7237 ;; Defined at:
  7238 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  dividend        2   18[COMRAM] unsigned int 
  7241 ;;  divisor         2   20[COMRAM] unsigned int 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  counter         1   22[COMRAM] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2   18[COMRAM] unsigned int 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7253 ;;      Params:         4       0       0       0       0       0       0
  7254 ;;      Locals:         1       0       0       0       0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0
  7256 ;;      Totals:         5       0       0       0       0       0       0
  7257 ;;Total ram usage:        5 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    1
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_utoa
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text51
  7268  001E58                     __ptext51:
  7269                           	opt stack 0
  7270  001E58                     ___lwmod:
  7271                           	opt stack 21
  7272                           
  7273                           ;incstack = 0
  7274  001E58  5015               	movf	___lwmod@divisor,w,c
  7275  001E5A  1016               	iorwf	___lwmod@divisor+1,w,c
  7276  001E5C  B4D8               	btfsc	status,2,c
  7277  001E5E  D018               	goto	l1085
  7278  001E60  0E01               	movlw	1
  7279  001E62  6E17               	movwf	___lwmod@counter,c
  7280  001E64  D004               	goto	l1080
  7281  001E66  90D8               	bcf	status,0,c
  7282  001E68  3615               	rlcf	___lwmod@divisor,f,c
  7283  001E6A  3616               	rlcf	___lwmod@divisor+1,f,c
  7284  001E6C  2A17               	incf	___lwmod@counter,f,c
  7285  001E6E                     l1080:
  7286  001E6E  AE16               	btfss	___lwmod@divisor+1,7,c
  7287  001E70  D7FA               	goto	l1081
  7288  001E72                     u2510:
  7289  001E72  5015               	movf	___lwmod@divisor,w,c
  7290  001E74  5C13               	subwf	___lwmod@dividend,w,c
  7291  001E76  5016               	movf	___lwmod@divisor+1,w,c
  7292  001E78  5814               	subwfb	___lwmod@dividend+1,w,c
  7293  001E7A  A0D8               	btfss	status,0,c
  7294  001E7C  D004               	goto	l1084
  7295  001E7E  5015               	movf	___lwmod@divisor,w,c
  7296  001E80  5E13               	subwf	___lwmod@dividend,f,c
  7297  001E82  5016               	movf	___lwmod@divisor+1,w,c
  7298  001E84  5A14               	subwfb	___lwmod@dividend+1,f,c
  7299  001E86                     l1084:
  7300  001E86  90D8               	bcf	status,0,c
  7301  001E88  3216               	rrcf	___lwmod@divisor+1,f,c
  7302  001E8A  3215               	rrcf	___lwmod@divisor,f,c
  7303  001E8C  2E17               	decfsz	___lwmod@counter,f,c
  7304  001E8E  D7F1               	goto	u2510
  7305  001E90                     l1085:
  7306  001E90  C013  F013         	movff	___lwmod@dividend,?___lwmod
  7307  001E94  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  7308  001E98  0012               	return		;funcret
  7309  001E9A                     __end_of___lwmod:
  7310                           	opt stack 0
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           intcon2	equ	0xFF1
  7319                           intcon3	equ	0xFF0
  7320                           postinc0	equ	0xFEE
  7321                           wreg	equ	0xFE8
  7322                           indf1	equ	0xFE7
  7323                           postinc1	equ	0xFE6
  7324                           fsr1h	equ	0xFE2
  7325                           fsr1l	equ	0xFE1
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           
  7333 ;; *************** function ___lwdiv *****************
  7334 ;; Defined at:
  7335 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  dividend        2   18[COMRAM] unsigned int 
  7338 ;;  divisor         2   20[COMRAM] unsigned int 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  quotient        2   23[COMRAM] unsigned int 
  7341 ;;  counter         1   22[COMRAM] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  2   18[COMRAM] unsigned int 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         4       0       0       0       0       0       0
  7352 ;;      Locals:         3       0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0
  7354 ;;      Totals:         7       0       0       0       0       0       0
  7355 ;;Total ram usage:        7 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_utoa
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text52
  7366  001C50                     __ptext52:
  7367                           	opt stack 0
  7368  001C50                     ___lwdiv:
  7369                           	opt stack 21
  7370                           
  7371                           ;incstack = 0
  7372  001C50  0E00               	movlw	0
  7373  001C52  6E19               	movwf	___lwdiv@quotient+1,c
  7374  001C54  0E00               	movlw	0
  7375  001C56  6E18               	movwf	___lwdiv@quotient,c
  7376  001C58  5015               	movf	___lwdiv@divisor,w,c
  7377  001C5A  1016               	iorwf	___lwdiv@divisor+1,w,c
  7378  001C5C  B4D8               	btfsc	status,2,c
  7379  001C5E  D01C               	goto	l1075
  7380  001C60  0E01               	movlw	1
  7381  001C62  6E17               	movwf	___lwdiv@counter,c
  7382  001C64  D004               	goto	l1070
  7383  001C66  90D8               	bcf	status,0,c
  7384  001C68  3615               	rlcf	___lwdiv@divisor,f,c
  7385  001C6A  3616               	rlcf	___lwdiv@divisor+1,f,c
  7386  001C6C  2A17               	incf	___lwdiv@counter,f,c
  7387  001C6E                     l1070:
  7388  001C6E  AE16               	btfss	___lwdiv@divisor+1,7,c
  7389  001C70  D7FA               	goto	l1071
  7390  001C72                     u2480:
  7391  001C72  90D8               	bcf	status,0,c
  7392  001C74  3618               	rlcf	___lwdiv@quotient,f,c
  7393  001C76  3619               	rlcf	___lwdiv@quotient+1,f,c
  7394  001C78  5015               	movf	___lwdiv@divisor,w,c
  7395  001C7A  5C13               	subwf	___lwdiv@dividend,w,c
  7396  001C7C  5016               	movf	___lwdiv@divisor+1,w,c
  7397  001C7E  5814               	subwfb	___lwdiv@dividend+1,w,c
  7398  001C80  A0D8               	btfss	status,0,c
  7399  001C82  D005               	goto	l1074
  7400  001C84  5015               	movf	___lwdiv@divisor,w,c
  7401  001C86  5E13               	subwf	___lwdiv@dividend,f,c
  7402  001C88  5016               	movf	___lwdiv@divisor+1,w,c
  7403  001C8A  5A14               	subwfb	___lwdiv@dividend+1,f,c
  7404  001C8C  8018               	bsf	___lwdiv@quotient,0,c
  7405  001C8E                     l1074:
  7406  001C8E  90D8               	bcf	status,0,c
  7407  001C90  3216               	rrcf	___lwdiv@divisor+1,f,c
  7408  001C92  3215               	rrcf	___lwdiv@divisor,f,c
  7409  001C94  2E17               	decfsz	___lwdiv@counter,f,c
  7410  001C96  D7ED               	goto	u2480
  7411  001C98                     l1075:
  7412  001C98  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  7413  001C9C  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7414  001CA0  0012               	return		;funcret
  7415  001CA2                     __end_of___lwdiv:
  7416                           	opt stack 0
  7417                           tblptru	equ	0xFF8
  7418                           tblptrh	equ	0xFF7
  7419                           tblptrl	equ	0xFF6
  7420                           tablat	equ	0xFF5
  7421                           prodh	equ	0xFF4
  7422                           prodl	equ	0xFF3
  7423                           intcon	equ	0xFF2
  7424                           intcon2	equ	0xFF1
  7425                           intcon3	equ	0xFF0
  7426                           postinc0	equ	0xFEE
  7427                           wreg	equ	0xFE8
  7428                           indf1	equ	0xFE7
  7429                           postinc1	equ	0xFE6
  7430                           fsr1h	equ	0xFE2
  7431                           fsr1l	equ	0xFE1
  7432                           indf2	equ	0xFDF
  7433                           postinc2	equ	0xFDE
  7434                           postdec2	equ	0xFDD
  7435                           fsr2h	equ	0xFDA
  7436                           fsr2l	equ	0xFD9
  7437                           status	equ	0xFD8
  7438                           
  7439 ;; *************** function _command_builder_add_string *****************
  7440 ;; Defined at:
  7441 ;;		line 552 in file "SlaveComm.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  7444 ;;		 -> communications@send_buffer(42), 
  7445 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  7446 ;;		 -> STR_29(4), STR_28(10), STR_27(4), STR_26(12), 
  7447 ;;		 -> STR_25(5), STR_24(4), STR_23(5), STR_22(4), 
  7448 ;;		 -> STR_21(4), STR_20(6), STR_19(4), STR_18(7), 
  7449 ;;		 -> STR_17(4), com_command_setEnergyUsed@temp(12), STR_16(6), STR_15(4), 
  7450 ;;		 -> com_command_setPower@temp(12), STR_14(5), STR_13(5), STR_12(4), 
  7451 ;;		 -> xsum_builder@xsumBuf(16), 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  inx             2   30[COMRAM] int 
  7454 ;;  xsumAdd         2   28[COMRAM] int 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  2   22[COMRAM] int 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7464 ;;      Params:         4       0       0       0       0       0       0
  7465 ;;      Locals:         4       0       0       0       0       0       0
  7466 ;;      Temps:          2       0       0       0       0       0       0
  7467 ;;      Totals:        10       0       0       0       0       0       0
  7468 ;;Total ram usage:       10 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    2
  7471 ;; This function calls:
  7472 ;;		_command_builder_add_char
  7473 ;; This function is called by:
  7474 ;;		_command_builder1
  7475 ;;		_command_builder3
  7476 ;;		_xsum_builder
  7477 ;;		_command_builder2
  7478 ;;		_command_builder4
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text53
  7483  0016B0                     __ptext53:
  7484                           	opt stack 0
  7485  0016B0                     _command_builder_add_string:
  7486                           	opt stack 22
  7487                           
  7488                           ;SlaveComm.c: 554: int xsumAdd = 0;
  7489                           
  7490                           ;incstack = 0
  7491  0016B0  0E00               	movlw	0
  7492  0016B2  6E1E               	movwf	command_builder_add_string@xsumAdd+1,c
  7493  0016B4  0E00               	movlw	0
  7494  0016B6  6E1D               	movwf	command_builder_add_string@xsumAdd,c
  7495                           
  7496                           ;SlaveComm.c: 556: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  7497  0016B8  0E00               	movlw	0
  7498  0016BA  6E20               	movwf	command_builder_add_string@inx+1,c
  7499  0016BC  0E00               	movlw	0
  7500  0016BE  6E1F               	movwf	command_builder_add_string@inx,c
  7501  0016C0  D023               	goto	l319
  7502  0016C2                     
  7503                           ;SlaveComm.c: 557: {
  7504                           ;SlaveComm.c: 558: xsumAdd += command_builder_add_char( send_buffer, data_string[inx] );
  7505  0016C2  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  7506  0016C6  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  7507  0016CA  501F               	movf	command_builder_add_string@inx,w,c
  7508  0016CC  2419               	addwf	command_builder_add_string@data_string,w,c
  7509  0016CE  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7510  0016D0  5020               	movf	command_builder_add_string@inx+1,w,c
  7511  0016D2  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7512  0016D4  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7513  0016D6  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7514  0016DA  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7515  0016DE  6AF8               	clrf	tblptru,c
  7516  0016E0  0E05               	movlw	(high __ramtop+-1)
  7517  0016E2  64F7               	cpfsgt	tblptrh,c
  7518  0016E4  D003               	bra	u2577
  7519  0016E6  0008               	tblrd		*
  7520  0016E8  50F5               	movf	tablat,w,c
  7521  0016EA  D005               	bra	u2570
  7522  0016EC                     u2577:
  7523  0016EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7524  0016F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7525  0016F4  50E7               	movf	indf1,w,c
  7526  0016F6                     u2570:
  7527  0016F6  6E15               	movwf	command_builder_add_char@data,c
  7528  0016F8  EC79  F00D         	call	_command_builder_add_char	;wreg free
  7529  0016FC  5013               	movf	?_command_builder_add_char,w,c
  7530  0016FE  261D               	addwf	command_builder_add_string@xsumAdd,f,c
  7531  001700  5014               	movf	?_command_builder_add_char+1,w,c
  7532  001702  221E               	addwfc	command_builder_add_string@xsumAdd+1,f,c
  7533  001704  4A1F               	infsnz	command_builder_add_string@inx,f,c
  7534  001706  2A20               	incf	command_builder_add_string@inx+1,f,c
  7535  001708                     l319:
  7536  001708  501F               	movf	command_builder_add_string@inx,w,c
  7537  00170A  2419               	addwf	command_builder_add_string@data_string,w,c
  7538  00170C  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7539  00170E  5020               	movf	command_builder_add_string@inx+1,w,c
  7540  001710  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7541  001712  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7542  001714  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7543  001718  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7544  00171C  6AF8               	clrf	tblptru,c
  7545  00171E  0E05               	movlw	(high __ramtop+-1)
  7546  001720  64F7               	cpfsgt	tblptrh,c
  7547  001722  D003               	bra	u2587
  7548  001724  0008               	tblrd		*
  7549  001726  50F5               	movf	tablat,w,c
  7550  001728  D005               	bra	u2580
  7551  00172A                     u2587:
  7552  00172A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7553  00172E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7554  001732  50E7               	movf	indf1,w,c
  7555  001734                     u2580:
  7556  001734  0900               	iorlw	0
  7557  001736  A4D8               	btfss	status,2,c
  7558  001738  D7C4               	goto	l320
  7559                           
  7560                           ;SlaveComm.c: 559: }
  7561                           ;SlaveComm.c: 561: return xsumAdd;
  7562  00173A  C01D  F017         	movff	command_builder_add_string@xsumAdd,?_command_builder_add_string
  7563  00173E  C01E  F018         	movff	command_builder_add_string@xsumAdd+1,?_command_builder_add_string+1
  7564  001742  0012               	return		;funcret
  7565  001744                     __end_of_command_builder_add_string:
  7566                           	opt stack 0
  7567                           tblptru	equ	0xFF8
  7568                           tblptrh	equ	0xFF7
  7569                           tblptrl	equ	0xFF6
  7570                           tablat	equ	0xFF5
  7571                           prodh	equ	0xFF4
  7572                           prodl	equ	0xFF3
  7573                           intcon	equ	0xFF2
  7574                           intcon2	equ	0xFF1
  7575                           intcon3	equ	0xFF0
  7576                           postinc0	equ	0xFEE
  7577                           wreg	equ	0xFE8
  7578                           indf1	equ	0xFE7
  7579                           postinc1	equ	0xFE6
  7580                           fsr1h	equ	0xFE2
  7581                           fsr1l	equ	0xFE1
  7582                           indf2	equ	0xFDF
  7583                           postinc2	equ	0xFDE
  7584                           postdec2	equ	0xFDD
  7585                           fsr2h	equ	0xFDA
  7586                           fsr2l	equ	0xFD9
  7587                           status	equ	0xFD8
  7588                           
  7589 ;; *************** function _command_builder_add_char *****************
  7590 ;; Defined at:
  7591 ;;		line 540 in file "SlaveComm.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  7594 ;;		 -> communications@send_buffer(42), 
  7595 ;;  data            1   20[COMRAM] unsigned char 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  2   18[COMRAM] int 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7607 ;;      Params:         3       0       0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0
  7609 ;;      Temps:          1       0       0       0       0       0       0
  7610 ;;      Totals:         4       0       0       0       0       0       0
  7611 ;;Total ram usage:        4 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_command_builder1
  7618 ;;		_command_builder3
  7619 ;;		_xsum_builder
  7620 ;;		_command_builder_add_string
  7621 ;;		_command_builder2
  7622 ;;		_command_builder4
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text54
  7627  001AF2                     __ptext54:
  7628                           	opt stack 0
  7629  001AF2                     _command_builder_add_char:
  7630                           	opt stack 22
  7631                           
  7632                           ;SlaveComm.c: 542: send_buffer->data_buffer[send_buffer->write_position] = data;
  7633                           
  7634                           ;incstack = 0
  7635  001AF2  EE20 F028          	lfsr	2,40
  7636  001AF6  5013               	movf	command_builder_add_char@send_buffer,w,c
  7637  001AF8  26D9               	addwf	fsr2l,f,c
  7638  001AFA  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7639  001AFC  22DA               	addwfc	fsr2h,f,c
  7640  001AFE  50DF               	movf	indf2,w,c
  7641  001B00  6E16               	movwf	??_command_builder_add_char& (0+255),c
  7642  001B02  5016               	movf	??_command_builder_add_char,w,c
  7643  001B04  0D01               	mullw	1
  7644  001B06  50F3               	movf	prodl,w,c
  7645  001B08  2413               	addwf	command_builder_add_char@send_buffer,w,c
  7646  001B0A  6ED9               	movwf	fsr2l,c
  7647  001B0C  50F4               	movf	prodh,w,c
  7648  001B0E  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  7649  001B10  6EDA               	movwf	fsr2h,c
  7650  001B12  C015  FFDF         	movff	command_builder_add_char@data,indf2
  7651                           
  7652                           ;SlaveComm.c: 544: send_buffer->write_position++;
  7653  001B16  EE20 F028          	lfsr	2,40
  7654  001B1A  5013               	movf	command_builder_add_char@send_buffer,w,c
  7655  001B1C  26D9               	addwf	fsr2l,f,c
  7656  001B1E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7657  001B20  22DA               	addwfc	fsr2h,f,c
  7658  001B22  2ADF               	incf	indf2,f,c
  7659                           
  7660                           ;SlaveComm.c: 545: if( send_buffer->write_position >= 40 )
  7661  001B24  EE20 F028          	lfsr	2,40
  7662  001B28  5013               	movf	command_builder_add_char@send_buffer,w,c
  7663  001B2A  26D9               	addwf	fsr2l,f,c
  7664  001B2C  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7665  001B2E  22DA               	addwfc	fsr2h,f,c
  7666  001B30  0E27               	movlw	39
  7667  001B32  64DF               	cpfsgt	indf2,c
  7668  001B34  D008               	goto	l315
  7669                           
  7670                           ;SlaveComm.c: 546: {
  7671                           ;SlaveComm.c: 547: send_buffer->write_position = 0;
  7672  001B36  EE20 F028          	lfsr	2,40
  7673  001B3A  5013               	movf	command_builder_add_char@send_buffer,w,c
  7674  001B3C  26D9               	addwf	fsr2l,f,c
  7675  001B3E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7676  001B40  22DA               	addwfc	fsr2h,f,c
  7677  001B42  0E00               	movlw	0
  7678  001B44  6EDF               	movwf	indf2,c
  7679  001B46                     l315:
  7680                           
  7681                           ;SlaveComm.c: 548: }
  7682                           ;SlaveComm.c: 550: return data;
  7683  001B46  C015  F013         	movff	command_builder_add_char@data,?_command_builder_add_char
  7684  001B4A  6A14               	clrf	?_command_builder_add_char+1,c
  7685  001B4C  0012               	return	
  7686  001B4E                     __end_of_command_builder_add_char:
  7687                           	opt stack 0
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           prodh	equ	0xFF4
  7693                           prodl	equ	0xFF3
  7694                           intcon	equ	0xFF2
  7695                           intcon2	equ	0xFF1
  7696                           intcon3	equ	0xFF0
  7697                           postinc0	equ	0xFEE
  7698                           wreg	equ	0xFE8
  7699                           indf1	equ	0xFE7
  7700                           postinc1	equ	0xFE6
  7701                           fsr1h	equ	0xFE2
  7702                           fsr1l	equ	0xFE1
  7703                           indf2	equ	0xFDF
  7704                           postinc2	equ	0xFDE
  7705                           postdec2	equ	0xFDD
  7706                           fsr2h	equ	0xFDA
  7707                           fsr2l	equ	0xFD9
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _atol *****************
  7711 ;; Defined at:
  7712 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7715 ;;		 -> process_data@parameters(105), 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  a               4   39[COMRAM] long 
  7718 ;;  c               1   43[COMRAM] unsigned char 
  7719 ;;  sign            1   38[COMRAM] unsigned char 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  4   30[COMRAM] long 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7729 ;;      Params:         4       0       0       0       0       0       0
  7730 ;;      Locals:         6       0       0       0       0       0       0
  7731 ;;      Temps:          4       0       0       0       0       0       0
  7732 ;;      Totals:        14       0       0       0       0       0       0
  7733 ;;Total ram usage:       14 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:    2
  7736 ;; This function calls:
  7737 ;;		___lmul
  7738 ;;		_isdigit
  7739 ;; This function is called by:
  7740 ;;		_process_data_parameters
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text55
  7745  000E6E                     __ptext55:
  7746                           	opt stack 0
  7747  000E6E                     _atol:
  7748                           	opt stack 24
  7749                           
  7750                           ;incstack = 0
  7751  000E6E  C01F  FFD9         	movff	atol@s,fsr2l
  7752  000E72  C020  FFDA         	movff	atol@s+1,fsr2h
  7753  000E76  50DF               	movf	indf2,w,c
  7754  000E78  6E2C               	movwf	atol@c,c
  7755  000E7A  4A1F               	infsnz	atol@s,f,c
  7756  000E7C  2A20               	incf	atol@s+1,f,c
  7757  000E7E  0E20               	movlw	32
  7758  000E80  182C               	xorwf	atol@c,w,c
  7759  000E82  B4D8               	btfsc	status,2,c
  7760  000E84  D7F4               	goto	_atol
  7761  000E86  0E09               	movlw	9
  7762  000E88  182C               	xorwf	atol@c,w,c
  7763  000E8A  B4D8               	btfsc	status,2,c
  7764  000E8C  D7F0               	goto	_atol
  7765  000E8E  0E00               	movlw	0
  7766  000E90  6E28               	movwf	atol@a,c
  7767  000E92  0E00               	movlw	0
  7768  000E94  6E29               	movwf	atol@a+1,c
  7769  000E96  0E00               	movlw	0
  7770  000E98  6E2A               	movwf	atol@a+2,c
  7771  000E9A  0E00               	movlw	0
  7772  000E9C  6E2B               	movwf	atol@a+3,c
  7773  000E9E  0E00               	movlw	0
  7774  000EA0  6E27               	movwf	atol@sign,c
  7775  000EA2  0E2D               	movlw	45
  7776  000EA4  182C               	xorwf	atol@c,w,c
  7777  000EA6  A4D8               	btfss	status,2,c
  7778  000EA8  D002               	goto	l785
  7779  000EAA  2A27               	incf	atol@sign,f,c
  7780  000EAC  D027               	goto	L7
  7781  000EAE                     l785:
  7782  000EAE  0E2B               	movlw	43
  7783  000EB0  182C               	xorwf	atol@c,w,c
  7784  000EB2  A4D8               	btfss	status,2,c
  7785  000EB4  D02B               	goto	l788
  7786  000EB6  D022               	goto	L7
  7787  000EB8  C028  F013         	movff	atol@a,___lmul@multiplier
  7788  000EBC  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  7789  000EC0  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  7790  000EC4  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  7791  000EC8  0E0A               	movlw	10
  7792  000ECA  6E17               	movwf	___lmul@multiplicand,c
  7793  000ECC  0E00               	movlw	0
  7794  000ECE  6E18               	movwf	___lmul@multiplicand+1,c
  7795  000ED0  0E00               	movlw	0
  7796  000ED2  6E19               	movwf	___lmul@multiplicand+2,c
  7797  000ED4  0E00               	movlw	0
  7798  000ED6  6E1A               	movwf	___lmul@multiplicand+3,c
  7799  000ED8  ECD4  F00D         	call	___lmul	;wreg free
  7800  000EDC  C02C  F023         	movff	atol@c,??_atol
  7801  000EE0  0ED0               	movlw	208
  7802  000EE2  2623               	addwf	??_atol,f,c
  7803  000EE4  5023               	movf	??_atol,w,c
  7804  000EE6  2413               	addwf	?___lmul,w,c
  7805  000EE8  6E28               	movwf	atol@a,c
  7806  000EEA  0E00               	movlw	0
  7807  000EEC  2014               	addwfc	?___lmul+1,w,c
  7808  000EEE  6E29               	movwf	atol@a+1,c
  7809  000EF0  0E00               	movlw	0
  7810  000EF2  2015               	addwfc	?___lmul+2,w,c
  7811  000EF4  6E2A               	movwf	atol@a+2,c
  7812  000EF6  0E00               	movlw	0
  7813  000EF8  2016               	addwfc	?___lmul+3,w,c
  7814  000EFA  6E2B               	movwf	atol@a+3,c
  7815  000EFC                     L7:
  7816  000EFC  C01F  FFD9         	movff	atol@s,fsr2l
  7817  000F00  C020  FFDA         	movff	atol@s+1,fsr2h
  7818  000F04  50DF               	movf	indf2,w,c
  7819  000F06  6E2C               	movwf	atol@c,c
  7820  000F08  4A1F               	infsnz	atol@s,f,c
  7821  000F0A  2A20               	incf	atol@s+1,f,c
  7822  000F0C                     l788:
  7823  000F0C  502C               	movf	atol@c,w,c
  7824  000F0E  EC7A  F010         	call	_isdigit
  7825  000F12  B0D8               	btfsc	status,0,c
  7826  000F14  D7D1               	goto	l789
  7827  000F16  5027               	movf	atol@sign,w,c
  7828  000F18  B4D8               	btfsc	status,2,c
  7829  000F1A  D01A               	goto	l791
  7830  000F1C  C028  F023         	movff	atol@a,??_atol
  7831  000F20  C029  F024         	movff	atol@a+1,??_atol+1
  7832  000F24  C02A  F025         	movff	atol@a+2,??_atol+2
  7833  000F28  C02B  F026         	movff	atol@a+3,??_atol+3
  7834  000F2C  1E23               	comf	??_atol,f,c
  7835  000F2E  1E24               	comf	??_atol+1,f,c
  7836  000F30  1E25               	comf	??_atol+2,f,c
  7837  000F32  1E26               	comf	??_atol+3,f,c
  7838  000F34  2A23               	incf	??_atol,f,c
  7839  000F36  0E00               	movlw	0
  7840  000F38  2224               	addwfc	??_atol+1,f,c
  7841  000F3A  2225               	addwfc	??_atol+2,f,c
  7842  000F3C  2226               	addwfc	??_atol+3,f,c
  7843  000F3E  C023  F01F         	movff	??_atol,?_atol
  7844  000F42  C024  F020         	movff	??_atol+1,?_atol+1
  7845  000F46  C025  F021         	movff	??_atol+2,?_atol+2
  7846  000F4A  C026  F022         	movff	??_atol+3,?_atol+3
  7847  000F4E  0012               	return	
  7848  000F50                     l791:
  7849  000F50  C028  F01F         	movff	atol@a,?_atol
  7850  000F54  C029  F020         	movff	atol@a+1,?_atol+1
  7851  000F58  C02A  F021         	movff	atol@a+2,?_atol+2
  7852  000F5C  C02B  F022         	movff	atol@a+3,?_atol+3
  7853  000F60  0012               	return		;funcret
  7854  000F62                     __end_of_atol:
  7855                           	opt stack 0
  7856                           tblptru	equ	0xFF8
  7857                           tblptrh	equ	0xFF7
  7858                           tblptrl	equ	0xFF6
  7859                           tablat	equ	0xFF5
  7860                           prodh	equ	0xFF4
  7861                           prodl	equ	0xFF3
  7862                           intcon	equ	0xFF2
  7863                           intcon2	equ	0xFF1
  7864                           intcon3	equ	0xFF0
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           indf1	equ	0xFE7
  7868                           postinc1	equ	0xFE6
  7869                           fsr1h	equ	0xFE2
  7870                           fsr1l	equ	0xFE1
  7871                           indf2	equ	0xFDF
  7872                           postinc2	equ	0xFDE
  7873                           postdec2	equ	0xFDD
  7874                           fsr2h	equ	0xFDA
  7875                           fsr2l	equ	0xFD9
  7876                           status	equ	0xFD8
  7877                           
  7878 ;; *************** function _isdigit *****************
  7879 ;; Defined at:
  7880 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  c               1    wreg     unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  c               1   20[COMRAM] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;		None               void
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7894 ;;      Params:         0       0       0       0       0       0       0
  7895 ;;      Locals:         2       0       0       0       0       0       0
  7896 ;;      Temps:          1       0       0       0       0       0       0
  7897 ;;      Totals:         3       0       0       0       0       0       0
  7898 ;;Total ram usage:        3 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    1
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_atoi
  7905 ;;		_atol
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text56
  7910  0020F4                     __ptext56:
  7911                           	opt stack 0
  7912  0020F4                     _isdigit:
  7913                           	opt stack 25
  7914                           
  7915                           ;incstack = 0
  7916                           ;isdigit@c stored from wreg
  7917  0020F4  6E15               	movwf	isdigit@c,c
  7918  0020F6  0E00               	movlw	0
  7919  0020F8  6E14               	movwf	_isdigit$2432,c
  7920  0020FA  0E3A               	movlw	58
  7921  0020FC  6015               	cpfslt	isdigit@c,c
  7922  0020FE  D005               	goto	l963
  7923  002100  0E2F               	movlw	47
  7924  002102  6415               	cpfsgt	isdigit@c,c
  7925  002104  D002               	goto	l963
  7926  002106  0E01               	movlw	1
  7927  002108  6E14               	movwf	_isdigit$2432,c
  7928  00210A                     l963:
  7929  00210A  C014  F013         	movff	_isdigit$2432,??_isdigit
  7930  00210E  3013               	rrcf	??_isdigit,w,c
  7931  002110  0012               	return	
  7932  002112                     __end_of_isdigit:
  7933                           	opt stack 0
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           prodh	equ	0xFF4
  7939                           prodl	equ	0xFF3
  7940                           intcon	equ	0xFF2
  7941                           intcon2	equ	0xFF1
  7942                           intcon3	equ	0xFF0
  7943                           postinc0	equ	0xFEE
  7944                           wreg	equ	0xFE8
  7945                           indf1	equ	0xFE7
  7946                           postinc1	equ	0xFE6
  7947                           fsr1h	equ	0xFE2
  7948                           fsr1l	equ	0xFE1
  7949                           indf2	equ	0xFDF
  7950                           postinc2	equ	0xFDE
  7951                           postdec2	equ	0xFDD
  7952                           fsr2h	equ	0xFDA
  7953                           fsr2l	equ	0xFD9
  7954                           status	equ	0xFD8
  7955                           
  7956 ;; *************** function ___lmul *****************
  7957 ;; Defined at:
  7958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  multiplier      4   18[COMRAM] unsigned long 
  7961 ;;  multiplicand    4   22[COMRAM] unsigned long 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  product         4   26[COMRAM] unsigned long 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  4   18[COMRAM] unsigned long 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7973 ;;      Params:         8       0       0       0       0       0       0
  7974 ;;      Locals:         4       0       0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0
  7976 ;;      Totals:        12       0       0       0       0       0       0
  7977 ;;Total ram usage:       12 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    1
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_atol
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text57
  7988  001BA8                     __ptext57:
  7989                           	opt stack 0
  7990  001BA8                     ___lmul:
  7991                           	opt stack 24
  7992                           
  7993                           ;incstack = 0
  7994  001BA8  0E00               	movlw	0
  7995  001BAA  6E1B               	movwf	___lmul@product,c
  7996  001BAC  0E00               	movlw	0
  7997  001BAE  6E1C               	movwf	___lmul@product+1,c
  7998  001BB0  0E00               	movlw	0
  7999  001BB2  6E1D               	movwf	___lmul@product+2,c
  8000  001BB4  0E00               	movlw	0
  8001  001BB6  6E1E               	movwf	___lmul@product+3,c
  8002  001BB8  A013               	btfss	___lmul@multiplier,0,c
  8003  001BBA  D008               	goto	l617
  8004  001BBC  5017               	movf	___lmul@multiplicand,w,c
  8005  001BBE  261B               	addwf	___lmul@product,f,c
  8006  001BC0  5018               	movf	___lmul@multiplicand+1,w,c
  8007  001BC2  221C               	addwfc	___lmul@product+1,f,c
  8008  001BC4  5019               	movf	___lmul@multiplicand+2,w,c
  8009  001BC6  221D               	addwfc	___lmul@product+2,f,c
  8010  001BC8  501A               	movf	___lmul@multiplicand+3,w,c
  8011  001BCA  221E               	addwfc	___lmul@product+3,f,c
  8012  001BCC                     l617:
  8013  001BCC  90D8               	bcf	status,0,c
  8014  001BCE  3617               	rlcf	___lmul@multiplicand,f,c
  8015  001BD0  3618               	rlcf	___lmul@multiplicand+1,f,c
  8016  001BD2  3619               	rlcf	___lmul@multiplicand+2,f,c
  8017  001BD4  361A               	rlcf	___lmul@multiplicand+3,f,c
  8018  001BD6  90D8               	bcf	status,0,c
  8019  001BD8  3216               	rrcf	___lmul@multiplier+3,f,c
  8020  001BDA  3215               	rrcf	___lmul@multiplier+2,f,c
  8021  001BDC  3214               	rrcf	___lmul@multiplier+1,f,c
  8022  001BDE  3213               	rrcf	___lmul@multiplier,f,c
  8023  001BE0  5013               	movf	___lmul@multiplier,w,c
  8024  001BE2  1014               	iorwf	___lmul@multiplier+1,w,c
  8025  001BE4  1015               	iorwf	___lmul@multiplier+2,w,c
  8026  001BE6  1016               	iorwf	___lmul@multiplier+3,w,c
  8027  001BE8  A4D8               	btfss	status,2,c
  8028  001BEA  D7E6               	goto	l616
  8029  001BEC  C01B  F013         	movff	___lmul@product,?___lmul
  8030  001BF0  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  8031  001BF4  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  8032  001BF8  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  8033  001BFC  0012               	return		;funcret
  8034  001BFE                     __end_of___lmul:
  8035                           	opt stack 0
  8036                           tblptru	equ	0xFF8
  8037                           tblptrh	equ	0xFF7
  8038                           tblptrl	equ	0xFF6
  8039                           tablat	equ	0xFF5
  8040                           prodh	equ	0xFF4
  8041                           prodl	equ	0xFF3
  8042                           intcon	equ	0xFF2
  8043                           intcon2	equ	0xFF1
  8044                           intcon3	equ	0xFF0
  8045                           postinc0	equ	0xFEE
  8046                           wreg	equ	0xFE8
  8047                           indf1	equ	0xFE7
  8048                           postinc1	equ	0xFE6
  8049                           fsr1h	equ	0xFE2
  8050                           fsr1l	equ	0xFE1
  8051                           indf2	equ	0xFDF
  8052                           postinc2	equ	0xFDE
  8053                           postdec2	equ	0xFDD
  8054                           fsr2h	equ	0xFDA
  8055                           fsr2l	equ	0xFD9
  8056                           status	equ	0xFD8
  8057                           
  8058 ;; *************** function _process_data_parameterize *****************
  8059 ;; Defined at:
  8060 ;;		line 287 in file "SlaveComm.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  parameters      2   24[COMRAM] PTR unsigned char [15]
  8063 ;;		 -> process_data@parameters(105), 
  8064 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  8065 ;;		 -> communications@receive_buffer(42), 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  inx             2   31[COMRAM] int 
  8068 ;;  parameter_po    1   34[COMRAM] unsigned char 
  8069 ;;  parameter_in    1   33[COMRAM] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8079 ;;      Params:         4       0       0       0       0       0       0
  8080 ;;      Locals:         4       0       0       0       0       0       0
  8081 ;;      Temps:          3       0       0       0       0       0       0
  8082 ;;      Totals:        11       0       0       0       0       0       0
  8083 ;;Total ram usage:       11 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    2
  8086 ;; This function calls:
  8087 ;;		___wmul
  8088 ;; This function is called by:
  8089 ;;		_process_data
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text58
  8094  00081E                     __ptext58:
  8095                           	opt stack 0
  8096  00081E                     _process_data_parameterize:
  8097                           	opt stack 25
  8098                           
  8099                           ;SlaveComm.c: 289: unsigned char parameter_position = 0;
  8100                           
  8101                           ;incstack = 0
  8102  00081E  0E00               	movlw	0
  8103  000820  6E23               	movwf	process_data_parameterize@parameter_position,c
  8104                           
  8105                           ;SlaveComm.c: 290: unsigned char parameter_index = 0;
  8106  000822  0E00               	movlw	0
  8107  000824  6E22               	movwf	process_data_parameterize@parameter_index,c
  8108                           
  8109                           ;SlaveComm.c: 299: for( int inx = 0; inx < 7; inx++ )
  8110  000826  0E00               	movlw	0
  8111  000828  6E21               	movwf	process_data_parameterize@inx+1,c
  8112  00082A  0E00               	movlw	0
  8113  00082C  6E20               	movwf	process_data_parameterize@inx,c
  8114  00082E  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  8115  000830  D008               	goto	l248
  8116  000832  5021               	movf	process_data_parameterize@inx+1,w,c
  8117  000834  E105               	bnz	u2910
  8118  000836  0E07               	movlw	7
  8119  000838  5C20               	subwf	process_data_parameterize@inx,w,c
  8120  00083A  B0D8               	btfsc	status,0,c
  8121  00083C  D082               	goto	l250
  8122  00083E  D001               	goto	l248
  8123  000840                     u2910:
  8124  000840  D080               	goto	l250
  8125  000842                     l248:
  8126                           
  8127                           ;SlaveComm.c: 300: {
  8128                           ;SlaveComm.c: 301: parameters[inx][0] = '\0';
  8129  000842  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  8130  000846  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  8131  00084A  0E00               	movlw	0
  8132  00084C  6E16               	movwf	___wmul@multiplicand+1,c
  8133  00084E  0E0F               	movlw	15
  8134  000850  6E15               	movwf	___wmul@multiplicand,c
  8135  000852  EC39  F010         	call	___wmul	;wreg free
  8136  000856  5013               	movf	?___wmul,w,c
  8137  000858  2419               	addwf	process_data_parameterize@parameters,w,c
  8138  00085A  6ED9               	movwf	fsr2l,c
  8139  00085C  5014               	movf	?___wmul+1,w,c
  8140  00085E  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  8141  000860  6EDA               	movwf	fsr2h,c
  8142  000862  0E00               	movlw	0
  8143  000864  6EDF               	movwf	indf2,c
  8144  000866  4A20               	infsnz	process_data_parameterize@inx,f,c
  8145  000868  2A21               	incf	process_data_parameterize@inx+1,f,c
  8146  00086A  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  8147  00086C  D7EA               	goto	l248
  8148  00086E  5021               	movf	process_data_parameterize@inx+1,w,c
  8149  000870  E168               	bnz	l4006
  8150  000872  D7E1               	goto	L6
  8151  000874                     
  8152                           ;SlaveComm.c: 318: parameter_position = 0;
  8153  000874  0E00               	movlw	0
  8154  000876  6E23               	movwf	process_data_parameterize@parameter_position,c
  8155                           
  8156                           ;SlaveComm.c: 319: parameter_index++;
  8157  000878  2A22               	incf	process_data_parameterize@parameter_index,f,c
  8158                           
  8159                           ;SlaveComm.c: 321: if( parameter_index >= 7 )
  8160  00087A  0E06               	movlw	6
  8161  00087C  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  8162  00087E  D05A               	goto	l254
  8163                           
  8164                           ;SlaveComm.c: 322: {
  8165                           ;SlaveComm.c: 325: parameter_index = (7 - 1);
  8166  000880  0E06               	movlw	6
  8167  000882  6E22               	movwf	process_data_parameterize@parameter_index,c
  8168                           
  8169                           ;SlaveComm.c: 326: }
  8170                           ;SlaveComm.c: 328: break;
  8171  000884  D057               	goto	l254
  8172  000886                     
  8173                           ;SlaveComm.c: 331: parameters[parameter_index][parameter_position] = buffer_to_parameter
      +                          ize->data_buffer[buffer_to_parameterize->read_position];
  8174  000886  EE20 F029          	lfsr	2,41
  8175  00088A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8176  00088C  26D9               	addwf	fsr2l,f,c
  8177  00088E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8178  000890  22DA               	addwfc	fsr2h,f,c
  8179  000892  50DF               	movf	indf2,w,c
  8180  000894  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8181  000896  501D               	movf	??_process_data_parameterize,w,c
  8182  000898  0D01               	mullw	1
  8183  00089A  50F3               	movf	prodl,w,c
  8184  00089C  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8185  00089E  6ED9               	movwf	fsr2l,c
  8186  0008A0  50F4               	movf	prodh,w,c
  8187  0008A2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8188  0008A4  6EDA               	movwf	fsr2h,c
  8189  0008A6  5022               	movf	process_data_parameterize@parameter_index,w,c
  8190  0008A8  0D0F               	mullw	15
  8191  0008AA  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  8192  0008AE  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  8193  0008B2  50F3               	movf	prodl,w,c
  8194  0008B4  261E               	addwf	??_process_data_parameterize+1,f,c
  8195  0008B6  50F4               	movf	prodh,w,c
  8196  0008B8  221F               	addwfc	??_process_data_parameterize+2,f,c
  8197  0008BA  5023               	movf	process_data_parameterize@parameter_position,w,c
  8198  0008BC  0D01               	mullw	1
  8199  0008BE  50F3               	movf	prodl,w,c
  8200  0008C0  241E               	addwf	??_process_data_parameterize+1,w,c
  8201  0008C2  6EE1               	movwf	fsr1l,c
  8202  0008C4  50F4               	movf	prodh,w,c
  8203  0008C6  201F               	addwfc	??_process_data_parameterize+2,w,c
  8204  0008C8  6EE2               	movwf	fsr1h,c
  8205  0008CA  CFDF FFE7          	movff	indf2,indf1
  8206                           
  8207                           ;SlaveComm.c: 332: parameter_position++;
  8208  0008CE  2A23               	incf	process_data_parameterize@parameter_position,f,c
  8209                           
  8210                           ;SlaveComm.c: 333: if( parameter_position >= 15 )
  8211  0008D0  0E0E               	movlw	14
  8212  0008D2  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  8213  0008D4  D002               	goto	l258
  8214                           
  8215                           ;SlaveComm.c: 334: {
  8216                           ;SlaveComm.c: 337: parameter_position = (15 - 1);
  8217  0008D6  0E0E               	movlw	14
  8218  0008D8  6E23               	movwf	process_data_parameterize@parameter_position,c
  8219  0008DA                     l258:
  8220                           
  8221                           ;SlaveComm.c: 338: }
  8222                           ;SlaveComm.c: 341: parameters[parameter_index][parameter_position] = '\0';
  8223  0008DA  5022               	movf	process_data_parameterize@parameter_index,w,c
  8224  0008DC  0D0F               	mullw	15
  8225  0008DE  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  8226  0008E2  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  8227  0008E6  50F3               	movf	prodl,w,c
  8228  0008E8  261D               	addwf	??_process_data_parameterize,f,c
  8229  0008EA  50F4               	movf	prodh,w,c
  8230  0008EC  221E               	addwfc	??_process_data_parameterize+1,f,c
  8231  0008EE  5023               	movf	process_data_parameterize@parameter_position,w,c
  8232  0008F0  0D01               	mullw	1
  8233  0008F2  50F3               	movf	prodl,w,c
  8234  0008F4  241D               	addwf	??_process_data_parameterize,w,c
  8235  0008F6  6ED9               	movwf	fsr2l,c
  8236  0008F8  50F4               	movf	prodh,w,c
  8237  0008FA  201E               	addwfc	??_process_data_parameterize+1,w,c
  8238  0008FC  6EDA               	movwf	fsr2h,c
  8239  0008FE  0E00               	movlw	0
  8240  000900  6EDF               	movwf	indf2,c
  8241                           
  8242                           ;SlaveComm.c: 343: }
  8243                           
  8244                           ;SlaveComm.c: 342: break;
  8245  000902  D018               	goto	l254
  8246  000904  EE20 F029          	lfsr	2,41
  8247  000908  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8248  00090A  26D9               	addwf	fsr2l,f,c
  8249  00090C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8250  00090E  22DA               	addwfc	fsr2h,f,c
  8251  000910  50DF               	movf	indf2,w,c
  8252  000912  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8253  000914  501D               	movf	??_process_data_parameterize,w,c
  8254  000916  0D01               	mullw	1
  8255  000918  50F3               	movf	prodl,w,c
  8256  00091A  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8257  00091C  6ED9               	movwf	fsr2l,c
  8258  00091E  50F4               	movf	prodh,w,c
  8259  000920  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8260  000922  6EDA               	movwf	fsr2h,c
  8261  000924  50DF               	movf	indf2,w,c
  8262                           
  8263                           ; Switch size 1, requested type "space"
  8264                           ; Number of cases is 2, Range of values is 33 to 59
  8265                           ; switch strategies available:
  8266                           ; Name         Instructions Cycles
  8267                           ; simple_byte            7     4 (average)
  8268                           ;	Chosen strategy is simple_byte
  8269  000926  0A21               	xorlw	33	; case 33
  8270  000928  B4D8               	btfsc	status,2,c
  8271  00092A  D004               	goto	l254
  8272  00092C  0A1A               	xorlw	26	; case 59
  8273  00092E  B4D8               	btfsc	status,2,c
  8274  000930  D7A1               	goto	l255
  8275  000932  D7A9               	goto	l257
  8276  000934                     l254:
  8277                           
  8278                           ;SlaveComm.c: 345: buffer_to_parameterize->read_position++;
  8279  000934  EE20 F029          	lfsr	2,41
  8280  000938  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8281  00093A  26D9               	addwf	fsr2l,f,c
  8282  00093C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8283  00093E  22DA               	addwfc	fsr2h,f,c
  8284  000940  2ADF               	incf	indf2,f,c
  8285  000942                     l250:
  8286  000942                     l4006:
  8287  000942  EE20 F029          	lfsr	2,41
  8288  000946  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8289  000948  26D9               	addwf	fsr2l,f,c
  8290  00094A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8291  00094C  22DA               	addwfc	fsr2h,f,c
  8292  00094E  50DF               	movf	indf2,w,c
  8293  000950  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8294  000952  501D               	movf	??_process_data_parameterize,w,c
  8295  000954  0D01               	mullw	1
  8296  000956  50F3               	movf	prodl,w,c
  8297  000958  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8298  00095A  6ED9               	movwf	fsr2l,c
  8299  00095C  50F4               	movf	prodh,w,c
  8300  00095E  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8301  000960  6EDA               	movwf	fsr2h,c
  8302  000962  0E2A               	movlw	42
  8303  000964  18DE               	xorwf	postinc2,w,c
  8304  000966  B4D8               	btfsc	status,2,c
  8305  000968  0012               	return	
  8306  00096A  EE20 F029          	lfsr	2,41
  8307  00096E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8308  000970  26D9               	addwf	fsr2l,f,c
  8309  000972  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8310  000974  22DA               	addwfc	fsr2h,f,c
  8311  000976  0E28               	movlw	40
  8312  000978  60DF               	cpfslt	indf2,c
  8313  00097A  0012               	return	
  8314  00097C  EE20 F028          	lfsr	2,40
  8315  000980  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8316  000982  26D9               	addwf	fsr2l,f,c
  8317  000984  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8318  000986  22DA               	addwfc	fsr2h,f,c
  8319  000988  EE10 F029          	lfsr	1,41
  8320  00098C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8321  00098E  26E1               	addwf	fsr1l,f,c
  8322  000990  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8323  000992  22E2               	addwfc	fsr1h,f,c
  8324  000994  50DE               	movf	postinc2,w,c
  8325  000996  18E6               	xorwf	postinc1,w,c
  8326  000998  B4D8               	btfsc	status,2,c
  8327  00099A  0012               	return	
  8328  00099C  EE20 F029          	lfsr	2,41
  8329  0009A0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8330  0009A2  26D9               	addwf	fsr2l,f,c
  8331  0009A4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8332  0009A6  22DA               	addwfc	fsr2h,f,c
  8333  0009A8  50DF               	movf	indf2,w,c
  8334  0009AA  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8335  0009AC  501D               	movf	??_process_data_parameterize,w,c
  8336  0009AE  0D01               	mullw	1
  8337  0009B0  50F3               	movf	prodl,w,c
  8338  0009B2  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8339  0009B4  6ED9               	movwf	fsr2l,c
  8340  0009B6  50F4               	movf	prodh,w,c
  8341  0009B8  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8342  0009BA  6EDA               	movwf	fsr2h,c
  8343  0009BC  0E24               	movlw	36
  8344  0009BE  18DE               	xorwf	postinc2,w,c
  8345  0009C0  B4D8               	btfsc	status,2,c
  8346  0009C2  0012               	return	
  8347  0009C4  D79F               	goto	l252
  8348  0009C6                     __end_of_process_data_parameterize:
  8349                           	opt stack 0
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           intcon2	equ	0xFF1
  8358                           intcon3	equ	0xFF0
  8359                           postinc0	equ	0xFEE
  8360                           wreg	equ	0xFE8
  8361                           indf1	equ	0xFE7
  8362                           postinc1	equ	0xFE6
  8363                           fsr1h	equ	0xFE2
  8364                           fsr1l	equ	0xFE1
  8365                           indf2	equ	0xFDF
  8366                           postinc2	equ	0xFDE
  8367                           postdec2	equ	0xFDD
  8368                           fsr2h	equ	0xFDA
  8369                           fsr2l	equ	0xFD9
  8370                           status	equ	0xFD8
  8371                           
  8372 ;; *************** function ___wmul *****************
  8373 ;; Defined at:
  8374 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;  multiplier      2   18[COMRAM] unsigned int 
  8377 ;;  multiplicand    2   20[COMRAM] unsigned int 
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;  product         2   22[COMRAM] unsigned int 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  2   18[COMRAM] unsigned int 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2, status,0, prodl, prodh
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8389 ;;      Params:         4       0       0       0       0       0       0
  8390 ;;      Locals:         2       0       0       0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0
  8392 ;;      Totals:         6       0       0       0       0       0       0
  8393 ;;Total ram usage:        6 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    1
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_process_data_parameterize
  8400 ;;		_atoi
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text59
  8405  002072                     __ptext59:
  8406                           	opt stack 0
  8407  002072                     ___wmul:
  8408                           	opt stack 25
  8409                           
  8410                           ;incstack = 0
  8411  002072  5013               	movf	___wmul@multiplier,w,c
  8412  002074  0215               	mulwf	___wmul@multiplicand,c
  8413  002076  CFF3 F017          	movff	prodl,___wmul@product
  8414  00207A  CFF4 F018          	movff	prodh,___wmul@product+1
  8415  00207E  5013               	movf	___wmul@multiplier,w,c
  8416  002080  0216               	mulwf	___wmul@multiplicand+1,c
  8417  002082  50F3               	movf	prodl,w,c
  8418  002084  2618               	addwf	___wmul@product+1,f,c
  8419  002086  5014               	movf	___wmul@multiplier+1,w,c
  8420  002088  0215               	mulwf	___wmul@multiplicand,c
  8421  00208A  50F3               	movf	prodl,w,c
  8422  00208C  2618               	addwf	___wmul@product+1,f,c
  8423  00208E  C017  F013         	movff	___wmul@product,?___wmul
  8424  002092  C018  F014         	movff	___wmul@product+1,?___wmul+1
  8425  002096  0012               	return	
  8426  002098                     __end_of___wmul:
  8427                           	opt stack 0
  8428                           tblptru	equ	0xFF8
  8429                           tblptrh	equ	0xFF7
  8430                           tblptrl	equ	0xFF6
  8431                           tablat	equ	0xFF5
  8432                           prodh	equ	0xFF4
  8433                           prodl	equ	0xFF3
  8434                           intcon	equ	0xFF2
  8435                           intcon2	equ	0xFF1
  8436                           intcon3	equ	0xFF0
  8437                           postinc0	equ	0xFEE
  8438                           wreg	equ	0xFE8
  8439                           indf1	equ	0xFE7
  8440                           postinc1	equ	0xFE6
  8441                           fsr1h	equ	0xFE2
  8442                           fsr1l	equ	0xFE1
  8443                           indf2	equ	0xFDF
  8444                           postinc2	equ	0xFDE
  8445                           postdec2	equ	0xFDD
  8446                           fsr2h	equ	0xFDA
  8447                           fsr2l	equ	0xFD9
  8448                           status	equ	0xFD8
  8449                           
  8450 ;; *************** function _SPISlaveInit *****************
  8451 ;; Defined at:
  8452 ;;		line 734 in file "SlaveComm.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8466 ;;      Params:         0       0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_communications
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text60
  8481  001DCE                     __ptext60:
  8482                           	opt stack 0
  8483  001DCE                     _SPISlaveInit:
  8484                           	opt stack 27
  8485                           
  8486                           ;SlaveComm.c: 737: TRISAbits.TRISA0 = 0;
  8487                           
  8488                           ;incstack = 0
  8489  001DCE  9092               	bcf	3986,0,c	;volatile
  8490                           
  8491                           ;SlaveComm.c: 738: TRISAbits.TRISA1 = 1;
  8492  001DD0  8292               	bsf	3986,1,c	;volatile
  8493                           
  8494                           ;SlaveComm.c: 740: TRISCbits.TRISC3 = 0;
  8495  001DD2  9694               	bcf	3988,3,c	;volatile
  8496                           
  8497                           ;SlaveComm.c: 741: TRISCbits.TRISC5 = 0;
  8498  001DD4  9A94               	bcf	3988,5,c	;volatile
  8499                           
  8500                           ;SlaveComm.c: 742: TRISCbits.TRISC6 = 0;
  8501  001DD6  9C94               	bcf	3988,6,c	;volatile
  8502                           
  8503                           ;SlaveComm.c: 743: TRISCbits.TRISC7 = 0;
  8504  001DD8  9E94               	bcf	3988,7,c	;volatile
  8505                           
  8506                           ;SlaveComm.c: 744: ANSELAbits.ANSA1 = 0b0;
  8507  001DDA  010F               	movlb	15	; () banked
  8508  001DDC  9338               	bcf	56,1,b	;volatile
  8509                           
  8510                           ;SlaveComm.c: 746: LATCbits.LATC6 = 1;
  8511  001DDE  8C8B               	bsf	3979,6,c	;volatile
  8512                           
  8513                           ;SlaveComm.c: 747: LATCbits.LATC3 = 1;
  8514  001DE0  868B               	bsf	3979,3,c	;volatile
  8515                           
  8516                           ;SlaveComm.c: 748: LATCbits.LATC5 = 1;
  8517  001DE2  8A8B               	bsf	3979,5,c	;volatile
  8518                           
  8519                           ;SlaveComm.c: 749: LATCbits.LATC7 = 1;
  8520  001DE4  8E8B               	bsf	3979,7,c	;volatile
  8521                           
  8522                           ;SlaveComm.c: 752: SSP2CON1bits.SSPEN = 0;
  8523  001DE6  9A6C               	bcf	3948,5,c	;volatile
  8524                           
  8525                           ;SlaveComm.c: 754: ANSELBbits.ANSB0 = 0b0;
  8526  001DE8  9139               	bcf	57,0,b	;volatile
  8527                           
  8528                           ;SlaveComm.c: 755: ANSELBbits.ANSB1 = 0b0;
  8529  001DEA  9339               	bcf	57,1,b	;volatile
  8530                           
  8531                           ;SlaveComm.c: 756: ANSELBbits.ANSB2 = 0b0;
  8532  001DEC  9539               	bcf	57,2,b	;volatile
  8533                           
  8534                           ;SlaveComm.c: 757: ANSELBbits.ANSB3 = 0b0;
  8535  001DEE  9739               	bcf	57,3,b	;volatile
  8536                           
  8537                           ;SlaveComm.c: 759: TRISBbits.RB0 = 0b1;
  8538  001DF0  8093               	bsf	3987,0,c	;volatile
  8539                           
  8540                           ;SlaveComm.c: 760: TRISBbits.RB1 = 0b1;
  8541  001DF2  8293               	bsf	3987,1,c	;volatile
  8542                           
  8543                           ;SlaveComm.c: 761: TRISBbits.RB2 = 0b1;
  8544  001DF4  8493               	bsf	3987,2,c	;volatile
  8545                           
  8546                           ;SlaveComm.c: 762: TRISBbits.RB3 = 0b0;
  8547  001DF6  9693               	bcf	3987,3,c	;volatile
  8548                           
  8549                           ;SlaveComm.c: 764: SSP2STATbits.SMP = 0;
  8550  001DF8  9E6D               	bcf	3949,7,c	;volatile
  8551                           
  8552                           ;SlaveComm.c: 765: SSP2STATbits.CKE = 1;
  8553  001DFA  8C6D               	bsf	3949,6,c	;volatile
  8554                           
  8555                           ;SlaveComm.c: 767: SSP2CON1bits.WCOL = 0;
  8556  001DFC  9E6C               	bcf	3948,7,c	;volatile
  8557                           
  8558                           ;SlaveComm.c: 768: SSP2CON1bits.SSPOV = 0;
  8559  001DFE  9C6C               	bcf	3948,6,c	;volatile
  8560                           
  8561                           ;SlaveComm.c: 769: SSP2CON1bits.SSPEN = 0;
  8562  001E00  9A6C               	bcf	3948,5,c	;volatile
  8563                           
  8564                           ;SlaveComm.c: 770: SSP2CON1bits.CKP = 1;
  8565  001E02  886C               	bsf	3948,4,c	;volatile
  8566                           
  8567                           ; BSR set to: 15
  8568                           ;SlaveComm.c: 771: SSP2CON1bits.SSPM = 0b0100;
  8569  001E04  506C               	movf	3948,w,c	;volatile
  8570  001E06  0BF0               	andlw	-16
  8571  001E08  0904               	iorlw	4
  8572  001E0A  6E6C               	movwf	3948,c	;volatile
  8573                           
  8574                           ;SlaveComm.c: 774: SSP2CON3 = 0x00;
  8575  001E0C  0E00               	movlw	0
  8576  001E0E  6E69               	movwf	3945,c	;volatile
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;SlaveComm.c: 775: SSP2CON3bits.BOEN = 0b0;
  8580  001E10  9869               	bcf	3945,4,c	;volatile
  8581                           
  8582                           ; BSR set to: 15
  8583                           ;SlaveComm.c: 777: SSP2CON1bits.SSPEN = 1;
  8584  001E12  8A6C               	bsf	3948,5,c	;volatile
  8585  001E14  0012               	return	
  8586  001E16                     __end_of_SPISlaveInit:
  8587                           	opt stack 0
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           intcon2	equ	0xFF1
  8596                           intcon3	equ	0xFF0
  8597                           postinc0	equ	0xFEE
  8598                           wreg	equ	0xFE8
  8599                           indf1	equ	0xFE7
  8600                           postinc1	equ	0xFE6
  8601                           fsr1h	equ	0xFE2
  8602                           fsr1l	equ	0xFE1
  8603                           indf2	equ	0xFDF
  8604                           postinc2	equ	0xFDE
  8605                           postdec2	equ	0xFDD
  8606                           fsr2h	equ	0xFDA
  8607                           fsr2l	equ	0xFD9
  8608                           status	equ	0xFD8
  8609                           
  8610 ;; *************** function _Timer0_ISR *****************
  8611 ;; Defined at:
  8612 ;;		line 80 in file "Timer.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8626 ;;      Params:         0       0       0       0       0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0
  8628 ;;      Temps:         18       0       0       0       0       0       0
  8629 ;;      Totals:        18       0       0       0       0       0       0
  8630 ;;Total ram usage:       18 bytes
  8631 ;; Hardware stack levels used:    1
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		Interrupt level 2
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	intcode
  8640  000008                     __pintcode:
  8641                           	opt stack 0
  8642  000008                     _Timer0_ISR:
  8643                           	opt stack 20
  8644                           
  8645                           ; BSR set to: 15
  8646                           ;incstack = 0
  8647  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8648  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  8649  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  8650  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  8651  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  8652  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  8653  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  8654  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  8655  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  8656  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  8657  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  8658  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  8659  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  8660  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  8661  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  8662  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  8663  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  8664  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  8665  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  8666                           
  8667                           ;Timer.c: 82: INTCONbits.TMR0IF = 0;
  8668  000052  94F2               	bcf	intcon,2,c	;volatile
  8669                           
  8670                           ;Timer.c: 84: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  8671  000054  0EFC               	movlw	252
  8672  000056  6ED7               	movwf	4055,c	;volatile
  8673                           
  8674                           ;Timer.c: 85: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  8675  000058  0E18               	movlw	24
  8676  00005A  6ED6               	movwf	4054,c	;volatile
  8677                           
  8678                           ;Timer.c: 87: timerCount_ms[0]++;
  8679  00005C  0E01               	movlw	1
  8680  00005E  0100               	movlb	0	; () banked
  8681  000060  278D               	addwf	_timerCount_ms& (0+255),f,b	;volatile
  8682  000062  0E00               	movlw	0
  8683  000064  238E               	addwfc	(_timerCount_ms+1)& (0+255),f,b	;volatile
  8684  000066  238F               	addwfc	(_timerCount_ms+2)& (0+255),f,b	;volatile
  8685  000068  2390               	addwfc	(_timerCount_ms+3)& (0+255),f,b	;volatile
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;Timer.c: 88: timerCount_ms[1]++;
  8689  00006A  0E01               	movlw	1
  8690  00006C  2791               	addwf	(_timerCount_ms+4)& (0+255),f,b	;volatile
  8691  00006E  0E00               	movlw	0
  8692  000070  2392               	addwfc	(_timerCount_ms+5)& (0+255),f,b	;volatile
  8693  000072  2393               	addwfc	(_timerCount_ms+6)& (0+255),f,b	;volatile
  8694  000074  2394               	addwfc	(_timerCount_ms+7)& (0+255),f,b	;volatile
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;Timer.c: 89: timerCount_ms[2]++;
  8698  000076  0E01               	movlw	1
  8699  000078  2795               	addwf	(_timerCount_ms+8)& (0+255),f,b	;volatile
  8700  00007A  0E00               	movlw	0
  8701  00007C  2396               	addwfc	(_timerCount_ms+9)& (0+255),f,b	;volatile
  8702  00007E  2397               	addwfc	(_timerCount_ms+10)& (0+255),f,b	;volatile
  8703  000080  2398               	addwfc	(_timerCount_ms+11)& (0+255),f,b	;volatile
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;Timer.c: 90: timerCount_ms[3]++;
  8707  000082  0E01               	movlw	1
  8708  000084  2799               	addwf	(_timerCount_ms+12)& (0+255),f,b	;volatile
  8709  000086  0E00               	movlw	0
  8710  000088  239A               	addwfc	(_timerCount_ms+13)& (0+255),f,b	;volatile
  8711  00008A  239B               	addwfc	(_timerCount_ms+14)& (0+255),f,b	;volatile
  8712  00008C  239C               	addwfc	(_timerCount_ms+15)& (0+255),f,b	;volatile
  8713                           
  8714                           ; BSR set to: 0
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;Timer.c: 92: return;
  8718  00008E  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  8719  000092  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  8720  000096  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  8721  00009A  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  8722  00009E  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  8723  0000A2  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  8724  0000A6  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  8725  0000AA  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  8726  0000AE  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  8727  0000B2  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  8728  0000B6  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  8729  0000BA  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  8730  0000BE  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  8731  0000C2  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  8732  0000C6  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  8733  0000CA  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  8734  0000CE  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  8735  0000D2  C001  FFFA         	movff	??_Timer0_ISR,pclath
  8736  0000D6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8737  0000D8  0011               	retfie		f
  8738  0000DA                     __end_of_Timer0_ISR:
  8739                           	opt stack 0
  8740                           pclatu	equ	0xFFB
  8741                           pclath	equ	0xFFA
  8742                           tblptru	equ	0xFF8
  8743                           tblptrh	equ	0xFF7
  8744                           tblptrl	equ	0xFF6
  8745                           tablat	equ	0xFF5
  8746                           prodh	equ	0xFF4
  8747                           prodl	equ	0xFF3
  8748                           intcon	equ	0xFF2
  8749                           intcon2	equ	0xFF1
  8750                           intcon3	equ	0xFF0
  8751                           postinc0	equ	0xFEE
  8752                           fsr0h	equ	0xFEA
  8753                           fsr0l	equ	0xFE9
  8754                           wreg	equ	0xFE8
  8755                           indf1	equ	0xFE7
  8756                           postinc1	equ	0xFE6
  8757                           fsr1h	equ	0xFE2
  8758                           fsr1l	equ	0xFE1
  8759                           indf2	equ	0xFDF
  8760                           postinc2	equ	0xFDE
  8761                           postdec2	equ	0xFDD
  8762                           fsr2h	equ	0xFDA
  8763                           fsr2l	equ	0xFD9
  8764                           status	equ	0xFD8
  8765                           pclatu	equ	0xFFB
  8766                           pclath	equ	0xFFA
  8767                           tblptru	equ	0xFF8
  8768                           tblptrh	equ	0xFF7
  8769                           tblptrl	equ	0xFF6
  8770                           tablat	equ	0xFF5
  8771                           prodh	equ	0xFF4
  8772                           prodl	equ	0xFF3
  8773                           intcon	equ	0xFF2
  8774                           intcon2	equ	0xFF1
  8775                           intcon3	equ	0xFF0
  8776                           postinc0	equ	0xFEE
  8777                           fsr0h	equ	0xFEA
  8778                           fsr0l	equ	0xFE9
  8779                           wreg	equ	0xFE8
  8780                           indf1	equ	0xFE7
  8781                           postinc1	equ	0xFE6
  8782                           fsr1h	equ	0xFE2
  8783                           fsr1l	equ	0xFE1
  8784                           indf2	equ	0xFDF
  8785                           postinc2	equ	0xFDE
  8786                           postdec2	equ	0xFDD
  8787                           fsr2h	equ	0xFDA
  8788                           fsr2l	equ	0xFD9
  8789                           status	equ	0xFD8
  8790                           
  8791                           	psect	rparam
  8792  0000                     pclatu	equ	0xFFB
  8793                           pclath	equ	0xFFA
  8794                           tblptru	equ	0xFF8
  8795                           tblptrh	equ	0xFF7
  8796                           tblptrl	equ	0xFF6
  8797                           tablat	equ	0xFF5
  8798                           prodh	equ	0xFF4
  8799                           prodl	equ	0xFF3
  8800                           intcon	equ	0xFF2
  8801                           intcon2	equ	0xFF1
  8802                           intcon3	equ	0xFF0
  8803                           postinc0	equ	0xFEE
  8804                           fsr0h	equ	0xFEA
  8805                           fsr0l	equ	0xFE9
  8806                           wreg	equ	0xFE8
  8807                           indf1	equ	0xFE7
  8808                           postinc1	equ	0xFE6
  8809                           fsr1h	equ	0xFE2
  8810                           fsr1l	equ	0xFE1
  8811                           indf2	equ	0xFDF
  8812                           postinc2	equ	0xFDE
  8813                           postdec2	equ	0xFDD
  8814                           fsr2h	equ	0xFDA
  8815                           fsr2l	equ	0xFD9
  8816                           status	equ	0xFD8
  8817                           
  8818                           	psect	temp
  8819  00004D                     btemp:
  8820                           	opt stack 0
  8821  00004D                     	ds	1
  8822  0000                     int$flags	set	btemp
  8823  0000                     wtemp6	set	btemp+1
  8824                           pclatu	equ	0xFFB
  8825                           pclath	equ	0xFFA
  8826                           tblptru	equ	0xFF8
  8827                           tblptrh	equ	0xFF7
  8828                           tblptrl	equ	0xFF6
  8829                           tablat	equ	0xFF5
  8830                           prodh	equ	0xFF4
  8831                           prodl	equ	0xFF3
  8832                           intcon	equ	0xFF2
  8833                           intcon2	equ	0xFF1
  8834                           intcon3	equ	0xFF0
  8835                           postinc0	equ	0xFEE
  8836                           fsr0h	equ	0xFEA
  8837                           fsr0l	equ	0xFE9
  8838                           wreg	equ	0xFE8
  8839                           indf1	equ	0xFE7
  8840                           postinc1	equ	0xFE6
  8841                           fsr1h	equ	0xFE2
  8842                           fsr1l	equ	0xFE1
  8843                           indf2	equ	0xFDF
  8844                           postinc2	equ	0xFDE
  8845                           postdec2	equ	0xFDD
  8846                           fsr2h	equ	0xFDA
  8847                           fsr2l	equ	0xFD9
  8848                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      76
    BANK0           160     45      69
    BANK1           256    106     198
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 105
		 -> process_data@parameters(BANK1[105]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> xSumCheck@xSumChars(COMRAM[7]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 105
		 -> process_data@parameters(BANK1[105]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 105
		 -> process_data@parameters(BANK1[105]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_29(CODE[4]), STR_28(CODE[10]), STR_27(CODE[4]), STR_26(CODE[12]), 
		 -> STR_25(CODE[5]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[4]), 
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[4]), STR_18(CODE[7]), 
		 -> STR_17(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    xsum_builder@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), STR_23(CODE[5]), STR_20(CODE[6]), STR_18(CODE[7]), 
		 -> STR_16(CODE[6]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_17(CODE[4]), 
		 -> STR_15(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    xSumCheck@check_buffer	PTR unsigned char  size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    process_data_parameters@parameters	PTR unsigned char [15] size(2) Largest target is 105
		 -> process_data@parameters(BANK1[105]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [15] size(2) Largest target is 105
		 -> process_data@parameters(BANK1[105]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 


Critical Paths under _main in COMRAM

    _mcpUpdatePower->_powerReduction
    _powerReduction->___lldiv
    _powerCalculateWatts->___lldiv
    _ledGoToggle->_ledToggle
    _mcpInit->_mcpInitF
    _mcpInitF->_delayMS10
    _ledTestToggle->_ledToggle
    _ledToggle->_ledSet
    _ledSetAllOn->_ledSetAll
    _ledRun->_ledRunDown
    _ledRun->_ledRunUp
    _ledRunUp->_ledSetAll
    _ledRunDown->_ledSetAll
    _ledSetAllOff->_ledSetAll
    _ledSetAll->_ledSet
    _communications->_resetCommunications
    _xSumCheck->_atoi
    _atoi->___wmul
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_xsum_builder
    _com_command_setEnergyUsed->_command_builder3
    _ultoa->___lldiv
    _command_builder3->_xsum_builder
    _xsum_builder->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _commRun->_communications
    _commInit->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _command_builder1->_xsum_builder
    _command_builder3->_xsum_builder

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  296443
                                             38 BANK0      7     7      0
                            ___llmod
                           _commInit
                            _commRun
                             _initIO
                _initInterruptsClear
                            _initOSC
                            _ledInit
                             _ledRun
                       _ledSetAllOff
                        _ledSetAllOn
                      _ledTestToggle
                            _mcpInit
                     _mcpUpdatePower
                      _timerGetCount
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcpUpdatePower                                       8     8      0    5516
                                             39 COMRAM     8     8      0
                        _ledGoToggle
                _powerCalculateWatts
                     _powerReduction
                      _timerGetCount
                    _timerResetCount
 ---------------------------------------------------------------------------------
 (2) _timerResetCount                                      4     2      2     326
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _powerReduction                                       8     4      4    1715
                                             31 COMRAM     8     4      4
                            ___lldiv
                      _timerGetCount
 ---------------------------------------------------------------------------------
 (1) _timerGetCount                                        6     2      4     326
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _powerCalculateWatts                                  7     2      5    1631
                                             31 COMRAM     7     2      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _ledGoToggle                                          2     0      2    1419
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (1) _mcpInit                                              0     0      0    1612
                          _delayMS10
                           _mcpInitF
 ---------------------------------------------------------------------------------
 (2) _mcpInitF                                             1     1      0     806
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (1) _ledTestToggle                                        2     0      2    1343
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (3) _ledToggle                                            8     6      2    1245
                                             24 COMRAM     8     6      2
                             _ledSet
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOn                                          0     0      0    3802
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (1) _ledRun                                               2     0      2   10918
                                             34 COMRAM     2     0      2
                         _ledRunDown
                           _ledRunUp
 ---------------------------------------------------------------------------------
 (2) _ledRunUp                                             4     2      2    5399
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledRunDown                                           4     2      2    5399
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     806
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ledInit                                              0     0      0    3802
                       _ledSetAllOff
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOff                                         0     0      0    3802
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledSetAll                                            6     0      6    3802
                                             24 COMRAM     6     0      6
                             _ledSet
 ---------------------------------------------------------------------------------
 (4) _ledSet                                               6     2      4    1000
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _commRun                                              0     0      0  132314
                     _communications
 ---------------------------------------------------------------------------------
 (1) _commInit                                             0     0      0  132314
                     _communications
 ---------------------------------------------------------------------------------
 (2) _communications                                       2     2      0  132314
                                             36 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
                          _xSumCheck
 ---------------------------------------------------------------------------------
 (3) _xSumCheck                                           19    17      2    1888
                                             31 COMRAM    19    17      2
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    1115
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (4) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _resetCommunications                                  4     2      2   75218
                                             58 COMRAM     2     0      2
                                             28 BANK0      2     2      0
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (4) _com_command_setVersion                               2     0      2   22931
                                             56 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (4) _com_command_setPower                                14    12      2   25931
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _receive_data                                         4     2      2     443
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (4) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _process_data                                       110   106      4   54430
                                             32 BANK0      4     0      4
                                              0 BANK1    106   106      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (4) _process_data_parameters                              5     1      4   52501
                                             58 COMRAM     1     1      0
                                             28 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (5) _strmatch                                             7     3      4    3117
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (6) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _send_end_of_transmission                             2     0      2   21473
                                             52 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (6) _command_builder1                                     6     2      4   20992
                                             46 COMRAM     6     2      4
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (4) _com_command_setEnergyUsed                           14    12      2   26021
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    2920
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1141
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _command_builder3                                    10     2      8   22810
                                             46 COMRAM    10     2      8
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (6) _xsum_builder                                        20    16      4   11888
                                             42 COMRAM     4     0      4
                                              0 BANK0     16    16      0
           _command_builder_add_char
         _command_builder_add_string
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2226
                                             34 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1723
                                             25 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     412
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     601
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _command_builder_add_string                          10     6      4    5455
                                             22 COMRAM    10     6      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (8) _command_builder_add_char                             4     1      3    3277
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _process_data_parameterize                           11     7      4    1543
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     592
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Timer0_ISR                                         18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___llmod
   _commInit
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
       _xSumCheck
         _atoi
           ___wmul
           _isdigit
   _commRun
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
       _xSumCheck
         _atoi
           ___wmul
           _isdigit
   _initIO
   _initInterruptsClear
   _initOSC
   _ledInit
     _ledSetAllOff
       _ledSetAll
         _ledSet
   _ledRun
     _ledRunDown
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
     _ledRunUp
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
   _ledSetAllOff
     _ledSetAll
       _ledSet
   _ledSetAllOn
     _ledSetAll
       _ledSet
   _ledTestToggle
     _ledToggle
       _ledSet
   _mcpInit
     _delayMS10
     _mcpInitF
       _delayMS10
   _mcpUpdatePower
     _ledGoToggle
       _ledToggle
         _ledSet
     _powerCalculateWatts
       ___lldiv
     _powerReduction
       ___lldiv
       _timerGetCount
     _timerGetCount
     _timerResetCount
   _timerGetCount
   _timerInit

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     6A      C6       6       77.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2D      45       4       43.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157       9        0.0%
DATA                 0      0     157      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Dec 03 09:58:26 2021

                                       _SPISlaveInit 1DCE                                                   l22 1CC8  
                                                 l23 1CA4                                                   l25 1CB0  
                                    ??_timerGetCount 0017                                                   l26 1CBC  
                                                 l90 1932                                                   l85 18FE  
                                                 l86 18DC                                                   l87 1922  
                                                 l88 18EA                                                   l89 18F0  
                           __size_of_timerResetCount 002A                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                       ??_ledSetAllOff 001F  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l210 14A2                                                  l212 1458  
                                                l230 15E4                                                  l206 1446  
                                                l320 16C2                                                  l240 128C  
                                                l208 148E                                                  l241 129E  
                                                l225 15EE                                                  l217 14BC  
                                                l250 0942                                                  l226 15BC  
                                                l315 1B46                                                  l219 14CE  
                                                l252 0904                                                  l236 11EE  
                                                l228 15CA                                                  l229 15D8  
                                                l325 1770                                                  l254 0934  
                                                l238 1232                                                  l255 0874  
                                                l319 1708                                                  l335 0BC6  
                                                l351 2044                                                  l248 0842  
                                                l336 0B5C                                                  l352 2048  
                                                l328 17D0                                                  l257 0886  
                                                l345 0C34                                                  l337 0B90  
                                                l281 07EE                                                  l265 0678  
                                                l601 1F58                                                  l258 08DA  
                                                l602 1F46                                                  l347 0C6C  
                                                l339 0BC2                                                  l283 081A  
                                                l275 0764                                                  l267 0702  
                                                l356 20B0                                                  l292 0D26  
                                                l540 0A46                                                  l277 0792  
                                                l293 0CF2                                                  l542 0A4A  
                                                l279 07C0                                                  l287 0CAC  
                                                l551 0AEC                                                  l616 1BB8  
                                                l288 0C90                                                  l560 197C  
                                                l552 0AD0                                                  l617 1BCC  
                                                l801 17E8                                                  l481 104A  
                                                l810 184E                                                  l802 17F8  
                                                l554 0B06                                                  l555 0B20  
                                                l547 0B02                                                  l804 1816  
                                                l476 0F98                                                  l805 180E  
                                                l478 0FDC                                                  l567 1666  
                                                l808 1836                                                  l809 1840  
                                                l771 1098                                                  l774 10E4  
                                                l791 0F50                                                  l775 10AA  
                                                l768 1058                                                  l785 0EAE  
                                                l777 1116                                                  l769 1054  
                                                l963 210A                                                  l788 0F0C  
                                                l789 0EB8                                                  l973 14DE  
                                                l975 1518                                                  l976 1556  
                                                l969 1E3A                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                      ?_powerReduction 0020  
                                                wreg 000FE8                              __size_of_mcpUpdatePower 0184  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 007C  
                                               l1003 1886                                                 l1004 187A  
                                               l1013 1A46                                                 l1014 1A3A  
                                               l1007 18BA                                                 l1008 18C8  
                                               l1017 1A6E                                                 l1018 1A7C  
                                               l1070 1C6E                                                 l1071 1C66  
                                               l1080 1E6E                                                 l1056 0D88  
                                               l1081 1E66                                                 l1074 1C8E  
                                               l1058 0DE0                                                 l1075 1C98  
                                               l1059 0E4A                                                 l1084 1E86  
                                               l1085 1E90                                                 l4006 0942  
                                               l4150 0D4A                                                 l4134 0CE4  
                                               l4082 10E0                                                 l4218 1652  
                                               l4360 0FCC                                                 l4288 0AD0  
                                               STR_1 064A                                                 STR_2 064E  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 062F  
                                               STR_6 0634                                                 STR_7 0624  
                                               STR_8 0617                                                 STR_9 061E  
                                               u2000 18FA                                                 u2001 18F4  
                                               u3200 0D4A                                                 u2240 181A  
                                               u3210 0D70                                                 u3220 0D72  
                                               u3300 1652                                                 u2510 1E72  
                                               u3400 0FCC                                                 u1705 1CC4  
                                               u1706 1CC6                                                 u2620 188A  
                                               u3180 0CE4                                                 _IPR1 000F9F  
                                               u2710 0BFE                                                 u3350 0A52  
                                               _IPR2 000FA2                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 u2480 1C72  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               u2570 16F6                                                 u2650 1A4A  
                                               _PIE4 000F7A                                                 u3507 1584  
                                               _PIE5 000F7D                                                 u2580 1734  
                                               u1685 1CAC                                                 u3437 0FA4  
                                               u2910 0840                                                 u2830 1FC8  
                                               u1686 1CAE                                                 u1695 1CB8  
                                               u3447 0FBA                                                 u2840 1FCA  
                                               u1696 1CBA                                                 u2577 16EC  
                                               u3457 19D0                                                 u2587 172A  
                                               u3467 19E2                                                 u3477 19F8  
                                               u3487 1A0E                                                 u3497 1F4C  
                                               u1988 18E2                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                        main@oneShot 00A1                                                 _atoi 1052  
                                               _atol 0E6E                                                 _main 0F62  
                                               _itoa 1E16                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                               _utoa 14D6                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00DA  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0085  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                    mcpUpdatePower@timerHFoutLast_ms 016A                                 __end_of_xsum_builder 1C50  
                                     _communications 141E                                      ??_ledTestToggle 0023  
                                              ?_atoi 0019                                                ?_atol 001F  
                                              ?_main 0001                                                ?_itoa 0023  
                                    __end_of___awdiv 1858                                                STR_10 0639  
                                              STR_11 060D                                                STR_12 064A  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_15 064E                                                STR_16 0624  
                                              STR_24 0642                                                STR_17 064E  
                                              STR_18 0617                                                STR_27 064E  
                                              STR_28 060D                                                STR_29 0646  
                                    __end_of___lldiv 18DA                                                ?_utoa 001A  
                                    ___awdiv@divisor 0015                                      __end_of___llmod 1A8E  
                                     __CFG_DEBUG$OFF 000000                                      __end_of___lwdiv 1CA2  
                                    __end_of___lwmod 1E9A                                    ?_command_builder1 002F  
                                  ?_command_builder3 002F                                      ___awdiv@counter 0017  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 1CEE                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0033  
                                 ??_command_builder3 0037                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                    __end_of_ledInit 2186                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                                      __end_of_commRun 218E  
                 process_data_parameters@send_buffer 007E                            powerReduction@countReduce 0041  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                      __end_of_mcpInit 2024  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 2144  
                                    __end_of_isdigit 2112                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atoi@a 001E                                                atol@a 0028  
                                              atol@c 002C                                                atoi@s 0019  
                                              atol@s 001F                                                _ultoa 0D78  
                                              pclath 000FFA                                   main@timerHeartbeat 0087  
                                              tablat 000FF5                                                utoa@c 0022  
                                              utoa@v 0020                                                status 000FD8  
                                              wtemp6 004E                                      __end_of_strcmp2 0C76  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 0039  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001F  
                                    __initialization 1ED8                                         __end_of_atoi 1120  
                                       __end_of_atol 0F62                                         __end_of_main 1052  
                                       __end_of_itoa 1E58                               __end_of_communications 14D6  
                                       __end_of_utoa 157A                               _com_command_setVersion 204C  
                __size_of_command_builder_add_string 0094                                     _SPI_receive_data 2024  
                         powerReduction@timerLast_ms 0020                         command_builder_add_char@data 0015  
                                             ??_atoi 001B                                               ??_atol 0023  
                                             ??_main 0086                                  ledRunUp@ledRunDelay 001F  
                                             ??_itoa 0029                                        _SPI_send_data 2098  
                                             ??_utoa 0020                                        __activetblptr 000002  
                            _process_data_parameters 0654                                    ??_timerResetCount 0015  
                               __size_of_ledGoToggle 0002                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                     ___awdiv@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                 __size_of_ledSetAllOn 001E  
                               __end_of_ledSetAllOff 20F4                                ??_initInterruptsClear 0013  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                   __end_of_commInit 2196                                     __end_of_ledRunUp 1360  
                       powerCalculateWatts@calcWatts 0025                                     __end_of_mcpInitF 1A28  
                                             ___lmul 1BA8                                               ___wmul 2072  
                                          ??___awdiv 0017                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 001B  
                                          ??___llmod 001B                                            ??___lwdiv 0017  
                                             _ledSet 1CA2                                            ??___lwmod 0017  
                                             _ledRun 2112                                               _initIO 215A  
                                             clear_0 1EDE                                               clear_1 1EEA  
                                             clear_2 1EF6                                     ___awdiv@quotient 0019  
                       powerReduction@timerReduce_ms 0024                                xSumCheck@check_buffer 0020  
                                     ?_SPI_send_data 0001                                            ??_ledInit 001F  
                                          ??_commRun 003D                           ?_com_command_setEnergyUsed 0039  
                                          ??_mcpInit 0019                                            ??_initOSC 0013  
                          _process_data_parameterize 081E                                               itoa@cp 0029  
                                          ??_isdigit 0013                                       _mcpUpdatePower 09C6  
                                  ledToggle@getValue 001F                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0070                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1FD0  
                                   xsum_builder@xsum 002D                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 1EFC  
                                  ledToggle@setValue 001D                      com_command_setPower@send_buffer 0039  
                            timerGetCount@timerIndex 0013                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                    ledRunUp@delay10ms 0021  
                              __size_of_xsum_builder 0052                                       __pcstackCOMRAM 0001  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                   ??_powerReduction 0024                                        __end_of_ultoa 0E6E  
                          ??_process_data_parameters 003B                         communications@receive_buffer 019C  
                             __end_of_mcpUpdatePower 0B4A                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 1744                           _command_builder_add_string 16B0  
                                 __size_of_ledSetAll 003E                                   __size_of_ledToggle 0076  
                                    ledToggle@ledNum 0019                                              ??_ultoa 0028  
                                         __pbssBANK0 008D                                           __pbssBANK1 016A  
                                     ??_receive_data 0018                                         _xsum_builder 1BFE  
                                    __CFG_PLLCFG$OFF 000000                                         strcmp2@match 001A  
                                        ?_Timer0_ISR 0001                                   __size_of_xSumCheck 0102  
                                 __CFG_CCP2MX$PORTC1 000000                                   xSumCheck@xSumChars 0023  
                       __size_of_powerCalculateWatts 006C                                              ?___lmul 0013  
                               command_builder1@xsum 0033                                              ?___wmul 0013  
                               command_builder3@xsum 0037                                   __CFG_CCP3MX$PORTB5 000000  
                                            ?_ledSet 0013                                      ??_SPI_send_data 0013  
                                            ?_ledRun 0023                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 003B  
         communications@end_of_transmission_received 00A4                                 xSumCheck@xSumMatches 002C  
                                     ___lmul@product 001B                                __end_of_timerGetCount 1F3C  
                                    ?_mcpUpdatePower 0001                          __end_of_resetCommunications 1616  
                                 __size_of_timerInit 0064                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                                           _ledRunDown 1360  
                       __end_of_com_command_setPower 1D84                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 2144                                              _SSP2BUF 000F6F  
                              __size_of_ledSetAllOff 001E                                            ?_commInit 0001  
                                          ?_ledRunUp 001F                             _command_builder_add_char 1AF2  
                                          ?_mcpInitF 0001                                    __end_of_delayMS10 1F6E  
                    __end_of_process_data_parameters 081E                             __end_of_SPI_receive_data 204C  
                          __size_of_command_builder1 005A                            __size_of_command_builder3 00C2  
                                ledRunDown@delay10ms 0021      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0039                                              __Lparam 0000  
                                  __end_of_ledSetAll 1ED8                                    __end_of_ledToggle 1950  
                                    _timerResetCount 1FD0                                              ___awdiv 17D4  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 1858                                      __size_of___wmul 0026  
                                            ___llmod 1A28                            xSumCheck@receiveBufferPos 0031  
                                            ___lwdiv 1C50                                              ___lwmod 1E58  
                                       __psmallconst 0600                                      __size_of_ledSet 004C  
                                    __size_of_ledRun 001A                                 SPI_receive_data@data 0013  
                                    __size_of_initIO 0012                                              __pcinit 1ED8  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 0F62                                              __ptext1 1A8E  
                                            __ptext2 09C6                                              __ptext3 1FD0  
                                            __ptext4 1616                                              __ptext5 1F0A  
                                            __ptext6 1950                                              _ledInit 217A  
                                            __ptext7 2196                                              __ptext8 1FFA  
                                            __ptext9 19BC                                              _commRun 2186  
                                          _T0CONbits 000FD5                                         _ledSetAllOff 20D6  
                                            _mcpInit 1FFA                                              _initOSC 212C  
                              __end_of_ledTestToggle 217A                                              _isdigit 20F4  
                                  __end_of_xSumCheck 0D78                                  __size_of_Timer0_ISR 00D2  
                                         ??_commInit 003D                                              main@inx 008B  
                                            _strcmp2 0B4A                                           ??_ledRunUp 0021  
                               end_of_initialization 1EFC                                           ??_mcpInitF 0018  
                 __size_of_process_data_parameterize 01A8                                    __end_of_send_data 17D4  
                                            itoa@buf 0023                                              itoa@val 0025  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 2072  
                                   ??_communications 003D                                    __end_of_timerInit 1AF2  
                                    ___lldiv@divisor 0017                                      ___lldiv@counter 001F  
        process_data_parameterize@parameter_position 0023                                              postdec2 000FDD  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                              utoa@buf 001A  
                                            utoa@val 001C                                receive_data@my_status 004B  
                               __end_of_receive_data 12A2                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                                        ??_ledGoToggle 0023  
                    communications@last_state_active 00A2                          ??_com_command_setEnergyUsed 003B  
                                      ?_process_data 0080                                   ledSetAll@led1Value 0019  
                                 ledSetAll@led2Value 001B                                   ledSetAll@led3Value 001D  
                                        ?_ledRunDown 001F                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                                      ??_ledSetAllOn 001F                           process_data@receive_buffer 0080  
                        __end_of_initInterruptsClear 1D3A                    __end_of_process_data_parameterize 09C6  
                            __end_of_timerResetCount 1FFA                                 _com_command_setPower 1D3A  
                communications@receive_current_state 00A3                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1BFE                                       __end_of___wmul 2098  
                                     __end_of_ledSet 1CEE                                       __end_of_ledRun 212C  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 216C  
                                     ??_process_data 003C                          ?_command_builder_add_string 0017  
                                start_initialization 1ED8                                  _powerCalculateWatts 1950  
                                __end_of_ledGoToggle 2198                         resetCommunications@commState 0047  
                                   _command_builder1 1B4E                                     _command_builder3 1120  
                          _com_command_setEnergyUsed 1D84                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0039  
                                __end_of_ledSetAllOn 20D6                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 0039  
                                __size_of_ledRunDown 00BE                                 ?_powerCalculateWatts 0020  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                   ??_mcpUpdatePower 0028                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0035                                             ??_ledSet 0017  
                                           ??_ledRun 0025                                             ??_initIO 0013  
                         ??_send_end_of_transmission 0037                           ??_command_builder_add_char 0016  
                                        __pbssCOMRAM 003D                                        __pcstackBANK0 0060  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00DA                                         _isdigit$2432 0014  
                                  __size_of_commInit 0008                                    __size_of_ledRunUp 00BE  
                                  __size_of_mcpInitF 006C                                       delayMS10@count 0013  
                                  ?_SPI_receive_data 0013                              xSumCheck@xSumAdderValue 002D  
                                          _delayMS10 1F3C                                     ?_timerResetCount 0013  
                      com_command_setEnergyUsed@temp 0070                             powerCalculateWatts@outHF 0024  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                                   ___lwdiv@dividend 0013                                ??_powerCalculateWatts 0025  
                              command_builder1@data1 0031                          command_builder1@send_buffer 002F  
                           ?_process_data_parameters 007C                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0031  
                              command_builder3@data2 0033                                command_builder3@data3 0035  
                                           ?___awdiv 0013                                xSumCheck@xSumCharsPos 002F  
                                           ?___lldiv 0013                                ledRunDown@ledRunDelay 001F  
                                           ?___llmod 0013                                             ?___lwdiv 0013  
                                           ?___lwmod 0013                                            _ledSetAll 1E9A  
                                          _ledToggle 18DA                           mcpUpdatePower@meterWattsHF 0045  
                              __end_of_SPI_send_data 20B8                           mcpUpdatePower@meterWattsLF 0043  
                                           ?_ledInit 0001                                             ?_commRun 0001  
                                           ?_mcpInit 0001                                             ?_initOSC 0001  
                                        __smallconst 0600                                          _ledGoToggle 2196  
                     resetCommunications@send_buffer 003B                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                              xsum_builder@send_buffer 002B  
                         mcpUpdatePower@oneShotHFout 004A                                    send_data@send_end 0019  
                            xSumCheck@xSumCharsValue 002A                           mcpUpdatePower@oneShotLFout 0049  
                            __size_of_powerReduction 009A                                     ___lwdiv@quotient 0018  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009C  
                                        _ledSetAllOn 20B8                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                                            _xSumCheck 0C76  
                process_data_parameterize@parameters 0019                                         _receive_data 11E2  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                               __size_of_timerGetCount 0032  
                                         ?_delayMS10 0013                                 __end_of_process_data 1FA0  
                                          _send_data 1744                               ??_com_command_setPower 003B  
                  process_data_parameters@parameters 007C                                  _meterEnergyUsedPart 016E  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                          _timerInit 1A8E                                             _SSP2CON3 000F69  
                                         ?_ledSetAll 0019                                           ?_ledToggle 0019  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                         ??_ledRunDown 0021  
                                  ledGoToggle@ledNum 0021                                    ledRun@ledRunDelay 0023  
                                  ___lmul@multiplier 0013                                 __end_of_SPISlaveInit 1E16  
                                         ?_xSumCheck 0020             process_data@end_of_transmission_received 0169  
                                         ?_send_data 0015                                             __Hrparam 0000  
                             __size_of_ledTestToggle 000E                          mcpUpdatePower@timerHFout_ms 002C  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                                 __end_of_ledRunDown 141E                          command_builder3@send_buffer 002F  
                                  __CFG_P2BMX$PORTB5 000000                                           ?_timerInit 0001  
                        mcpUpdatePower@timerLFout_ms 0028                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___awdiv 0084                     __end_of_send_end_of_transmission 215A  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 1B4E                             __end_of_command_builder1 1BA8  
                           __end_of_command_builder3 11E2                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                        _timerGetCount 1F0A  
                                   __size_of_ledInit 000C                                     __size_of_commRun 0008  
                                   __size_of_mcpInit 002A                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                      ___lwdiv@divisor 0015  
                                      _timerCount_ms 008D                                      ___lwdiv@counter 0017  
                                           __ptext10 216C                                             __ptext11 18DA  
                                           __ptext20 1E9A                                             __ptext12 20B8  
                                           __ptext21 1CA2                                             __ptext13 2112  
                                           __ptext30 1744                                             __ptext22 212C  
                                           __ptext14 12A2                                             __ptext31 2098  
                                           __ptext23 1CEE                                             __ptext15 1360  
                                           __ptext40 0B4A                                             __ptext32 157A  
                                           __ptext24 215A                                             __ptext16 1F3C  
                                           __ptext41 2144                                             __ptext33 204C  
                                           __ptext25 2186                                             __ptext17 17D4  
                                           __ptext50 14D6                                             __ptext42 1B4E  
                                           __ptext34 1D3A                                             __ptext26 218E  
                                           __ptext18 217A                                             __ptext51 1E58  
                                           __ptext43 1D84                                             __ptext35 11E2  
                                           __ptext27 141E                                             __ptext19 20D6  
                                           __ptext60 1DCE                                             __ptext52 1C50  
                                           __ptext44 0D78                                             __ptext36 2024  
                                           __ptext28 0C76                                             __ptext53 16B0  
                                           __ptext45 1A28                                             __ptext37 1F6E  
                                           __ptext29 1052                                             __ptext54 1AF2  
                                           __ptext46 1858                                             __ptext38 0654  
                                           __ptext55 0E6E                                             __ptext47 1120  
                                           __ptext39 1FA0                                             __ptext56 20F4  
                                           __ptext48 1BFE                                             __ptext57 1BA8  
                                           __ptext49 1E16                                             __ptext58 081E  
                                           __ptext59 2072                                             _commInit 218E  
                                           _ledRunUp 12A2                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                             _mcpInitF 19BC  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                      ?_xsum_builder 002B                                        __size_of_atoi 00CE  
                                      __size_of_atol 00F4                                        __size_of_main 00F0  
                                      strmatch@match 0024                                        __size_of_itoa 0042  
                        powerCalculateWatts@timer_ms 0020                                        __size_of_utoa 00A4  
                                ledTestToggle@ledNum 0021                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                             _meterEnergyUsed_global 003D                                             int$flags 004D  
                                           atoi@sign 001D                            timerResetCount@timerIndex 0013  
                                           atol@sign 0027                                          ??_ledSetAll 001F  
                                        ??_ledToggle 001B                    __end_of_com_command_setEnergyUsed 1DCE  
                            __size_of_communications 00B8                                             _strmatch 1FA0  
                                       _SSP2STATbits 000F6D                                       ?_timerGetCount 0013  
                            process_data@send_buffer 0082                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                        _ledTestToggle 216C  
                                     _powerReduction 1616                                             itoa@base 0027  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 003B                                       ??_xsum_builder 002F  
                              __size_of_process_data 0032                                             intlevel2 0000  
                                        ??_xSumCheck 0022                               process_data@parameters 0100  
                                   ___lwmod@dividend 0013                                     ___lldiv@dividend 0013  
                      communications@no_more_to_send 0084                                          ??_send_data 0017  
                                          strmatch@a 001E                                            strmatch@b 0020  
                                         _OSCCONbits 000FD3                    command_builder_add_string@xsumAdd 001D  
                                     ledSet@setValue 0015                                          ??_timerInit 0013  
                                _resetCommunications 157A                            __size_of_SPI_receive_data 0028  
                                           utoa@base 001E                                             ultoa@buf 0020  
                                      ?_ledSetAllOff 0001                                             ultoa@val 0022  
                                       ?_ledGoToggle 0021                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                       ?_ledTestToggle 0021  
                             __end_of_powerReduction 16B0                                     ___lldiv@quotient 001B  
                                       _process_data 1F6E                                    _SPI_transmit_wait 004C  
                                    ___lwmod@divisor 0015                                __size_of_SPISlaveInit 0048  
                          communications@send_buffer 0172                                      ___lwmod@counter 0017  
                   __size_of_process_data_parameters 01CA                                    _meterWatts_global 009D  
                                  __CFG_T3CMX$PORTC0 000000                                 ?_resetCommunications 003B  
                                       ?_ledSetAllOn 0001                                         ledSet@ledNum 0013  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0035  
                        __end_of_powerCalculateWatts 19BC                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 005C                            ?_command_builder_add_char 0013  
                                xsum_builder@xsumBuf 0060  
