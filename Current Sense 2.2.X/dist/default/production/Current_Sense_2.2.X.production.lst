

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Feb 09 21:23:31 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 1.45
    78                           ; Generated 16/11/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F25K22 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELB	set	3897
   113  0000                     _ANSELA	set	3896
   114  0000                     _ANSELBbits	set	3897
   115  0000                     _ANSELAbits	set	3896
   116  0000                     _TMR0L	set	4054
   117  0000                     _TMR0H	set	4055
   118  0000                     _INTCONbits	set	4082
   119  0000                     _T0CONbits	set	4053
   120  0000                     _PORTAbits	set	3968
   121  0000                     _IPR5	set	3967
   122  0000                     _IPR4	set	3964
   123  0000                     _IPR3	set	4005
   124  0000                     _IPR2	set	4002
   125  0000                     _IPR1	set	3999
   126  0000                     _PIE5	set	3965
   127  0000                     _PIE4	set	3962
   128  0000                     _PIE3	set	4003
   129  0000                     _PIE2	set	4000
   130  0000                     _PIE1	set	3997
   131  0000                     _PIR5	set	3966
   132  0000                     _PIR4	set	3963
   133  0000                     _PIR3	set	4004
   134  0000                     _PIR2	set	4001
   135  0000                     _PIR1	set	3998
   136  0000                     _RCONbits	set	4048
   137  0000                     _INTCON3	set	4080
   138  0000                     _INTCON2	set	4081
   139  0000                     _INTCON	set	4082
   140  0000                     _ADCON0bits	set	4034
   141  0000                     _OSCTUNEbits	set	3995
   142  0000                     _OSCCON2bits	set	4050
   143  0000                     _OSCCONbits	set	4051
   144  0000                     _SSP2CON3bits	set	3945
   145  0000                     _SSP2CON3	set	3945
   146  0000                     _TRISAbits	set	3986
   147  0000                     _SSP2BUF	set	3951
   148  0000                     _SSP2STATbits	set	3949
   149  0000                     _SSP2CON1bits	set	3948
   150  0000                     _PORTCbits	set	3970
   151  0000                     _PORTBbits	set	3969
   152  0000                     _LATCbits	set	3979
   153  0000                     _LATBbits	set	3978
   154  0000                     _TRISCbits	set	3988
   155  0000                     _TRISBbits	set	3987
   156                           
   157                           	psect	smallconst
   158  000600                     __psmallconst:
   159                           	opt stack 0
   160  000600  00                 	db	0
   161  000601                     STR_3:
   162                           
   163                           ; BSR set to: 0
   164  000601  43                 	db	67	;'C'
   165  000602  61                 	db	97	;'a'
   166  000603  6C                 	db	108	;'l'
   167  000604  69                 	db	105	;'i'
   168  000605  62                 	db	98	;'b'
   169  000606  72                 	db	114	;'r'
   170  000607  61                 	db	97	;'a'
   171  000608  74                 	db	116	;'t'
   172  000609  69                 	db	105	;'i'
   173  00060A  6F                 	db	111	;'o'
   174  00060B  6E                 	db	110	;'n'
   175  00060C  00                 	db	0
   176  00060D                     STR_11:
   177                           
   178                           ; BSR set to: 0
   179  00060D  50                 	db	80	;'P'
   180  00060E  53                 	db	83	;'S'
   181  00060F  56                 	db	86	;'V'
   182  000610  65                 	db	101	;'e'
   183  000611  72                 	db	114	;'r'
   184  000612  73                 	db	115	;'s'
   185  000613  69                 	db	105	;'i'
   186  000614  6F                 	db	111	;'o'
   187  000615  6E                 	db	110	;'n'
   188  000616  00                 	db	0
   189  000617                     STR_4:
   190                           
   191                           ; BSR set to: 0
   192  000617  45                 	db	69	;'E'
   193  000618  6E                 	db	110	;'n'
   194  000619  55                 	db	85	;'U'
   195  00061A  73                 	db	115	;'s'
   196  00061B  65                 	db	101	;'e'
   197  00061C  64                 	db	100	;'d'
   198  00061D  00                 	db	0
   199  00061E                     STR_9:
   200                           
   201                           ; BSR set to: 0
   202  00061E  56                 	db	86	;'V'
   203  00061F  6F                 	db	111	;'o'
   204  000620  6C                 	db	108	;'l'
   205  000621  74                 	db	116	;'t'
   206  000622  73                 	db	115	;'s'
   207  000623  00                 	db	0
   208  000624                     STR_7:
   209                           
   210                           ; BSR set to: 0
   211  000624  57                 	db	87	;'W'
   212  000625  61                 	db	97	;'a'
   213  000626  74                 	db	116	;'t'
   214  000627  74                 	db	116	;'t'
   215  000628  73                 	db	115	;'s'
   216  000629  00                 	db	0
   217  00062A                     
   218                           ; BSR set to: 0
   219  00062A  4C                 	db	76	;'L'
   220  00062B  45                 	db	69	;'E'
   221  00062C  44                 	db	68	;'D'
   222  00062D  42                 	db	66	;'B'
   223  00062E  00                 	db	0
   224  00062F                     STR_5:
   225                           
   226                           ; BSR set to: 0
   227  00062F  52                 	db	82	;'R'
   228  000630  65                 	db	101	;'e'
   229  000631  61                 	db	97	;'a'
   230  000632  64                 	db	100	;'d'
   231  000633  00                 	db	0
   232  000634                     STR_6:
   233                           
   234                           ; BSR set to: 0
   235  000634  43                 	db	67	;'C'
   236  000635  6F                 	db	111	;'o'
   237  000636  6E                 	db	110	;'n'
   238  000637  66                 	db	102	;'f'
   239  000638  00                 	db	0
   240  000639                     STR_10:
   241                           
   242                           ; BSR set to: 0
   243  000639  41                 	db	65	;'A'
   244  00063A  6D                 	db	109	;'m'
   245  00063B  70                 	db	112	;'p'
   246  00063C  73                 	db	115	;'s'
   247  00063D  00                 	db	0
   248  00063E                     
   249                           ; BSR set to: 0
   250  00063E  32                 	db	50	;'2'
   251  00063F  32                 	db	50	;'2'
   252  000640  32                 	db	50	;'2'
   253  000641  00                 	db	0
   254  000642                     
   255                           ; BSR set to: 0
   256  000642  33                 	db	51	;'3'
   257  000643  33                 	db	51	;'3'
   258  000644  33                 	db	51	;'3'
   259  000645  00                 	db	0
   260  000646                     STR_29:
   261                           
   262                           ; BSR set to: 0
   263  000646  34                 	db	52	;'4'
   264  000647  34                 	db	52	;'4'
   265  000648  34                 	db	52	;'4'
   266  000649  00                 	db	0
   267  00064A                     STR_1:
   268                           
   269                           ; BSR set to: 0
   270  00064A  45                 	db	69	;'E'
   271  00064B  4E                 	db	78	;'N'
   272  00064C  44                 	db	68	;'D'
   273  00064D  00                 	db	0
   274  00064E                     STR_2:
   275                           
   276                           ; BSR set to: 0
   277  00064E  53                 	db	83	;'S'
   278  00064F  65                 	db	101	;'e'
   279  000650  74                 	db	116	;'t'
   280  000651  00                 	db	0
   281  0000                     
   282                           ; #config settings
   283  000652  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           	psect	cinit
   286  001CDC                     __pcinit:
   287                           	opt stack 0
   288  001CDC                     start_initialization:
   289                           	opt stack 0
   290  001CDC                     __initialization:
   291                           	opt stack 0
   292                           
   293                           ; Clear objects allocated to BANK1 (42 bytes)
   294  001CDC  EE01  F033         	lfsr	0,__pbssBANK1
   295  001CE0  0E2A               	movlw	42
   296  001CE2                     clear_0:
   297  001CE2  6AEE               	clrf	postinc0,c
   298  001CE4  06E8               	decf	wreg,f,c
   299  001CE6  E1FD               	bnz	clear_0
   300                           
   301                           ; Clear objects allocated to BANK0 (74 bytes)
   302  001CE8  EE00  F060         	lfsr	0,__pbssBANK0
   303  001CEC  0E4A               	movlw	74
   304  001CEE                     clear_1:
   305  001CEE  6AEE               	clrf	postinc0,c
   306  001CF0  06E8               	decf	wreg,f,c
   307  001CF2  E1FD               	bnz	clear_1
   308                           
   309                           ; Clear objects allocated to COMRAM (16 bytes)
   310  001CF4  EE00  F03D         	lfsr	0,__pbssCOMRAM
   311  001CF8  0E10               	movlw	16
   312  001CFA                     clear_2:
   313  001CFA  6AEE               	clrf	postinc0,c
   314  001CFC  06E8               	decf	wreg,f,c
   315  001CFE  E1FD               	bnz	clear_2
   316  001D00                     end_of_initialization:
   317                           	opt stack 0
   318  001D00                     __end_of__initialization:
   319                           	opt stack 0
   320  001D00  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321  001D02  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322  001D04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  001D06  6EF8               	movwf	tblptru,c
   324  001D08  0100               	movlb	0
   325  001D0A  EF1C  F007         	goto	_main	;jump to C main() function
   326                           tblptru	equ	0xFF8
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           
   330                           	psect	bssCOMRAM
   331  00003D                     __pbssCOMRAM:
   332                           	opt stack 0
   333  00003D                     _meterEnergyUsed_global:
   334                           	opt stack 0
   335  00003D                     	ds	4
   336  000041                     	ds	2
   337  000043                     mcpUpdatePower@meterWattsLF:
   338                           	opt stack 0
   339  000043                     	ds	2
   340  000045                     mcpUpdatePower@meterWattsHF:
   341                           	opt stack 0
   342  000045                     	ds	2
   343  000047                     resetCommunications@commState:
   344                           	opt stack 0
   345  000047                     	ds	2
   346  000049                     mcpUpdatePower@oneShotLFout:
   347                           	opt stack 0
   348  000049                     	ds	1
   349  00004A                     mcpUpdatePower@oneShotHFout:
   350                           	opt stack 0
   351  00004A                     	ds	1
   352  00004B                     receive_data@my_status:
   353                           	opt stack 0
   354  00004B                     	ds	1
   355  00004C                     _SPI_transmit_wait:
   356                           	opt stack 0
   357  00004C                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	bssBANK0
   363  000060                     __pbssBANK0:
   364                           	opt stack 0
   365  000060                     _timerCount_ms:
   366                           	opt stack 0
   367  000060                     	ds	16
   368  000070                     mcpUpdatePower@timerHFoutLast_ms:
   369                           	opt stack 0
   370  000070                     	ds	4
   371  000074                     _meterEnergyUsedPart:
   372                           	opt stack 0
   373  000074                     	ds	4
   374  000078                     _meterWatts_global:
   375                           	opt stack 0
   376  000078                     	ds	4
   377  00007C                     main@oneShot:
   378                           	opt stack 0
   379  00007C                     	ds	1
   380  00007D                     communications@last_state_active:
   381                           	opt stack 0
   382  00007D                     	ds	1
   383  00007E                     communications@receive_current_state:
   384                           	opt stack 0
   385  00007E                     	ds	1
   386  00007F                     communications@end_of_transmission_received:
   387                           	opt stack 0
   388  00007F                     	ds	1
   389  000080                     communications@send_buffer:
   390                           	opt stack 0
   391  000080                     	ds	42
   392                           tblptru	equ	0xFF8
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           
   396                           	psect	bssBANK1
   397  000133                     __pbssBANK1:
   398                           	opt stack 0
   399  000133                     communications@receive_buffer:
   400                           	opt stack 0
   401  000133                     	ds	42
   402                           tblptru	equ	0xFF8
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	cstackBANK1
   407  000100                     __pcstackBANK1:
   408                           	opt stack 0
   409  000100                     process_data@parameters:
   410                           	opt stack 0
   411                           
   412                           ; 50 bytes @ 0x0
   413  000100                     	ds	50
   414  000132                     process_data@end_of_transmission_received:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x32
   418  000132                     	ds	1
   419                           tblptru	equ	0xFF8
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           
   423                           	psect	cstackBANK0
   424  0000AA                     __pcstackBANK0:
   425                           	opt stack 0
   426  0000AA                     xsum_builder@xsumBuf:
   427                           	opt stack 0
   428                           
   429                           ; 16 bytes @ 0x0
   430  0000AA                     	ds	16
   431  0000BA                     com_command_setPower@temp:
   432                           	opt stack 0
   433  0000BA                     com_command_setEnergyUsed@temp:
   434                           	opt stack 0
   435                           
   436                           ; 12 bytes @ 0x10
   437  0000BA                     	ds	12
   438  0000C6                     ??_resetCommunications:
   439  0000C6                     process_data_parameters@parameters:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1C
   443  0000C6                     	ds	2
   444  0000C8                     process_data_parameters@send_buffer:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x1E
   448  0000C8                     	ds	2
   449  0000CA                     process_data@receive_buffer:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x20
   453  0000CA                     	ds	2
   454  0000CC                     process_data@send_buffer:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x22
   458  0000CC                     	ds	2
   459  0000CE                     communications@no_more_to_send:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x24
   463  0000CE                     	ds	1
   464  0000CF                     communications@firstTime:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x25
   468  0000CF                     	ds	1
   469  0000D0                     ??_main:
   470                           
   471                           ; 1 bytes @ 0x26
   472  0000D0                     	ds	1
   473  0000D1                     main@timerHeartbeat:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x27
   477  0000D1                     	ds	4
   478  0000D5                     main@inx:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x2B
   482  0000D5                     	ds	2
   483                           tblptru	equ	0xFF8
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487                           	psect	cstackCOMRAM
   488  000001                     __pcstackCOMRAM:
   489                           	opt stack 0
   490  000001                     ??_Timer0_ISR:
   491                           
   492                           ; 1 bytes @ 0x0
   493  000001                     	ds	18
   494  000013                     ??_isdigit:
   495  000013                     ?_command_builder_add_char:
   496                           	opt stack 0
   497  000013                     ?_strcmp2:
   498                           	opt stack 0
   499  000013                     ?___wmul:
   500                           	opt stack 0
   501  000013                     ?___awdiv:
   502                           	opt stack 0
   503  000013                     ?___lwdiv:
   504                           	opt stack 0
   505  000013                     ?___lwmod:
   506                           	opt stack 0
   507  000013                     ?_timerGetCount:
   508                           	opt stack 0
   509  000013                     ?___lmul:
   510                           	opt stack 0
   511  000013                     ?___lldiv:
   512                           	opt stack 0
   513  000013                     ?___llmod:
   514                           	opt stack 0
   515  000013                     SPI_send_data@data:
   516                           	opt stack 0
   517  000013                     ledSet@ledNum:
   518                           	opt stack 0
   519  000013                     command_builder_add_char@send_buffer:
   520                           	opt stack 0
   521  000013                     strcmp2@a:
   522                           	opt stack 0
   523  000013                     SPI_receive_data@data:
   524                           	opt stack 0
   525  000013                     timerGetCount@timerIndex:
   526                           	opt stack 0
   527  000013                     timerResetCount@timerIndex:
   528                           	opt stack 0
   529  000013                     delayMS10@count:
   530                           	opt stack 0
   531  000013                     ___wmul@multiplier:
   532                           	opt stack 0
   533  000013                     ___awdiv@dividend:
   534                           	opt stack 0
   535  000013                     ___lwdiv@dividend:
   536                           	opt stack 0
   537  000013                     ___lwmod@dividend:
   538                           	opt stack 0
   539  000013                     ___lmul@multiplier:
   540                           	opt stack 0
   541  000013                     ___lldiv@dividend:
   542                           	opt stack 0
   543  000013                     ___llmod@dividend:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0x12
   547  000013                     	ds	1
   548  000014                     SPI_send_data@sendGood:
   549                           	opt stack 0
   550  000014                     _isdigit$2409:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x13
   554  000014                     	ds	1
   555  000015                     ??_delayMS10:
   556  000015                     ??_timerResetCount:
   557  000015                     command_builder_add_char@data:
   558                           	opt stack 0
   559  000015                     SPI_receive_data@recvGood:
   560                           	opt stack 0
   561  000015                     isdigit@c:
   562                           	opt stack 0
   563  000015                     ledSet@setValue:
   564                           	opt stack 0
   565  000015                     send_data@send_buffer:
   566                           	opt stack 0
   567  000015                     strcmp2@b:
   568                           	opt stack 0
   569  000015                     ___wmul@multiplicand:
   570                           	opt stack 0
   571  000015                     ___awdiv@divisor:
   572                           	opt stack 0
   573  000015                     ___lwdiv@divisor:
   574                           	opt stack 0
   575  000015                     ___lwmod@divisor:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x14
   579  000015                     	ds	1
   580  000016                     ??_command_builder_add_char:
   581  000016                     receive_data@receive_buffer:
   582                           	opt stack 0
   583  000016                     delayMS10@inx:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x15
   587  000016                     	ds	1
   588  000017                     ??_send_data:
   589  000017                     ??_strcmp2:
   590  000017                     ??_timerGetCount:
   591  000017                     ??_ledSet:
   592  000017                     ?_command_builder_add_string:
   593                           	opt stack 0
   594  000017                     ___awdiv@counter:
   595                           	opt stack 0
   596  000017                     ___lwdiv@counter:
   597                           	opt stack 0
   598  000017                     ___lwmod@counter:
   599                           	opt stack 0
   600  000017                     command_builder_add_string@send_buffer:
   601                           	opt stack 0
   602  000017                     ___wmul@product:
   603                           	opt stack 0
   604  000017                     ___lmul@multiplicand:
   605                           	opt stack 0
   606  000017                     ___lldiv@divisor:
   607                           	opt stack 0
   608  000017                     ___llmod@divisor:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x16
   612  000017                     	ds	1
   613  000018                     ??_receive_data:
   614  000018                     ??_mcpInitF:
   615  000018                     ___awdiv@sign:
   616                           	opt stack 0
   617  000018                     ___lwdiv@quotient:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x17
   621  000018                     	ds	1
   622  000019                     receive_data@data:
   623                           	opt stack 0
   624  000019                     send_data@send_end:
   625                           	opt stack 0
   626  000019                     ledSetAll@led1Value:
   627                           	opt stack 0
   628  000019                     ledToggle@ledNum:
   629                           	opt stack 0
   630  000019                     process_data_parameterize@parameters:
   631                           	opt stack 0
   632  000019                     command_builder_add_string@data_string:
   633                           	opt stack 0
   634  000019                     ___awdiv@quotient:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x18
   638  000019                     	ds	1
   639  00001A                     strcmp2@match:
   640                           	opt stack 0
   641  00001A                     utoa@buf:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x19
   645  00001A                     	ds	1
   646  00001B                     ??_command_builder_add_string:
   647  00001B                     ??_ledToggle:
   648  00001B                     ___llmod@counter:
   649                           	opt stack 0
   650  00001B                     ledSetAll@led2Value:
   651                           	opt stack 0
   652  00001B                     process_data_parameterize@buffer_to_parameterize:
   653                           	opt stack 0
   654  00001B                     ___lmul@product:
   655                           	opt stack 0
   656  00001B                     ___lldiv@quotient:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x1A
   660  00001B                     	ds	1
   661  00001C                     strcmp2@inx:
   662                           	opt stack 0
   663  00001C                     utoa@val:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x1B
   667  00001C                     	ds	1
   668  00001D                     ??_process_data_parameterize:
   669  00001D                     ledSetAll@led3Value:
   670                           	opt stack 0
   671  00001D                     ledToggle@setValue:
   672                           	opt stack 0
   673  00001D                     command_builder_add_string@xsumAdd:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x1C
   677  00001D                     	ds	1
   678  00001E                     strmatch@a:
   679                           	opt stack 0
   680  00001E                     utoa@base:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x1D
   684  00001E                     	ds	1
   685  00001F                     ?_atol:
   686                           	opt stack 0
   687  00001F                     ___lldiv@counter:
   688                           	opt stack 0
   689  00001F                     ledToggle@getValue:
   690                           	opt stack 0
   691  00001F                     ledRunUp@ledRunDelay:
   692                           	opt stack 0
   693  00001F                     ledRunDown@ledRunDelay:
   694                           	opt stack 0
   695  00001F                     command_builder_add_string@inx:
   696                           	opt stack 0
   697  00001F                     atol@s:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x1E
   701  00001F                     	ds	1
   702  000020                     ?_powerCalculateWatts:
   703                           	opt stack 0
   704  000020                     process_data_parameterize@inx:
   705                           	opt stack 0
   706  000020                     strmatch@b:
   707                           	opt stack 0
   708  000020                     utoa@v:
   709                           	opt stack 0
   710  000020                     ultoa@buf:
   711                           	opt stack 0
   712  000020                     powerCalculateWatts@timer_ms:
   713                           	opt stack 0
   714  000020                     powerReduction@timerLast_ms:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x1F
   718  000020                     	ds	1
   719  000021                     ledTestToggle@ledNum:
   720                           	opt stack 0
   721  000021                     ledGoToggle@ledNum:
   722                           	opt stack 0
   723  000021                     ledRunUp@delay10ms:
   724                           	opt stack 0
   725  000021                     ledRunDown@delay10ms:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x20
   729  000021                     	ds	1
   730  000022                     process_data_parameterize@parameter_index:
   731                           	opt stack 0
   732  000022                     utoa@c:
   733                           	opt stack 0
   734  000022                     strmatch@result:
   735                           	opt stack 0
   736  000022                     ultoa@val:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x21
   740  000022                     	ds	1
   741  000023                     ??_atol:
   742  000023                     process_data_parameterize@parameter_position:
   743                           	opt stack 0
   744  000023                     ledRun@ledRunDelay:
   745                           	opt stack 0
   746  000023                     itoa@buf:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x22
   750  000023                     	ds	1
   751  000024                     strmatch@match:
   752                           	opt stack 0
   753  000024                     powerCalculateWatts@outHF:
   754                           	opt stack 0
   755  000024                     powerReduction@timerReduce_ms:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x23
   759  000024                     	ds	1
   760  000025                     powerCalculateWatts@calcWatts:
   761                           	opt stack 0
   762  000025                     itoa@val:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x24
   766  000025                     	ds	1
   767  000026                     ultoa@base:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x25
   771  000026                     	ds	1
   772  000027                     atol@sign:
   773                           	opt stack 0
   774  000027                     itoa@base:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x26
   778  000027                     	ds	1
   779  000028                     mcpUpdatePower@timerLFout_ms:
   780                           	opt stack 0
   781  000028                     atol@a:
   782                           	opt stack 0
   783  000028                     ultoa@v:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x27
   787  000028                     	ds	1
   788  000029                     itoa@cp:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x28
   792  000029                     	ds	2
   793  00002B                     xsum_builder@send_buffer:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x2A
   797  00002B                     	ds	1
   798  00002C                     atol@c:
   799                           	opt stack 0
   800  00002C                     ultoa@c:
   801                           	opt stack 0
   802  00002C                     mcpUpdatePower@timerHFout_ms:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x2B
   806  00002C                     	ds	1
   807  00002D                     xsum_builder@xsum:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x2C
   811  00002D                     	ds	2
   812  00002F                     command_builder1@send_buffer:
   813                           	opt stack 0
   814  00002F                     command_builder3@send_buffer:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x2E
   818  00002F                     	ds	2
   819  000031                     command_builder1@data1:
   820                           	opt stack 0
   821  000031                     command_builder3@data1:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x30
   825  000031                     	ds	2
   826  000033                     command_builder1@xsum:
   827                           	opt stack 0
   828  000033                     command_builder3@data2:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x32
   832  000033                     	ds	2
   833  000035                     command_builder3@data3:
   834                           	opt stack 0
   835  000035                     send_end_of_transmission@send_buffer:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x34
   839  000035                     	ds	2
   840  000037                     command_builder3@xsum:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x36
   844  000037                     	ds	2
   845  000039                     com_command_setPower@send_buffer:
   846                           	opt stack 0
   847  000039                     com_command_setEnergyUsed@send_buffer:
   848                           	opt stack 0
   849  000039                     com_command_setVersion@send_buffer:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x38
   853  000039                     	ds	2
   854  00003B                     process_data_parameters@end_of_transmission_received:
   855                           	opt stack 0
   856  00003B                     resetCommunications@send_buffer:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x3A
   860  00003B                     	ds	1
   861  00003C                     
   862                           ; 1 bytes @ 0x3B
   863  00003C                     	ds	1
   864  00003D                     tblptru	equ	0xFF8
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           
   868                           ; 1 bytes @ 0x3C
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 48 in file "Main_PowerSense.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  timerHeartbe    4   39[BANK0 ] unsigned long 
   879 ;;  inx             2   43[BANK0 ] int 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   889 ;;      Params:         0       0       0       0       0       0       0
   890 ;;      Locals:         0       6       0       0       0       0       0
   891 ;;      Temps:          0       1       0       0       0       0       0
   892 ;;      Totals:         0       7       0       0       0       0       0
   893 ;;Total ram usage:        7 bytes
   894 ;; Hardware stack levels required when called:   11
   895 ;; This function calls:
   896 ;;		___llmod
   897 ;;		_commInit
   898 ;;		_commRun
   899 ;;		_initIO
   900 ;;		_initInterruptsClear
   901 ;;		_initOSC
   902 ;;		_ledInit
   903 ;;		_ledRun
   904 ;;		_ledSetAllOff
   905 ;;		_ledSetAllOn
   906 ;;		_ledTestToggle
   907 ;;		_mcpInit
   908 ;;		_mcpUpdatePower
   909 ;;		_timerGetCount
   910 ;;		_timerInit
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text0
   917  000E38                     __ptext0:
   918                           	opt stack 0
   919  000E38                     _main:
   920                           	opt stack 20
   921                           
   922                           ;Main_PowerSense.c: 83: initOSC( );
   923                           
   924                           ;incstack = 0
   925  000E38  EC98  F00F         	call	_initOSC	;wreg free
   926                           
   927                           ;Main_PowerSense.c: 84: initIO( );
   928  000E3C  ECAF  F00F         	call	_initIO	;wreg free
   929                           
   930                           ;Main_PowerSense.c: 85: ledInit( );
   931  000E40  ECBF  F00F         	call	_ledInit	;wreg free
   932                           
   933                           ;Main_PowerSense.c: 87: ledSetAllOff( );
   934  000E44  EC6D  F00F         	call	_ledSetAllOff	;wreg free
   935                           
   936                           ;Main_PowerSense.c: 89: initInterruptsClear( );
   937  000E48  EC79  F00D         	call	_initInterruptsClear	;wreg free
   938                           
   939                           ;Main_PowerSense.c: 90: timerInit( );
   940  000E4C  EC41  F00C         	call	_timerInit	;wreg free
   941                           
   942                           ;Main_PowerSense.c: 92: mcpInit( );
   943  000E50  ECFF  F00E         	call	_mcpInit	;wreg free
   944                           
   945                           ;Main_PowerSense.c: 95: for( int inx = 0; inx < 5; inx++ )
   946  000E54  0E00               	movlw	0
   947  000E56  0100               	movlb	0	; () banked
   948  000E58  6FD6               	movwf	(main@inx+1)& (0+255),b
   949  000E5A  0E00               	movlw	0
   950  000E5C  6FD5               	movwf	main@inx& (0+255),b
   951  000E5E  BFD6               	btfsc	(main@inx+1)& (0+255),7,b
   952  000E60  D006               	goto	l458
   953  000E62  51D6               	movf	(main@inx+1)& (0+255),w,b
   954  000E64  E11E               	bnz	l4123
   955  000E66  0E05               	movlw	5
   956  000E68  5DD5               	subwf	main@inx& (0+255),w,b
   957  000E6A  B0D8               	btfsc	status,0,c
   958  000E6C  D01A               	goto	u2950
   959  000E6E                     l458:
   960                           
   961                           ; BSR set to: 0
   962                           ;Main_PowerSense.c: 96: {
   963                           ;Main_PowerSense.c: 97: ledSetAllOn( );
   964                           
   965                           ; BSR set to: 0
   966  000E6E  EC5E  F00F         	call	_ledSetAllOn	;wreg free
   967                           
   968                           ;Main_PowerSense.c: 98: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   969  000E72  0E34               	movlw	52
   970  000E74  0100               	movlb	0	; () banked
   971  000E76  6FD0               	movwf	??_main& (0+255),b
   972  000E78  0EF1               	movlw	241
   973  000E7A                     u2987:
   974  000E7A  2EE8               	decfsz	wreg,f,c
   975  000E7C  D7FE               	bra	u2987
   976  000E7E  2FD0               	decfsz	??_main& (0+255),f,b
   977  000E80  D7FC               	bra	u2987
   978  000E82  D000               	nop2	
   979                           
   980                           ;Main_PowerSense.c: 99: ledSetAllOff( );
   981  000E84  EC6D  F00F         	call	_ledSetAllOff	;wreg free
   982                           
   983                           ;Main_PowerSense.c: 100: _delay((unsigned long)((10)*(16000000UL/4000.0)));
   984  000E88  0E34               	movlw	52
   985  000E8A  0100               	movlb	0	; () banked
   986  000E8C  6FD0               	movwf	??_main& (0+255),b
   987  000E8E  0EF1               	movlw	241
   988  000E90                     u2997:
   989  000E90  2EE8               	decfsz	wreg,f,c
   990  000E92  D7FE               	bra	u2997
   991  000E94  2FD0               	decfsz	??_main& (0+255),f,b
   992  000E96  D7FC               	bra	u2997
   993  000E98  D000               	nop2	
   994  000E9A  0100               	movlb	0	; () banked
   995  000E9C  4BD5               	infsnz	main@inx& (0+255),f,b
   996  000E9E  2BD6               	incf	(main@inx+1)& (0+255),f,b
   997  000EA0  D7DE               	goto	L1
   998  000EA2                     u2950:
   999  000EA2                     l4123:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;Main_PowerSense.c: 101: }
  1003                           ;Main_PowerSense.c: 104: commInit( );
  1004  000EA2  ECC9  F00F         	call	_commInit	;wreg free
  1005                           
  1006                           ;Main_PowerSense.c: 106: ledRun( 100 );
  1007  000EA6  0E00               	movlw	0
  1008  000EA8  6E24               	movwf	ledRun@ledRunDelay+1,c
  1009  000EAA  0E64               	movlw	100
  1010  000EAC  6E23               	movwf	ledRun@ledRunDelay,c
  1011  000EAE  EC8B  F00F         	call	_ledRun	;wreg free
  1012  000EB2                     
  1013                           ;Main_PowerSense.c: 109: {
  1014                           ;Main_PowerSense.c: 110: mcpUpdatePower( );
  1015  000EB2  EC0F  F004         	call	_mcpUpdatePower	;wreg free
  1016                           
  1017                           ;Main_PowerSense.c: 111: commRun( );
  1018  000EB6  ECC5  F00F         	call	_commRun	;wreg free
  1019                           
  1020                           ;Main_PowerSense.c: 114: {
  1021                           ;Main_PowerSense.c: 115: static bool oneShot = 0;
  1022                           ;Main_PowerSense.c: 116: unsigned long timerHeartbeat;
  1023                           ;Main_PowerSense.c: 117: timerHeartbeat = timerGetCount( 3 );
  1024  000EBA  0E00               	movlw	0
  1025  000EBC  6E14               	movwf	timerGetCount@timerIndex+1,c
  1026  000EBE  0E03               	movlw	3
  1027  000EC0  6E13               	movwf	timerGetCount@timerIndex,c
  1028  000EC2  EC87  F00E         	call	_timerGetCount	;wreg free
  1029  000EC6  C013  F0D1         	movff	?_timerGetCount,main@timerHeartbeat
  1030  000ECA  C014  F0D2         	movff	?_timerGetCount+1,main@timerHeartbeat+1
  1031  000ECE  C015  F0D3         	movff	?_timerGetCount+2,main@timerHeartbeat+2
  1032  000ED2  C016  F0D4         	movff	?_timerGetCount+3,main@timerHeartbeat+3
  1033                           
  1034                           ;Main_PowerSense.c: 118: if( (timerHeartbeat % 500) == 0 )
  1035  000ED6  C0D1  F013         	movff	main@timerHeartbeat,___llmod@dividend
  1036  000EDA  C0D2  F014         	movff	main@timerHeartbeat+1,___llmod@dividend+1
  1037  000EDE  C0D3  F015         	movff	main@timerHeartbeat+2,___llmod@dividend+2
  1038  000EE2  C0D4  F016         	movff	main@timerHeartbeat+3,___llmod@dividend+3
  1039  000EE6  0EF4               	movlw	244
  1040  000EE8  6E17               	movwf	___llmod@divisor,c
  1041  000EEA  0E01               	movlw	1
  1042  000EEC  6E18               	movwf	___llmod@divisor+1,c
  1043  000EEE  0E00               	movlw	0
  1044  000EF0  6E19               	movwf	___llmod@divisor+2,c
  1045  000EF2  0E00               	movlw	0
  1046  000EF4  6E1A               	movwf	___llmod@divisor+3,c
  1047  000EF6  EC0E  F00C         	call	___llmod	;wreg free
  1048  000EFA  5013               	movf	?___llmod,w,c
  1049  000EFC  1014               	iorwf	?___llmod+1,w,c
  1050  000EFE  1015               	iorwf	?___llmod+2,w,c
  1051  000F00  1016               	iorwf	?___llmod+3,w,c
  1052  000F02  A4D8               	btfss	status,2,c
  1053  000F04  D00D               	goto	l463
  1054                           
  1055                           ;Main_PowerSense.c: 119: {
  1056                           ;Main_PowerSense.c: 120: if( oneShot == 0 )
  1057  000F06  0100               	movlb	0	; () banked
  1058  000F08  517C               	movf	main@oneShot& (0+255),w,b
  1059  000F0A  A4D8               	btfss	status,2,c
  1060  000F0C  D7D2               	goto	l460
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;Main_PowerSense.c: 121: {
  1064                           ;Main_PowerSense.c: 122: oneShot = 1;
  1065  000F0E  0E01               	movlw	1
  1066  000F10  6F7C               	movwf	main@oneShot& (0+255),b
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;Main_PowerSense.c: 123: ledTestToggle( 1 );
  1070  000F12  0E00               	movlw	0
  1071  000F14  6E22               	movwf	ledTestToggle@ledNum+1,c
  1072  000F16  0E01               	movlw	1
  1073  000F18  6E21               	movwf	ledTestToggle@ledNum,c
  1074  000F1A  ECB8  F00F         	call	_ledTestToggle	;wreg free
  1075                           
  1076                           ;Main_PowerSense.c: 124: }
  1077                           ;Main_PowerSense.c: 126: }
  1078  000F1E  D7C9               	goto	l460
  1079  000F20                     l463:
  1080                           
  1081                           ;Main_PowerSense.c: 127: else
  1082                           ;Main_PowerSense.c: 128: {
  1083                           ;Main_PowerSense.c: 129: oneShot = 0;
  1084  000F20  0E00               	movlw	0
  1085  000F22  0100               	movlb	0	; () banked
  1086  000F24  6F7C               	movwf	main@oneShot& (0+255),b
  1087                           
  1088                           ; BSR set to: 0
  1089                           
  1090                           ; BSR set to: 0
  1091  000F26  D7C5               	goto	l460
  1092  000F28                     __end_of_main:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           status	equ	0xFD8
  1098                           
  1099 ;; *************** function _timerInit *****************
  1100 ;; Defined at:
  1101 ;;		line 53 in file "Timer.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1115 ;;      Params:         0       0       0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0
  1118 ;;      Totals:         0       0       0       0       0       0       0
  1119 ;;Total ram usage:        0 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text1
  1130  001882                     __ptext1:
  1131                           	opt stack 0
  1132  001882                     _timerInit:
  1133                           	opt stack 29
  1134                           
  1135                           ;Timer.c: 56: T0CONbits.TMR0ON = 0;
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;incstack = 0
  1139  001882  9ED5               	bcf	4053,7,c	;volatile
  1140                           
  1141                           ;Timer.c: 57: T0CONbits.T08BIT = 0;
  1142  001884  9CD5               	bcf	4053,6,c	;volatile
  1143                           
  1144                           ;Timer.c: 58: T0CONbits.T0CS = 0;
  1145  001886  9AD5               	bcf	4053,5,c	;volatile
  1146                           
  1147                           ;Timer.c: 59: T0CONbits.PSA = 0;
  1148  001888  96D5               	bcf	4053,3,c	;volatile
  1149                           
  1150                           ;Timer.c: 60: T0CONbits.T0PS = 0b001;
  1151  00188A  50D5               	movf	4053,w,c	;volatile
  1152  00188C  0BF8               	andlw	-8
  1153  00188E  0901               	iorlw	1
  1154  001890  6ED5               	movwf	4053,c	;volatile
  1155                           
  1156                           ;Timer.c: 62: INTCONbits.TMR0IE = 1;
  1157  001892  8AF2               	bsf	intcon,5,c	;volatile
  1158                           
  1159                           ;Timer.c: 63: INTCONbits.GIE = 1;
  1160  001894  8EF2               	bsf	intcon,7,c	;volatile
  1161                           
  1162                           ;Timer.c: 64: T0CONbits.TMR0ON = 1;
  1163  001896  8ED5               	bsf	4053,7,c	;volatile
  1164                           
  1165                           ;Timer.c: 68: timerCount_ms[0] = 0;
  1166  001898  0E00               	movlw	0
  1167  00189A  0100               	movlb	0	; () banked
  1168  00189C  6F60               	movwf	_timerCount_ms& (0+255),b	;volatile
  1169  00189E  0E00               	movlw	0
  1170  0018A0  6F61               	movwf	(_timerCount_ms+1)& (0+255),b	;volatile
  1171  0018A2  0E00               	movlw	0
  1172  0018A4  6F62               	movwf	(_timerCount_ms+2)& (0+255),b	;volatile
  1173  0018A6  0E00               	movlw	0
  1174  0018A8  6F63               	movwf	(_timerCount_ms+3)& (0+255),b	;volatile
  1175                           
  1176                           ;Timer.c: 69: timerCount_ms[1] = 0;
  1177  0018AA  0E00               	movlw	0
  1178  0018AC  6F64               	movwf	(_timerCount_ms+4)& (0+255),b	;volatile
  1179  0018AE  0E00               	movlw	0
  1180  0018B0  6F65               	movwf	(_timerCount_ms+5)& (0+255),b	;volatile
  1181  0018B2  0E00               	movlw	0
  1182  0018B4  6F66               	movwf	(_timerCount_ms+6)& (0+255),b	;volatile
  1183  0018B6  0E00               	movlw	0
  1184  0018B8  6F67               	movwf	(_timerCount_ms+7)& (0+255),b	;volatile
  1185                           
  1186                           ;Timer.c: 70: timerCount_ms[2] = 0;
  1187  0018BA  0E00               	movlw	0
  1188  0018BC  6F68               	movwf	(_timerCount_ms+8)& (0+255),b	;volatile
  1189  0018BE  0E00               	movlw	0
  1190  0018C0  6F69               	movwf	(_timerCount_ms+9)& (0+255),b	;volatile
  1191  0018C2  0E00               	movlw	0
  1192  0018C4  6F6A               	movwf	(_timerCount_ms+10)& (0+255),b	;volatile
  1193  0018C6  0E00               	movlw	0
  1194  0018C8  6F6B               	movwf	(_timerCount_ms+11)& (0+255),b	;volatile
  1195                           
  1196                           ;Timer.c: 71: timerCount_ms[3] = 0;
  1197  0018CA  0E00               	movlw	0
  1198  0018CC  6F6C               	movwf	(_timerCount_ms+12)& (0+255),b	;volatile
  1199  0018CE  0E00               	movlw	0
  1200  0018D0  6F6D               	movwf	(_timerCount_ms+13)& (0+255),b	;volatile
  1201  0018D2  0E00               	movlw	0
  1202  0018D4  6F6E               	movwf	(_timerCount_ms+14)& (0+255),b	;volatile
  1203  0018D6  0E00               	movlw	0
  1204  0018D8  6F6F               	movwf	(_timerCount_ms+15)& (0+255),b	;volatile
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;Timer.c: 73: INTCONbits.TMR0IF = 0;
  1208  0018DA  94F2               	bcf	intcon,2,c	;volatile
  1209                           
  1210                           ;Timer.c: 75: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  1211  0018DC  0EFC               	movlw	252
  1212  0018DE  6ED7               	movwf	4055,c	;volatile
  1213                           
  1214                           ;Timer.c: 76: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  1215  0018E0  0E18               	movlw	24
  1216  0018E2  6ED6               	movwf	4054,c	;volatile
  1217                           
  1218                           ; BSR set to: 0
  1219  0018E4  0012               	return		;funcret
  1220  0018E6                     __end_of_timerInit:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _mcpUpdatePower *****************
  1229 ;; Defined at:
  1230 ;;		line 206 in file "MCP3909_Interface.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  timerLFout_m    4   39[COMRAM] unsigned long 
  1235 ;;  timerHFout_m    4   43[COMRAM] unsigned long 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         0       0       0       0       0       0       0
  1246 ;;      Locals:         8       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         8       0       0       0       0       0       0
  1249 ;;Total ram usage:        8 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    4
  1252 ;; This function calls:
  1253 ;;		_ledGoToggle
  1254 ;;		_powerCalculateWatts
  1255 ;;		_powerReduction
  1256 ;;		_timerGetCount
  1257 ;;		_timerResetCount
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text2
  1264  00081E                     __ptext2:
  1265                           	opt stack 0
  1266  00081E                     _mcpUpdatePower:
  1267                           	opt stack 26
  1268                           
  1269                           ;MCP3909_Interface.c: 220: static int meterWattsHF = 0;
  1270                           ;MCP3909_Interface.c: 221: static unsigned long timerHFoutLast_ms = 0;
  1271                           ;MCP3909_Interface.c: 223: static bool oneShotHFout = 0;
  1272                           ;MCP3909_Interface.c: 225: if( PORTAbits.RA3 == 0 )
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;incstack = 0
  1276  00081E  B680               	btfsc	3968,3,c	;volatile
  1277  000820  D03E               	goto	l522
  1278                           
  1279                           ;MCP3909_Interface.c: 226: {
  1280                           ;MCP3909_Interface.c: 227: if( oneShotHFout == 0 )
  1281  000822  504A               	movf	mcpUpdatePower@oneShotHFout,w,c
  1282  000824  A4D8               	btfss	status,2,c
  1283  000826  D03D               	goto	l524
  1284                           
  1285                           ;MCP3909_Interface.c: 228: {
  1286                           ;MCP3909_Interface.c: 230: ledGoToggle( 0 );
  1287  000828  0E00               	movlw	0
  1288  00082A  6E22               	movwf	ledGoToggle@ledNum+1,c
  1289  00082C  0E00               	movlw	0
  1290  00082E  6E21               	movwf	ledGoToggle@ledNum,c
  1291  000830  ECCD  F00F         	call	_ledGoToggle	;wreg free
  1292                           
  1293                           ;MCP3909_Interface.c: 232: oneShotHFout = 1;
  1294  000834  0E01               	movlw	1
  1295  000836  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1296                           
  1297                           ;MCP3909_Interface.c: 234: unsigned long timerHFout_ms;
  1298                           ;MCP3909_Interface.c: 235: timerHFout_ms = timerGetCount( 0 );
  1299  000838  0E00               	movlw	0
  1300  00083A  6E14               	movwf	timerGetCount@timerIndex+1,c
  1301  00083C  0E00               	movlw	0
  1302  00083E  6E13               	movwf	timerGetCount@timerIndex,c
  1303  000840  EC87  F00E         	call	_timerGetCount	;wreg free
  1304  000844  C013  F02C         	movff	?_timerGetCount,mcpUpdatePower@timerHFout_ms
  1305  000848  C014  F02D         	movff	?_timerGetCount+1,mcpUpdatePower@timerHFout_ms+1
  1306  00084C  C015  F02E         	movff	?_timerGetCount+2,mcpUpdatePower@timerHFout_ms+2
  1307  000850  C016  F02F         	movff	?_timerGetCount+3,mcpUpdatePower@timerHFout_ms+3
  1308                           
  1309                           ;MCP3909_Interface.c: 236: timerResetCount( 0 );
  1310  000854  0E00               	movlw	0
  1311  000856  6E14               	movwf	timerResetCount@timerIndex+1,c
  1312  000858  0E00               	movlw	0
  1313  00085A  6E13               	movwf	timerResetCount@timerIndex,c
  1314  00085C  ECEA  F00E         	call	_timerResetCount	;wreg free
  1315                           
  1316                           ;MCP3909_Interface.c: 237: timerResetCount( 2 );
  1317  000860  0E00               	movlw	0
  1318  000862  6E14               	movwf	timerResetCount@timerIndex+1,c
  1319  000864  0E02               	movlw	2
  1320  000866  6E13               	movwf	timerResetCount@timerIndex,c
  1321  000868  ECEA  F00E         	call	_timerResetCount	;wreg free
  1322                           
  1323                           ;MCP3909_Interface.c: 239: meterWattsHF = powerCalculateWatts( timerHFout_ms, 1 );
  1324  00086C  C02C  F020         	movff	mcpUpdatePower@timerHFout_ms,powerCalculateWatts@timer_ms
  1325  000870  C02D  F021         	movff	mcpUpdatePower@timerHFout_ms+1,powerCalculateWatts@timer_ms+1
  1326  000874  C02E  F022         	movff	mcpUpdatePower@timerHFout_ms+2,powerCalculateWatts@timer_ms+2
  1327  000878  C02F  F023         	movff	mcpUpdatePower@timerHFout_ms+3,powerCalculateWatts@timer_ms+3
  1328  00087C  0E01               	movlw	1
  1329  00087E  6E24               	movwf	powerCalculateWatts@outHF,c
  1330  000880  ECA2  F00B         	call	_powerCalculateWatts	;wreg free
  1331  000884  C020  F045         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsHF
  1332  000888  C021  F046         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsHF+1
  1333                           
  1334                           ;MCP3909_Interface.c: 241: timerHFoutLast_ms = timerHFout_ms;
  1335  00088C  C02C  F070         	movff	mcpUpdatePower@timerHFout_ms,mcpUpdatePower@timerHFoutLast_ms
  1336  000890  C02D  F071         	movff	mcpUpdatePower@timerHFout_ms+1,mcpUpdatePower@timerHFoutLast_ms+1
  1337  000894  C02E  F072         	movff	mcpUpdatePower@timerHFout_ms+2,mcpUpdatePower@timerHFoutLast_ms+2
  1338  000898  C02F  F073         	movff	mcpUpdatePower@timerHFout_ms+3,mcpUpdatePower@timerHFoutLast_ms+3
  1339                           
  1340                           ;MCP3909_Interface.c: 242: }
  1341                           ;MCP3909_Interface.c: 243: }
  1342  00089C  D002               	goto	l524
  1343  00089E                     l522:
  1344                           
  1345                           ;MCP3909_Interface.c: 244: else
  1346                           ;MCP3909_Interface.c: 245: {
  1347                           ;MCP3909_Interface.c: 246: oneShotHFout = 0;
  1348  00089E  0E00               	movlw	0
  1349  0008A0  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1350  0008A2                     l524:
  1351                           
  1352                           ;MCP3909_Interface.c: 247: }
  1353                           ;MCP3909_Interface.c: 251: static int meterWattsLF = 0;
  1354                           ;MCP3909_Interface.c: 253: static bool oneShotLFout = 0;
  1355                           ;MCP3909_Interface.c: 255: if( (PORTAbits.RA2 == 0) || (PORTAbits.RA4 == 0) )
  1356  0008A2  A480               	btfss	3968,2,c	;volatile
  1357  0008A4  D002               	goto	u2900
  1358  0008A6  B880               	btfsc	3968,4,c	;volatile
  1359  0008A8  D058               	goto	l529
  1360  0008AA                     u2900:
  1361                           
  1362                           ;MCP3909_Interface.c: 256: {
  1363                           ;MCP3909_Interface.c: 257: if( oneShotLFout == 0 )
  1364  0008AA  5049               	movf	mcpUpdatePower@oneShotLFout,w,c
  1365  0008AC  A4D8               	btfss	status,2,c
  1366  0008AE  D057               	goto	l536
  1367                           
  1368                           ;MCP3909_Interface.c: 258: {
  1369                           ;MCP3909_Interface.c: 260: ledGoToggle( 1 );
  1370  0008B0  0E00               	movlw	0
  1371  0008B2  6E22               	movwf	ledGoToggle@ledNum+1,c
  1372  0008B4  0E01               	movlw	1
  1373  0008B6  6E21               	movwf	ledGoToggle@ledNum,c
  1374  0008B8  ECCD  F00F         	call	_ledGoToggle	;wreg free
  1375                           
  1376                           ;MCP3909_Interface.c: 262: oneShotLFout = 1;
  1377  0008BC  0E01               	movlw	1
  1378  0008BE  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1379                           
  1380                           ;MCP3909_Interface.c: 264: unsigned long timerLFout_ms;
  1381                           ;MCP3909_Interface.c: 265: timerLFout_ms = timerGetCount( 1 );
  1382  0008C0  0E00               	movlw	0
  1383  0008C2  6E14               	movwf	timerGetCount@timerIndex+1,c
  1384  0008C4  0E01               	movlw	1
  1385  0008C6  6E13               	movwf	timerGetCount@timerIndex,c
  1386  0008C8  EC87  F00E         	call	_timerGetCount	;wreg free
  1387  0008CC  C013  F028         	movff	?_timerGetCount,mcpUpdatePower@timerLFout_ms
  1388  0008D0  C014  F029         	movff	?_timerGetCount+1,mcpUpdatePower@timerLFout_ms+1
  1389  0008D4  C015  F02A         	movff	?_timerGetCount+2,mcpUpdatePower@timerLFout_ms+2
  1390  0008D8  C016  F02B         	movff	?_timerGetCount+3,mcpUpdatePower@timerLFout_ms+3
  1391                           
  1392                           ;MCP3909_Interface.c: 266: timerResetCount( 1 );
  1393  0008DC  0E00               	movlw	0
  1394  0008DE  6E14               	movwf	timerResetCount@timerIndex+1,c
  1395  0008E0  0E01               	movlw	1
  1396  0008E2  6E13               	movwf	timerResetCount@timerIndex,c
  1397  0008E4  ECEA  F00E         	call	_timerResetCount	;wreg free
  1398                           
  1399                           ;MCP3909_Interface.c: 267: timerResetCount( 2 );
  1400  0008E8  0E00               	movlw	0
  1401  0008EA  6E14               	movwf	timerResetCount@timerIndex+1,c
  1402  0008EC  0E02               	movlw	2
  1403  0008EE  6E13               	movwf	timerResetCount@timerIndex,c
  1404  0008F0  ECEA  F00E         	call	_timerResetCount	;wreg free
  1405                           
  1406                           ;MCP3909_Interface.c: 270: meterWattsLF = powerCalculateWatts( timerLFout_ms, 0 );
  1407  0008F4  C028  F020         	movff	mcpUpdatePower@timerLFout_ms,powerCalculateWatts@timer_ms
  1408  0008F8  C029  F021         	movff	mcpUpdatePower@timerLFout_ms+1,powerCalculateWatts@timer_ms+1
  1409  0008FC  C02A  F022         	movff	mcpUpdatePower@timerLFout_ms+2,powerCalculateWatts@timer_ms+2
  1410  000900  C02B  F023         	movff	mcpUpdatePower@timerLFout_ms+3,powerCalculateWatts@timer_ms+3
  1411  000904  0E00               	movlw	0
  1412  000906  6E24               	movwf	powerCalculateWatts@outHF,c
  1413  000908  ECA2  F00B         	call	_powerCalculateWatts	;wreg free
  1414  00090C  C020  F043         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsLF
  1415  000910  C021  F044         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsLF+1
  1416                           
  1417                           ;MCP3909_Interface.c: 273: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1418  000914  0E80               	movlw	128
  1419  000916  0100               	movlb	0	; () banked
  1420  000918  2774               	addwf	_meterEnergyUsedPart& (0+255),f,b
  1421  00091A  0E97               	movlw	151
  1422  00091C  2375               	addwfc	(_meterEnergyUsedPart+1)& (0+255),f,b
  1423  00091E  0E06               	movlw	6
  1424  000920  2376               	addwfc	(_meterEnergyUsedPart+2)& (0+255),f,b
  1425  000922  0E00               	movlw	0
  1426  000924  2377               	addwfc	(_meterEnergyUsedPart+3)& (0+255),f,b
  1427                           
  1428                           ;MCP3909_Interface.c: 274: while( meterEnergyUsedPart > 100000 )
  1429  000926  D00E               	goto	l533
  1430  000928                     l4051:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;MCP3909_Interface.c: 275: {
  1434                           ;MCP3909_Interface.c: 276: meterEnergyUsed_global++;
  1435  000928  0E01               	movlw	1
  1436  00092A  263D               	addwf	_meterEnergyUsed_global,f,c
  1437  00092C  0E00               	movlw	0
  1438  00092E  223E               	addwfc	_meterEnergyUsed_global+1,f,c
  1439  000930  223F               	addwfc	_meterEnergyUsed_global+2,f,c
  1440  000932  2240               	addwfc	_meterEnergyUsed_global+3,f,c
  1441                           
  1442                           ;MCP3909_Interface.c: 277: meterEnergyUsedPart -= 100000;
  1443  000934  0EA0               	movlw	160
  1444  000936  5F74               	subwf	_meterEnergyUsedPart& (0+255),f,b
  1445  000938  0E86               	movlw	134
  1446  00093A  5B75               	subwfb	(_meterEnergyUsedPart+1)& (0+255),f,b
  1447  00093C  0E01               	movlw	1
  1448  00093E  5B76               	subwfb	(_meterEnergyUsedPart+2)& (0+255),f,b
  1449  000940  0E00               	movlw	0
  1450  000942  5B77               	subwfb	(_meterEnergyUsedPart+3)& (0+255),f,b
  1451  000944                     l533:
  1452                           
  1453                           ; BSR set to: 0
  1454  000944  5177               	movf	(_meterEnergyUsedPart+3)& (0+255),w,b
  1455  000946  E1F0               	bnz	l4051
  1456  000948  0EA1               	movlw	161
  1457  00094A  5D74               	subwf	_meterEnergyUsedPart& (0+255),w,b
  1458  00094C  0E86               	movlw	134
  1459  00094E  5975               	subwfb	(_meterEnergyUsedPart+1)& (0+255),w,b
  1460  000950  0E01               	movlw	1
  1461  000952  5976               	subwfb	(_meterEnergyUsedPart+2)& (0+255),w,b
  1462  000954  A0D8               	btfss	status,0,c
  1463  000956  D003               	goto	l536
  1464  000958  D7E7               	goto	l534
  1465  00095A                     l529:
  1466                           
  1467                           ;MCP3909_Interface.c: 281: else
  1468                           ;MCP3909_Interface.c: 282: {
  1469                           ;MCP3909_Interface.c: 283: oneShotLFout = 0;
  1470                           
  1471                           ; BSR set to: 0
  1472  00095A  0E00               	movlw	0
  1473  00095C  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1474  00095E                     l536:
  1475                           
  1476                           ;MCP3909_Interface.c: 284: }
  1477                           ;MCP3909_Interface.c: 294: if( meterWattsLF > 500 )
  1478  00095E  BE44               	btfsc	mcpUpdatePower@meterWattsLF+1,7,c
  1479  000960  D00B               	goto	l537
  1480  000962  0EF5               	movlw	245
  1481  000964  5C43               	subwf	mcpUpdatePower@meterWattsLF,w,c
  1482  000966  0E01               	movlw	1
  1483  000968  5844               	subwfb	mcpUpdatePower@meterWattsLF+1,w,c
  1484  00096A  A0D8               	btfss	status,0,c
  1485  00096C  D005               	goto	l537
  1486                           
  1487                           ;MCP3909_Interface.c: 295: {
  1488                           ;MCP3909_Interface.c: 296: meterWatts_global = meterWattsLF;
  1489  00096E  C043  F078         	movff	mcpUpdatePower@meterWattsLF,_meterWatts_global
  1490  000972  C044  F079         	movff	mcpUpdatePower@meterWattsLF+1,_meterWatts_global+1
  1491  000976  D004               	goto	L2
  1492  000978                     l537:
  1493                           
  1494                           ;MCP3909_Interface.c: 298: else
  1495                           ;MCP3909_Interface.c: 299: {
  1496                           ;MCP3909_Interface.c: 300: meterWatts_global = meterWattsHF;
  1497                           
  1498                           ; BSR set to: 0
  1499  000978  C045  F078         	movff	mcpUpdatePower@meterWattsHF,_meterWatts_global
  1500  00097C  C046  F079         	movff	mcpUpdatePower@meterWattsHF+1,_meterWatts_global+1
  1501  000980                     L2:
  1502  000980  0100               	movlb	0	; () banked
  1503  000982  0E00               	movlw	0
  1504  000984  BF79               	btfsc	(_meterWatts_global+1)& (0+255),7,b
  1505  000986  0EFF               	movlw	-1
  1506  000988  6F7A               	movwf	(_meterWatts_global+2)& (0+255),b
  1507  00098A  6F7B               	movwf	(_meterWatts_global+3)& (0+255),b
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;MCP3909_Interface.c: 301: }
  1511                           ;MCP3909_Interface.c: 304: powerReduction( timerHFoutLast_ms );
  1512                           
  1513                           ; BSR set to: 0
  1514  00098C  C070  F020         	movff	mcpUpdatePower@timerHFoutLast_ms,powerReduction@timerLast_ms
  1515  000990  C071  F021         	movff	mcpUpdatePower@timerHFoutLast_ms+1,powerReduction@timerLast_ms+1
  1516  000994  C072  F022         	movff	mcpUpdatePower@timerHFoutLast_ms+2,powerReduction@timerLast_ms+2
  1517  000998  C073  F023         	movff	mcpUpdatePower@timerHFoutLast_ms+3,powerReduction@timerLast_ms+3
  1518  00099C  EC05  F00A         	call	_powerReduction	;wreg free
  1519  0009A0  0012               	return	
  1520  0009A2                     __end_of_mcpUpdatePower:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _timerResetCount *****************
  1529 ;; Defined at:
  1530 ;;		line 100 in file "Timer.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  timerIndex      2   18[COMRAM] int 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1544 ;;      Params:         2       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0
  1546 ;;      Temps:          2       0       0       0       0       0       0
  1547 ;;      Totals:         4       0       0       0       0       0       0
  1548 ;;Total ram usage:        4 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_mcpUpdatePower
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text3
  1559  001DD4                     __ptext3:
  1560                           	opt stack 0
  1561  001DD4                     _timerResetCount:
  1562                           	opt stack 28
  1563                           
  1564                           ;Timer.c: 102: timerCount_ms[timerIndex] = 0;
  1565                           
  1566                           ;incstack = 0
  1567  001DD4  0E60               	movlw	low _timerCount_ms
  1568  001DD6  6E15               	movwf	??_timerResetCount& (0+255),c
  1569  001DD8  0E00               	movlw	high _timerCount_ms
  1570  001DDA  6E16               	movwf	(??_timerResetCount+1)& (0+255),c
  1571  001DDC  90D8               	bcf	status,0,c
  1572  001DDE  3413               	rlcf	timerResetCount@timerIndex,w,c
  1573  001DE0  6ED9               	movwf	fsr2l,c
  1574  001DE2  3414               	rlcf	timerResetCount@timerIndex+1,w,c
  1575  001DE4  6EDA               	movwf	fsr2h,c
  1576  001DE6  90D8               	bcf	status,0,c
  1577  001DE8  36D9               	rlcf	fsr2l,f,c
  1578  001DEA  36DA               	rlcf	fsr2h,f,c
  1579  001DEC  5015               	movf	??_timerResetCount,w,c
  1580  001DEE  26D9               	addwf	fsr2l,f,c
  1581  001DF0  5016               	movf	??_timerResetCount+1,w,c
  1582  001DF2  22DA               	addwfc	fsr2h,f,c
  1583  001DF4  6ADE               	clrf	postinc2,c
  1584  001DF6  6ADE               	clrf	postinc2,c
  1585  001DF8  6ADE               	clrf	postinc2,c
  1586  001DFA  6ADD               	clrf	postdec2,c
  1587  001DFC  0012               	return	
  1588  001DFE                     __end_of_timerResetCount:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           intcon	equ	0xFF2
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postinc2	equ	0xFDE
  1595                           postdec2	equ	0xFDD
  1596                           fsr2h	equ	0xFDA
  1597                           fsr2l	equ	0xFD9
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _powerReduction *****************
  1601 ;; Defined at:
  1602 ;;		line 331 in file "MCP3909_Interface.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  timerLast_ms    4   31[COMRAM] unsigned long 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  timerReduce_    4   35[COMRAM] unsigned long 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1616 ;;      Params:         4       0       0       0       0       0       0
  1617 ;;      Locals:         4       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0
  1619 ;;      Totals:         8       0       0       0       0       0       0
  1620 ;;Total ram usage:        8 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    2
  1623 ;; This function calls:
  1624 ;;		___lldiv
  1625 ;;		_timerGetCount
  1626 ;; This function is called by:
  1627 ;;		_mcpUpdatePower
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text4
  1632  00140A                     __ptext4:
  1633                           	opt stack 0
  1634  00140A                     _powerReduction:
  1635                           	opt stack 27
  1636                           
  1637                           ;MCP3909_Interface.c: 340: unsigned long timerReduce_ms;
  1638                           ;MCP3909_Interface.c: 341: static int countReduce = 0;
  1639                           ;MCP3909_Interface.c: 343: timerReduce_ms = timerGetCount( 2 );
  1640                           
  1641                           ;incstack = 0
  1642  00140A  0E00               	movlw	0
  1643  00140C  6E14               	movwf	timerGetCount@timerIndex+1,c
  1644  00140E  0E02               	movlw	2
  1645  001410  6E13               	movwf	timerGetCount@timerIndex,c
  1646  001412  EC87  F00E         	call	_timerGetCount	;wreg free
  1647  001416  C013  F024         	movff	?_timerGetCount,powerReduction@timerReduce_ms
  1648  00141A  C014  F025         	movff	?_timerGetCount+1,powerReduction@timerReduce_ms+1
  1649  00141E  C015  F026         	movff	?_timerGetCount+2,powerReduction@timerReduce_ms+2
  1650  001422  C016  F027         	movff	?_timerGetCount+3,powerReduction@timerReduce_ms+3
  1651                           
  1652                           ;MCP3909_Interface.c: 345: if( (timerReduce_ms > 90000) || (timerLast_ms == 0) )
  1653  001426  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1654  001428  E10E               	bnz	l3981
  1655  00142A  0E91               	movlw	145
  1656  00142C  5C24               	subwf	powerReduction@timerReduce_ms,w,c
  1657  00142E  0E5F               	movlw	95
  1658  001430  5825               	subwfb	powerReduction@timerReduce_ms+1,w,c
  1659  001432  0E01               	movlw	1
  1660  001434  5826               	subwfb	powerReduction@timerReduce_ms+2,w,c
  1661  001436  B0D8               	btfsc	status,0,c
  1662  001438  D006               	goto	u2850
  1663  00143A  5020               	movf	powerReduction@timerLast_ms,w,c
  1664  00143C  1021               	iorwf	powerReduction@timerLast_ms+1,w,c
  1665  00143E  1022               	iorwf	powerReduction@timerLast_ms+2,w,c
  1666  001440  1023               	iorwf	powerReduction@timerLast_ms+3,w,c
  1667  001442  A4D8               	btfss	status,2,c
  1668  001444  D00A               	goto	l549
  1669  001446                     u2850:
  1670  001446                     l3981:
  1671                           
  1672                           ;MCP3909_Interface.c: 346: {
  1673                           ;MCP3909_Interface.c: 347: meterWatts_global = 0;
  1674  001446  0E00               	movlw	0
  1675  001448  0100               	movlb	0	; () banked
  1676  00144A  6F78               	movwf	_meterWatts_global& (0+255),b
  1677  00144C  0E00               	movlw	0
  1678  00144E  6F79               	movwf	(_meterWatts_global+1)& (0+255),b
  1679  001450  0E00               	movlw	0
  1680  001452  6F7A               	movwf	(_meterWatts_global+2)& (0+255),b
  1681  001454  0E00               	movlw	0
  1682  001456  6F7B               	movwf	(_meterWatts_global+3)& (0+255),b
  1683                           
  1684                           ;MCP3909_Interface.c: 348: }
  1685  001458  0012               	return	
  1686  00145A                     l549:
  1687                           
  1688                           ;MCP3909_Interface.c: 349: else if( timerReduce_ms > timerLast_ms )
  1689                           
  1690                           ; BSR set to: 0
  1691  00145A  5024               	movf	powerReduction@timerReduce_ms,w,c
  1692  00145C  5C20               	subwf	powerReduction@timerLast_ms,w,c
  1693  00145E  5025               	movf	powerReduction@timerReduce_ms+1,w,c
  1694  001460  5821               	subwfb	powerReduction@timerLast_ms+1,w,c
  1695  001462  5026               	movf	powerReduction@timerReduce_ms+2,w,c
  1696  001464  5822               	subwfb	powerReduction@timerLast_ms+2,w,c
  1697  001466  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1698  001468  5823               	subwfb	powerReduction@timerLast_ms+3,w,c
  1699  00146A  B0D8               	btfsc	status,0,c
  1700  00146C  0012               	return	
  1701                           
  1702                           ;MCP3909_Interface.c: 350: {
  1703                           ;MCP3909_Interface.c: 351: meterWatts_global = (((((unsigned long) 27000 * (unsigned lon
      +                          g) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (uns
      +                          igned long) timerReduce_ms;
  1704  00146E  0EE0               	movlw	224
  1705  001470  6E13               	movwf	___lldiv@dividend,c
  1706  001472  0ED4               	movlw	212
  1707  001474  6E14               	movwf	___lldiv@dividend+1,c
  1708  001476  0E0E               	movlw	14
  1709  001478  6E15               	movwf	___lldiv@dividend+2,c
  1710  00147A  0E00               	movlw	0
  1711  00147C  6E16               	movwf	___lldiv@dividend+3,c
  1712  00147E  C024  F017         	movff	powerReduction@timerReduce_ms,___lldiv@divisor
  1713  001482  C025  F018         	movff	powerReduction@timerReduce_ms+1,___lldiv@divisor+1
  1714  001486  C026  F019         	movff	powerReduction@timerReduce_ms+2,___lldiv@divisor+2
  1715  00148A  C027  F01A         	movff	powerReduction@timerReduce_ms+3,___lldiv@divisor+3
  1716  00148E  EC26  F00B         	call	___lldiv	;wreg free
  1717  001492  C013  F078         	movff	?___lldiv,_meterWatts_global
  1718  001496  C014  F079         	movff	?___lldiv+1,_meterWatts_global+1
  1719  00149A  C015  F07A         	movff	?___lldiv+2,_meterWatts_global+2
  1720  00149E  C016  F07B         	movff	?___lldiv+3,_meterWatts_global+3
  1721  0014A2  0012               	return	
  1722  0014A4                     __end_of_powerReduction:
  1723                           	opt stack 0
  1724                           tblptru	equ	0xFF8
  1725                           intcon	equ	0xFF2
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postinc2	equ	0xFDE
  1729                           postdec2	equ	0xFDD
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _timerGetCount *****************
  1735 ;; Defined at:
  1736 ;;		line 95 in file "Timer.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  timerIndex      2   18[COMRAM] int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  4   18[COMRAM] unsigned long 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1750 ;;      Params:         4       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0
  1752 ;;      Temps:          2       0       0       0       0       0       0
  1753 ;;      Totals:         6       0       0       0       0       0       0
  1754 ;;Total ram usage:        6 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;;		_mcpUpdatePower
  1762 ;;		_powerReduction
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text5
  1767  001D0E                     __ptext5:
  1768                           	opt stack 0
  1769  001D0E                     _timerGetCount:
  1770                           	opt stack 29
  1771                           
  1772                           ;Timer.c: 97: return timerCount_ms[timerIndex];
  1773                           
  1774                           ;incstack = 0
  1775  001D0E  0E60               	movlw	low _timerCount_ms
  1776  001D10  6E17               	movwf	??_timerGetCount& (0+255),c
  1777  001D12  0E00               	movlw	high _timerCount_ms
  1778  001D14  6E18               	movwf	(??_timerGetCount+1)& (0+255),c
  1779  001D16  90D8               	bcf	status,0,c
  1780  001D18  3413               	rlcf	timerGetCount@timerIndex,w,c
  1781  001D1A  6ED9               	movwf	fsr2l,c
  1782  001D1C  3414               	rlcf	timerGetCount@timerIndex+1,w,c
  1783  001D1E  6EDA               	movwf	fsr2h,c
  1784  001D20  90D8               	bcf	status,0,c
  1785  001D22  36D9               	rlcf	fsr2l,f,c
  1786  001D24  36DA               	rlcf	fsr2h,f,c
  1787  001D26  5017               	movf	??_timerGetCount,w,c
  1788  001D28  26D9               	addwf	fsr2l,f,c
  1789  001D2A  5018               	movf	??_timerGetCount+1,w,c
  1790  001D2C  22DA               	addwfc	fsr2h,f,c
  1791  001D2E  CFDE F013          	movff	postinc2,?_timerGetCount
  1792  001D32  CFDE F014          	movff	postinc2,?_timerGetCount+1
  1793  001D36  CFDE F015          	movff	postinc2,?_timerGetCount+2
  1794  001D3A  CFDE F016          	movff	postinc2,?_timerGetCount+3
  1795  001D3E  0012               	return	
  1796  001D40                     __end_of_timerGetCount:
  1797                           	opt stack 0
  1798                           tblptru	equ	0xFF8
  1799                           intcon	equ	0xFF2
  1800                           postinc0	equ	0xFEE
  1801                           wreg	equ	0xFE8
  1802                           postinc2	equ	0xFDE
  1803                           postdec2	equ	0xFDD
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function _powerCalculateWatts *****************
  1809 ;; Defined at:
  1810 ;;		line 309 in file "MCP3909_Interface.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  timer_ms        4   31[COMRAM] unsigned long 
  1813 ;;  outHF           1   35[COMRAM] unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  calcWatts       2   36[COMRAM] int 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  4   31[COMRAM] unsigned long 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1825 ;;      Params:         5       0       0       0       0       0       0
  1826 ;;      Locals:         2       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0
  1828 ;;      Totals:         7       0       0       0       0       0       0
  1829 ;;Total ram usage:        7 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		___lldiv
  1834 ;; This function is called by:
  1835 ;;		_mcpUpdatePower
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text6
  1840  001744                     __ptext6:
  1841                           	opt stack 0
  1842  001744                     _powerCalculateWatts:
  1843                           	opt stack 27
  1844                           
  1845                           ;MCP3909_Interface.c: 315: int calcWatts;
  1846                           ;MCP3909_Interface.c: 317: if( outHF == 1 )
  1847                           
  1848                           ;incstack = 0
  1849  001744  0424               	decf	powerCalculateWatts@outHF,w,c
  1850  001746  A4D8               	btfss	status,2,c
  1851  001748  D013               	goto	l542
  1852                           
  1853                           ;MCP3909_Interface.c: 318: {
  1854                           ;MCP3909_Interface.c: 320: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1855  00174A  0EE0               	movlw	224
  1856  00174C  6E13               	movwf	___lldiv@dividend,c
  1857  00174E  0ED4               	movlw	212
  1858  001750  6E14               	movwf	___lldiv@dividend+1,c
  1859  001752  0E0E               	movlw	14
  1860  001754  6E15               	movwf	___lldiv@dividend+2,c
  1861  001756  0E00               	movlw	0
  1862  001758  6E16               	movwf	___lldiv@dividend+3,c
  1863  00175A  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1864  00175E  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1865  001762  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1866  001766  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1867  00176A  EC26  F00B         	call	___lldiv	;wreg free
  1868  00176E  D012               	goto	L3
  1869  001770                     l542:
  1870                           
  1871                           ;MCP3909_Interface.c: 322: else
  1872                           ;MCP3909_Interface.c: 323: {
  1873                           ;MCP3909_Interface.c: 325: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1874  001770  0EE0               	movlw	224
  1875  001772  6E13               	movwf	___lldiv@dividend,c
  1876  001774  0ED4               	movlw	212
  1877  001776  6E14               	movwf	___lldiv@dividend+1,c
  1878  001778  0E0E               	movlw	14
  1879  00177A  6E15               	movwf	___lldiv@dividend+2,c
  1880  00177C  0E00               	movlw	0
  1881  00177E  6E16               	movwf	___lldiv@dividend+3,c
  1882  001780  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1883  001784  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1884  001788  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1885  00178C  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1886  001790  EC26  F00B         	call	___lldiv	;wreg free
  1887  001794                     L3:
  1888  001794  C013  F025         	movff	?___lldiv,powerCalculateWatts@calcWatts
  1889  001798  C014  F026         	movff	?___lldiv+1,powerCalculateWatts@calcWatts+1
  1890                           
  1891                           ;MCP3909_Interface.c: 326: }
  1892                           ;MCP3909_Interface.c: 328: return calcWatts;
  1893  00179C  C025  F020         	movff	powerCalculateWatts@calcWatts,?_powerCalculateWatts
  1894  0017A0  C026  F021         	movff	powerCalculateWatts@calcWatts+1,?_powerCalculateWatts+1
  1895  0017A4  0E00               	movlw	0
  1896  0017A6  BE21               	btfsc	?_powerCalculateWatts+1,7,c
  1897  0017A8  0EFF               	movlw	-1
  1898  0017AA  6E22               	movwf	?_powerCalculateWatts+2,c
  1899  0017AC  6E23               	movwf	?_powerCalculateWatts+3,c
  1900  0017AE  0012               	return	
  1901  0017B0                     __end_of_powerCalculateWatts:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postinc2	equ	0xFDE
  1908                           postdec2	equ	0xFDD
  1909                           fsr2h	equ	0xFDA
  1910                           fsr2l	equ	0xFD9
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _ledGoToggle *****************
  1914 ;; Defined at:
  1915 ;;		line 286 in file "LEDControl.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  ledNum          2   32[COMRAM] int 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1929 ;;      Params:         2       0       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0
  1932 ;;      Totals:         2       0       0       0       0       0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    3
  1936 ;; This function calls:
  1937 ;;		_ledToggle
  1938 ;; This function is called by:
  1939 ;;		_mcpUpdatePower
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text7
  1944  001F9A                     __ptext7:
  1945                           	opt stack 0
  1946  001F9A                     _ledGoToggle:
  1947                           	opt stack 26
  1948                           
  1949                           ;LEDControl.c: 288: if( 1 != 1 )
  1950                           
  1951                           ;incstack = 0
  1952  001F9A  0012               	return	
  1953  001F9C                     __end_of_ledGoToggle:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           intcon	equ	0xFF2
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           postinc2	equ	0xFDE
  1960                           postdec2	equ	0xFDD
  1961                           fsr2h	equ	0xFDA
  1962                           fsr2l	equ	0xFD9
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _mcpInit *****************
  1966 ;; Defined at:
  1967 ;;		line 155 in file "MCP3909_Interface.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    3
  1988 ;; This function calls:
  1989 ;;		_delayMS10
  1990 ;;		_mcpInitF
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text8
  1997  001DFE                     __ptext8:
  1998                           	opt stack 0
  1999  001DFE                     _mcpInit:
  2000                           	opt stack 27
  2001                           
  2002                           ;MCP3909_Interface.c: 157: TRISAbits.TRISA3 = 1;
  2003                           
  2004                           ;incstack = 0
  2005  001DFE  8692               	bsf	3986,3,c	;volatile
  2006                           
  2007                           ;MCP3909_Interface.c: 158: TRISAbits.TRISA2 = 1;
  2008  001E00  8492               	bsf	3986,2,c	;volatile
  2009                           
  2010                           ;MCP3909_Interface.c: 159: TRISAbits.TRISA4 = 1;
  2011  001E02  8892               	bsf	3986,4,c	;volatile
  2012                           
  2013                           ;MCP3909_Interface.c: 161: meterEnergyUsedPart = 0;
  2014  001E04  0E00               	movlw	0
  2015  001E06  0100               	movlb	0	; () banked
  2016  001E08  6F74               	movwf	_meterEnergyUsedPart& (0+255),b
  2017  001E0A  0E00               	movlw	0
  2018  001E0C  6F75               	movwf	(_meterEnergyUsedPart+1)& (0+255),b
  2019  001E0E  0E00               	movlw	0
  2020  001E10  6F76               	movwf	(_meterEnergyUsedPart+2)& (0+255),b
  2021  001E12  0E00               	movlw	0
  2022  001E14  6F77               	movwf	(_meterEnergyUsedPart+3)& (0+255),b
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;MCP3909_Interface.c: 163: delayMS10( 100 );
  2026  001E16  0E00               	movlw	0
  2027  001E18  6E14               	movwf	delayMS10@count+1,c
  2028  001E1A  0E64               	movlw	100
  2029  001E1C  6E13               	movwf	delayMS10@count,c
  2030  001E1E  ECA0  F00E         	call	_delayMS10	;wreg free
  2031                           
  2032                           ;MCP3909_Interface.c: 165: mcpInitF( );
  2033  001E22  ECD8  F00B         	call	_mcpInitF	;wreg free
  2034  001E26  0012               	return	
  2035  001E28                     __end_of_mcpInit:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           intcon	equ	0xFF2
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postinc2	equ	0xFDE
  2042                           postdec2	equ	0xFDD
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           
  2047 ;; *************** function _mcpInitF *****************
  2048 ;; Defined at:
  2049 ;;		line 170 in file "MCP3909_Interface.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2063 ;;      Params:         0       0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0
  2065 ;;      Temps:          1       0       0       0       0       0       0
  2066 ;;      Totals:         1       0       0       0       0       0       0
  2067 ;;Total ram usage:        1 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    2
  2070 ;; This function calls:
  2071 ;;		_delayMS10
  2072 ;; This function is called by:
  2073 ;;		_mcpInit
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text9
  2078  0017B0                     __ptext9:
  2079                           	opt stack 0
  2080  0017B0                     _mcpInitF:
  2081                           	opt stack 27
  2082                           
  2083                           ;MCP3909_Interface.c: 175: TRISCbits.TRISC6 = 0;
  2084                           
  2085                           ;incstack = 0
  2086  0017B0  9C94               	bcf	3988,6,c	;volatile
  2087                           
  2088                           ;MCP3909_Interface.c: 176: TRISCbits.TRISC7 = 0;
  2089  0017B2  9E94               	bcf	3988,7,c	;volatile
  2090                           
  2091                           ;MCP3909_Interface.c: 177: TRISCbits.TRISC4 = 0;
  2092  0017B4  9894               	bcf	3988,4,c	;volatile
  2093                           
  2094                           ;MCP3909_Interface.c: 178: TRISCbits.TRISC3 = 0;
  2095  0017B6  9694               	bcf	3988,3,c	;volatile
  2096                           
  2097                           ;MCP3909_Interface.c: 181: LATCbits.LC7 = 0;
  2098  0017B8  9E8B               	bcf	3979,7,c	;volatile
  2099                           
  2100                           ;MCP3909_Interface.c: 182: LATCbits.LC4 = 0;
  2101  0017BA  988B               	bcf	3979,4,c	;volatile
  2102                           
  2103                           ;MCP3909_Interface.c: 183: LATCbits.LC4 = 0;
  2104  0017BC  988B               	bcf	3979,4,c	;volatile
  2105                           
  2106                           ;MCP3909_Interface.c: 185: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2107  0017BE  0E1A               	movlw	26
  2108  0017C0  6E18               	movwf	??_mcpInitF& (0+255),c
  2109  0017C2  0EF8               	movlw	248
  2110  0017C4                     u3007:
  2111  0017C4  2EE8               	decfsz	wreg,f,c
  2112  0017C6  D7FE               	bra	u3007
  2113  0017C8  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2114  0017CA  D7FC               	bra	u3007
  2115  0017CC  D000               	nop2	
  2116                           
  2117                           ;MCP3909_Interface.c: 186: LATCbits.LATC6 = 0;
  2118  0017CE  9C8B               	bcf	3979,6,c	;volatile
  2119                           
  2120                           ;MCP3909_Interface.c: 187: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2121  0017D0  0E1A               	movlw	26
  2122  0017D2  6E18               	movwf	??_mcpInitF& (0+255),c
  2123  0017D4  0EF8               	movlw	248
  2124  0017D6                     u3017:
  2125  0017D6  2EE8               	decfsz	wreg,f,c
  2126  0017D8  D7FE               	bra	u3017
  2127  0017DA  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2128  0017DC  D7FC               	bra	u3017
  2129  0017DE  D000               	nop2	
  2130                           
  2131                           ;MCP3909_Interface.c: 189: LATCbits.LC7 = 0;
  2132  0017E0  9E8B               	bcf	3979,7,c	;volatile
  2133                           
  2134                           ;MCP3909_Interface.c: 190: LATCbits.LC4 = 0;
  2135  0017E2  988B               	bcf	3979,4,c	;volatile
  2136                           
  2137                           ;MCP3909_Interface.c: 191: LATCbits.LC4 = 0;
  2138  0017E4  988B               	bcf	3979,4,c	;volatile
  2139                           
  2140                           ;MCP3909_Interface.c: 193: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2141  0017E6  0E1A               	movlw	26
  2142  0017E8  6E18               	movwf	??_mcpInitF& (0+255),c
  2143  0017EA  0EF8               	movlw	248
  2144  0017EC                     u3027:
  2145  0017EC  2EE8               	decfsz	wreg,f,c
  2146  0017EE  D7FE               	bra	u3027
  2147  0017F0  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2148  0017F2  D7FC               	bra	u3027
  2149  0017F4  D000               	nop2	
  2150                           
  2151                           ;MCP3909_Interface.c: 195: LATCbits.LC7 = 1;
  2152  0017F6  8E8B               	bsf	3979,7,c	;volatile
  2153                           
  2154                           ;MCP3909_Interface.c: 196: LATCbits.LC4 = 1;
  2155  0017F8  888B               	bsf	3979,4,c	;volatile
  2156                           
  2157                           ;MCP3909_Interface.c: 197: LATCbits.LC4 = 1;
  2158  0017FA  888B               	bsf	3979,4,c	;volatile
  2159                           
  2160                           ;MCP3909_Interface.c: 199: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2161  0017FC  0E1A               	movlw	26
  2162  0017FE  6E18               	movwf	??_mcpInitF& (0+255),c
  2163  001800  0EF8               	movlw	248
  2164  001802                     u3037:
  2165  001802  2EE8               	decfsz	wreg,f,c
  2166  001804  D7FE               	bra	u3037
  2167  001806  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2168  001808  D7FC               	bra	u3037
  2169  00180A  D000               	nop2	
  2170                           
  2171                           ;MCP3909_Interface.c: 200: LATCbits.LATC6 = 1;
  2172  00180C  8C8B               	bsf	3979,6,c	;volatile
  2173                           
  2174                           ;MCP3909_Interface.c: 201: delayMS10( 10 );
  2175  00180E  0E00               	movlw	0
  2176  001810  6E14               	movwf	delayMS10@count+1,c
  2177  001812  0E0A               	movlw	10
  2178  001814  6E13               	movwf	delayMS10@count,c
  2179  001816  ECA0  F00E         	call	_delayMS10	;wreg free
  2180  00181A  0012               	return	
  2181  00181C                     __end_of_mcpInitF:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           intcon	equ	0xFF2
  2185                           postinc0	equ	0xFEE
  2186                           wreg	equ	0xFE8
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _ledTestToggle *****************
  2194 ;; Defined at:
  2195 ;;		line 276 in file "LEDControl.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  ledNum          2   32[COMRAM] int 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2209 ;;      Params:         2       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0
  2212 ;;      Totals:         2       0       0       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    3
  2216 ;; This function calls:
  2217 ;;		_ledToggle
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text10
  2224  001F70                     __ptext10:
  2225                           	opt stack 0
  2226  001F70                     _ledTestToggle:
  2227                           	opt stack 27
  2228                           
  2229                           ;LEDControl.c: 279: {
  2230                           ;LEDControl.c: 280: ledToggle( ledNum );
  2231                           
  2232                           ;incstack = 0
  2233  001F70  C021  F019         	movff	ledTestToggle@ledNum,ledToggle@ledNum
  2234  001F74  C022  F01A         	movff	ledTestToggle@ledNum+1,ledToggle@ledNum+1
  2235  001F78  EC67  F00B         	call	_ledToggle	;wreg free
  2236  001F7C  0012               	return	
  2237  001F7E                     __end_of_ledTestToggle:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           intcon	equ	0xFF2
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postinc2	equ	0xFDE
  2244                           postdec2	equ	0xFDD
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _ledToggle *****************
  2250 ;; Defined at:
  2251 ;;		line 243 in file "LEDControl.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  ledNum          2   24[COMRAM] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  getValue        2   30[COMRAM] int 
  2256 ;;  setValue        2   28[COMRAM] int 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2266 ;;      Params:         2       0       0       0       0       0       0
  2267 ;;      Locals:         4       0       0       0       0       0       0
  2268 ;;      Temps:          2       0       0       0       0       0       0
  2269 ;;      Totals:         8       0       0       0       0       0       0
  2270 ;;Total ram usage:        8 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    2
  2273 ;; This function calls:
  2274 ;;		_ledSet
  2275 ;; This function is called by:
  2276 ;;		_ledTestToggle
  2277 ;;		_ledGoToggle
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text11
  2282  0016CE                     __ptext11:
  2283                           	opt stack 0
  2284  0016CE                     _ledToggle:
  2285                           	opt stack 26
  2286                           
  2287                           ;LEDControl.c: 246: int getValue;
  2288                           ;LEDControl.c: 247: int setValue;
  2289                           ;LEDControl.c: 249: switch( ledNum )
  2290                           
  2291                           ;incstack = 0
  2292  0016CE  D011               	goto	l85
  2293  0016D0                     
  2294                           ;LEDControl.c: 252: getValue = PORTBbits.RB4;
  2295  0016D0  A881               	btfss	3969,4,c	;volatile
  2296  0016D2  D00D               	goto	u1780
  2297  0016D4  D009               	goto	u1781
  2298  0016D6                     u1768:
  2299  0016D6  501B               	movf	??_ledToggle,w,c
  2300  0016D8  6E1F               	movwf	ledToggle@getValue,c
  2301  0016DA  6A20               	clrf	ledToggle@getValue+1,c
  2302                           
  2303                           ;LEDControl.c: 253: break;
  2304  0016DC  D01C               	goto	l87
  2305  0016DE                     
  2306                           ;LEDControl.c: 255: getValue = PORTCbits.RC1;
  2307  0016DE  A282               	btfss	3970,1,c	;volatile
  2308  0016E0  D006               	goto	u1780
  2309  0016E2  D002               	goto	u1781
  2310  0016E4                     
  2311                           ;LEDControl.c: 258: getValue = PORTCbits.RC0;
  2312  0016E4  A082               	btfss	3970,0,c	;volatile
  2313  0016E6  D003               	goto	u1780
  2314  0016E8                     u1781:
  2315  0016E8  6A1B               	clrf	??_ledToggle& (0+255),c
  2316  0016EA  2A1B               	incf	??_ledToggle& (0+255),f,c
  2317  0016EC  D7F4               	goto	u1768
  2318  0016EE                     u1780:
  2319  0016EE  6A1B               	clrf	??_ledToggle& (0+255),c
  2320  0016F0  D7F2               	goto	u1768
  2321  0016F2                     l85:
  2322  0016F2  C019  F01B         	movff	ledToggle@ledNum,??_ledToggle
  2323  0016F6  C01A  F01C         	movff	ledToggle@ledNum+1,??_ledToggle+1
  2324                           
  2325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2326                           ; Switch size 1, requested type "space"
  2327                           ; Number of cases is 1, Range of values is 0 to 0
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte            4     3 (average)
  2331                           ;	Chosen strategy is simple_byte
  2332  0016FA  501C               	movf	??_ledToggle+1,w,c
  2333  0016FC  0A00               	xorlw	0	; case 0
  2334  0016FE  A4D8               	btfss	status,2,c
  2335  001700  D00A               	goto	l87
  2336                           
  2337                           ; Switch size 1, requested type "space"
  2338                           ; Number of cases is 3, Range of values is 1 to 3
  2339                           ; switch strategies available:
  2340                           ; Name         Instructions Cycles
  2341                           ; simple_byte           10     6 (average)
  2342                           ;	Chosen strategy is simple_byte
  2343  001702  501B               	movf	??_ledToggle,w,c
  2344  001704  0A01               	xorlw	1	; case 1
  2345  001706  B4D8               	btfsc	status,2,c
  2346  001708  D7E3               	goto	l86
  2347  00170A  0A03               	xorlw	3	; case 2
  2348  00170C  B4D8               	btfsc	status,2,c
  2349  00170E  D7E7               	goto	l88
  2350  001710  0A01               	xorlw	1	; case 3
  2351  001712  B4D8               	btfsc	status,2,c
  2352  001714  D7E7               	goto	l89
  2353  001716                     l87:
  2354                           
  2355                           ;LEDControl.c: 262: if( getValue == 0 )
  2356  001716  501F               	movf	ledToggle@getValue,w,c
  2357  001718  1020               	iorwf	ledToggle@getValue+1,w,c
  2358  00171A  A4D8               	btfss	status,2,c
  2359  00171C  D004               	goto	l90
  2360                           
  2361                           ;LEDControl.c: 263: {
  2362                           ;LEDControl.c: 264: setValue = 1;
  2363  00171E  0E00               	movlw	0
  2364  001720  6E1E               	movwf	ledToggle@setValue+1,c
  2365  001722  0E01               	movlw	1
  2366  001724  D003               	goto	L4
  2367  001726                     l90:
  2368                           
  2369                           ;LEDControl.c: 266: else
  2370                           ;LEDControl.c: 267: {
  2371                           ;LEDControl.c: 268: setValue = 0;
  2372  001726  0E00               	movlw	0
  2373  001728  6E1E               	movwf	ledToggle@setValue+1,c
  2374  00172A  0E00               	movlw	0
  2375  00172C                     L4:
  2376  00172C  6E1D               	movwf	ledToggle@setValue,c
  2377                           
  2378                           ;LEDControl.c: 269: }
  2379                           ;LEDControl.c: 271: ledSet( ledNum, setValue );
  2380  00172E  C019  F013         	movff	ledToggle@ledNum,ledSet@ledNum
  2381  001732  C01A  F014         	movff	ledToggle@ledNum+1,ledSet@ledNum+1
  2382  001736  C01D  F015         	movff	ledToggle@setValue,ledSet@setValue
  2383  00173A  C01E  F016         	movff	ledToggle@setValue+1,ledSet@setValue+1
  2384  00173E  EC53  F00D         	call	_ledSet	;wreg free
  2385  001742  0012               	return	
  2386  001744                     __end_of_ledToggle:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           intcon	equ	0xFF2
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           postinc2	equ	0xFDE
  2393                           postdec2	equ	0xFDD
  2394                           fsr2h	equ	0xFDA
  2395                           fsr2l	equ	0xFD9
  2396                           status	equ	0xFD8
  2397                           
  2398 ;; *************** function _ledSetAllOn *****************
  2399 ;; Defined at:
  2400 ;;		line 187 in file "LEDControl.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         0       0       0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    3
  2421 ;; This function calls:
  2422 ;;		_ledSetAll
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;;		_ledTestSetAllOn
  2426 ;;		_ledGoSetAllOn
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text12
  2431  001EBC                     __ptext12:
  2432                           	opt stack 0
  2433  001EBC                     _ledSetAllOn:
  2434                           	opt stack 27
  2435                           
  2436                           ;LEDControl.c: 189: ledSetAll( 1, 1, 1 );
  2437                           
  2438                           ;incstack = 0
  2439  001EBC  0E00               	movlw	0
  2440  001EBE  6E1A               	movwf	ledSetAll@led1Value+1,c
  2441  001EC0  0E01               	movlw	1
  2442  001EC2  6E19               	movwf	ledSetAll@led1Value,c
  2443  001EC4  0E00               	movlw	0
  2444  001EC6  6E1C               	movwf	ledSetAll@led2Value+1,c
  2445  001EC8  0E01               	movlw	1
  2446  001ECA  6E1B               	movwf	ledSetAll@led2Value,c
  2447  001ECC  0E00               	movlw	0
  2448  001ECE  6E1E               	movwf	ledSetAll@led3Value+1,c
  2449  001ED0  0E01               	movlw	1
  2450  001ED2  6E1D               	movwf	ledSetAll@led3Value,c
  2451  001ED4  EC4F  F00E         	call	_ledSetAll	;wreg free
  2452  001ED8  0012               	return	
  2453  001EDA                     __end_of_ledSetAllOn:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           intcon	equ	0xFF2
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _ledRun *****************
  2466 ;; Defined at:
  2467 ;;		line 334 in file "LEDControl.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  ledRunDelay     2   34[COMRAM] int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2481 ;;      Params:         2       0       0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0
  2484 ;;      Totals:         2       0       0       0       0       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    4
  2488 ;; This function calls:
  2489 ;;		_ledRunDown
  2490 ;;		_ledRunUp
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text13
  2497  001F16                     __ptext13:
  2498                           	opt stack 0
  2499  001F16                     _ledRun:
  2500                           	opt stack 26
  2501                           
  2502                           ;LEDControl.c: 336: ledRunUp( ledRunDelay );
  2503                           
  2504                           ;incstack = 0
  2505  001F16  C023  F01F         	movff	ledRun@ledRunDelay,ledRunUp@ledRunDelay
  2506  001F1A  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunUp@ledRunDelay+1
  2507  001F1E  EC55  F008         	call	_ledRunUp	;wreg free
  2508                           
  2509                           ;LEDControl.c: 337: ledRunDown( ledRunDelay );
  2510  001F22  C023  F01F         	movff	ledRun@ledRunDelay,ledRunDown@ledRunDelay
  2511  001F26  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunDown@ledRunDelay+1
  2512  001F2A  ECB4  F008         	call	_ledRunDown	;wreg free
  2513  001F2E  0012               	return	
  2514  001F30                     __end_of_ledRun:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postinc2	equ	0xFDE
  2521                           postdec2	equ	0xFDD
  2522                           fsr2h	equ	0xFDA
  2523                           fsr2l	equ	0xFD9
  2524                           status	equ	0xFD8
  2525                           
  2526 ;; *************** function _ledRunUp *****************
  2527 ;; Defined at:
  2528 ;;		line 296 in file "LEDControl.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  ledRunDelay     2   30[COMRAM] int 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  delay10ms       2   32[COMRAM] int 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2542 ;;      Params:         2       0       0       0       0       0       0
  2543 ;;      Locals:         2       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0
  2545 ;;      Totals:         4       0       0       0       0       0       0
  2546 ;;Total ram usage:        4 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    3
  2549 ;; This function calls:
  2550 ;;		___awdiv
  2551 ;;		_delayMS10
  2552 ;;		_ledSetAll
  2553 ;; This function is called by:
  2554 ;;		_ledRun
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text14
  2559  0010AA                     __ptext14:
  2560                           	opt stack 0
  2561  0010AA                     _ledRunUp:
  2562                           	opt stack 26
  2563                           
  2564                           ;LEDControl.c: 299: int delay10ms;
  2565                           ;LEDControl.c: 300: delay10ms = ledRunDelay / 10;
  2566                           
  2567                           ;incstack = 0
  2568  0010AA  C01F  F013         	movff	ledRunUp@ledRunDelay,___awdiv@dividend
  2569  0010AE  C020  F014         	movff	ledRunUp@ledRunDelay+1,___awdiv@dividend+1
  2570  0010B2  0E00               	movlw	0
  2571  0010B4  6E16               	movwf	___awdiv@divisor+1,c
  2572  0010B6  0E0A               	movlw	10
  2573  0010B8  6E15               	movwf	___awdiv@divisor,c
  2574  0010BA  ECE4  F00A         	call	___awdiv	;wreg free
  2575  0010BE  C013  F021         	movff	?___awdiv,ledRunUp@delay10ms
  2576  0010C2  C014  F022         	movff	?___awdiv+1,ledRunUp@delay10ms+1
  2577                           
  2578                           ;LEDControl.c: 304: ledSetAll( 0, 0, 0 );
  2579  0010C6  0E00               	movlw	0
  2580  0010C8  6E1A               	movwf	ledSetAll@led1Value+1,c
  2581  0010CA  0E00               	movlw	0
  2582  0010CC  6E19               	movwf	ledSetAll@led1Value,c
  2583  0010CE  0E00               	movlw	0
  2584  0010D0  6E1C               	movwf	ledSetAll@led2Value+1,c
  2585  0010D2  0E00               	movlw	0
  2586  0010D4  6E1B               	movwf	ledSetAll@led2Value,c
  2587  0010D6  0E00               	movlw	0
  2588  0010D8  6E1E               	movwf	ledSetAll@led3Value+1,c
  2589  0010DA  0E00               	movlw	0
  2590  0010DC  6E1D               	movwf	ledSetAll@led3Value,c
  2591  0010DE  EC4F  F00E         	call	_ledSetAll	;wreg free
  2592                           
  2593                           ;LEDControl.c: 305: delayMS10( delay10ms );
  2594  0010E2  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2595  0010E6  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2596  0010EA  ECA0  F00E         	call	_delayMS10	;wreg free
  2597                           
  2598                           ;LEDControl.c: 306: ledSetAll( 1, 0, 0 );
  2599  0010EE  0E00               	movlw	0
  2600  0010F0  6E1A               	movwf	ledSetAll@led1Value+1,c
  2601  0010F2  0E01               	movlw	1
  2602  0010F4  6E19               	movwf	ledSetAll@led1Value,c
  2603  0010F6  0E00               	movlw	0
  2604  0010F8  6E1C               	movwf	ledSetAll@led2Value+1,c
  2605  0010FA  0E00               	movlw	0
  2606  0010FC  6E1B               	movwf	ledSetAll@led2Value,c
  2607  0010FE  0E00               	movlw	0
  2608  001100  6E1E               	movwf	ledSetAll@led3Value+1,c
  2609  001102  0E00               	movlw	0
  2610  001104  6E1D               	movwf	ledSetAll@led3Value,c
  2611  001106  EC4F  F00E         	call	_ledSetAll	;wreg free
  2612                           
  2613                           ;LEDControl.c: 307: delayMS10( delay10ms );
  2614  00110A  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2615  00110E  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2616  001112  ECA0  F00E         	call	_delayMS10	;wreg free
  2617                           
  2618                           ;LEDControl.c: 308: ledSetAll( 0, 1, 0 );
  2619  001116  0E00               	movlw	0
  2620  001118  6E1A               	movwf	ledSetAll@led1Value+1,c
  2621  00111A  0E00               	movlw	0
  2622  00111C  6E19               	movwf	ledSetAll@led1Value,c
  2623  00111E  0E00               	movlw	0
  2624  001120  6E1C               	movwf	ledSetAll@led2Value+1,c
  2625  001122  0E01               	movlw	1
  2626  001124  6E1B               	movwf	ledSetAll@led2Value,c
  2627  001126  0E00               	movlw	0
  2628  001128  6E1E               	movwf	ledSetAll@led3Value+1,c
  2629  00112A  0E00               	movlw	0
  2630  00112C  6E1D               	movwf	ledSetAll@led3Value,c
  2631  00112E  EC4F  F00E         	call	_ledSetAll	;wreg free
  2632                           
  2633                           ;LEDControl.c: 309: delayMS10( delay10ms );
  2634  001132  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2635  001136  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2636  00113A  ECA0  F00E         	call	_delayMS10	;wreg free
  2637                           
  2638                           ;LEDControl.c: 310: ledSetAll( 0, 0, 1 );
  2639  00113E  0E00               	movlw	0
  2640  001140  6E1A               	movwf	ledSetAll@led1Value+1,c
  2641  001142  0E00               	movlw	0
  2642  001144  6E19               	movwf	ledSetAll@led1Value,c
  2643  001146  0E00               	movlw	0
  2644  001148  6E1C               	movwf	ledSetAll@led2Value+1,c
  2645  00114A  0E00               	movlw	0
  2646  00114C  6E1B               	movwf	ledSetAll@led2Value,c
  2647  00114E  0E00               	movlw	0
  2648  001150  6E1E               	movwf	ledSetAll@led3Value+1,c
  2649  001152  0E01               	movlw	1
  2650  001154  6E1D               	movwf	ledSetAll@led3Value,c
  2651  001156  EC4F  F00E         	call	_ledSetAll	;wreg free
  2652                           
  2653                           ;LEDControl.c: 311: delayMS10( delay10ms );
  2654  00115A  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2655  00115E  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2656  001162  ECA0  F00E         	call	_delayMS10	;wreg free
  2657  001166  0012               	return	
  2658  001168                     __end_of_ledRunUp:
  2659                           	opt stack 0
  2660                           tblptru	equ	0xFF8
  2661                           intcon	equ	0xFF2
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           postinc2	equ	0xFDE
  2665                           postdec2	equ	0xFDD
  2666                           fsr2h	equ	0xFDA
  2667                           fsr2l	equ	0xFD9
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function _ledRunDown *****************
  2671 ;; Defined at:
  2672 ;;		line 316 in file "LEDControl.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  ledRunDelay     2   30[COMRAM] int 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  delay10ms       2   32[COMRAM] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         2       0       0       0       0       0       0
  2687 ;;      Locals:         2       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0
  2689 ;;      Totals:         4       0       0       0       0       0       0
  2690 ;;Total ram usage:        4 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    3
  2693 ;; This function calls:
  2694 ;;		___awdiv
  2695 ;;		_delayMS10
  2696 ;;		_ledSetAll
  2697 ;; This function is called by:
  2698 ;;		_ledRun
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text15
  2703  001168                     __ptext15:
  2704                           	opt stack 0
  2705  001168                     _ledRunDown:
  2706                           	opt stack 26
  2707                           
  2708                           ;LEDControl.c: 319: int delay10ms;
  2709                           ;LEDControl.c: 320: delay10ms = ledRunDelay / 10;
  2710                           
  2711                           ;incstack = 0
  2712  001168  C01F  F013         	movff	ledRunDown@ledRunDelay,___awdiv@dividend
  2713  00116C  C020  F014         	movff	ledRunDown@ledRunDelay+1,___awdiv@dividend+1
  2714  001170  0E00               	movlw	0
  2715  001172  6E16               	movwf	___awdiv@divisor+1,c
  2716  001174  0E0A               	movlw	10
  2717  001176  6E15               	movwf	___awdiv@divisor,c
  2718  001178  ECE4  F00A         	call	___awdiv	;wreg free
  2719  00117C  C013  F021         	movff	?___awdiv,ledRunDown@delay10ms
  2720  001180  C014  F022         	movff	?___awdiv+1,ledRunDown@delay10ms+1
  2721                           
  2722                           ;LEDControl.c: 322: ledSetAll( 0, 0, 1 );
  2723  001184  0E00               	movlw	0
  2724  001186  6E1A               	movwf	ledSetAll@led1Value+1,c
  2725  001188  0E00               	movlw	0
  2726  00118A  6E19               	movwf	ledSetAll@led1Value,c
  2727  00118C  0E00               	movlw	0
  2728  00118E  6E1C               	movwf	ledSetAll@led2Value+1,c
  2729  001190  0E00               	movlw	0
  2730  001192  6E1B               	movwf	ledSetAll@led2Value,c
  2731  001194  0E00               	movlw	0
  2732  001196  6E1E               	movwf	ledSetAll@led3Value+1,c
  2733  001198  0E01               	movlw	1
  2734  00119A  6E1D               	movwf	ledSetAll@led3Value,c
  2735  00119C  EC4F  F00E         	call	_ledSetAll	;wreg free
  2736                           
  2737                           ;LEDControl.c: 323: delayMS10( delay10ms );
  2738  0011A0  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2739  0011A4  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2740  0011A8  ECA0  F00E         	call	_delayMS10	;wreg free
  2741                           
  2742                           ;LEDControl.c: 324: ledSetAll( 0, 1, 0 );
  2743  0011AC  0E00               	movlw	0
  2744  0011AE  6E1A               	movwf	ledSetAll@led1Value+1,c
  2745  0011B0  0E00               	movlw	0
  2746  0011B2  6E19               	movwf	ledSetAll@led1Value,c
  2747  0011B4  0E00               	movlw	0
  2748  0011B6  6E1C               	movwf	ledSetAll@led2Value+1,c
  2749  0011B8  0E01               	movlw	1
  2750  0011BA  6E1B               	movwf	ledSetAll@led2Value,c
  2751  0011BC  0E00               	movlw	0
  2752  0011BE  6E1E               	movwf	ledSetAll@led3Value+1,c
  2753  0011C0  0E00               	movlw	0
  2754  0011C2  6E1D               	movwf	ledSetAll@led3Value,c
  2755  0011C4  EC4F  F00E         	call	_ledSetAll	;wreg free
  2756                           
  2757                           ;LEDControl.c: 325: delayMS10( delay10ms );
  2758  0011C8  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2759  0011CC  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2760  0011D0  ECA0  F00E         	call	_delayMS10	;wreg free
  2761                           
  2762                           ;LEDControl.c: 326: ledSetAll( 1, 0, 0 );
  2763  0011D4  0E00               	movlw	0
  2764  0011D6  6E1A               	movwf	ledSetAll@led1Value+1,c
  2765  0011D8  0E01               	movlw	1
  2766  0011DA  6E19               	movwf	ledSetAll@led1Value,c
  2767  0011DC  0E00               	movlw	0
  2768  0011DE  6E1C               	movwf	ledSetAll@led2Value+1,c
  2769  0011E0  0E00               	movlw	0
  2770  0011E2  6E1B               	movwf	ledSetAll@led2Value,c
  2771  0011E4  0E00               	movlw	0
  2772  0011E6  6E1E               	movwf	ledSetAll@led3Value+1,c
  2773  0011E8  0E00               	movlw	0
  2774  0011EA  6E1D               	movwf	ledSetAll@led3Value,c
  2775  0011EC  EC4F  F00E         	call	_ledSetAll	;wreg free
  2776                           
  2777                           ;LEDControl.c: 327: delayMS10( delay10ms );
  2778  0011F0  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2779  0011F4  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2780  0011F8  ECA0  F00E         	call	_delayMS10	;wreg free
  2781                           
  2782                           ;LEDControl.c: 328: ledSetAll( 0, 0, 0 );
  2783  0011FC  0E00               	movlw	0
  2784  0011FE  6E1A               	movwf	ledSetAll@led1Value+1,c
  2785  001200  0E00               	movlw	0
  2786  001202  6E19               	movwf	ledSetAll@led1Value,c
  2787  001204  0E00               	movlw	0
  2788  001206  6E1C               	movwf	ledSetAll@led2Value+1,c
  2789  001208  0E00               	movlw	0
  2790  00120A  6E1B               	movwf	ledSetAll@led2Value,c
  2791  00120C  0E00               	movlw	0
  2792  00120E  6E1E               	movwf	ledSetAll@led3Value+1,c
  2793  001210  0E00               	movlw	0
  2794  001212  6E1D               	movwf	ledSetAll@led3Value,c
  2795  001214  EC4F  F00E         	call	_ledSetAll	;wreg free
  2796                           
  2797                           ;LEDControl.c: 329: delayMS10( delay10ms );
  2798  001218  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2799  00121C  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2800  001220  ECA0  F00E         	call	_delayMS10	;wreg free
  2801  001224  0012               	return	
  2802  001226                     __end_of_ledRunDown:
  2803                           	opt stack 0
  2804                           tblptru	equ	0xFF8
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           postinc2	equ	0xFDE
  2809                           postdec2	equ	0xFDD
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _delayMS10 *****************
  2815 ;; Defined at:
  2816 ;;		line 111 in file "Timer.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  count           2   18[COMRAM] int 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  inx             2   21[COMRAM] int 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2830 ;;      Params:         2       0       0       0       0       0       0
  2831 ;;      Locals:         2       0       0       0       0       0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0
  2833 ;;      Totals:         5       0       0       0       0       0       0
  2834 ;;Total ram usage:        5 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_ledRunUp
  2841 ;;		_ledRunDown
  2842 ;;		_mcpInit
  2843 ;;		_mcpInitF
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text16
  2848  001D40                     __ptext16:
  2849                           	opt stack 0
  2850  001D40                     _delayMS10:
  2851                           	opt stack 27
  2852                           
  2853                           ;Timer.c: 113: for( int inx = 0; inx < count; inx++ )
  2854                           
  2855                           ;incstack = 0
  2856  001D40  0E00               	movlw	0
  2857  001D42  6E17               	movwf	delayMS10@inx+1,c
  2858  001D44  0E00               	movlw	0
  2859  001D46  6E16               	movwf	delayMS10@inx,c
  2860  001D48  D009               	goto	l583
  2861  001D4A                     
  2862                           ;Timer.c: 114: {
  2863                           ;Timer.c: 115: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  2864  001D4A  0E34               	movlw	52
  2865  001D4C  6E15               	movwf	??_delayMS10& (0+255),c
  2866  001D4E  0EF2               	movlw	242
  2867  001D50                     u3047:
  2868  001D50  2EE8               	decfsz	wreg,f,c
  2869  001D52  D7FE               	bra	u3047
  2870  001D54  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2871  001D56  D7FC               	bra	u3047
  2872  001D58  4A16               	infsnz	delayMS10@inx,f,c
  2873  001D5A  2A17               	incf	delayMS10@inx+1,f,c
  2874  001D5C                     l583:
  2875  001D5C  5013               	movf	delayMS10@count,w,c
  2876  001D5E  5C16               	subwf	delayMS10@inx,w,c
  2877  001D60  5017               	movf	delayMS10@inx+1,w,c
  2878  001D62  0A80               	xorlw	128
  2879  001D64  6E15               	movwf	??_delayMS10& (0+255),c
  2880  001D66  5014               	movf	delayMS10@count+1,w,c
  2881  001D68  0A80               	xorlw	128
  2882  001D6A  5815               	subwfb	??_delayMS10& (0+255),w,c
  2883  001D6C  B0D8               	btfsc	status,0,c
  2884  001D6E  0012               	return	
  2885  001D70  D7EC               	goto	l584
  2886  001D72                     __end_of_delayMS10:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postinc2	equ	0xFDE
  2893                           postdec2	equ	0xFDD
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function ___awdiv *****************
  2899 ;; Defined at:
  2900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  dividend        2   18[COMRAM] int 
  2903 ;;  divisor         2   20[COMRAM] int 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  quotient        2   24[COMRAM] int 
  2906 ;;  sign            1   23[COMRAM] unsigned char 
  2907 ;;  counter         1   22[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2   18[COMRAM] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2917 ;;      Params:         4       0       0       0       0       0       0
  2918 ;;      Locals:         4       0       0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0
  2920 ;;      Totals:         8       0       0       0       0       0       0
  2921 ;;Total ram usage:        8 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_ledRunUp
  2928 ;;		_ledRunDown
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text17
  2933  0015C8                     __ptext17:
  2934                           	opt stack 0
  2935  0015C8                     ___awdiv:
  2936                           	opt stack 27
  2937                           
  2938                           ;incstack = 0
  2939  0015C8  0E00               	movlw	0
  2940  0015CA  6E18               	movwf	___awdiv@sign,c
  2941  0015CC  AE16               	btfss	___awdiv@divisor+1,7,c
  2942  0015CE  D006               	goto	l768
  2943  0015D0  6C15               	negf	___awdiv@divisor,c
  2944  0015D2  1E16               	comf	___awdiv@divisor+1,f,c
  2945  0015D4  B0D8               	btfsc	status,0,c
  2946  0015D6  2A16               	incf	___awdiv@divisor+1,f,c
  2947  0015D8  0E01               	movlw	1
  2948  0015DA  6E18               	movwf	___awdiv@sign,c
  2949  0015DC                     l768:
  2950  0015DC  AE14               	btfss	___awdiv@dividend+1,7,c
  2951  0015DE  D006               	goto	l769
  2952  0015E0  6C13               	negf	___awdiv@dividend,c
  2953  0015E2  1E14               	comf	___awdiv@dividend+1,f,c
  2954  0015E4  B0D8               	btfsc	status,0,c
  2955  0015E6  2A14               	incf	___awdiv@dividend+1,f,c
  2956  0015E8  0E01               	movlw	1
  2957  0015EA  1A18               	xorwf	___awdiv@sign,f,c
  2958  0015EC                     l769:
  2959  0015EC  0E00               	movlw	0
  2960  0015EE  6E1A               	movwf	___awdiv@quotient+1,c
  2961  0015F0  0E00               	movlw	0
  2962  0015F2  6E19               	movwf	___awdiv@quotient,c
  2963  0015F4  5015               	movf	___awdiv@divisor,w,c
  2964  0015F6  1016               	iorwf	___awdiv@divisor+1,w,c
  2965  0015F8  B4D8               	btfsc	status,2,c
  2966  0015FA  D01C               	goto	l776
  2967  0015FC  0E01               	movlw	1
  2968  0015FE  6E17               	movwf	___awdiv@counter,c
  2969  001600  D004               	goto	l771
  2970  001602  90D8               	bcf	status,0,c
  2971  001604  3615               	rlcf	___awdiv@divisor,f,c
  2972  001606  3616               	rlcf	___awdiv@divisor+1,f,c
  2973  001608  2A17               	incf	___awdiv@counter,f,c
  2974  00160A                     l771:
  2975  00160A  AE16               	btfss	___awdiv@divisor+1,7,c
  2976  00160C  D7FA               	goto	l772
  2977  00160E                     u1950:
  2978  00160E  90D8               	bcf	status,0,c
  2979  001610  3619               	rlcf	___awdiv@quotient,f,c
  2980  001612  361A               	rlcf	___awdiv@quotient+1,f,c
  2981  001614  5015               	movf	___awdiv@divisor,w,c
  2982  001616  5C13               	subwf	___awdiv@dividend,w,c
  2983  001618  5016               	movf	___awdiv@divisor+1,w,c
  2984  00161A  5814               	subwfb	___awdiv@dividend+1,w,c
  2985  00161C  A0D8               	btfss	status,0,c
  2986  00161E  D005               	goto	l775
  2987  001620  5015               	movf	___awdiv@divisor,w,c
  2988  001622  5E13               	subwf	___awdiv@dividend,f,c
  2989  001624  5016               	movf	___awdiv@divisor+1,w,c
  2990  001626  5A14               	subwfb	___awdiv@dividend+1,f,c
  2991  001628  8019               	bsf	___awdiv@quotient,0,c
  2992  00162A                     l775:
  2993  00162A  90D8               	bcf	status,0,c
  2994  00162C  3216               	rrcf	___awdiv@divisor+1,f,c
  2995  00162E  3215               	rrcf	___awdiv@divisor,f,c
  2996  001630  2E17               	decfsz	___awdiv@counter,f,c
  2997  001632  D7ED               	goto	u1950
  2998  001634                     l776:
  2999  001634  5018               	movf	___awdiv@sign,w,c
  3000  001636  B4D8               	btfsc	status,2,c
  3001  001638  D004               	goto	l777
  3002  00163A  6C19               	negf	___awdiv@quotient,c
  3003  00163C  1E1A               	comf	___awdiv@quotient+1,f,c
  3004  00163E  B0D8               	btfsc	status,0,c
  3005  001640  2A1A               	incf	___awdiv@quotient+1,f,c
  3006  001642                     l777:
  3007  001642  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3008  001646  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3009  00164A  0012               	return	
  3010  00164C                     __end_of___awdiv:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           intcon	equ	0xFF2
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postinc2	equ	0xFDE
  3017                           postdec2	equ	0xFDD
  3018                           fsr2h	equ	0xFDA
  3019                           fsr2l	equ	0xFD9
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _ledInit *****************
  3023 ;; Defined at:
  3024 ;;		line 71 in file "LEDControl.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3038 ;;      Params:         0       0       0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    4
  3045 ;; This function calls:
  3046 ;;		_ledSetAllOff
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text18
  3053  001F7E                     __ptext18:
  3054                           	opt stack 0
  3055  001F7E                     _ledInit:
  3056                           	opt stack 26
  3057                           
  3058                           ;LEDControl.c: 73: TRISBbits.TRISB4 = 0;
  3059                           
  3060                           ;incstack = 0
  3061  001F7E  9893               	bcf	3987,4,c	;volatile
  3062                           
  3063                           ;LEDControl.c: 74: TRISCbits.TRISC1 = 0;
  3064  001F80  9294               	bcf	3988,1,c	;volatile
  3065                           
  3066                           ;LEDControl.c: 75: TRISCbits.TRISC0 = 0;
  3067  001F82  9094               	bcf	3988,0,c	;volatile
  3068                           
  3069                           ;LEDControl.c: 77: ledSetAllOff( );
  3070  001F84  EC6D  F00F         	call	_ledSetAllOff	;wreg free
  3071  001F88  0012               	return	
  3072  001F8A                     __end_of_ledInit:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           intcon	equ	0xFF2
  3076                           postinc0	equ	0xFEE
  3077                           wreg	equ	0xFE8
  3078                           postinc2	equ	0xFDE
  3079                           postdec2	equ	0xFDD
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _ledSetAllOff *****************
  3085 ;; Defined at:
  3086 ;;		line 194 in file "LEDControl.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3100 ;;      Params:         0       0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		_ledSetAll
  3109 ;; This function is called by:
  3110 ;;		_ledInit
  3111 ;;		_main
  3112 ;;		_ledTestSetAllOff
  3113 ;;		_ledGoSetAllOff
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text19
  3118  001EDA                     __ptext19:
  3119                           	opt stack 0
  3120  001EDA                     _ledSetAllOff:
  3121                           	opt stack 27
  3122                           
  3123                           ;LEDControl.c: 196: ledSetAll( 0, 0, 0 );
  3124                           
  3125                           ;incstack = 0
  3126  001EDA  0E00               	movlw	0
  3127  001EDC  6E1A               	movwf	ledSetAll@led1Value+1,c
  3128  001EDE  0E00               	movlw	0
  3129  001EE0  6E19               	movwf	ledSetAll@led1Value,c
  3130  001EE2  0E00               	movlw	0
  3131  001EE4  6E1C               	movwf	ledSetAll@led2Value+1,c
  3132  001EE6  0E00               	movlw	0
  3133  001EE8  6E1B               	movwf	ledSetAll@led2Value,c
  3134  001EEA  0E00               	movlw	0
  3135  001EEC  6E1E               	movwf	ledSetAll@led3Value+1,c
  3136  001EEE  0E00               	movlw	0
  3137  001EF0  6E1D               	movwf	ledSetAll@led3Value,c
  3138  001EF2  EC4F  F00E         	call	_ledSetAll	;wreg free
  3139  001EF6  0012               	return	
  3140  001EF8                     __end_of_ledSetAllOff:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           intcon	equ	0xFF2
  3144                           postinc0	equ	0xFEE
  3145                           wreg	equ	0xFE8
  3146                           postinc2	equ	0xFDE
  3147                           postdec2	equ	0xFDD
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function _ledSetAll *****************
  3153 ;; Defined at:
  3154 ;;		line 158 in file "LEDControl.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  led1Value       2   24[COMRAM] int 
  3157 ;;  led2Value       2   26[COMRAM] int 
  3158 ;;  led3Value       2   28[COMRAM] int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         6       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         6       0       0       0       0       0       0
  3174 ;;Total ram usage:        6 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		_ledSet
  3179 ;; This function is called by:
  3180 ;;		_ledSetAllOn
  3181 ;;		_ledSetAllOff
  3182 ;;		_ledRunUp
  3183 ;;		_ledRunDown
  3184 ;;		_ledTestSetAll
  3185 ;;		_ledGoSetAll
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text20
  3190  001C9E                     __ptext20:
  3191                           	opt stack 0
  3192  001C9E                     _ledSetAll:
  3193                           	opt stack 27
  3194                           
  3195                           ;LEDControl.c: 160: ledSet( 1, led1Value );
  3196                           
  3197                           ;incstack = 0
  3198  001C9E  0E00               	movlw	0
  3199  001CA0  6E14               	movwf	ledSet@ledNum+1,c
  3200  001CA2  0E01               	movlw	1
  3201  001CA4  6E13               	movwf	ledSet@ledNum,c
  3202  001CA6  C019  F015         	movff	ledSetAll@led1Value,ledSet@setValue
  3203  001CAA  C01A  F016         	movff	ledSetAll@led1Value+1,ledSet@setValue+1
  3204  001CAE  EC53  F00D         	call	_ledSet	;wreg free
  3205                           
  3206                           ;LEDControl.c: 161: ledSet( 2, led2Value );
  3207  001CB2  0E00               	movlw	0
  3208  001CB4  6E14               	movwf	ledSet@ledNum+1,c
  3209  001CB6  0E02               	movlw	2
  3210  001CB8  6E13               	movwf	ledSet@ledNum,c
  3211  001CBA  C01B  F015         	movff	ledSetAll@led2Value,ledSet@setValue
  3212  001CBE  C01C  F016         	movff	ledSetAll@led2Value+1,ledSet@setValue+1
  3213  001CC2  EC53  F00D         	call	_ledSet	;wreg free
  3214                           
  3215                           ;LEDControl.c: 162: ledSet( 3, led3Value );
  3216  001CC6  0E00               	movlw	0
  3217  001CC8  6E14               	movwf	ledSet@ledNum+1,c
  3218  001CCA  0E03               	movlw	3
  3219  001CCC  6E13               	movwf	ledSet@ledNum,c
  3220  001CCE  C01D  F015         	movff	ledSetAll@led3Value,ledSet@setValue
  3221  001CD2  C01E  F016         	movff	ledSetAll@led3Value+1,ledSet@setValue+1
  3222  001CD6  EC53  F00D         	call	_ledSet	;wreg free
  3223  001CDA  0012               	return	
  3224  001CDC                     __end_of_ledSetAll:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postinc2	equ	0xFDE
  3231                           postdec2	equ	0xFDD
  3232                           fsr2h	equ	0xFDA
  3233                           fsr2l	equ	0xFD9
  3234                           status	equ	0xFD8
  3235                           
  3236 ;; *************** function _ledSet *****************
  3237 ;; Defined at:
  3238 ;;		line 82 in file "LEDControl.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  ledNum          2   18[COMRAM] int 
  3241 ;;  setValue        2   20[COMRAM] int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3253 ;;      Params:         4       0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0
  3255 ;;      Temps:          2       0       0       0       0       0       0
  3256 ;;      Totals:         6       0       0       0       0       0       0
  3257 ;;Total ram usage:        6 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_ledSetAll
  3264 ;;		_ledToggle
  3265 ;;		_ledSetOn
  3266 ;;		_ledSetOff
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text21
  3271  001AA6                     __ptext21:
  3272                           	opt stack 0
  3273  001AA6                     _ledSet:
  3274                           	opt stack 26
  3275                           
  3276                           ;LEDControl.c: 84: switch( ledNum )
  3277                           
  3278                           ;incstack = 0
  3279  001AA6  D012               	goto	l22
  3280  001AA8                     l23:
  3281                           
  3282                           ;LEDControl.c: 87: LATBbits.LATB4 = setValue;
  3283  001AA8  B015               	btfsc	ledSet@setValue,0,c
  3284  001AAA  D002               	bra	u1535
  3285  001AAC  988A               	bcf	3978,4,c	;volatile
  3286  001AAE  D001               	bra	u1536
  3287  001AB0                     u1535:
  3288  001AB0  888A               	bsf	3978,4,c	;volatile
  3289  001AB2                     u1536:
  3290                           
  3291                           ;LEDControl.c: 88: break;
  3292  001AB2  0012               	return	
  3293  001AB4                     l25:
  3294                           
  3295                           ;LEDControl.c: 90: LATCbits.LATC1 = setValue;
  3296  001AB4  B015               	btfsc	ledSet@setValue,0,c
  3297  001AB6  D002               	bra	u1545
  3298  001AB8  928B               	bcf	3979,1,c	;volatile
  3299  001ABA  D001               	bra	u1546
  3300  001ABC                     u1545:
  3301  001ABC  828B               	bsf	3979,1,c	;volatile
  3302  001ABE                     u1546:
  3303                           
  3304                           ;LEDControl.c: 91: break;
  3305  001ABE  0012               	return	
  3306  001AC0                     l26:
  3307                           
  3308                           ;LEDControl.c: 93: LATCbits.LATC0 = setValue;
  3309  001AC0  B015               	btfsc	ledSet@setValue,0,c
  3310  001AC2  D002               	bra	u1555
  3311  001AC4  908B               	bcf	3979,0,c	;volatile
  3312  001AC6  D001               	bra	u1556
  3313  001AC8                     u1555:
  3314  001AC8  808B               	bsf	3979,0,c	;volatile
  3315  001ACA                     u1556:
  3316                           
  3317                           ;LEDControl.c: 95: }
  3318                           
  3319                           ;LEDControl.c: 94: break;
  3320  001ACA  0012               	return	
  3321  001ACC                     l22:
  3322  001ACC  C013  F017         	movff	ledSet@ledNum,??_ledSet
  3323  001AD0  C014  F018         	movff	ledSet@ledNum+1,??_ledSet+1
  3324                           
  3325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3326                           ; Switch size 1, requested type "space"
  3327                           ; Number of cases is 1, Range of values is 0 to 0
  3328                           ; switch strategies available:
  3329                           ; Name         Instructions Cycles
  3330                           ; simple_byte            4     3 (average)
  3331                           ;	Chosen strategy is simple_byte
  3332  001AD4  5018               	movf	??_ledSet+1,w,c
  3333  001AD6  0A00               	xorlw	0	; case 0
  3334  001AD8  A4D8               	btfss	status,2,c
  3335  001ADA  0012               	return	
  3336                           
  3337                           ; Switch size 1, requested type "space"
  3338                           ; Number of cases is 3, Range of values is 1 to 3
  3339                           ; switch strategies available:
  3340                           ; Name         Instructions Cycles
  3341                           ; simple_byte           10     6 (average)
  3342                           ;	Chosen strategy is simple_byte
  3343  001ADC  5017               	movf	??_ledSet,w,c
  3344  001ADE  0A01               	xorlw	1	; case 1
  3345  001AE0  B4D8               	btfsc	status,2,c
  3346  001AE2  D7E2               	goto	l23
  3347  001AE4  0A03               	xorlw	3	; case 2
  3348  001AE6  B4D8               	btfsc	status,2,c
  3349  001AE8  D7E5               	goto	l25
  3350  001AEA  0A01               	xorlw	1	; case 3
  3351  001AEC  A4D8               	btfss	status,2,c
  3352  001AEE  0012               	return	
  3353  001AF0  D7E7               	goto	l26
  3354  001AF2                     __end_of_ledSet:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           intcon	equ	0xFF2
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           postinc2	equ	0xFDE
  3361                           postdec2	equ	0xFDD
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _initOSC *****************
  3367 ;; Defined at:
  3368 ;;		line 136 in file "Main_PowerSense.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3382 ;;      Params:         0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    1
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text22
  3397  001F30                     __ptext22:
  3398                           	opt stack 0
  3399  001F30                     _initOSC:
  3400                           	opt stack 29
  3401                           
  3402                           ;Main_PowerSense.c: 139: OSCCONbits.IDLEN = 0;
  3403                           
  3404                           ;incstack = 0
  3405  001F30  9ED3               	bcf	4051,7,c	;volatile
  3406                           
  3407                           ;Main_PowerSense.c: 140: OSCCONbits.IRCF = 0b111;
  3408  001F32  88D3               	bsf	4051,4,c	;volatile
  3409  001F34  8AD3               	bsf	4051,5,c	;volatile
  3410  001F36  8CD3               	bsf	4051,6,c	;volatile
  3411                           
  3412                           ;Main_PowerSense.c: 141: OSCCONbits.SCS = 0b11;
  3413  001F38  0E03               	movlw	3
  3414  001F3A  12D3               	iorwf	4051,f,c	;volatile
  3415                           
  3416                           ;Main_PowerSense.c: 143: OSCCON2bits.MFIOSEL = 0;
  3417  001F3C  98D2               	bcf	4050,4,c	;volatile
  3418                           
  3419                           ;Main_PowerSense.c: 144: OSCCON2bits.SOSCGO = 0;
  3420  001F3E  96D2               	bcf	4050,3,c	;volatile
  3421                           
  3422                           ;Main_PowerSense.c: 145: OSCCON2bits.PRISD = 0;
  3423  001F40  94D2               	bcf	4050,2,c	;volatile
  3424                           
  3425                           ;Main_PowerSense.c: 147: OSCTUNEbits.INTSRC = 1;
  3426  001F42  8E9B               	bsf	3995,7,c	;volatile
  3427                           
  3428                           ;Main_PowerSense.c: 148: OSCTUNEbits.PLLEN = 0;
  3429  001F44  9C9B               	bcf	3995,6,c	;volatile
  3430  001F46  0012               	return	
  3431  001F48                     __end_of_initOSC:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           intcon	equ	0xFF2
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           postinc2	equ	0xFDE
  3438                           postdec2	equ	0xFDD
  3439                           fsr2h	equ	0xFDA
  3440                           fsr2l	equ	0xFD9
  3441                           status	equ	0xFD8
  3442                           
  3443 ;; *************** function _initInterruptsClear *****************
  3444 ;; Defined at:
  3445 ;;		line 172 in file "Main_PowerSense.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3459 ;;      Params:         0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text23
  3474  001AF2                     __ptext23:
  3475                           	opt stack 0
  3476  001AF2                     _initInterruptsClear:
  3477                           	opt stack 29
  3478                           
  3479                           ;Main_PowerSense.c: 175: INTCON = 0b00000000;
  3480                           
  3481                           ;incstack = 0
  3482  001AF2  0E00               	movlw	0
  3483  001AF4  6EF2               	movwf	intcon,c	;volatile
  3484                           
  3485                           ;Main_PowerSense.c: 176: INTCON2 = 0b00000000;
  3486  001AF6  0E00               	movlw	0
  3487  001AF8  6EF1               	movwf	intcon2,c	;volatile
  3488                           
  3489                           ;Main_PowerSense.c: 177: INTCON3 = 0b00000000;
  3490  001AFA  0E00               	movlw	0
  3491  001AFC  6EF0               	movwf	intcon3,c	;volatile
  3492                           
  3493                           ;Main_PowerSense.c: 179: RCONbits.IPEN = 0;
  3494  001AFE  9ED0               	bcf	4048,7,c	;volatile
  3495                           
  3496                           ;Main_PowerSense.c: 181: PIR1 = 0b00000000;
  3497  001B00  0E00               	movlw	0
  3498  001B02  6E9E               	movwf	3998,c	;volatile
  3499                           
  3500                           ;Main_PowerSense.c: 182: PIR2 = 0b00000000;
  3501  001B04  0E00               	movlw	0
  3502  001B06  6EA1               	movwf	4001,c	;volatile
  3503                           
  3504                           ;Main_PowerSense.c: 183: PIR3 = 0b00000000;
  3505  001B08  0E00               	movlw	0
  3506  001B0A  6EA4               	movwf	4004,c	;volatile
  3507                           
  3508                           ;Main_PowerSense.c: 184: PIR4 = 0b00000000;
  3509  001B0C  0E00               	movlw	0
  3510  001B0E  6E7B               	movwf	3963,c	;volatile
  3511                           
  3512                           ;Main_PowerSense.c: 185: PIR5 = 0b00000000;
  3513  001B10  0E00               	movlw	0
  3514  001B12  6E7E               	movwf	3966,c	;volatile
  3515                           
  3516                           ;Main_PowerSense.c: 187: PIE1 = 0b00000000;
  3517  001B14  0E00               	movlw	0
  3518  001B16  6E9D               	movwf	3997,c	;volatile
  3519                           
  3520                           ;Main_PowerSense.c: 188: PIE2 = 0b00000000;
  3521  001B18  0E00               	movlw	0
  3522  001B1A  6EA0               	movwf	4000,c	;volatile
  3523                           
  3524                           ;Main_PowerSense.c: 189: PIE3 = 0b00000000;
  3525  001B1C  0E00               	movlw	0
  3526  001B1E  6EA3               	movwf	4003,c	;volatile
  3527                           
  3528                           ;Main_PowerSense.c: 190: PIE4 = 0b00000000;
  3529  001B20  0E00               	movlw	0
  3530  001B22  6E7A               	movwf	3962,c	;volatile
  3531                           
  3532                           ;Main_PowerSense.c: 191: PIE5 = 0b00000000;
  3533  001B24  0E00               	movlw	0
  3534  001B26  6E7D               	movwf	3965,c	;volatile
  3535                           
  3536                           ;Main_PowerSense.c: 193: IPR1 = 0b00000000;
  3537  001B28  0E00               	movlw	0
  3538  001B2A  6E9F               	movwf	3999,c	;volatile
  3539                           
  3540                           ;Main_PowerSense.c: 194: IPR2 = 0b00000000;
  3541  001B2C  0E00               	movlw	0
  3542  001B2E  6EA2               	movwf	4002,c	;volatile
  3543                           
  3544                           ;Main_PowerSense.c: 195: IPR3 = 0b00000000;
  3545  001B30  0E00               	movlw	0
  3546  001B32  6EA5               	movwf	4005,c	;volatile
  3547                           
  3548                           ;Main_PowerSense.c: 196: IPR4 = 0b00000000;
  3549  001B34  0E00               	movlw	0
  3550  001B36  6E7C               	movwf	3964,c	;volatile
  3551                           
  3552                           ;Main_PowerSense.c: 197: IPR5 = 0b00000000;
  3553  001B38  0E00               	movlw	0
  3554  001B3A  6E7F               	movwf	3967,c	;volatile
  3555  001B3C  0012               	return	
  3556  001B3E                     __end_of_initInterruptsClear:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           intcon	equ	0xFF2
  3560                           intcon2	equ	0xFF1
  3561                           intcon3	equ	0xFF0
  3562                           postinc0	equ	0xFEE
  3563                           wreg	equ	0xFE8
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _initIO *****************
  3571 ;; Defined at:
  3572 ;;		line 153 in file "Main_PowerSense.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3586 ;;      Params:         0       0       0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text24
  3601  001F5E                     __ptext24:
  3602                           	opt stack 0
  3603  001F5E                     _initIO:
  3604                           	opt stack 29
  3605                           
  3606                           ;Main_PowerSense.c: 155: ADCON0bits.ADON = 0;
  3607                           
  3608                           ;incstack = 0
  3609  001F5E  90C2               	bcf	4034,0,c	;volatile
  3610                           
  3611                           ;Main_PowerSense.c: 156: ANSELA = 0b00000000;
  3612  001F60  0E00               	movlw	0
  3613  001F62  010F               	movlb	15	; () banked
  3614  001F64  6F38               	movwf	56,b	;volatile
  3615                           
  3616                           ;Main_PowerSense.c: 157: ANSELB = 0b00000000;
  3617  001F66  0E00               	movlw	0
  3618  001F68  6F39               	movwf	57,b	;volatile
  3619                           
  3620                           ;Main_PowerSense.c: 158: ANSELC = 0b00000000;
  3621  001F6A  0E00               	movlw	0
  3622  001F6C  6F3A               	movwf	58,b	;volatile
  3623  001F6E  0012               	return	
  3624  001F70                     __end_of_initIO:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           intcon	equ	0xFF2
  3628                           intcon2	equ	0xFF1
  3629                           intcon3	equ	0xFF0
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _commRun *****************
  3639 ;; Defined at:
  3640 ;;		line 112 in file "SlaveComm.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3654 ;;      Params:         0       0       0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   10
  3661 ;; This function calls:
  3662 ;;		_communications
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text25
  3669  001F8A                     __ptext25:
  3670                           	opt stack 0
  3671  001F8A                     _commRun:
  3672                           	opt stack 20
  3673                           
  3674                           ;SlaveComm.c: 114: communications( 0 );
  3675                           
  3676                           ; BSR set to: 15
  3677                           ;incstack = 0
  3678  001F8A  0E00               	movlw	0
  3679  001F8C  EC13  F009         	call	_communications
  3680  001F90  0012               	return	
  3681  001F92                     __end_of_commRun:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           intcon	equ	0xFF2
  3685                           intcon2	equ	0xFF1
  3686                           intcon3	equ	0xFF0
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postinc2	equ	0xFDE
  3690                           postdec2	equ	0xFDD
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695 ;; *************** function _commInit *****************
  3696 ;; Defined at:
  3697 ;;		line 105 in file "SlaveComm.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3711 ;;      Params:         0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:   10
  3718 ;; This function calls:
  3719 ;;		_communications
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text26
  3726  001F92                     __ptext26:
  3727                           	opt stack 0
  3728  001F92                     _commInit:
  3729                           	opt stack 20
  3730                           
  3731                           ;SlaveComm.c: 107: communications( 1 );
  3732                           
  3733                           ;incstack = 0
  3734  001F92  0E01               	movlw	1
  3735  001F94  EC13  F009         	call	_communications
  3736  001F98  0012               	return	
  3737  001F9A                     __end_of_commInit:
  3738                           	opt stack 0
  3739                           tblptru	equ	0xFF8
  3740                           intcon	equ	0xFF2
  3741                           intcon2	equ	0xFF1
  3742                           intcon3	equ	0xFF0
  3743                           postinc0	equ	0xFEE
  3744                           wreg	equ	0xFE8
  3745                           postinc2	equ	0xFDE
  3746                           postdec2	equ	0xFDD
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _communications *****************
  3752 ;; Defined at:
  3753 ;;		line 119 in file "SlaveComm.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  firstTime       1    wreg     unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  firstTime       1   37[BANK0 ] unsigned char 
  3758 ;;  no_more_to_s    1   36[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         0       0       0       0       0       0       0
  3769 ;;      Locals:         0       2       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0
  3771 ;;      Totals:         0       2       0       0       0       0       0
  3772 ;;Total ram usage:        2 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    9
  3775 ;; This function calls:
  3776 ;;		_SPISlaveInit
  3777 ;;		_process_data
  3778 ;;		_receive_data
  3779 ;;		_resetCommunications
  3780 ;;		_send_data
  3781 ;; This function is called by:
  3782 ;;		_commInit
  3783 ;;		_commRun
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text27
  3788  001226                     __ptext27:
  3789                           	opt stack 0
  3790  001226                     _communications:
  3791                           	opt stack 20
  3792                           
  3793                           ;incstack = 0
  3794                           ;communications@firstTime stored from wreg
  3795  001226  0100               	movlb	0	; () banked
  3796  001228  6FCF               	movwf	communications@firstTime& (0+255),b
  3797                           
  3798                           ;SlaveComm.c: 121: static struct buffer receive_buffer;
  3799                           ;SlaveComm.c: 122: static struct buffer send_buffer;
  3800                           ;SlaveComm.c: 124: static bool end_of_transmission_received = 0;
  3801                           ;SlaveComm.c: 125: bool no_more_to_send;
  3802                           ;SlaveComm.c: 127: static enum receive_status receive_current_state;
  3803                           ;SlaveComm.c: 130: if( firstTime == 1 )
  3804  00122A  0100               	movlb	0	; () banked
  3805  00122C  05CF               	decf	communications@firstTime& (0+255),w,b
  3806  00122E  A4D8               	btfss	status,2,c
  3807  001230  D00E               	goto	l202
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;SlaveComm.c: 131: {
  3811                           ;SlaveComm.c: 132: SPISlaveInit( );
  3812  001232  ECE9  F00D         	call	_SPISlaveInit	;wreg free
  3813                           
  3814                           ;SlaveComm.c: 133: send_buffer.write_position = 0;
  3815  001236  0E00               	movlw	0
  3816  001238  0100               	movlb	0	; () banked
  3817  00123A  6FA8               	movwf	(communications@send_buffer+40)& (0+255),b
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;SlaveComm.c: 134: send_buffer.read_position = 0;
  3821  00123C  0E00               	movlw	0
  3822  00123E  6FA9               	movwf	(communications@send_buffer+41)& (0+255),b
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;SlaveComm.c: 135: resetCommunications( &send_buffer );
  3826  001240  0E80               	movlw	low communications@send_buffer
  3827  001242  6E3B               	movwf	resetCommunications@send_buffer,c
  3828  001244  0E00               	movlw	high communications@send_buffer
  3829  001246  6E3C               	movwf	resetCommunications@send_buffer+1,c
  3830  001248  ECB7  F009         	call	_resetCommunications	;wreg free
  3831                           
  3832                           ;SlaveComm.c: 136: }
  3833  00124C  0012               	return	
  3834  00124E                     l202:
  3835                           
  3836                           ;SlaveComm.c: 137: else
  3837                           ;SlaveComm.c: 138: {
  3838                           ;SlaveComm.c: 139: receive_current_state = receive_data( &receive_buffer );
  3839  00124E  0E33               	movlw	low communications@receive_buffer
  3840  001250  6E16               	movwf	receive_data@receive_buffer,c
  3841  001252  0E01               	movlw	high communications@receive_buffer
  3842  001254  6E17               	movwf	receive_data@receive_buffer+1,c
  3843  001256  ECF5  F007         	call	_receive_data	;wreg free
  3844  00125A  0100               	movlb	0	; () banked
  3845  00125C  6F7E               	movwf	communications@receive_current_state& (0+255),b
  3846                           
  3847                           ;SlaveComm.c: 141: switch( receive_current_state )
  3848  00125E  D011               	goto	l204
  3849  001260                     
  3850                           ; BSR set to: 0
  3851                           ;SlaveComm.c: 151: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  3852                           
  3853                           ; BSR set to: 0
  3854  001260  0E33               	movlw	low communications@receive_buffer
  3855  001262  6FCA               	movwf	process_data@receive_buffer& (0+255),b
  3856  001264  0E01               	movlw	high communications@receive_buffer
  3857  001266  6FCB               	movwf	(process_data@receive_buffer+1)& (0+255),b
  3858  001268  0E80               	movlw	low communications@send_buffer
  3859  00126A  6FCC               	movwf	process_data@send_buffer& (0+255),b
  3860  00126C  0E00               	movlw	high communications@send_buffer
  3861  00126E  6FCD               	movwf	(process_data@send_buffer+1)& (0+255),b
  3862  001270  ECB9  F00E         	call	_process_data	;wreg free
  3863  001274  06E8               	decf	wreg,f,c
  3864  001276  A4D8               	btfss	status,2,c
  3865  001278  D00E               	goto	l206
  3866                           
  3867                           ;SlaveComm.c: 152: {
  3868                           ;SlaveComm.c: 153: end_of_transmission_received = 1;
  3869  00127A  0E01               	movlw	1
  3870  00127C  0100               	movlb	0	; () banked
  3871  00127E  6F7F               	movwf	communications@end_of_transmission_received& (0+255),b
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;SlaveComm.c: 157: }
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;SlaveComm.c: 154: }
  3878                           ;SlaveComm.c: 156: break;
  3879  001280  D00A               	goto	l206
  3880  001282                     l204:
  3881                           
  3882                           ; BSR set to: 0
  3883                           
  3884                           ; BSR set to: 0
  3885  001282  517E               	movf	communications@receive_current_state& (0+255),w,b
  3886                           
  3887                           ; Switch size 1, requested type "space"
  3888                           ; Number of cases is 3, Range of values is 0 to 2
  3889                           ; switch strategies available:
  3890                           ; Name         Instructions Cycles
  3891                           ; simple_byte           10     6 (average)
  3892                           ;	Chosen strategy is simple_byte
  3893  001284  0A00               	xorlw	0	; case 0
  3894  001286  B4D8               	btfsc	status,2,c
  3895  001288  D006               	goto	l206
  3896  00128A  0A01               	xorlw	1	; case 1
  3897  00128C  B4D8               	btfsc	status,2,c
  3898  00128E  D003               	goto	l206
  3899  001290  0A03               	xorlw	3	; case 2
  3900  001292  B4D8               	btfsc	status,2,c
  3901  001294  D7E5               	goto	l208
  3902  001296                     l206:
  3903                           
  3904                           ;SlaveComm.c: 159: no_more_to_send = send_data( &send_buffer );
  3905                           
  3906                           ; BSR set to: 0
  3907  001296  0E80               	movlw	low communications@send_buffer
  3908  001298  6E15               	movwf	send_data@send_buffer,c
  3909  00129A  0E00               	movlw	high communications@send_buffer
  3910  00129C  6E16               	movwf	send_data@send_buffer+1,c
  3911  00129E  EC9C  F00A         	call	_send_data	;wreg free
  3912  0012A2  0100               	movlb	0	; () banked
  3913  0012A4  6FCE               	movwf	communications@no_more_to_send& (0+255),b
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;SlaveComm.c: 162: static bool last_state_active = 0;
  3917                           ;SlaveComm.c: 163: if( PORTBbits.SS2 == 0b1 )
  3918  0012A6  A081               	btfss	3969,0,c	;volatile
  3919  0012A8  D003               	goto	l212
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;SlaveComm.c: 164: {
  3923                           ;SlaveComm.c: 165: last_state_active = 0;
  3924  0012AA  0E00               	movlw	0
  3925  0012AC  6F7D               	movwf	communications@last_state_active& (0+255),b
  3926                           
  3927                           ;SlaveComm.c: 166: }
  3928  0012AE  0012               	return	
  3929  0012B0                     l212:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;SlaveComm.c: 167: else
  3933                           ;SlaveComm.c: 168: {
  3934                           ;SlaveComm.c: 169: if( last_state_active == 0 )
  3935                           
  3936                           ; BSR set to: 0
  3937  0012B0  517D               	movf	communications@last_state_active& (0+255),w,b
  3938  0012B2  A4D8               	btfss	status,2,c
  3939  0012B4  D006               	goto	l214
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;SlaveComm.c: 170: {
  3943                           ;SlaveComm.c: 171: resetCommunications( &send_buffer );
  3944  0012B6  0E80               	movlw	low communications@send_buffer
  3945  0012B8  6E3B               	movwf	resetCommunications@send_buffer,c
  3946  0012BA  0E00               	movlw	high communications@send_buffer
  3947  0012BC  6E3C               	movwf	resetCommunications@send_buffer+1,c
  3948  0012BE  ECB7  F009         	call	_resetCommunications	;wreg free
  3949  0012C2                     l214:
  3950                           
  3951                           ;SlaveComm.c: 172: }
  3952                           ;SlaveComm.c: 174: last_state_active = 1;
  3953  0012C2  0E01               	movlw	1
  3954  0012C4  0100               	movlb	0	; () banked
  3955  0012C6  6F7D               	movwf	communications@last_state_active& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           
  3959                           ; BSR set to: 0
  3960  0012C8  0012               	return	
  3961  0012CA                     __end_of_communications:
  3962                           	opt stack 0
  3963                           tblptru	equ	0xFF8
  3964                           intcon	equ	0xFF2
  3965                           intcon2	equ	0xFF1
  3966                           intcon3	equ	0xFF0
  3967                           postinc0	equ	0xFEE
  3968                           wreg	equ	0xFE8
  3969                           postinc2	equ	0xFDE
  3970                           postdec2	equ	0xFDD
  3971                           fsr2h	equ	0xFDA
  3972                           fsr2l	equ	0xFD9
  3973                           status	equ	0xFD8
  3974                           
  3975 ;; *************** function _send_data *****************
  3976 ;; Defined at:
  3977 ;;		line 502 in file "SlaveComm.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  3980 ;;		 -> communications@send_buffer(42), 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  send_end        1   24[COMRAM] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      unsigned char 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3992 ;;      Params:         2       0       0       0       0       0       0
  3993 ;;      Locals:         1       0       0       0       0       0       0
  3994 ;;      Temps:          2       0       0       0       0       0       0
  3995 ;;      Totals:         5       0       0       0       0       0       0
  3996 ;;Total ram usage:        5 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		_SPI_send_data
  4001 ;; This function is called by:
  4002 ;;		_communications
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text28
  4007  001538                     __ptext28:
  4008                           	opt stack 0
  4009  001538                     _send_data:
  4010                           	opt stack 26
  4011                           
  4012                           ;SlaveComm.c: 504: bool send_end;
  4013                           ;SlaveComm.c: 506: if( send_buffer->read_position == send_buffer->write_position )
  4014                           
  4015                           ;incstack = 0
  4016  001538  EE20 F028          	lfsr	2,40
  4017  00153C  5015               	movf	send_data@send_buffer,w,c
  4018  00153E  26D9               	addwf	fsr2l,f,c
  4019  001540  5016               	movf	send_data@send_buffer+1,w,c
  4020  001542  22DA               	addwfc	fsr2h,f,c
  4021  001544  EE10 F029          	lfsr	1,41
  4022  001548  5015               	movf	send_data@send_buffer,w,c
  4023  00154A  26E1               	addwf	fsr1l,f,c
  4024  00154C  5016               	movf	send_data@send_buffer+1,w,c
  4025  00154E  22E2               	addwfc	fsr1h,f,c
  4026  001550  50DE               	movf	postinc2,w,c
  4027  001552  18E6               	xorwf	postinc1,w,c
  4028  001554  A4D8               	btfss	status,2,c
  4029  001556  D006               	goto	l307
  4030                           
  4031                           ;SlaveComm.c: 507: {
  4032                           ;SlaveComm.c: 508: send_end = 1;
  4033  001558  0E01               	movlw	1
  4034  00155A  6E19               	movwf	send_data@send_end,c
  4035                           
  4036                           ;SlaveComm.c: 509: SPI_send_data( '\0' );
  4037  00155C  0E00               	movlw	0
  4038  00155E  EC4E  F00F         	call	_SPI_send_data
  4039                           
  4040                           ;SlaveComm.c: 510: }
  4041  001562  D030               	goto	l310
  4042  001564                     l307:
  4043                           
  4044                           ;SlaveComm.c: 511: else
  4045                           ;SlaveComm.c: 512: {
  4046                           ;SlaveComm.c: 513: send_end = 0;
  4047  001564  0E00               	movlw	0
  4048  001566  6E19               	movwf	send_data@send_end,c
  4049                           
  4050                           ;SlaveComm.c: 516: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_positio
      +                          n] ) == 1 )
  4051  001568  EE20 F029          	lfsr	2,41
  4052  00156C  5015               	movf	send_data@send_buffer,w,c
  4053  00156E  26D9               	addwf	fsr2l,f,c
  4054  001570  5016               	movf	send_data@send_buffer+1,w,c
  4055  001572  22DA               	addwfc	fsr2h,f,c
  4056  001574  50DF               	movf	indf2,w,c
  4057  001576  6E17               	movwf	??_send_data& (0+255),c
  4058  001578  5017               	movf	??_send_data,w,c
  4059  00157A  0D01               	mullw	1
  4060  00157C  50F3               	movf	prodl,w,c
  4061  00157E  2415               	addwf	send_data@send_buffer,w,c
  4062  001580  6ED9               	movwf	fsr2l,c
  4063  001582  50F4               	movf	prodh,w,c
  4064  001584  2016               	addwfc	send_data@send_buffer+1,w,c
  4065  001586  6EDA               	movwf	fsr2h,c
  4066  001588  50DF               	movf	indf2,w,c
  4067  00158A  EC4E  F00F         	call	_SPI_send_data
  4068  00158E  06E8               	decf	wreg,f,c
  4069  001590  A4D8               	btfss	status,2,c
  4070  001592  D018               	goto	l310
  4071                           
  4072                           ;SlaveComm.c: 517: {
  4073                           ;SlaveComm.c: 519: send_buffer->read_position++;
  4074  001594  EE20 F029          	lfsr	2,41
  4075  001598  5015               	movf	send_data@send_buffer,w,c
  4076  00159A  26D9               	addwf	fsr2l,f,c
  4077  00159C  5016               	movf	send_data@send_buffer+1,w,c
  4078  00159E  22DA               	addwfc	fsr2h,f,c
  4079  0015A0  2ADF               	incf	indf2,f,c
  4080                           
  4081                           ;SlaveComm.c: 520: if( send_buffer->read_position >= 40 )
  4082  0015A2  EE20 F029          	lfsr	2,41
  4083  0015A6  5015               	movf	send_data@send_buffer,w,c
  4084  0015A8  26D9               	addwf	fsr2l,f,c
  4085  0015AA  5016               	movf	send_data@send_buffer+1,w,c
  4086  0015AC  22DA               	addwfc	fsr2h,f,c
  4087  0015AE  0E27               	movlw	39
  4088  0015B0  64DF               	cpfsgt	indf2,c
  4089  0015B2  D008               	goto	l310
  4090                           
  4091                           ;SlaveComm.c: 521: {
  4092                           ;SlaveComm.c: 522: send_buffer->read_position = 0;
  4093  0015B4  EE20 F029          	lfsr	2,41
  4094  0015B8  5015               	movf	send_data@send_buffer,w,c
  4095  0015BA  26D9               	addwf	fsr2l,f,c
  4096  0015BC  5016               	movf	send_data@send_buffer+1,w,c
  4097  0015BE  22DA               	addwfc	fsr2h,f,c
  4098  0015C0  0E00               	movlw	0
  4099  0015C2  6EDF               	movwf	indf2,c
  4100  0015C4                     l310:
  4101                           
  4102                           ;SlaveComm.c: 523: }
  4103                           ;SlaveComm.c: 524: }
  4104                           ;SlaveComm.c: 525: }
  4105                           ;SlaveComm.c: 527: return send_end;
  4106  0015C4  5019               	movf	send_data@send_end,w,c
  4107  0015C6  0012               	return	
  4108  0015C8                     __end_of_send_data:
  4109                           	opt stack 0
  4110                           tblptru	equ	0xFF8
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           intcon3	equ	0xFF0
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postinc1	equ	0xFE6
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _SPI_send_data *****************
  4129 ;; Defined at:
  4130 ;;		line 600 in file "SlaveComm.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  data            1    wreg     unsigned char 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  data            1   18[COMRAM] unsigned char 
  4135 ;;  sendGood        1   19[COMRAM] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      unsigned char 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4145 ;;      Params:         0       0       0       0       0       0       0
  4146 ;;      Locals:         2       0       0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0
  4148 ;;      Totals:         2       0       0       0       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_send_data
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text29
  4160  001E9C                     __ptext29:
  4161                           	opt stack 0
  4162  001E9C                     _SPI_send_data:
  4163                           	opt stack 26
  4164                           
  4165                           ;incstack = 0
  4166                           ;SPI_send_data@data stored from wreg
  4167  001E9C  6E13               	movwf	SPI_send_data@data,c
  4168                           
  4169                           ;SlaveComm.c: 602: bool sendGood = 0;
  4170  001E9E  0E00               	movlw	0
  4171  001EA0  6E14               	movwf	SPI_send_data@sendGood,c
  4172                           
  4173                           ;SlaveComm.c: 604: if( SPI_transmit_wait == 0 )
  4174  001EA2  504C               	movf	_SPI_transmit_wait,w,c
  4175  001EA4  A4D8               	btfss	status,2,c
  4176  001EA6  D006               	goto	l338
  4177                           
  4178                           ;SlaveComm.c: 605: {
  4179                           ;SlaveComm.c: 606: SSP2BUF = data;
  4180  001EA8  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  4181                           
  4182                           ;SlaveComm.c: 607: SPI_transmit_wait = 1;
  4183  001EAC  0E01               	movlw	1
  4184  001EAE  6E4C               	movwf	_SPI_transmit_wait,c
  4185                           
  4186                           ;SlaveComm.c: 608: sendGood = 1;
  4187  001EB0  0E01               	movlw	1
  4188  001EB2  D001               	goto	L5
  4189  001EB4                     l338:
  4190                           
  4191                           ;SlaveComm.c: 610: else
  4192                           ;SlaveComm.c: 611: {
  4193                           ;SlaveComm.c: 612: sendGood = 0;
  4194  001EB4  0E00               	movlw	0
  4195  001EB6                     L5:
  4196  001EB6  6E14               	movwf	SPI_send_data@sendGood,c
  4197                           
  4198                           ;SlaveComm.c: 613: }
  4199                           ;SlaveComm.c: 615: return sendGood;
  4200  001EB8  5014               	movf	SPI_send_data@sendGood,w,c
  4201  001EBA  0012               	return	
  4202  001EBC                     __end_of_SPI_send_data:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           prodh	equ	0xFF4
  4206                           prodl	equ	0xFF3
  4207                           intcon	equ	0xFF2
  4208                           intcon2	equ	0xFF1
  4209                           intcon3	equ	0xFF0
  4210                           postinc0	equ	0xFEE
  4211                           wreg	equ	0xFE8
  4212                           postinc1	equ	0xFE6
  4213                           fsr1h	equ	0xFE2
  4214                           fsr1l	equ	0xFE1
  4215                           indf2	equ	0xFDF
  4216                           postinc2	equ	0xFDE
  4217                           postdec2	equ	0xFDD
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8
  4221                           
  4222 ;; *************** function _resetCommunications *****************
  4223 ;; Defined at:
  4224 ;;		line 182 in file "SlaveComm.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  send_buffer     2   58[COMRAM] PTR struct buffer
  4227 ;;		 -> communications@send_buffer(42), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4239 ;;      Params:         2       0       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0
  4241 ;;      Temps:          0       2       0       0       0       0       0
  4242 ;;      Totals:         2       2       0       0       0       0       0
  4243 ;;Total ram usage:        4 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    7
  4246 ;; This function calls:
  4247 ;;		_com_command_setEnergyUsed
  4248 ;;		_com_command_setPower
  4249 ;;		_com_command_setVersion
  4250 ;; This function is called by:
  4251 ;;		_communications
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text30
  4256  00136E                     __ptext30:
  4257                           	opt stack 0
  4258  00136E                     _resetCommunications:
  4259                           	opt stack 21
  4260                           
  4261                           ;SlaveComm.c: 185: static int commState = 0;
  4262                           ;SlaveComm.c: 188: SSP2CON1bits.SSPEN = 0;
  4263                           
  4264                           ;incstack = 0
  4265  00136E  9A6C               	bcf	3948,5,c	;volatile
  4266                           
  4267                           ;SlaveComm.c: 189: _delay((unsigned long)((1)*(16000000UL/4000.0)));
  4268  001370  0E06               	movlw	6
  4269  001372  0100               	movlb	0	; () banked
  4270  001374  6FC6               	movwf	??_resetCommunications& (0+255),b
  4271  001376  0E30               	movlw	48
  4272  001378                     u3057:
  4273  001378  2EE8               	decfsz	wreg,f,c
  4274  00137A  D7FE               	bra	u3057
  4275  00137C  2FC6               	decfsz	??_resetCommunications& (0+255),f,b
  4276  00137E  D7FC               	bra	u3057
  4277  001380  F000               	nop	
  4278                           
  4279                           ;SlaveComm.c: 190: SSP2CON1bits.SSPEN = 1;
  4280  001382  8A6C               	bsf	3948,5,c	;volatile
  4281                           
  4282                           ;SlaveComm.c: 192: SSP2CON1bits.WCOL = 0;
  4283  001384  9E6C               	bcf	3948,7,c	;volatile
  4284                           
  4285                           ;SlaveComm.c: 193: SPI_transmit_wait = 0;
  4286  001386  0E00               	movlw	0
  4287  001388  6E4C               	movwf	_SPI_transmit_wait,c
  4288                           
  4289                           ;SlaveComm.c: 195: send_buffer->read_position = 0;
  4290  00138A  EE20 F029          	lfsr	2,41
  4291  00138E  503B               	movf	resetCommunications@send_buffer,w,c
  4292  001390  26D9               	addwf	fsr2l,f,c
  4293  001392  503C               	movf	resetCommunications@send_buffer+1,w,c
  4294  001394  22DA               	addwfc	fsr2h,f,c
  4295  001396  0E00               	movlw	0
  4296  001398  6EDF               	movwf	indf2,c
  4297                           
  4298                           ;SlaveComm.c: 196: send_buffer->write_position = 0;
  4299  00139A  EE20 F028          	lfsr	2,40
  4300  00139E  503B               	movf	resetCommunications@send_buffer,w,c
  4301  0013A0  26D9               	addwf	fsr2l,f,c
  4302  0013A2  503C               	movf	resetCommunications@send_buffer+1,w,c
  4303  0013A4  22DA               	addwfc	fsr2h,f,c
  4304  0013A6  0E00               	movlw	0
  4305  0013A8  6EDF               	movwf	indf2,c
  4306                           
  4307                           ;SlaveComm.c: 201: commState++;
  4308  0013AA  4A47               	infsnz	resetCommunications@commState,f,c
  4309  0013AC  2A48               	incf	resetCommunications@commState+1,f,c
  4310                           
  4311                           ;SlaveComm.c: 202: switch( commState )
  4312  0013AE  D019               	goto	l220
  4313  0013B0                     
  4314                           ;SlaveComm.c: 205: com_command_setVersion( send_buffer );
  4315  0013B0  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  4316  0013B4  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  4317  0013B8  EC28  F00F         	call	_com_command_setVersion	;wreg free
  4318                           
  4319                           ;SlaveComm.c: 206: break;
  4320  0013BC  0012               	return	
  4321  0013BE                     
  4322                           ;SlaveComm.c: 208: com_command_setPower( send_buffer );
  4323  0013BE  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  4324  0013C2  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  4325  0013C6  EC9F  F00D         	call	_com_command_setPower	;wreg free
  4326                           
  4327                           ;SlaveComm.c: 209: break;
  4328  0013CA  0012               	return	
  4329  0013CC                     
  4330                           ;SlaveComm.c: 211: com_command_setEnergyUsed( send_buffer );
  4331  0013CC  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  4332  0013D0  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  4333  0013D4  ECC4  F00D         	call	_com_command_setEnergyUsed	;wreg free
  4334  0013D8                     
  4335                           ;SlaveComm.c: 223: commState = 0;
  4336  0013D8  0E00               	movlw	0
  4337  0013DA  6E48               	movwf	resetCommunications@commState+1,c
  4338  0013DC  0E00               	movlw	0
  4339  0013DE  6E47               	movwf	resetCommunications@commState,c
  4340                           
  4341                           ;SlaveComm.c: 225: }
  4342                           
  4343                           ;SlaveComm.c: 224: break;
  4344  0013E0  0012               	return	
  4345  0013E2                     l220:
  4346  0013E2  C047  F0C6         	movff	resetCommunications@commState,??_resetCommunications
  4347  0013E6  C048  F0C7         	movff	resetCommunications@commState+1,??_resetCommunications+1
  4348                           
  4349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4350                           ; Switch size 1, requested type "space"
  4351                           ; Number of cases is 1, Range of values is 0 to 0
  4352                           ; switch strategies available:
  4353                           ; Name         Instructions Cycles
  4354                           ; simple_byte            4     3 (average)
  4355                           ;	Chosen strategy is simple_byte
  4356  0013EA  0100               	movlb	0	; () banked
  4357  0013EC  51C7               	movf	(??_resetCommunications+1)& (0+255),w,b
  4358  0013EE  0A00               	xorlw	0	; case 0
  4359  0013F0  A4D8               	btfss	status,2,c
  4360  0013F2  D7F2               	goto	l225
  4361                           
  4362                           ; BSR set to: 0
  4363                           ; Switch size 1, requested type "space"
  4364                           ; Number of cases is 3, Range of values is 1 to 3
  4365                           ; switch strategies available:
  4366                           ; Name         Instructions Cycles
  4367                           ; simple_byte           10     6 (average)
  4368                           ;	Chosen strategy is simple_byte
  4369  0013F4  51C6               	movf	??_resetCommunications& (0+255),w,b
  4370  0013F6  0A01               	xorlw	1	; case 1
  4371  0013F8  B4D8               	btfsc	status,2,c
  4372  0013FA  D7DA               	goto	l221
  4373  0013FC  0A03               	xorlw	3	; case 2
  4374  0013FE  B4D8               	btfsc	status,2,c
  4375  001400  D7DE               	goto	l223
  4376  001402  0A01               	xorlw	1	; case 3
  4377  001404  B4D8               	btfsc	status,2,c
  4378  001406  D7E2               	goto	l224
  4379  001408  D7E7               	goto	l225
  4380  00140A                     __end_of_resetCommunications:
  4381                           	opt stack 0
  4382                           tblptru	equ	0xFF8
  4383                           prodh	equ	0xFF4
  4384                           prodl	equ	0xFF3
  4385                           intcon	equ	0xFF2
  4386                           intcon2	equ	0xFF1
  4387                           intcon3	equ	0xFF0
  4388                           postinc0	equ	0xFEE
  4389                           wreg	equ	0xFE8
  4390                           postinc1	equ	0xFE6
  4391                           fsr1h	equ	0xFE2
  4392                           fsr1l	equ	0xFE1
  4393                           indf2	equ	0xFDF
  4394                           postinc2	equ	0xFDE
  4395                           postdec2	equ	0xFDD
  4396                           fsr2h	equ	0xFDA
  4397                           fsr2l	equ	0xFD9
  4398                           status	equ	0xFD8
  4399                           
  4400 ;; *************** function _com_command_setVersion *****************
  4401 ;; Defined at:
  4402 ;;		line 679 in file "SlaveComm.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4405 ;;		 -> communications@send_buffer(42), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4417 ;;      Params:         2       0       0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0
  4420 ;;      Totals:         2       0       0       0       0       0       0
  4421 ;;Total ram usage:        2 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    6
  4424 ;; This function calls:
  4425 ;;		_command_builder3
  4426 ;; This function is called by:
  4427 ;;		_resetCommunications
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text31
  4432  001E50                     __ptext31:
  4433                           	opt stack 0
  4434  001E50                     _com_command_setVersion:
  4435                           	opt stack 21
  4436                           
  4437                           ;SlaveComm.c: 681: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  4438                           
  4439                           ;incstack = 0
  4440  001E50  C039  F02F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  4441  001E54  C03A  F030         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  4442  001E58  0E4E               	movlw	low STR_2
  4443  001E5A  6E31               	movwf	command_builder3@data1,c
  4444  001E5C  0E06               	movlw	high STR_2
  4445  001E5E  6E32               	movwf	command_builder3@data1+1,c
  4446  001E60  0E0D               	movlw	low STR_11
  4447  001E62  6E33               	movwf	command_builder3@data2,c
  4448  001E64  0E06               	movlw	high STR_11
  4449  001E66  6E34               	movwf	command_builder3@data2+1,c
  4450  001E68  0E46               	movlw	low STR_29
  4451  001E6A  6E35               	movwf	command_builder3@data3,c
  4452  001E6C  0E06               	movlw	high STR_29
  4453  001E6E  6E36               	movwf	command_builder3@data3+1,c
  4454  001E70  EC94  F007         	call	_command_builder3	;wreg free
  4455  001E74  0012               	return	
  4456  001E76                     __end_of_com_command_setVersion:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           prodh	equ	0xFF4
  4460                           prodl	equ	0xFF3
  4461                           intcon	equ	0xFF2
  4462                           intcon2	equ	0xFF1
  4463                           intcon3	equ	0xFF0
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postinc1	equ	0xFE6
  4467                           fsr1h	equ	0xFE2
  4468                           fsr1l	equ	0xFE1
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _com_command_setPower *****************
  4477 ;; Defined at:
  4478 ;;		line 635 in file "SlaveComm.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4481 ;;		 -> communications@send_buffer(42), 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  temp           12   16[BANK0 ] unsigned char [12]
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4493 ;;      Params:         2       0       0       0       0       0       0
  4494 ;;      Locals:         0      12       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0
  4496 ;;      Totals:         2      12       0       0       0       0       0
  4497 ;;Total ram usage:       14 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    6
  4500 ;; This function calls:
  4501 ;;		_command_builder3
  4502 ;;		_ultoa
  4503 ;; This function is called by:
  4504 ;;		_resetCommunications
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text32
  4509  001B3E                     __ptext32:
  4510                           	opt stack 0
  4511  001B3E                     _com_command_setPower:
  4512                           	opt stack 21
  4513                           
  4514                           ;SlaveComm.c: 639: char temp[12];
  4515                           ;SlaveComm.c: 641: ultoa( temp, meterWatts_global, 10 );
  4516                           
  4517                           ;incstack = 0
  4518  001B3E  0EBA               	movlw	low com_command_setPower@temp
  4519  001B40  6E20               	movwf	ultoa@buf,c
  4520  001B42  0E00               	movlw	high com_command_setPower@temp
  4521  001B44  6E21               	movwf	ultoa@buf+1,c
  4522  001B46  C078  F022         	movff	_meterWatts_global,ultoa@val
  4523  001B4A  C079  F023         	movff	_meterWatts_global+1,ultoa@val+1
  4524  001B4E  C07A  F024         	movff	_meterWatts_global+2,ultoa@val+2
  4525  001B52  C07B  F025         	movff	_meterWatts_global+3,ultoa@val+3
  4526  001B56  0E00               	movlw	0
  4527  001B58  6E27               	movwf	ultoa@base+1,c
  4528  001B5A  0E0A               	movlw	10
  4529  001B5C  6E26               	movwf	ultoa@base,c
  4530  001B5E  EC27  F006         	call	_ultoa	;wreg free
  4531                           
  4532                           ;SlaveComm.c: 642: command_builder3( send_buffer, "Set", "Watts", temp );
  4533  001B62  C039  F02F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  4534  001B66  C03A  F030         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  4535  001B6A  0E4E               	movlw	low STR_2
  4536  001B6C  6E31               	movwf	command_builder3@data1,c
  4537  001B6E  0E06               	movlw	high STR_2
  4538  001B70  6E32               	movwf	command_builder3@data1+1,c
  4539  001B72  0E24               	movlw	low STR_7
  4540  001B74  6E33               	movwf	command_builder3@data2,c
  4541  001B76  0E06               	movlw	high STR_7
  4542  001B78  6E34               	movwf	command_builder3@data2+1,c
  4543  001B7A  0EBA               	movlw	low com_command_setPower@temp
  4544  001B7C  6E35               	movwf	command_builder3@data3,c
  4545  001B7E  0E00               	movlw	high com_command_setPower@temp
  4546  001B80  6E36               	movwf	command_builder3@data3+1,c
  4547  001B82  EC94  F007         	call	_command_builder3	;wreg free
  4548  001B86  0012               	return	
  4549  001B88                     __end_of_com_command_setPower:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           prodh	equ	0xFF4
  4553                           prodl	equ	0xFF3
  4554                           intcon	equ	0xFF2
  4555                           intcon2	equ	0xFF1
  4556                           intcon3	equ	0xFF0
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           postinc1	equ	0xFE6
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           indf2	equ	0xFDF
  4563                           postinc2	equ	0xFDE
  4564                           postdec2	equ	0xFDD
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _receive_data *****************
  4570 ;; Defined at:
  4571 ;;		line 229 in file "SlaveComm.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  4574 ;;		 -> communications@receive_buffer(42), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  data            1   24[COMRAM] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      enum E6750
  4579 ;; Registers used:
  4580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4586 ;;      Params:         2       0       0       0       0       0       0
  4587 ;;      Locals:         1       0       0       0       0       0       0
  4588 ;;      Temps:          1       0       0       0       0       0       0
  4589 ;;      Totals:         4       0       0       0       0       0       0
  4590 ;;Total ram usage:        4 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    2
  4593 ;; This function calls:
  4594 ;;		_SPI_receive_data
  4595 ;; This function is called by:
  4596 ;;		_communications
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text33
  4601  000FEA                     __ptext33:
  4602                           	opt stack 0
  4603  000FEA                     _receive_data:
  4604                           	opt stack 26
  4605                           
  4606                           ;SlaveComm.c: 231: char data;
  4607                           ;SlaveComm.c: 233: static enum receive_status my_status = receive_waiting;
  4608                           ;SlaveComm.c: 235: if( my_status == receive_end_command )
  4609                           
  4610                           ;incstack = 0
  4611  000FEA  0E02               	movlw	2
  4612  000FEC  184B               	xorwf	receive_data@my_status,w,c
  4613  000FEE  A4D8               	btfss	status,2,c
  4614  000FF0  D002               	goto	l231
  4615                           
  4616                           ;SlaveComm.c: 236: {
  4617                           ;SlaveComm.c: 237: my_status = receive_waiting;
  4618  000FF2  0E00               	movlw	0
  4619  000FF4  6E4B               	movwf	receive_data@my_status,c
  4620  000FF6                     l231:
  4621                           
  4622                           ;SlaveComm.c: 238: }
  4623                           ;SlaveComm.c: 240: if( SPI_receive_data( &data ) == 1 )
  4624  000FF6  0E19               	movlw	low receive_data@data
  4625  000FF8  6E13               	movwf	SPI_receive_data@data,c
  4626  000FFA  0E00               	movlw	high receive_data@data
  4627  000FFC  6E14               	movwf	SPI_receive_data@data+1,c
  4628  000FFE  EC14  F00F         	call	_SPI_receive_data	;wreg free
  4629  001002  06E8               	decf	wreg,f,c
  4630  001004  A4D8               	btfss	status,2,c
  4631  001006  D04F               	goto	l236
  4632                           
  4633                           ;SlaveComm.c: 241: {
  4634                           ;SlaveComm.c: 242: if( (data == '!') && (my_status != receive_in_command) )
  4635  001008  0E21               	movlw	33
  4636  00100A  1819               	xorwf	receive_data@data,w,c
  4637  00100C  A4D8               	btfss	status,2,c
  4638  00100E  D015               	goto	l233
  4639  001010  044B               	decf	receive_data@my_status,w,c
  4640  001012  B4D8               	btfsc	status,2,c
  4641  001014  D012               	goto	l233
  4642                           
  4643                           ;SlaveComm.c: 243: {
  4644                           ;SlaveComm.c: 244: my_status = receive_in_command;
  4645  001016  0E01               	movlw	1
  4646  001018  6E4B               	movwf	receive_data@my_status,c
  4647                           
  4648                           ;SlaveComm.c: 245: receive_buffer->read_position = 0;
  4649  00101A  EE20 F029          	lfsr	2,41
  4650  00101E  5016               	movf	receive_data@receive_buffer,w,c
  4651  001020  26D9               	addwf	fsr2l,f,c
  4652  001022  5017               	movf	receive_data@receive_buffer+1,w,c
  4653  001024  22DA               	addwfc	fsr2h,f,c
  4654  001026  0E00               	movlw	0
  4655  001028  6EDF               	movwf	indf2,c
  4656                           
  4657                           ;SlaveComm.c: 246: receive_buffer->write_position = 0;
  4658  00102A  EE20 F028          	lfsr	2,40
  4659  00102E  5016               	movf	receive_data@receive_buffer,w,c
  4660  001030  26D9               	addwf	fsr2l,f,c
  4661  001032  5017               	movf	receive_data@receive_buffer+1,w,c
  4662  001034  22DA               	addwfc	fsr2h,f,c
  4663  001036  0E00               	movlw	0
  4664  001038  6EDF               	movwf	indf2,c
  4665  00103A                     l233:
  4666                           
  4667                           ;SlaveComm.c: 247: }
  4668                           ;SlaveComm.c: 249: if( my_status == receive_in_command )
  4669  00103A  044B               	decf	receive_data@my_status,w,c
  4670  00103C  A4D8               	btfss	status,2,c
  4671  00103E  D02A               	goto	l235
  4672                           
  4673                           ;SlaveComm.c: 250: {
  4674                           ;SlaveComm.c: 251: receive_buffer->data_buffer[ receive_buffer->write_position] = data;
  4675  001040  EE20 F028          	lfsr	2,40
  4676  001044  5016               	movf	receive_data@receive_buffer,w,c
  4677  001046  26D9               	addwf	fsr2l,f,c
  4678  001048  5017               	movf	receive_data@receive_buffer+1,w,c
  4679  00104A  22DA               	addwfc	fsr2h,f,c
  4680  00104C  50DF               	movf	indf2,w,c
  4681  00104E  6E18               	movwf	??_receive_data& (0+255),c
  4682  001050  5018               	movf	??_receive_data,w,c
  4683  001052  0D01               	mullw	1
  4684  001054  50F3               	movf	prodl,w,c
  4685  001056  2416               	addwf	receive_data@receive_buffer,w,c
  4686  001058  6ED9               	movwf	fsr2l,c
  4687  00105A  50F4               	movf	prodh,w,c
  4688  00105C  2017               	addwfc	receive_data@receive_buffer+1,w,c
  4689  00105E  6EDA               	movwf	fsr2h,c
  4690  001060  C019  FFDF         	movff	receive_data@data,indf2
  4691                           
  4692                           ;SlaveComm.c: 253: receive_buffer->write_position++;
  4693  001064  EE20 F028          	lfsr	2,40
  4694  001068  5016               	movf	receive_data@receive_buffer,w,c
  4695  00106A  26D9               	addwf	fsr2l,f,c
  4696  00106C  5017               	movf	receive_data@receive_buffer+1,w,c
  4697  00106E  22DA               	addwfc	fsr2h,f,c
  4698  001070  2ADF               	incf	indf2,f,c
  4699                           
  4700                           ;SlaveComm.c: 254: if( receive_buffer->write_position >= 40 )
  4701  001072  EE20 F028          	lfsr	2,40
  4702  001076  5016               	movf	receive_data@receive_buffer,w,c
  4703  001078  26D9               	addwf	fsr2l,f,c
  4704  00107A  5017               	movf	receive_data@receive_buffer+1,w,c
  4705  00107C  22DA               	addwfc	fsr2h,f,c
  4706  00107E  0E27               	movlw	39
  4707  001080  64DF               	cpfsgt	indf2,c
  4708  001082  D008               	goto	l235
  4709                           
  4710                           ;SlaveComm.c: 255: {
  4711                           ;SlaveComm.c: 256: receive_buffer->write_position = (40 - 1);
  4712  001084  EE20 F028          	lfsr	2,40
  4713  001088  5016               	movf	receive_data@receive_buffer,w,c
  4714  00108A  26D9               	addwf	fsr2l,f,c
  4715  00108C  5017               	movf	receive_data@receive_buffer+1,w,c
  4716  00108E  22DA               	addwfc	fsr2h,f,c
  4717  001090  0E27               	movlw	39
  4718  001092  6EDF               	movwf	indf2,c
  4719  001094                     l235:
  4720                           
  4721                           ;SlaveComm.c: 257: }
  4722                           ;SlaveComm.c: 258: }
  4723                           ;SlaveComm.c: 260: if( (my_status == receive_in_command) && (data == '*') )
  4724  001094  044B               	decf	receive_data@my_status,w,c
  4725  001096  A4D8               	btfss	status,2,c
  4726  001098  D006               	goto	l236
  4727  00109A  0E2A               	movlw	42
  4728  00109C  1819               	xorwf	receive_data@data,w,c
  4729  00109E  A4D8               	btfss	status,2,c
  4730  0010A0  D002               	goto	l236
  4731                           
  4732                           ;SlaveComm.c: 261: {
  4733                           ;SlaveComm.c: 262: my_status = receive_end_command;
  4734  0010A2  0E02               	movlw	2
  4735  0010A4  6E4B               	movwf	receive_data@my_status,c
  4736  0010A6                     l236:
  4737                           
  4738                           ;SlaveComm.c: 263: }
  4739                           ;SlaveComm.c: 264: }
  4740                           ;SlaveComm.c: 266: return my_status;
  4741  0010A6  504B               	movf	receive_data@my_status,w,c
  4742  0010A8  0012               	return	
  4743  0010AA                     __end_of_receive_data:
  4744                           	opt stack 0
  4745                           tblptru	equ	0xFF8
  4746                           prodh	equ	0xFF4
  4747                           prodl	equ	0xFF3
  4748                           intcon	equ	0xFF2
  4749                           intcon2	equ	0xFF1
  4750                           intcon3	equ	0xFF0
  4751                           postinc0	equ	0xFEE
  4752                           wreg	equ	0xFE8
  4753                           postinc1	equ	0xFE6
  4754                           fsr1h	equ	0xFE2
  4755                           fsr1l	equ	0xFE1
  4756                           indf2	equ	0xFDF
  4757                           postinc2	equ	0xFDE
  4758                           postdec2	equ	0xFDD
  4759                           fsr2h	equ	0xFDA
  4760                           fsr2l	equ	0xFD9
  4761                           status	equ	0xFD8
  4762                           
  4763 ;; *************** function _SPI_receive_data *****************
  4764 ;; Defined at:
  4765 ;;		line 579 in file "SlaveComm.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  data            2   18[COMRAM] PTR unsigned char 
  4768 ;;		 -> receive_data@data(1), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  recvGood        1   20[COMRAM] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr2l, fsr2h, status,2
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         2       0       0       0       0       0       0
  4781 ;;      Locals:         1       0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0
  4783 ;;      Totals:         3       0       0       0       0       0       0
  4784 ;;Total ram usage:        3 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_receive_data
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text34
  4795  001E28                     __ptext34:
  4796                           	opt stack 0
  4797  001E28                     _SPI_receive_data:
  4798                           	opt stack 26
  4799                           
  4800                           ;SlaveComm.c: 582: bool recvGood = 0;
  4801                           
  4802                           ;incstack = 0
  4803  001E28  0E00               	movlw	0
  4804  001E2A  6E15               	movwf	SPI_receive_data@recvGood,c
  4805                           
  4806                           ;SlaveComm.c: 584: if( SSP2STATbits.BF == 1 )
  4807  001E2C  A06D               	btfss	3949,0,c	;volatile
  4808  001E2E  D00C               	goto	l333
  4809                           
  4810                           ;SlaveComm.c: 585: {
  4811                           ;SlaveComm.c: 586: *data = SSP2BUF;
  4812  001E30  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  4813  001E34  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  4814  001E38  CF6F FFDF          	movff	3951,indf2	;volatile
  4815                           
  4816                           ;SlaveComm.c: 587: recvGood = 1;
  4817  001E3C  0E01               	movlw	1
  4818  001E3E  6E15               	movwf	SPI_receive_data@recvGood,c
  4819                           
  4820                           ;SlaveComm.c: 588: SSP2CON1bits.WCOL = 0;
  4821  001E40  9E6C               	bcf	3948,7,c	;volatile
  4822                           
  4823                           ;SlaveComm.c: 589: SPI_transmit_wait = 0;
  4824  001E42  0E00               	movlw	0
  4825  001E44  6E4C               	movwf	_SPI_transmit_wait,c
  4826                           
  4827                           ;SlaveComm.c: 590: }
  4828  001E46  D002               	goto	l334
  4829  001E48                     l333:
  4830                           
  4831                           ;SlaveComm.c: 591: else
  4832                           ;SlaveComm.c: 592: {
  4833                           ;SlaveComm.c: 593: recvGood = 0;
  4834  001E48  0E00               	movlw	0
  4835  001E4A  6E15               	movwf	SPI_receive_data@recvGood,c
  4836  001E4C                     l334:
  4837                           
  4838                           ;SlaveComm.c: 594: }
  4839                           ;SlaveComm.c: 596: return recvGood;
  4840  001E4C  5015               	movf	SPI_receive_data@recvGood,w,c
  4841  001E4E  0012               	return	
  4842  001E50                     __end_of_SPI_receive_data:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           intcon2	equ	0xFF1
  4849                           intcon3	equ	0xFF0
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           postinc1	equ	0xFE6
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _process_data *****************
  4863 ;; Defined at:
  4864 ;;		line 269 in file "SlaveComm.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  receive_buff    2   32[BANK0 ] PTR struct buffer
  4867 ;;		 -> communications@receive_buffer(42), 
  4868 ;;  send_buffer     2   34[BANK0 ] PTR struct buffer
  4869 ;;		 -> communications@send_buffer(42), 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  4872 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4882 ;;      Params:         0       4       0       0       0       0       0
  4883 ;;      Locals:         0       0      51       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0
  4885 ;;      Totals:         0       4      51       0       0       0       0
  4886 ;;Total ram usage:       55 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    8
  4889 ;; This function calls:
  4890 ;;		_process_data_parameterize
  4891 ;;		_process_data_parameters
  4892 ;; This function is called by:
  4893 ;;		_communications
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text35
  4898  001D72                     __ptext35:
  4899                           	opt stack 0
  4900  001D72                     _process_data:
  4901                           	opt stack 20
  4902                           
  4903                           ;SlaveComm.c: 271: bool end_of_transmission_received;
  4904                           ;SlaveComm.c: 276: char parameters[5][10];
  4905                           ;SlaveComm.c: 278: process_data_parameterize( parameters, receive_buffer );
  4906                           
  4907                           ;incstack = 0
  4908  001D72  0E00               	movlw	low process_data@parameters
  4909  001D74  6E19               	movwf	process_data_parameterize@parameters,c
  4910  001D76  0E01               	movlw	high process_data@parameters
  4911  001D78  6E1A               	movwf	process_data_parameterize@parameters+1,c
  4912  001D7A  C0CA  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  4913  001D7E  C0CB  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  4914  001D82  ECD1  F004         	call	_process_data_parameterize	;wreg free
  4915                           
  4916                           ;SlaveComm.c: 280: end_of_transmission_received = process_data_parameters( parameters, s
      +                          end_buffer );
  4917  001D86  0E00               	movlw	low process_data@parameters
  4918  001D88  0100               	movlb	0	; () banked
  4919  001D8A  6FC6               	movwf	process_data_parameters@parameters& (0+255),b
  4920  001D8C  0E01               	movlw	high process_data@parameters
  4921  001D8E  6FC7               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  4922  001D90  C0CC  F0C8         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  4923  001D94  C0CD  F0C9         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  4924  001D98  EC2A  F003         	call	_process_data_parameters	;wreg free
  4925  001D9C  0101               	movlb	1	; () banked
  4926  001D9E  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  4927                           
  4928                           ; BSR set to: 1
  4929                           ;SlaveComm.c: 282: return end_of_transmission_received;
  4930  001DA0  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  4931  001DA2  0012               	return	
  4932  001DA4                     __end_of_process_data:
  4933                           	opt stack 0
  4934                           tblptru	equ	0xFF8
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           intcon2	equ	0xFF1
  4939                           intcon3	equ	0xFF0
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           postinc1	equ	0xFE6
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           fsr2h	equ	0xFDA
  4949                           fsr2l	equ	0xFD9
  4950                           status	equ	0xFD8
  4951                           
  4952 ;; *************** function _process_data_parameters *****************
  4953 ;; Defined at:
  4954 ;;		line 345 in file "SlaveComm.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  parameters      2   28[BANK0 ] PTR unsigned char [10]
  4957 ;;		 -> process_data@parameters(50), 
  4958 ;;  send_buffer     2   30[BANK0 ] PTR struct buffer
  4959 ;;		 -> communications@send_buffer(42), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  end_of_trans    1   58[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      unsigned char 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4971 ;;      Params:         0       4       0       0       0       0       0
  4972 ;;      Locals:         1       0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0
  4974 ;;      Totals:         1       4       0       0       0       0       0
  4975 ;;Total ram usage:        5 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    7
  4978 ;; This function calls:
  4979 ;;		_atol
  4980 ;;		_com_command_setEnergyUsed
  4981 ;;		_send_end_of_transmission
  4982 ;;		_strmatch
  4983 ;; This function is called by:
  4984 ;;		_process_data
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text36
  4989  000654                     __ptext36:
  4990                           	opt stack 0
  4991  000654                     _process_data_parameters:
  4992                           	opt stack 20
  4993                           
  4994                           ;SlaveComm.c: 347: bool end_of_transmission_received = 0;
  4995                           
  4996                           ; BSR set to: 1
  4997                           ;incstack = 0
  4998  000654  0E00               	movlw	0
  4999  000656  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5000                           
  5001                           ;SlaveComm.c: 350: if( strmatch( parameters[0], "END" ) == 1 )
  5002  000658  C0C6  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5003  00065C  C0C7  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5004  000660  0E4A               	movlw	low STR_1
  5005  000662  6E20               	movwf	strmatch@b,c
  5006  000664  0E06               	movlw	high STR_1
  5007  000666  6E21               	movwf	strmatch@b+1,c
  5008  000668  ECD2  F00E         	call	_strmatch	;wreg free
  5009  00066C  06E8               	decf	wreg,f,c
  5010  00066E  A4D8               	btfss	status,2,c
  5011  000670  D003               	goto	l260
  5012                           
  5013                           ;SlaveComm.c: 351: {
  5014                           ;SlaveComm.c: 352: end_of_transmission_received = 1;
  5015  000672  0E01               	movlw	1
  5016  000674  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5017                           
  5018                           ;SlaveComm.c: 353: }
  5019  000676  D0D1               	goto	l278
  5020  000678                     l260:
  5021                           
  5022                           ;SlaveComm.c: 354: else if( strmatch( parameters[0], "Set" ) == 1 )
  5023  000678  C0C6  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5024  00067C  C0C7  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5025  000680  0E4E               	movlw	low STR_2
  5026  000682  6E20               	movwf	strmatch@b,c
  5027  000684  0E06               	movlw	high STR_2
  5028  000686  6E21               	movwf	strmatch@b+1,c
  5029  000688  ECD2  F00E         	call	_strmatch	;wreg free
  5030  00068C  06E8               	decf	wreg,f,c
  5031  00068E  A4D8               	btfss	status,2,c
  5032  000690  D038               	goto	l262
  5033                           
  5034                           ;SlaveComm.c: 355: {
  5035                           ;SlaveComm.c: 356: if( strmatch( parameters[1], "Calibration" ) == 1 )
  5036  000692  0E0A               	movlw	10
  5037  000694  0100               	movlb	0	; () banked
  5038  000696  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5039  000698  6E1E               	movwf	strmatch@a,c
  5040  00069A  0E00               	movlw	0
  5041  00069C  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5042  00069E  6E1F               	movwf	strmatch@a+1,c
  5043  0006A0  0E01               	movlw	low STR_3
  5044  0006A2  6E20               	movwf	strmatch@b,c
  5045  0006A4  0E06               	movlw	high STR_3
  5046  0006A6  6E21               	movwf	strmatch@b+1,c
  5047  0006A8  ECD2  F00E         	call	_strmatch	;wreg free
  5048  0006AC  06E8               	decf	wreg,f,c
  5049  0006AE  B4D8               	btfsc	status,2,c
  5050  0006B0  D0B4               	goto	l278
  5051                           
  5052                           ;SlaveComm.c: 360: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5053                           
  5054                           ;SlaveComm.c: 357: {
  5055                           ;SlaveComm.c: 359: }
  5056  0006B2  0E0A               	movlw	10
  5057  0006B4  0100               	movlb	0	; () banked
  5058  0006B6  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5059  0006B8  6E1E               	movwf	strmatch@a,c
  5060  0006BA  0E00               	movlw	0
  5061  0006BC  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5062  0006BE  6E1F               	movwf	strmatch@a+1,c
  5063  0006C0  0E17               	movlw	low STR_4
  5064  0006C2  6E20               	movwf	strmatch@b,c
  5065  0006C4  0E06               	movlw	high STR_4
  5066  0006C6  6E21               	movwf	strmatch@b+1,c
  5067  0006C8  ECD2  F00E         	call	_strmatch	;wreg free
  5068  0006CC  06E8               	decf	wreg,f,c
  5069  0006CE  A4D8               	btfss	status,2,c
  5070  0006D0  D0A4               	goto	l278
  5071                           
  5072                           ;SlaveComm.c: 361: {
  5073                           ;SlaveComm.c: 366: meterEnergyUsed_global = atol( parameters[2] );
  5074  0006D2  0E14               	movlw	20
  5075  0006D4  0100               	movlb	0	; () banked
  5076  0006D6  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5077  0006D8  6E1F               	movwf	atol@s,c
  5078  0006DA  0E00               	movlw	0
  5079  0006DC  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5080  0006DE  6E20               	movwf	atol@s+1,c
  5081  0006E0  ECA2  F006         	call	_atol	;wreg free
  5082  0006E4  C01F  F03D         	movff	?_atol,_meterEnergyUsed_global
  5083  0006E8  C020  F03E         	movff	?_atol+1,_meterEnergyUsed_global+1
  5084  0006EC  C021  F03F         	movff	?_atol+2,_meterEnergyUsed_global+2
  5085  0006F0  C022  F040         	movff	?_atol+3,_meterEnergyUsed_global+3
  5086                           
  5087                           ;SlaveComm.c: 367: com_command_setEnergyUsed( send_buffer );
  5088  0006F4  C0C8  F039         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  5089  0006F8  C0C9  F03A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  5090  0006FC  ECC4  F00D         	call	_com_command_setEnergyUsed	;wreg free
  5091                           
  5092                           ;SlaveComm.c: 368: }
  5093                           ;SlaveComm.c: 369: }
  5094  000700  D08C               	goto	l278
  5095  000702                     l262:
  5096                           
  5097                           ;SlaveComm.c: 370: else if( strmatch( parameters[0], "Read" ) == 1 )
  5098  000702  C0C6  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5099  000706  C0C7  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5100  00070A  0E2F               	movlw	low STR_5
  5101  00070C  6E20               	movwf	strmatch@b,c
  5102  00070E  0E06               	movlw	high STR_5
  5103  000710  6E21               	movwf	strmatch@b+1,c
  5104  000712  ECD2  F00E         	call	_strmatch	;wreg free
  5105  000716  06E8               	decf	wreg,f,c
  5106  000718  B4D8               	btfsc	status,2,c
  5107  00071A  D07F               	goto	l278
  5108                           
  5109                           ;SlaveComm.c: 375: else if( strmatch( parameters[0], "Conf" ) == 1 )
  5110                           
  5111                           ;SlaveComm.c: 371: {
  5112                           ;SlaveComm.c: 374: }
  5113  00071C  C0C6  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5114  000720  C0C7  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5115  000724  0E34               	movlw	low STR_6
  5116  000726  6E20               	movwf	strmatch@b,c
  5117  000728  0E06               	movlw	high STR_6
  5118  00072A  6E21               	movwf	strmatch@b+1,c
  5119  00072C  ECD2  F00E         	call	_strmatch	;wreg free
  5120  000730  06E8               	decf	wreg,f,c
  5121  000732  A4D8               	btfss	status,2,c
  5122  000734  D072               	goto	l278
  5123                           
  5124                           ;SlaveComm.c: 376: {
  5125                           ;SlaveComm.c: 377: if( strmatch( parameters[1], "Watts" ) == 1 )
  5126  000736  0E0A               	movlw	10
  5127  000738  0100               	movlb	0	; () banked
  5128  00073A  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5129  00073C  6E1E               	movwf	strmatch@a,c
  5130  00073E  0E00               	movlw	0
  5131  000740  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5132  000742  6E1F               	movwf	strmatch@a+1,c
  5133  000744  0E24               	movlw	low STR_7
  5134  000746  6E20               	movwf	strmatch@b,c
  5135  000748  0E06               	movlw	high STR_7
  5136  00074A  6E21               	movwf	strmatch@b+1,c
  5137  00074C  ECD2  F00E         	call	_strmatch	;wreg free
  5138  000750  06E8               	decf	wreg,f,c
  5139  000752  A4D8               	btfss	status,2,c
  5140  000754  D007               	goto	l270
  5141                           
  5142                           ;SlaveComm.c: 378: {
  5143                           ;SlaveComm.c: 379: send_end_of_transmission( send_buffer );
  5144  000756  C0C8  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5145  00075A  C0C9  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5146  00075E  ECA4  F00F         	call	_send_end_of_transmission	;wreg free
  5147                           
  5148                           ;SlaveComm.c: 380: }
  5149  000762  D05B               	goto	l278
  5150  000764                     l270:
  5151                           
  5152                           ;SlaveComm.c: 381: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5153  000764  0E0A               	movlw	10
  5154  000766  0100               	movlb	0	; () banked
  5155  000768  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5156  00076A  6E1E               	movwf	strmatch@a,c
  5157  00076C  0E00               	movlw	0
  5158  00076E  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5159  000770  6E1F               	movwf	strmatch@a+1,c
  5160  000772  0E17               	movlw	low STR_4
  5161  000774  6E20               	movwf	strmatch@b,c
  5162  000776  0E06               	movlw	high STR_4
  5163  000778  6E21               	movwf	strmatch@b+1,c
  5164  00077A  ECD2  F00E         	call	_strmatch	;wreg free
  5165  00077E  06E8               	decf	wreg,f,c
  5166  000780  A4D8               	btfss	status,2,c
  5167  000782  D007               	goto	l272
  5168                           
  5169                           ;SlaveComm.c: 382: {
  5170                           ;SlaveComm.c: 383: send_end_of_transmission( send_buffer );
  5171  000784  C0C8  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5172  000788  C0C9  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5173  00078C  ECA4  F00F         	call	_send_end_of_transmission	;wreg free
  5174                           
  5175                           ;SlaveComm.c: 384: }
  5176  000790  D044               	goto	l278
  5177  000792                     l272:
  5178                           
  5179                           ;SlaveComm.c: 385: else if( strmatch( parameters[1], "Volts" ) == 1 )
  5180  000792  0E0A               	movlw	10
  5181  000794  0100               	movlb	0	; () banked
  5182  000796  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5183  000798  6E1E               	movwf	strmatch@a,c
  5184  00079A  0E00               	movlw	0
  5185  00079C  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5186  00079E  6E1F               	movwf	strmatch@a+1,c
  5187  0007A0  0E1E               	movlw	low STR_9
  5188  0007A2  6E20               	movwf	strmatch@b,c
  5189  0007A4  0E06               	movlw	high STR_9
  5190  0007A6  6E21               	movwf	strmatch@b+1,c
  5191  0007A8  ECD2  F00E         	call	_strmatch	;wreg free
  5192  0007AC  06E8               	decf	wreg,f,c
  5193  0007AE  A4D8               	btfss	status,2,c
  5194  0007B0  D007               	goto	l274
  5195                           
  5196                           ;SlaveComm.c: 386: {
  5197                           ;SlaveComm.c: 387: send_end_of_transmission( send_buffer );
  5198  0007B2  C0C8  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5199  0007B6  C0C9  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5200  0007BA  ECA4  F00F         	call	_send_end_of_transmission	;wreg free
  5201                           
  5202                           ;SlaveComm.c: 388: }
  5203  0007BE  D02D               	goto	l278
  5204  0007C0                     l274:
  5205                           
  5206                           ;SlaveComm.c: 389: else if( strmatch( parameters[1], "Amps" ) == 1 )
  5207  0007C0  0E0A               	movlw	10
  5208  0007C2  0100               	movlb	0	; () banked
  5209  0007C4  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5210  0007C6  6E1E               	movwf	strmatch@a,c
  5211  0007C8  0E00               	movlw	0
  5212  0007CA  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5213  0007CC  6E1F               	movwf	strmatch@a+1,c
  5214  0007CE  0E39               	movlw	low STR_10
  5215  0007D0  6E20               	movwf	strmatch@b,c
  5216  0007D2  0E06               	movlw	high STR_10
  5217  0007D4  6E21               	movwf	strmatch@b+1,c
  5218  0007D6  ECD2  F00E         	call	_strmatch	;wreg free
  5219  0007DA  06E8               	decf	wreg,f,c
  5220  0007DC  A4D8               	btfss	status,2,c
  5221  0007DE  D007               	goto	l276
  5222                           
  5223                           ;SlaveComm.c: 390: {
  5224                           ;SlaveComm.c: 391: send_end_of_transmission( send_buffer );
  5225  0007E0  C0C8  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5226  0007E4  C0C9  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5227  0007E8  ECA4  F00F         	call	_send_end_of_transmission	;wreg free
  5228                           
  5229                           ;SlaveComm.c: 392: }
  5230  0007EC  D016               	goto	l278
  5231  0007EE                     l276:
  5232                           
  5233                           ;SlaveComm.c: 393: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  5234  0007EE  0E0A               	movlw	10
  5235  0007F0  0100               	movlb	0	; () banked
  5236  0007F2  25C6               	addwf	process_data_parameters@parameters& (0+255),w,b
  5237  0007F4  6E1E               	movwf	strmatch@a,c
  5238  0007F6  0E00               	movlw	0
  5239  0007F8  21C7               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5240  0007FA  6E1F               	movwf	strmatch@a+1,c
  5241  0007FC  0E0D               	movlw	low STR_11
  5242  0007FE  6E20               	movwf	strmatch@b,c
  5243  000800  0E06               	movlw	high STR_11
  5244  000802  6E21               	movwf	strmatch@b+1,c
  5245  000804  ECD2  F00E         	call	_strmatch	;wreg free
  5246  000808  06E8               	decf	wreg,f,c
  5247  00080A  A4D8               	btfss	status,2,c
  5248  00080C  D006               	goto	l278
  5249                           
  5250                           ;SlaveComm.c: 394: {
  5251                           ;SlaveComm.c: 395: send_end_of_transmission( send_buffer );
  5252  00080E  C0C8  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5253  000812  C0C9  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5254  000816  ECA4  F00F         	call	_send_end_of_transmission	;wreg free
  5255  00081A                     l278:
  5256                           
  5257                           ;SlaveComm.c: 396: }
  5258                           ;SlaveComm.c: 397: }
  5259                           ;SlaveComm.c: 403: return end_of_transmission_received;
  5260  00081A  503B               	movf	process_data_parameters@end_of_transmission_received,w,c
  5261  00081C  0012               	return	
  5262  00081E                     __end_of_process_data_parameters:
  5263                           	opt stack 0
  5264                           tblptru	equ	0xFF8
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           intcon2	equ	0xFF1
  5269                           intcon3	equ	0xFF0
  5270                           postinc0	equ	0xFEE
  5271                           wreg	equ	0xFE8
  5272                           postinc1	equ	0xFE6
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           fsr2h	equ	0xFDA
  5279                           fsr2l	equ	0xFD9
  5280                           status	equ	0xFD8
  5281                           
  5282 ;; *************** function _strmatch *****************
  5283 ;; Defined at:
  5284 ;;		line 530 in file "SlaveComm.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  a               2   29[COMRAM] PTR unsigned char 
  5287 ;;		 -> process_data@parameters(50), 
  5288 ;;  b               2   31[COMRAM] PTR unsigned char 
  5289 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5290 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5291 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  result          2   33[COMRAM] int 
  5294 ;;  match           1   35[COMRAM] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      unsigned char 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5304 ;;      Params:         4       0       0       0       0       0       0
  5305 ;;      Locals:         3       0       0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0
  5307 ;;      Totals:         7       0       0       0       0       0       0
  5308 ;;Total ram usage:        7 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    2
  5311 ;; This function calls:
  5312 ;;		_strcmp2
  5313 ;; This function is called by:
  5314 ;;		_process_data_parameters
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text37
  5319  001DA4                     __ptext37:
  5320                           	opt stack 0
  5321  001DA4                     _strmatch:
  5322                           	opt stack 24
  5323                           
  5324                           ;SlaveComm.c: 532: int result;
  5325                           ;SlaveComm.c: 533: bool match;
  5326                           ;SlaveComm.c: 535: result = strcmp2( a, b );
  5327                           
  5328                           ;incstack = 0
  5329  001DA4  C01E  F013         	movff	strmatch@a,strcmp2@a
  5330  001DA8  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  5331  001DAC  C020  F015         	movff	strmatch@b,strcmp2@b
  5332  001DB0  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  5333  001DB4  EC91  F005         	call	_strcmp2	;wreg free
  5334  001DB8  C013  F022         	movff	?_strcmp2,strmatch@result
  5335  001DBC  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  5336                           
  5337                           ;SlaveComm.c: 537: match = (result == 0) ? 1 : 0;
  5338  001DC0  5022               	movf	strmatch@result,w,c
  5339  001DC2  1023               	iorwf	strmatch@result+1,w,c
  5340  001DC4  A4D8               	btfss	status,2,c
  5341  001DC6  D002               	goto	u2530
  5342  001DC8  0E01               	movlw	1
  5343  001DCA  D001               	goto	u2540
  5344  001DCC                     u2530:
  5345  001DCC  0E00               	movlw	0
  5346  001DCE                     u2540:
  5347  001DCE  6E24               	movwf	strmatch@match,c
  5348                           
  5349                           ;SlaveComm.c: 539: return match;
  5350  001DD0  5024               	movf	strmatch@match,w,c
  5351  001DD2  0012               	return	
  5352  001DD4                     __end_of_strmatch:
  5353                           	opt stack 0
  5354                           tblptru	equ	0xFF8
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           intcon	equ	0xFF2
  5358                           intcon2	equ	0xFF1
  5359                           intcon3	equ	0xFF0
  5360                           postinc0	equ	0xFEE
  5361                           wreg	equ	0xFE8
  5362                           postinc1	equ	0xFE6
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _strcmp2 *****************
  5373 ;; Defined at:
  5374 ;;		line 542 in file "SlaveComm.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  a               2   18[COMRAM] PTR unsigned char 
  5377 ;;		 -> process_data@parameters(50), 
  5378 ;;  b               2   20[COMRAM] PTR unsigned char 
  5379 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5380 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5381 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  inx             2   27[COMRAM] int 
  5384 ;;  match           2   25[COMRAM] int 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  2   18[COMRAM] int 
  5387 ;; Registers used:
  5388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5394 ;;      Params:         4       0       0       0       0       0       0
  5395 ;;      Locals:         4       0       0       0       0       0       0
  5396 ;;      Temps:          3       0       0       0       0       0       0
  5397 ;;      Totals:        11       0       0       0       0       0       0
  5398 ;;Total ram usage:       11 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_strmatch
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text38
  5409  000B22                     __ptext38:
  5410                           	opt stack 0
  5411  000B22                     _strcmp2:
  5412                           	opt stack 24
  5413                           
  5414                           ;SlaveComm.c: 544: int inx = 0;
  5415                           
  5416                           ;incstack = 0
  5417  000B22  0E00               	movlw	0
  5418  000B24  6E1D               	movwf	strcmp2@inx+1,c
  5419  000B26  0E00               	movlw	0
  5420  000B28  6E1C               	movwf	strcmp2@inx,c
  5421                           
  5422                           ;SlaveComm.c: 545: int match = 0;
  5423  000B2A  0E00               	movlw	0
  5424  000B2C  6E1B               	movwf	strcmp2@match+1,c
  5425  000B2E  0E00               	movlw	0
  5426  000B30  6E1A               	movwf	strcmp2@match,c
  5427                           
  5428                           ;SlaveComm.c: 547: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  5429  000B32  D035               	goto	l317
  5430  000B34                     
  5431                           ;SlaveComm.c: 548: {
  5432                           ;SlaveComm.c: 549: if( a[inx] > b[inx] )
  5433  000B34  501C               	movf	strcmp2@inx,w,c
  5434  000B36  2413               	addwf	strcmp2@a,w,c
  5435  000B38  6ED9               	movwf	fsr2l,c
  5436  000B3A  501D               	movf	strcmp2@inx+1,w,c
  5437  000B3C  2014               	addwfc	strcmp2@a+1,w,c
  5438  000B3E  6EDA               	movwf	fsr2h,c
  5439  000B40  501C               	movf	strcmp2@inx,w,c
  5440  000B42  2415               	addwf	strcmp2@b,w,c
  5441  000B44  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5442  000B46  501D               	movf	strcmp2@inx+1,w,c
  5443  000B48  2016               	addwfc	strcmp2@b+1,w,c
  5444  000B4A  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  5445  000B4C  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  5446  000B50  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  5447  000B54                     	if	0	;tblptru may be non-zero
  5448  000B54                     	endif
  5449  000B54                     	if	0	;tblptru may be non-zero
  5450  000B54                     	endif
  5451  000B54  50DE               	movf	postinc2,w,c
  5452  000B56  0009               	tblrd		*+
  5453  000B58  5CF5               	subwf	tablat,w,c
  5454  000B5A  B0D8               	btfsc	status,0,c
  5455  000B5C  D005               	goto	l319
  5456                           
  5457                           ;SlaveComm.c: 550: {
  5458                           ;SlaveComm.c: 551: match = 1;
  5459  000B5E  0E00               	movlw	0
  5460  000B60  6E1B               	movwf	strcmp2@match+1,c
  5461  000B62  0E01               	movlw	1
  5462  000B64  6E1A               	movwf	strcmp2@match,c
  5463                           
  5464                           ;SlaveComm.c: 552: }
  5465  000B66  D019               	goto	l321
  5466  000B68                     l319:
  5467                           
  5468                           ;SlaveComm.c: 553: else if( a[inx] < b[inx] )
  5469  000B68  501C               	movf	strcmp2@inx,w,c
  5470  000B6A  2413               	addwf	strcmp2@a,w,c
  5471  000B6C  6ED9               	movwf	fsr2l,c
  5472  000B6E  501D               	movf	strcmp2@inx+1,w,c
  5473  000B70  2014               	addwfc	strcmp2@a+1,w,c
  5474  000B72  6EDA               	movwf	fsr2h,c
  5475  000B74  50DF               	movf	indf2,w,c
  5476  000B76  6E17               	movwf	??_strcmp2& (0+255),c
  5477  000B78  501C               	movf	strcmp2@inx,w,c
  5478  000B7A  2415               	addwf	strcmp2@b,w,c
  5479  000B7C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5480  000B7E  501D               	movf	strcmp2@inx+1,w,c
  5481  000B80  2016               	addwfc	strcmp2@b+1,w,c
  5482  000B82  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  5483  000B84  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  5484  000B88  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  5485  000B8C                     	if	0	;tblptru may be non-zero
  5486  000B8C                     	endif
  5487  000B8C                     	if	0	;tblptru may be non-zero
  5488  000B8C                     	endif
  5489  000B8C  0008               	tblrd		*
  5490  000B8E  50F5               	movf	tablat,w,c
  5491  000B90  5C17               	subwf	??_strcmp2,w,c
  5492  000B92  B0D8               	btfsc	status,0,c
  5493  000B94  D002               	goto	l321
  5494                           
  5495                           ;SlaveComm.c: 554: {
  5496                           ;SlaveComm.c: 555: match = -1;
  5497  000B96  681A               	setf	strcmp2@match,c
  5498  000B98  681B               	setf	strcmp2@match+1,c
  5499  000B9A                     l321:
  5500                           
  5501                           ;SlaveComm.c: 560: }
  5502                           ;SlaveComm.c: 562: inx++;
  5503                           
  5504                           ;SlaveComm.c: 558: {
  5505  000B9A  4A1C               	infsnz	strcmp2@inx,f,c
  5506  000B9C  2A1D               	incf	strcmp2@inx+1,f,c
  5507  000B9E                     l317:
  5508  000B9E  501C               	movf	strcmp2@inx,w,c
  5509  000BA0  2413               	addwf	strcmp2@a,w,c
  5510  000BA2  6ED9               	movwf	fsr2l,c
  5511  000BA4  501D               	movf	strcmp2@inx+1,w,c
  5512  000BA6  2014               	addwfc	strcmp2@a+1,w,c
  5513  000BA8  6EDA               	movwf	fsr2h,c
  5514  000BAA  50DF               	movf	indf2,w,c
  5515  000BAC  B4D8               	btfsc	status,2,c
  5516  000BAE  D013               	goto	u2410
  5517  000BB0  501C               	movf	strcmp2@inx,w,c
  5518  000BB2  2415               	addwf	strcmp2@b,w,c
  5519  000BB4  6E17               	movwf	??_strcmp2& (0+255),c
  5520  000BB6  501D               	movf	strcmp2@inx+1,w,c
  5521  000BB8  2016               	addwfc	strcmp2@b+1,w,c
  5522  000BBA  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5523  000BBC  C017  FFF6         	movff	??_strcmp2,tblptrl
  5524  000BC0  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  5525  000BC4                     	if	0	;tblptru may be non-zero
  5526  000BC4                     	endif
  5527  000BC4                     	if	0	;tblptru may be non-zero
  5528  000BC4                     	endif
  5529  000BC4  0008               	tblrd		*
  5530  000BC6  50F5               	movf	tablat,w,c
  5531  000BC8  0900               	iorlw	0
  5532  000BCA  B4D8               	btfsc	status,2,c
  5533  000BCC  D004               	goto	u2410
  5534  000BCE  501A               	movf	strcmp2@match,w,c
  5535  000BD0  101B               	iorwf	strcmp2@match+1,w,c
  5536  000BD2  B4D8               	btfsc	status,2,c
  5537  000BD4  D7AF               	goto	l318
  5538  000BD6                     u2410:
  5539                           
  5540                           ;SlaveComm.c: 563: }
  5541                           ;SlaveComm.c: 566: if( (a[inx] == '\0') && (b[inx] != '\0') )
  5542  000BD6  501C               	movf	strcmp2@inx,w,c
  5543  000BD8  2413               	addwf	strcmp2@a,w,c
  5544  000BDA  6ED9               	movwf	fsr2l,c
  5545  000BDC  501D               	movf	strcmp2@inx+1,w,c
  5546  000BDE  2014               	addwfc	strcmp2@a+1,w,c
  5547  000BE0  6EDA               	movwf	fsr2h,c
  5548  000BE2  50DF               	movf	indf2,w,c
  5549  000BE4  A4D8               	btfss	status,2,c
  5550  000BE6  D012               	goto	l327
  5551  000BE8  501C               	movf	strcmp2@inx,w,c
  5552  000BEA  2415               	addwf	strcmp2@b,w,c
  5553  000BEC  6E17               	movwf	??_strcmp2& (0+255),c
  5554  000BEE  501D               	movf	strcmp2@inx+1,w,c
  5555  000BF0  2016               	addwfc	strcmp2@b+1,w,c
  5556  000BF2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5557  000BF4  C017  FFF6         	movff	??_strcmp2,tblptrl
  5558  000BF8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  5559  000BFC                     	if	0	;tblptru may be non-zero
  5560  000BFC                     	endif
  5561  000BFC                     	if	0	;tblptru may be non-zero
  5562  000BFC                     	endif
  5563  000BFC  0008               	tblrd		*
  5564  000BFE  50F5               	movf	tablat,w,c
  5565  000C00  0900               	iorlw	0
  5566  000C02  B4D8               	btfsc	status,2,c
  5567  000C04  D003               	goto	l327
  5568                           
  5569                           ;SlaveComm.c: 567: {
  5570                           ;SlaveComm.c: 568: match = -1;
  5571  000C06  681A               	setf	strcmp2@match,c
  5572  000C08  681B               	setf	strcmp2@match+1,c
  5573                           
  5574                           ;SlaveComm.c: 569: }
  5575  000C0A  D01C               	goto	l329
  5576  000C0C                     l327:
  5577                           
  5578                           ;SlaveComm.c: 570: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  5579  000C0C  501C               	movf	strcmp2@inx,w,c
  5580  000C0E  2413               	addwf	strcmp2@a,w,c
  5581  000C10  6ED9               	movwf	fsr2l,c
  5582  000C12  501D               	movf	strcmp2@inx+1,w,c
  5583  000C14  2014               	addwfc	strcmp2@a+1,w,c
  5584  000C16  6EDA               	movwf	fsr2h,c
  5585  000C18  50DF               	movf	indf2,w,c
  5586  000C1A  B4D8               	btfsc	status,2,c
  5587  000C1C  D013               	goto	l329
  5588  000C1E  501C               	movf	strcmp2@inx,w,c
  5589  000C20  2415               	addwf	strcmp2@b,w,c
  5590  000C22  6E17               	movwf	??_strcmp2& (0+255),c
  5591  000C24  501D               	movf	strcmp2@inx+1,w,c
  5592  000C26  2016               	addwfc	strcmp2@b+1,w,c
  5593  000C28  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5594  000C2A  C017  FFF6         	movff	??_strcmp2,tblptrl
  5595  000C2E  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  5596  000C32                     	if	0	;tblptru may be non-zero
  5597  000C32                     	endif
  5598  000C32                     	if	0	;tblptru may be non-zero
  5599  000C32                     	endif
  5600  000C32  0008               	tblrd		*
  5601  000C34  50F5               	movf	tablat,w,c
  5602  000C36  0900               	iorlw	0
  5603  000C38  A4D8               	btfss	status,2,c
  5604  000C3A  D004               	goto	l329
  5605                           
  5606                           ;SlaveComm.c: 571: {
  5607                           ;SlaveComm.c: 572: match = 1;
  5608  000C3C  0E00               	movlw	0
  5609  000C3E  6E1B               	movwf	strcmp2@match+1,c
  5610  000C40  0E01               	movlw	1
  5611  000C42  6E1A               	movwf	strcmp2@match,c
  5612  000C44                     l329:
  5613                           
  5614                           ;SlaveComm.c: 573: }
  5615                           ;SlaveComm.c: 575: return match;
  5616  000C44  C01A  F013         	movff	strcmp2@match,?_strcmp2
  5617  000C48  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  5618  000C4C  0012               	return	
  5619  000C4E                     __end_of_strcmp2:
  5620                           	opt stack 0
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           intcon	equ	0xFF2
  5628                           intcon2	equ	0xFF1
  5629                           intcon3	equ	0xFF0
  5630                           postinc0	equ	0xFEE
  5631                           wreg	equ	0xFE8
  5632                           postinc1	equ	0xFE6
  5633                           fsr1h	equ	0xFE2
  5634                           fsr1l	equ	0xFE1
  5635                           indf2	equ	0xFDF
  5636                           postinc2	equ	0xFDE
  5637                           postdec2	equ	0xFDD
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8
  5641                           
  5642 ;; *************** function _send_end_of_transmission *****************
  5643 ;; Defined at:
  5644 ;;		line 621 in file "SlaveComm.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  send_buffer     2   52[COMRAM] PTR struct buffer
  5647 ;;		 -> communications@send_buffer(42), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5659 ;;      Params:         2       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0
  5662 ;;      Totals:         2       0       0       0       0       0       0
  5663 ;;Total ram usage:        2 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    6
  5666 ;; This function calls:
  5667 ;;		_command_builder1
  5668 ;; This function is called by:
  5669 ;;		_process_data_parameters
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text39
  5674  001F48                     __ptext39:
  5675                           	opt stack 0
  5676  001F48                     _send_end_of_transmission:
  5677                           	opt stack 20
  5678                           
  5679                           ;SlaveComm.c: 623: command_builder1( send_buffer, "END" );
  5680                           
  5681                           ;incstack = 0
  5682  001F48  C035  F02F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  5683  001F4C  C036  F030         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  5684  001F50  0E4A               	movlw	low STR_1
  5685  001F52  6E31               	movwf	command_builder1@data1,c
  5686  001F54  0E06               	movlw	high STR_1
  5687  001F56  6E32               	movwf	command_builder1@data1+1,c
  5688  001F58  ECD2  F00C         	call	_command_builder1	;wreg free
  5689  001F5C  0012               	return	
  5690  001F5E                     __end_of_send_end_of_transmission:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           prodh	equ	0xFF4
  5697                           prodl	equ	0xFF3
  5698                           intcon	equ	0xFF2
  5699                           intcon2	equ	0xFF1
  5700                           intcon3	equ	0xFF0
  5701                           postinc0	equ	0xFEE
  5702                           wreg	equ	0xFE8
  5703                           postinc1	equ	0xFE6
  5704                           fsr1h	equ	0xFE2
  5705                           fsr1l	equ	0xFE1
  5706                           indf2	equ	0xFDF
  5707                           postinc2	equ	0xFDE
  5708                           postdec2	equ	0xFDD
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function _command_builder1 *****************
  5714 ;; Defined at:
  5715 ;;		line 406 in file "SlaveComm.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  5718 ;;		 -> communications@send_buffer(42), 
  5719 ;;  data1           2   48[COMRAM] PTR unsigned char 
  5720 ;;		 -> STR_12(4), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  xsum            2   50[COMRAM] int 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5732 ;;      Params:         4       0       0       0       0       0       0
  5733 ;;      Locals:         2       0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0
  5735 ;;      Totals:         6       0       0       0       0       0       0
  5736 ;;Total ram usage:        6 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    5
  5739 ;; This function calls:
  5740 ;;		_command_builder_add_char
  5741 ;;		_command_builder_add_string
  5742 ;;		_xsum_builder
  5743 ;; This function is called by:
  5744 ;;		_send_end_of_transmission
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text40
  5749  0019A4                     __ptext40:
  5750                           	opt stack 0
  5751  0019A4                     _command_builder1:
  5752                           	opt stack 20
  5753                           
  5754                           ;SlaveComm.c: 408: command_builder_add_char( send_buffer, '#' );
  5755                           
  5756                           ;incstack = 0
  5757  0019A4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  5758  0019A8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  5759  0019AC  0E23               	movlw	35
  5760  0019AE  6E15               	movwf	command_builder_add_char@data,c
  5761  0019B0  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  5762                           
  5763                           ;SlaveComm.c: 409: command_builder_add_char( send_buffer, '!' );
  5764  0019B4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  5765  0019B8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  5766  0019BC  0E21               	movlw	33
  5767  0019BE  6E15               	movwf	command_builder_add_char@data,c
  5768  0019C0  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  5769                           
  5770                           ;SlaveComm.c: 410: int xsum = 0;
  5771  0019C4  0E00               	movlw	0
  5772  0019C6  6E34               	movwf	command_builder1@xsum+1,c
  5773  0019C8  0E00               	movlw	0
  5774  0019CA  6E33               	movwf	command_builder1@xsum,c
  5775                           
  5776                           ;SlaveComm.c: 411: xsum += command_builder_add_string( send_buffer, data1 );
  5777  0019CC  C02F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  5778  0019D0  C030  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  5779  0019D4  C031  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  5780  0019D8  C032  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  5781  0019DC  EC52  F00A         	call	_command_builder_add_string	;wreg free
  5782  0019E0  5017               	movf	?_command_builder_add_string,w,c
  5783  0019E2  2633               	addwf	command_builder1@xsum,f,c
  5784  0019E4  5018               	movf	?_command_builder_add_string+1,w,c
  5785  0019E6  2234               	addwfc	command_builder1@xsum+1,f,c
  5786                           
  5787                           ;SlaveComm.c: 412: xsum_builder( send_buffer, xsum );
  5788  0019E8  C02F  F02B         	movff	command_builder1@send_buffer,xsum_builder@send_buffer
  5789  0019EC  C030  F02C         	movff	command_builder1@send_buffer+1,xsum_builder@send_buffer+1
  5790  0019F0  C033  F02D         	movff	command_builder1@xsum,xsum_builder@xsum
  5791  0019F4  C034  F02E         	movff	command_builder1@xsum+1,xsum_builder@xsum+1
  5792  0019F8  EC73  F00C         	call	_xsum_builder	;wreg free
  5793  0019FC  0012               	return	
  5794  0019FE                     __end_of_command_builder1:
  5795                           	opt stack 0
  5796                           tblptru	equ	0xFF8
  5797                           tblptrh	equ	0xFF7
  5798                           tblptrl	equ	0xFF6
  5799                           tablat	equ	0xFF5
  5800                           prodh	equ	0xFF4
  5801                           prodl	equ	0xFF3
  5802                           intcon	equ	0xFF2
  5803                           intcon2	equ	0xFF1
  5804                           intcon3	equ	0xFF0
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           postinc1	equ	0xFE6
  5808                           fsr1h	equ	0xFE2
  5809                           fsr1l	equ	0xFE1
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           postdec2	equ	0xFDD
  5813                           fsr2h	equ	0xFDA
  5814                           fsr2l	equ	0xFD9
  5815                           status	equ	0xFD8
  5816                           
  5817 ;; *************** function _com_command_setEnergyUsed *****************
  5818 ;; Defined at:
  5819 ;;		line 647 in file "SlaveComm.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  5822 ;;		 -> communications@send_buffer(42), 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  temp           12   16[BANK0 ] unsigned char [12]
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5834 ;;      Params:         2       0       0       0       0       0       0
  5835 ;;      Locals:         0      12       0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0
  5837 ;;      Totals:         2      12       0       0       0       0       0
  5838 ;;Total ram usage:       14 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    6
  5841 ;; This function calls:
  5842 ;;		_command_builder3
  5843 ;;		_ultoa
  5844 ;; This function is called by:
  5845 ;;		_resetCommunications
  5846 ;;		_process_data_parameters
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text41
  5851  001B88                     __ptext41:
  5852                           	opt stack 0
  5853  001B88                     _com_command_setEnergyUsed:
  5854                           	opt stack 21
  5855                           
  5856                           ;SlaveComm.c: 649: char temp[12];
  5857                           ;SlaveComm.c: 651: ultoa( temp, meterEnergyUsed_global, 10 );
  5858                           
  5859                           ;incstack = 0
  5860  001B88  0EBA               	movlw	low com_command_setEnergyUsed@temp
  5861  001B8A  6E20               	movwf	ultoa@buf,c
  5862  001B8C  0E00               	movlw	high com_command_setEnergyUsed@temp
  5863  001B8E  6E21               	movwf	ultoa@buf+1,c
  5864  001B90  C03D  F022         	movff	_meterEnergyUsed_global,ultoa@val
  5865  001B94  C03E  F023         	movff	_meterEnergyUsed_global+1,ultoa@val+1
  5866  001B98  C03F  F024         	movff	_meterEnergyUsed_global+2,ultoa@val+2
  5867  001B9C  C040  F025         	movff	_meterEnergyUsed_global+3,ultoa@val+3
  5868  001BA0  0E00               	movlw	0
  5869  001BA2  6E27               	movwf	ultoa@base+1,c
  5870  001BA4  0E0A               	movlw	10
  5871  001BA6  6E26               	movwf	ultoa@base,c
  5872  001BA8  EC27  F006         	call	_ultoa	;wreg free
  5873                           
  5874                           ;SlaveComm.c: 653: command_builder3( send_buffer, "Set", "EnUsed", temp );
  5875  001BAC  C039  F02F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  5876  001BB0  C03A  F030         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  5877  001BB4  0E4E               	movlw	low STR_2
  5878  001BB6  6E31               	movwf	command_builder3@data1,c
  5879  001BB8  0E06               	movlw	high STR_2
  5880  001BBA  6E32               	movwf	command_builder3@data1+1,c
  5881  001BBC  0E17               	movlw	low STR_4
  5882  001BBE  6E33               	movwf	command_builder3@data2,c
  5883  001BC0  0E06               	movlw	high STR_4
  5884  001BC2  6E34               	movwf	command_builder3@data2+1,c
  5885  001BC4  0EBA               	movlw	low com_command_setEnergyUsed@temp
  5886  001BC6  6E35               	movwf	command_builder3@data3,c
  5887  001BC8  0E00               	movlw	high com_command_setEnergyUsed@temp
  5888  001BCA  6E36               	movwf	command_builder3@data3+1,c
  5889  001BCC  EC94  F007         	call	_command_builder3	;wreg free
  5890  001BD0  0012               	return	
  5891  001BD2                     __end_of_com_command_setEnergyUsed:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           intcon2	equ	0xFF1
  5901                           intcon3	equ	0xFF0
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postinc1	equ	0xFE6
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           indf2	equ	0xFDF
  5908                           postinc2	equ	0xFDE
  5909                           postdec2	equ	0xFDD
  5910                           fsr2h	equ	0xFDA
  5911                           fsr2l	equ	0xFD9
  5912                           status	equ	0xFD8
  5913                           
  5914 ;; *************** function _ultoa *****************
  5915 ;; Defined at:
  5916 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  buf             2   31[COMRAM] PTR unsigned char 
  5919 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  5920 ;;  val             4   33[COMRAM] unsigned long 
  5921 ;;  base            2   37[COMRAM] int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  v               4   39[COMRAM] unsigned long 
  5924 ;;  c               1   43[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2   31[COMRAM] PTR unsigned char 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5934 ;;      Params:         8       0       0       0       0       0       0
  5935 ;;      Locals:         5       0       0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0
  5937 ;;      Totals:        13       0       0       0       0       0       0
  5938 ;;Total ram usage:       13 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    2
  5941 ;; This function calls:
  5942 ;;		___lldiv
  5943 ;;		___llmod
  5944 ;; This function is called by:
  5945 ;;		_com_command_setPower
  5946 ;;		_com_command_setEnergyUsed
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text42
  5951  000C4E                     __ptext42:
  5952                           	opt stack 0
  5953  000C4E                     _ultoa:
  5954                           	opt stack 24
  5955                           
  5956                           ;incstack = 0
  5957  000C4E  C022  F028         	movff	ultoa@val,ultoa@v
  5958  000C52  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  5959  000C56  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  5960  000C5A  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  5961  000C5E  C028  F013         	movff	ultoa@v,___lldiv@dividend
  5962  000C62  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  5963  000C66  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  5964  000C6A  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  5965  000C6E  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5966  000C72  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5967  000C76  0E00               	movlw	0
  5968  000C78  BE18               	btfsc	___lldiv@divisor+1,7,c
  5969  000C7A  0EFF               	movlw	-1
  5970  000C7C  6E19               	movwf	___lldiv@divisor+2,c
  5971  000C7E  6E1A               	movwf	___lldiv@divisor+3,c
  5972  000C80  EC26  F00B         	call	___lldiv	;wreg free
  5973  000C84  C013  F028         	movff	?___lldiv,ultoa@v
  5974  000C88  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  5975  000C8C  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  5976  000C90  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  5977  000C94  4A20               	infsnz	ultoa@buf,f,c
  5978  000C96  2A21               	incf	ultoa@buf+1,f,c
  5979  000C98  5028               	movf	ultoa@v,w,c
  5980  000C9A  1029               	iorwf	ultoa@v+1,w,c
  5981  000C9C  102A               	iorwf	ultoa@v+2,w,c
  5982  000C9E  102B               	iorwf	ultoa@v+3,w,c
  5983  000CA0  A4D8               	btfss	status,2,c
  5984  000CA2  D7DD               	goto	l1023
  5985  000CA4  C020  FFD9         	movff	ultoa@buf,fsr2l
  5986  000CA8  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5987  000CAC  0E00               	movlw	0
  5988  000CAE  6EDF               	movwf	indf2,c
  5989  000CB0  0620               	decf	ultoa@buf,f,c
  5990  000CB2  A0D8               	btfss	status,0,c
  5991  000CB4  0621               	decf	ultoa@buf+1,f,c
  5992  000CB6  C022  F013         	movff	ultoa@val,___llmod@dividend
  5993  000CBA  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  5994  000CBE  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  5995  000CC2  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  5996  000CC6  C026  F017         	movff	ultoa@base,___llmod@divisor
  5997  000CCA  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  5998  000CCE  0E00               	movlw	0
  5999  000CD0  BE18               	btfsc	___llmod@divisor+1,7,c
  6000  000CD2  0EFF               	movlw	-1
  6001  000CD4  6E19               	movwf	___llmod@divisor+2,c
  6002  000CD6  6E1A               	movwf	___llmod@divisor+3,c
  6003  000CD8  EC0E  F00C         	call	___llmod	;wreg free
  6004  000CDC  5013               	movf	?___llmod,w,c
  6005  000CDE  6E2C               	movwf	ultoa@c,c
  6006  000CE0  C022  F013         	movff	ultoa@val,___lldiv@dividend
  6007  000CE4  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  6008  000CE8  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  6009  000CEC  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  6010  000CF0  C026  F017         	movff	ultoa@base,___lldiv@divisor
  6011  000CF4  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  6012  000CF8  0E00               	movlw	0
  6013  000CFA  BE18               	btfsc	___lldiv@divisor+1,7,c
  6014  000CFC  0EFF               	movlw	-1
  6015  000CFE  6E19               	movwf	___lldiv@divisor+2,c
  6016  000D00  6E1A               	movwf	___lldiv@divisor+3,c
  6017  000D02  EC26  F00B         	call	___lldiv	;wreg free
  6018  000D06  C013  F022         	movff	?___lldiv,ultoa@val
  6019  000D0A  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  6020  000D0E  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  6021  000D12  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  6022  000D16  0E09               	movlw	9
  6023  000D18  642C               	cpfsgt	ultoa@c,c
  6024  000D1A  D002               	goto	l1026
  6025  000D1C  0E07               	movlw	7
  6026  000D1E  262C               	addwf	ultoa@c,f,c
  6027  000D20                     l1026:
  6028  000D20  0E30               	movlw	48
  6029  000D22  262C               	addwf	ultoa@c,f,c
  6030  000D24  C020  FFD9         	movff	ultoa@buf,fsr2l
  6031  000D28  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  6032  000D2C  C02C  FFDF         	movff	ultoa@c,indf2
  6033  000D30  0620               	decf	ultoa@buf,f,c
  6034  000D32  A0D8               	btfss	status,0,c
  6035  000D34  0621               	decf	ultoa@buf+1,f,c
  6036  000D36  5022               	movf	ultoa@val,w,c
  6037  000D38  1023               	iorwf	ultoa@val+1,w,c
  6038  000D3A  1024               	iorwf	ultoa@val+2,w,c
  6039  000D3C  1025               	iorwf	ultoa@val+3,w,c
  6040  000D3E  B4D8               	btfsc	status,2,c
  6041  000D40  0012               	return	
  6042  000D42  D7B9               	goto	l1025
  6043  000D44                     __end_of_ultoa:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           intcon2	equ	0xFF1
  6053                           intcon3	equ	0xFF0
  6054                           postinc0	equ	0xFEE
  6055                           wreg	equ	0xFE8
  6056                           postinc1	equ	0xFE6
  6057                           fsr1h	equ	0xFE2
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function ___llmod *****************
  6067 ;; Defined at:
  6068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  dividend        4   18[COMRAM] unsigned long 
  6071 ;;  divisor         4   22[COMRAM] unsigned long 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  counter         1   26[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  4   18[COMRAM] unsigned long 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         8       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0
  6086 ;;      Totals:         9       0       0       0       0       0       0
  6087 ;;Total ram usage:        9 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_main
  6094 ;;		_ultoa
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text43
  6099  00181C                     __ptext43:
  6100                           	opt stack 0
  6101  00181C                     ___llmod:
  6102                           	opt stack 24
  6103                           
  6104                           ;incstack = 0
  6105  00181C  5017               	movf	___llmod@divisor,w,c
  6106  00181E  1018               	iorwf	___llmod@divisor+1,w,c
  6107  001820  1019               	iorwf	___llmod@divisor+2,w,c
  6108  001822  101A               	iorwf	___llmod@divisor+3,w,c
  6109  001824  B4D8               	btfsc	status,2,c
  6110  001826  D024               	goto	l985
  6111  001828  0E01               	movlw	1
  6112  00182A  6E1B               	movwf	___llmod@counter,c
  6113  00182C  D006               	goto	l980
  6114  00182E  90D8               	bcf	status,0,c
  6115  001830  3617               	rlcf	___llmod@divisor,f,c
  6116  001832  3618               	rlcf	___llmod@divisor+1,f,c
  6117  001834  3619               	rlcf	___llmod@divisor+2,f,c
  6118  001836  361A               	rlcf	___llmod@divisor+3,f,c
  6119  001838  2A1B               	incf	___llmod@counter,f,c
  6120  00183A                     l980:
  6121  00183A  AE1A               	btfss	___llmod@divisor+3,7,c
  6122  00183C  D7F8               	goto	l981
  6123  00183E                     u2350:
  6124  00183E  5017               	movf	___llmod@divisor,w,c
  6125  001840  5C13               	subwf	___llmod@dividend,w,c
  6126  001842  5018               	movf	___llmod@divisor+1,w,c
  6127  001844  5814               	subwfb	___llmod@dividend+1,w,c
  6128  001846  5019               	movf	___llmod@divisor+2,w,c
  6129  001848  5815               	subwfb	___llmod@dividend+2,w,c
  6130  00184A  501A               	movf	___llmod@divisor+3,w,c
  6131  00184C  5816               	subwfb	___llmod@dividend+3,w,c
  6132  00184E  A0D8               	btfss	status,0,c
  6133  001850  D008               	goto	l984
  6134  001852  5017               	movf	___llmod@divisor,w,c
  6135  001854  5E13               	subwf	___llmod@dividend,f,c
  6136  001856  5018               	movf	___llmod@divisor+1,w,c
  6137  001858  5A14               	subwfb	___llmod@dividend+1,f,c
  6138  00185A  5019               	movf	___llmod@divisor+2,w,c
  6139  00185C  5A15               	subwfb	___llmod@dividend+2,f,c
  6140  00185E  501A               	movf	___llmod@divisor+3,w,c
  6141  001860  5A16               	subwfb	___llmod@dividend+3,f,c
  6142  001862                     l984:
  6143  001862  90D8               	bcf	status,0,c
  6144  001864  321A               	rrcf	___llmod@divisor+3,f,c
  6145  001866  3219               	rrcf	___llmod@divisor+2,f,c
  6146  001868  3218               	rrcf	___llmod@divisor+1,f,c
  6147  00186A  3217               	rrcf	___llmod@divisor,f,c
  6148  00186C  2E1B               	decfsz	___llmod@counter,f,c
  6149  00186E  D7E7               	goto	u2350
  6150  001870                     l985:
  6151  001870  C013  F013         	movff	___llmod@dividend,?___llmod
  6152  001874  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  6153  001878  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  6154  00187C  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  6155  001880  0012               	return		;funcret
  6156  001882                     __end_of___llmod:
  6157                           	opt stack 0
  6158                           tblptru	equ	0xFF8
  6159                           tblptrh	equ	0xFF7
  6160                           tblptrl	equ	0xFF6
  6161                           tablat	equ	0xFF5
  6162                           prodh	equ	0xFF4
  6163                           prodl	equ	0xFF3
  6164                           intcon	equ	0xFF2
  6165                           intcon2	equ	0xFF1
  6166                           intcon3	equ	0xFF0
  6167                           postinc0	equ	0xFEE
  6168                           wreg	equ	0xFE8
  6169                           postinc1	equ	0xFE6
  6170                           fsr1h	equ	0xFE2
  6171                           fsr1l	equ	0xFE1
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179 ;; *************** function ___lldiv *****************
  6180 ;; Defined at:
  6181 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  dividend        4   18[COMRAM] unsigned long 
  6184 ;;  divisor         4   22[COMRAM] unsigned long 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  quotient        4   26[COMRAM] unsigned long 
  6187 ;;  counter         1   30[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  4   18[COMRAM] unsigned long 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6197 ;;      Params:         8       0       0       0       0       0       0
  6198 ;;      Locals:         5       0       0       0       0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0
  6200 ;;      Totals:        13       0       0       0       0       0       0
  6201 ;;Total ram usage:       13 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_powerCalculateWatts
  6208 ;;		_powerReduction
  6209 ;;		_ultoa
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text44
  6214  00164C                     __ptext44:
  6215                           	opt stack 0
  6216  00164C                     ___lldiv:
  6217                           	opt stack 27
  6218                           
  6219                           ;incstack = 0
  6220  00164C  0E00               	movlw	0
  6221  00164E  6E1B               	movwf	___lldiv@quotient,c
  6222  001650  0E00               	movlw	0
  6223  001652  6E1C               	movwf	___lldiv@quotient+1,c
  6224  001654  0E00               	movlw	0
  6225  001656  6E1D               	movwf	___lldiv@quotient+2,c
  6226  001658  0E00               	movlw	0
  6227  00165A  6E1E               	movwf	___lldiv@quotient+3,c
  6228  00165C  5017               	movf	___lldiv@divisor,w,c
  6229  00165E  1018               	iorwf	___lldiv@divisor+1,w,c
  6230  001660  1019               	iorwf	___lldiv@divisor+2,w,c
  6231  001662  101A               	iorwf	___lldiv@divisor+3,w,c
  6232  001664  B4D8               	btfsc	status,2,c
  6233  001666  D02A               	goto	l975
  6234  001668  0E01               	movlw	1
  6235  00166A  6E1F               	movwf	___lldiv@counter,c
  6236  00166C  D006               	goto	l970
  6237  00166E  90D8               	bcf	status,0,c
  6238  001670  3617               	rlcf	___lldiv@divisor,f,c
  6239  001672  3618               	rlcf	___lldiv@divisor+1,f,c
  6240  001674  3619               	rlcf	___lldiv@divisor+2,f,c
  6241  001676  361A               	rlcf	___lldiv@divisor+3,f,c
  6242  001678  2A1F               	incf	___lldiv@counter,f,c
  6243  00167A                     l970:
  6244  00167A  AE1A               	btfss	___lldiv@divisor+3,7,c
  6245  00167C  D7F8               	goto	l971
  6246  00167E                     u2320:
  6247  00167E  90D8               	bcf	status,0,c
  6248  001680  361B               	rlcf	___lldiv@quotient,f,c
  6249  001682  361C               	rlcf	___lldiv@quotient+1,f,c
  6250  001684  361D               	rlcf	___lldiv@quotient+2,f,c
  6251  001686  361E               	rlcf	___lldiv@quotient+3,f,c
  6252  001688  5017               	movf	___lldiv@divisor,w,c
  6253  00168A  5C13               	subwf	___lldiv@dividend,w,c
  6254  00168C  5018               	movf	___lldiv@divisor+1,w,c
  6255  00168E  5814               	subwfb	___lldiv@dividend+1,w,c
  6256  001690  5019               	movf	___lldiv@divisor+2,w,c
  6257  001692  5815               	subwfb	___lldiv@dividend+2,w,c
  6258  001694  501A               	movf	___lldiv@divisor+3,w,c
  6259  001696  5816               	subwfb	___lldiv@dividend+3,w,c
  6260  001698  A0D8               	btfss	status,0,c
  6261  00169A  D009               	goto	l974
  6262  00169C  5017               	movf	___lldiv@divisor,w,c
  6263  00169E  5E13               	subwf	___lldiv@dividend,f,c
  6264  0016A0  5018               	movf	___lldiv@divisor+1,w,c
  6265  0016A2  5A14               	subwfb	___lldiv@dividend+1,f,c
  6266  0016A4  5019               	movf	___lldiv@divisor+2,w,c
  6267  0016A6  5A15               	subwfb	___lldiv@dividend+2,f,c
  6268  0016A8  501A               	movf	___lldiv@divisor+3,w,c
  6269  0016AA  5A16               	subwfb	___lldiv@dividend+3,f,c
  6270  0016AC  801B               	bsf	___lldiv@quotient,0,c
  6271  0016AE                     l974:
  6272  0016AE  90D8               	bcf	status,0,c
  6273  0016B0  321A               	rrcf	___lldiv@divisor+3,f,c
  6274  0016B2  3219               	rrcf	___lldiv@divisor+2,f,c
  6275  0016B4  3218               	rrcf	___lldiv@divisor+1,f,c
  6276  0016B6  3217               	rrcf	___lldiv@divisor,f,c
  6277  0016B8  2E1F               	decfsz	___lldiv@counter,f,c
  6278  0016BA  D7E1               	goto	u2320
  6279  0016BC                     l975:
  6280  0016BC  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  6281  0016C0  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  6282  0016C4  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  6283  0016C8  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  6284  0016CC  0012               	return		;funcret
  6285  0016CE                     __end_of___lldiv:
  6286                           	opt stack 0
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           intcon2	equ	0xFF1
  6295                           intcon3	equ	0xFF0
  6296                           postinc0	equ	0xFEE
  6297                           wreg	equ	0xFE8
  6298                           postinc1	equ	0xFE6
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           fsr2h	equ	0xFDA
  6305                           fsr2l	equ	0xFD9
  6306                           status	equ	0xFD8
  6307                           
  6308 ;; *************** function _command_builder3 *****************
  6309 ;; Defined at:
  6310 ;;		line 431 in file "SlaveComm.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  6313 ;;		 -> communications@send_buffer(42), 
  6314 ;;  data1           2   48[COMRAM] PTR unsigned char 
  6315 ;;		 -> STR_27(4), STR_22(4), STR_19(4), STR_17(4), 
  6316 ;;		 -> STR_15(4), 
  6317 ;;  data2           2   50[COMRAM] PTR unsigned char 
  6318 ;;		 -> STR_28(10), STR_23(5), STR_20(6), STR_18(7), 
  6319 ;;		 -> STR_16(6), 
  6320 ;;  data3           2   52[COMRAM] PTR unsigned char 
  6321 ;;		 -> STR_29(4), STR_24(4), STR_21(4), com_command_setEnergyUsed@temp(12), 
  6322 ;;		 -> com_command_setPower@temp(12), 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  xsum            2   54[COMRAM] int 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6334 ;;      Params:         8       0       0       0       0       0       0
  6335 ;;      Locals:         2       0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0
  6337 ;;      Totals:        10       0       0       0       0       0       0
  6338 ;;Total ram usage:       10 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    5
  6341 ;; This function calls:
  6342 ;;		_command_builder_add_char
  6343 ;;		_command_builder_add_string
  6344 ;;		_xsum_builder
  6345 ;; This function is called by:
  6346 ;;		_com_command_setPower
  6347 ;;		_com_command_setEnergyUsed
  6348 ;;		_com_command_setVersion
  6349 ;;		_com_command_setVolts
  6350 ;;		_com_command_setAmps
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text45
  6355  000F28                     __ptext45:
  6356                           	opt stack 0
  6357  000F28                     _command_builder3:
  6358                           	opt stack 21
  6359                           
  6360                           ;SlaveComm.c: 433: command_builder_add_char( send_buffer, '#' );
  6361                           
  6362                           ;incstack = 0
  6363  000F28  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6364  000F2C  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6365  000F30  0E23               	movlw	35
  6366  000F32  6E15               	movwf	command_builder_add_char@data,c
  6367  000F34  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6368                           
  6369                           ;SlaveComm.c: 434: command_builder_add_char( send_buffer, '!' );
  6370  000F38  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6371  000F3C  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6372  000F40  0E21               	movlw	33
  6373  000F42  6E15               	movwf	command_builder_add_char@data,c
  6374  000F44  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6375                           
  6376                           ;SlaveComm.c: 435: int xsum = 0;
  6377  000F48  0E00               	movlw	0
  6378  000F4A  6E38               	movwf	command_builder3@xsum+1,c
  6379  000F4C  0E00               	movlw	0
  6380  000F4E  6E37               	movwf	command_builder3@xsum,c
  6381                           
  6382                           ;SlaveComm.c: 436: xsum += command_builder_add_string( send_buffer, data1 );
  6383  000F50  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6384  000F54  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6385  000F58  C031  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  6386  000F5C  C032  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  6387  000F60  EC52  F00A         	call	_command_builder_add_string	;wreg free
  6388  000F64  5017               	movf	?_command_builder_add_string,w,c
  6389  000F66  2637               	addwf	command_builder3@xsum,f,c
  6390  000F68  5018               	movf	?_command_builder_add_string+1,w,c
  6391  000F6A  2238               	addwfc	command_builder3@xsum+1,f,c
  6392                           
  6393                           ;SlaveComm.c: 437: xsum += command_builder_add_char( send_buffer, ';' );
  6394  000F6C  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6395  000F70  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6396  000F74  0E3B               	movlw	59
  6397  000F76  6E15               	movwf	command_builder_add_char@data,c
  6398  000F78  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6399  000F7C  5013               	movf	?_command_builder_add_char,w,c
  6400  000F7E  2637               	addwf	command_builder3@xsum,f,c
  6401  000F80  5014               	movf	?_command_builder_add_char+1,w,c
  6402  000F82  2238               	addwfc	command_builder3@xsum+1,f,c
  6403                           
  6404                           ;SlaveComm.c: 438: xsum += command_builder_add_string( send_buffer, data2 );
  6405  000F84  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6406  000F88  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6407  000F8C  C033  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  6408  000F90  C034  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  6409  000F94  EC52  F00A         	call	_command_builder_add_string	;wreg free
  6410  000F98  5017               	movf	?_command_builder_add_string,w,c
  6411  000F9A  2637               	addwf	command_builder3@xsum,f,c
  6412  000F9C  5018               	movf	?_command_builder_add_string+1,w,c
  6413  000F9E  2238               	addwfc	command_builder3@xsum+1,f,c
  6414                           
  6415                           ;SlaveComm.c: 439: xsum += command_builder_add_char( send_buffer, ';' );
  6416  000FA0  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6417  000FA4  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6418  000FA8  0E3B               	movlw	59
  6419  000FAA  6E15               	movwf	command_builder_add_char@data,c
  6420  000FAC  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6421  000FB0  5013               	movf	?_command_builder_add_char,w,c
  6422  000FB2  2637               	addwf	command_builder3@xsum,f,c
  6423  000FB4  5014               	movf	?_command_builder_add_char+1,w,c
  6424  000FB6  2238               	addwfc	command_builder3@xsum+1,f,c
  6425                           
  6426                           ;SlaveComm.c: 440: xsum += command_builder_add_string( send_buffer, data3 );
  6427  000FB8  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6428  000FBC  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6429  000FC0  C035  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  6430  000FC4  C036  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  6431  000FC8  EC52  F00A         	call	_command_builder_add_string	;wreg free
  6432  000FCC  5017               	movf	?_command_builder_add_string,w,c
  6433  000FCE  2637               	addwf	command_builder3@xsum,f,c
  6434  000FD0  5018               	movf	?_command_builder_add_string+1,w,c
  6435  000FD2  2238               	addwfc	command_builder3@xsum+1,f,c
  6436                           
  6437                           ;SlaveComm.c: 441: xsum_builder( send_buffer, xsum );
  6438  000FD4  C02F  F02B         	movff	command_builder3@send_buffer,xsum_builder@send_buffer
  6439  000FD8  C030  F02C         	movff	command_builder3@send_buffer+1,xsum_builder@send_buffer+1
  6440  000FDC  C037  F02D         	movff	command_builder3@xsum,xsum_builder@xsum
  6441  000FE0  C038  F02E         	movff	command_builder3@xsum+1,xsum_builder@xsum+1
  6442  000FE4  EC73  F00C         	call	_xsum_builder	;wreg free
  6443  000FE8  0012               	return	
  6444  000FEA                     __end_of_command_builder3:
  6445                           	opt stack 0
  6446                           tblptru	equ	0xFF8
  6447                           tblptrh	equ	0xFF7
  6448                           tblptrl	equ	0xFF6
  6449                           tablat	equ	0xFF5
  6450                           prodh	equ	0xFF4
  6451                           prodl	equ	0xFF3
  6452                           intcon	equ	0xFF2
  6453                           intcon2	equ	0xFF1
  6454                           intcon3	equ	0xFF0
  6455                           postinc0	equ	0xFEE
  6456                           wreg	equ	0xFE8
  6457                           postinc1	equ	0xFE6
  6458                           fsr1h	equ	0xFE2
  6459                           fsr1l	equ	0xFE1
  6460                           indf2	equ	0xFDF
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _xsum_builder *****************
  6468 ;; Defined at:
  6469 ;;		line 463 in file "SlaveComm.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  send_buffer     2   42[COMRAM] PTR struct buffer
  6472 ;;		 -> communications@send_buffer(42), 
  6473 ;;  xsum            2   44[COMRAM] int 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  xsumBuf        16    0[BANK0 ] unsigned char [16]
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6485 ;;      Params:         4       0       0       0       0       0       0
  6486 ;;      Locals:         0      16       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0
  6488 ;;      Totals:         4      16       0       0       0       0       0
  6489 ;;Total ram usage:       20 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    4
  6492 ;; This function calls:
  6493 ;;		_command_builder_add_char
  6494 ;;		_command_builder_add_string
  6495 ;;		_itoa
  6496 ;; This function is called by:
  6497 ;;		_command_builder1
  6498 ;;		_command_builder3
  6499 ;;		_command_builder2
  6500 ;;		_command_builder4
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text46
  6505  0018E6                     __ptext46:
  6506                           	opt stack 0
  6507  0018E6                     _xsum_builder:
  6508                           	opt stack 21
  6509                           
  6510                           ;SlaveComm.c: 466: command_builder_add_char( send_buffer, ';' );
  6511                           
  6512                           ;incstack = 0
  6513  0018E6  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  6514  0018EA  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  6515  0018EE  0E3B               	movlw	59
  6516  0018F0  6E15               	movwf	command_builder_add_char@data,c
  6517  0018F2  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6518                           
  6519                           ;SlaveComm.c: 467: command_builder_add_char( send_buffer, '$' );
  6520  0018F6  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  6521  0018FA  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  6522  0018FE  0E24               	movlw	36
  6523  001900  6E15               	movwf	command_builder_add_char@data,c
  6524  001902  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6525                           
  6526                           ;SlaveComm.c: 468: char xsumBuf[16];
  6527                           ;SlaveComm.c: 469: itoa( xsumBuf, xsum, 10 );
  6528  001906  0EAA               	movlw	low xsum_builder@xsumBuf
  6529  001908  6E23               	movwf	itoa@buf,c
  6530  00190A  0E00               	movlw	high xsum_builder@xsumBuf
  6531  00190C  6E24               	movwf	itoa@buf+1,c
  6532  00190E  C02D  F025         	movff	xsum_builder@xsum,itoa@val
  6533  001912  C02E  F026         	movff	xsum_builder@xsum+1,itoa@val+1
  6534  001916  0E00               	movlw	0
  6535  001918  6E28               	movwf	itoa@base+1,c
  6536  00191A  0E0A               	movlw	10
  6537  00191C  6E27               	movwf	itoa@base,c
  6538  00191E  EC0D  F00E         	call	_itoa	;wreg free
  6539                           
  6540                           ;SlaveComm.c: 470: command_builder_add_string( send_buffer, xsumBuf );
  6541  001922  C02B  F017         	movff	xsum_builder@send_buffer,command_builder_add_string@send_buffer
  6542  001926  C02C  F018         	movff	xsum_builder@send_buffer+1,command_builder_add_string@send_buffer+1
  6543  00192A  0EAA               	movlw	low xsum_builder@xsumBuf
  6544  00192C  6E19               	movwf	command_builder_add_string@data_string,c
  6545  00192E  0E00               	movlw	high xsum_builder@xsumBuf
  6546  001930  6E1A               	movwf	command_builder_add_string@data_string+1,c
  6547  001932  EC52  F00A         	call	_command_builder_add_string	;wreg free
  6548                           
  6549                           ;SlaveComm.c: 472: command_builder_add_char( send_buffer, '*' );
  6550  001936  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  6551  00193A  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  6552  00193E  0E2A               	movlw	42
  6553  001940  6E15               	movwf	command_builder_add_char@data,c
  6554  001942  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  6555  001946  0012               	return	
  6556  001948                     __end_of_xsum_builder:
  6557                           	opt stack 0
  6558                           tblptru	equ	0xFF8
  6559                           tblptrh	equ	0xFF7
  6560                           tblptrl	equ	0xFF6
  6561                           tablat	equ	0xFF5
  6562                           prodh	equ	0xFF4
  6563                           prodl	equ	0xFF3
  6564                           intcon	equ	0xFF2
  6565                           intcon2	equ	0xFF1
  6566                           intcon3	equ	0xFF0
  6567                           postinc0	equ	0xFEE
  6568                           wreg	equ	0xFE8
  6569                           postinc1	equ	0xFE6
  6570                           fsr1h	equ	0xFE2
  6571                           fsr1l	equ	0xFE1
  6572                           indf2	equ	0xFDF
  6573                           postinc2	equ	0xFDE
  6574                           postdec2	equ	0xFDD
  6575                           fsr2h	equ	0xFDA
  6576                           fsr2l	equ	0xFD9
  6577                           status	equ	0xFD8
  6578                           
  6579 ;; *************** function _itoa *****************
  6580 ;; Defined at:
  6581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  buf             2   34[COMRAM] PTR unsigned char 
  6584 ;;		 -> xsum_builder@xsumBuf(16), 
  6585 ;;  val             2   36[COMRAM] int 
  6586 ;;  base            2   38[COMRAM] int 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  cp              2   40[COMRAM] PTR unsigned char 
  6589 ;;		 -> xsum_builder@xsumBuf(16), 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2   34[COMRAM] PTR unsigned char 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6599 ;;      Params:         6       0       0       0       0       0       0
  6600 ;;      Locals:         2       0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0
  6602 ;;      Totals:         8       0       0       0       0       0       0
  6603 ;;Total ram usage:        8 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    3
  6606 ;; This function calls:
  6607 ;;		_utoa
  6608 ;; This function is called by:
  6609 ;;		_xsum_builder
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text47
  6614  001C1A                     __ptext47:
  6615                           	opt stack 0
  6616  001C1A                     _itoa:
  6617                           	opt stack 21
  6618                           
  6619                           ;incstack = 0
  6620  001C1A  C023  F029         	movff	itoa@buf,itoa@cp
  6621  001C1E  C024  F02A         	movff	itoa@buf+1,itoa@cp+1
  6622  001C22  AE26               	btfss	itoa@val+1,7,c
  6623  001C24  D00C               	goto	l936
  6624  001C26  C023  FFD9         	movff	itoa@buf,fsr2l
  6625  001C2A  C024  FFDA         	movff	itoa@buf+1,fsr2h
  6626  001C2E  0E2D               	movlw	45
  6627  001C30  6EDF               	movwf	indf2,c
  6628  001C32  4A23               	infsnz	itoa@buf,f,c
  6629  001C34  2A24               	incf	itoa@buf+1,f,c
  6630  001C36  6C25               	negf	itoa@val,c
  6631  001C38  1E26               	comf	itoa@val+1,f,c
  6632  001C3A  B0D8               	btfsc	status,0,c
  6633  001C3C  2A26               	incf	itoa@val+1,f,c
  6634  001C3E                     l936:
  6635  001C3E  C023  F01A         	movff	itoa@buf,utoa@buf
  6636  001C42  C024  F01B         	movff	itoa@buf+1,utoa@buf+1
  6637  001C46  C025  F01C         	movff	itoa@val,utoa@val
  6638  001C4A  C026  F01D         	movff	itoa@val+1,utoa@val+1
  6639  001C4E  C027  F01E         	movff	itoa@base,utoa@base
  6640  001C52  C028  F01F         	movff	itoa@base+1,utoa@base+1
  6641  001C56  EC65  F009         	call	_utoa	;wreg free
  6642  001C5A  0012               	return	
  6643  001C5C                     __end_of_itoa:
  6644                           	opt stack 0
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           intcon2	equ	0xFF1
  6653                           intcon3	equ	0xFF0
  6654                           postinc0	equ	0xFEE
  6655                           wreg	equ	0xFE8
  6656                           postinc1	equ	0xFE6
  6657                           fsr1h	equ	0xFE2
  6658                           fsr1l	equ	0xFE1
  6659                           indf2	equ	0xFDF
  6660                           postinc2	equ	0xFDE
  6661                           postdec2	equ	0xFDD
  6662                           fsr2h	equ	0xFDA
  6663                           fsr2l	equ	0xFD9
  6664                           status	equ	0xFD8
  6665                           
  6666 ;; *************** function _utoa *****************
  6667 ;; Defined at:
  6668 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  buf             2   25[COMRAM] PTR unsigned char 
  6671 ;;		 -> xsum_builder@xsumBuf(16), 
  6672 ;;  val             2   27[COMRAM] unsigned int 
  6673 ;;  base            2   29[COMRAM] int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  v               2   31[COMRAM] unsigned int 
  6676 ;;  c               1   33[COMRAM] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  2   25[COMRAM] PTR unsigned char 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6686 ;;      Params:         6       0       0       0       0       0       0
  6687 ;;      Locals:         3       0       0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0
  6689 ;;      Totals:         9       0       0       0       0       0       0
  6690 ;;Total ram usage:        9 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    2
  6693 ;; This function calls:
  6694 ;;		___lwdiv
  6695 ;;		___lwmod
  6696 ;; This function is called by:
  6697 ;;		_itoa
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text48
  6702  0012CA                     __ptext48:
  6703                           	opt stack 0
  6704  0012CA                     _utoa:
  6705                           	opt stack 21
  6706                           
  6707                           ;incstack = 0
  6708  0012CA  C01C  F020         	movff	utoa@val,utoa@v
  6709  0012CE  C01D  F021         	movff	utoa@val+1,utoa@v+1
  6710  0012D2  C020  F013         	movff	utoa@v,___lwdiv@dividend
  6711  0012D6  C021  F014         	movff	utoa@v+1,___lwdiv@dividend+1
  6712  0012DA  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  6713  0012DE  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  6714  0012E2  EC2A  F00D         	call	___lwdiv	;wreg free
  6715  0012E6  C013  F020         	movff	?___lwdiv,utoa@v
  6716  0012EA  C014  F021         	movff	?___lwdiv+1,utoa@v+1
  6717  0012EE  4A1A               	infsnz	utoa@buf,f,c
  6718  0012F0  2A1B               	incf	utoa@buf+1,f,c
  6719  0012F2  5020               	movf	utoa@v,w,c
  6720  0012F4  1021               	iorwf	utoa@v+1,w,c
  6721  0012F6  A4D8               	btfss	status,2,c
  6722  0012F8  D7EC               	goto	l940
  6723  0012FA  C01A  FFD9         	movff	utoa@buf,fsr2l
  6724  0012FE  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  6725  001302  0E00               	movlw	0
  6726  001304  6EDF               	movwf	indf2,c
  6727  001306  061A               	decf	utoa@buf,f,c
  6728  001308  A0D8               	btfss	status,0,c
  6729  00130A  061B               	decf	utoa@buf+1,f,c
  6730  00130C  C01C  F013         	movff	utoa@val,___lwmod@dividend
  6731  001310  C01D  F014         	movff	utoa@val+1,___lwmod@dividend+1
  6732  001314  C01E  F015         	movff	utoa@base,___lwmod@divisor
  6733  001318  C01F  F016         	movff	utoa@base+1,___lwmod@divisor+1
  6734  00131C  EC2E  F00E         	call	___lwmod	;wreg free
  6735  001320  5013               	movf	?___lwmod,w,c
  6736  001322  6E22               	movwf	utoa@c,c
  6737  001324  C01C  F013         	movff	utoa@val,___lwdiv@dividend
  6738  001328  C01D  F014         	movff	utoa@val+1,___lwdiv@dividend+1
  6739  00132C  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  6740  001330  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  6741  001334  EC2A  F00D         	call	___lwdiv	;wreg free
  6742  001338  C013  F01C         	movff	?___lwdiv,utoa@val
  6743  00133C  C014  F01D         	movff	?___lwdiv+1,utoa@val+1
  6744  001340  0E09               	movlw	9
  6745  001342  6422               	cpfsgt	utoa@c,c
  6746  001344  D002               	goto	l943
  6747  001346  0E07               	movlw	7
  6748  001348  2622               	addwf	utoa@c,f,c
  6749  00134A                     l943:
  6750  00134A  0E30               	movlw	48
  6751  00134C  2622               	addwf	utoa@c,f,c
  6752  00134E  C01A  FFD9         	movff	utoa@buf,fsr2l
  6753  001352  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  6754  001356  C022  FFDF         	movff	utoa@c,indf2
  6755  00135A  061A               	decf	utoa@buf,f,c
  6756  00135C  A0D8               	btfss	status,0,c
  6757  00135E  061B               	decf	utoa@buf+1,f,c
  6758  001360  501C               	movf	utoa@val,w,c
  6759  001362  101D               	iorwf	utoa@val+1,w,c
  6760  001364  A4D8               	btfss	status,2,c
  6761  001366  D7D2               	goto	l942
  6762                           
  6763                           ;	Return value of _utoa is never used
  6764  001368  4A1A               	infsnz	utoa@buf,f,c
  6765  00136A  2A1B               	incf	utoa@buf+1,f,c
  6766  00136C  0012               	return	
  6767  00136E                     __end_of_utoa:
  6768                           	opt stack 0
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           intcon	equ	0xFF2
  6776                           intcon2	equ	0xFF1
  6777                           intcon3	equ	0xFF0
  6778                           postinc0	equ	0xFEE
  6779                           wreg	equ	0xFE8
  6780                           postinc1	equ	0xFE6
  6781                           fsr1h	equ	0xFE2
  6782                           fsr1l	equ	0xFE1
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function ___lwmod *****************
  6791 ;; Defined at:
  6792 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  dividend        2   18[COMRAM] unsigned int 
  6795 ;;  divisor         2   20[COMRAM] unsigned int 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  counter         1   22[COMRAM] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2   18[COMRAM] unsigned int 
  6800 ;; Registers used:
  6801 ;;		wreg, status,2, status,0
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6807 ;;      Params:         4       0       0       0       0       0       0
  6808 ;;      Locals:         1       0       0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0
  6810 ;;      Totals:         5       0       0       0       0       0       0
  6811 ;;Total ram usage:        5 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    1
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_utoa
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text49
  6822  001C5C                     __ptext49:
  6823                           	opt stack 0
  6824  001C5C                     ___lwmod:
  6825                           	opt stack 21
  6826                           
  6827                           ;incstack = 0
  6828  001C5C  5015               	movf	___lwmod@divisor,w,c
  6829  001C5E  1016               	iorwf	___lwmod@divisor+1,w,c
  6830  001C60  B4D8               	btfsc	status,2,c
  6831  001C62  D018               	goto	l1052
  6832  001C64  0E01               	movlw	1
  6833  001C66  6E17               	movwf	___lwmod@counter,c
  6834  001C68  D004               	goto	l1047
  6835  001C6A  90D8               	bcf	status,0,c
  6836  001C6C  3615               	rlcf	___lwmod@divisor,f,c
  6837  001C6E  3616               	rlcf	___lwmod@divisor+1,f,c
  6838  001C70  2A17               	incf	___lwmod@counter,f,c
  6839  001C72                     l1047:
  6840  001C72  AE16               	btfss	___lwmod@divisor+1,7,c
  6841  001C74  D7FA               	goto	l1048
  6842  001C76                     u2210:
  6843  001C76  5015               	movf	___lwmod@divisor,w,c
  6844  001C78  5C13               	subwf	___lwmod@dividend,w,c
  6845  001C7A  5016               	movf	___lwmod@divisor+1,w,c
  6846  001C7C  5814               	subwfb	___lwmod@dividend+1,w,c
  6847  001C7E  A0D8               	btfss	status,0,c
  6848  001C80  D004               	goto	l1051
  6849  001C82  5015               	movf	___lwmod@divisor,w,c
  6850  001C84  5E13               	subwf	___lwmod@dividend,f,c
  6851  001C86  5016               	movf	___lwmod@divisor+1,w,c
  6852  001C88  5A14               	subwfb	___lwmod@dividend+1,f,c
  6853  001C8A                     l1051:
  6854  001C8A  90D8               	bcf	status,0,c
  6855  001C8C  3216               	rrcf	___lwmod@divisor+1,f,c
  6856  001C8E  3215               	rrcf	___lwmod@divisor,f,c
  6857  001C90  2E17               	decfsz	___lwmod@counter,f,c
  6858  001C92  D7F1               	goto	u2210
  6859  001C94                     l1052:
  6860  001C94  C013  F013         	movff	___lwmod@dividend,?___lwmod
  6861  001C98  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  6862  001C9C  0012               	return		;funcret
  6863  001C9E                     __end_of___lwmod:
  6864                           	opt stack 0
  6865                           tblptru	equ	0xFF8
  6866                           tblptrh	equ	0xFF7
  6867                           tblptrl	equ	0xFF6
  6868                           tablat	equ	0xFF5
  6869                           prodh	equ	0xFF4
  6870                           prodl	equ	0xFF3
  6871                           intcon	equ	0xFF2
  6872                           intcon2	equ	0xFF1
  6873                           intcon3	equ	0xFF0
  6874                           postinc0	equ	0xFEE
  6875                           wreg	equ	0xFE8
  6876                           postinc1	equ	0xFE6
  6877                           fsr1h	equ	0xFE2
  6878                           fsr1l	equ	0xFE1
  6879                           indf2	equ	0xFDF
  6880                           postinc2	equ	0xFDE
  6881                           postdec2	equ	0xFDD
  6882                           fsr2h	equ	0xFDA
  6883                           fsr2l	equ	0xFD9
  6884                           status	equ	0xFD8
  6885                           
  6886 ;; *************** function ___lwdiv *****************
  6887 ;; Defined at:
  6888 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  dividend        2   18[COMRAM] unsigned int 
  6891 ;;  divisor         2   20[COMRAM] unsigned int 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  quotient        2   23[COMRAM] unsigned int 
  6894 ;;  counter         1   22[COMRAM] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2   18[COMRAM] unsigned int 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6904 ;;      Params:         4       0       0       0       0       0       0
  6905 ;;      Locals:         3       0       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0
  6907 ;;      Totals:         7       0       0       0       0       0       0
  6908 ;;Total ram usage:        7 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_utoa
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text50
  6919  001A54                     __ptext50:
  6920                           	opt stack 0
  6921  001A54                     ___lwdiv:
  6922                           	opt stack 21
  6923                           
  6924                           ;incstack = 0
  6925  001A54  0E00               	movlw	0
  6926  001A56  6E19               	movwf	___lwdiv@quotient+1,c
  6927  001A58  0E00               	movlw	0
  6928  001A5A  6E18               	movwf	___lwdiv@quotient,c
  6929  001A5C  5015               	movf	___lwdiv@divisor,w,c
  6930  001A5E  1016               	iorwf	___lwdiv@divisor+1,w,c
  6931  001A60  B4D8               	btfsc	status,2,c
  6932  001A62  D01C               	goto	l1042
  6933  001A64  0E01               	movlw	1
  6934  001A66  6E17               	movwf	___lwdiv@counter,c
  6935  001A68  D004               	goto	l1037
  6936  001A6A  90D8               	bcf	status,0,c
  6937  001A6C  3615               	rlcf	___lwdiv@divisor,f,c
  6938  001A6E  3616               	rlcf	___lwdiv@divisor+1,f,c
  6939  001A70  2A17               	incf	___lwdiv@counter,f,c
  6940  001A72                     l1037:
  6941  001A72  AE16               	btfss	___lwdiv@divisor+1,7,c
  6942  001A74  D7FA               	goto	l1038
  6943  001A76                     u2180:
  6944  001A76  90D8               	bcf	status,0,c
  6945  001A78  3618               	rlcf	___lwdiv@quotient,f,c
  6946  001A7A  3619               	rlcf	___lwdiv@quotient+1,f,c
  6947  001A7C  5015               	movf	___lwdiv@divisor,w,c
  6948  001A7E  5C13               	subwf	___lwdiv@dividend,w,c
  6949  001A80  5016               	movf	___lwdiv@divisor+1,w,c
  6950  001A82  5814               	subwfb	___lwdiv@dividend+1,w,c
  6951  001A84  A0D8               	btfss	status,0,c
  6952  001A86  D005               	goto	l1041
  6953  001A88  5015               	movf	___lwdiv@divisor,w,c
  6954  001A8A  5E13               	subwf	___lwdiv@dividend,f,c
  6955  001A8C  5016               	movf	___lwdiv@divisor+1,w,c
  6956  001A8E  5A14               	subwfb	___lwdiv@dividend+1,f,c
  6957  001A90  8018               	bsf	___lwdiv@quotient,0,c
  6958  001A92                     l1041:
  6959  001A92  90D8               	bcf	status,0,c
  6960  001A94  3216               	rrcf	___lwdiv@divisor+1,f,c
  6961  001A96  3215               	rrcf	___lwdiv@divisor,f,c
  6962  001A98  2E17               	decfsz	___lwdiv@counter,f,c
  6963  001A9A  D7ED               	goto	u2180
  6964  001A9C                     l1042:
  6965  001A9C  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  6966  001AA0  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6967  001AA4  0012               	return		;funcret
  6968  001AA6                     __end_of___lwdiv:
  6969                           	opt stack 0
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           intcon	equ	0xFF2
  6977                           intcon2	equ	0xFF1
  6978                           intcon3	equ	0xFF0
  6979                           postinc0	equ	0xFEE
  6980                           wreg	equ	0xFE8
  6981                           postinc1	equ	0xFE6
  6982                           fsr1h	equ	0xFE2
  6983                           fsr1l	equ	0xFE1
  6984                           indf2	equ	0xFDF
  6985                           postinc2	equ	0xFDE
  6986                           postdec2	equ	0xFDD
  6987                           fsr2h	equ	0xFDA
  6988                           fsr2l	equ	0xFD9
  6989                           status	equ	0xFD8
  6990                           
  6991 ;; *************** function _command_builder_add_string *****************
  6992 ;; Defined at:
  6993 ;;		line 490 in file "SlaveComm.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  6996 ;;		 -> communications@send_buffer(42), 
  6997 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  6998 ;;		 -> STR_29(4), STR_28(10), STR_27(4), STR_26(12), 
  6999 ;;		 -> STR_25(5), STR_24(4), STR_23(5), STR_22(4), 
  7000 ;;		 -> STR_21(4), STR_20(6), STR_19(4), STR_18(7), 
  7001 ;;		 -> STR_17(4), com_command_setEnergyUsed@temp(12), STR_16(6), STR_15(4), 
  7002 ;;		 -> com_command_setPower@temp(12), STR_14(5), STR_13(5), STR_12(4), 
  7003 ;;		 -> xsum_builder@xsumBuf(16), 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  inx             2   30[COMRAM] int 
  7006 ;;  xsumAdd         2   28[COMRAM] int 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  2   22[COMRAM] int 
  7009 ;; Registers used:
  7010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7016 ;;      Params:         4       0       0       0       0       0       0
  7017 ;;      Locals:         4       0       0       0       0       0       0
  7018 ;;      Temps:          2       0       0       0       0       0       0
  7019 ;;      Totals:        10       0       0       0       0       0       0
  7020 ;;Total ram usage:       10 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:    2
  7023 ;; This function calls:
  7024 ;;		_command_builder_add_char
  7025 ;; This function is called by:
  7026 ;;		_command_builder1
  7027 ;;		_command_builder3
  7028 ;;		_xsum_builder
  7029 ;;		_command_builder2
  7030 ;;		_command_builder4
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text51
  7035  0014A4                     __ptext51:
  7036                           	opt stack 0
  7037  0014A4                     _command_builder_add_string:
  7038                           	opt stack 22
  7039                           
  7040                           ;SlaveComm.c: 492: int xsumAdd = 0;
  7041                           
  7042                           ;incstack = 0
  7043  0014A4  0E00               	movlw	0
  7044  0014A6  6E1E               	movwf	command_builder_add_string@xsumAdd+1,c
  7045  0014A8  0E00               	movlw	0
  7046  0014AA  6E1D               	movwf	command_builder_add_string@xsumAdd,c
  7047                           
  7048                           ;SlaveComm.c: 494: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  7049  0014AC  0E00               	movlw	0
  7050  0014AE  6E20               	movwf	command_builder_add_string@inx+1,c
  7051  0014B0  0E00               	movlw	0
  7052  0014B2  6E1F               	movwf	command_builder_add_string@inx,c
  7053  0014B4  D023               	goto	l301
  7054  0014B6                     
  7055                           ;SlaveComm.c: 495: {
  7056                           ;SlaveComm.c: 496: xsumAdd += command_builder_add_char( send_buffer, data_string[inx] );
  7057  0014B6  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  7058  0014BA  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  7059  0014BE  501F               	movf	command_builder_add_string@inx,w,c
  7060  0014C0  2419               	addwf	command_builder_add_string@data_string,w,c
  7061  0014C2  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7062  0014C4  5020               	movf	command_builder_add_string@inx+1,w,c
  7063  0014C6  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7064  0014C8  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7065  0014CA  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7066  0014CE  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7067  0014D2  6AF8               	clrf	tblptru,c
  7068  0014D4  0E05               	movlw	(high __ramtop+-1)
  7069  0014D6  64F7               	cpfsgt	tblptrh,c
  7070  0014D8  D003               	bra	u2277
  7071  0014DA  0008               	tblrd		*
  7072  0014DC  50F5               	movf	tablat,w,c
  7073  0014DE  D005               	bra	u2270
  7074  0014E0                     u2277:
  7075  0014E0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7076  0014E4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7077  0014E8  50E7               	movf	indf1,w,c
  7078  0014EA                     u2270:
  7079  0014EA  6E15               	movwf	command_builder_add_char@data,c
  7080  0014EC  ECA4  F00C         	call	_command_builder_add_char	;wreg free
  7081  0014F0  5013               	movf	?_command_builder_add_char,w,c
  7082  0014F2  261D               	addwf	command_builder_add_string@xsumAdd,f,c
  7083  0014F4  5014               	movf	?_command_builder_add_char+1,w,c
  7084  0014F6  221E               	addwfc	command_builder_add_string@xsumAdd+1,f,c
  7085  0014F8  4A1F               	infsnz	command_builder_add_string@inx,f,c
  7086  0014FA  2A20               	incf	command_builder_add_string@inx+1,f,c
  7087  0014FC                     l301:
  7088  0014FC  501F               	movf	command_builder_add_string@inx,w,c
  7089  0014FE  2419               	addwf	command_builder_add_string@data_string,w,c
  7090  001500  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7091  001502  5020               	movf	command_builder_add_string@inx+1,w,c
  7092  001504  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7093  001506  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7094  001508  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7095  00150C  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7096  001510  6AF8               	clrf	tblptru,c
  7097  001512  0E05               	movlw	(high __ramtop+-1)
  7098  001514  64F7               	cpfsgt	tblptrh,c
  7099  001516  D003               	bra	u2287
  7100  001518  0008               	tblrd		*
  7101  00151A  50F5               	movf	tablat,w,c
  7102  00151C  D005               	bra	u2280
  7103  00151E                     u2287:
  7104  00151E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7105  001522  CFF7 FFE2          	movff	tblptrh,fsr1h
  7106  001526  50E7               	movf	indf1,w,c
  7107  001528                     u2280:
  7108  001528  0900               	iorlw	0
  7109  00152A  A4D8               	btfss	status,2,c
  7110  00152C  D7C4               	goto	l302
  7111                           
  7112                           ;SlaveComm.c: 497: }
  7113                           ;SlaveComm.c: 499: return xsumAdd;
  7114  00152E  C01D  F017         	movff	command_builder_add_string@xsumAdd,?_command_builder_add_string
  7115  001532  C01E  F018         	movff	command_builder_add_string@xsumAdd+1,?_command_builder_add_string+1
  7116  001536  0012               	return		;funcret
  7117  001538                     __end_of_command_builder_add_string:
  7118                           	opt stack 0
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           intcon	equ	0xFF2
  7126                           intcon2	equ	0xFF1
  7127                           intcon3	equ	0xFF0
  7128                           postinc0	equ	0xFEE
  7129                           wreg	equ	0xFE8
  7130                           indf1	equ	0xFE7
  7131                           postinc1	equ	0xFE6
  7132                           fsr1h	equ	0xFE2
  7133                           fsr1l	equ	0xFE1
  7134                           indf2	equ	0xFDF
  7135                           postinc2	equ	0xFDE
  7136                           postdec2	equ	0xFDD
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           
  7141 ;; *************** function _command_builder_add_char *****************
  7142 ;; Defined at:
  7143 ;;		line 477 in file "SlaveComm.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  7146 ;;		 -> communications@send_buffer(42), 
  7147 ;;  data            1   20[COMRAM] unsigned char 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;		None
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  2   18[COMRAM] int 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7159 ;;      Params:         3       0       0       0       0       0       0
  7160 ;;      Locals:         0       0       0       0       0       0       0
  7161 ;;      Temps:          1       0       0       0       0       0       0
  7162 ;;      Totals:         4       0       0       0       0       0       0
  7163 ;;Total ram usage:        4 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_command_builder1
  7170 ;;		_command_builder3
  7171 ;;		_xsum_builder
  7172 ;;		_command_builder_add_string
  7173 ;;		_command_builder2
  7174 ;;		_command_builder4
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text52
  7179  001948                     __ptext52:
  7180                           	opt stack 0
  7181  001948                     _command_builder_add_char:
  7182                           	opt stack 22
  7183                           
  7184                           ;SlaveComm.c: 479: send_buffer->data_buffer[send_buffer->write_position] = data;
  7185                           
  7186                           ;incstack = 0
  7187  001948  EE20 F028          	lfsr	2,40
  7188  00194C  5013               	movf	command_builder_add_char@send_buffer,w,c
  7189  00194E  26D9               	addwf	fsr2l,f,c
  7190  001950  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7191  001952  22DA               	addwfc	fsr2h,f,c
  7192  001954  50DF               	movf	indf2,w,c
  7193  001956  6E16               	movwf	??_command_builder_add_char& (0+255),c
  7194  001958  5016               	movf	??_command_builder_add_char,w,c
  7195  00195A  0D01               	mullw	1
  7196  00195C  50F3               	movf	prodl,w,c
  7197  00195E  2413               	addwf	command_builder_add_char@send_buffer,w,c
  7198  001960  6ED9               	movwf	fsr2l,c
  7199  001962  50F4               	movf	prodh,w,c
  7200  001964  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  7201  001966  6EDA               	movwf	fsr2h,c
  7202  001968  C015  FFDF         	movff	command_builder_add_char@data,indf2
  7203                           
  7204                           ;SlaveComm.c: 481: send_buffer->write_position++;
  7205  00196C  EE20 F028          	lfsr	2,40
  7206  001970  5013               	movf	command_builder_add_char@send_buffer,w,c
  7207  001972  26D9               	addwf	fsr2l,f,c
  7208  001974  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7209  001976  22DA               	addwfc	fsr2h,f,c
  7210  001978  2ADF               	incf	indf2,f,c
  7211                           
  7212                           ;SlaveComm.c: 482: if( send_buffer->write_position >= 40 )
  7213  00197A  EE20 F028          	lfsr	2,40
  7214  00197E  5013               	movf	command_builder_add_char@send_buffer,w,c
  7215  001980  26D9               	addwf	fsr2l,f,c
  7216  001982  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7217  001984  22DA               	addwfc	fsr2h,f,c
  7218  001986  0E27               	movlw	39
  7219  001988  64DF               	cpfsgt	indf2,c
  7220  00198A  D008               	goto	l297
  7221                           
  7222                           ;SlaveComm.c: 483: {
  7223                           ;SlaveComm.c: 484: send_buffer->write_position = 0;
  7224  00198C  EE20 F028          	lfsr	2,40
  7225  001990  5013               	movf	command_builder_add_char@send_buffer,w,c
  7226  001992  26D9               	addwf	fsr2l,f,c
  7227  001994  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7228  001996  22DA               	addwfc	fsr2h,f,c
  7229  001998  0E00               	movlw	0
  7230  00199A  6EDF               	movwf	indf2,c
  7231  00199C                     l297:
  7232                           
  7233                           ;SlaveComm.c: 485: }
  7234                           ;SlaveComm.c: 487: return data;
  7235  00199C  C015  F013         	movff	command_builder_add_char@data,?_command_builder_add_char
  7236  0019A0  6A14               	clrf	?_command_builder_add_char+1,c
  7237  0019A2  0012               	return	
  7238  0019A4                     __end_of_command_builder_add_char:
  7239                           	opt stack 0
  7240                           tblptru	equ	0xFF8
  7241                           tblptrh	equ	0xFF7
  7242                           tblptrl	equ	0xFF6
  7243                           tablat	equ	0xFF5
  7244                           prodh	equ	0xFF4
  7245                           prodl	equ	0xFF3
  7246                           intcon	equ	0xFF2
  7247                           intcon2	equ	0xFF1
  7248                           intcon3	equ	0xFF0
  7249                           postinc0	equ	0xFEE
  7250                           wreg	equ	0xFE8
  7251                           indf1	equ	0xFE7
  7252                           postinc1	equ	0xFE6
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8
  7261                           
  7262 ;; *************** function _atol *****************
  7263 ;; Defined at:
  7264 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7267 ;;		 -> process_data@parameters(50), 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  a               4   39[COMRAM] long 
  7270 ;;  c               1   43[COMRAM] unsigned char 
  7271 ;;  sign            1   38[COMRAM] unsigned char 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  4   30[COMRAM] long 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7281 ;;      Params:         4       0       0       0       0       0       0
  7282 ;;      Locals:         6       0       0       0       0       0       0
  7283 ;;      Temps:          4       0       0       0       0       0       0
  7284 ;;      Totals:        14       0       0       0       0       0       0
  7285 ;;Total ram usage:       14 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    2
  7288 ;; This function calls:
  7289 ;;		___lmul
  7290 ;;		_isdigit
  7291 ;; This function is called by:
  7292 ;;		_process_data_parameters
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text53
  7297  000D44                     __ptext53:
  7298                           	opt stack 0
  7299  000D44                     _atol:
  7300                           	opt stack 24
  7301                           
  7302                           ;incstack = 0
  7303  000D44  C01F  FFD9         	movff	atol@s,fsr2l
  7304  000D48  C020  FFDA         	movff	atol@s+1,fsr2h
  7305  000D4C  50DF               	movf	indf2,w,c
  7306  000D4E  6E2C               	movwf	atol@c,c
  7307  000D50  4A1F               	infsnz	atol@s,f,c
  7308  000D52  2A20               	incf	atol@s+1,f,c
  7309  000D54  0E20               	movlw	32
  7310  000D56  182C               	xorwf	atol@c,w,c
  7311  000D58  B4D8               	btfsc	status,2,c
  7312  000D5A  D7F4               	goto	_atol
  7313  000D5C  0E09               	movlw	9
  7314  000D5E  182C               	xorwf	atol@c,w,c
  7315  000D60  B4D8               	btfsc	status,2,c
  7316  000D62  D7F0               	goto	_atol
  7317  000D64  0E00               	movlw	0
  7318  000D66  6E28               	movwf	atol@a,c
  7319  000D68  0E00               	movlw	0
  7320  000D6A  6E29               	movwf	atol@a+1,c
  7321  000D6C  0E00               	movlw	0
  7322  000D6E  6E2A               	movwf	atol@a+2,c
  7323  000D70  0E00               	movlw	0
  7324  000D72  6E2B               	movwf	atol@a+3,c
  7325  000D74  0E00               	movlw	0
  7326  000D76  6E27               	movwf	atol@sign,c
  7327  000D78  0E2D               	movlw	45
  7328  000D7A  182C               	xorwf	atol@c,w,c
  7329  000D7C  A4D8               	btfss	status,2,c
  7330  000D7E  D002               	goto	l752
  7331  000D80  2A27               	incf	atol@sign,f,c
  7332  000D82  D027               	goto	L7
  7333  000D84                     l752:
  7334  000D84  0E2B               	movlw	43
  7335  000D86  182C               	xorwf	atol@c,w,c
  7336  000D88  A4D8               	btfss	status,2,c
  7337  000D8A  D02B               	goto	l755
  7338  000D8C  D022               	goto	L7
  7339  000D8E  C028  F013         	movff	atol@a,___lmul@multiplier
  7340  000D92  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  7341  000D96  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  7342  000D9A  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  7343  000D9E  0E0A               	movlw	10
  7344  000DA0  6E17               	movwf	___lmul@multiplicand,c
  7345  000DA2  0E00               	movlw	0
  7346  000DA4  6E18               	movwf	___lmul@multiplicand+1,c
  7347  000DA6  0E00               	movlw	0
  7348  000DA8  6E19               	movwf	___lmul@multiplicand+2,c
  7349  000DAA  0E00               	movlw	0
  7350  000DAC  6E1A               	movwf	___lmul@multiplicand+3,c
  7351  000DAE  ECFF  F00C         	call	___lmul	;wreg free
  7352  000DB2  C02C  F023         	movff	atol@c,??_atol
  7353  000DB6  0ED0               	movlw	208
  7354  000DB8  2623               	addwf	??_atol,f,c
  7355  000DBA  5023               	movf	??_atol,w,c
  7356  000DBC  2413               	addwf	?___lmul,w,c
  7357  000DBE  6E28               	movwf	atol@a,c
  7358  000DC0  0E00               	movlw	0
  7359  000DC2  2014               	addwfc	?___lmul+1,w,c
  7360  000DC4  6E29               	movwf	atol@a+1,c
  7361  000DC6  0E00               	movlw	0
  7362  000DC8  2015               	addwfc	?___lmul+2,w,c
  7363  000DCA  6E2A               	movwf	atol@a+2,c
  7364  000DCC  0E00               	movlw	0
  7365  000DCE  2016               	addwfc	?___lmul+3,w,c
  7366  000DD0  6E2B               	movwf	atol@a+3,c
  7367  000DD2                     L7:
  7368  000DD2  C01F  FFD9         	movff	atol@s,fsr2l
  7369  000DD6  C020  FFDA         	movff	atol@s+1,fsr2h
  7370  000DDA  50DF               	movf	indf2,w,c
  7371  000DDC  6E2C               	movwf	atol@c,c
  7372  000DDE  4A1F               	infsnz	atol@s,f,c
  7373  000DE0  2A20               	incf	atol@s+1,f,c
  7374  000DE2                     l755:
  7375  000DE2  502C               	movf	atol@c,w,c
  7376  000DE4  EC7C  F00F         	call	_isdigit
  7377  000DE8  B0D8               	btfsc	status,0,c
  7378  000DEA  D7D1               	goto	l756
  7379  000DEC  5027               	movf	atol@sign,w,c
  7380  000DEE  B4D8               	btfsc	status,2,c
  7381  000DF0  D01A               	goto	l758
  7382  000DF2  C028  F023         	movff	atol@a,??_atol
  7383  000DF6  C029  F024         	movff	atol@a+1,??_atol+1
  7384  000DFA  C02A  F025         	movff	atol@a+2,??_atol+2
  7385  000DFE  C02B  F026         	movff	atol@a+3,??_atol+3
  7386  000E02  1E23               	comf	??_atol,f,c
  7387  000E04  1E24               	comf	??_atol+1,f,c
  7388  000E06  1E25               	comf	??_atol+2,f,c
  7389  000E08  1E26               	comf	??_atol+3,f,c
  7390  000E0A  2A23               	incf	??_atol,f,c
  7391  000E0C  0E00               	movlw	0
  7392  000E0E  2224               	addwfc	??_atol+1,f,c
  7393  000E10  2225               	addwfc	??_atol+2,f,c
  7394  000E12  2226               	addwfc	??_atol+3,f,c
  7395  000E14  C023  F01F         	movff	??_atol,?_atol
  7396  000E18  C024  F020         	movff	??_atol+1,?_atol+1
  7397  000E1C  C025  F021         	movff	??_atol+2,?_atol+2
  7398  000E20  C026  F022         	movff	??_atol+3,?_atol+3
  7399  000E24  0012               	return	
  7400  000E26                     l758:
  7401  000E26  C028  F01F         	movff	atol@a,?_atol
  7402  000E2A  C029  F020         	movff	atol@a+1,?_atol+1
  7403  000E2E  C02A  F021         	movff	atol@a+2,?_atol+2
  7404  000E32  C02B  F022         	movff	atol@a+3,?_atol+3
  7405  000E36  0012               	return		;funcret
  7406  000E38                     __end_of_atol:
  7407                           	opt stack 0
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           prodh	equ	0xFF4
  7413                           prodl	equ	0xFF3
  7414                           intcon	equ	0xFF2
  7415                           intcon2	equ	0xFF1
  7416                           intcon3	equ	0xFF0
  7417                           postinc0	equ	0xFEE
  7418                           wreg	equ	0xFE8
  7419                           indf1	equ	0xFE7
  7420                           postinc1	equ	0xFE6
  7421                           fsr1h	equ	0xFE2
  7422                           fsr1l	equ	0xFE1
  7423                           indf2	equ	0xFDF
  7424                           postinc2	equ	0xFDE
  7425                           postdec2	equ	0xFDD
  7426                           fsr2h	equ	0xFDA
  7427                           fsr2l	equ	0xFD9
  7428                           status	equ	0xFD8
  7429                           
  7430 ;; *************** function _isdigit *****************
  7431 ;; Defined at:
  7432 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  c               1    wreg     unsigned char 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;  c               1   20[COMRAM] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;		None               void
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7446 ;;      Params:         0       0       0       0       0       0       0
  7447 ;;      Locals:         2       0       0       0       0       0       0
  7448 ;;      Temps:          1       0       0       0       0       0       0
  7449 ;;      Totals:         3       0       0       0       0       0       0
  7450 ;;Total ram usage:        3 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    1
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_atol
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text54
  7461  001EF8                     __ptext54:
  7462                           	opt stack 0
  7463  001EF8                     _isdigit:
  7464                           	opt stack 24
  7465                           
  7466                           ;incstack = 0
  7467                           ;isdigit@c stored from wreg
  7468  001EF8  6E15               	movwf	isdigit@c,c
  7469  001EFA  0E00               	movlw	0
  7470  001EFC  6E14               	movwf	_isdigit$2409,c
  7471  001EFE  0E3A               	movlw	58
  7472  001F00  6015               	cpfslt	isdigit@c,c
  7473  001F02  D005               	goto	l930
  7474  001F04  0E2F               	movlw	47
  7475  001F06  6415               	cpfsgt	isdigit@c,c
  7476  001F08  D002               	goto	l930
  7477  001F0A  0E01               	movlw	1
  7478  001F0C  6E14               	movwf	_isdigit$2409,c
  7479  001F0E                     l930:
  7480  001F0E  C014  F013         	movff	_isdigit$2409,??_isdigit
  7481  001F12  3013               	rrcf	??_isdigit,w,c
  7482  001F14  0012               	return	
  7483  001F16                     __end_of_isdigit:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           prodh	equ	0xFF4
  7490                           prodl	equ	0xFF3
  7491                           intcon	equ	0xFF2
  7492                           intcon2	equ	0xFF1
  7493                           intcon3	equ	0xFF0
  7494                           postinc0	equ	0xFEE
  7495                           wreg	equ	0xFE8
  7496                           indf1	equ	0xFE7
  7497                           postinc1	equ	0xFE6
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           fsr2h	equ	0xFDA
  7504                           fsr2l	equ	0xFD9
  7505                           status	equ	0xFD8
  7506                           
  7507 ;; *************** function ___lmul *****************
  7508 ;; Defined at:
  7509 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  multiplier      4   18[COMRAM] unsigned long 
  7512 ;;  multiplicand    4   22[COMRAM] unsigned long 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  product         4   26[COMRAM] unsigned long 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  4   18[COMRAM] unsigned long 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7524 ;;      Params:         8       0       0       0       0       0       0
  7525 ;;      Locals:         4       0       0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0
  7527 ;;      Totals:        12       0       0       0       0       0       0
  7528 ;;Total ram usage:       12 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_atol
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text55
  7539  0019FE                     __ptext55:
  7540                           	opt stack 0
  7541  0019FE                     ___lmul:
  7542                           	opt stack 24
  7543                           
  7544                           ;incstack = 0
  7545  0019FE  0E00               	movlw	0
  7546  001A00  6E1B               	movwf	___lmul@product,c
  7547  001A02  0E00               	movlw	0
  7548  001A04  6E1C               	movwf	___lmul@product+1,c
  7549  001A06  0E00               	movlw	0
  7550  001A08  6E1D               	movwf	___lmul@product+2,c
  7551  001A0A  0E00               	movlw	0
  7552  001A0C  6E1E               	movwf	___lmul@product+3,c
  7553  001A0E  A013               	btfss	___lmul@multiplier,0,c
  7554  001A10  D008               	goto	l599
  7555  001A12  5017               	movf	___lmul@multiplicand,w,c
  7556  001A14  261B               	addwf	___lmul@product,f,c
  7557  001A16  5018               	movf	___lmul@multiplicand+1,w,c
  7558  001A18  221C               	addwfc	___lmul@product+1,f,c
  7559  001A1A  5019               	movf	___lmul@multiplicand+2,w,c
  7560  001A1C  221D               	addwfc	___lmul@product+2,f,c
  7561  001A1E  501A               	movf	___lmul@multiplicand+3,w,c
  7562  001A20  221E               	addwfc	___lmul@product+3,f,c
  7563  001A22                     l599:
  7564  001A22  90D8               	bcf	status,0,c
  7565  001A24  3617               	rlcf	___lmul@multiplicand,f,c
  7566  001A26  3618               	rlcf	___lmul@multiplicand+1,f,c
  7567  001A28  3619               	rlcf	___lmul@multiplicand+2,f,c
  7568  001A2A  361A               	rlcf	___lmul@multiplicand+3,f,c
  7569  001A2C  90D8               	bcf	status,0,c
  7570  001A2E  3216               	rrcf	___lmul@multiplier+3,f,c
  7571  001A30  3215               	rrcf	___lmul@multiplier+2,f,c
  7572  001A32  3214               	rrcf	___lmul@multiplier+1,f,c
  7573  001A34  3213               	rrcf	___lmul@multiplier,f,c
  7574  001A36  5013               	movf	___lmul@multiplier,w,c
  7575  001A38  1014               	iorwf	___lmul@multiplier+1,w,c
  7576  001A3A  1015               	iorwf	___lmul@multiplier+2,w,c
  7577  001A3C  1016               	iorwf	___lmul@multiplier+3,w,c
  7578  001A3E  A4D8               	btfss	status,2,c
  7579  001A40  D7E6               	goto	l598
  7580  001A42  C01B  F013         	movff	___lmul@product,?___lmul
  7581  001A46  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  7582  001A4A  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  7583  001A4E  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  7584  001A52  0012               	return		;funcret
  7585  001A54                     __end_of___lmul:
  7586                           	opt stack 0
  7587                           tblptru	equ	0xFF8
  7588                           tblptrh	equ	0xFF7
  7589                           tblptrl	equ	0xFF6
  7590                           tablat	equ	0xFF5
  7591                           prodh	equ	0xFF4
  7592                           prodl	equ	0xFF3
  7593                           intcon	equ	0xFF2
  7594                           intcon2	equ	0xFF1
  7595                           intcon3	equ	0xFF0
  7596                           postinc0	equ	0xFEE
  7597                           wreg	equ	0xFE8
  7598                           indf1	equ	0xFE7
  7599                           postinc1	equ	0xFE6
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           indf2	equ	0xFDF
  7603                           postinc2	equ	0xFDE
  7604                           postdec2	equ	0xFDD
  7605                           fsr2h	equ	0xFDA
  7606                           fsr2l	equ	0xFD9
  7607                           status	equ	0xFD8
  7608                           
  7609 ;; *************** function _process_data_parameterize *****************
  7610 ;; Defined at:
  7611 ;;		line 286 in file "SlaveComm.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  7614 ;;		 -> process_data@parameters(50), 
  7615 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  7616 ;;		 -> communications@receive_buffer(42), 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  inx             2   31[COMRAM] int 
  7619 ;;  parameter_po    1   34[COMRAM] unsigned char 
  7620 ;;  parameter_in    1   33[COMRAM] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7630 ;;      Params:         4       0       0       0       0       0       0
  7631 ;;      Locals:         4       0       0       0       0       0       0
  7632 ;;      Temps:          3       0       0       0       0       0       0
  7633 ;;      Totals:        11       0       0       0       0       0       0
  7634 ;;Total ram usage:       11 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    2
  7637 ;; This function calls:
  7638 ;;		___wmul
  7639 ;; This function is called by:
  7640 ;;		_process_data
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text56
  7645  0009A2                     __ptext56:
  7646                           	opt stack 0
  7647  0009A2                     _process_data_parameterize:
  7648                           	opt stack 25
  7649                           
  7650                           ;SlaveComm.c: 288: unsigned char parameter_position = 0;
  7651                           
  7652                           ;incstack = 0
  7653  0009A2  0E00               	movlw	0
  7654  0009A4  6E23               	movwf	process_data_parameterize@parameter_position,c
  7655                           
  7656                           ;SlaveComm.c: 289: unsigned char parameter_index = 0;
  7657  0009A6  0E00               	movlw	0
  7658  0009A8  6E22               	movwf	process_data_parameterize@parameter_index,c
  7659                           
  7660                           ;SlaveComm.c: 298: for( int inx = 0; inx < 5; inx++ )
  7661  0009AA  0E00               	movlw	0
  7662  0009AC  6E21               	movwf	process_data_parameterize@inx+1,c
  7663  0009AE  0E00               	movlw	0
  7664  0009B0  6E20               	movwf	process_data_parameterize@inx,c
  7665  0009B2  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  7666  0009B4  D008               	goto	l243
  7667  0009B6  5021               	movf	process_data_parameterize@inx+1,w,c
  7668  0009B8  E105               	bnz	u2610
  7669  0009BA  0E05               	movlw	5
  7670  0009BC  5C20               	subwf	process_data_parameterize@inx,w,c
  7671  0009BE  B0D8               	btfsc	status,0,c
  7672  0009C0  D082               	goto	l245
  7673  0009C2  D001               	goto	l243
  7674  0009C4                     u2610:
  7675  0009C4  D080               	goto	l245
  7676  0009C6                     l243:
  7677                           
  7678                           ;SlaveComm.c: 299: {
  7679                           ;SlaveComm.c: 300: parameters[inx][0] = '\0';
  7680  0009C6  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  7681  0009CA  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  7682  0009CE  0E00               	movlw	0
  7683  0009D0  6E16               	movwf	___wmul@multiplicand+1,c
  7684  0009D2  0E0A               	movlw	10
  7685  0009D4  6E15               	movwf	___wmul@multiplicand,c
  7686  0009D6  EC3B  F00F         	call	___wmul	;wreg free
  7687  0009DA  5013               	movf	?___wmul,w,c
  7688  0009DC  2419               	addwf	process_data_parameterize@parameters,w,c
  7689  0009DE  6ED9               	movwf	fsr2l,c
  7690  0009E0  5014               	movf	?___wmul+1,w,c
  7691  0009E2  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  7692  0009E4  6EDA               	movwf	fsr2h,c
  7693  0009E6  0E00               	movlw	0
  7694  0009E8  6EDF               	movwf	indf2,c
  7695  0009EA  4A20               	infsnz	process_data_parameterize@inx,f,c
  7696  0009EC  2A21               	incf	process_data_parameterize@inx+1,f,c
  7697  0009EE  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  7698  0009F0  D7EA               	goto	l243
  7699  0009F2  5021               	movf	process_data_parameterize@inx+1,w,c
  7700  0009F4  E168               	bnz	l3837
  7701  0009F6  D7E1               	goto	L6
  7702  0009F8                     
  7703                           ;SlaveComm.c: 312: parameter_position = 0;
  7704  0009F8  0E00               	movlw	0
  7705  0009FA  6E23               	movwf	process_data_parameterize@parameter_position,c
  7706                           
  7707                           ;SlaveComm.c: 313: parameter_index++;
  7708  0009FC  2A22               	incf	process_data_parameterize@parameter_index,f,c
  7709                           
  7710                           ;SlaveComm.c: 315: if( parameter_index >= 5 )
  7711  0009FE  0E04               	movlw	4
  7712  000A00  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  7713  000A02  D05A               	goto	l249
  7714                           
  7715                           ;SlaveComm.c: 316: {
  7716                           ;SlaveComm.c: 319: parameter_index = (5 - 1);
  7717  000A04  0E04               	movlw	4
  7718  000A06  6E22               	movwf	process_data_parameterize@parameter_index,c
  7719                           
  7720                           ;SlaveComm.c: 320: }
  7721                           ;SlaveComm.c: 322: break;
  7722  000A08  D057               	goto	l249
  7723  000A0A                     
  7724                           ;SlaveComm.c: 325: parameters[parameter_index][parameter_position] = buffer_to_parameter
      +                          ize->data_buffer[buffer_to_parameterize->read_position];
  7725  000A0A  EE20 F029          	lfsr	2,41
  7726  000A0E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7727  000A10  26D9               	addwf	fsr2l,f,c
  7728  000A12  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7729  000A14  22DA               	addwfc	fsr2h,f,c
  7730  000A16  50DF               	movf	indf2,w,c
  7731  000A18  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  7732  000A1A  501D               	movf	??_process_data_parameterize,w,c
  7733  000A1C  0D01               	mullw	1
  7734  000A1E  50F3               	movf	prodl,w,c
  7735  000A20  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  7736  000A22  6ED9               	movwf	fsr2l,c
  7737  000A24  50F4               	movf	prodh,w,c
  7738  000A26  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  7739  000A28  6EDA               	movwf	fsr2h,c
  7740  000A2A  5022               	movf	process_data_parameterize@parameter_index,w,c
  7741  000A2C  0D0A               	mullw	10
  7742  000A2E  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  7743  000A32  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  7744  000A36  50F3               	movf	prodl,w,c
  7745  000A38  261E               	addwf	??_process_data_parameterize+1,f,c
  7746  000A3A  50F4               	movf	prodh,w,c
  7747  000A3C  221F               	addwfc	??_process_data_parameterize+2,f,c
  7748  000A3E  5023               	movf	process_data_parameterize@parameter_position,w,c
  7749  000A40  0D01               	mullw	1
  7750  000A42  50F3               	movf	prodl,w,c
  7751  000A44  241E               	addwf	??_process_data_parameterize+1,w,c
  7752  000A46  6EE1               	movwf	fsr1l,c
  7753  000A48  50F4               	movf	prodh,w,c
  7754  000A4A  201F               	addwfc	??_process_data_parameterize+2,w,c
  7755  000A4C  6EE2               	movwf	fsr1h,c
  7756  000A4E  CFDF FFE7          	movff	indf2,indf1
  7757                           
  7758                           ;SlaveComm.c: 326: parameter_position++;
  7759  000A52  2A23               	incf	process_data_parameterize@parameter_position,f,c
  7760                           
  7761                           ;SlaveComm.c: 327: if( parameter_position >= 10 )
  7762  000A54  0E09               	movlw	9
  7763  000A56  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  7764  000A58  D002               	goto	l253
  7765                           
  7766                           ;SlaveComm.c: 328: {
  7767                           ;SlaveComm.c: 331: parameter_position = (10 - 1);
  7768  000A5A  0E09               	movlw	9
  7769  000A5C  6E23               	movwf	process_data_parameterize@parameter_position,c
  7770  000A5E                     l253:
  7771                           
  7772                           ;SlaveComm.c: 332: }
  7773                           ;SlaveComm.c: 335: parameters[parameter_index][parameter_position] = '\0';
  7774  000A5E  5022               	movf	process_data_parameterize@parameter_index,w,c
  7775  000A60  0D0A               	mullw	10
  7776  000A62  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  7777  000A66  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  7778  000A6A  50F3               	movf	prodl,w,c
  7779  000A6C  261D               	addwf	??_process_data_parameterize,f,c
  7780  000A6E  50F4               	movf	prodh,w,c
  7781  000A70  221E               	addwfc	??_process_data_parameterize+1,f,c
  7782  000A72  5023               	movf	process_data_parameterize@parameter_position,w,c
  7783  000A74  0D01               	mullw	1
  7784  000A76  50F3               	movf	prodl,w,c
  7785  000A78  241D               	addwf	??_process_data_parameterize,w,c
  7786  000A7A  6ED9               	movwf	fsr2l,c
  7787  000A7C  50F4               	movf	prodh,w,c
  7788  000A7E  201E               	addwfc	??_process_data_parameterize+1,w,c
  7789  000A80  6EDA               	movwf	fsr2h,c
  7790  000A82  0E00               	movlw	0
  7791  000A84  6EDF               	movwf	indf2,c
  7792                           
  7793                           ;SlaveComm.c: 337: }
  7794                           
  7795                           ;SlaveComm.c: 336: break;
  7796  000A86  D018               	goto	l249
  7797  000A88  EE20 F029          	lfsr	2,41
  7798  000A8C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7799  000A8E  26D9               	addwf	fsr2l,f,c
  7800  000A90  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7801  000A92  22DA               	addwfc	fsr2h,f,c
  7802  000A94  50DF               	movf	indf2,w,c
  7803  000A96  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  7804  000A98  501D               	movf	??_process_data_parameterize,w,c
  7805  000A9A  0D01               	mullw	1
  7806  000A9C  50F3               	movf	prodl,w,c
  7807  000A9E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  7808  000AA0  6ED9               	movwf	fsr2l,c
  7809  000AA2  50F4               	movf	prodh,w,c
  7810  000AA4  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  7811  000AA6  6EDA               	movwf	fsr2h,c
  7812  000AA8  50DF               	movf	indf2,w,c
  7813                           
  7814                           ; Switch size 1, requested type "space"
  7815                           ; Number of cases is 2, Range of values is 33 to 59
  7816                           ; switch strategies available:
  7817                           ; Name         Instructions Cycles
  7818                           ; simple_byte            7     4 (average)
  7819                           ;	Chosen strategy is simple_byte
  7820  000AAA  0A21               	xorlw	33	; case 33
  7821  000AAC  B4D8               	btfsc	status,2,c
  7822  000AAE  D004               	goto	l249
  7823  000AB0  0A1A               	xorlw	26	; case 59
  7824  000AB2  B4D8               	btfsc	status,2,c
  7825  000AB4  D7A1               	goto	l250
  7826  000AB6  D7A9               	goto	l252
  7827  000AB8                     l249:
  7828                           
  7829                           ;SlaveComm.c: 339: buffer_to_parameterize->read_position++;
  7830  000AB8  EE20 F029          	lfsr	2,41
  7831  000ABC  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7832  000ABE  26D9               	addwf	fsr2l,f,c
  7833  000AC0  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7834  000AC2  22DA               	addwfc	fsr2h,f,c
  7835  000AC4  2ADF               	incf	indf2,f,c
  7836  000AC6                     l245:
  7837  000AC6                     l3837:
  7838  000AC6  EE20 F029          	lfsr	2,41
  7839  000ACA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7840  000ACC  26D9               	addwf	fsr2l,f,c
  7841  000ACE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7842  000AD0  22DA               	addwfc	fsr2h,f,c
  7843  000AD2  50DF               	movf	indf2,w,c
  7844  000AD4  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  7845  000AD6  501D               	movf	??_process_data_parameterize,w,c
  7846  000AD8  0D01               	mullw	1
  7847  000ADA  50F3               	movf	prodl,w,c
  7848  000ADC  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  7849  000ADE  6ED9               	movwf	fsr2l,c
  7850  000AE0  50F4               	movf	prodh,w,c
  7851  000AE2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  7852  000AE4  6EDA               	movwf	fsr2h,c
  7853  000AE6  0E2A               	movlw	42
  7854  000AE8  18DE               	xorwf	postinc2,w,c
  7855  000AEA  B4D8               	btfsc	status,2,c
  7856  000AEC  0012               	return	
  7857  000AEE  EE20 F029          	lfsr	2,41
  7858  000AF2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7859  000AF4  26D9               	addwf	fsr2l,f,c
  7860  000AF6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7861  000AF8  22DA               	addwfc	fsr2h,f,c
  7862  000AFA  0E28               	movlw	40
  7863  000AFC  60DF               	cpfslt	indf2,c
  7864  000AFE  0012               	return	
  7865  000B00  EE20 F028          	lfsr	2,40
  7866  000B04  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7867  000B06  26D9               	addwf	fsr2l,f,c
  7868  000B08  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7869  000B0A  22DA               	addwfc	fsr2h,f,c
  7870  000B0C  EE10 F029          	lfsr	1,41
  7871  000B10  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7872  000B12  26E1               	addwf	fsr1l,f,c
  7873  000B14  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7874  000B16  22E2               	addwfc	fsr1h,f,c
  7875  000B18  50DE               	movf	postinc2,w,c
  7876  000B1A  18E6               	xorwf	postinc1,w,c
  7877  000B1C  B4D8               	btfsc	status,2,c
  7878  000B1E  0012               	return	
  7879  000B20  D7B3               	goto	l247
  7880  000B22                     __end_of_process_data_parameterize:
  7881                           	opt stack 0
  7882                           tblptru	equ	0xFF8
  7883                           tblptrh	equ	0xFF7
  7884                           tblptrl	equ	0xFF6
  7885                           tablat	equ	0xFF5
  7886                           prodh	equ	0xFF4
  7887                           prodl	equ	0xFF3
  7888                           intcon	equ	0xFF2
  7889                           intcon2	equ	0xFF1
  7890                           intcon3	equ	0xFF0
  7891                           postinc0	equ	0xFEE
  7892                           wreg	equ	0xFE8
  7893                           indf1	equ	0xFE7
  7894                           postinc1	equ	0xFE6
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           indf2	equ	0xFDF
  7898                           postinc2	equ	0xFDE
  7899                           postdec2	equ	0xFDD
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function ___wmul *****************
  7905 ;; Defined at:
  7906 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  multiplier      2   18[COMRAM] unsigned int 
  7909 ;;  multiplicand    2   20[COMRAM] unsigned int 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  product         2   22[COMRAM] unsigned int 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2   18[COMRAM] unsigned int 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0, prodl, prodh
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7921 ;;      Params:         4       0       0       0       0       0       0
  7922 ;;      Locals:         2       0       0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0
  7924 ;;      Totals:         6       0       0       0       0       0       0
  7925 ;;Total ram usage:        6 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    1
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_process_data_parameterize
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text57
  7936  001E76                     __ptext57:
  7937                           	opt stack 0
  7938  001E76                     ___wmul:
  7939                           	opt stack 25
  7940                           
  7941                           ;incstack = 0
  7942  001E76  5013               	movf	___wmul@multiplier,w,c
  7943  001E78  0215               	mulwf	___wmul@multiplicand,c
  7944  001E7A  CFF3 F017          	movff	prodl,___wmul@product
  7945  001E7E  CFF4 F018          	movff	prodh,___wmul@product+1
  7946  001E82  5013               	movf	___wmul@multiplier,w,c
  7947  001E84  0216               	mulwf	___wmul@multiplicand+1,c
  7948  001E86  50F3               	movf	prodl,w,c
  7949  001E88  2618               	addwf	___wmul@product+1,f,c
  7950  001E8A  5014               	movf	___wmul@multiplier+1,w,c
  7951  001E8C  0215               	mulwf	___wmul@multiplicand,c
  7952  001E8E  50F3               	movf	prodl,w,c
  7953  001E90  2618               	addwf	___wmul@product+1,f,c
  7954  001E92  C017  F013         	movff	___wmul@product,?___wmul
  7955  001E96  C018  F014         	movff	___wmul@product+1,?___wmul+1
  7956  001E9A  0012               	return	
  7957  001E9C                     __end_of___wmul:
  7958                           	opt stack 0
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           intcon	equ	0xFF2
  7966                           intcon2	equ	0xFF1
  7967                           intcon3	equ	0xFF0
  7968                           postinc0	equ	0xFEE
  7969                           wreg	equ	0xFE8
  7970                           indf1	equ	0xFE7
  7971                           postinc1	equ	0xFE6
  7972                           fsr1h	equ	0xFE2
  7973                           fsr1l	equ	0xFE1
  7974                           indf2	equ	0xFDF
  7975                           postinc2	equ	0xFDE
  7976                           postdec2	equ	0xFDD
  7977                           fsr2h	equ	0xFDA
  7978                           fsr2l	equ	0xFD9
  7979                           status	equ	0xFD8
  7980                           
  7981 ;; *************** function _SPISlaveInit *****************
  7982 ;; Defined at:
  7983 ;;		line 686 in file "SlaveComm.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7997 ;;      Params:         0       0       0       0       0       0       0
  7998 ;;      Locals:         0       0       0       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0
  8000 ;;      Totals:         0       0       0       0       0       0       0
  8001 ;;Total ram usage:        0 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_communications
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text58
  8012  001BD2                     __ptext58:
  8013                           	opt stack 0
  8014  001BD2                     _SPISlaveInit:
  8015                           	opt stack 27
  8016                           
  8017                           ;SlaveComm.c: 689: TRISAbits.TRISA0 = 0;
  8018                           
  8019                           ;incstack = 0
  8020  001BD2  9092               	bcf	3986,0,c	;volatile
  8021                           
  8022                           ;SlaveComm.c: 690: TRISAbits.TRISA1 = 1;
  8023  001BD4  8292               	bsf	3986,1,c	;volatile
  8024                           
  8025                           ;SlaveComm.c: 692: TRISCbits.TRISC3 = 0;
  8026  001BD6  9694               	bcf	3988,3,c	;volatile
  8027                           
  8028                           ;SlaveComm.c: 693: TRISCbits.TRISC5 = 0;
  8029  001BD8  9A94               	bcf	3988,5,c	;volatile
  8030                           
  8031                           ;SlaveComm.c: 694: TRISCbits.TRISC6 = 0;
  8032  001BDA  9C94               	bcf	3988,6,c	;volatile
  8033                           
  8034                           ;SlaveComm.c: 695: TRISCbits.TRISC7 = 0;
  8035  001BDC  9E94               	bcf	3988,7,c	;volatile
  8036                           
  8037                           ;SlaveComm.c: 696: ANSELAbits.ANSA1 = 0b0;
  8038  001BDE  010F               	movlb	15	; () banked
  8039  001BE0  9338               	bcf	56,1,b	;volatile
  8040                           
  8041                           ;SlaveComm.c: 698: LATCbits.LATC6 = 1;
  8042  001BE2  8C8B               	bsf	3979,6,c	;volatile
  8043                           
  8044                           ;SlaveComm.c: 699: LATCbits.LATC3 = 1;
  8045  001BE4  868B               	bsf	3979,3,c	;volatile
  8046                           
  8047                           ;SlaveComm.c: 700: LATCbits.LATC5 = 1;
  8048  001BE6  8A8B               	bsf	3979,5,c	;volatile
  8049                           
  8050                           ;SlaveComm.c: 701: LATCbits.LATC7 = 1;
  8051  001BE8  8E8B               	bsf	3979,7,c	;volatile
  8052                           
  8053                           ;SlaveComm.c: 704: SSP2CON1bits.SSPEN = 0;
  8054  001BEA  9A6C               	bcf	3948,5,c	;volatile
  8055                           
  8056                           ;SlaveComm.c: 706: ANSELBbits.ANSB0 = 0b0;
  8057  001BEC  9139               	bcf	57,0,b	;volatile
  8058                           
  8059                           ;SlaveComm.c: 707: ANSELBbits.ANSB1 = 0b0;
  8060  001BEE  9339               	bcf	57,1,b	;volatile
  8061                           
  8062                           ;SlaveComm.c: 708: ANSELBbits.ANSB2 = 0b0;
  8063  001BF0  9539               	bcf	57,2,b	;volatile
  8064                           
  8065                           ;SlaveComm.c: 709: ANSELBbits.ANSB3 = 0b0;
  8066  001BF2  9739               	bcf	57,3,b	;volatile
  8067                           
  8068                           ;SlaveComm.c: 711: TRISBbits.RB0 = 0b1;
  8069  001BF4  8093               	bsf	3987,0,c	;volatile
  8070                           
  8071                           ;SlaveComm.c: 712: TRISBbits.RB1 = 0b1;
  8072  001BF6  8293               	bsf	3987,1,c	;volatile
  8073                           
  8074                           ;SlaveComm.c: 713: TRISBbits.RB2 = 0b1;
  8075  001BF8  8493               	bsf	3987,2,c	;volatile
  8076                           
  8077                           ;SlaveComm.c: 714: TRISBbits.RB3 = 0b0;
  8078  001BFA  9693               	bcf	3987,3,c	;volatile
  8079                           
  8080                           ;SlaveComm.c: 716: SSP2STATbits.SMP = 0;
  8081  001BFC  9E6D               	bcf	3949,7,c	;volatile
  8082                           
  8083                           ;SlaveComm.c: 717: SSP2STATbits.CKE = 1;
  8084  001BFE  8C6D               	bsf	3949,6,c	;volatile
  8085                           
  8086                           ;SlaveComm.c: 719: SSP2CON1bits.WCOL = 0;
  8087  001C00  9E6C               	bcf	3948,7,c	;volatile
  8088                           
  8089                           ;SlaveComm.c: 720: SSP2CON1bits.SSPOV = 0;
  8090  001C02  9C6C               	bcf	3948,6,c	;volatile
  8091                           
  8092                           ;SlaveComm.c: 721: SSP2CON1bits.SSPEN = 0;
  8093  001C04  9A6C               	bcf	3948,5,c	;volatile
  8094                           
  8095                           ;SlaveComm.c: 722: SSP2CON1bits.CKP = 1;
  8096  001C06  886C               	bsf	3948,4,c	;volatile
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;SlaveComm.c: 723: SSP2CON1bits.SSPM = 0b0100;
  8100  001C08  506C               	movf	3948,w,c	;volatile
  8101  001C0A  0BF0               	andlw	-16
  8102  001C0C  0904               	iorlw	4
  8103  001C0E  6E6C               	movwf	3948,c	;volatile
  8104                           
  8105                           ;SlaveComm.c: 726: SSP2CON3 = 0x00;
  8106  001C10  0E00               	movlw	0
  8107  001C12  6E69               	movwf	3945,c	;volatile
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;SlaveComm.c: 727: SSP2CON3bits.BOEN = 0b0;
  8111  001C14  9869               	bcf	3945,4,c	;volatile
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;SlaveComm.c: 729: SSP2CON1bits.SSPEN = 1;
  8115  001C16  8A6C               	bsf	3948,5,c	;volatile
  8116  001C18  0012               	return	
  8117  001C1A                     __end_of_SPISlaveInit:
  8118                           	opt stack 0
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           intcon2	equ	0xFF1
  8127                           intcon3	equ	0xFF0
  8128                           postinc0	equ	0xFEE
  8129                           wreg	equ	0xFE8
  8130                           indf1	equ	0xFE7
  8131                           postinc1	equ	0xFE6
  8132                           fsr1h	equ	0xFE2
  8133                           fsr1l	equ	0xFE1
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           fsr2h	equ	0xFDA
  8138                           fsr2l	equ	0xFD9
  8139                           status	equ	0xFD8
  8140                           
  8141 ;; *************** function _Timer0_ISR *****************
  8142 ;; Defined at:
  8143 ;;		line 80 in file "Timer.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;		None
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;		None
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      void 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8157 ;;      Params:         0       0       0       0       0       0       0
  8158 ;;      Locals:         0       0       0       0       0       0       0
  8159 ;;      Temps:         18       0       0       0       0       0       0
  8160 ;;      Totals:        18       0       0       0       0       0       0
  8161 ;;Total ram usage:       18 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		Interrupt level 2
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	intcode
  8171  000008                     __pintcode:
  8172                           	opt stack 0
  8173  000008                     _Timer0_ISR:
  8174                           	opt stack 20
  8175                           
  8176                           ; BSR set to: 15
  8177                           ;incstack = 0
  8178  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8179  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  8180  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  8181  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  8182  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  8183  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  8184  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  8185  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  8186  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  8187  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  8188  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  8189  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  8190  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  8191  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  8192  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  8193  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  8194  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  8195  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  8196  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  8197                           
  8198                           ;Timer.c: 82: INTCONbits.TMR0IF = 0;
  8199  000052  94F2               	bcf	intcon,2,c	;volatile
  8200                           
  8201                           ;Timer.c: 84: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  8202  000054  0EFC               	movlw	252
  8203  000056  6ED7               	movwf	4055,c	;volatile
  8204                           
  8205                           ;Timer.c: 85: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  8206  000058  0E18               	movlw	24
  8207  00005A  6ED6               	movwf	4054,c	;volatile
  8208                           
  8209                           ;Timer.c: 87: timerCount_ms[0]++;
  8210  00005C  0E01               	movlw	1
  8211  00005E  0100               	movlb	0	; () banked
  8212  000060  2760               	addwf	_timerCount_ms& (0+255),f,b	;volatile
  8213  000062  0E00               	movlw	0
  8214  000064  2361               	addwfc	(_timerCount_ms+1)& (0+255),f,b	;volatile
  8215  000066  2362               	addwfc	(_timerCount_ms+2)& (0+255),f,b	;volatile
  8216  000068  2363               	addwfc	(_timerCount_ms+3)& (0+255),f,b	;volatile
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;Timer.c: 88: timerCount_ms[1]++;
  8220  00006A  0E01               	movlw	1
  8221  00006C  2764               	addwf	(_timerCount_ms+4)& (0+255),f,b	;volatile
  8222  00006E  0E00               	movlw	0
  8223  000070  2365               	addwfc	(_timerCount_ms+5)& (0+255),f,b	;volatile
  8224  000072  2366               	addwfc	(_timerCount_ms+6)& (0+255),f,b	;volatile
  8225  000074  2367               	addwfc	(_timerCount_ms+7)& (0+255),f,b	;volatile
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;Timer.c: 89: timerCount_ms[2]++;
  8229  000076  0E01               	movlw	1
  8230  000078  2768               	addwf	(_timerCount_ms+8)& (0+255),f,b	;volatile
  8231  00007A  0E00               	movlw	0
  8232  00007C  2369               	addwfc	(_timerCount_ms+9)& (0+255),f,b	;volatile
  8233  00007E  236A               	addwfc	(_timerCount_ms+10)& (0+255),f,b	;volatile
  8234  000080  236B               	addwfc	(_timerCount_ms+11)& (0+255),f,b	;volatile
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;Timer.c: 90: timerCount_ms[3]++;
  8238  000082  0E01               	movlw	1
  8239  000084  276C               	addwf	(_timerCount_ms+12)& (0+255),f,b	;volatile
  8240  000086  0E00               	movlw	0
  8241  000088  236D               	addwfc	(_timerCount_ms+13)& (0+255),f,b	;volatile
  8242  00008A  236E               	addwfc	(_timerCount_ms+14)& (0+255),f,b	;volatile
  8243  00008C  236F               	addwfc	(_timerCount_ms+15)& (0+255),f,b	;volatile
  8244                           
  8245                           ; BSR set to: 0
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;Timer.c: 92: return;
  8249  00008E  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  8250  000092  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  8251  000096  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  8252  00009A  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  8253  00009E  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  8254  0000A2  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  8255  0000A6  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  8256  0000AA  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  8257  0000AE  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  8258  0000B2  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  8259  0000B6  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  8260  0000BA  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  8261  0000BE  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  8262  0000C2  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  8263  0000C6  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  8264  0000CA  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  8265  0000CE  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  8266  0000D2  C001  FFFA         	movff	??_Timer0_ISR,pclath
  8267  0000D6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8268  0000D8  0011               	retfie		f
  8269  0000DA                     __end_of_Timer0_ISR:
  8270                           	opt stack 0
  8271                           pclatu	equ	0xFFB
  8272                           pclath	equ	0xFFA
  8273                           tblptru	equ	0xFF8
  8274                           tblptrh	equ	0xFF7
  8275                           tblptrl	equ	0xFF6
  8276                           tablat	equ	0xFF5
  8277                           prodh	equ	0xFF4
  8278                           prodl	equ	0xFF3
  8279                           intcon	equ	0xFF2
  8280                           intcon2	equ	0xFF1
  8281                           intcon3	equ	0xFF0
  8282                           postinc0	equ	0xFEE
  8283                           fsr0h	equ	0xFEA
  8284                           fsr0l	equ	0xFE9
  8285                           wreg	equ	0xFE8
  8286                           indf1	equ	0xFE7
  8287                           postinc1	equ	0xFE6
  8288                           fsr1h	equ	0xFE2
  8289                           fsr1l	equ	0xFE1
  8290                           indf2	equ	0xFDF
  8291                           postinc2	equ	0xFDE
  8292                           postdec2	equ	0xFDD
  8293                           fsr2h	equ	0xFDA
  8294                           fsr2l	equ	0xFD9
  8295                           status	equ	0xFD8
  8296                           pclatu	equ	0xFFB
  8297                           pclath	equ	0xFFA
  8298                           tblptru	equ	0xFF8
  8299                           tblptrh	equ	0xFF7
  8300                           tblptrl	equ	0xFF6
  8301                           tablat	equ	0xFF5
  8302                           prodh	equ	0xFF4
  8303                           prodl	equ	0xFF3
  8304                           intcon	equ	0xFF2
  8305                           intcon2	equ	0xFF1
  8306                           intcon3	equ	0xFF0
  8307                           postinc0	equ	0xFEE
  8308                           fsr0h	equ	0xFEA
  8309                           fsr0l	equ	0xFE9
  8310                           wreg	equ	0xFE8
  8311                           indf1	equ	0xFE7
  8312                           postinc1	equ	0xFE6
  8313                           fsr1h	equ	0xFE2
  8314                           fsr1l	equ	0xFE1
  8315                           indf2	equ	0xFDF
  8316                           postinc2	equ	0xFDE
  8317                           postdec2	equ	0xFDD
  8318                           fsr2h	equ	0xFDA
  8319                           fsr2l	equ	0xFD9
  8320                           status	equ	0xFD8
  8321                           
  8322                           	psect	rparam
  8323  0000                     pclatu	equ	0xFFB
  8324                           pclath	equ	0xFFA
  8325                           tblptru	equ	0xFF8
  8326                           tblptrh	equ	0xFF7
  8327                           tblptrl	equ	0xFF6
  8328                           tablat	equ	0xFF5
  8329                           prodh	equ	0xFF4
  8330                           prodl	equ	0xFF3
  8331                           intcon	equ	0xFF2
  8332                           intcon2	equ	0xFF1
  8333                           intcon3	equ	0xFF0
  8334                           postinc0	equ	0xFEE
  8335                           fsr0h	equ	0xFEA
  8336                           fsr0l	equ	0xFE9
  8337                           wreg	equ	0xFE8
  8338                           indf1	equ	0xFE7
  8339                           postinc1	equ	0xFE6
  8340                           fsr1h	equ	0xFE2
  8341                           fsr1l	equ	0xFE1
  8342                           indf2	equ	0xFDF
  8343                           postinc2	equ	0xFDE
  8344                           postdec2	equ	0xFDD
  8345                           fsr2h	equ	0xFDA
  8346                           fsr2l	equ	0xFD9
  8347                           status	equ	0xFD8
  8348                           
  8349                           	psect	temp
  8350  00004D                     btemp:
  8351                           	opt stack 0
  8352  00004D                     	ds	1
  8353  0000                     int$flags	set	btemp
  8354  0000                     wtemp6	set	btemp+1
  8355                           pclatu	equ	0xFFB
  8356                           pclath	equ	0xFFA
  8357                           tblptru	equ	0xFF8
  8358                           tblptrh	equ	0xFF7
  8359                           tblptrl	equ	0xFF6
  8360                           tablat	equ	0xFF5
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           intcon	equ	0xFF2
  8364                           intcon2	equ	0xFF1
  8365                           intcon3	equ	0xFF0
  8366                           postinc0	equ	0xFEE
  8367                           fsr0h	equ	0xFEA
  8368                           fsr0l	equ	0xFE9
  8369                           wreg	equ	0xFE8
  8370                           indf1	equ	0xFE7
  8371                           postinc1	equ	0xFE6
  8372                           fsr1h	equ	0xFE2
  8373                           fsr1l	equ	0xFE1
  8374                           indf2	equ	0xFDF
  8375                           postinc2	equ	0xFDE
  8376                           postdec2	equ	0xFDD
  8377                           fsr2h	equ	0xFDA
  8378                           fsr2l	equ	0xFD9
  8379                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      76
    BANK0           160     45     119
    BANK1           256     51      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_29(CODE[4]), STR_28(CODE[10]), STR_27(CODE[4]), STR_26(CODE[12]), 
		 -> STR_25(CODE[5]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[4]), 
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[4]), STR_18(CODE[7]), 
		 -> STR_17(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    xsum_builder@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), STR_23(CODE[5]), STR_20(CODE[6]), STR_18(CODE[7]), 
		 -> STR_16(CODE[6]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_17(CODE[4]), 
		 -> STR_15(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _mcpUpdatePower->_powerReduction
    _powerReduction->___lldiv
    _powerCalculateWatts->___lldiv
    _ledGoToggle->_ledToggle
    _mcpInit->_mcpInitF
    _mcpInitF->_delayMS10
    _ledTestToggle->_ledToggle
    _ledToggle->_ledSet
    _ledSetAllOn->_ledSetAll
    _ledRun->_ledRunDown
    _ledRun->_ledRunUp
    _ledRunUp->_ledSetAll
    _ledRunDown->_ledSetAll
    _ledSetAllOff->_ledSetAll
    _ledSetAll->_ledSet
    _communications->_resetCommunications
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_xsum_builder
    _com_command_setEnergyUsed->_command_builder3
    _ultoa->___lldiv
    _command_builder3->_xsum_builder
    _xsum_builder->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _commRun->_communications
    _commInit->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _command_builder1->_xsum_builder
    _command_builder3->_xsum_builder

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  299693
                                             38 BANK0      7     7      0
                            ___llmod
                           _commInit
                            _commRun
                             _initIO
                _initInterruptsClear
                            _initOSC
                            _ledInit
                             _ledRun
                       _ledSetAllOff
                        _ledSetAllOn
                      _ledTestToggle
                            _mcpInit
                     _mcpUpdatePower
                      _timerGetCount
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcpUpdatePower                                       8     8      0    5516
                                             39 COMRAM     8     8      0
                        _ledGoToggle
                _powerCalculateWatts
                     _powerReduction
                      _timerGetCount
                    _timerResetCount
 ---------------------------------------------------------------------------------
 (2) _timerResetCount                                      4     2      2     326
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _powerReduction                                       8     4      4    1715
                                             31 COMRAM     8     4      4
                            ___lldiv
                      _timerGetCount
 ---------------------------------------------------------------------------------
 (1) _timerGetCount                                        6     2      4     326
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _powerCalculateWatts                                  7     2      5    1631
                                             31 COMRAM     7     2      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _ledGoToggle                                          2     0      2    1419
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (1) _mcpInit                                              0     0      0    1612
                          _delayMS10
                           _mcpInitF
 ---------------------------------------------------------------------------------
 (2) _mcpInitF                                             1     1      0     806
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (1) _ledTestToggle                                        2     0      2    1343
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (3) _ledToggle                                            8     6      2    1245
                                             24 COMRAM     8     6      2
                             _ledSet
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOn                                          0     0      0    3802
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (1) _ledRun                                               2     0      2   10918
                                             34 COMRAM     2     0      2
                         _ledRunDown
                           _ledRunUp
 ---------------------------------------------------------------------------------
 (2) _ledRunUp                                             4     2      2    5399
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledRunDown                                           4     2      2    5399
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     806
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ledInit                                              0     0      0    3802
                       _ledSetAllOff
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOff                                         0     0      0    3802
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledSetAll                                            6     0      6    3802
                                             24 COMRAM     6     0      6
                             _ledSet
 ---------------------------------------------------------------------------------
 (4) _ledSet                                               6     2      4    1000
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _commRun                                              0     0      0  133939
                     _communications
 ---------------------------------------------------------------------------------
 (1) _commInit                                             0     0      0  133939
                     _communications
 ---------------------------------------------------------------------------------
 (2) _communications                                       2     2      0  133939
                                             36 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (3) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (4) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _resetCommunications                                  4     2      2   77471
                                             58 COMRAM     2     0      2
                                             28 BANK0      2     2      0
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (4) _com_command_setVersion                               2     0      2   23682
                                             56 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (4) _com_command_setPower                                14    12      2   26682
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _receive_data                                         4     2      2     443
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (4) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _process_data                                        55    51      4   55690
                                             32 BANK0      4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (4) _process_data_parameters                              5     1      4   54003
                                             58 COMRAM     1     1      0
                                             28 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (5) _strmatch                                             7     3      4    3117
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (6) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _send_end_of_transmission                             2     0      2   22224
                                             52 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (6) _command_builder1                                     6     2      4   21743
                                             46 COMRAM     6     2      4
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (4) _com_command_setEnergyUsed                           14    12      2   26772
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    2920
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1141
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _command_builder3                                    10     2      8   23561
                                             46 COMRAM    10     2      8
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (6) _xsum_builder                                        20    16      4   12279
                                             42 COMRAM     4     0      4
                                              0 BANK0     16    16      0
           _command_builder_add_char
         _command_builder_add_string
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2226
                                             34 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1723
                                             25 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     412
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     601
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _command_builder_add_string                          10     6      4    5635
                                             22 COMRAM    10     6      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (8) _command_builder_add_char                             4     1      3    3457
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Timer0_ISR                                         18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___llmod
   _commInit
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
   _commRun
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
   _initIO
   _initInterruptsClear
   _initOSC
   _ledInit
     _ledSetAllOff
       _ledSetAll
         _ledSet
   _ledRun
     _ledRunDown
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
     _ledRunUp
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
   _ledSetAllOff
     _ledSetAll
       _ledSet
   _ledSetAllOn
     _ledSetAll
       _ledSet
   _ledTestToggle
     _ledToggle
       _ledSet
   _mcpInit
     _delayMS10
     _mcpInitF
       _delayMS10
   _mcpUpdatePower
     _ledGoToggle
       _ledToggle
         _ledSet
     _powerCalculateWatts
       ___lldiv
     _powerReduction
       ___lldiv
       _timerGetCount
     _timerGetCount
     _timerResetCount
   _timerGetCount
   _timerInit

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2D      77       4       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120       9        0.0%
DATA                 0      0     120      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Feb 09 21:23:31 2020

                                       _SPISlaveInit 1BD2                                                   l22 1ACC  
                                                 l23 1AA8                                                   l25 1AB4  
                                    ??_timerGetCount 0017                                                   l26 1AC0  
                                                 l90 1726                                                   l85 16F2  
                                                 l86 16D0                                                   l87 1716  
                                                 l88 16DE                                                   l89 16E4  
                           __size_of_timerResetCount 002A                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                       ??_ledSetAllOff 001F  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l202 124E                                                  l220 13E2  
                                                l212 12B0                                                  l204 1282  
                                                l301 14FC                                                  l221 13B0  
                                                l302 14B6                                                  l310 15C4  
                                                l214 12C2                                                  l206 1296  
                                                l231 0FF6                                                  l223 13BE  
                                                l224 13CC                                                  l208 1260  
                                                l321 0B9A                                                  l233 103A  
                                                l225 13D8                                                  l250 09F8  
                                                l243 09C6                                                  l235 1094  
                                                l307 1564                                                  l252 0A0A  
                                                l260 0678                                                  l236 10A6  
                                                l245 0AC6                                                  l253 0A5E  
                                                l317 0B9E                                                  l333 1E48  
                                                l318 0B34                                                  l270 0764  
                                                l262 0702                                                  l334 1E4C  
                                                l247 0A88                                                  l327 0C0C  
                                                l319 0B68                                                  l272 0792  
                                                l249 0AB8                                                  l329 0C44  
                                                l274 07C0                                                  l338 1EB4  
                                                l522 089E                                                  l276 07EE  
                                                l524 08A2                                                  l460 0EB2  
                                                l533 0944                                                  l278 081A  
                                                l542 1770                                                  l534 0928  
                                                l463 0F20                                                  l536 095E  
                                                l297 199C                                                  l537 0978  
                                                l529 095A                                                  l458 0E6E  
                                                l549 145A                                                  l583 1D5C  
                                                l752 0D84                                                  l584 1D4A  
                                                l930 1F0E                                                  l755 0DE2  
                                                l771 160A                                                  l756 0D8E  
                                                l940 12D2                                                  l772 1602  
                                                l598 1A0E                                                  l758 0E26  
                                                l942 130C                                                  l599 1A22  
                                                l943 134A                                                  l775 162A  
                                                l936 1C3E                                                  l776 1634  
                                                l768 15DC                                                  l777 1642  
                                                l769 15EC                                                  l970 167A  
                                                l971 166E                                                  l980 183A  
                                                l981 182E                                                  l974 16AE  
                                                l975 16BC                                                  l984 1862  
                                                l985 1870                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                      ?_powerReduction 0020  
                                                wreg 000FE8                              __size_of_mcpUpdatePower 0184  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 00C6  
                                               l1023 0C5E                                                 l1041 1A92  
                                               l1025 0CB6                                                 l1042 1A9C  
                                               l1026 0D20                                                 l1051 1C8A  
                                               l1052 1C94                                                 l1037 1A72  
                                               l1038 1A6A                                                 l1047 1C72  
                                               l1048 1C6A                                                 l4051 0928  
                                               l4123 0EA2                                                 l3837 0AC6  
                                               l3981 1446                                                 STR_1 064A  
                                               STR_2 064E                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 062F                                                 STR_6 0634  
                                               STR_7 0624                                                 STR_8 0617  
                                               STR_9 061E                                                 u2210 1C76  
                                               u3007 17C4                                                 u2320 167E  
                                               u3017 17D6                                                 u2410 0BD6  
                                               u3027 17EC                                                 u2180 1A76  
                                               u3037 1802                                                 u2270 14EA  
                                               u2350 183E                                                 u1535 1AB0  
                                               u3047 1D50                                                 u2280 1528  
                                               u1536 1AB2                                                 u3057 1378  
                                               u1545 1ABC                                                 u2610 09C4  
                                               u2530 1DCC                                                 u1546 1ABE  
                                               u1555 1AC8                                                 u2540 1DCE  
                                               u1556 1ACA                                                 u2277 14E0  
                                               _IPR1 000F9F                                                 _IPR2 000FA2  
                                               u2287 151E                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1780 16EE  
                                               u2900 08AA                                                 u1781 16E8  
                                               u1950 160E                                                 u1768 16D6  
                                               u2850 1446                                                 u2950 0EA2  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               u2987 0E7A                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 u2997 0E90  
                                               _PIR5 000F7E                                          main@oneShot 007C  
                                               _atol 0D44                                                 _main 0E38  
                                               _itoa 1C1A                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                               _utoa 12CA                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00DA  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 00CF  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                    mcpUpdatePower@timerHFoutLast_ms 0070                                 __end_of_xsum_builder 1948  
                                     _communications 1226                                      ??_ledTestToggle 0023  
                                              ?_atol 001F                                                ?_main 0001  
                                              ?_itoa 0023                                      __end_of___awdiv 164C  
                                              STR_10 0639                                                STR_11 060D  
                                              STR_12 064A                                                STR_21 063E  
                                              STR_14 062A                                                STR_15 064E  
                                              STR_16 0624                                                STR_24 0642  
                                              STR_17 064E                                                STR_18 0617  
                                              STR_27 064E                                                STR_28 060D  
                                              STR_29 0646                                      __end_of___lldiv 16CE  
                                              ?_utoa 001A                                      ___awdiv@divisor 0015  
                                    __end_of___llmod 1882                                       __CFG_DEBUG$OFF 000000  
                                    __end_of___lwdiv 1AA6                                      __end_of___lwmod 1C9E  
                                  ?_command_builder1 002F                                    ?_command_builder3 002F  
                                    ___awdiv@counter 0017                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 1AF2  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0033                                   ??_command_builder3 0037  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                      __end_of_ledInit 1F8A  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                                    __end_of_commRun 1F92                   process_data_parameters@send_buffer 00C8  
                          powerReduction@countReduce 0041                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                    __end_of_mcpInit 1E28                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1F48                                      __end_of_isdigit 1F16  
                                 __CFG_MCLRE$EXTMCLR 000000                                                atol@a 0028  
                                              atol@c 002C                                                atol@s 001F  
                                              _ultoa 0C4E                                                pclath 000FFA  
                                 main@timerHeartbeat 00D1                                                tablat 000FF5  
                                              utoa@c 0022                                                utoa@v 0020  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0C4E                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 0039                                 ?_initInterruptsClear 0001  
                      command_builder_add_string@inx 001F                                      __initialization 1CDC  
                                       __end_of_atol 0E38                                         __end_of_main 0F28  
                                       __end_of_itoa 1C5C                               __end_of_communications 12CA  
                                       __end_of_utoa 136E                               _com_command_setVersion 1E50  
                __size_of_command_builder_add_string 0094                                     _SPI_receive_data 1E28  
                         powerReduction@timerLast_ms 0020                         command_builder_add_char@data 0015  
                                             ??_atol 0023                                               ??_main 00D0  
                                ledRunUp@ledRunDelay 001F                                               ??_itoa 0029  
                                      _SPI_send_data 1E9C                                               ??_utoa 0020  
                                      __activetblptr 000002                              _process_data_parameters 0654  
                                  ??_timerResetCount 0015                                 __size_of_ledGoToggle 0002  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                   ___awdiv@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                               __size_of_ledSetAllOn 001E                                 __end_of_ledSetAllOff 1EF8  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                     __end_of_commInit 1F9A  
                                   __end_of_ledRunUp 1168                         powerCalculateWatts@calcWatts 0025  
                                   __end_of_mcpInitF 181C                                               ___lmul 19FE  
                                             ___wmul 1E76                                            ??___awdiv 0017  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                          ??___lwdiv 0017                                               _ledSet 1AA6  
                                          ??___lwmod 0017                                               _ledRun 1F16  
                                             _initIO 1F5E                                               clear_0 1CE2  
                                             clear_1 1CEE                                               clear_2 1CFA  
                                   ___awdiv@quotient 0019                         powerReduction@timerReduce_ms 0024  
                                     ?_SPI_send_data 0001                                            ??_ledInit 001F  
                                          ??_commRun 003D                           ?_com_command_setEnergyUsed 0039  
                                          ??_mcpInit 0019                                            ??_initOSC 0013  
                          _process_data_parameterize 09A2                                               itoa@cp 0029  
                                          ??_isdigit 0013                                       _mcpUpdatePower 081E  
                                  ledToggle@getValue 001F                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 00BA                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1DD4  
                                   xsum_builder@xsum 002D                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 1D00  
                                  ledToggle@setValue 001D                      com_command_setPower@send_buffer 0039  
                            timerGetCount@timerIndex 0013                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                    ledRunUp@delay10ms 0021  
                              __size_of_xsum_builder 0062                                       __pcstackCOMRAM 0001  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                   ??_powerReduction 0024                                        __end_of_ultoa 0D44  
                          ??_process_data_parameters 003B                         communications@receive_buffer 0133  
                             __end_of_mcpUpdatePower 09A2                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 1538                           _command_builder_add_string 14A4  
                                 __size_of_ledSetAll 003E                                   __size_of_ledToggle 0076  
                                    ledToggle@ledNum 0019                                              ??_ultoa 0028  
                                         __pbssBANK0 0060                                           __pbssBANK1 0133  
                                     ??_receive_data 0018                                         _xsum_builder 18E6  
                                    __CFG_PLLCFG$OFF 000000                                         strcmp2@match 001A  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                       __size_of_powerCalculateWatts 006C                                              ?___lmul 0013  
                               command_builder1@xsum 0033                                              ?___wmul 0013  
                               command_builder3@xsum 0037                                   __CFG_CCP3MX$PORTB5 000000  
                                            ?_ledSet 0013                                      ??_SPI_send_data 0013  
                                            ?_ledRun 0023                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 003B  
         communications@end_of_transmission_received 007F                                       ___lmul@product 001B  
                              __end_of_timerGetCount 1D40                                      ?_mcpUpdatePower 0001  
                        __end_of_resetCommunications 140A                                   __size_of_timerInit 0064  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                                         _ledRunDown 1168                         __end_of_com_command_setPower 1B88  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1F48  
                                            _SSP2BUF 000F6F                                __size_of_ledSetAllOff 001E  
                                          ?_commInit 0001                                            ?_ledRunUp 001F  
                           _command_builder_add_char 1948                                            ?_mcpInitF 0001  
                                  __end_of_delayMS10 1D72                      __end_of_process_data_parameters 081E  
                           __end_of_SPI_receive_data 1E50                            __size_of_command_builder1 005A  
                          __size_of_command_builder3 00C2                                  ledRunDown@delay10ms 0021  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0039  
                                            __Lparam 0000                                    __end_of_ledSetAll 1CDC  
                                  __end_of_ledToggle 1744                                      _timerResetCount 1DD4  
                                            ___awdiv 15C8                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 164C  
                                    __size_of___wmul 0026                                              ___llmod 181C  
                                            ___lwdiv 1A54                                              ___lwmod 1C5C  
                                       __psmallconst 0600                                      __size_of_ledSet 004C  
                                    __size_of_ledRun 001A                                 SPI_receive_data@data 0013  
                                    __size_of_initIO 0012                                              __pcinit 1CDC  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 0E38                                              __ptext1 1882  
                                            __ptext2 081E                                              __ptext3 1DD4  
                                            __ptext4 140A                                              __ptext5 1D0E  
                                            __ptext6 1744                                              _ledInit 1F7E  
                                            __ptext7 1F9A                                              __ptext8 1DFE  
                                            __ptext9 17B0                                              _commRun 1F8A  
                                          _T0CONbits 000FD5                                         _ledSetAllOff 1EDA  
                                            _mcpInit 1DFE                                              _initOSC 1F30  
                              __end_of_ledTestToggle 1F7E                                              _isdigit 1EF8  
                                __size_of_Timer0_ISR 00D2                                           ??_commInit 003D  
                                            main@inx 00D5                                              _strcmp2 0B22  
                                         ??_ledRunUp 0021                                 end_of_initialization 1D00  
                                         ??_mcpInitF 0018                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 15C8                                              itoa@buf 0023  
                                            itoa@val 0025                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1E76                                     ??_communications 003D  
                                  __end_of_timerInit 18E6                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec2 000FDD                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                                            utoa@buf 001A                                              utoa@val 001C  
                              receive_data@my_status 004B                                 __end_of_receive_data 10AA  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                                      ??_ledGoToggle 0023                      communications@last_state_active 007D  
                        ??_com_command_setEnergyUsed 003B                                        ?_process_data 00CA  
                                 ledSetAll@led1Value 0019                                   ledSetAll@led2Value 001B  
                                 ledSetAll@led3Value 001D                                          ?_ledRunDown 001F  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                                        ??_ledSetAllOn 001F  
                         process_data@receive_buffer 00CA                          __end_of_initInterruptsClear 1B3E  
                  __end_of_process_data_parameterize 0B22                              __end_of_timerResetCount 1DFE  
                               _com_command_setPower 1B3E                  communications@receive_current_state 007E  
                                      ?_SPISlaveInit 0001                                       __end_of___lmul 1A54  
                                     __end_of___wmul 1E9C                                       __end_of_ledSet 1AF2  
                                     __end_of_ledRun 1F30                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 1F70                                       ??_process_data 003C  
                        ?_command_builder_add_string 0017                                  start_initialization 1CDC  
                                _powerCalculateWatts 1744                                  __end_of_ledGoToggle 1F9C  
                       resetCommunications@commState 0047                                     _command_builder1 19A4  
                                   _command_builder3 0F28                            _com_command_setEnergyUsed 1B88  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0039                                  __end_of_ledSetAllOn 1EDA  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 0039                                  __size_of_ledRunDown 00BE  
                               ?_powerCalculateWatts 0020                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                     ??_mcpUpdatePower 0028  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0035  
                                           ??_ledSet 0017                                             ??_ledRun 0025  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0037  
                         ??_command_builder_add_char 0016                                          __pbssCOMRAM 003D  
                                      __pcstackBANK0 00AA                                        __pcstackBANK1 0100  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00DA  
                                       _isdigit$2409 0014                                    __size_of_commInit 0008  
                                  __size_of_ledRunUp 00BE                                    __size_of_mcpInitF 006C  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 1D40                                     ?_timerResetCount 0013  
                      com_command_setEnergyUsed@temp 00BA                             powerCalculateWatts@outHF 0024  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                                   ___lwdiv@dividend 0013                                ??_powerCalculateWatts 0025  
                              command_builder1@data1 0031                          command_builder1@send_buffer 002F  
                           ?_process_data_parameters 00C6                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0031  
                              command_builder3@data2 0033                                command_builder3@data3 0035  
                                           ?___awdiv 0013                                             ?___lldiv 0013  
                              ledRunDown@ledRunDelay 001F                                             ?___llmod 0013  
                                           ?___lwdiv 0013                                             ?___lwmod 0013  
                                          _ledSetAll 1C9E                                            _ledToggle 16CE  
                         mcpUpdatePower@meterWattsHF 0045                                __end_of_SPI_send_data 1EBC  
                         mcpUpdatePower@meterWattsLF 0043                                             ?_ledInit 0001  
                                           ?_commRun 0001                                             ?_mcpInit 0001  
                                           ?_initOSC 0001                                          __smallconst 0600  
                                        _ledGoToggle 1F9A                       resetCommunications@send_buffer 003B  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                            xsum_builder@send_buffer 002B                           mcpUpdatePower@oneShotHFout 004A  
                                  send_data@send_end 0019                           mcpUpdatePower@oneShotLFout 0049  
                            __size_of_powerReduction 009A                                     ___lwdiv@quotient 0018  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009C  
                                        _ledSetAllOn 1EBC                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                  process_data_parameterize@parameters 0019  
                                       _receive_data 0FEA                                       ___wmul@product 0017  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                             __size_of_timerGetCount 0032                                           ?_delayMS10 0013  
                               __end_of_process_data 1DA4                                            _send_data 1538  
                             ??_com_command_setPower 003B                    process_data_parameters@parameters 00C6  
                                _meterEnergyUsedPart 0074                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                            _timerInit 1882  
                                           _SSP2CON3 000F69                                           ?_ledSetAll 0019  
                                         ?_ledToggle 0019                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                       ??_ledRunDown 0021                                    ledGoToggle@ledNum 0021  
                                  ledRun@ledRunDelay 0023                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1C1A             process_data@end_of_transmission_received 0132  
                                         ?_send_data 0015                                             __Hrparam 0000  
                             __size_of_ledTestToggle 000E                          mcpUpdatePower@timerHFout_ms 002C  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                                 __end_of_ledRunDown 1226                          command_builder3@send_buffer 002F  
                                  __CFG_P2BMX$PORTB5 000000                                           ?_timerInit 0001  
                        mcpUpdatePower@timerLFout_ms 0028                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___awdiv 0084                     __end_of_send_end_of_transmission 1F5E  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 19A4                             __end_of_command_builder1 19FE  
                           __end_of_command_builder3 0FEA                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                        _timerGetCount 1D0E  
                                   __size_of_ledInit 000C                                     __size_of_commRun 0008  
                                   __size_of_mcpInit 002A                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                      ___lwdiv@divisor 0015  
                                      _timerCount_ms 0060                                      ___lwdiv@counter 0017  
                                           __ptext10 1F70                                             __ptext11 16CE  
                                           __ptext20 1C9E                                             __ptext12 1EBC  
                                           __ptext21 1AA6                                             __ptext13 1F16  
                                           __ptext30 136E                                             __ptext22 1F30  
                                           __ptext14 10AA                                             __ptext31 1E50  
                                           __ptext23 1AF2                                             __ptext15 1168  
                                           __ptext40 19A4                                             __ptext32 1B3E  
                                           __ptext24 1F5E                                             __ptext16 1D40  
                                           __ptext41 1B88                                             __ptext33 0FEA  
                                           __ptext25 1F8A                                             __ptext17 15C8  
                                           __ptext50 1A54                                             __ptext42 0C4E  
                                           __ptext34 1E28                                             __ptext26 1F92  
                                           __ptext18 1F7E                                             __ptext51 14A4  
                                           __ptext43 181C                                             __ptext35 1D72  
                                           __ptext27 1226                                             __ptext19 1EDA  
                                           __ptext52 1948                                             __ptext44 164C  
                                           __ptext36 0654                                             __ptext28 1538  
                                           __ptext53 0D44                                             __ptext45 0F28  
                                           __ptext37 1DA4                                             __ptext29 1E9C  
                                           __ptext54 1EF8                                             __ptext46 18E6  
                                           __ptext38 0B22                                             __ptext55 19FE  
                                           __ptext47 1C1A                                             __ptext39 1F48  
                                           __ptext56 09A2                                             __ptext48 12CA  
                                           __ptext57 1E76                                             __ptext49 1C5C  
                                           __ptext58 1BD2                                             _commInit 1F92  
                                           _ledRunUp 10AA                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                             _mcpInitF 17B0  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                      ?_xsum_builder 002B                                        __size_of_atol 00F4  
                                      __size_of_main 00F0                                        strmatch@match 0024  
                                      __size_of_itoa 0042                          powerCalculateWatts@timer_ms 0020  
                                      __size_of_utoa 00A4                                  ledTestToggle@ledNum 0021  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                       __size_of_initInterruptsClear 004C                               _meterEnergyUsed_global 003D  
                                           int$flags 004D                            timerResetCount@timerIndex 0013  
                                           atol@sign 0027                                          ??_ledSetAll 001F  
                                        ??_ledToggle 001B                    __end_of_com_command_setEnergyUsed 1BD2  
                            __size_of_communications 00A4                                             _strmatch 1DA4  
                                       _SSP2STATbits 000F6D                                       ?_timerGetCount 0013  
                            process_data@send_buffer 00CC                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                        _ledTestToggle 1F70  
                                     _powerReduction 140A                                             itoa@base 0027  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 003B                                       ??_xsum_builder 002F  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 0100                                     ___lwmod@dividend 0013  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 00CE  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                  command_builder_add_string@xsumAdd 001D                                       ledSet@setValue 0015  
                                        ??_timerInit 0013                                  _resetCommunications 136E  
                          __size_of_SPI_receive_data 0028                                             utoa@base 001E  
                                           ultoa@buf 0020                                        ?_ledSetAllOff 0001  
                                           ultoa@val 0022                                         ?_ledGoToggle 0021  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                     ?_ledTestToggle 0021                               __end_of_powerReduction 14A4  
                                   ___lldiv@quotient 001B                                         _process_data 1D72  
                                  _SPI_transmit_wait 004C                                      ___lwmod@divisor 0015  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 0080  
                                    ___lwmod@counter 0017                     __size_of_process_data_parameters 01CA  
                                  _meterWatts_global 0078                                    __CFG_T3CMX$PORTC0 000000  
                               ?_resetCommunications 003B                                         ?_ledSetAllOn 0001  
                                       ledSet@ledNum 0013                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0035                          __end_of_powerCalculateWatts 17B0  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 005C  
                          ?_command_builder_add_char 0013                                  xsum_builder@xsumBuf 00AA  
