

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Jun 10 05:19:07 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 1.41
    59                           ; Generated 25/01/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18LF25K22 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  00199C                     __pidataCOMRAM:
    95                           	opt stack 0
    96                           
    97                           ;initializer for powerPulseCheck@timerCountHFCheck
    98  00199C  0001               	dw	1
    99                           
   100                           ;initializer for powerPulseCheck@firstPulse
   101  00199E  01                 	db	1
   102                           
   103                           	psect	idataBANK0
   104  001998                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for powerPulseCheck@timerCountHFLast
   108  001998  FFFF               	dw	65535
   109  00199A  7FFF               	dw	32767
   110  0000                     _ANSELBbits	set	3897
   111  0000                     _ANSELAbits	set	3896
   112  0000                     _ANSELC	set	3898
   113  0000                     _ANSELB	set	3897
   114  0000                     _ANSELA	set	3896
   115  0000                     _SSP2CON3bits	set	3945
   116  0000                     _SSP2CON3	set	3945
   117  0000                     _SSP2BUF	set	3951
   118  0000                     _SSP2STATbits	set	3949
   119  0000                     _SSP2CON1bits	set	3948
   120  0000                     _LATCbits	set	3979
   121  0000                     _T0CONbits	set	4053
   122  0000                     _IPR5	set	3967
   123  0000                     _IPR4	set	3964
   124  0000                     _IPR3	set	4005
   125  0000                     _IPR2	set	4002
   126  0000                     _IPR1	set	3999
   127  0000                     _PIE5	set	3965
   128  0000                     _PIE4	set	3962
   129  0000                     _PIE3	set	4003
   130  0000                     _PIE2	set	4000
   131  0000                     _PIE1	set	3997
   132  0000                     _PIR5	set	3966
   133  0000                     _PIR4	set	3963
   134  0000                     _PIR3	set	4004
   135  0000                     _PIR2	set	4001
   136  0000                     _PIR1	set	3998
   137  0000                     _RCONbits	set	4048
   138  0000                     _INTCON3	set	4080
   139  0000                     _INTCON2	set	4081
   140  0000                     _INTCON	set	4082
   141  0000                     _TRISAbits	set	3986
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TRISBbits	set	3987
   144  0000                     _ADCON0bits	set	4034
   145  0000                     _OSCTUNEbits	set	3995
   146  0000                     _OSCCON2bits	set	4050
   147  0000                     _OSCCONbits	set	4051
   148  0000                     _PORTAbits	set	3968
   149  0000                     _TMR0L	set	4054
   150  0000                     _TMR0H	set	4055
   151  0000                     _INTCONbits	set	4082
   152  0000                     _PORTBbits	set	3969
   153  0000                     _LATAbits	set	3977
   154  0000                     _PORTCbits	set	3970
   155  0000                     _LATBbits	set	3978
   156                           
   157                           	psect	smallconst
   158  000600                     __psmallconst:
   159                           	opt stack 0
   160  000600  00                 	db	0
   161  000601                     STR_3:
   162  000601  43                 	db	67	;'C'
   163  000602  61                 	db	97	;'a'
   164  000603  6C                 	db	108	;'l'
   165  000604  69                 	db	105	;'i'
   166  000605  62                 	db	98	;'b'
   167  000606  72                 	db	114	;'r'
   168  000607  61                 	db	97	;'a'
   169  000608  74                 	db	116	;'t'
   170  000609  69                 	db	105	;'i'
   171  00060A  6F                 	db	111	;'o'
   172  00060B  6E                 	db	110	;'n'
   173  00060C  00                 	db	0
   174  00060D                     STR_22:
   175  00060D  50                 	db	80	;'P'
   176  00060E  53                 	db	83	;'S'
   177  00060F  56                 	db	86	;'V'
   178  000610  65                 	db	101	;'e'
   179  000611  72                 	db	114	;'r'
   180  000612  73                 	db	115	;'s'
   181  000613  69                 	db	105	;'i'
   182  000614  6F                 	db	111	;'o'
   183  000615  6E                 	db	110	;'n'
   184  000616  00                 	db	0
   185  000617                     STR_4:
   186  000617  45                 	db	69	;'E'
   187  000618  6E                 	db	110	;'n'
   188  000619  55                 	db	85	;'U'
   189  00061A  73                 	db	115	;'s'
   190  00061B  65                 	db	101	;'e'
   191  00061C  64                 	db	100	;'d'
   192  00061D  00                 	db	0
   193  00061E                     STR_20:
   194  00061E  56                 	db	86	;'V'
   195  00061F  6F                 	db	111	;'o'
   196  000620  6C                 	db	108	;'l'
   197  000621  74                 	db	116	;'t'
   198  000622  73                 	db	115	;'s'
   199  000623  00                 	db	0
   200  000624                     STR_18:
   201  000624  57                 	db	87	;'W'
   202  000625  61                 	db	97	;'a'
   203  000626  74                 	db	116	;'t'
   204  000627  74                 	db	116	;'t'
   205  000628  73                 	db	115	;'s'
   206  000629  00                 	db	0
   207  00062A                     STR_7:
   208  00062A  4C                 	db	76	;'L'
   209  00062B  45                 	db	69	;'E'
   210  00062C  44                 	db	68	;'D'
   211  00062D  42                 	db	66	;'B'
   212  00062E  00                 	db	0
   213  00062F                     STR_6:
   214  00062F  44                 	db	68	;'D'
   215  000630  61                 	db	97	;'a'
   216  000631  74                 	db	116	;'t'
   217  000632  61                 	db	97	;'a'
   218  000633  00                 	db	0
   219  000634                     STR_5:
   220  000634  52                 	db	82	;'R'
   221  000635  65                 	db	101	;'e'
   222  000636  61                 	db	97	;'a'
   223  000637  64                 	db	100	;'d'
   224  000638  00                 	db	0
   225  000639                     STR_16:
   226  000639  43                 	db	67	;'C'
   227  00063A  6F                 	db	111	;'o'
   228  00063B  6E                 	db	110	;'n'
   229  00063C  66                 	db	102	;'f'
   230  00063D  00                 	db	0
   231  00063E                     STR_21:
   232  00063E  41                 	db	65	;'A'
   233  00063F  6D                 	db	109	;'m'
   234  000640  70                 	db	112	;'p'
   235  000641  73                 	db	115	;'s'
   236  000642  00                 	db	0
   237  000643  32                 	db	50	;'2'
   238  000644  32                 	db	50	;'2'
   239  000645  32                 	db	50	;'2'
   240  000646  00                 	db	0
   241  000647  33                 	db	51	;'3'
   242  000648  33                 	db	51	;'3'
   243  000649  33                 	db	51	;'3'
   244  00064A  00                 	db	0
   245  00064B                     STR_40:
   246  00064B  34                 	db	52	;'4'
   247  00064C  34                 	db	52	;'4'
   248  00064D  34                 	db	52	;'4'
   249  00064E  00                 	db	0
   250  00064F                     STR_1:
   251  00064F  45                 	db	69	;'E'
   252  000650  4E                 	db	78	;'N'
   253  000651  44                 	db	68	;'D'
   254  000652  00                 	db	0
   255  000653                     STR_11:
   256  000653  4F                 	db	79	;'O'
   257  000654  66                 	db	102	;'f'
   258  000655  66                 	db	102	;'f'
   259  000656  00                 	db	0
   260  000657                     STR_2:
   261  000657  53                 	db	83	;'S'
   262  000658  65                 	db	101	;'e'
   263  000659  74                 	db	116	;'t'
   264  00065A  00                 	db	0
   265  00065B                     STR_8:
   266  00065B  4F                 	db	79	;'O'
   267  00065C  6E                 	db	110	;'n'
   268  00065D  00                 	db	0
   269  0000                     
   270                           ; #config settings
   271  00065E  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           	psect	cinit
   274  00151E                     __pcinit:
   275                           	opt stack 0
   276  00151E                     start_initialization:
   277                           	opt stack 0
   278  00151E                     __initialization:
   279                           	opt stack 0
   280                           
   281                           ; Initialize objects allocated to BANK0 (4 bytes)
   282                           ; load TBLPTR registers with __pidataBANK0
   283  00151E  0E98               	movlw	low __pidataBANK0
   284  001520  6EF6               	movwf	tblptrl,c
   285  001522  0E19               	movlw	high __pidataBANK0
   286  001524  6EF7               	movwf	tblptrh,c
   287  001526  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   288  001528  6EF8               	movwf	tblptru,c
   289  00152A  EE00  F0F9         	lfsr	0,__pdataBANK0
   290  00152E  EE10 F004          	lfsr	1,4
   291  001532                     copy_data0:
   292  001532  0009               	tblrd		*+
   293  001534  CFF5 FFEE          	movff	tablat,postinc0
   294  001538  50E5               	movf	postdec1,w,c
   295  00153A  50E1               	movf	fsr1l,w,c
   296  00153C  E1FA               	bnz	copy_data0
   297                           
   298                           ; Initialize objects allocated to COMRAM (3 bytes)
   299                           ; load TBLPTR registers with __pidataCOMRAM
   300  00153E  0E9C               	movlw	low __pidataCOMRAM
   301  001540  6EF6               	movwf	tblptrl,c
   302  001542  0E19               	movlw	high __pidataCOMRAM
   303  001544  6EF7               	movwf	tblptrh,c
   304  001546  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   305  001548  6EF8               	movwf	tblptru,c
   306  00154A  0009               	tblrd		*+	;fetch initializer
   307  00154C  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   308  001550  0009               	tblrd		*+	;fetch initializer
   309  001552  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   310  001556  0009               	tblrd		*+	;fetch initializer
   311  001558  CFF5 F050          	movff	tablat,__pdataCOMRAM+2
   312                           
   313                           ; Clear objects allocated to BANK0 (96 bytes)
   314  00155C  EE00  F060         	lfsr	0,__pbssBANK0
   315  001560  0E60               	movlw	96
   316  001562                     clear_0:
   317  001562  6AEE               	clrf	postinc0,c
   318  001564  06E8               	decf	wreg,f,c
   319  001566  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to COMRAM (18 bytes)
   322  001568  EE00  F03C         	lfsr	0,__pbssCOMRAM
   323  00156C  0E12               	movlw	18
   324  00156E                     clear_1:
   325  00156E  6AEE               	clrf	postinc0,c
   326  001570  06E8               	decf	wreg,f,c
   327  001572  E1FD               	bnz	clear_1
   328  001574                     end_of_initialization:
   329                           	opt stack 0
   330  001574                     __end_of__initialization:
   331                           	opt stack 0
   332  001574  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   333  001576  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   334  001578  0E00               	movlw	low (__Lmediumconst shr (0+16))
   335  00157A  6EF8               	movwf	tblptru,c
   336  00157C  0100               	movlb	0
   337  00157E  EFA8  F007         	goto	_main	;jump to C main() function
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssCOMRAM
   348  00003C                     __pbssCOMRAM:
   349                           	opt stack 0
   350  00003C                     _timerCountLF:
   351                           	opt stack 0
   352  00003C                     	ds	4
   353  000040                     resetCommunications@commState:
   354                           	opt stack 0
   355  000040                     	ds	2
   356  000042                     receive_data@my_status:
   357                           	opt stack 0
   358  000042                     	ds	1
   359  000043                     communications@last_state_active:
   360                           	opt stack 0
   361  000043                     	ds	1
   362  000044                     communications@receive_current_state:
   363                           	opt stack 0
   364  000044                     	ds	1
   365  000045                     communications@end_of_transmission_received:
   366                           	opt stack 0
   367  000045                     	ds	1
   368  000046                     _SPI_transmit_wait:
   369                           	opt stack 0
   370  000046                     	ds	1
   371  000047                     powerPulseCheck@mcpLFoutLast:
   372                           	opt stack 0
   373  000047                     	ds	1
   374  000048                     powerPulseCheck@mcpHFoutLast:
   375                           	opt stack 0
   376  000048                     	ds	1
   377  000049                     pulseFoutPassThru@runonce:
   378                           	opt stack 0
   379  000049                     	ds	1
   380  00004A                     _timerCountHF:
   381                           	opt stack 0
   382  00004A                     	ds	4
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	dataCOMRAM
   393  00004E                     __pdataCOMRAM:
   394                           	opt stack 0
   395  00004E                     powerPulseCheck@timerCountHFCheck:
   396                           	opt stack 0
   397  00004E                     	ds	2
   398  000050                     powerPulseCheck@firstPulse:
   399                           	opt stack 0
   400  000050                     	ds	1
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	bssBANK0
   411  000060                     __pbssBANK0:
   412                           	opt stack 0
   413  000060                     powerPulseCheck@meterEnergyUsedPart:
   414                           	opt stack 0
   415  000060                     	ds	4
   416  000064                     _meterEnergyUsed:
   417                           	opt stack 0
   418  000064                     	ds	4
   419  000068                     _meterWatts:
   420                           	opt stack 0
   421  000068                     	ds	4
   422  00006C                     communications@send_buffer:
   423                           	opt stack 0
   424  00006C                     	ds	42
   425  000096                     communications@receive_buffer:
   426                           	opt stack 0
   427  000096                     	ds	42
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	dataBANK0
   438  0000F9                     __pdataBANK0:
   439                           	opt stack 0
   440  0000F9                     powerPulseCheck@timerCountHFLast:
   441                           	opt stack 0
   442  0000F9                     	ds	4
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	cstackBANK1
   453  000100                     __pcstackBANK1:
   454                           	opt stack 0
   455  000100                     main@initDone:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x0
   459  000100                     	ds	1
   460  000101                     main@inx:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x1
   464  000101                     	ds	2
   465  000103                     main@inx_1080:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x3
   469  000103                     	ds	2
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	cstackBANK0
   480  0000C0                     __pcstackBANK0:
   481                           	opt stack 0
   482  0000C0                     process_data@receive_buffer:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x0
   486  0000C0                     	ds	2
   487  0000C2                     process_data@send_buffer:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491  0000C2                     	ds	2
   492  0000C4                     process_data@parameters:
   493                           	opt stack 0
   494                           
   495                           ; 50 bytes @ 0x4
   496  0000C4                     	ds	50
   497  0000F6                     process_data@end_of_transmission_received:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x36
   501  0000F6                     	ds	1
   502  0000F7                     communications@no_more_to_send:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x37
   506  0000F7                     	ds	1
   507  0000F8                     communications@firstTime:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x38
   511  0000F8                     	ds	1
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           	psect	cstackCOMRAM
   522  000001                     __pcstackCOMRAM:
   523                           	opt stack 0
   524  000001                     ??_Timer0_ISR:
   525                           
   526                           ; 1 bytes @ 0x0
   527  000001                     	ds	14
   528  00000F                     ??_isdigit:
   529  00000F                     ?_strcmp2:
   530                           	opt stack 0
   531  00000F                     ?___wmul:
   532                           	opt stack 0
   533  00000F                     ?___lmul:
   534                           	opt stack 0
   535  00000F                     ?___lldiv:
   536                           	opt stack 0
   537  00000F                     ?___llmod:
   538                           	opt stack 0
   539  00000F                     SPI_send_data@data:
   540                           	opt stack 0
   541  00000F                     delayMS10@count:
   542                           	opt stack 0
   543  00000F                     command_builder_add_char@send_buffer:
   544                           	opt stack 0
   545  00000F                     strcmp2@a:
   546                           	opt stack 0
   547  00000F                     SPI_receive_data@data:
   548                           	opt stack 0
   549  00000F                     ___wmul@multiplier:
   550                           	opt stack 0
   551  00000F                     ___lmul@multiplier:
   552                           	opt stack 0
   553  00000F                     ___lldiv@dividend:
   554                           	opt stack 0
   555  00000F                     ___llmod@dividend:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0xE
   559  00000F                     	ds	1
   560  000010                     SPI_send_data@sendGood:
   561                           	opt stack 0
   562  000010                     _isdigit$2277:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xF
   566  000010                     	ds	1
   567  000011                     ??_delayMS10:
   568  000011                     command_builder_add_char@data:
   569                           	opt stack 0
   570  000011                     SPI_receive_data@recvGood:
   571                           	opt stack 0
   572  000011                     isdigit@c:
   573                           	opt stack 0
   574  000011                     send_data@send_buffer:
   575                           	opt stack 0
   576  000011                     strcmp2@b:
   577                           	opt stack 0
   578  000011                     ___wmul@multiplicand:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x10
   582  000011                     	ds	1
   583  000012                     ??_command_builder_add_char:
   584  000012                     delayMS10@inx:
   585                           	opt stack 0
   586  000012                     receive_data@receive_buffer:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x11
   590  000012                     	ds	1
   591  000013                     ??_send_data:
   592  000013                     ??_strcmp2:
   593  000013                     command_builder_add_string@send_buffer:
   594                           	opt stack 0
   595  000013                     ___wmul@product:
   596                           	opt stack 0
   597  000013                     ___lmul@multiplicand:
   598                           	opt stack 0
   599  000013                     ___lldiv@divisor:
   600                           	opt stack 0
   601  000013                     ___llmod@divisor:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0x12
   605  000013                     	ds	1
   606  000014                     ??_initMCPFout:
   607  000014                     ??_receive_data:
   608                           
   609                           ; 1 bytes @ 0x13
   610  000014                     	ds	1
   611  000015                     receive_data@data:
   612                           	opt stack 0
   613  000015                     send_data@send_end:
   614                           	opt stack 0
   615  000015                     process_data_parameterize@parameters:
   616                           	opt stack 0
   617  000015                     command_builder_add_string@data_string:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x14
   621  000015                     	ds	1
   622  000016                     strcmp2@match:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x15
   626  000016                     	ds	1
   627  000017                     ??_command_builder_add_string:
   628  000017                     ___llmod@counter:
   629                           	opt stack 0
   630  000017                     process_data_parameterize@buffer_to_parameterize:
   631                           	opt stack 0
   632  000017                     ___lmul@product:
   633                           	opt stack 0
   634  000017                     ___lldiv@quotient:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x16
   638  000017                     	ds	1
   639  000018                     strcmp2@inx:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  000018                     	ds	1
   644  000019                     ??_process_data_parameterize:
   645  000019                     command_builder_add_string@inx:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x18
   649  000019                     	ds	1
   650  00001A                     strmatch@a:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x19
   654  00001A                     	ds	1
   655  00001B                     ?_atol:
   656                           	opt stack 0
   657  00001B                     ___lldiv@counter:
   658                           	opt stack 0
   659  00001B                     command_builder1@send_buffer:
   660                           	opt stack 0
   661  00001B                     command_builder3@send_buffer:
   662                           	opt stack 0
   663  00001B                     atol@s:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x1A
   667  00001B                     	ds	1
   668  00001C                     process_data_parameterize@inx:
   669                           	opt stack 0
   670  00001C                     strmatch@b:
   671                           	opt stack 0
   672  00001C                     ultoa@buf:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x1B
   676  00001C                     	ds	1
   677  00001D                     command_builder1@data1:
   678                           	opt stack 0
   679  00001D                     command_builder3@data1:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x1C
   683  00001D                     	ds	1
   684  00001E                     process_data_parameterize@parameter_index:
   685                           	opt stack 0
   686  00001E                     strmatch@result:
   687                           	opt stack 0
   688  00001E                     ultoa@val:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x1D
   692  00001E                     	ds	1
   693  00001F                     ??_atol:
   694  00001F                     process_data_parameterize@parameter_position:
   695                           	opt stack 0
   696  00001F                     command_builder3@data2:
   697                           	opt stack 0
   698  00001F                     send_end_of_transmission@send_buffer:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x1E
   702  00001F                     	ds	1
   703  000020                     strmatch@match:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x1F
   707  000020                     	ds	1
   708  000021                     command_builder3@data3:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x20
   712  000021                     	ds	1
   713  000022                     ultoa@base:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x21
   717  000022                     	ds	1
   718  000023                     atol@sign:
   719                           	opt stack 0
   720  000023                     com_command_setVersion@send_buffer:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x22
   724  000023                     	ds	1
   725  000024                     atol@a:
   726                           	opt stack 0
   727  000024                     ultoa@v:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x23
   731  000024                     	ds	1
   732  000025                     
   733                           ; 1 bytes @ 0x24
   734  000025                     	ds	3
   735  000028                     atol@c:
   736                           	opt stack 0
   737  000028                     ultoa@c:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x27
   741  000028                     	ds	1
   742  000029                     com_command_setPower@send_buffer:
   743                           	opt stack 0
   744  000029                     com_command_setEnergyUsed@send_buffer:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x28
   748  000029                     	ds	2
   749  00002B                     com_command_setPower@temp:
   750                           	opt stack 0
   751  00002B                     com_command_setEnergyUsed@temp:
   752                           	opt stack 0
   753                           
   754                           ; 12 bytes @ 0x2A
   755  00002B                     	ds	12
   756  000037                     resetCommunications@send_buffer:
   757                           	opt stack 0
   758  000037                     process_data_parameters@parameters:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x36
   762  000037                     	ds	2
   763  000039                     ??_resetCommunications:
   764  000039                     process_data_parameters@send_buffer:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x38
   768  000039                     	ds	2
   769  00003B                     process_data_parameters@end_of_transmission_received:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x3A
   773  00003B                     	ds	1
   774  00003C                     tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           
   783                           ; 1 bytes @ 0x3B
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 80 in file "Current_Sense_Main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  inx             2    3[BANK1 ] int 
   794 ;;  inx             2    1[BANK1 ] int 
   795 ;;  initDone        1    0[BANK1 ] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   805 ;;      Params:         0       0       0       0       0       0       0
   806 ;;      Locals:         0       0       5       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0
   808 ;;      Totals:         0       0       5       0       0       0       0
   809 ;;Total ram usage:        5 bytes
   810 ;; Hardware stack levels required when called:    8
   811 ;; This function calls:
   812 ;;		_communications
   813 ;;		_delayMS10
   814 ;;		_init
   815 ;;		_initMCPFout
   816 ;;		_initTimer
   817 ;;		_powerPulseCheck
   818 ;;		_pulseFoutPassThru
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text0
   825  000F50                     __ptext0:
   826                           	opt stack 0
   827  000F50                     _main:
   828                           	opt stack 23
   829                           
   830                           ;Current_Sense_Main.c: 82: init();
   831                           
   832                           ;incstack = 0
   833  000F50  ECC3  F00C         	call	_init	;wreg free
   834                           
   835                           ;Current_Sense_Main.c: 84: for (int inx = 0; inx < 10; inx++)
   836  000F54  0E00               	movlw	0
   837  000F56  0101               	movlb	1	; () banked
   838  000F58  6F02               	movwf	(main@inx+1)& (0+255),b
   839  000F5A  0E00               	movlw	0
   840  000F5C  6F01               	movwf	main@inx& (0+255),b
   841  000F5E                     l3208:
   842                           
   843                           ; BSR set to: 1
   844  000F5E  0101               	movlb	1	; () banked
   845  000F60  BF02               	btfsc	(main@inx+1)& (0+255),7,b
   846  000F62  D008               	goto	l111
   847  000F64  0101               	movlb	1	; () banked
   848  000F66  5102               	movf	(main@inx+1)& (0+255),w,b
   849  000F68  E117               	bnz	l3220
   850  000F6A  0E0A               	movlw	10
   851  000F6C  0101               	movlb	1	; () banked
   852  000F6E  5D01               	subwf	main@inx& (0+255),w,b
   853  000F70  B0D8               	btfsc	status,0,c
   854  000F72  D012               	goto	l3220
   855  000F74                     l111:
   856                           
   857                           ; BSR set to: 1
   858                           ;Current_Sense_Main.c: 85: {
   859                           ;Current_Sense_Main.c: 86: LATBbits.LATB4 = 1;
   860  000F74  888A               	bsf	3978,4,c	;volatile
   861                           
   862                           ; BSR set to: 1
   863                           ;Current_Sense_Main.c: 87: delayMS10(10);
   864  000F76  0E00               	movlw	0
   865  000F78  6E10               	movwf	delayMS10@count+1,c
   866  000F7A  0E0A               	movlw	10
   867  000F7C  6E0F               	movwf	delayMS10@count,c
   868  000F7E  ECDA  F00B         	call	_delayMS10	;wreg free
   869                           
   870                           ;Current_Sense_Main.c: 88: LATBbits.LATB4 = 0;
   871  000F82  988A               	bcf	3978,4,c	;volatile
   872                           
   873                           ;Current_Sense_Main.c: 89: delayMS10(10);
   874  000F84  0E00               	movlw	0
   875  000F86  6E10               	movwf	delayMS10@count+1,c
   876  000F88  0E0A               	movlw	10
   877  000F8A  6E0F               	movwf	delayMS10@count,c
   878  000F8C  ECDA  F00B         	call	_delayMS10	;wreg free
   879  000F90  0101               	movlb	1	; () banked
   880  000F92  4B01               	infsnz	main@inx& (0+255),f,b
   881  000F94  2B02               	incf	(main@inx+1)& (0+255),f,b
   882  000F96  D7E3               	goto	l3208
   883  000F98                     l3220:
   884                           
   885                           ; BSR set to: 1
   886                           ;Current_Sense_Main.c: 90: }
   887                           ;Current_Sense_Main.c: 92: initTimer();
   888  000F98  ECA0  F00C         	call	_initTimer	;wreg free
   889                           
   890                           ;Current_Sense_Main.c: 120: communications(1);
   891  000F9C  0E01               	movlw	1
   892  000F9E  EC70  F008         	call	_communications
   893                           
   894                           ;Current_Sense_Main.c: 127: bool initDone = 0;
   895  000FA2  0E00               	movlw	0
   896  000FA4  0101               	movlb	1	; () banked
   897  000FA6  6F00               	movwf	main@initDone& (0+255),b
   898  000FA8                     l3226:
   899                           
   900                           ; BSR set to: 1
   901                           ;Current_Sense_Main.c: 130: {
   902                           ;Current_Sense_Main.c: 131: communications(0);
   903  000FA8  0E00               	movlw	0
   904  000FAA  EC70  F008         	call	_communications
   905                           
   906                           ;Current_Sense_Main.c: 132: pulseFoutPassThru();
   907  000FAE  EC5E  F00C         	call	_pulseFoutPassThru	;wreg free
   908                           
   909                           ;Current_Sense_Main.c: 133: powerPulseCheck();
   910  000FB2  EC83  F004         	call	_powerPulseCheck	;wreg free
   911                           
   912                           ;Current_Sense_Main.c: 136: if (initDone == 0)
   913  000FB6  0101               	movlb	1	; () banked
   914  000FB8  5100               	movf	main@initDone& (0+255),w,b
   915  000FBA  0101               	movlb	1	; () banked
   916  000FBC  A4D8               	btfss	status,2,c
   917  000FBE  D7F4               	goto	l3226
   918                           
   919                           ; BSR set to: 1
   920                           ;Current_Sense_Main.c: 137: {
   921                           ;Current_Sense_Main.c: 138: if (timerCountLF > 1000)
   922  000FC0  503F               	movf	_timerCountLF+3,w,c	;volatile
   923  000FC2  103E               	iorwf	_timerCountLF+2,w,c	;volatile
   924  000FC4  E106               	bnz	u2770
   925  000FC6  0EE9               	movlw	233
   926  000FC8  5C3C               	subwf	_timerCountLF,w,c	;volatile
   927  000FCA  0E03               	movlw	3
   928  000FCC  583D               	subwfb	_timerCountLF+1,w,c	;volatile
   929  000FCE  A0D8               	btfss	status,0,c
   930  000FD0  D7EB               	goto	l3226
   931  000FD2                     u2770:
   932                           
   933                           ; BSR set to: 1
   934                           ;Current_Sense_Main.c: 139: {
   935                           ;Current_Sense_Main.c: 140: initMCPFout();
   936  000FD2  EC26  F00A         	call	_initMCPFout	;wreg free
   937                           
   938                           ;Current_Sense_Main.c: 141: initDone = 1;
   939  000FD6  0E01               	movlw	1
   940  000FD8  0101               	movlb	1	; () banked
   941  000FDA  6F00               	movwf	main@initDone& (0+255),b
   942                           
   943                           ; BSR set to: 1
   944                           ;Current_Sense_Main.c: 143: for (int inx = 0; inx < 10; inx++)
   945  000FDC  0E00               	movlw	0
   946  000FDE  0101               	movlb	1	; () banked
   947  000FE0  6F04               	movwf	(main@inx_1080+1)& (0+255),b
   948  000FE2  0E00               	movlw	0
   949  000FE4  6F03               	movwf	main@inx_1080& (0+255),b
   950  000FE6                     l3242:
   951                           
   952                           ; BSR set to: 1
   953  000FE6  0101               	movlb	1	; () banked
   954  000FE8  BF04               	btfsc	(main@inx_1080+1)& (0+255),7,b
   955  000FEA  D008               	goto	l116
   956  000FEC  0101               	movlb	1	; () banked
   957  000FEE  5104               	movf	(main@inx_1080+1)& (0+255),w,b
   958  000FF0  E1DB               	bnz	l3226
   959  000FF2  0E0A               	movlw	10
   960  000FF4  0101               	movlb	1	; () banked
   961  000FF6  5D03               	subwf	main@inx_1080& (0+255),w,b
   962  000FF8  B0D8               	btfsc	status,0,c
   963  000FFA  D7D6               	goto	l3226
   964  000FFC                     l116:
   965                           
   966                           ; BSR set to: 1
   967                           ;Current_Sense_Main.c: 144: {
   968                           ;Current_Sense_Main.c: 145: LATBbits.LATB4 = 1;
   969  000FFC  888A               	bsf	3978,4,c	;volatile
   970                           
   971                           ; BSR set to: 1
   972                           ;Current_Sense_Main.c: 146: delayMS10(3);
   973  000FFE  0E00               	movlw	0
   974  001000  6E10               	movwf	delayMS10@count+1,c
   975  001002  0E03               	movlw	3
   976  001004  6E0F               	movwf	delayMS10@count,c
   977  001006  ECDA  F00B         	call	_delayMS10	;wreg free
   978                           
   979                           ;Current_Sense_Main.c: 147: LATBbits.LATB4 = 0;
   980  00100A  988A               	bcf	3978,4,c	;volatile
   981                           
   982                           ;Current_Sense_Main.c: 148: delayMS10(5);
   983  00100C  0E00               	movlw	0
   984  00100E  6E10               	movwf	delayMS10@count+1,c
   985  001010  0E05               	movlw	5
   986  001012  6E0F               	movwf	delayMS10@count,c
   987  001014  ECDA  F00B         	call	_delayMS10	;wreg free
   988  001018  0101               	movlb	1	; () banked
   989  00101A  4B03               	infsnz	main@inx_1080& (0+255),f,b
   990  00101C  2B04               	incf	(main@inx_1080+1)& (0+255),f,b
   991  00101E  D7E3               	goto	l3242
   992  001020                     __end_of_main:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           postdec1	equ	0xFE5
  1001                           fsr1l	equ	0xFE1
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _pulseFoutPassThru *****************
  1005 ;; Defined at:
  1006 ;;		line 191 in file "Current_Sense_Main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1020 ;;      Params:         0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text1
  1035  0018BC                     __ptext1:
  1036                           	opt stack 0
  1037  0018BC                     _pulseFoutPassThru:
  1038                           	opt stack 29
  1039                           
  1040                           ;Current_Sense_Main.c: 194: static bool runonce = 0;
  1041                           ;Current_Sense_Main.c: 196: if (PORTCbits.RC2 == 0)
  1042                           
  1043                           ; BSR set to: 1
  1044                           ;incstack = 0
  1045  0018BC  B482               	btfsc	3970,2,c	;volatile
  1046  0018BE  D00C               	goto	l125
  1047                           
  1048                           ;Current_Sense_Main.c: 197: {
  1049                           ;Current_Sense_Main.c: 198: LATAbits.LATA0 = 1;
  1050  0018C0  8089               	bsf	3977,0,c	;volatile
  1051                           
  1052                           ;Current_Sense_Main.c: 199: if (runonce == 0)
  1053  0018C2  5049               	movf	pulseFoutPassThru@runonce,w,c
  1054  0018C4  A4D8               	btfss	status,2,c
  1055  0018C6  0012               	return	
  1056                           
  1057                           ;Current_Sense_Main.c: 200: {
  1058                           ;Current_Sense_Main.c: 201: runonce = 1;
  1059  0018C8  0E01               	movlw	1
  1060  0018CA  6E49               	movwf	pulseFoutPassThru@runonce,c
  1061                           
  1062                           ;Current_Sense_Main.c: 202: if (PORTBbits.RB4 == 1)
  1063  0018CC  A881               	btfss	3969,4,c	;volatile
  1064  0018CE  D002               	goto	l127
  1065                           
  1066                           ;Current_Sense_Main.c: 203: {
  1067                           ;Current_Sense_Main.c: 204: LATBbits.LATB4 = 0;
  1068  0018D0  988A               	bcf	3978,4,c	;volatile
  1069                           
  1070                           ;Current_Sense_Main.c: 205: }
  1071  0018D2  0012               	return	
  1072  0018D4                     l127:
  1073                           
  1074                           ;Current_Sense_Main.c: 206: else
  1075                           ;Current_Sense_Main.c: 207: {
  1076                           ;Current_Sense_Main.c: 208: LATBbits.LATB4 = 1;
  1077  0018D4  888A               	bsf	3978,4,c	;volatile
  1078                           
  1079                           ;Current_Sense_Main.c: 209: }
  1080                           ;Current_Sense_Main.c: 210: }
  1081                           ;Current_Sense_Main.c: 211: }
  1082  0018D6  0012               	return	
  1083  0018D8                     l125:
  1084                           
  1085                           ;Current_Sense_Main.c: 212: else
  1086                           ;Current_Sense_Main.c: 213: {
  1087                           ;Current_Sense_Main.c: 214: LATAbits.LATA0 = 0;
  1088  0018D8  9089               	bcf	3977,0,c	;volatile
  1089                           
  1090                           ;Current_Sense_Main.c: 215: runonce = 0;
  1091  0018DA  0E00               	movlw	0
  1092  0018DC  6E49               	movwf	pulseFoutPassThru@runonce,c
  1093  0018DE  0012               	return	
  1094  0018E0                     __end_of_pulseFoutPassThru:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1l	equ	0xFE1
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _powerPulseCheck *****************
  1107 ;; Defined at:
  1108 ;;		line 235 in file "Current_Sense_Main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		___lldiv
  1131 ;;		___lmul
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text2
  1138  000906                     __ptext2:
  1139                           	opt stack 0
  1140  000906                     _powerPulseCheck:
  1141                           	opt stack 28
  1142                           
  1143                           ;Current_Sense_Main.c: 247: static unsigned long meterEnergyUsedPart = 0;
  1144                           ;Current_Sense_Main.c: 248: static unsigned long timerCountHFLast = 2147483647;
  1145                           ;Current_Sense_Main.c: 249: static unsigned int timerCountHFCheck = 1;
  1146                           ;Current_Sense_Main.c: 250: static bool firstPulse = 1;
  1147                           ;Current_Sense_Main.c: 253: static bool mcpHFoutLast = 0;
  1148                           ;Current_Sense_Main.c: 254: static bool mcpLFoutLast = 0;
  1149                           ;Current_Sense_Main.c: 258: if (PORTCbits.RC2 == 0)
  1150                           
  1151                           ;incstack = 0
  1152  000906  B482               	btfsc	3970,2,c	;volatile
  1153  000908  D036               	goto	l3160
  1154                           
  1155                           ;Current_Sense_Main.c: 259: {
  1156                           ;Current_Sense_Main.c: 260: if (mcpHFoutLast == 0)
  1157  00090A  5048               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1158  00090C  A4D8               	btfss	status,2,c
  1159  00090E  D035               	goto	l150
  1160                           
  1161                           ;Current_Sense_Main.c: 261: {
  1162                           ;Current_Sense_Main.c: 262: mcpHFoutLast = 1;
  1163  000910  0E01               	movlw	1
  1164  000912  6E48               	movwf	powerPulseCheck@mcpHFoutLast,c
  1165                           
  1166                           ;Current_Sense_Main.c: 263: firstPulse = 0;
  1167  000914  0E00               	movlw	0
  1168  000916  6E50               	movwf	powerPulseCheck@firstPulse,c
  1169                           
  1170                           ;Current_Sense_Main.c: 265: timerCountHFLast = timerCountHF;
  1171  000918  C04A  F0F9         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1172  00091C  C04B  F0FA         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1173  000920  C04C  F0FB         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1174  000924  C04D  F0FC         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1175                           
  1176                           ;Current_Sense_Main.c: 266: timerCountHF = 0;
  1177  000928  0E00               	movlw	0
  1178  00092A  6E4A               	movwf	_timerCountHF,c	;volatile
  1179  00092C  0E00               	movlw	0
  1180  00092E  6E4B               	movwf	_timerCountHF+1,c	;volatile
  1181  000930  0E00               	movlw	0
  1182  000932  6E4C               	movwf	_timerCountHF+2,c	;volatile
  1183  000934  0E00               	movlw	0
  1184  000936  6E4D               	movwf	_timerCountHF+3,c	;volatile
  1185                           
  1186                           ;Current_Sense_Main.c: 267: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHFLast;
  1187  000938  0EE0               	movlw	224
  1188  00093A  6E0F               	movwf	___lldiv@dividend,c
  1189  00093C  0ED4               	movlw	212
  1190  00093E  6E10               	movwf	___lldiv@dividend+1,c
  1191  000940  0E0E               	movlw	14
  1192  000942  6E11               	movwf	___lldiv@dividend+2,c
  1193  000944  0E00               	movlw	0
  1194  000946  6E12               	movwf	___lldiv@dividend+3,c
  1195  000948  C0F9  F013         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1196  00094C  C0FA  F014         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1197  000950  C0FB  F015         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1198  000954  C0FC  F016         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1199  000958  ECA7  F009         	call	___lldiv	;wreg free
  1200  00095C  C00F  F068         	movff	?___lldiv,_meterWatts
  1201  000960  C010  F069         	movff	?___lldiv+1,_meterWatts+1
  1202  000964  C011  F06A         	movff	?___lldiv+2,_meterWatts+2
  1203  000968  C012  F06B         	movff	?___lldiv+3,_meterWatts+3
  1204                           
  1205                           ;Current_Sense_Main.c: 271: timerCountHFCheck = 1;
  1206  00096C  0E00               	movlw	0
  1207  00096E  6E4F               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1208  000970  0E01               	movlw	1
  1209  000972  6E4E               	movwf	powerPulseCheck@timerCountHFCheck,c
  1210                           
  1211                           ;Current_Sense_Main.c: 272: }
  1212                           ;Current_Sense_Main.c: 273: }
  1213  000974  D002               	goto	l150
  1214  000976                     l3160:
  1215                           
  1216                           ;Current_Sense_Main.c: 274: else
  1217                           ;Current_Sense_Main.c: 275: {
  1218                           ;Current_Sense_Main.c: 276: mcpHFoutLast = 0;
  1219  000976  0E00               	movlw	0
  1220  000978  6E48               	movwf	powerPulseCheck@mcpHFoutLast,c
  1221  00097A                     l150:
  1222                           
  1223                           ;Current_Sense_Main.c: 277: }
  1224                           ;Current_Sense_Main.c: 285: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast))
  1225  00097A  5050               	movf	powerPulseCheck@firstPulse,w,c
  1226  00097C  A4D8               	btfss	status,2,c
  1227  00097E  D054               	goto	l3174
  1228  000980  504A               	movf	_timerCountHF,w,c	;volatile
  1229  000982  0100               	movlb	0	; () banked
  1230  000984  5DF9               	subwf	powerPulseCheck@timerCountHFLast& (0+255),w,b
  1231  000986  504B               	movf	_timerCountHF+1,w,c	;volatile
  1232  000988  0100               	movlb	0	; () banked
  1233  00098A  59FA               	subwfb	(powerPulseCheck@timerCountHFLast+1)& (0+255),w,b
  1234  00098C  504C               	movf	_timerCountHF+2,w,c	;volatile
  1235  00098E  0100               	movlb	0	; () banked
  1236  000990  59FB               	subwfb	(powerPulseCheck@timerCountHFLast+2)& (0+255),w,b
  1237  000992  504D               	movf	_timerCountHF+3,w,c	;volatile
  1238  000994  0100               	movlb	0	; () banked
  1239  000996  59FC               	subwfb	(powerPulseCheck@timerCountHFLast+3)& (0+255),w,b
  1240  000998  B0D8               	btfsc	status,0,c
  1241  00099A  D046               	goto	l3174
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;Current_Sense_Main.c: 286: {
  1245                           ;Current_Sense_Main.c: 287: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1246  00099C  C04E  F00F         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1247  0009A0  C04F  F010         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1248  0009A4  6A11               	clrf	___lmul@multiplier+2,c
  1249  0009A6  6A12               	clrf	___lmul@multiplier+3,c
  1250  0009A8  0EE8               	movlw	232
  1251  0009AA  6E13               	movwf	___lmul@multiplicand,c
  1252  0009AC  0E03               	movlw	3
  1253  0009AE  6E14               	movwf	___lmul@multiplicand+1,c
  1254  0009B0  0E00               	movlw	0
  1255  0009B2  6E15               	movwf	___lmul@multiplicand+2,c
  1256  0009B4  0E00               	movlw	0
  1257  0009B6  6E16               	movwf	___lmul@multiplicand+3,c
  1258  0009B8  EC17  F00B         	call	___lmul	;wreg free
  1259  0009BC  504A               	movf	_timerCountHF,w,c	;volatile
  1260  0009BE  5C0F               	subwf	?___lmul,w,c
  1261  0009C0  504B               	movf	_timerCountHF+1,w,c	;volatile
  1262  0009C2  5810               	subwfb	?___lmul+1,w,c
  1263  0009C4  504C               	movf	_timerCountHF+2,w,c	;volatile
  1264  0009C6  5811               	subwfb	?___lmul+2,w,c
  1265  0009C8  504D               	movf	_timerCountHF+3,w,c	;volatile
  1266  0009CA  5812               	subwfb	?___lmul+3,w,c
  1267  0009CC  B0D8               	btfsc	status,0,c
  1268  0009CE  D02C               	goto	l3174
  1269                           
  1270                           ;Current_Sense_Main.c: 288: {
  1271                           ;Current_Sense_Main.c: 289: if (timerCountHFCheck < 90)
  1272  0009D0  504F               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1273  0009D2  E121               	bnz	l3172
  1274  0009D4  0E5A               	movlw	90
  1275  0009D6  5C4E               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1276  0009D8  B0D8               	btfsc	status,0,c
  1277  0009DA  D01D               	goto	l3172
  1278                           
  1279                           ;Current_Sense_Main.c: 290: {
  1280                           ;Current_Sense_Main.c: 291: timerCountHFCheck++;
  1281  0009DC  4A4E               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1282  0009DE  2A4F               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1283                           
  1284                           ;Current_Sense_Main.c: 292: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHF;
  1285  0009E0  0EE0               	movlw	224
  1286  0009E2  6E0F               	movwf	___lldiv@dividend,c
  1287  0009E4  0ED4               	movlw	212
  1288  0009E6  6E10               	movwf	___lldiv@dividend+1,c
  1289  0009E8  0E0E               	movlw	14
  1290  0009EA  6E11               	movwf	___lldiv@dividend+2,c
  1291  0009EC  0E00               	movlw	0
  1292  0009EE  6E12               	movwf	___lldiv@dividend+3,c
  1293  0009F0  C04A  F013         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1294  0009F4  C04B  F014         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1295  0009F8  C04C  F015         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1296  0009FC  C04D  F016         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1297  000A00  ECA7  F009         	call	___lldiv	;wreg free
  1298  000A04  C00F  F068         	movff	?___lldiv,_meterWatts
  1299  000A08  C010  F069         	movff	?___lldiv+1,_meterWatts+1
  1300  000A0C  C011  F06A         	movff	?___lldiv+2,_meterWatts+2
  1301  000A10  C012  F06B         	movff	?___lldiv+3,_meterWatts+3
  1302                           
  1303                           ;Current_Sense_Main.c: 293: }
  1304  000A14  D009               	goto	l3174
  1305  000A16                     l3172:
  1306                           
  1307                           ;Current_Sense_Main.c: 294: else
  1308                           ;Current_Sense_Main.c: 295: {
  1309                           ;Current_Sense_Main.c: 296: meterWatts = 0;
  1310  000A16  0E00               	movlw	0
  1311  000A18  0100               	movlb	0	; () banked
  1312  000A1A  6F68               	movwf	_meterWatts& (0+255),b
  1313  000A1C  0E00               	movlw	0
  1314  000A1E  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1315  000A20  0E00               	movlw	0
  1316  000A22  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1317  000A24  0E00               	movlw	0
  1318  000A26  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1319  000A28                     l3174:
  1320                           
  1321                           ;Current_Sense_Main.c: 297: }
  1322                           ;Current_Sense_Main.c: 299: }
  1323                           ;Current_Sense_Main.c: 300: }
  1324                           ;Current_Sense_Main.c: 302: if (firstPulse == 1)
  1325  000A28  0450               	decf	powerPulseCheck@firstPulse,w,c
  1326  000A2A  A4D8               	btfss	status,2,c
  1327  000A2C  D009               	goto	l3178
  1328                           
  1329                           ;Current_Sense_Main.c: 303: {
  1330                           ;Current_Sense_Main.c: 304: meterWatts = 0;
  1331  000A2E  0E00               	movlw	0
  1332  000A30  0100               	movlb	0	; () banked
  1333  000A32  6F68               	movwf	_meterWatts& (0+255),b
  1334  000A34  0E00               	movlw	0
  1335  000A36  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1336  000A38  0E00               	movlw	0
  1337  000A3A  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1338  000A3C  0E00               	movlw	0
  1339  000A3E  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1340  000A40                     l3178:
  1341                           
  1342                           ;Current_Sense_Main.c: 305: }
  1343                           ;Current_Sense_Main.c: 309: if (PORTAbits.RA1 == 0)
  1344  000A40  B280               	btfsc	3968,1,c	;volatile
  1345  000A42  D036               	goto	l3190
  1346                           
  1347                           ;Current_Sense_Main.c: 310: {
  1348                           ;Current_Sense_Main.c: 311: if (mcpLFoutLast == 0)
  1349  000A44  5047               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1350  000A46  A4D8               	btfss	status,2,c
  1351  000A48  0012               	return	
  1352                           
  1353                           ;Current_Sense_Main.c: 312: {
  1354                           ;Current_Sense_Main.c: 313: mcpLFoutLast = 1;
  1355  000A4A  0E01               	movlw	1
  1356  000A4C  6E47               	movwf	powerPulseCheck@mcpLFoutLast,c
  1357                           
  1358                           ;Current_Sense_Main.c: 315: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1359  000A4E  0E80               	movlw	128
  1360  000A50  0100               	movlb	0	; () banked
  1361  000A52  2760               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1362  000A54  0E97               	movlw	151
  1363  000A56  2361               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1364  000A58  0E06               	movlw	6
  1365  000A5A  2362               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1366  000A5C  0E00               	movlw	0
  1367  000A5E  2363               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1368                           
  1369                           ;Current_Sense_Main.c: 316: while (meterEnergyUsedPart > 100000)
  1370  000A60  D010               	goto	l158
  1371  000A62                     l3186:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;Current_Sense_Main.c: 317: {
  1375                           ;Current_Sense_Main.c: 318: meterEnergyUsed++;
  1376  000A62  0E01               	movlw	1
  1377  000A64  0100               	movlb	0	; () banked
  1378  000A66  2764               	addwf	_meterEnergyUsed& (0+255),f,b
  1379  000A68  0E00               	movlw	0
  1380  000A6A  2365               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1381  000A6C  2366               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1382  000A6E  2367               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1383                           
  1384                           ;Current_Sense_Main.c: 319: meterEnergyUsedPart -= 100000;
  1385  000A70  0EA0               	movlw	160
  1386  000A72  0100               	movlb	0	; () banked
  1387  000A74  5F60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1388  000A76  0E86               	movlw	134
  1389  000A78  5B61               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1390  000A7A  0E01               	movlw	1
  1391  000A7C  5B62               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1392  000A7E  0E00               	movlw	0
  1393  000A80  5B63               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1394  000A82                     l158:
  1395                           
  1396                           ; BSR set to: 0
  1397  000A82  0100               	movlb	0	; () banked
  1398  000A84  5163               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1399  000A86  E1ED               	bnz	l3186
  1400  000A88  0EA1               	movlw	161
  1401  000A8A  0100               	movlb	0	; () banked
  1402  000A8C  5D60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1403  000A8E  0E86               	movlw	134
  1404  000A90  0100               	movlb	0	; () banked
  1405  000A92  5961               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1406  000A94  0E01               	movlw	1
  1407  000A96  0100               	movlb	0	; () banked
  1408  000A98  5962               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1409  000A9A  B0D8               	btfsc	status,0,c
  1410  000A9C  D7E2               	goto	l3186
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;Current_Sense_Main.c: 320: }
  1414                           ;Current_Sense_Main.c: 322: timerCountLF = 0;
  1415                           
  1416                           ; BSR set to: 0
  1417  000A9E  0E00               	movlw	0
  1418  000AA0  6E3C               	movwf	_timerCountLF,c	;volatile
  1419  000AA2  0E00               	movlw	0
  1420  000AA4  6E3D               	movwf	_timerCountLF+1,c	;volatile
  1421  000AA6  0E00               	movlw	0
  1422  000AA8  6E3E               	movwf	_timerCountLF+2,c	;volatile
  1423  000AAA  0E00               	movlw	0
  1424  000AAC  6E3F               	movwf	_timerCountLF+3,c	;volatile
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;Current_Sense_Main.c: 323: }
  1428                           ;Current_Sense_Main.c: 324: }
  1429  000AAE  0012               	return	
  1430  000AB0                     l3190:
  1431                           
  1432                           ;Current_Sense_Main.c: 325: else
  1433                           ;Current_Sense_Main.c: 326: {
  1434                           ;Current_Sense_Main.c: 327: mcpLFoutLast = 0;
  1435  000AB0  0E00               	movlw	0
  1436  000AB2  6E47               	movwf	powerPulseCheck@mcpLFoutLast,c
  1437  000AB4  0012               	return	
  1438  000AB6                     __end_of_powerPulseCheck:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           postdec1	equ	0xFE5
  1447                           fsr1l	equ	0xFE1
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _initTimer *****************
  1451 ;; Defined at:
  1452 ;;		line 417 in file "Current_Sense_Main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text3
  1481  001940                     __ptext3:
  1482                           	opt stack 0
  1483  001940                     _initTimer:
  1484                           	opt stack 29
  1485                           
  1486                           ;Current_Sense_Main.c: 420: T0CONbits.TMR0ON = 0;
  1487                           
  1488                           ;incstack = 0
  1489  001940  9ED5               	bcf	4053,7,c	;volatile
  1490                           
  1491                           ;Current_Sense_Main.c: 421: T0CONbits.T08BIT = 0;
  1492  001942  9CD5               	bcf	4053,6,c	;volatile
  1493                           
  1494                           ;Current_Sense_Main.c: 422: T0CONbits.T0CS = 0;
  1495  001944  9AD5               	bcf	4053,5,c	;volatile
  1496                           
  1497                           ;Current_Sense_Main.c: 423: T0CONbits.PSA = 0;
  1498  001946  96D5               	bcf	4053,3,c	;volatile
  1499                           
  1500                           ;Current_Sense_Main.c: 424: T0CONbits.T0PS = 0b001;
  1501  001948  50D5               	movf	4053,w,c	;volatile
  1502  00194A  0BF8               	andlw	-8
  1503  00194C  0901               	iorlw	1
  1504  00194E  6ED5               	movwf	4053,c	;volatile
  1505                           
  1506                           ;Current_Sense_Main.c: 426: INTCONbits.TMR0IE = 1;
  1507  001950  8AF2               	bsf	intcon,5,c	;volatile
  1508                           
  1509                           ;Current_Sense_Main.c: 427: INTCONbits.GIE = 1;
  1510  001952  8EF2               	bsf	intcon,7,c	;volatile
  1511                           
  1512                           ;Current_Sense_Main.c: 428: T0CONbits.TMR0ON = 1;
  1513  001954  8ED5               	bsf	4053,7,c	;volatile
  1514  001956  0012               	return		;funcret
  1515  001958                     __end_of_initTimer:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           intcon	equ	0xFF2
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           postdec1	equ	0xFE5
  1525                           fsr1l	equ	0xFE1
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _init *****************
  1529 ;; Defined at:
  1530 ;;		line 343 in file "Current_Sense_Main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1544 ;;      Params:         0       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    3
  1551 ;; This function calls:
  1552 ;;		_initIO
  1553 ;;		_initInterruptsClear
  1554 ;;		_initMCPFout
  1555 ;;		_initOSC
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text4
  1562  001986                     __ptext4:
  1563                           	opt stack 0
  1564  001986                     _init:
  1565                           	opt stack 27
  1566                           
  1567                           ;Current_Sense_Main.c: 345: initOSC();
  1568                           
  1569                           ;incstack = 0
  1570  001986  ECAC  F00C         	call	_initOSC	;wreg free
  1571                           
  1572                           ;Current_Sense_Main.c: 346: initIO();
  1573  00198A  EC70  F00C         	call	_initIO	;wreg free
  1574                           
  1575                           ;Current_Sense_Main.c: 347: initInterruptsClear();
  1576  00198E  EC6A  F00B         	call	_initInterruptsClear	;wreg free
  1577                           
  1578                           ;Current_Sense_Main.c: 348: initMCPFout();
  1579  001992  EC26  F00A         	call	_initMCPFout	;wreg free
  1580  001996  0012               	return	
  1581  001998                     __end_of_init:
  1582                           	opt stack 0
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           intcon	equ	0xFF2
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           postdec1	equ	0xFE5
  1591                           fsr1l	equ	0xFE1
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function _initOSC *****************
  1595 ;; Defined at:
  1596 ;;		line 353 in file "Current_Sense_Main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_init
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text5
  1625  001958                     __ptext5:
  1626                           	opt stack 0
  1627  001958                     _initOSC:
  1628                           	opt stack 28
  1629                           
  1630                           ;Current_Sense_Main.c: 356: OSCCONbits.IDLEN = 0;
  1631                           
  1632                           ;incstack = 0
  1633  001958  9ED3               	bcf	4051,7,c	;volatile
  1634                           
  1635                           ;Current_Sense_Main.c: 357: OSCCONbits.IRCF = 0b111;
  1636  00195A  88D3               	bsf	4051,4,c	;volatile
  1637  00195C  8AD3               	bsf	4051,5,c	;volatile
  1638  00195E  8CD3               	bsf	4051,6,c	;volatile
  1639                           
  1640                           ;Current_Sense_Main.c: 358: OSCCONbits.SCS = 0b11;
  1641  001960  0E03               	movlw	3
  1642  001962  12D3               	iorwf	4051,f,c	;volatile
  1643                           
  1644                           ;Current_Sense_Main.c: 360: OSCCON2bits.MFIOSEL = 0;
  1645  001964  98D2               	bcf	4050,4,c	;volatile
  1646                           
  1647                           ;Current_Sense_Main.c: 361: OSCCON2bits.SOSCGO = 0;
  1648  001966  96D2               	bcf	4050,3,c	;volatile
  1649                           
  1650                           ;Current_Sense_Main.c: 362: OSCCON2bits.PRISD = 0;
  1651  001968  94D2               	bcf	4050,2,c	;volatile
  1652                           
  1653                           ;Current_Sense_Main.c: 364: OSCTUNEbits.INTSRC = 1;
  1654  00196A  8E9B               	bsf	3995,7,c	;volatile
  1655                           
  1656                           ;Current_Sense_Main.c: 365: OSCTUNEbits.PLLEN = 0;
  1657  00196C  9C9B               	bcf	3995,6,c	;volatile
  1658  00196E  0012               	return	
  1659  001970                     __end_of_initOSC:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           intcon	equ	0xFF2
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1l	equ	0xFE1
  1670                           status	equ	0xFD8
  1671                           
  1672 ;; *************** function _initMCPFout *****************
  1673 ;; Defined at:
  1674 ;;		line 434 in file "Current_Sense_Main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         0       0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0
  1690 ;;      Temps:          1       0       0       0       0       0       0
  1691 ;;      Totals:         1       0       0       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		_delayMS10
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;;		_init
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text6
  1704  00144C                     __ptext6:
  1705                           	opt stack 0
  1706  00144C                     _initMCPFout:
  1707                           	opt stack 28
  1708                           
  1709                           ;Current_Sense_Main.c: 439: TRISCbits.TRISC6 = 0;
  1710                           
  1711                           ;incstack = 0
  1712  00144C  9C94               	bcf	3988,6,c	;volatile
  1713                           
  1714                           ;Current_Sense_Main.c: 440: TRISCbits.TRISC7 = 0;
  1715  00144E  9E94               	bcf	3988,7,c	;volatile
  1716                           
  1717                           ;Current_Sense_Main.c: 441: TRISCbits.TRISC5 = 0;
  1718  001450  9A94               	bcf	3988,5,c	;volatile
  1719                           
  1720                           ;Current_Sense_Main.c: 442: TRISCbits.TRISC3 = 0;
  1721  001452  9694               	bcf	3988,3,c	;volatile
  1722                           
  1723                           ;Current_Sense_Main.c: 445: LATCbits.LATC7 = 0;
  1724  001454  9E8B               	bcf	3979,7,c	;volatile
  1725                           
  1726                           ;Current_Sense_Main.c: 446: LATCbits.LATC5 = 0;
  1727  001456  9A8B               	bcf	3979,5,c	;volatile
  1728                           
  1729                           ;Current_Sense_Main.c: 447: LATCbits.LATC3 = 0;
  1730  001458  968B               	bcf	3979,3,c	;volatile
  1731                           
  1732                           ;Current_Sense_Main.c: 449: _delay((unsigned long)((5)*(16000000/4000.0)));
  1733  00145A  0E1A               	movlw	26
  1734  00145C  6E14               	movwf	??_initMCPFout& (0+255),c
  1735  00145E  0EF8               	movlw	248
  1736  001460                     u2807:
  1737  001460  2EE8               	decfsz	wreg,f,c
  1738  001462  D7FE               	bra	u2807
  1739  001464  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1740  001466  D7FC               	bra	u2807
  1741  001468  D000               	nop2	
  1742                           
  1743                           ;Current_Sense_Main.c: 450: LATCbits.LATC6 = 0;
  1744  00146A  9C8B               	bcf	3979,6,c	;volatile
  1745                           
  1746                           ;Current_Sense_Main.c: 451: _delay((unsigned long)((5)*(16000000/4000.0)));
  1747  00146C  0E1A               	movlw	26
  1748  00146E  6E14               	movwf	??_initMCPFout& (0+255),c
  1749  001470  0EF8               	movlw	248
  1750  001472                     u2817:
  1751  001472  2EE8               	decfsz	wreg,f,c
  1752  001474  D7FE               	bra	u2817
  1753  001476  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1754  001478  D7FC               	bra	u2817
  1755  00147A  D000               	nop2	
  1756                           
  1757                           ;Current_Sense_Main.c: 453: LATCbits.LATC7 = 0;
  1758  00147C  9E8B               	bcf	3979,7,c	;volatile
  1759                           
  1760                           ;Current_Sense_Main.c: 454: LATCbits.LATC5 = 0;
  1761  00147E  9A8B               	bcf	3979,5,c	;volatile
  1762                           
  1763                           ;Current_Sense_Main.c: 455: LATCbits.LATC3 = 0;
  1764  001480  968B               	bcf	3979,3,c	;volatile
  1765                           
  1766                           ;Current_Sense_Main.c: 457: _delay((unsigned long)((5)*(16000000/4000.0)));
  1767  001482  0E1A               	movlw	26
  1768  001484  6E14               	movwf	??_initMCPFout& (0+255),c
  1769  001486  0EF8               	movlw	248
  1770  001488                     u2827:
  1771  001488  2EE8               	decfsz	wreg,f,c
  1772  00148A  D7FE               	bra	u2827
  1773  00148C  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1774  00148E  D7FC               	bra	u2827
  1775  001490  D000               	nop2	
  1776                           
  1777                           ;Current_Sense_Main.c: 459: LATCbits.LATC7 = 1;
  1778  001492  8E8B               	bsf	3979,7,c	;volatile
  1779                           
  1780                           ;Current_Sense_Main.c: 460: LATCbits.LATC5 = 1;
  1781  001494  8A8B               	bsf	3979,5,c	;volatile
  1782                           
  1783                           ;Current_Sense_Main.c: 461: LATCbits.LATC3 = 1;
  1784  001496  868B               	bsf	3979,3,c	;volatile
  1785                           
  1786                           ;Current_Sense_Main.c: 463: _delay((unsigned long)((5)*(16000000/4000.0)));
  1787  001498  0E1A               	movlw	26
  1788  00149A  6E14               	movwf	??_initMCPFout& (0+255),c
  1789  00149C  0EF8               	movlw	248
  1790  00149E                     u2837:
  1791  00149E  2EE8               	decfsz	wreg,f,c
  1792  0014A0  D7FE               	bra	u2837
  1793  0014A2  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1794  0014A4  D7FC               	bra	u2837
  1795  0014A6  D000               	nop2	
  1796                           
  1797                           ;Current_Sense_Main.c: 464: LATCbits.LATC6 = 1;
  1798  0014A8  8C8B               	bsf	3979,6,c	;volatile
  1799                           
  1800                           ;Current_Sense_Main.c: 465: delayMS10(10);
  1801  0014AA  0E00               	movlw	0
  1802  0014AC  6E10               	movwf	delayMS10@count+1,c
  1803  0014AE  0E0A               	movlw	10
  1804  0014B0  6E0F               	movwf	delayMS10@count,c
  1805  0014B2  ECDA  F00B         	call	_delayMS10	;wreg free
  1806  0014B6  0012               	return	
  1807  0014B8                     __end_of_initMCPFout:
  1808                           	opt stack 0
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           intcon	equ	0xFF2
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           postdec1	equ	0xFE5
  1817                           fsr1l	equ	0xFE1
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function _delayMS10 *****************
  1821 ;; Defined at:
  1822 ;;		line 334 in file "Current_Sense_Main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  count           2   14[COMRAM] int 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  inx             2   17[COMRAM] int 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1836 ;;      Params:         2       0       0       0       0       0       0
  1837 ;;      Locals:         2       0       0       0       0       0       0
  1838 ;;      Temps:          1       0       0       0       0       0       0
  1839 ;;      Totals:         5       0       0       0       0       0       0
  1840 ;;Total ram usage:        5 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;;		_initMCPFout
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text7
  1852  0017B4                     __ptext7:
  1853                           	opt stack 0
  1854  0017B4                     _delayMS10:
  1855                           	opt stack 28
  1856                           
  1857                           ;Current_Sense_Main.c: 336: for (int inx = 0; inx < count; inx++)
  1858                           
  1859                           ;incstack = 0
  1860  0017B4  0E00               	movlw	0
  1861  0017B6  6E13               	movwf	delayMS10@inx+1,c
  1862  0017B8  0E00               	movlw	0
  1863  0017BA  6E12               	movwf	delayMS10@inx,c
  1864  0017BC  D009               	goto	l165
  1865  0017BE                     l2772:
  1866                           
  1867                           ;Current_Sense_Main.c: 337: {
  1868                           ;Current_Sense_Main.c: 339: _delay((unsigned long)((10)*(16000000/4000.0)));
  1869  0017BE  0E34               	movlw	52
  1870  0017C0  6E11               	movwf	??_delayMS10& (0+255),c
  1871  0017C2  0EF2               	movlw	242
  1872  0017C4                     u2847:
  1873  0017C4  2EE8               	decfsz	wreg,f,c
  1874  0017C6  D7FE               	bra	u2847
  1875  0017C8  2E11               	decfsz	??_delayMS10& (0+255),f,c
  1876  0017CA  D7FC               	bra	u2847
  1877  0017CC  4A12               	infsnz	delayMS10@inx,f,c
  1878  0017CE  2A13               	incf	delayMS10@inx+1,f,c
  1879  0017D0                     l165:
  1880  0017D0  500F               	movf	delayMS10@count,w,c
  1881  0017D2  5C12               	subwf	delayMS10@inx,w,c
  1882  0017D4  5013               	movf	delayMS10@inx+1,w,c
  1883  0017D6  0A80               	xorlw	128
  1884  0017D8  6E11               	movwf	??_delayMS10& (0+255),c
  1885  0017DA  5010               	movf	delayMS10@count+1,w,c
  1886  0017DC  0A80               	xorlw	128
  1887  0017DE  5811               	subwfb	??_delayMS10& (0+255),w,c
  1888  0017E0  B0D8               	btfsc	status,0,c
  1889  0017E2  0012               	return	
  1890  0017E4  D7EC               	goto	l2772
  1891  0017E6                     __end_of_delayMS10:
  1892                           	opt stack 0
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           intcon	equ	0xFF2
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           postdec1	equ	0xFE5
  1901                           fsr1l	equ	0xFE1
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _initInterruptsClear *****************
  1905 ;; Defined at:
  1906 ;;		line 388 in file "Current_Sense_Main.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         0       0       0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0
  1923 ;;      Totals:         0       0       0       0       0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_init
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text8
  1935  0016D4                     __ptext8:
  1936                           	opt stack 0
  1937  0016D4                     _initInterruptsClear:
  1938                           	opt stack 28
  1939                           
  1940                           ;Current_Sense_Main.c: 391: INTCON = 0b00000000;
  1941                           
  1942                           ;incstack = 0
  1943  0016D4  0E00               	movlw	0
  1944  0016D6  6EF2               	movwf	intcon,c	;volatile
  1945                           
  1946                           ;Current_Sense_Main.c: 392: INTCON2 = 0b00000000;
  1947  0016D8  0E00               	movlw	0
  1948  0016DA  6EF1               	movwf	intcon2,c	;volatile
  1949                           
  1950                           ;Current_Sense_Main.c: 393: INTCON3 = 0b00000000;
  1951  0016DC  0E00               	movlw	0
  1952  0016DE  6EF0               	movwf	intcon3,c	;volatile
  1953                           
  1954                           ;Current_Sense_Main.c: 395: RCONbits.IPEN = 0;
  1955  0016E0  9ED0               	bcf	4048,7,c	;volatile
  1956                           
  1957                           ;Current_Sense_Main.c: 397: PIR1 = 0b00000000;
  1958  0016E2  0E00               	movlw	0
  1959  0016E4  6E9E               	movwf	3998,c	;volatile
  1960                           
  1961                           ;Current_Sense_Main.c: 398: PIR2 = 0b00000000;
  1962  0016E6  0E00               	movlw	0
  1963  0016E8  6EA1               	movwf	4001,c	;volatile
  1964                           
  1965                           ;Current_Sense_Main.c: 399: PIR3 = 0b00000000;
  1966  0016EA  0E00               	movlw	0
  1967  0016EC  6EA4               	movwf	4004,c	;volatile
  1968                           
  1969                           ;Current_Sense_Main.c: 400: PIR4 = 0b00000000;
  1970  0016EE  0E00               	movlw	0
  1971  0016F0  6E7B               	movwf	3963,c	;volatile
  1972                           
  1973                           ;Current_Sense_Main.c: 401: PIR5 = 0b00000000;
  1974  0016F2  0E00               	movlw	0
  1975  0016F4  6E7E               	movwf	3966,c	;volatile
  1976                           
  1977                           ;Current_Sense_Main.c: 403: PIE1 = 0b00000000;
  1978  0016F6  0E00               	movlw	0
  1979  0016F8  6E9D               	movwf	3997,c	;volatile
  1980                           
  1981                           ;Current_Sense_Main.c: 404: PIE2 = 0b00000000;
  1982  0016FA  0E00               	movlw	0
  1983  0016FC  6EA0               	movwf	4000,c	;volatile
  1984                           
  1985                           ;Current_Sense_Main.c: 405: PIE3 = 0b00000000;
  1986  0016FE  0E00               	movlw	0
  1987  001700  6EA3               	movwf	4003,c	;volatile
  1988                           
  1989                           ;Current_Sense_Main.c: 406: PIE4 = 0b00000000;
  1990  001702  0E00               	movlw	0
  1991  001704  6E7A               	movwf	3962,c	;volatile
  1992                           
  1993                           ;Current_Sense_Main.c: 407: PIE5 = 0b00000000;
  1994  001706  0E00               	movlw	0
  1995  001708  6E7D               	movwf	3965,c	;volatile
  1996                           
  1997                           ;Current_Sense_Main.c: 409: IPR1 = 0b00000000;
  1998  00170A  0E00               	movlw	0
  1999  00170C  6E9F               	movwf	3999,c	;volatile
  2000                           
  2001                           ;Current_Sense_Main.c: 410: IPR2 = 0b00000000;
  2002  00170E  0E00               	movlw	0
  2003  001710  6EA2               	movwf	4002,c	;volatile
  2004                           
  2005                           ;Current_Sense_Main.c: 411: IPR3 = 0b00000000;
  2006  001712  0E00               	movlw	0
  2007  001714  6EA5               	movwf	4005,c	;volatile
  2008                           
  2009                           ;Current_Sense_Main.c: 412: IPR4 = 0b00000000;
  2010  001716  0E00               	movlw	0
  2011  001718  6E7C               	movwf	3964,c	;volatile
  2012                           
  2013                           ;Current_Sense_Main.c: 413: IPR5 = 0b00000000;
  2014  00171A  0E00               	movlw	0
  2015  00171C  6E7F               	movwf	3967,c	;volatile
  2016  00171E  0012               	return		;funcret
  2017  001720                     __end_of_initInterruptsClear:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           intcon	equ	0xFF2
  2024                           intcon2	equ	0xFF1
  2025                           intcon3	equ	0xFF0
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1l	equ	0xFE1
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _initIO *****************
  2033 ;; Defined at:
  2034 ;;		line 370 in file "Current_Sense_Main.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2048 ;;      Params:         0       0       0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_init
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text9
  2063  0018E0                     __ptext9:
  2064                           	opt stack 0
  2065  0018E0                     _initIO:
  2066                           	opt stack 28
  2067                           
  2068                           ;Current_Sense_Main.c: 372: ADCON0bits.ADON = 0;
  2069                           
  2070                           ;incstack = 0
  2071  0018E0  90C2               	bcf	4034,0,c	;volatile
  2072                           
  2073                           ;Current_Sense_Main.c: 373: ANSELA = 0b00000000;
  2074  0018E2  0E00               	movlw	0
  2075  0018E4  010F               	movlb	15	; () banked
  2076  0018E6  6F38               	movwf	56,b	;volatile
  2077                           
  2078                           ;Current_Sense_Main.c: 374: ANSELB = 0b00000000;
  2079  0018E8  0E00               	movlw	0
  2080  0018EA  010F               	movlb	15	; () banked
  2081  0018EC  6F39               	movwf	57,b	;volatile
  2082                           
  2083                           ;Current_Sense_Main.c: 375: ANSELC = 0b00000000;
  2084  0018EE  0E00               	movlw	0
  2085  0018F0  010F               	movlb	15	; () banked
  2086  0018F2  6F3A               	movwf	58,b	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;Current_Sense_Main.c: 377: TRISBbits.TRISB4 = 0;
  2090  0018F4  9893               	bcf	3987,4,c	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;Current_Sense_Main.c: 378: LATBbits.LATB4 = 0;
  2094  0018F6  988A               	bcf	3978,4,c	;volatile
  2095                           
  2096                           ; BSR set to: 15
  2097                           ;Current_Sense_Main.c: 380: TRISCbits.TRISC2 = 1;
  2098  0018F8  8494               	bsf	3988,2,c	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;Current_Sense_Main.c: 381: TRISAbits.TRISA1 = 1;
  2102  0018FA  8292               	bsf	3986,1,c	;volatile
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;Current_Sense_Main.c: 382: TRISAbits.TRISA0 = 0;
  2106  0018FC  9092               	bcf	3986,0,c	;volatile
  2107                           
  2108                           ; BSR set to: 15
  2109                           ;Current_Sense_Main.c: 383: LATAbits.LATA0 = 0;
  2110  0018FE  9089               	bcf	3977,0,c	;volatile
  2111  001900  0012               	return	
  2112  001902                     __end_of_initIO:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           intcon	equ	0xFF2
  2119                           intcon2	equ	0xFF1
  2120                           intcon3	equ	0xFF0
  2121                           postinc0	equ	0xFEE
  2122                           wreg	equ	0xFE8
  2123                           postdec1	equ	0xFE5
  2124                           fsr1l	equ	0xFE1
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _communications *****************
  2128 ;; Defined at:
  2129 ;;		line 89 in file "SlaveComm_PIC18.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  firstTime       1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  firstTime       1   56[BANK0 ] unsigned char 
  2134 ;;  no_more_to_s    1   55[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2144 ;;      Params:         0       0       0       0       0       0       0
  2145 ;;      Locals:         0       2       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0
  2147 ;;      Totals:         0       2       0       0       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    7
  2151 ;; This function calls:
  2152 ;;		_SPISlaveInit
  2153 ;;		_process_data
  2154 ;;		_receive_data
  2155 ;;		_resetCommunications
  2156 ;;		_send_data
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text10
  2163  0010E0                     __ptext10:
  2164                           	opt stack 0
  2165  0010E0                     _communications:
  2166                           	opt stack 23
  2167                           
  2168                           ; BSR set to: 15
  2169                           ;incstack = 0
  2170                           ;communications@firstTime stored from wreg
  2171  0010E0  0100               	movlb	0	; () banked
  2172  0010E2  6FF8               	movwf	communications@firstTime& (0+255),b
  2173                           
  2174                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2175                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2176                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2177                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2178                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2179                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2180  0010E4  0100               	movlb	0	; () banked
  2181  0010E6  05F8               	decf	communications@firstTime& (0+255),w,b
  2182  0010E8  A4D8               	btfss	status,2,c
  2183  0010EA  D00F               	goto	l3108
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;SlaveComm_PIC18.c: 101: {
  2187                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2188  0010EC  EC42  F00B         	call	_SPISlaveInit	;wreg free
  2189                           
  2190                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2191  0010F0  0E00               	movlw	0
  2192  0010F2  0100               	movlb	0	; () banked
  2193  0010F4  6F94               	movwf	(communications@send_buffer+40)& (0+255),b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2197  0010F6  0E00               	movlw	0
  2198  0010F8  0100               	movlb	0	; () banked
  2199  0010FA  6F95               	movwf	(communications@send_buffer+41)& (0+255),b
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2203  0010FC  0E6C               	movlw	low communications@send_buffer
  2204  0010FE  6E37               	movwf	resetCommunications@send_buffer,c
  2205  001100  0E00               	movlw	high communications@send_buffer
  2206  001102  6E38               	movwf	resetCommunications@send_buffer+1,c
  2207  001104  EC13  F009         	call	_resetCommunications	;wreg free
  2208                           
  2209                           ;SlaveComm_PIC18.c: 106: }
  2210  001108  0012               	return	
  2211  00110A                     l3108:
  2212                           
  2213                           ;SlaveComm_PIC18.c: 107: else
  2214                           ;SlaveComm_PIC18.c: 108: {
  2215                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2216  00110A  0E96               	movlw	low communications@receive_buffer
  2217  00110C  6E12               	movwf	receive_data@receive_buffer,c
  2218  00110E  0E00               	movlw	high communications@receive_buffer
  2219  001110  6E13               	movwf	receive_data@receive_buffer+1,c
  2220  001112  EC10  F008         	call	_receive_data	;wreg free
  2221  001116  6E44               	movwf	communications@receive_current_state,c
  2222                           
  2223                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2224  001118  D014               	goto	l3116
  2225  00111A                     l3110:
  2226                           
  2227                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2228  00111A  0E96               	movlw	low communications@receive_buffer
  2229  00111C  0100               	movlb	0	; () banked
  2230  00111E  6FC0               	movwf	process_data@receive_buffer& (0+255),b
  2231  001120  0E00               	movlw	high communications@receive_buffer
  2232  001122  0100               	movlb	0	; () banked
  2233  001124  6FC1               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2234  001126  0E6C               	movlw	low communications@send_buffer
  2235  001128  0100               	movlb	0	; () banked
  2236  00112A  6FC2               	movwf	process_data@send_buffer& (0+255),b
  2237  00112C  0E00               	movlw	high communications@send_buffer
  2238  00112E  0100               	movlb	0	; () banked
  2239  001130  6FC3               	movwf	(process_data@send_buffer+1)& (0+255),b
  2240  001132  ECF3  F00B         	call	_process_data	;wreg free
  2241  001136  06E8               	decf	wreg,f,c
  2242  001138  A4D8               	btfss	status,2,c
  2243  00113A  D00D               	goto	l3118
  2244                           
  2245                           ;SlaveComm_PIC18.c: 122: {
  2246                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2247  00113C  0E01               	movlw	1
  2248  00113E  6E45               	movwf	communications@end_of_transmission_received,c
  2249                           
  2250                           ;SlaveComm_PIC18.c: 127: }
  2251                           
  2252                           ;SlaveComm_PIC18.c: 124: }
  2253                           ;SlaveComm_PIC18.c: 126: break;
  2254  001140  D00A               	goto	l3118
  2255  001142                     l3116:
  2256  001142  5044               	movf	communications@receive_current_state,w,c
  2257                           
  2258                           ; Switch size 1, requested type "space"
  2259                           ; Number of cases is 3, Range of values is 0 to 2
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte           10     6 (average)
  2263                           ;	Chosen strategy is simple_byte
  2264  001144  0A00               	xorlw	0	; case 0
  2265  001146  B4D8               	btfsc	status,2,c
  2266  001148  D006               	goto	l3118
  2267  00114A  0A01               	xorlw	1	; case 1
  2268  00114C  B4D8               	btfsc	status,2,c
  2269  00114E  D003               	goto	l3118
  2270  001150  0A03               	xorlw	3	; case 2
  2271  001152  B4D8               	btfsc	status,2,c
  2272  001154  D7E2               	goto	l3110
  2273  001156                     l3118:
  2274                           
  2275                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2276  001156  0E6C               	movlw	low communications@send_buffer
  2277  001158  6E11               	movwf	send_data@send_buffer,c
  2278  00115A  0E00               	movlw	high communications@send_buffer
  2279  00115C  6E12               	movwf	send_data@send_buffer+1,c
  2280  00115E  EC5F  F009         	call	_send_data	;wreg free
  2281  001162  0100               	movlb	0	; () banked
  2282  001164  6FF7               	movwf	communications@no_more_to_send& (0+255),b
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2286                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2287  001166  A081               	btfss	3969,0,c	;volatile
  2288  001168  D003               	goto	l3124
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;SlaveComm_PIC18.c: 134: {
  2292                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2293  00116A  0E00               	movlw	0
  2294  00116C  6E43               	movwf	communications@last_state_active,c
  2295                           
  2296                           ;SlaveComm_PIC18.c: 136: }
  2297  00116E  0012               	return	
  2298  001170                     l3124:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;SlaveComm_PIC18.c: 137: else
  2302                           ;SlaveComm_PIC18.c: 138: {
  2303                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2304  001170  5043               	movf	communications@last_state_active,w,c
  2305  001172  A4D8               	btfss	status,2,c
  2306  001174  D006               	goto	l3128
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;SlaveComm_PIC18.c: 140: {
  2310                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2311  001176  0E6C               	movlw	low communications@send_buffer
  2312  001178  6E37               	movwf	resetCommunications@send_buffer,c
  2313  00117A  0E00               	movlw	high communications@send_buffer
  2314  00117C  6E38               	movwf	resetCommunications@send_buffer+1,c
  2315  00117E  EC13  F009         	call	_resetCommunications	;wreg free
  2316  001182                     l3128:
  2317                           
  2318                           ;SlaveComm_PIC18.c: 142: }
  2319                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2320  001182  0E01               	movlw	1
  2321  001184  6E43               	movwf	communications@last_state_active,c
  2322  001186  0012               	return	
  2323  001188                     __end_of_communications:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           intcon2	equ	0xFF1
  2331                           intcon3	equ	0xFF0
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _send_data *****************
  2339 ;; Defined at:
  2340 ;;		line 485 in file "SlaveComm_PIC18.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  2343 ;;		 -> communications@send_buffer(42), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  send_end        1   20[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      unsigned char 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         2       0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0
  2357 ;;      Temps:          2       0       0       0       0       0       0
  2358 ;;      Totals:         5       0       0       0       0       0       0
  2359 ;;Total ram usage:        5 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		_SPI_send_data
  2364 ;; This function is called by:
  2365 ;;		_communications
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text11
  2370  0012BE                     __ptext11:
  2371                           	opt stack 0
  2372  0012BE                     _send_data:
  2373                           	opt stack 27
  2374                           
  2375                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2376                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2377                           
  2378                           ;incstack = 0
  2379  0012BE  EE20 F028          	lfsr	2,40
  2380  0012C2  5011               	movf	send_data@send_buffer,w,c
  2381  0012C4  26D9               	addwf	fsr2l,f,c
  2382  0012C6  5012               	movf	send_data@send_buffer+1,w,c
  2383  0012C8  22DA               	addwfc	fsr2h,f,c
  2384  0012CA  EE10 F029          	lfsr	1,41
  2385  0012CE  5011               	movf	send_data@send_buffer,w,c
  2386  0012D0  26E1               	addwf	fsr1l,f,c
  2387  0012D2  5012               	movf	send_data@send_buffer+1,w,c
  2388  0012D4  22E2               	addwfc	fsr1h,f,c
  2389  0012D6  50DE               	movf	postinc2,w,c
  2390  0012D8  18E6               	xorwf	postinc1,w,c
  2391  0012DA  A4D8               	btfss	status,2,c
  2392  0012DC  D006               	goto	l3070
  2393                           
  2394                           ;SlaveComm_PIC18.c: 490: {
  2395                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2396  0012DE  0E01               	movlw	1
  2397  0012E0  6E15               	movwf	send_data@send_end,c
  2398                           
  2399                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2400  0012E2  0E00               	movlw	0
  2401  0012E4  EC81  F00C         	call	_SPI_send_data
  2402                           
  2403                           ;SlaveComm_PIC18.c: 493: }
  2404  0012E8  D030               	goto	l3078
  2405  0012EA                     l3070:
  2406                           
  2407                           ;SlaveComm_PIC18.c: 494: else
  2408                           ;SlaveComm_PIC18.c: 495: {
  2409                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2410  0012EA  0E00               	movlw	0
  2411  0012EC  6E15               	movwf	send_data@send_end,c
  2412                           
  2413                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2414  0012EE  EE20 F029          	lfsr	2,41
  2415  0012F2  5011               	movf	send_data@send_buffer,w,c
  2416  0012F4  26D9               	addwf	fsr2l,f,c
  2417  0012F6  5012               	movf	send_data@send_buffer+1,w,c
  2418  0012F8  22DA               	addwfc	fsr2h,f,c
  2419  0012FA  50DF               	movf	indf2,w,c
  2420  0012FC  6E13               	movwf	??_send_data& (0+255),c
  2421  0012FE  5013               	movf	??_send_data,w,c
  2422  001300  0D01               	mullw	1
  2423  001302  50F3               	movf	prodl,w,c
  2424  001304  2411               	addwf	send_data@send_buffer,w,c
  2425  001306  6ED9               	movwf	fsr2l,c
  2426  001308  50F4               	movf	prodh,w,c
  2427  00130A  2012               	addwfc	send_data@send_buffer+1,w,c
  2428  00130C  6EDA               	movwf	fsr2h,c
  2429  00130E  50DF               	movf	indf2,w,c
  2430  001310  EC81  F00C         	call	_SPI_send_data
  2431  001314  06E8               	decf	wreg,f,c
  2432  001316  A4D8               	btfss	status,2,c
  2433  001318  D018               	goto	l3078
  2434                           
  2435                           ;SlaveComm_PIC18.c: 500: {
  2436                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2437  00131A  EE20 F029          	lfsr	2,41
  2438  00131E  5011               	movf	send_data@send_buffer,w,c
  2439  001320  26D9               	addwf	fsr2l,f,c
  2440  001322  5012               	movf	send_data@send_buffer+1,w,c
  2441  001324  22DA               	addwfc	fsr2h,f,c
  2442  001326  2ADF               	incf	indf2,f,c
  2443                           
  2444                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2445  001328  EE20 F029          	lfsr	2,41
  2446  00132C  5011               	movf	send_data@send_buffer,w,c
  2447  00132E  26D9               	addwf	fsr2l,f,c
  2448  001330  5012               	movf	send_data@send_buffer+1,w,c
  2449  001332  22DA               	addwfc	fsr2h,f,c
  2450  001334  0E27               	movlw	39
  2451  001336  64DF               	cpfsgt	indf2,c
  2452  001338  D008               	goto	l3078
  2453                           
  2454                           ;SlaveComm_PIC18.c: 504: {
  2455                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2456  00133A  EE20 F029          	lfsr	2,41
  2457  00133E  5011               	movf	send_data@send_buffer,w,c
  2458  001340  26D9               	addwf	fsr2l,f,c
  2459  001342  5012               	movf	send_data@send_buffer+1,w,c
  2460  001344  22DA               	addwfc	fsr2h,f,c
  2461  001346  0E00               	movlw	0
  2462  001348  6EDF               	movwf	indf2,c
  2463  00134A                     l3078:
  2464                           
  2465                           ;SlaveComm_PIC18.c: 506: }
  2466                           ;SlaveComm_PIC18.c: 507: }
  2467                           ;SlaveComm_PIC18.c: 508: }
  2468                           ;SlaveComm_PIC18.c: 510: return send_end;
  2469  00134A  5015               	movf	send_data@send_end,w,c
  2470  00134C  0012               	return	
  2471  00134E                     __end_of_send_data:
  2472                           	opt stack 0
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           intcon	equ	0xFF2
  2480                           intcon2	equ	0xFF1
  2481                           intcon3	equ	0xFF0
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           postinc1	equ	0xFE6
  2485                           postdec1	equ	0xFE5
  2486                           fsr1h	equ	0xFE2
  2487                           fsr1l	equ	0xFE1
  2488                           indf2	equ	0xFDF
  2489                           postinc2	equ	0xFDE
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _SPI_send_data *****************
  2495 ;; Defined at:
  2496 ;;		line 583 in file "SlaveComm_PIC18.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  data            1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  data            1   14[COMRAM] unsigned char 
  2501 ;;  sendGood        1   15[COMRAM] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      unsigned char 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2511 ;;      Params:         0       0       0       0       0       0       0
  2512 ;;      Locals:         2       0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0
  2514 ;;      Totals:         2       0       0       0       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_send_data
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text12
  2526  001902                     __ptext12:
  2527                           	opt stack 0
  2528  001902                     _SPI_send_data:
  2529                           	opt stack 27
  2530                           
  2531                           ;incstack = 0
  2532                           ;SPI_send_data@data stored from wreg
  2533  001902  6E0F               	movwf	SPI_send_data@data,c
  2534                           
  2535                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2536  001904  0E00               	movlw	0
  2537  001906  6E10               	movwf	SPI_send_data@sendGood,c
  2538                           
  2539                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  2540  001908  5046               	movf	_SPI_transmit_wait,w,c
  2541  00190A  A4D8               	btfss	status,2,c
  2542  00190C  D006               	goto	l2914
  2543                           
  2544                           ;SlaveComm_PIC18.c: 588: {
  2545                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  2546  00190E  C00F  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2547                           
  2548                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  2549  001912  0E01               	movlw	1
  2550  001914  6E46               	movwf	_SPI_transmit_wait,c
  2551                           
  2552                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  2553  001916  0E01               	movlw	1
  2554  001918  D001               	goto	L1
  2555  00191A                     l2914:
  2556                           
  2557                           ;SlaveComm_PIC18.c: 593: else
  2558                           ;SlaveComm_PIC18.c: 594: {
  2559                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  2560  00191A  0E00               	movlw	0
  2561  00191C                     L1:
  2562  00191C  6E10               	movwf	SPI_send_data@sendGood,c
  2563                           
  2564                           ;SlaveComm_PIC18.c: 596: }
  2565                           ;SlaveComm_PIC18.c: 598: return sendGood;
  2566  00191E  5010               	movf	SPI_send_data@sendGood,w,c
  2567  001920  0012               	return	
  2568  001922                     __end_of_SPI_send_data:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           intcon	equ	0xFF2
  2577                           intcon2	equ	0xFF1
  2578                           intcon3	equ	0xFF0
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           postinc1	equ	0xFE6
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           postinc2	equ	0xFDE
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _resetCommunications *****************
  2592 ;; Defined at:
  2593 ;;		line 152 in file "SlaveComm_PIC18.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  2596 ;;		 -> communications@send_buffer(42), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2608 ;;      Params:         2       0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0
  2610 ;;      Temps:          2       0       0       0       0       0       0
  2611 ;;      Totals:         4       0       0       0       0       0       0
  2612 ;;Total ram usage:        4 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    5
  2615 ;; This function calls:
  2616 ;;		_com_command_setEnergyUsed
  2617 ;;		_com_command_setPower
  2618 ;;		_com_command_setVersion
  2619 ;; This function is called by:
  2620 ;;		_communications
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text13
  2625  001226                     __ptext13:
  2626                           	opt stack 0
  2627  001226                     _resetCommunications:
  2628                           	opt stack 24
  2629                           
  2630                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2631                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2632                           
  2633                           ;incstack = 0
  2634  001226  9A6C               	bcf	3948,5,c	;volatile
  2635                           
  2636                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  2637  001228  0E06               	movlw	6
  2638  00122A  6E39               	movwf	??_resetCommunications& (0+255),c
  2639  00122C  0E30               	movlw	48
  2640  00122E                     u2857:
  2641  00122E  2EE8               	decfsz	wreg,f,c
  2642  001230  D7FE               	bra	u2857
  2643  001232  2E39               	decfsz	??_resetCommunications& (0+255),f,c
  2644  001234  D7FC               	bra	u2857
  2645  001236  D000               	nop2	
  2646                           
  2647                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  2648  001238  8A6C               	bsf	3948,5,c	;volatile
  2649                           
  2650                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  2651  00123A  9E6C               	bcf	3948,7,c	;volatile
  2652                           
  2653                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  2654  00123C  0E00               	movlw	0
  2655  00123E  6E46               	movwf	_SPI_transmit_wait,c
  2656                           
  2657                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  2658  001240  EE20 F029          	lfsr	2,41
  2659  001244  5037               	movf	resetCommunications@send_buffer,w,c
  2660  001246  26D9               	addwf	fsr2l,f,c
  2661  001248  5038               	movf	resetCommunications@send_buffer+1,w,c
  2662  00124A  22DA               	addwfc	fsr2h,f,c
  2663  00124C  0E00               	movlw	0
  2664  00124E  6EDF               	movwf	indf2,c
  2665                           
  2666                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  2667  001250  EE20 F028          	lfsr	2,40
  2668  001254  5037               	movf	resetCommunications@send_buffer,w,c
  2669  001256  26D9               	addwf	fsr2l,f,c
  2670  001258  5038               	movf	resetCommunications@send_buffer+1,w,c
  2671  00125A  22DA               	addwfc	fsr2h,f,c
  2672  00125C  0E00               	movlw	0
  2673  00125E  6EDF               	movwf	indf2,c
  2674                           
  2675                           ;SlaveComm_PIC18.c: 171: commState++;
  2676  001260  4A40               	infsnz	resetCommunications@commState,f,c
  2677  001262  2A41               	incf	resetCommunications@commState+1,f,c
  2678                           
  2679                           ;SlaveComm_PIC18.c: 172: switch (commState)
  2680  001264  D019               	goto	l3016
  2681  001266                     l3006:
  2682                           
  2683                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  2684  001266  C037  F023         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2685  00126A  C038  F024         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2686  00126E  EC38  F00C         	call	_com_command_setVersion	;wreg free
  2687                           
  2688                           ;SlaveComm_PIC18.c: 176: break;
  2689  001272  0012               	return	
  2690  001274                     l3008:
  2691                           
  2692                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  2693  001274  C037  F029         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2694  001278  C038  F02A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2695  00127C  EC90  F00B         	call	_com_command_setPower	;wreg free
  2696                           
  2697                           ;SlaveComm_PIC18.c: 179: break;
  2698  001280  0012               	return	
  2699  001282                     l3010:
  2700                           
  2701                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  2702  001282  C037  F029         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2703  001286  C038  F02A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2704  00128A  ECB5  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2705  00128E                     l3012:
  2706                           
  2707                           ;SlaveComm_PIC18.c: 193: commState = 0;
  2708  00128E  0E00               	movlw	0
  2709  001290  6E41               	movwf	resetCommunications@commState+1,c
  2710  001292  0E00               	movlw	0
  2711  001294  6E40               	movwf	resetCommunications@commState,c
  2712                           
  2713                           ;SlaveComm_PIC18.c: 195: }
  2714                           
  2715                           ;SlaveComm_PIC18.c: 194: break;
  2716  001296  0012               	return	
  2717  001298                     l3016:
  2718  001298  C040  F039         	movff	resetCommunications@commState,??_resetCommunications
  2719  00129C  C041  F03A         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2720                           
  2721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2722                           ; Switch size 1, requested type "space"
  2723                           ; Number of cases is 1, Range of values is 0 to 0
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte            4     3 (average)
  2727                           ;	Chosen strategy is simple_byte
  2728  0012A0  503A               	movf	??_resetCommunications+1,w,c
  2729  0012A2  0A00               	xorlw	0	; case 0
  2730  0012A4  A4D8               	btfss	status,2,c
  2731  0012A6  D7F3               	goto	l3012
  2732                           
  2733                           ; Switch size 1, requested type "space"
  2734                           ; Number of cases is 3, Range of values is 1 to 3
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte           10     6 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  0012A8  5039               	movf	??_resetCommunications,w,c
  2740  0012AA  0A01               	xorlw	1	; case 1
  2741  0012AC  B4D8               	btfsc	status,2,c
  2742  0012AE  D7DB               	goto	l3006
  2743  0012B0  0A03               	xorlw	3	; case 2
  2744  0012B2  B4D8               	btfsc	status,2,c
  2745  0012B4  D7DF               	goto	l3008
  2746  0012B6  0A01               	xorlw	1	; case 3
  2747  0012B8  B4D8               	btfsc	status,2,c
  2748  0012BA  D7E3               	goto	l3010
  2749  0012BC  D7E8               	goto	l3012
  2750  0012BE                     __end_of_resetCommunications:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           intcon	equ	0xFF2
  2759                           intcon2	equ	0xFF1
  2760                           intcon3	equ	0xFF0
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postinc1	equ	0xFE6
  2764                           postdec1	equ	0xFE5
  2765                           fsr1h	equ	0xFE2
  2766                           fsr1l	equ	0xFE1
  2767                           indf2	equ	0xFDF
  2768                           postinc2	equ	0xFDE
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _com_command_setVersion *****************
  2774 ;; Defined at:
  2775 ;;		line 663 in file "SlaveComm_PIC18.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2778 ;;		 -> communications@send_buffer(42), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         2       0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    4
  2797 ;; This function calls:
  2798 ;;		_command_builder3
  2799 ;; This function is called by:
  2800 ;;		_resetCommunications
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text14
  2805  001870                     __ptext14:
  2806                           	opt stack 0
  2807  001870                     _com_command_setVersion:
  2808                           	opt stack 24
  2809                           
  2810                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  2811                           
  2812                           ;incstack = 0
  2813  001870  C023  F01B         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2814  001874  C024  F01C         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2815  001878  0E57               	movlw	low STR_2
  2816  00187A  6E1D               	movwf	command_builder3@data1,c
  2817  00187C  0E06               	movlw	high STR_2
  2818  00187E  6E1E               	movwf	command_builder3@data1+1,c
  2819  001880  0E0D               	movlw	low STR_22
  2820  001882  6E1F               	movwf	command_builder3@data2,c
  2821  001884  0E06               	movlw	high STR_22
  2822  001886  6E20               	movwf	command_builder3@data2+1,c
  2823  001888  0E4B               	movlw	low STR_40
  2824  00188A  6E21               	movwf	command_builder3@data3,c
  2825  00188C  0E06               	movlw	high STR_40
  2826  00188E  6E22               	movwf	command_builder3@data3+1,c
  2827  001890  ECC4  F008         	call	_command_builder3	;wreg free
  2828  001894  0012               	return		;funcret
  2829  001896                     __end_of_com_command_setVersion:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           intcon	equ	0xFF2
  2838                           intcon2	equ	0xFF1
  2839                           intcon3	equ	0xFF0
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postinc1	equ	0xFE6
  2843                           postdec1	equ	0xFE5
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _com_command_setPower *****************
  2853 ;; Defined at:
  2854 ;;		line 618 in file "SlaveComm_PIC18.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  send_buffer     2   40[COMRAM] PTR struct buffer
  2857 ;;		 -> communications@send_buffer(42), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  temp           12   42[COMRAM] unsigned char [12]
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2869 ;;      Params:         2       0       0       0       0       0       0
  2870 ;;      Locals:        12       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0
  2872 ;;      Totals:        14       0       0       0       0       0       0
  2873 ;;Total ram usage:       14 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    4
  2876 ;; This function calls:
  2877 ;;		_command_builder3
  2878 ;;		_ultoa
  2879 ;; This function is called by:
  2880 ;;		_resetCommunications
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text15
  2885  001720                     __ptext15:
  2886                           	opt stack 0
  2887  001720                     _com_command_setPower:
  2888                           	opt stack 24
  2889                           
  2890                           ;SlaveComm_PIC18.c: 621: char temp[12];
  2891                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  2892                           
  2893                           ;incstack = 0
  2894  001720  0E2B               	movlw	low com_command_setPower@temp
  2895  001722  6E1C               	movwf	ultoa@buf,c
  2896  001724  0E00               	movlw	high com_command_setPower@temp
  2897  001726  6E1D               	movwf	ultoa@buf+1,c
  2898  001728  C068  F01E         	movff	_meterWatts,ultoa@val
  2899  00172C  C069  F01F         	movff	_meterWatts+1,ultoa@val+1
  2900  001730  C06A  F020         	movff	_meterWatts+2,ultoa@val+2
  2901  001734  C06B  F021         	movff	_meterWatts+3,ultoa@val+3
  2902  001738  0E00               	movlw	0
  2903  00173A  6E23               	movwf	ultoa@base+1,c
  2904  00173C  0E0A               	movlw	10
  2905  00173E  6E22               	movwf	ultoa@base,c
  2906  001740  EC2D  F007         	call	_ultoa	;wreg free
  2907                           
  2908                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  2909  001744  C029  F01B         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2910  001748  C02A  F01C         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2911  00174C  0E57               	movlw	low STR_2
  2912  00174E  6E1D               	movwf	command_builder3@data1,c
  2913  001750  0E06               	movlw	high STR_2
  2914  001752  6E1E               	movwf	command_builder3@data1+1,c
  2915  001754  0E24               	movlw	low STR_18
  2916  001756  6E1F               	movwf	command_builder3@data2,c
  2917  001758  0E06               	movlw	high STR_18
  2918  00175A  6E20               	movwf	command_builder3@data2+1,c
  2919  00175C  0E2B               	movlw	low com_command_setPower@temp
  2920  00175E  6E21               	movwf	command_builder3@data3,c
  2921  001760  0E00               	movlw	high com_command_setPower@temp
  2922  001762  6E22               	movwf	command_builder3@data3+1,c
  2923  001764  ECC4  F008         	call	_command_builder3	;wreg free
  2924  001768  0012               	return	
  2925  00176A                     __end_of_com_command_setPower:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           intcon2	equ	0xFF1
  2935                           intcon3	equ	0xFF0
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           postinc1	equ	0xFE6
  2939                           postdec1	equ	0xFE5
  2940                           fsr1h	equ	0xFE2
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           postinc2	equ	0xFDE
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _receive_data *****************
  2949 ;; Defined at:
  2950 ;;		line 199 in file "SlaveComm_PIC18.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  receive_buff    2   17[COMRAM] PTR struct buffer
  2953 ;;		 -> communications@receive_buffer(42), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  data            1   20[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      enum E6747
  2958 ;; Registers used:
  2959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         2       0       0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0
  2967 ;;      Temps:          1       0       0       0       0       0       0
  2968 ;;      Totals:         4       0       0       0       0       0       0
  2969 ;;Total ram usage:        4 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    2
  2972 ;; This function calls:
  2973 ;;		_SPI_receive_data
  2974 ;; This function is called by:
  2975 ;;		_communications
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text16
  2980  001020                     __ptext16:
  2981                           	opt stack 0
  2982  001020                     _receive_data:
  2983                           	opt stack 27
  2984                           
  2985                           ;SlaveComm_PIC18.c: 201: char data;
  2986                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  2987                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  2988                           
  2989                           ;incstack = 0
  2990  001020  0E02               	movlw	2
  2991  001022  1842               	xorwf	receive_data@my_status,w,c
  2992  001024  A4D8               	btfss	status,2,c
  2993  001026  D002               	goto	l3026
  2994                           
  2995                           ;SlaveComm_PIC18.c: 206: {
  2996                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  2997  001028  0E00               	movlw	0
  2998  00102A  6E42               	movwf	receive_data@my_status,c
  2999  00102C                     l3026:
  3000                           
  3001                           ;SlaveComm_PIC18.c: 208: }
  3002                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3003  00102C  0E15               	movlw	low receive_data@data
  3004  00102E  6E0F               	movwf	SPI_receive_data@data,c
  3005  001030  0E00               	movlw	high receive_data@data
  3006  001032  6E10               	movwf	SPI_receive_data@data+1,c
  3007  001034  EC24  F00C         	call	_SPI_receive_data	;wreg free
  3008  001038  06E8               	decf	wreg,f,c
  3009  00103A  A4D8               	btfss	status,2,c
  3010  00103C  D04F               	goto	l299
  3011                           
  3012                           ;SlaveComm_PIC18.c: 211: {
  3013                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3014  00103E  0E21               	movlw	33
  3015  001040  1815               	xorwf	receive_data@data,w,c
  3016  001042  A4D8               	btfss	status,2,c
  3017  001044  D015               	goto	l3038
  3018  001046  0442               	decf	receive_data@my_status,w,c
  3019  001048  B4D8               	btfsc	status,2,c
  3020  00104A  D012               	goto	l3038
  3021                           
  3022                           ;SlaveComm_PIC18.c: 213: {
  3023                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3024  00104C  0E01               	movlw	1
  3025  00104E  6E42               	movwf	receive_data@my_status,c
  3026                           
  3027                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3028  001050  EE20 F029          	lfsr	2,41
  3029  001054  5012               	movf	receive_data@receive_buffer,w,c
  3030  001056  26D9               	addwf	fsr2l,f,c
  3031  001058  5013               	movf	receive_data@receive_buffer+1,w,c
  3032  00105A  22DA               	addwfc	fsr2h,f,c
  3033  00105C  0E00               	movlw	0
  3034  00105E  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3037  001060  EE20 F028          	lfsr	2,40
  3038  001064  5012               	movf	receive_data@receive_buffer,w,c
  3039  001066  26D9               	addwf	fsr2l,f,c
  3040  001068  5013               	movf	receive_data@receive_buffer+1,w,c
  3041  00106A  22DA               	addwfc	fsr2h,f,c
  3042  00106C  0E00               	movlw	0
  3043  00106E  6EDF               	movwf	indf2,c
  3044  001070                     l3038:
  3045                           
  3046                           ;SlaveComm_PIC18.c: 217: }
  3047                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3048  001070  0442               	decf	receive_data@my_status,w,c
  3049  001072  A4D8               	btfss	status,2,c
  3050  001074  D02A               	goto	l3048
  3051                           
  3052                           ;SlaveComm_PIC18.c: 220: {
  3053                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3054  001076  EE20 F028          	lfsr	2,40
  3055  00107A  5012               	movf	receive_data@receive_buffer,w,c
  3056  00107C  26D9               	addwf	fsr2l,f,c
  3057  00107E  5013               	movf	receive_data@receive_buffer+1,w,c
  3058  001080  22DA               	addwfc	fsr2h,f,c
  3059  001082  50DF               	movf	indf2,w,c
  3060  001084  6E14               	movwf	??_receive_data& (0+255),c
  3061  001086  5014               	movf	??_receive_data,w,c
  3062  001088  0D01               	mullw	1
  3063  00108A  50F3               	movf	prodl,w,c
  3064  00108C  2412               	addwf	receive_data@receive_buffer,w,c
  3065  00108E  6ED9               	movwf	fsr2l,c
  3066  001090  50F4               	movf	prodh,w,c
  3067  001092  2013               	addwfc	receive_data@receive_buffer+1,w,c
  3068  001094  6EDA               	movwf	fsr2h,c
  3069  001096  C015  FFDF         	movff	receive_data@data,indf2
  3070                           
  3071                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3072  00109A  EE20 F028          	lfsr	2,40
  3073  00109E  5012               	movf	receive_data@receive_buffer,w,c
  3074  0010A0  26D9               	addwf	fsr2l,f,c
  3075  0010A2  5013               	movf	receive_data@receive_buffer+1,w,c
  3076  0010A4  22DA               	addwfc	fsr2h,f,c
  3077  0010A6  2ADF               	incf	indf2,f,c
  3078                           
  3079                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3080  0010A8  EE20 F028          	lfsr	2,40
  3081  0010AC  5012               	movf	receive_data@receive_buffer,w,c
  3082  0010AE  26D9               	addwf	fsr2l,f,c
  3083  0010B0  5013               	movf	receive_data@receive_buffer+1,w,c
  3084  0010B2  22DA               	addwfc	fsr2h,f,c
  3085  0010B4  0E27               	movlw	39
  3086  0010B6  64DF               	cpfsgt	indf2,c
  3087  0010B8  D008               	goto	l3048
  3088                           
  3089                           ;SlaveComm_PIC18.c: 225: {
  3090                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3091  0010BA  EE20 F028          	lfsr	2,40
  3092  0010BE  5012               	movf	receive_data@receive_buffer,w,c
  3093  0010C0  26D9               	addwf	fsr2l,f,c
  3094  0010C2  5013               	movf	receive_data@receive_buffer+1,w,c
  3095  0010C4  22DA               	addwfc	fsr2h,f,c
  3096  0010C6  0E27               	movlw	39
  3097  0010C8  6EDF               	movwf	indf2,c
  3098  0010CA                     l3048:
  3099                           
  3100                           ;SlaveComm_PIC18.c: 227: }
  3101                           ;SlaveComm_PIC18.c: 228: }
  3102                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3103  0010CA  0442               	decf	receive_data@my_status,w,c
  3104  0010CC  A4D8               	btfss	status,2,c
  3105  0010CE  D006               	goto	l299
  3106  0010D0  0E2A               	movlw	42
  3107  0010D2  1815               	xorwf	receive_data@data,w,c
  3108  0010D4  A4D8               	btfss	status,2,c
  3109  0010D6  D002               	goto	l299
  3110                           
  3111                           ;SlaveComm_PIC18.c: 231: {
  3112                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3113  0010D8  0E02               	movlw	2
  3114  0010DA  6E42               	movwf	receive_data@my_status,c
  3115  0010DC                     l299:
  3116                           
  3117                           ;SlaveComm_PIC18.c: 233: }
  3118                           ;SlaveComm_PIC18.c: 234: }
  3119                           ;SlaveComm_PIC18.c: 236: return my_status;
  3120  0010DC  5042               	movf	receive_data@my_status,w,c
  3121  0010DE  0012               	return	
  3122  0010E0                     __end_of_receive_data:
  3123                           	opt stack 0
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           intcon2	equ	0xFF1
  3132                           intcon3	equ	0xFF0
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           postinc1	equ	0xFE6
  3136                           postdec1	equ	0xFE5
  3137                           fsr1h	equ	0xFE2
  3138                           fsr1l	equ	0xFE1
  3139                           indf2	equ	0xFDF
  3140                           postinc2	equ	0xFDE
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _SPI_receive_data *****************
  3146 ;; Defined at:
  3147 ;;		line 562 in file "SlaveComm_PIC18.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  data            2   14[COMRAM] PTR unsigned char 
  3150 ;;		 -> receive_data@data(1), 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  recvGood        1   16[COMRAM] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      unsigned char 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr2l, fsr2h, status,2
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3162 ;;      Params:         2       0       0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0
  3165 ;;      Totals:         3       0       0       0       0       0       0
  3166 ;;Total ram usage:        3 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_receive_data
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text17
  3177  001848                     __ptext17:
  3178                           	opt stack 0
  3179  001848                     _SPI_receive_data:
  3180                           	opt stack 27
  3181                           
  3182                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3183                           
  3184                           ;incstack = 0
  3185  001848  0E00               	movlw	0
  3186  00184A  6E11               	movwf	SPI_receive_data@recvGood,c
  3187                           
  3188                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3189  00184C  A06D               	btfss	3949,0,c	;volatile
  3190  00184E  D00C               	goto	l2796
  3191                           
  3192                           ;SlaveComm_PIC18.c: 568: {
  3193                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3194  001850  C00F  FFD9         	movff	SPI_receive_data@data,fsr2l
  3195  001854  C010  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3196  001858  CF6F FFDF          	movff	3951,indf2	;volatile
  3197                           
  3198                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3199  00185C  0E01               	movlw	1
  3200  00185E  6E11               	movwf	SPI_receive_data@recvGood,c
  3201                           
  3202                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3203  001860  9E6C               	bcf	3948,7,c	;volatile
  3204                           
  3205                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3206  001862  0E00               	movlw	0
  3207  001864  6E46               	movwf	_SPI_transmit_wait,c
  3208                           
  3209                           ;SlaveComm_PIC18.c: 573: }
  3210  001866  D002               	goto	l406
  3211  001868                     l2796:
  3212                           
  3213                           ;SlaveComm_PIC18.c: 574: else
  3214                           ;SlaveComm_PIC18.c: 575: {
  3215                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3216  001868  0E00               	movlw	0
  3217  00186A  6E11               	movwf	SPI_receive_data@recvGood,c
  3218  00186C                     l406:
  3219                           
  3220                           ;SlaveComm_PIC18.c: 577: }
  3221                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3222  00186C  5011               	movf	SPI_receive_data@recvGood,w,c
  3223  00186E  0012               	return	
  3224  001870                     __end_of_SPI_receive_data:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           intcon	equ	0xFF2
  3233                           intcon2	equ	0xFF1
  3234                           intcon3	equ	0xFF0
  3235                           postinc0	equ	0xFEE
  3236                           wreg	equ	0xFE8
  3237                           postinc1	equ	0xFE6
  3238                           postdec1	equ	0xFE5
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           postinc2	equ	0xFDE
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _process_data *****************
  3248 ;; Defined at:
  3249 ;;		line 239 in file "SlaveComm_PIC18.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  receive_buff    2    0[BANK0 ] PTR struct buffer
  3252 ;;		 -> communications@receive_buffer(42), 
  3253 ;;  send_buffer     2    2[BANK0 ] PTR struct buffer
  3254 ;;		 -> communications@send_buffer(42), 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  parameters     50    4[BANK0 ] unsigned char [10][5]
  3257 ;;  end_of_trans    1   54[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      unsigned char 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3267 ;;      Params:         0       4       0       0       0       0       0
  3268 ;;      Locals:         0      51       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0
  3270 ;;      Totals:         0      55       0       0       0       0       0
  3271 ;;Total ram usage:       55 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    6
  3274 ;; This function calls:
  3275 ;;		_process_data_parameterize
  3276 ;;		_process_data_parameters
  3277 ;; This function is called by:
  3278 ;;		_communications
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text18
  3283  0017E6                     __ptext18:
  3284                           	opt stack 0
  3285  0017E6                     _process_data:
  3286                           	opt stack 23
  3287                           
  3288                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3289                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3290                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3291                           
  3292                           ;incstack = 0
  3293  0017E6  0EC4               	movlw	low process_data@parameters
  3294  0017E8  6E15               	movwf	process_data_parameterize@parameters,c
  3295  0017EA  0E00               	movlw	high process_data@parameters
  3296  0017EC  6E16               	movwf	process_data_parameterize@parameters+1,c
  3297  0017EE  C0C0  F017         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3298  0017F2  C0C1  F018         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3299  0017F6  EC5B  F005         	call	_process_data_parameterize	;wreg free
  3300                           
  3301                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3302  0017FA  0EC4               	movlw	low process_data@parameters
  3303  0017FC  6E37               	movwf	process_data_parameters@parameters,c
  3304  0017FE  0E00               	movlw	high process_data@parameters
  3305  001800  6E38               	movwf	process_data_parameters@parameters+1,c
  3306  001802  C0C2  F039         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3307  001806  C0C3  F03A         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3308  00180A  EC30  F003         	call	_process_data_parameters	;wreg free
  3309  00180E  0100               	movlb	0	; () banked
  3310  001810  6FF6               	movwf	process_data@end_of_transmission_received& (0+255),b
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3314  001812  0100               	movlb	0	; () banked
  3315  001814  51F6               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3316  001816  0012               	return	
  3317  001818                     __end_of_process_data:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           intcon2	equ	0xFF1
  3327                           intcon3	equ	0xFF0
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postinc1	equ	0xFE6
  3331                           postdec1	equ	0xFE5
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _process_data_parameters *****************
  3341 ;; Defined at:
  3342 ;;		line 315 in file "SlaveComm_PIC18.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  parameters      2   54[COMRAM] PTR unsigned char [10]
  3345 ;;		 -> process_data@parameters(50), 
  3346 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  3347 ;;		 -> communications@send_buffer(42), 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  end_of_trans    1   58[COMRAM] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      unsigned char 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         4       0       0       0       0       0       0
  3360 ;;      Locals:         1       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0
  3362 ;;      Totals:         5       0       0       0       0       0       0
  3363 ;;Total ram usage:        5 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    5
  3366 ;; This function calls:
  3367 ;;		_atol
  3368 ;;		_com_command_setEnergyUsed
  3369 ;;		_command_builder3
  3370 ;;		_send_end_of_transmission
  3371 ;;		_strmatch
  3372 ;; This function is called by:
  3373 ;;		_process_data
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text19
  3378  000660                     __ptext19:
  3379                           	opt stack 0
  3380  000660                     _process_data_parameters:
  3381                           	opt stack 23
  3382                           
  3383                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;incstack = 0
  3387  000660  0E00               	movlw	0
  3388  000662  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  3389                           
  3390                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3391  000664  C037  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3392  000668  C038  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3393  00066C  0E4F               	movlw	low STR_1
  3394  00066E  6E1C               	movwf	strmatch@b,c
  3395  000670  0E06               	movlw	high STR_1
  3396  000672  6E1D               	movwf	strmatch@b+1,c
  3397  000674  EC0C  F00C         	call	_strmatch	;wreg free
  3398  000678  06E8               	decf	wreg,f,c
  3399  00067A  A4D8               	btfss	status,2,c
  3400  00067C  D003               	goto	l2848
  3401                           
  3402                           ;SlaveComm_PIC18.c: 321: {
  3403                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3404  00067E  0E01               	movlw	1
  3405  000680  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  3406                           
  3407                           ;SlaveComm_PIC18.c: 332: }
  3408  000682  D13F               	goto	l2902
  3409  000684                     l2848:
  3410                           
  3411                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3412  000684  C037  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3413  000688  C038  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3414  00068C  0E57               	movlw	low STR_2
  3415  00068E  6E1C               	movwf	strmatch@b,c
  3416  000690  0E06               	movlw	high STR_2
  3417  000692  6E1D               	movwf	strmatch@b+1,c
  3418  000694  EC0C  F00C         	call	_strmatch	;wreg free
  3419  000698  06E8               	decf	wreg,f,c
  3420  00069A  A4D8               	btfss	status,2,c
  3421  00069C  D035               	goto	l2860
  3422                           
  3423                           ;SlaveComm_PIC18.c: 334: {
  3424                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3425  00069E  0E0A               	movlw	10
  3426  0006A0  2437               	addwf	process_data_parameters@parameters,w,c
  3427  0006A2  6E1A               	movwf	strmatch@a,c
  3428  0006A4  0E00               	movlw	0
  3429  0006A6  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3430  0006A8  6E1B               	movwf	strmatch@a+1,c
  3431  0006AA  0E01               	movlw	low STR_3
  3432  0006AC  6E1C               	movwf	strmatch@b,c
  3433  0006AE  0E06               	movlw	high STR_3
  3434  0006B0  6E1D               	movwf	strmatch@b+1,c
  3435  0006B2  EC0C  F00C         	call	_strmatch	;wreg free
  3436  0006B6  06E8               	decf	wreg,f,c
  3437  0006B8  B4D8               	btfsc	status,2,c
  3438  0006BA  D123               	goto	l2902
  3439                           
  3440                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3441                           
  3442                           ;SlaveComm_PIC18.c: 336: {
  3443                           ;SlaveComm_PIC18.c: 338: }
  3444  0006BC  0E0A               	movlw	10
  3445  0006BE  2437               	addwf	process_data_parameters@parameters,w,c
  3446  0006C0  6E1A               	movwf	strmatch@a,c
  3447  0006C2  0E00               	movlw	0
  3448  0006C4  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3449  0006C6  6E1B               	movwf	strmatch@a+1,c
  3450  0006C8  0E17               	movlw	low STR_4
  3451  0006CA  6E1C               	movwf	strmatch@b,c
  3452  0006CC  0E06               	movlw	high STR_4
  3453  0006CE  6E1D               	movwf	strmatch@b+1,c
  3454  0006D0  EC0C  F00C         	call	_strmatch	;wreg free
  3455  0006D4  06E8               	decf	wreg,f,c
  3456  0006D6  A4D8               	btfss	status,2,c
  3457  0006D8  D114               	goto	l2902
  3458                           
  3459                           ;SlaveComm_PIC18.c: 340: {
  3460                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3461  0006DA  0E14               	movlw	20
  3462  0006DC  2437               	addwf	process_data_parameters@parameters,w,c
  3463  0006DE  6E1B               	movwf	atol@s,c
  3464  0006E0  0E00               	movlw	0
  3465  0006E2  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3466  0006E4  6E1C               	movwf	atol@s+1,c
  3467  0006E6  ECB1  F006         	call	_atol	;wreg free
  3468  0006EA  C01B  F064         	movff	?_atol,_meterEnergyUsed
  3469  0006EE  C01C  F065         	movff	?_atol+1,_meterEnergyUsed+1
  3470  0006F2  C01D  F066         	movff	?_atol+2,_meterEnergyUsed+2
  3471  0006F6  C01E  F067         	movff	?_atol+3,_meterEnergyUsed+3
  3472                           
  3473                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  3474  0006FA  C039  F029         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3475  0006FE  C03A  F02A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3476  000702  ECB5  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3477                           
  3478                           ;SlaveComm_PIC18.c: 347: }
  3479                           ;SlaveComm_PIC18.c: 352: }
  3480  000706  D0FD               	goto	l2902
  3481  000708                     l2860:
  3482                           
  3483                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  3484  000708  C037  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3485  00070C  C038  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3486  000710  0E34               	movlw	low STR_5
  3487  000712  6E1C               	movwf	strmatch@b,c
  3488  000714  0E06               	movlw	high STR_5
  3489  000716  6E1D               	movwf	strmatch@b+1,c
  3490  000718  EC0C  F00C         	call	_strmatch	;wreg free
  3491  00071C  06E8               	decf	wreg,f,c
  3492  00071E  B4D8               	btfsc	status,2,c
  3493  000720  D0F0               	goto	l2902
  3494                           
  3495                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  3496                           
  3497                           ;SlaveComm_PIC18.c: 354: {
  3498                           ;SlaveComm_PIC18.c: 356: }
  3499  000722  C037  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3500  000726  C038  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3501  00072A  0E2F               	movlw	low STR_6
  3502  00072C  6E1C               	movwf	strmatch@b,c
  3503  00072E  0E06               	movlw	high STR_6
  3504  000730  6E1D               	movwf	strmatch@b+1,c
  3505  000732  EC0C  F00C         	call	_strmatch	;wreg free
  3506  000736  06E8               	decf	wreg,f,c
  3507  000738  A4D8               	btfss	status,2,c
  3508  00073A  D053               	goto	l2876
  3509                           
  3510                           ;SlaveComm_PIC18.c: 358: {
  3511                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  3512  00073C  0E0A               	movlw	10
  3513  00073E  2437               	addwf	process_data_parameters@parameters,w,c
  3514  000740  6E1A               	movwf	strmatch@a,c
  3515  000742  0E00               	movlw	0
  3516  000744  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3517  000746  6E1B               	movwf	strmatch@a+1,c
  3518  000748  0E2A               	movlw	low STR_7
  3519  00074A  6E1C               	movwf	strmatch@b,c
  3520  00074C  0E06               	movlw	high STR_7
  3521  00074E  6E1D               	movwf	strmatch@b+1,c
  3522  000750  EC0C  F00C         	call	_strmatch	;wreg free
  3523  000754  06E8               	decf	wreg,f,c
  3524  000756  A4D8               	btfss	status,2,c
  3525  000758  D0D4               	goto	l2902
  3526                           
  3527                           ;SlaveComm_PIC18.c: 360: {
  3528                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  3529  00075A  0E14               	movlw	20
  3530  00075C  2437               	addwf	process_data_parameters@parameters,w,c
  3531  00075E  6E1A               	movwf	strmatch@a,c
  3532  000760  0E00               	movlw	0
  3533  000762  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3534  000764  6E1B               	movwf	strmatch@a+1,c
  3535  000766  0E5B               	movlw	low STR_8
  3536  000768  6E1C               	movwf	strmatch@b,c
  3537  00076A  0E06               	movlw	high STR_8
  3538  00076C  6E1D               	movwf	strmatch@b+1,c
  3539  00076E  EC0C  F00C         	call	_strmatch	;wreg free
  3540  000772  06E8               	decf	wreg,f,c
  3541  000774  A4D8               	btfss	status,2,c
  3542  000776  D013               	goto	l2872
  3543                           
  3544                           ;SlaveComm_PIC18.c: 362: {
  3545                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3546  000778  C039  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3547  00077C  C03A  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3548  000780  0E57               	movlw	low STR_2
  3549  000782  6E1D               	movwf	command_builder3@data1,c
  3550  000784  0E06               	movlw	high STR_2
  3551  000786  6E1E               	movwf	command_builder3@data1+1,c
  3552  000788  0E2A               	movlw	low STR_7
  3553  00078A  6E1F               	movwf	command_builder3@data2,c
  3554  00078C  0E06               	movlw	high STR_7
  3555  00078E  6E20               	movwf	command_builder3@data2+1,c
  3556  000790  0E53               	movlw	low STR_11
  3557  000792  6E21               	movwf	command_builder3@data3,c
  3558  000794  0E06               	movlw	high STR_11
  3559  000796  6E22               	movwf	command_builder3@data3+1,c
  3560  000798  ECC4  F008         	call	_command_builder3	;wreg free
  3561                           
  3562                           ;SlaveComm_PIC18.c: 364: }
  3563  00079C  D0B2               	goto	l2902
  3564  00079E                     l2872:
  3565                           
  3566                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  3567  00079E  0E14               	movlw	20
  3568  0007A0  2437               	addwf	process_data_parameters@parameters,w,c
  3569  0007A2  6E1A               	movwf	strmatch@a,c
  3570  0007A4  0E00               	movlw	0
  3571  0007A6  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3572  0007A8  6E1B               	movwf	strmatch@a+1,c
  3573  0007AA  0E53               	movlw	low STR_11
  3574  0007AC  6E1C               	movwf	strmatch@b,c
  3575  0007AE  0E06               	movlw	high STR_11
  3576  0007B0  6E1D               	movwf	strmatch@b+1,c
  3577  0007B2  EC0C  F00C         	call	_strmatch	;wreg free
  3578  0007B6  06E8               	decf	wreg,f,c
  3579  0007B8  A4D8               	btfss	status,2,c
  3580  0007BA  D0A3               	goto	l2902
  3581                           
  3582                           ;SlaveComm_PIC18.c: 366: {
  3583                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  3584  0007BC  C039  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3585  0007C0  C03A  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3586  0007C4  0E57               	movlw	low STR_2
  3587  0007C6  6E1D               	movwf	command_builder3@data1,c
  3588  0007C8  0E06               	movlw	high STR_2
  3589  0007CA  6E1E               	movwf	command_builder3@data1+1,c
  3590  0007CC  0E2A               	movlw	low STR_7
  3591  0007CE  6E1F               	movwf	command_builder3@data2,c
  3592  0007D0  0E06               	movlw	high STR_7
  3593  0007D2  6E20               	movwf	command_builder3@data2+1,c
  3594  0007D4  0E5B               	movlw	low STR_8
  3595  0007D6  6E21               	movwf	command_builder3@data3,c
  3596  0007D8  0E06               	movlw	high STR_8
  3597  0007DA  6E22               	movwf	command_builder3@data3+1,c
  3598  0007DC  ECC4  F008         	call	_command_builder3	;wreg free
  3599                           
  3600                           ;SlaveComm_PIC18.c: 368: }
  3601                           ;SlaveComm_PIC18.c: 369: }
  3602                           ;SlaveComm_PIC18.c: 370: }
  3603  0007E0  D090               	goto	l2902
  3604  0007E2                     l2876:
  3605                           
  3606                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  3607  0007E2  C037  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3608  0007E6  C038  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3609  0007EA  0E39               	movlw	low STR_16
  3610  0007EC  6E1C               	movwf	strmatch@b,c
  3611  0007EE  0E06               	movlw	high STR_16
  3612  0007F0  6E1D               	movwf	strmatch@b+1,c
  3613  0007F2  EC0C  F00C         	call	_strmatch	;wreg free
  3614  0007F6  06E8               	decf	wreg,f,c
  3615  0007F8  A4D8               	btfss	status,2,c
  3616  0007FA  D083               	goto	l2902
  3617                           
  3618                           ;SlaveComm_PIC18.c: 372: {
  3619                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  3620  0007FC  0E0A               	movlw	10
  3621  0007FE  2437               	addwf	process_data_parameters@parameters,w,c
  3622  000800  6E1A               	movwf	strmatch@a,c
  3623  000802  0E00               	movlw	0
  3624  000804  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3625  000806  6E1B               	movwf	strmatch@a+1,c
  3626  000808  0E2A               	movlw	low STR_7
  3627  00080A  6E1C               	movwf	strmatch@b,c
  3628  00080C  0E06               	movlw	high STR_7
  3629  00080E  6E1D               	movwf	strmatch@b+1,c
  3630  000810  EC0C  F00C         	call	_strmatch	;wreg free
  3631  000814  06E8               	decf	wreg,f,c
  3632  000816  A4D8               	btfss	status,2,c
  3633  000818  D007               	goto	l2882
  3634                           
  3635                           ;SlaveComm_PIC18.c: 374: {
  3636                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  3637  00081A  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3638  00081E  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3639  000822  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3640                           
  3641                           ;SlaveComm_PIC18.c: 376: }
  3642  000826  D06D               	goto	l2902
  3643  000828                     l2882:
  3644                           
  3645                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  3646  000828  0E0A               	movlw	10
  3647  00082A  2437               	addwf	process_data_parameters@parameters,w,c
  3648  00082C  6E1A               	movwf	strmatch@a,c
  3649  00082E  0E00               	movlw	0
  3650  000830  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3651  000832  6E1B               	movwf	strmatch@a+1,c
  3652  000834  0E24               	movlw	low STR_18
  3653  000836  6E1C               	movwf	strmatch@b,c
  3654  000838  0E06               	movlw	high STR_18
  3655  00083A  6E1D               	movwf	strmatch@b+1,c
  3656  00083C  EC0C  F00C         	call	_strmatch	;wreg free
  3657  000840  06E8               	decf	wreg,f,c
  3658  000842  A4D8               	btfss	status,2,c
  3659  000844  D007               	goto	l2886
  3660                           
  3661                           ;SlaveComm_PIC18.c: 378: {
  3662                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  3663  000846  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3664  00084A  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3665  00084E  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3666                           
  3667                           ;SlaveComm_PIC18.c: 380: }
  3668  000852  D057               	goto	l2902
  3669  000854                     l2886:
  3670                           
  3671                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  3672  000854  0E0A               	movlw	10
  3673  000856  2437               	addwf	process_data_parameters@parameters,w,c
  3674  000858  6E1A               	movwf	strmatch@a,c
  3675  00085A  0E00               	movlw	0
  3676  00085C  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3677  00085E  6E1B               	movwf	strmatch@a+1,c
  3678  000860  0E17               	movlw	low STR_4
  3679  000862  6E1C               	movwf	strmatch@b,c
  3680  000864  0E06               	movlw	high STR_4
  3681  000866  6E1D               	movwf	strmatch@b+1,c
  3682  000868  EC0C  F00C         	call	_strmatch	;wreg free
  3683  00086C  06E8               	decf	wreg,f,c
  3684  00086E  A4D8               	btfss	status,2,c
  3685  000870  D007               	goto	l2890
  3686                           
  3687                           ;SlaveComm_PIC18.c: 382: {
  3688                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  3689  000872  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3690  000876  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3691  00087A  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3692                           
  3693                           ;SlaveComm_PIC18.c: 384: }
  3694  00087E  D041               	goto	l2902
  3695  000880                     l2890:
  3696                           
  3697                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  3698  000880  0E0A               	movlw	10
  3699  000882  2437               	addwf	process_data_parameters@parameters,w,c
  3700  000884  6E1A               	movwf	strmatch@a,c
  3701  000886  0E00               	movlw	0
  3702  000888  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3703  00088A  6E1B               	movwf	strmatch@a+1,c
  3704  00088C  0E1E               	movlw	low STR_20
  3705  00088E  6E1C               	movwf	strmatch@b,c
  3706  000890  0E06               	movlw	high STR_20
  3707  000892  6E1D               	movwf	strmatch@b+1,c
  3708  000894  EC0C  F00C         	call	_strmatch	;wreg free
  3709  000898  06E8               	decf	wreg,f,c
  3710  00089A  A4D8               	btfss	status,2,c
  3711  00089C  D007               	goto	l2894
  3712                           
  3713                           ;SlaveComm_PIC18.c: 386: {
  3714                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  3715  00089E  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3716  0008A2  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3717  0008A6  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3718                           
  3719                           ;SlaveComm_PIC18.c: 388: }
  3720  0008AA  D02B               	goto	l2902
  3721  0008AC                     l2894:
  3722                           
  3723                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  3724  0008AC  0E0A               	movlw	10
  3725  0008AE  2437               	addwf	process_data_parameters@parameters,w,c
  3726  0008B0  6E1A               	movwf	strmatch@a,c
  3727  0008B2  0E00               	movlw	0
  3728  0008B4  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3729  0008B6  6E1B               	movwf	strmatch@a+1,c
  3730  0008B8  0E3E               	movlw	low STR_21
  3731  0008BA  6E1C               	movwf	strmatch@b,c
  3732  0008BC  0E06               	movlw	high STR_21
  3733  0008BE  6E1D               	movwf	strmatch@b+1,c
  3734  0008C0  EC0C  F00C         	call	_strmatch	;wreg free
  3735  0008C4  06E8               	decf	wreg,f,c
  3736  0008C6  A4D8               	btfss	status,2,c
  3737  0008C8  D007               	goto	l2898
  3738                           
  3739                           ;SlaveComm_PIC18.c: 390: {
  3740                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  3741  0008CA  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3742  0008CE  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3743  0008D2  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3744                           
  3745                           ;SlaveComm_PIC18.c: 392: }
  3746  0008D6  D015               	goto	l2902
  3747  0008D8                     l2898:
  3748                           
  3749                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  3750  0008D8  0E0A               	movlw	10
  3751  0008DA  2437               	addwf	process_data_parameters@parameters,w,c
  3752  0008DC  6E1A               	movwf	strmatch@a,c
  3753  0008DE  0E00               	movlw	0
  3754  0008E0  2038               	addwfc	process_data_parameters@parameters+1,w,c
  3755  0008E2  6E1B               	movwf	strmatch@a+1,c
  3756  0008E4  0E0D               	movlw	low STR_22
  3757  0008E6  6E1C               	movwf	strmatch@b,c
  3758  0008E8  0E06               	movlw	high STR_22
  3759  0008EA  6E1D               	movwf	strmatch@b+1,c
  3760  0008EC  EC0C  F00C         	call	_strmatch	;wreg free
  3761  0008F0  06E8               	decf	wreg,f,c
  3762  0008F2  A4D8               	btfss	status,2,c
  3763  0008F4  D006               	goto	l2902
  3764                           
  3765                           ;SlaveComm_PIC18.c: 394: {
  3766                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  3767  0008F6  C039  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3768  0008FA  C03A  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3769  0008FE  ECB8  F00C         	call	_send_end_of_transmission	;wreg free
  3770  000902                     l2902:
  3771                           
  3772                           ;SlaveComm_PIC18.c: 396: }
  3773                           ;SlaveComm_PIC18.c: 397: }
  3774                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  3775  000902  503B               	movf	process_data_parameters@end_of_transmission_received,w,c
  3776  000904  0012               	return	
  3777  000906                     __end_of_process_data_parameters:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           intcon2	equ	0xFF1
  3787                           intcon3	equ	0xFF0
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           postinc1	equ	0xFE6
  3791                           postdec1	equ	0xFE5
  3792                           fsr1h	equ	0xFE2
  3793                           fsr1l	equ	0xFE1
  3794                           indf2	equ	0xFDF
  3795                           postinc2	equ	0xFDE
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _strmatch *****************
  3801 ;; Defined at:
  3802 ;;		line 513 in file "SlaveComm_PIC18.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  a               2   25[COMRAM] PTR unsigned char 
  3805 ;;		 -> process_data@parameters(50), 
  3806 ;;  b               2   27[COMRAM] PTR unsigned char 
  3807 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3808 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3809 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3810 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  result          2   29[COMRAM] int 
  3813 ;;  match           1   31[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      unsigned char 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3823 ;;      Params:         4       0       0       0       0       0       0
  3824 ;;      Locals:         3       0       0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0
  3826 ;;      Totals:         7       0       0       0       0       0       0
  3827 ;;Total ram usage:        7 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    2
  3830 ;; This function calls:
  3831 ;;		_strcmp2
  3832 ;; This function is called by:
  3833 ;;		_process_data_parameters
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text20
  3838  001818                     __ptext20:
  3839                           	opt stack 0
  3840  001818                     _strmatch:
  3841                           	opt stack 25
  3842                           
  3843                           ;SlaveComm_PIC18.c: 515: int result;
  3844                           ;SlaveComm_PIC18.c: 516: bool match;
  3845                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  3846                           
  3847                           ;incstack = 0
  3848  001818  C01A  F00F         	movff	strmatch@a,strcmp2@a
  3849  00181C  C01B  F010         	movff	strmatch@a+1,strcmp2@a+1
  3850  001820  C01C  F011         	movff	strmatch@b,strcmp2@b
  3851  001824  C01D  F012         	movff	strmatch@b+1,strcmp2@b+1
  3852  001828  EC1B  F006         	call	_strcmp2	;wreg free
  3853  00182C  C00F  F01E         	movff	?_strcmp2,strmatch@result
  3854  001830  C010  F01F         	movff	?_strcmp2+1,strmatch@result+1
  3855                           
  3856                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  3857  001834  501E               	movf	strmatch@result,w,c
  3858  001836  101F               	iorwf	strmatch@result+1,w,c
  3859  001838  A4D8               	btfss	status,2,c
  3860  00183A  D002               	goto	u2120
  3861  00183C  0E01               	movlw	1
  3862  00183E  D001               	goto	u2130
  3863  001840                     u2120:
  3864  001840  0E00               	movlw	0
  3865  001842                     u2130:
  3866  001842  6E20               	movwf	strmatch@match,c
  3867                           
  3868                           ;SlaveComm_PIC18.c: 522: return match;
  3869  001844  5020               	movf	strmatch@match,w,c
  3870  001846  0012               	return	
  3871  001848                     __end_of_strmatch:
  3872                           	opt stack 0
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           intcon	equ	0xFF2
  3880                           intcon2	equ	0xFF1
  3881                           intcon3	equ	0xFF0
  3882                           postinc0	equ	0xFEE
  3883                           wreg	equ	0xFE8
  3884                           postinc1	equ	0xFE6
  3885                           postdec1	equ	0xFE5
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           indf2	equ	0xFDF
  3889                           postinc2	equ	0xFDE
  3890                           fsr2h	equ	0xFDA
  3891                           fsr2l	equ	0xFD9
  3892                           status	equ	0xFD8
  3893                           
  3894 ;; *************** function _strcmp2 *****************
  3895 ;; Defined at:
  3896 ;;		line 525 in file "SlaveComm_PIC18.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  a               2   14[COMRAM] PTR unsigned char 
  3899 ;;		 -> process_data@parameters(50), 
  3900 ;;  b               2   16[COMRAM] PTR unsigned char 
  3901 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3902 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3903 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3904 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  inx             2   23[COMRAM] int 
  3907 ;;  match           2   21[COMRAM] int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  2   14[COMRAM] int 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3917 ;;      Params:         4       0       0       0       0       0       0
  3918 ;;      Locals:         4       0       0       0       0       0       0
  3919 ;;      Temps:          3       0       0       0       0       0       0
  3920 ;;      Totals:        11       0       0       0       0       0       0
  3921 ;;Total ram usage:       11 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_strmatch
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text21
  3932  000C36                     __ptext21:
  3933                           	opt stack 0
  3934  000C36                     _strcmp2:
  3935                           	opt stack 25
  3936                           
  3937                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  3938                           
  3939                           ;incstack = 0
  3940  000C36  0E00               	movlw	0
  3941  000C38  6E19               	movwf	strcmp2@inx+1,c
  3942  000C3A  0E00               	movlw	0
  3943  000C3C  6E18               	movwf	strcmp2@inx,c
  3944                           
  3945                           ;SlaveComm_PIC18.c: 528: int match = 0;
  3946  000C3E  0E00               	movlw	0
  3947  000C40  6E17               	movwf	strcmp2@match+1,c
  3948  000C42  0E00               	movlw	0
  3949  000C44  6E16               	movwf	strcmp2@match,c
  3950                           
  3951                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  3952  000C46  D035               	goto	l2638
  3953  000C48                     l2626:
  3954                           
  3955                           ;SlaveComm_PIC18.c: 531: {
  3956                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  3957  000C48  5018               	movf	strcmp2@inx,w,c
  3958  000C4A  240F               	addwf	strcmp2@a,w,c
  3959  000C4C  6ED9               	movwf	fsr2l,c
  3960  000C4E  5019               	movf	strcmp2@inx+1,w,c
  3961  000C50  2010               	addwfc	strcmp2@a+1,w,c
  3962  000C52  6EDA               	movwf	fsr2h,c
  3963  000C54  5018               	movf	strcmp2@inx,w,c
  3964  000C56  2411               	addwf	strcmp2@b,w,c
  3965  000C58  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3966  000C5A  5019               	movf	strcmp2@inx+1,w,c
  3967  000C5C  2012               	addwfc	strcmp2@b+1,w,c
  3968  000C5E  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  3969  000C60  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3970  000C64  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3971  000C68                     	if	0	;tblptru may be non-zero
  3972  000C68                     	endif
  3973  000C68                     	if	0	;tblptru may be non-zero
  3974  000C68                     	endif
  3975  000C68  50DE               	movf	postinc2,w,c
  3976  000C6A  0009               	tblrd		*+
  3977  000C6C  5CF5               	subwf	tablat,w,c
  3978  000C6E  B0D8               	btfsc	status,0,c
  3979  000C70  D005               	goto	l2630
  3980                           
  3981                           ;SlaveComm_PIC18.c: 533: {
  3982                           ;SlaveComm_PIC18.c: 534: match = 1;
  3983  000C72  0E00               	movlw	0
  3984  000C74  6E17               	movwf	strcmp2@match+1,c
  3985  000C76  0E01               	movlw	1
  3986  000C78  6E16               	movwf	strcmp2@match,c
  3987                           
  3988                           ;SlaveComm_PIC18.c: 535: }
  3989  000C7A  D019               	goto	l2636
  3990  000C7C                     l2630:
  3991                           
  3992                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  3993  000C7C  5018               	movf	strcmp2@inx,w,c
  3994  000C7E  240F               	addwf	strcmp2@a,w,c
  3995  000C80  6ED9               	movwf	fsr2l,c
  3996  000C82  5019               	movf	strcmp2@inx+1,w,c
  3997  000C84  2010               	addwfc	strcmp2@a+1,w,c
  3998  000C86  6EDA               	movwf	fsr2h,c
  3999  000C88  50DF               	movf	indf2,w,c
  4000  000C8A  6E13               	movwf	??_strcmp2& (0+255),c
  4001  000C8C  5018               	movf	strcmp2@inx,w,c
  4002  000C8E  2411               	addwf	strcmp2@b,w,c
  4003  000C90  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  4004  000C92  5019               	movf	strcmp2@inx+1,w,c
  4005  000C94  2012               	addwfc	strcmp2@b+1,w,c
  4006  000C96  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  4007  000C98  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  4008  000C9C  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  4009  000CA0                     	if	0	;tblptru may be non-zero
  4010  000CA0                     	endif
  4011  000CA0                     	if	0	;tblptru may be non-zero
  4012  000CA0                     	endif
  4013  000CA0  0008               	tblrd		*
  4014  000CA2  50F5               	movf	tablat,w,c
  4015  000CA4  5C13               	subwf	??_strcmp2,w,c
  4016  000CA6  B0D8               	btfsc	status,0,c
  4017  000CA8  D002               	goto	l2636
  4018                           
  4019                           ;SlaveComm_PIC18.c: 537: {
  4020                           ;SlaveComm_PIC18.c: 538: match = -1;
  4021  000CAA  6816               	setf	strcmp2@match,c
  4022  000CAC  6817               	setf	strcmp2@match+1,c
  4023  000CAE                     l2636:
  4024                           
  4025                           ;SlaveComm_PIC18.c: 543: }
  4026                           ;SlaveComm_PIC18.c: 545: inx++;
  4027  000CAE  4A18               	infsnz	strcmp2@inx,f,c
  4028  000CB0  2A19               	incf	strcmp2@inx+1,f,c
  4029  000CB2                     l2638:
  4030  000CB2  5018               	movf	strcmp2@inx,w,c
  4031  000CB4  240F               	addwf	strcmp2@a,w,c
  4032  000CB6  6ED9               	movwf	fsr2l,c
  4033  000CB8  5019               	movf	strcmp2@inx+1,w,c
  4034  000CBA  2010               	addwfc	strcmp2@a+1,w,c
  4035  000CBC  6EDA               	movwf	fsr2h,c
  4036  000CBE  50DF               	movf	indf2,w,c
  4037  000CC0  B4D8               	btfsc	status,2,c
  4038  000CC2  D013               	goto	l2644
  4039  000CC4  5018               	movf	strcmp2@inx,w,c
  4040  000CC6  2411               	addwf	strcmp2@b,w,c
  4041  000CC8  6E13               	movwf	??_strcmp2& (0+255),c
  4042  000CCA  5019               	movf	strcmp2@inx+1,w,c
  4043  000CCC  2012               	addwfc	strcmp2@b+1,w,c
  4044  000CCE  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  4045  000CD0  C013  FFF6         	movff	??_strcmp2,tblptrl
  4046  000CD4  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4047  000CD8                     	if	0	;tblptru may be non-zero
  4048  000CD8                     	endif
  4049  000CD8                     	if	0	;tblptru may be non-zero
  4050  000CD8                     	endif
  4051  000CD8  0008               	tblrd		*
  4052  000CDA  50F5               	movf	tablat,w,c
  4053  000CDC  0900               	iorlw	0
  4054  000CDE  B4D8               	btfsc	status,2,c
  4055  000CE0  D004               	goto	l2644
  4056  000CE2  5016               	movf	strcmp2@match,w,c
  4057  000CE4  1017               	iorwf	strcmp2@match+1,w,c
  4058  000CE6  B4D8               	btfsc	status,2,c
  4059  000CE8  D7AF               	goto	l2626
  4060  000CEA                     l2644:
  4061                           
  4062                           ;SlaveComm_PIC18.c: 546: }
  4063                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4064  000CEA  5018               	movf	strcmp2@inx,w,c
  4065  000CEC  240F               	addwf	strcmp2@a,w,c
  4066  000CEE  6ED9               	movwf	fsr2l,c
  4067  000CF0  5019               	movf	strcmp2@inx+1,w,c
  4068  000CF2  2010               	addwfc	strcmp2@a+1,w,c
  4069  000CF4  6EDA               	movwf	fsr2h,c
  4070  000CF6  50DF               	movf	indf2,w,c
  4071  000CF8  A4D8               	btfss	status,2,c
  4072  000CFA  D012               	goto	l2650
  4073  000CFC  5018               	movf	strcmp2@inx,w,c
  4074  000CFE  2411               	addwf	strcmp2@b,w,c
  4075  000D00  6E13               	movwf	??_strcmp2& (0+255),c
  4076  000D02  5019               	movf	strcmp2@inx+1,w,c
  4077  000D04  2012               	addwfc	strcmp2@b+1,w,c
  4078  000D06  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  4079  000D08  C013  FFF6         	movff	??_strcmp2,tblptrl
  4080  000D0C  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4081  000D10                     	if	0	;tblptru may be non-zero
  4082  000D10                     	endif
  4083  000D10                     	if	0	;tblptru may be non-zero
  4084  000D10                     	endif
  4085  000D10  0008               	tblrd		*
  4086  000D12  50F5               	movf	tablat,w,c
  4087  000D14  0900               	iorlw	0
  4088  000D16  B4D8               	btfsc	status,2,c
  4089  000D18  D003               	goto	l2650
  4090                           
  4091                           ;SlaveComm_PIC18.c: 550: {
  4092                           ;SlaveComm_PIC18.c: 551: match = -1;
  4093  000D1A  6816               	setf	strcmp2@match,c
  4094  000D1C  6817               	setf	strcmp2@match+1,c
  4095                           
  4096                           ;SlaveComm_PIC18.c: 552: }
  4097  000D1E  D01C               	goto	l2656
  4098  000D20                     l2650:
  4099                           
  4100                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4101  000D20  5018               	movf	strcmp2@inx,w,c
  4102  000D22  240F               	addwf	strcmp2@a,w,c
  4103  000D24  6ED9               	movwf	fsr2l,c
  4104  000D26  5019               	movf	strcmp2@inx+1,w,c
  4105  000D28  2010               	addwfc	strcmp2@a+1,w,c
  4106  000D2A  6EDA               	movwf	fsr2h,c
  4107  000D2C  50DF               	movf	indf2,w,c
  4108  000D2E  B4D8               	btfsc	status,2,c
  4109  000D30  D013               	goto	l2656
  4110  000D32  5018               	movf	strcmp2@inx,w,c
  4111  000D34  2411               	addwf	strcmp2@b,w,c
  4112  000D36  6E13               	movwf	??_strcmp2& (0+255),c
  4113  000D38  5019               	movf	strcmp2@inx+1,w,c
  4114  000D3A  2012               	addwfc	strcmp2@b+1,w,c
  4115  000D3C  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  4116  000D3E  C013  FFF6         	movff	??_strcmp2,tblptrl
  4117  000D42  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4118  000D46                     	if	0	;tblptru may be non-zero
  4119  000D46                     	endif
  4120  000D46                     	if	0	;tblptru may be non-zero
  4121  000D46                     	endif
  4122  000D46  0008               	tblrd		*
  4123  000D48  50F5               	movf	tablat,w,c
  4124  000D4A  0900               	iorlw	0
  4125  000D4C  A4D8               	btfss	status,2,c
  4126  000D4E  D004               	goto	l2656
  4127                           
  4128                           ;SlaveComm_PIC18.c: 554: {
  4129                           ;SlaveComm_PIC18.c: 555: match = 1;
  4130  000D50  0E00               	movlw	0
  4131  000D52  6E17               	movwf	strcmp2@match+1,c
  4132  000D54  0E01               	movlw	1
  4133  000D56  6E16               	movwf	strcmp2@match,c
  4134  000D58                     l2656:
  4135                           
  4136                           ;SlaveComm_PIC18.c: 556: }
  4137                           ;SlaveComm_PIC18.c: 558: return match;
  4138  000D58  C016  F00F         	movff	strcmp2@match,?_strcmp2
  4139  000D5C  C017  F010         	movff	strcmp2@match+1,?_strcmp2+1
  4140  000D60  0012               	return	
  4141  000D62                     __end_of_strcmp2:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           intcon2	equ	0xFF1
  4151                           intcon3	equ	0xFF0
  4152                           postinc0	equ	0xFEE
  4153                           wreg	equ	0xFE8
  4154                           postinc1	equ	0xFE6
  4155                           postdec1	equ	0xFE5
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function _send_end_of_transmission *****************
  4165 ;; Defined at:
  4166 ;;		line 604 in file "SlaveComm_PIC18.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4169 ;;		 -> communications@send_buffer(42), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4181 ;;      Params:         2       0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0
  4184 ;;      Totals:         2       0       0       0       0       0       0
  4185 ;;Total ram usage:        2 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    4
  4188 ;; This function calls:
  4189 ;;		_command_builder1
  4190 ;; This function is called by:
  4191 ;;		_process_data_parameters
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text22
  4196  001970                     __ptext22:
  4197                           	opt stack 0
  4198  001970                     _send_end_of_transmission:
  4199                           	opt stack 23
  4200                           
  4201                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4202                           
  4203                           ;incstack = 0
  4204  001970  C01F  F01B         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4205  001974  C020  F01C         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4206  001978  0E4F               	movlw	low STR_1
  4207  00197A  6E1D               	movwf	command_builder1@data1,c
  4208  00197C  0E06               	movlw	high STR_1
  4209  00197E  6E1E               	movwf	command_builder1@data1+1,c
  4210  001980  ECC1  F00A         	call	_command_builder1	;wreg free
  4211  001984  0012               	return	
  4212  001986                     __end_of_send_end_of_transmission:
  4213                           	opt stack 0
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           prodh	equ	0xFF4
  4219                           prodl	equ	0xFF3
  4220                           intcon	equ	0xFF2
  4221                           intcon2	equ	0xFF1
  4222                           intcon3	equ	0xFF0
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postinc1	equ	0xFE6
  4226                           postdec1	equ	0xFE5
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _command_builder1 *****************
  4236 ;; Defined at:
  4237 ;;		line 406 in file "SlaveComm_PIC18.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4240 ;;		 -> communications@send_buffer(42), 
  4241 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4242 ;;		 -> STR_23(4), 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4254 ;;      Params:         4       0       0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0
  4257 ;;      Totals:         4       0       0       0       0       0       0
  4258 ;;Total ram usage:        4 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    3
  4261 ;; This function calls:
  4262 ;;		_command_builder_add_char
  4263 ;;		_command_builder_add_string
  4264 ;; This function is called by:
  4265 ;;		_send_end_of_transmission
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text23
  4270  001582                     __ptext23:
  4271                           	opt stack 0
  4272  001582                     _command_builder1:
  4273                           	opt stack 23
  4274                           
  4275                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4276                           
  4277                           ;incstack = 0
  4278  001582  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4279  001586  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4280  00158A  0E23               	movlw	35
  4281  00158C  6E11               	movwf	command_builder_add_char@data,c
  4282  00158E  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4283                           
  4284                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4285  001592  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4286  001596  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4287  00159A  0E23               	movlw	35
  4288  00159C  6E11               	movwf	command_builder_add_char@data,c
  4289  00159E  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4290                           
  4291                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4292  0015A2  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4293  0015A6  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4294  0015AA  0E21               	movlw	33
  4295  0015AC  6E11               	movwf	command_builder_add_char@data,c
  4296  0015AE  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4297                           
  4298                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4299  0015B2  C01B  F013         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4300  0015B6  C01C  F014         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4301  0015BA  C01D  F015         	movff	command_builder1@data1,command_builder_add_string@data_string
  4302  0015BE  C01E  F016         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4303  0015C2  ECE8  F009         	call	_command_builder_add_string	;wreg free
  4304                           
  4305                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4306  0015C6  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4307  0015CA  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4308  0015CE  0E2A               	movlw	42
  4309  0015D0  6E11               	movwf	command_builder_add_char@data,c
  4310  0015D2  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4311  0015D6  0012               	return	
  4312  0015D8                     __end_of_command_builder1:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           intcon2	equ	0xFF1
  4322                           intcon3	equ	0xFF0
  4323                           postinc0	equ	0xFEE
  4324                           wreg	equ	0xFE8
  4325                           postinc1	equ	0xFE6
  4326                           postdec1	equ	0xFE5
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           postinc2	equ	0xFDE
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _com_command_setEnergyUsed *****************
  4336 ;; Defined at:
  4337 ;;		line 629 in file "SlaveComm_PIC18.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  send_buffer     2   40[COMRAM] PTR struct buffer
  4340 ;;		 -> communications@send_buffer(42), 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  temp           12   42[COMRAM] unsigned char [12]
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4352 ;;      Params:         2       0       0       0       0       0       0
  4353 ;;      Locals:        12       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0
  4355 ;;      Totals:        14       0       0       0       0       0       0
  4356 ;;Total ram usage:       14 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    4
  4359 ;; This function calls:
  4360 ;;		_command_builder3
  4361 ;;		_ultoa
  4362 ;; This function is called by:
  4363 ;;		_resetCommunications
  4364 ;;		_process_data_parameters
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text24
  4369  00176A                     __ptext24:
  4370                           	opt stack 0
  4371  00176A                     _com_command_setEnergyUsed:
  4372                           	opt stack 24
  4373                           
  4374                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4375                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4376                           
  4377                           ;incstack = 0
  4378  00176A  0E2B               	movlw	low com_command_setEnergyUsed@temp
  4379  00176C  6E1C               	movwf	ultoa@buf,c
  4380  00176E  0E00               	movlw	high com_command_setEnergyUsed@temp
  4381  001770  6E1D               	movwf	ultoa@buf+1,c
  4382  001772  C064  F01E         	movff	_meterEnergyUsed,ultoa@val
  4383  001776  C065  F01F         	movff	_meterEnergyUsed+1,ultoa@val+1
  4384  00177A  C066  F020         	movff	_meterEnergyUsed+2,ultoa@val+2
  4385  00177E  C067  F021         	movff	_meterEnergyUsed+3,ultoa@val+3
  4386  001782  0E00               	movlw	0
  4387  001784  6E23               	movwf	ultoa@base+1,c
  4388  001786  0E0A               	movlw	10
  4389  001788  6E22               	movwf	ultoa@base,c
  4390  00178A  EC2D  F007         	call	_ultoa	;wreg free
  4391                           
  4392                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4393  00178E  C029  F01B         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4394  001792  C02A  F01C         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4395  001796  0E57               	movlw	low STR_2
  4396  001798  6E1D               	movwf	command_builder3@data1,c
  4397  00179A  0E06               	movlw	high STR_2
  4398  00179C  6E1E               	movwf	command_builder3@data1+1,c
  4399  00179E  0E17               	movlw	low STR_4
  4400  0017A0  6E1F               	movwf	command_builder3@data2,c
  4401  0017A2  0E06               	movlw	high STR_4
  4402  0017A4  6E20               	movwf	command_builder3@data2+1,c
  4403  0017A6  0E2B               	movlw	low com_command_setEnergyUsed@temp
  4404  0017A8  6E21               	movwf	command_builder3@data3,c
  4405  0017AA  0E00               	movlw	high com_command_setEnergyUsed@temp
  4406  0017AC  6E22               	movwf	command_builder3@data3+1,c
  4407  0017AE  ECC4  F008         	call	_command_builder3	;wreg free
  4408  0017B2  0012               	return	
  4409  0017B4                     __end_of_com_command_setEnergyUsed:
  4410                           	opt stack 0
  4411                           tblptru	equ	0xFF8
  4412                           tblptrh	equ	0xFF7
  4413                           tblptrl	equ	0xFF6
  4414                           tablat	equ	0xFF5
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           intcon2	equ	0xFF1
  4419                           intcon3	equ	0xFF0
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postinc1	equ	0xFE6
  4423                           postdec1	equ	0xFE5
  4424                           fsr1h	equ	0xFE2
  4425                           fsr1l	equ	0xFE1
  4426                           indf2	equ	0xFDF
  4427                           postinc2	equ	0xFDE
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _ultoa *****************
  4433 ;; Defined at:
  4434 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ltoa.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  buf             2   27[COMRAM] PTR unsigned char 
  4437 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4438 ;;  val             4   29[COMRAM] unsigned long 
  4439 ;;  base            2   33[COMRAM] int 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  v               4   35[COMRAM] unsigned long 
  4442 ;;  c               1   39[COMRAM] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2   27[COMRAM] PTR unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4452 ;;      Params:         8       0       0       0       0       0       0
  4453 ;;      Locals:         5       0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0
  4455 ;;      Totals:        13       0       0       0       0       0       0
  4456 ;;Total ram usage:       13 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    2
  4459 ;; This function calls:
  4460 ;;		___lldiv
  4461 ;;		___llmod
  4462 ;; This function is called by:
  4463 ;;		_com_command_setPower
  4464 ;;		_com_command_setEnergyUsed
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text25
  4469  000E5A                     __ptext25:
  4470                           	opt stack 0
  4471  000E5A                     _ultoa:
  4472                           	opt stack 25
  4473                           
  4474                           ;incstack = 0
  4475  000E5A  C01E  F024         	movff	ultoa@val,ultoa@v
  4476  000E5E  C01F  F025         	movff	ultoa@val+1,ultoa@v+1
  4477  000E62  C020  F026         	movff	ultoa@val+2,ultoa@v+2
  4478  000E66  C021  F027         	movff	ultoa@val+3,ultoa@v+3
  4479  000E6A                     l2662:
  4480  000E6A  C024  F00F         	movff	ultoa@v,___lldiv@dividend
  4481  000E6E  C025  F010         	movff	ultoa@v+1,___lldiv@dividend+1
  4482  000E72  C026  F011         	movff	ultoa@v+2,___lldiv@dividend+2
  4483  000E76  C027  F012         	movff	ultoa@v+3,___lldiv@dividend+3
  4484  000E7A  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4485  000E7E  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4486  000E82  0E00               	movlw	0
  4487  000E84  BE14               	btfsc	___lldiv@divisor+1,7,c
  4488  000E86  0EFF               	movlw	-1
  4489  000E88  6E15               	movwf	___lldiv@divisor+2,c
  4490  000E8A  6E16               	movwf	___lldiv@divisor+3,c
  4491  000E8C  ECA7  F009         	call	___lldiv	;wreg free
  4492  000E90  C00F  F024         	movff	?___lldiv,ultoa@v
  4493  000E94  C010  F025         	movff	?___lldiv+1,ultoa@v+1
  4494  000E98  C011  F026         	movff	?___lldiv+2,ultoa@v+2
  4495  000E9C  C012  F027         	movff	?___lldiv+3,ultoa@v+3
  4496  000EA0  4A1C               	infsnz	ultoa@buf,f,c
  4497  000EA2  2A1D               	incf	ultoa@buf+1,f,c
  4498  000EA4  5024               	movf	ultoa@v,w,c
  4499  000EA6  1025               	iorwf	ultoa@v+1,w,c
  4500  000EA8  1026               	iorwf	ultoa@v+2,w,c
  4501  000EAA  1027               	iorwf	ultoa@v+3,w,c
  4502  000EAC  A4D8               	btfss	status,2,c
  4503  000EAE  D7DD               	goto	l2662
  4504  000EB0  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4505  000EB4  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4506  000EB8  0E00               	movlw	0
  4507  000EBA  6EDF               	movwf	indf2,c
  4508  000EBC  061C               	decf	ultoa@buf,f,c
  4509  000EBE  A0D8               	btfss	status,0,c
  4510  000EC0  061D               	decf	ultoa@buf+1,f,c
  4511  000EC2                     l2672:
  4512  000EC2  C01E  F00F         	movff	ultoa@val,___llmod@dividend
  4513  000EC6  C01F  F010         	movff	ultoa@val+1,___llmod@dividend+1
  4514  000ECA  C020  F011         	movff	ultoa@val+2,___llmod@dividend+2
  4515  000ECE  C021  F012         	movff	ultoa@val+3,___llmod@dividend+3
  4516  000ED2  C022  F013         	movff	ultoa@base,___llmod@divisor
  4517  000ED6  C023  F014         	movff	ultoa@base+1,___llmod@divisor+1
  4518  000EDA  0E00               	movlw	0
  4519  000EDC  BE14               	btfsc	___llmod@divisor+1,7,c
  4520  000EDE  0EFF               	movlw	-1
  4521  000EE0  6E15               	movwf	___llmod@divisor+2,c
  4522  000EE2  6E16               	movwf	___llmod@divisor+3,c
  4523  000EE4  EC5C  F00A         	call	___llmod	;wreg free
  4524  000EE8  500F               	movf	?___llmod,w,c
  4525  000EEA  6E28               	movwf	ultoa@c,c
  4526  000EEC  C01E  F00F         	movff	ultoa@val,___lldiv@dividend
  4527  000EF0  C01F  F010         	movff	ultoa@val+1,___lldiv@dividend+1
  4528  000EF4  C020  F011         	movff	ultoa@val+2,___lldiv@dividend+2
  4529  000EF8  C021  F012         	movff	ultoa@val+3,___lldiv@dividend+3
  4530  000EFC  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4531  000F00  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4532  000F04  0E00               	movlw	0
  4533  000F06  BE14               	btfsc	___lldiv@divisor+1,7,c
  4534  000F08  0EFF               	movlw	-1
  4535  000F0A  6E15               	movwf	___lldiv@divisor+2,c
  4536  000F0C  6E16               	movwf	___lldiv@divisor+3,c
  4537  000F0E  ECA7  F009         	call	___lldiv	;wreg free
  4538  000F12  C00F  F01E         	movff	?___lldiv,ultoa@val
  4539  000F16  C010  F01F         	movff	?___lldiv+1,ultoa@val+1
  4540  000F1A  C011  F020         	movff	?___lldiv+2,ultoa@val+2
  4541  000F1E  C012  F021         	movff	?___lldiv+3,ultoa@val+3
  4542  000F22  0E09               	movlw	9
  4543  000F24  6428               	cpfsgt	ultoa@c,c
  4544  000F26  D002               	goto	l865
  4545  000F28  0E07               	movlw	7
  4546  000F2A  2628               	addwf	ultoa@c,f,c
  4547  000F2C                     l865:
  4548  000F2C  0E30               	movlw	48
  4549  000F2E  2628               	addwf	ultoa@c,f,c
  4550  000F30  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4551  000F34  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4552  000F38  C028  FFDF         	movff	ultoa@c,indf2
  4553  000F3C  061C               	decf	ultoa@buf,f,c
  4554  000F3E  A0D8               	btfss	status,0,c
  4555  000F40  061D               	decf	ultoa@buf+1,f,c
  4556  000F42  501E               	movf	ultoa@val,w,c
  4557  000F44  101F               	iorwf	ultoa@val+1,w,c
  4558  000F46  1020               	iorwf	ultoa@val+2,w,c
  4559  000F48  1021               	iorwf	ultoa@val+3,w,c
  4560  000F4A  B4D8               	btfsc	status,2,c
  4561  000F4C  0012               	return	
  4562  000F4E  D7B9               	goto	l2672
  4563  000F50                     __end_of_ultoa:
  4564                           	opt stack 0
  4565                           tblptru	equ	0xFF8
  4566                           tblptrh	equ	0xFF7
  4567                           tblptrl	equ	0xFF6
  4568                           tablat	equ	0xFF5
  4569                           prodh	equ	0xFF4
  4570                           prodl	equ	0xFF3
  4571                           intcon	equ	0xFF2
  4572                           intcon2	equ	0xFF1
  4573                           intcon3	equ	0xFF0
  4574                           postinc0	equ	0xFEE
  4575                           wreg	equ	0xFE8
  4576                           postinc1	equ	0xFE6
  4577                           postdec1	equ	0xFE5
  4578                           fsr1h	equ	0xFE2
  4579                           fsr1l	equ	0xFE1
  4580                           indf2	equ	0xFDF
  4581                           postinc2	equ	0xFDE
  4582                           fsr2h	equ	0xFDA
  4583                           fsr2l	equ	0xFD9
  4584                           status	equ	0xFD8
  4585                           
  4586 ;; *************** function ___llmod *****************
  4587 ;; Defined at:
  4588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  dividend        4   14[COMRAM] unsigned long 
  4591 ;;  divisor         4   18[COMRAM] unsigned long 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  counter         1   22[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  4   14[COMRAM] unsigned long 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4603 ;;      Params:         8       0       0       0       0       0       0
  4604 ;;      Locals:         1       0       0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0
  4606 ;;      Totals:         9       0       0       0       0       0       0
  4607 ;;Total ram usage:        9 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_ultoa
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text26
  4618  0014B8                     __ptext26:
  4619                           	opt stack 0
  4620  0014B8                     ___llmod:
  4621                           	opt stack 25
  4622                           
  4623                           ;incstack = 0
  4624  0014B8  5013               	movf	___llmod@divisor,w,c
  4625  0014BA  1014               	iorwf	___llmod@divisor+1,w,c
  4626  0014BC  1015               	iorwf	___llmod@divisor+2,w,c
  4627  0014BE  1016               	iorwf	___llmod@divisor+3,w,c
  4628  0014C0  B4D8               	btfsc	status,2,c
  4629  0014C2  D024               	goto	l818
  4630  0014C4  0E01               	movlw	1
  4631  0014C6  6E17               	movwf	___llmod@counter,c
  4632  0014C8  D006               	goto	l2594
  4633  0014CA                     l2592:
  4634  0014CA  90D8               	bcf	status,0,c
  4635  0014CC  3613               	rlcf	___llmod@divisor,f,c
  4636  0014CE  3614               	rlcf	___llmod@divisor+1,f,c
  4637  0014D0  3615               	rlcf	___llmod@divisor+2,f,c
  4638  0014D2  3616               	rlcf	___llmod@divisor+3,f,c
  4639  0014D4  2A17               	incf	___llmod@counter,f,c
  4640  0014D6                     l2594:
  4641  0014D6  AE16               	btfss	___llmod@divisor+3,7,c
  4642  0014D8  D7F8               	goto	l2592
  4643  0014DA                     l2596:
  4644  0014DA  5013               	movf	___llmod@divisor,w,c
  4645  0014DC  5C0F               	subwf	___llmod@dividend,w,c
  4646  0014DE  5014               	movf	___llmod@divisor+1,w,c
  4647  0014E0  5810               	subwfb	___llmod@dividend+1,w,c
  4648  0014E2  5015               	movf	___llmod@divisor+2,w,c
  4649  0014E4  5811               	subwfb	___llmod@dividend+2,w,c
  4650  0014E6  5016               	movf	___llmod@divisor+3,w,c
  4651  0014E8  5812               	subwfb	___llmod@dividend+3,w,c
  4652  0014EA  A0D8               	btfss	status,0,c
  4653  0014EC  D008               	goto	l2600
  4654  0014EE  5013               	movf	___llmod@divisor,w,c
  4655  0014F0  5E0F               	subwf	___llmod@dividend,f,c
  4656  0014F2  5014               	movf	___llmod@divisor+1,w,c
  4657  0014F4  5A10               	subwfb	___llmod@dividend+1,f,c
  4658  0014F6  5015               	movf	___llmod@divisor+2,w,c
  4659  0014F8  5A11               	subwfb	___llmod@dividend+2,f,c
  4660  0014FA  5016               	movf	___llmod@divisor+3,w,c
  4661  0014FC  5A12               	subwfb	___llmod@dividend+3,f,c
  4662  0014FE                     l2600:
  4663  0014FE  90D8               	bcf	status,0,c
  4664  001500  3216               	rrcf	___llmod@divisor+3,f,c
  4665  001502  3215               	rrcf	___llmod@divisor+2,f,c
  4666  001504  3214               	rrcf	___llmod@divisor+1,f,c
  4667  001506  3213               	rrcf	___llmod@divisor,f,c
  4668  001508  2E17               	decfsz	___llmod@counter,f,c
  4669  00150A  D7E7               	goto	l2596
  4670  00150C                     l818:
  4671  00150C  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4672  001510  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4673  001514  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4674  001518  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4675  00151C  0012               	return		;funcret
  4676  00151E                     __end_of___llmod:
  4677                           	opt stack 0
  4678                           tblptru	equ	0xFF8
  4679                           tblptrh	equ	0xFF7
  4680                           tblptrl	equ	0xFF6
  4681                           tablat	equ	0xFF5
  4682                           prodh	equ	0xFF4
  4683                           prodl	equ	0xFF3
  4684                           intcon	equ	0xFF2
  4685                           intcon2	equ	0xFF1
  4686                           intcon3	equ	0xFF0
  4687                           postinc0	equ	0xFEE
  4688                           wreg	equ	0xFE8
  4689                           postinc1	equ	0xFE6
  4690                           postdec1	equ	0xFE5
  4691                           fsr1h	equ	0xFE2
  4692                           fsr1l	equ	0xFE1
  4693                           indf2	equ	0xFDF
  4694                           postinc2	equ	0xFDE
  4695                           fsr2h	equ	0xFDA
  4696                           fsr2l	equ	0xFD9
  4697                           status	equ	0xFD8
  4698                           
  4699 ;; *************** function ___lldiv *****************
  4700 ;; Defined at:
  4701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  dividend        4   14[COMRAM] unsigned long 
  4704 ;;  divisor         4   18[COMRAM] unsigned long 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  quotient        4   22[COMRAM] unsigned long 
  4707 ;;  counter         1   26[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  4   14[COMRAM] unsigned long 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4717 ;;      Params:         8       0       0       0       0       0       0
  4718 ;;      Locals:         5       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0
  4720 ;;      Totals:        13       0       0       0       0       0       0
  4721 ;;Total ram usage:       13 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_powerPulseCheck
  4728 ;;		_ultoa
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text27
  4733  00134E                     __ptext27:
  4734                           	opt stack 0
  4735  00134E                     ___lldiv:
  4736                           	opt stack 28
  4737                           
  4738                           ;incstack = 0
  4739  00134E  0E00               	movlw	0
  4740  001350  6E17               	movwf	___lldiv@quotient,c
  4741  001352  0E00               	movlw	0
  4742  001354  6E18               	movwf	___lldiv@quotient+1,c
  4743  001356  0E00               	movlw	0
  4744  001358  6E19               	movwf	___lldiv@quotient+2,c
  4745  00135A  0E00               	movlw	0
  4746  00135C  6E1A               	movwf	___lldiv@quotient+3,c
  4747  00135E  5013               	movf	___lldiv@divisor,w,c
  4748  001360  1014               	iorwf	___lldiv@divisor+1,w,c
  4749  001362  1015               	iorwf	___lldiv@divisor+2,w,c
  4750  001364  1016               	iorwf	___lldiv@divisor+3,w,c
  4751  001366  B4D8               	btfsc	status,2,c
  4752  001368  D02A               	goto	l808
  4753  00136A  0E01               	movlw	1
  4754  00136C  6E1B               	movwf	___lldiv@counter,c
  4755  00136E  D006               	goto	l2574
  4756  001370                     l2572:
  4757  001370  90D8               	bcf	status,0,c
  4758  001372  3613               	rlcf	___lldiv@divisor,f,c
  4759  001374  3614               	rlcf	___lldiv@divisor+1,f,c
  4760  001376  3615               	rlcf	___lldiv@divisor+2,f,c
  4761  001378  3616               	rlcf	___lldiv@divisor+3,f,c
  4762  00137A  2A1B               	incf	___lldiv@counter,f,c
  4763  00137C                     l2574:
  4764  00137C  AE16               	btfss	___lldiv@divisor+3,7,c
  4765  00137E  D7F8               	goto	l2572
  4766  001380                     l2576:
  4767  001380  90D8               	bcf	status,0,c
  4768  001382  3617               	rlcf	___lldiv@quotient,f,c
  4769  001384  3618               	rlcf	___lldiv@quotient+1,f,c
  4770  001386  3619               	rlcf	___lldiv@quotient+2,f,c
  4771  001388  361A               	rlcf	___lldiv@quotient+3,f,c
  4772  00138A  5013               	movf	___lldiv@divisor,w,c
  4773  00138C  5C0F               	subwf	___lldiv@dividend,w,c
  4774  00138E  5014               	movf	___lldiv@divisor+1,w,c
  4775  001390  5810               	subwfb	___lldiv@dividend+1,w,c
  4776  001392  5015               	movf	___lldiv@divisor+2,w,c
  4777  001394  5811               	subwfb	___lldiv@dividend+2,w,c
  4778  001396  5016               	movf	___lldiv@divisor+3,w,c
  4779  001398  5812               	subwfb	___lldiv@dividend+3,w,c
  4780  00139A  A0D8               	btfss	status,0,c
  4781  00139C  D009               	goto	l2584
  4782  00139E  5013               	movf	___lldiv@divisor,w,c
  4783  0013A0  5E0F               	subwf	___lldiv@dividend,f,c
  4784  0013A2  5014               	movf	___lldiv@divisor+1,w,c
  4785  0013A4  5A10               	subwfb	___lldiv@dividend+1,f,c
  4786  0013A6  5015               	movf	___lldiv@divisor+2,w,c
  4787  0013A8  5A11               	subwfb	___lldiv@dividend+2,f,c
  4788  0013AA  5016               	movf	___lldiv@divisor+3,w,c
  4789  0013AC  5A12               	subwfb	___lldiv@dividend+3,f,c
  4790  0013AE  8017               	bsf	___lldiv@quotient,0,c
  4791  0013B0                     l2584:
  4792  0013B0  90D8               	bcf	status,0,c
  4793  0013B2  3216               	rrcf	___lldiv@divisor+3,f,c
  4794  0013B4  3215               	rrcf	___lldiv@divisor+2,f,c
  4795  0013B6  3214               	rrcf	___lldiv@divisor+1,f,c
  4796  0013B8  3213               	rrcf	___lldiv@divisor,f,c
  4797  0013BA  2E1B               	decfsz	___lldiv@counter,f,c
  4798  0013BC  D7E1               	goto	l2576
  4799  0013BE                     l808:
  4800  0013BE  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4801  0013C2  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4802  0013C6  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4803  0013CA  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4804  0013CE  0012               	return		;funcret
  4805  0013D0                     __end_of___lldiv:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           intcon2	equ	0xFF1
  4815                           intcon3	equ	0xFF0
  4816                           postinc0	equ	0xFEE
  4817                           wreg	equ	0xFE8
  4818                           postinc1	equ	0xFE6
  4819                           postdec1	equ	0xFE5
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           indf2	equ	0xFDF
  4823                           postinc2	equ	0xFDE
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828 ;; *************** function _command_builder3 *****************
  4829 ;; Defined at:
  4830 ;;		line 430 in file "SlaveComm_PIC18.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4833 ;;		 -> communications@send_buffer(42), 
  4834 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4835 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4836 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4837 ;;  data2           2   30[COMRAM] PTR unsigned char 
  4838 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4839 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4840 ;;  data3           2   32[COMRAM] PTR unsigned char 
  4841 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4842 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4854 ;;      Params:         8       0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0
  4857 ;;      Totals:         8       0       0       0       0       0       0
  4858 ;;Total ram usage:        8 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		_command_builder_add_char
  4863 ;;		_command_builder_add_string
  4864 ;; This function is called by:
  4865 ;;		_process_data_parameters
  4866 ;;		_com_command_setPower
  4867 ;;		_com_command_setEnergyUsed
  4868 ;;		_com_command_setVersion
  4869 ;;		_com_command_setVolts
  4870 ;;		_com_command_setAmps
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text28
  4875  001188                     __ptext28:
  4876                           	opt stack 0
  4877  001188                     _command_builder3:
  4878                           	opt stack 24
  4879                           
  4880                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  4881                           
  4882                           ;incstack = 0
  4883  001188  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4884  00118C  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4885  001190  0E23               	movlw	35
  4886  001192  6E11               	movwf	command_builder_add_char@data,c
  4887  001194  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4888                           
  4889                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  4890  001198  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4891  00119C  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4892  0011A0  0E23               	movlw	35
  4893  0011A2  6E11               	movwf	command_builder_add_char@data,c
  4894  0011A4  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4895                           
  4896                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  4897  0011A8  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4898  0011AC  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4899  0011B0  0E21               	movlw	33
  4900  0011B2  6E11               	movwf	command_builder_add_char@data,c
  4901  0011B4  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4902                           
  4903                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  4904  0011B8  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4905  0011BC  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4906  0011C0  C01D  F015         	movff	command_builder3@data1,command_builder_add_string@data_string
  4907  0011C4  C01E  F016         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4908  0011C8  ECE8  F009         	call	_command_builder_add_string	;wreg free
  4909                           
  4910                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  4911  0011CC  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4912  0011D0  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4913  0011D4  0E3B               	movlw	59
  4914  0011D6  6E11               	movwf	command_builder_add_char@data,c
  4915  0011D8  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4916                           
  4917                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  4918  0011DC  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4919  0011E0  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4920  0011E4  C01F  F015         	movff	command_builder3@data2,command_builder_add_string@data_string
  4921  0011E8  C020  F016         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4922  0011EC  ECE8  F009         	call	_command_builder_add_string	;wreg free
  4923                           
  4924                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  4925  0011F0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4926  0011F4  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4927  0011F8  0E3B               	movlw	59
  4928  0011FA  6E11               	movwf	command_builder_add_char@data,c
  4929  0011FC  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4930                           
  4931                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  4932  001200  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4933  001204  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4934  001208  C021  F015         	movff	command_builder3@data3,command_builder_add_string@data_string
  4935  00120C  C022  F016         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4936  001210  ECE8  F009         	call	_command_builder_add_string	;wreg free
  4937                           
  4938                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  4939  001214  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4940  001218  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4941  00121C  0E2A               	movlw	42
  4942  00121E  6E11               	movwf	command_builder_add_char@data,c
  4943  001220  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  4944  001224  0012               	return	
  4945  001226                     __end_of_command_builder3:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           intcon2	equ	0xFF1
  4955                           intcon3	equ	0xFF0
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           postinc1	equ	0xFE6
  4959                           postdec1	equ	0xFE5
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           postinc2	equ	0xFDE
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _command_builder_add_string *****************
  4969 ;; Defined at:
  4970 ;;		line 475 in file "SlaveComm_PIC18.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4973 ;;		 -> communications@send_buffer(42), 
  4974 ;;  data_string     2   20[COMRAM] PTR unsigned char 
  4975 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4976 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4977 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4978 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4979 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  4980 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4981 ;;		 -> STR_10(5), STR_9(4), 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  inx             2   24[COMRAM] int 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4993 ;;      Params:         4       0       0       0       0       0       0
  4994 ;;      Locals:         2       0       0       0       0       0       0
  4995 ;;      Temps:          2       0       0       0       0       0       0
  4996 ;;      Totals:         8       0       0       0       0       0       0
  4997 ;;Total ram usage:        8 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    2
  5000 ;; This function calls:
  5001 ;;		_command_builder_add_char
  5002 ;; This function is called by:
  5003 ;;		_command_builder1
  5004 ;;		_command_builder3
  5005 ;;		_command_builder2
  5006 ;;		_command_builder4
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text29
  5011  0013D0                     __ptext29:
  5012                           	opt stack 0
  5013  0013D0                     _command_builder_add_string:
  5014                           	opt stack 24
  5015                           
  5016                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5017                           
  5018                           ;incstack = 0
  5019  0013D0  0E00               	movlw	0
  5020  0013D2  6E1A               	movwf	command_builder_add_string@inx+1,c
  5021  0013D4  0E00               	movlw	0
  5022  0013D6  6E19               	movwf	command_builder_add_string@inx,c
  5023  0013D8  D01F               	goto	l2564
  5024  0013DA                     l2560:
  5025                           
  5026                           ;SlaveComm_PIC18.c: 478: {
  5027                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5028  0013DA  C013  F00F         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5029  0013DE  C014  F010         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5030  0013E2  5019               	movf	command_builder_add_string@inx,w,c
  5031  0013E4  2415               	addwf	command_builder_add_string@data_string,w,c
  5032  0013E6  6E17               	movwf	??_command_builder_add_string& (0+255),c
  5033  0013E8  501A               	movf	command_builder_add_string@inx+1,w,c
  5034  0013EA  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  5035  0013EC  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5036  0013EE  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  5037  0013F2  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5038  0013F6  6AF8               	clrf	tblptru,c
  5039  0013F8  0E05               	movlw	(high __ramtop+-1)
  5040  0013FA  64F7               	cpfsgt	tblptrh,c
  5041  0013FC  D003               	bra	u1877
  5042  0013FE  0008               	tblrd		*
  5043  001400  50F5               	movf	tablat,w,c
  5044  001402  D005               	bra	u1870
  5045  001404                     u1877:
  5046  001404  CFF6 FFE1          	movff	tblptrl,fsr1l
  5047  001408  CFF7 FFE2          	movff	tblptrh,fsr1h
  5048  00140C  50E7               	movf	indf1,w,c
  5049  00140E                     u1870:
  5050  00140E  6E11               	movwf	command_builder_add_char@data,c
  5051  001410  ECEC  F00A         	call	_command_builder_add_char	;wreg free
  5052  001414  4A19               	infsnz	command_builder_add_string@inx,f,c
  5053  001416  2A1A               	incf	command_builder_add_string@inx+1,f,c
  5054  001418                     l2564:
  5055  001418  5019               	movf	command_builder_add_string@inx,w,c
  5056  00141A  2415               	addwf	command_builder_add_string@data_string,w,c
  5057  00141C  6E17               	movwf	??_command_builder_add_string& (0+255),c
  5058  00141E  501A               	movf	command_builder_add_string@inx+1,w,c
  5059  001420  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  5060  001422  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5061  001424  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  5062  001428  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5063  00142C  6AF8               	clrf	tblptru,c
  5064  00142E  0E05               	movlw	(high __ramtop+-1)
  5065  001430  64F7               	cpfsgt	tblptrh,c
  5066  001432  D003               	bra	u1887
  5067  001434  0008               	tblrd		*
  5068  001436  50F5               	movf	tablat,w,c
  5069  001438  D005               	bra	u1880
  5070  00143A                     u1887:
  5071  00143A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5072  00143E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5073  001442  50E7               	movf	indf1,w,c
  5074  001444                     u1880:
  5075  001444  0900               	iorlw	0
  5076  001446  B4D8               	btfsc	status,2,c
  5077  001448  0012               	return	
  5078  00144A  D7C7               	goto	l2560
  5079  00144C                     __end_of_command_builder_add_string:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodh	equ	0xFF4
  5086                           prodl	equ	0xFF3
  5087                           intcon	equ	0xFF2
  5088                           intcon2	equ	0xFF1
  5089                           intcon3	equ	0xFF0
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postinc1	equ	0xFE6
  5094                           postdec1	equ	0xFE5
  5095                           fsr1h	equ	0xFE2
  5096                           fsr1l	equ	0xFE1
  5097                           indf2	equ	0xFDF
  5098                           postinc2	equ	0xFDE
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _command_builder_add_char *****************
  5104 ;; Defined at:
  5105 ;;		line 462 in file "SlaveComm_PIC18.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  send_buffer     2   14[COMRAM] PTR struct buffer
  5108 ;;		 -> communications@send_buffer(42), 
  5109 ;;  data            1   16[COMRAM] unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5121 ;;      Params:         3       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0
  5123 ;;      Temps:          1       0       0       0       0       0       0
  5124 ;;      Totals:         4       0       0       0       0       0       0
  5125 ;;Total ram usage:        4 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    1
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_command_builder1
  5132 ;;		_command_builder3
  5133 ;;		_command_builder_add_string
  5134 ;;		_command_builder2
  5135 ;;		_command_builder4
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text30
  5140  0015D8                     __ptext30:
  5141                           	opt stack 0
  5142  0015D8                     _command_builder_add_char:
  5143                           	opt stack 24
  5144                           
  5145                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5146                           
  5147                           ;incstack = 0
  5148  0015D8  EE20 F028          	lfsr	2,40
  5149  0015DC  500F               	movf	command_builder_add_char@send_buffer,w,c
  5150  0015DE  26D9               	addwf	fsr2l,f,c
  5151  0015E0  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5152  0015E2  22DA               	addwfc	fsr2h,f,c
  5153  0015E4  50DF               	movf	indf2,w,c
  5154  0015E6  6E12               	movwf	??_command_builder_add_char& (0+255),c
  5155  0015E8  5012               	movf	??_command_builder_add_char,w,c
  5156  0015EA  0D01               	mullw	1
  5157  0015EC  50F3               	movf	prodl,w,c
  5158  0015EE  240F               	addwf	command_builder_add_char@send_buffer,w,c
  5159  0015F0  6ED9               	movwf	fsr2l,c
  5160  0015F2  50F4               	movf	prodh,w,c
  5161  0015F4  2010               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5162  0015F6  6EDA               	movwf	fsr2h,c
  5163  0015F8  C011  FFDF         	movff	command_builder_add_char@data,indf2
  5164                           
  5165                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5166  0015FC  EE20 F028          	lfsr	2,40
  5167  001600  500F               	movf	command_builder_add_char@send_buffer,w,c
  5168  001602  26D9               	addwf	fsr2l,f,c
  5169  001604  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5170  001606  22DA               	addwfc	fsr2h,f,c
  5171  001608  2ADF               	incf	indf2,f,c
  5172                           
  5173                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5174  00160A  EE20 F028          	lfsr	2,40
  5175  00160E  500F               	movf	command_builder_add_char@send_buffer,w,c
  5176  001610  26D9               	addwf	fsr2l,f,c
  5177  001612  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5178  001614  22DA               	addwfc	fsr2h,f,c
  5179  001616  0E27               	movlw	39
  5180  001618  64DF               	cpfsgt	indf2,c
  5181  00161A  0012               	return	
  5182                           
  5183                           ;SlaveComm_PIC18.c: 468: {
  5184                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5185  00161C  EE20 F028          	lfsr	2,40
  5186  001620  500F               	movf	command_builder_add_char@send_buffer,w,c
  5187  001622  26D9               	addwf	fsr2l,f,c
  5188  001624  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5189  001626  22DA               	addwfc	fsr2h,f,c
  5190  001628  0E00               	movlw	0
  5191  00162A  6EDF               	movwf	indf2,c
  5192  00162C  0012               	return	
  5193  00162E                     __end_of_command_builder_add_char:
  5194                           	opt stack 0
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           prodh	equ	0xFF4
  5200                           prodl	equ	0xFF3
  5201                           intcon	equ	0xFF2
  5202                           intcon2	equ	0xFF1
  5203                           intcon3	equ	0xFF0
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           indf1	equ	0xFE7
  5207                           postinc1	equ	0xFE6
  5208                           postdec1	equ	0xFE5
  5209                           fsr1h	equ	0xFE2
  5210                           fsr1l	equ	0xFE1
  5211                           indf2	equ	0xFDF
  5212                           postinc2	equ	0xFDE
  5213                           fsr2h	equ	0xFDA
  5214                           fsr2l	equ	0xFD9
  5215                           status	equ	0xFD8
  5216                           
  5217 ;; *************** function _atol *****************
  5218 ;; Defined at:
  5219 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atol.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  s               2   26[COMRAM] PTR const unsigned char 
  5222 ;;		 -> process_data@parameters(50), 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  a               4   35[COMRAM] long 
  5225 ;;  c               1   39[COMRAM] unsigned char 
  5226 ;;  sign            1   34[COMRAM] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  4   26[COMRAM] long 
  5229 ;; Registers used:
  5230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5236 ;;      Params:         4       0       0       0       0       0       0
  5237 ;;      Locals:         6       0       0       0       0       0       0
  5238 ;;      Temps:          4       0       0       0       0       0       0
  5239 ;;      Totals:        14       0       0       0       0       0       0
  5240 ;;Total ram usage:       14 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    2
  5243 ;; This function calls:
  5244 ;;		___lmul
  5245 ;;		_isdigit
  5246 ;; This function is called by:
  5247 ;;		_process_data_parameters
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text31
  5252  000D62                     __ptext31:
  5253                           	opt stack 0
  5254  000D62                     _atol:
  5255                           	opt stack 25
  5256  000D62  C01B  FFD9         	movff	atol@s,fsr2l
  5257  000D66  C01C  FFDA         	movff	atol@s+1,fsr2h
  5258  000D6A  50DF               	movf	indf2,w,c
  5259  000D6C  6E28               	movwf	atol@c,c
  5260  000D6E  4A1B               	infsnz	atol@s,f,c
  5261  000D70  2A1C               	incf	atol@s+1,f,c
  5262  000D72  0E20               	movlw	32
  5263  000D74  1828               	xorwf	atol@c,w,c
  5264  000D76  B4D8               	btfsc	status,2,c
  5265  000D78  D7F4               	goto	l2722
  5266  000D7A  0E09               	movlw	9
  5267  000D7C  1828               	xorwf	atol@c,w,c
  5268  000D7E  B4D8               	btfsc	status,2,c
  5269  000D80  D7F0               	goto	l2722
  5270  000D82  0E00               	movlw	0
  5271  000D84  6E24               	movwf	atol@a,c
  5272  000D86  0E00               	movlw	0
  5273  000D88  6E25               	movwf	atol@a+1,c
  5274  000D8A  0E00               	movlw	0
  5275  000D8C  6E26               	movwf	atol@a+2,c
  5276  000D8E  0E00               	movlw	0
  5277  000D90  6E27               	movwf	atol@a+3,c
  5278  000D92  0E00               	movlw	0
  5279  000D94  6E23               	movwf	atol@sign,c
  5280  000D96  0E2D               	movlw	45
  5281  000D98  1828               	xorwf	atol@c,w,c
  5282  000D9A  A4D8               	btfss	status,2,c
  5283  000D9C  D005               	goto	l2740
  5284  000D9E  2A23               	incf	atol@sign,f,c
  5285  000DA0  D02A               	goto	l2748
  5286  000DA2                     l2738:
  5287  000DA2  4A1B               	infsnz	atol@s,f,c
  5288  000DA4  2A1C               	incf	atol@s+1,f,c
  5289  000DA6  D02E               	goto	l2752
  5290  000DA8                     l2740:
  5291  000DA8  0E2B               	movlw	43
  5292  000DAA  1828               	xorwf	atol@c,w,c
  5293  000DAC  A4D8               	btfss	status,2,c
  5294  000DAE  D02A               	goto	l2752
  5295  000DB0  D022               	goto	l2748
  5296  000DB2                     l2746:
  5297  000DB2  C024  F00F         	movff	atol@a,___lmul@multiplier
  5298  000DB6  C025  F010         	movff	atol@a+1,___lmul@multiplier+1
  5299  000DBA  C026  F011         	movff	atol@a+2,___lmul@multiplier+2
  5300  000DBE  C027  F012         	movff	atol@a+3,___lmul@multiplier+3
  5301  000DC2  0E0A               	movlw	10
  5302  000DC4  6E13               	movwf	___lmul@multiplicand,c
  5303  000DC6  0E00               	movlw	0
  5304  000DC8  6E14               	movwf	___lmul@multiplicand+1,c
  5305  000DCA  0E00               	movlw	0
  5306  000DCC  6E15               	movwf	___lmul@multiplicand+2,c
  5307  000DCE  0E00               	movlw	0
  5308  000DD0  6E16               	movwf	___lmul@multiplicand+3,c
  5309  000DD2  EC17  F00B         	call	___lmul	;wreg free
  5310  000DD6  C028  F01F         	movff	atol@c,??_atol
  5311  000DDA  0ED0               	movlw	208
  5312  000DDC  261F               	addwf	??_atol,f,c
  5313  000DDE  501F               	movf	??_atol,w,c
  5314  000DE0  240F               	addwf	?___lmul,w,c
  5315  000DE2  6E24               	movwf	atol@a,c
  5316  000DE4  0E00               	movlw	0
  5317  000DE6  2010               	addwfc	?___lmul+1,w,c
  5318  000DE8  6E25               	movwf	atol@a+1,c
  5319  000DEA  0E00               	movlw	0
  5320  000DEC  2011               	addwfc	?___lmul+2,w,c
  5321  000DEE  6E26               	movwf	atol@a+2,c
  5322  000DF0  0E00               	movlw	0
  5323  000DF2  2012               	addwfc	?___lmul+3,w,c
  5324  000DF4  6E27               	movwf	atol@a+3,c
  5325  000DF6                     l2748:
  5326  000DF6  C01B  FFD9         	movff	atol@s,fsr2l
  5327  000DFA  C01C  FFDA         	movff	atol@s+1,fsr2h
  5328  000DFE  50DF               	movf	indf2,w,c
  5329  000E00  6E28               	movwf	atol@c,c
  5330  000E02  D7CF               	goto	l2738
  5331  000E04                     l2752:
  5332  000E04  5028               	movf	atol@c,w,c
  5333  000E06  EC91  F00C         	call	_isdigit
  5334  000E0A  B0D8               	btfsc	status,0,c
  5335  000E0C  D7D2               	goto	l2746
  5336  000E0E  5023               	movf	atol@sign,w,c
  5337  000E10  B4D8               	btfsc	status,2,c
  5338  000E12  D01A               	goto	l611
  5339  000E14  C024  F01F         	movff	atol@a,??_atol
  5340  000E18  C025  F020         	movff	atol@a+1,??_atol+1
  5341  000E1C  C026  F021         	movff	atol@a+2,??_atol+2
  5342  000E20  C027  F022         	movff	atol@a+3,??_atol+3
  5343  000E24  1E1F               	comf	??_atol,f,c
  5344  000E26  1E20               	comf	??_atol+1,f,c
  5345  000E28  1E21               	comf	??_atol+2,f,c
  5346  000E2A  1E22               	comf	??_atol+3,f,c
  5347  000E2C  2A1F               	incf	??_atol,f,c
  5348  000E2E  0E00               	movlw	0
  5349  000E30  2220               	addwfc	??_atol+1,f,c
  5350  000E32  2221               	addwfc	??_atol+2,f,c
  5351  000E34  2222               	addwfc	??_atol+3,f,c
  5352  000E36  C01F  F01B         	movff	??_atol,?_atol
  5353  000E3A  C020  F01C         	movff	??_atol+1,?_atol+1
  5354  000E3E  C021  F01D         	movff	??_atol+2,?_atol+2
  5355  000E42  C022  F01E         	movff	??_atol+3,?_atol+3
  5356  000E46  0012               	return	
  5357  000E48                     l611:
  5358  000E48  C024  F01B         	movff	atol@a,?_atol
  5359  000E4C  C025  F01C         	movff	atol@a+1,?_atol+1
  5360  000E50  C026  F01D         	movff	atol@a+2,?_atol+2
  5361  000E54  C027  F01E         	movff	atol@a+3,?_atol+3
  5362  000E58  0012               	return		;funcret
  5363  000E5A                     __end_of_atol:
  5364                           	opt stack 0
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           prodh	equ	0xFF4
  5370                           prodl	equ	0xFF3
  5371                           intcon	equ	0xFF2
  5372                           intcon2	equ	0xFF1
  5373                           intcon3	equ	0xFF0
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           indf1	equ	0xFE7
  5377                           postinc1	equ	0xFE6
  5378                           postdec1	equ	0xFE5
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           indf2	equ	0xFDF
  5382                           postinc2	equ	0xFDE
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _isdigit *****************
  5388 ;; Defined at:
  5389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  c               1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  c               1   16[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;		None               void
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5403 ;;      Params:         0       0       0       0       0       0       0
  5404 ;;      Locals:         2       0       0       0       0       0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0
  5406 ;;      Totals:         3       0       0       0       0       0       0
  5407 ;;Total ram usage:        3 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_atol
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text32
  5418  001922                     __ptext32:
  5419                           	opt stack 0
  5420  001922                     _isdigit:
  5421                           	opt stack 25
  5422                           
  5423                           ;incstack = 0
  5424                           ;isdigit@c stored from wreg
  5425  001922  6E11               	movwf	isdigit@c,c
  5426  001924  0E00               	movlw	0
  5427  001926  6E10               	movwf	_isdigit$2277,c
  5428  001928  0E3A               	movlw	58
  5429  00192A  6011               	cpfslt	isdigit@c,c
  5430  00192C  D005               	goto	l2704
  5431  00192E  0E2F               	movlw	47
  5432  001930  6411               	cpfsgt	isdigit@c,c
  5433  001932  D002               	goto	l2704
  5434  001934  0E01               	movlw	1
  5435  001936  6E10               	movwf	_isdigit$2277,c
  5436  001938                     l2704:
  5437  001938  C010  F00F         	movff	_isdigit$2277,??_isdigit
  5438  00193C  300F               	rrcf	??_isdigit,w,c
  5439  00193E  0012               	return	
  5440  001940                     __end_of_isdigit:
  5441                           	opt stack 0
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           prodh	equ	0xFF4
  5447                           prodl	equ	0xFF3
  5448                           intcon	equ	0xFF2
  5449                           intcon2	equ	0xFF1
  5450                           intcon3	equ	0xFF0
  5451                           postinc0	equ	0xFEE
  5452                           wreg	equ	0xFE8
  5453                           indf1	equ	0xFE7
  5454                           postinc1	equ	0xFE6
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function ___lmul *****************
  5465 ;; Defined at:
  5466 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  multiplier      4   14[COMRAM] unsigned long 
  5469 ;;  multiplicand    4   18[COMRAM] unsigned long 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  product         4   22[COMRAM] unsigned long 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  4   14[COMRAM] unsigned long 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5481 ;;      Params:         8       0       0       0       0       0       0
  5482 ;;      Locals:         4       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0
  5484 ;;      Totals:        12       0       0       0       0       0       0
  5485 ;;Total ram usage:       12 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_powerPulseCheck
  5492 ;;		_atol
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           	psect	text33
  5497  00162E                     __ptext33:
  5498                           	opt stack 0
  5499  00162E                     ___lmul:
  5500                           	opt stack 28
  5501                           
  5502                           ;incstack = 0
  5503  00162E  0E00               	movlw	0
  5504  001630  6E17               	movwf	___lmul@product,c
  5505  001632  0E00               	movlw	0
  5506  001634  6E18               	movwf	___lmul@product+1,c
  5507  001636  0E00               	movlw	0
  5508  001638  6E19               	movwf	___lmul@product+2,c
  5509  00163A  0E00               	movlw	0
  5510  00163C  6E1A               	movwf	___lmul@product+3,c
  5511  00163E                     l2688:
  5512  00163E  A00F               	btfss	___lmul@multiplier,0,c
  5513  001640  D008               	goto	l2692
  5514  001642  5013               	movf	___lmul@multiplicand,w,c
  5515  001644  2617               	addwf	___lmul@product,f,c
  5516  001646  5014               	movf	___lmul@multiplicand+1,w,c
  5517  001648  2218               	addwfc	___lmul@product+1,f,c
  5518  00164A  5015               	movf	___lmul@multiplicand+2,w,c
  5519  00164C  2219               	addwfc	___lmul@product+2,f,c
  5520  00164E  5016               	movf	___lmul@multiplicand+3,w,c
  5521  001650  221A               	addwfc	___lmul@product+3,f,c
  5522  001652                     l2692:
  5523  001652  90D8               	bcf	status,0,c
  5524  001654  3613               	rlcf	___lmul@multiplicand,f,c
  5525  001656  3614               	rlcf	___lmul@multiplicand+1,f,c
  5526  001658  3615               	rlcf	___lmul@multiplicand+2,f,c
  5527  00165A  3616               	rlcf	___lmul@multiplicand+3,f,c
  5528  00165C  90D8               	bcf	status,0,c
  5529  00165E  3212               	rrcf	___lmul@multiplier+3,f,c
  5530  001660  3211               	rrcf	___lmul@multiplier+2,f,c
  5531  001662  3210               	rrcf	___lmul@multiplier+1,f,c
  5532  001664  320F               	rrcf	___lmul@multiplier,f,c
  5533  001666  500F               	movf	___lmul@multiplier,w,c
  5534  001668  1010               	iorwf	___lmul@multiplier+1,w,c
  5535  00166A  1011               	iorwf	___lmul@multiplier+2,w,c
  5536  00166C  1012               	iorwf	___lmul@multiplier+3,w,c
  5537  00166E  A4D8               	btfss	status,2,c
  5538  001670  D7E6               	goto	l2688
  5539  001672  C017  F00F         	movff	___lmul@product,?___lmul
  5540  001676  C018  F010         	movff	___lmul@product+1,?___lmul+1
  5541  00167A  C019  F011         	movff	___lmul@product+2,?___lmul+2
  5542  00167E  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  5543  001682  0012               	return		;funcret
  5544  001684                     __end_of___lmul:
  5545                           	opt stack 0
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           prodh	equ	0xFF4
  5551                           prodl	equ	0xFF3
  5552                           intcon	equ	0xFF2
  5553                           intcon2	equ	0xFF1
  5554                           intcon3	equ	0xFF0
  5555                           postinc0	equ	0xFEE
  5556                           wreg	equ	0xFE8
  5557                           indf1	equ	0xFE7
  5558                           postinc1	equ	0xFE6
  5559                           postdec1	equ	0xFE5
  5560                           fsr1h	equ	0xFE2
  5561                           fsr1l	equ	0xFE1
  5562                           indf2	equ	0xFDF
  5563                           postinc2	equ	0xFDE
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _process_data_parameterize *****************
  5569 ;; Defined at:
  5570 ;;		line 256 in file "SlaveComm_PIC18.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  5573 ;;		 -> process_data@parameters(50), 
  5574 ;;  buffer_to_pa    2   22[COMRAM] PTR struct buffer
  5575 ;;		 -> communications@receive_buffer(42), 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  inx             2   27[COMRAM] int 
  5578 ;;  parameter_po    1   30[COMRAM] unsigned char 
  5579 ;;  parameter_in    1   29[COMRAM] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5589 ;;      Params:         4       0       0       0       0       0       0
  5590 ;;      Locals:         4       0       0       0       0       0       0
  5591 ;;      Temps:          3       0       0       0       0       0       0
  5592 ;;      Totals:        11       0       0       0       0       0       0
  5593 ;;Total ram usage:       11 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    2
  5596 ;; This function calls:
  5597 ;;		___wmul
  5598 ;; This function is called by:
  5599 ;;		_process_data
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text34
  5604  000AB6                     __ptext34:
  5605                           	opt stack 0
  5606  000AB6                     _process_data_parameterize:
  5607                           	opt stack 26
  5608                           
  5609                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  5610                           
  5611                           ;incstack = 0
  5612  000AB6  0E00               	movlw	0
  5613  000AB8  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5614                           
  5615                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  5616  000ABA  0E00               	movlw	0
  5617  000ABC  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5618                           
  5619                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  5620  000ABE  0E00               	movlw	0
  5621  000AC0  6E1D               	movwf	process_data_parameterize@inx+1,c
  5622  000AC2  0E00               	movlw	0
  5623  000AC4  6E1C               	movwf	process_data_parameterize@inx,c
  5624  000AC6  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  5625  000AC8  D008               	goto	l2806
  5626  000ACA  501D               	movf	process_data_parameterize@inx+1,w,c
  5627  000ACC  E105               	bnz	u2220
  5628  000ACE  0E05               	movlw	5
  5629  000AD0  5C1C               	subwf	process_data_parameterize@inx,w,c
  5630  000AD2  B0D8               	btfsc	status,0,c
  5631  000AD4  D082               	goto	l2836
  5632  000AD6  D001               	goto	l2806
  5633  000AD8                     u2220:
  5634  000AD8  D080               	goto	l2836
  5635  000ADA                     l2806:
  5636                           
  5637                           ;SlaveComm_PIC18.c: 269: {
  5638                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  5639  000ADA  C01C  F00F         	movff	process_data_parameterize@inx,___wmul@multiplier
  5640  000ADE  C01D  F010         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5641  000AE2  0E00               	movlw	0
  5642  000AE4  6E12               	movwf	___wmul@multiplicand+1,c
  5643  000AE6  0E0A               	movlw	10
  5644  000AE8  6E11               	movwf	___wmul@multiplicand,c
  5645  000AEA  EC4B  F00C         	call	___wmul	;wreg free
  5646  000AEE  500F               	movf	?___wmul,w,c
  5647  000AF0  2415               	addwf	process_data_parameterize@parameters,w,c
  5648  000AF2  6ED9               	movwf	fsr2l,c
  5649  000AF4  5010               	movf	?___wmul+1,w,c
  5650  000AF6  2016               	addwfc	process_data_parameterize@parameters+1,w,c
  5651  000AF8  6EDA               	movwf	fsr2h,c
  5652  000AFA  0E00               	movlw	0
  5653  000AFC  6EDF               	movwf	indf2,c
  5654  000AFE  4A1C               	infsnz	process_data_parameterize@inx,f,c
  5655  000B00  2A1D               	incf	process_data_parameterize@inx+1,f,c
  5656  000B02  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  5657  000B04  D7EA               	goto	l2806
  5658  000B06  501D               	movf	process_data_parameterize@inx+1,w,c
  5659  000B08  E168               	bnz	l2836
  5660  000B0A  D7E1               	goto	L2
  5661  000B0C                     l2812:
  5662                           
  5663                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  5664  000B0C  0E00               	movlw	0
  5665  000B0E  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5666                           
  5667                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  5668  000B10  2A1E               	incf	process_data_parameterize@parameter_index,f,c
  5669                           
  5670                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  5671  000B12  0E04               	movlw	4
  5672  000B14  641E               	cpfsgt	process_data_parameterize@parameter_index,c
  5673  000B16  D05A               	goto	l2834
  5674                           
  5675                           ;SlaveComm_PIC18.c: 286: {
  5676                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  5677  000B18  0E04               	movlw	4
  5678  000B1A  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5679                           
  5680                           ;SlaveComm_PIC18.c: 290: }
  5681                           ;SlaveComm_PIC18.c: 292: break;
  5682  000B1C  D057               	goto	l2834
  5683  000B1E                     l2820:
  5684                           
  5685                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5686  000B1E  EE20 F029          	lfsr	2,41
  5687  000B22  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5688  000B24  26D9               	addwf	fsr2l,f,c
  5689  000B26  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5690  000B28  22DA               	addwfc	fsr2h,f,c
  5691  000B2A  50DF               	movf	indf2,w,c
  5692  000B2C  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5693  000B2E  5019               	movf	??_process_data_parameterize,w,c
  5694  000B30  0D01               	mullw	1
  5695  000B32  50F3               	movf	prodl,w,c
  5696  000B34  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5697  000B36  6ED9               	movwf	fsr2l,c
  5698  000B38  50F4               	movf	prodh,w,c
  5699  000B3A  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5700  000B3C  6EDA               	movwf	fsr2h,c
  5701  000B3E  501E               	movf	process_data_parameterize@parameter_index,w,c
  5702  000B40  0D0A               	mullw	10
  5703  000B42  C015  F01A         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5704  000B46  C016  F01B         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5705  000B4A  50F3               	movf	prodl,w,c
  5706  000B4C  261A               	addwf	??_process_data_parameterize+1,f,c
  5707  000B4E  50F4               	movf	prodh,w,c
  5708  000B50  221B               	addwfc	??_process_data_parameterize+2,f,c
  5709  000B52  501F               	movf	process_data_parameterize@parameter_position,w,c
  5710  000B54  0D01               	mullw	1
  5711  000B56  50F3               	movf	prodl,w,c
  5712  000B58  241A               	addwf	??_process_data_parameterize+1,w,c
  5713  000B5A  6EE1               	movwf	fsr1l,c
  5714  000B5C  50F4               	movf	prodh,w,c
  5715  000B5E  201B               	addwfc	??_process_data_parameterize+2,w,c
  5716  000B60  6EE2               	movwf	fsr1h,c
  5717  000B62  CFDF FFE7          	movff	indf2,indf1
  5718                           
  5719                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  5720  000B66  2A1F               	incf	process_data_parameterize@parameter_position,f,c
  5721                           
  5722                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  5723  000B68  0E09               	movlw	9
  5724  000B6A  641F               	cpfsgt	process_data_parameterize@parameter_position,c
  5725  000B6C  D002               	goto	l2828
  5726                           
  5727                           ;SlaveComm_PIC18.c: 298: {
  5728                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  5729  000B6E  0E09               	movlw	9
  5730  000B70  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5731  000B72                     l2828:
  5732                           
  5733                           ;SlaveComm_PIC18.c: 302: }
  5734                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  5735  000B72  501E               	movf	process_data_parameterize@parameter_index,w,c
  5736  000B74  0D0A               	mullw	10
  5737  000B76  C015  F019         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5738  000B7A  C016  F01A         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5739  000B7E  50F3               	movf	prodl,w,c
  5740  000B80  2619               	addwf	??_process_data_parameterize,f,c
  5741  000B82  50F4               	movf	prodh,w,c
  5742  000B84  221A               	addwfc	??_process_data_parameterize+1,f,c
  5743  000B86  501F               	movf	process_data_parameterize@parameter_position,w,c
  5744  000B88  0D01               	mullw	1
  5745  000B8A  50F3               	movf	prodl,w,c
  5746  000B8C  2419               	addwf	??_process_data_parameterize,w,c
  5747  000B8E  6ED9               	movwf	fsr2l,c
  5748  000B90  50F4               	movf	prodh,w,c
  5749  000B92  201A               	addwfc	??_process_data_parameterize+1,w,c
  5750  000B94  6EDA               	movwf	fsr2h,c
  5751  000B96  0E00               	movlw	0
  5752  000B98  6EDF               	movwf	indf2,c
  5753                           
  5754                           ;SlaveComm_PIC18.c: 307: }
  5755                           
  5756                           ;SlaveComm_PIC18.c: 306: break;
  5757  000B9A  D018               	goto	l2834
  5758  000B9C                     l2832:
  5759  000B9C  EE20 F029          	lfsr	2,41
  5760  000BA0  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5761  000BA2  26D9               	addwf	fsr2l,f,c
  5762  000BA4  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5763  000BA6  22DA               	addwfc	fsr2h,f,c
  5764  000BA8  50DF               	movf	indf2,w,c
  5765  000BAA  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5766  000BAC  5019               	movf	??_process_data_parameterize,w,c
  5767  000BAE  0D01               	mullw	1
  5768  000BB0  50F3               	movf	prodl,w,c
  5769  000BB2  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5770  000BB4  6ED9               	movwf	fsr2l,c
  5771  000BB6  50F4               	movf	prodh,w,c
  5772  000BB8  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5773  000BBA  6EDA               	movwf	fsr2h,c
  5774  000BBC  50DF               	movf	indf2,w,c
  5775                           
  5776                           ; Switch size 1, requested type "space"
  5777                           ; Number of cases is 2, Range of values is 33 to 59
  5778                           ; switch strategies available:
  5779                           ; Name         Instructions Cycles
  5780                           ; simple_byte            7     4 (average)
  5781                           ;	Chosen strategy is simple_byte
  5782  000BBE  0A21               	xorlw	33	; case 33
  5783  000BC0  B4D8               	btfsc	status,2,c
  5784  000BC2  D004               	goto	l2834
  5785  000BC4  0A1A               	xorlw	26	; case 59
  5786  000BC6  B4D8               	btfsc	status,2,c
  5787  000BC8  D7A1               	goto	l2812
  5788  000BCA  D7A9               	goto	l2820
  5789  000BCC                     l2834:
  5790                           
  5791                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  5792  000BCC  EE20 F029          	lfsr	2,41
  5793  000BD0  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5794  000BD2  26D9               	addwf	fsr2l,f,c
  5795  000BD4  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5796  000BD6  22DA               	addwfc	fsr2h,f,c
  5797  000BD8  2ADF               	incf	indf2,f,c
  5798  000BDA                     l2836:
  5799  000BDA  EE20 F029          	lfsr	2,41
  5800  000BDE  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5801  000BE0  26D9               	addwf	fsr2l,f,c
  5802  000BE2  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5803  000BE4  22DA               	addwfc	fsr2h,f,c
  5804  000BE6  50DF               	movf	indf2,w,c
  5805  000BE8  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5806  000BEA  5019               	movf	??_process_data_parameterize,w,c
  5807  000BEC  0D01               	mullw	1
  5808  000BEE  50F3               	movf	prodl,w,c
  5809  000BF0  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5810  000BF2  6ED9               	movwf	fsr2l,c
  5811  000BF4  50F4               	movf	prodh,w,c
  5812  000BF6  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5813  000BF8  6EDA               	movwf	fsr2h,c
  5814  000BFA  0E2A               	movlw	42
  5815  000BFC  18DE               	xorwf	postinc2,w,c
  5816  000BFE  B4D8               	btfsc	status,2,c
  5817  000C00  0012               	return	
  5818  000C02  EE20 F029          	lfsr	2,41
  5819  000C06  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5820  000C08  26D9               	addwf	fsr2l,f,c
  5821  000C0A  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5822  000C0C  22DA               	addwfc	fsr2h,f,c
  5823  000C0E  0E28               	movlw	40
  5824  000C10  60DF               	cpfslt	indf2,c
  5825  000C12  0012               	return	
  5826  000C14  EE20 F028          	lfsr	2,40
  5827  000C18  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5828  000C1A  26D9               	addwf	fsr2l,f,c
  5829  000C1C  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5830  000C1E  22DA               	addwfc	fsr2h,f,c
  5831  000C20  EE10 F029          	lfsr	1,41
  5832  000C24  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5833  000C26  26E1               	addwf	fsr1l,f,c
  5834  000C28  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5835  000C2A  22E2               	addwfc	fsr1h,f,c
  5836  000C2C  50DE               	movf	postinc2,w,c
  5837  000C2E  18E6               	xorwf	postinc1,w,c
  5838  000C30  B4D8               	btfsc	status,2,c
  5839  000C32  0012               	return	
  5840  000C34  D7B3               	goto	l2832
  5841  000C36                     __end_of_process_data_parameterize:
  5842                           	opt stack 0
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           prodh	equ	0xFF4
  5848                           prodl	equ	0xFF3
  5849                           intcon	equ	0xFF2
  5850                           intcon2	equ	0xFF1
  5851                           intcon3	equ	0xFF0
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           indf1	equ	0xFE7
  5855                           postinc1	equ	0xFE6
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           fsr2h	equ	0xFDA
  5862                           fsr2l	equ	0xFD9
  5863                           status	equ	0xFD8
  5864                           
  5865 ;; *************** function ___wmul *****************
  5866 ;; Defined at:
  5867 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  multiplier      2   14[COMRAM] unsigned int 
  5870 ;;  multiplicand    2   16[COMRAM] unsigned int 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  product         2   18[COMRAM] unsigned int 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  2   14[COMRAM] unsigned int 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0, prodl, prodh
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5882 ;;      Params:         4       0       0       0       0       0       0
  5883 ;;      Locals:         2       0       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0
  5885 ;;      Totals:         6       0       0       0       0       0       0
  5886 ;;Total ram usage:        6 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    1
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_process_data_parameterize
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text35
  5897  001896                     __ptext35:
  5898                           	opt stack 0
  5899  001896                     ___wmul:
  5900                           	opt stack 26
  5901                           
  5902                           ;incstack = 0
  5903  001896  500F               	movf	___wmul@multiplier,w,c
  5904  001898  0211               	mulwf	___wmul@multiplicand,c
  5905  00189A  CFF3 F013          	movff	prodl,___wmul@product
  5906  00189E  CFF4 F014          	movff	prodh,___wmul@product+1
  5907  0018A2  500F               	movf	___wmul@multiplier,w,c
  5908  0018A4  0212               	mulwf	___wmul@multiplicand+1,c
  5909  0018A6  50F3               	movf	prodl,w,c
  5910  0018A8  2614               	addwf	___wmul@product+1,f,c
  5911  0018AA  5010               	movf	___wmul@multiplier+1,w,c
  5912  0018AC  0211               	mulwf	___wmul@multiplicand,c
  5913  0018AE  50F3               	movf	prodl,w,c
  5914  0018B0  2614               	addwf	___wmul@product+1,f,c
  5915  0018B2  C013  F00F         	movff	___wmul@product,?___wmul
  5916  0018B6  C014  F010         	movff	___wmul@product+1,?___wmul+1
  5917  0018BA  0012               	return	
  5918  0018BC                     __end_of___wmul:
  5919                           	opt stack 0
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           intcon	equ	0xFF2
  5927                           intcon2	equ	0xFF1
  5928                           intcon3	equ	0xFF0
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           indf1	equ	0xFE7
  5932                           postinc1	equ	0xFE6
  5933                           postdec1	equ	0xFE5
  5934                           fsr1h	equ	0xFE2
  5935                           fsr1l	equ	0xFE1
  5936                           indf2	equ	0xFDF
  5937                           postinc2	equ	0xFDE
  5938                           fsr2h	equ	0xFDA
  5939                           fsr2l	equ	0xFD9
  5940                           status	equ	0xFD8
  5941                           
  5942 ;; *************** function _SPISlaveInit *****************
  5943 ;; Defined at:
  5944 ;;		line 669 in file "SlaveComm_PIC18.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      void 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5958 ;;      Params:         0       0       0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    1
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_communications
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text36
  5973  001684                     __ptext36:
  5974                           	opt stack 0
  5975  001684                     _SPISlaveInit:
  5976                           	opt stack 28
  5977                           
  5978                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  5979                           
  5980                           ;incstack = 0
  5981  001684  9092               	bcf	3986,0,c	;volatile
  5982                           
  5983                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  5984  001686  8292               	bsf	3986,1,c	;volatile
  5985                           
  5986                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  5987  001688  9694               	bcf	3988,3,c	;volatile
  5988                           
  5989                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  5990  00168A  9A94               	bcf	3988,5,c	;volatile
  5991                           
  5992                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  5993  00168C  9C94               	bcf	3988,6,c	;volatile
  5994                           
  5995                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  5996  00168E  9E94               	bcf	3988,7,c	;volatile
  5997                           
  5998                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  5999  001690  010F               	movlb	15	; () banked
  6000  001692  9338               	bcf	56,1,b	;volatile
  6001                           
  6002                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6003  001694  8C8B               	bsf	3979,6,c	;volatile
  6004                           
  6005                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6006  001696  868B               	bsf	3979,3,c	;volatile
  6007                           
  6008                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6009  001698  8A8B               	bsf	3979,5,c	;volatile
  6010                           
  6011                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6012  00169A  8E8B               	bsf	3979,7,c	;volatile
  6013                           
  6014                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6015  00169C  9A6C               	bcf	3948,5,c	;volatile
  6016                           
  6017                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6018  00169E  010F               	movlb	15	; () banked
  6019  0016A0  9139               	bcf	57,0,b	;volatile
  6020                           
  6021                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6022  0016A2  010F               	movlb	15	; () banked
  6023  0016A4  9339               	bcf	57,1,b	;volatile
  6024                           
  6025                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6026  0016A6  010F               	movlb	15	; () banked
  6027  0016A8  9539               	bcf	57,2,b	;volatile
  6028                           
  6029                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6030  0016AA  010F               	movlb	15	; () banked
  6031  0016AC  9739               	bcf	57,3,b	;volatile
  6032                           
  6033                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6034  0016AE  8093               	bsf	3987,0,c	;volatile
  6035                           
  6036                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6037  0016B0  8293               	bsf	3987,1,c	;volatile
  6038                           
  6039                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6040  0016B2  8493               	bsf	3987,2,c	;volatile
  6041                           
  6042                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6043  0016B4  9693               	bcf	3987,3,c	;volatile
  6044                           
  6045                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6046  0016B6  9E6D               	bcf	3949,7,c	;volatile
  6047                           
  6048                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6049  0016B8  8C6D               	bsf	3949,6,c	;volatile
  6050                           
  6051                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6052  0016BA  9E6C               	bcf	3948,7,c	;volatile
  6053                           
  6054                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6055  0016BC  9C6C               	bcf	3948,6,c	;volatile
  6056                           
  6057                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6058  0016BE  9A6C               	bcf	3948,5,c	;volatile
  6059                           
  6060                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6061  0016C0  886C               	bsf	3948,4,c	;volatile
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6065  0016C2  506C               	movf	3948,w,c	;volatile
  6066  0016C4  0BF0               	andlw	-16
  6067  0016C6  0904               	iorlw	4
  6068  0016C8  6E6C               	movwf	3948,c	;volatile
  6069                           
  6070                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6071  0016CA  0E00               	movlw	0
  6072  0016CC  6E69               	movwf	3945,c	;volatile
  6073                           
  6074                           ; BSR set to: 15
  6075                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6076  0016CE  9869               	bcf	3945,4,c	;volatile
  6077                           
  6078                           ; BSR set to: 15
  6079                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6080  0016D0  8A6C               	bsf	3948,5,c	;volatile
  6081  0016D2  0012               	return	
  6082  0016D4                     __end_of_SPISlaveInit:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           intcon2	equ	0xFF1
  6092                           intcon3	equ	0xFF0
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           indf1	equ	0xFE7
  6096                           postinc1	equ	0xFE6
  6097                           postdec1	equ	0xFE5
  6098                           fsr1h	equ	0xFE2
  6099                           fsr1l	equ	0xFE1
  6100                           indf2	equ	0xFDF
  6101                           postinc2	equ	0xFDE
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function _Timer0_ISR *****************
  6107 ;; Defined at:
  6108 ;;		line 221 in file "Current_Sense_Main.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6122 ;;      Params:         0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0
  6124 ;;      Temps:         14       0       0       0       0       0       0
  6125 ;;      Totals:        14       0       0       0       0       0       0
  6126 ;;Total ram usage:       14 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		Interrupt level 2
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	intcode
  6136  000008                     __pintcode:
  6137                           	opt stack 0
  6138  000008                     _Timer0_ISR:
  6139                           	opt stack 23
  6140                           
  6141                           ; BSR set to: 15
  6142                           ;incstack = 0
  6143  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6144  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6145  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6146  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6147  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6148  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6149  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6150  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6151  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6152  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6153  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6154  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6155  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6156  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6157  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6158                           
  6159                           ;Current_Sense_Main.c: 224: INTCONbits.TMR0IF = 0;
  6160  000042  94F2               	bcf	intcon,2,c	;volatile
  6161                           
  6162                           ;Current_Sense_Main.c: 226: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6163  000044  0EFC               	movlw	252
  6164  000046  6ED7               	movwf	4055,c	;volatile
  6165                           
  6166                           ;Current_Sense_Main.c: 227: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6167  000048  0E18               	movlw	24
  6168  00004A  6ED6               	movwf	4054,c	;volatile
  6169                           
  6170                           ;Current_Sense_Main.c: 229: timerCountHF++;
  6171  00004C  0E01               	movlw	1
  6172  00004E  264A               	addwf	_timerCountHF,f,c	;volatile
  6173  000050  0E00               	movlw	0
  6174  000052  224B               	addwfc	_timerCountHF+1,f,c	;volatile
  6175  000054  224C               	addwfc	_timerCountHF+2,f,c	;volatile
  6176  000056  224D               	addwfc	_timerCountHF+3,f,c	;volatile
  6177                           
  6178                           ;Current_Sense_Main.c: 230: timerCountLF++;
  6179  000058  0E01               	movlw	1
  6180  00005A  263C               	addwf	_timerCountLF,f,c	;volatile
  6181  00005C  0E00               	movlw	0
  6182  00005E  223D               	addwfc	_timerCountLF+1,f,c	;volatile
  6183  000060  223E               	addwfc	_timerCountLF+2,f,c	;volatile
  6184  000062  223F               	addwfc	_timerCountLF+3,f,c	;volatile
  6185                           
  6186                           ;Current_Sense_Main.c: 232: return;
  6187  000064  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6188  000068  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6189  00006C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6190  000070  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6191  000074  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6192  000078  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6193  00007C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6194  000080  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6195  000084  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6196  000088  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6197  00008C  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6198  000090  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6199  000094  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6200  000098  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6201  00009C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6202  00009E  0011               	retfie		f
  6203  0000A0                     __end_of_Timer0_ISR:
  6204                           	opt stack 0
  6205                           pclatu	equ	0xFFB
  6206                           pclath	equ	0xFFA
  6207                           tblptru	equ	0xFF8
  6208                           tblptrh	equ	0xFF7
  6209                           tblptrl	equ	0xFF6
  6210                           tablat	equ	0xFF5
  6211                           prodh	equ	0xFF4
  6212                           prodl	equ	0xFF3
  6213                           intcon	equ	0xFF2
  6214                           intcon2	equ	0xFF1
  6215                           intcon3	equ	0xFF0
  6216                           postinc0	equ	0xFEE
  6217                           fsr0h	equ	0xFEA
  6218                           fsr0l	equ	0xFE9
  6219                           wreg	equ	0xFE8
  6220                           indf1	equ	0xFE7
  6221                           postinc1	equ	0xFE6
  6222                           postdec1	equ	0xFE5
  6223                           fsr1h	equ	0xFE2
  6224                           fsr1l	equ	0xFE1
  6225                           indf2	equ	0xFDF
  6226                           postinc2	equ	0xFDE
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           pclatu	equ	0xFFB
  6231                           pclath	equ	0xFFA
  6232                           tblptru	equ	0xFF8
  6233                           tblptrh	equ	0xFF7
  6234                           tblptrl	equ	0xFF6
  6235                           tablat	equ	0xFF5
  6236                           prodh	equ	0xFF4
  6237                           prodl	equ	0xFF3
  6238                           intcon	equ	0xFF2
  6239                           intcon2	equ	0xFF1
  6240                           intcon3	equ	0xFF0
  6241                           postinc0	equ	0xFEE
  6242                           fsr0h	equ	0xFEA
  6243                           fsr0l	equ	0xFE9
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           postinc1	equ	0xFE6
  6247                           postdec1	equ	0xFE5
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256                           	psect	rparam
  6257  0000                     pclatu	equ	0xFFB
  6258                           pclath	equ	0xFFA
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           intcon2	equ	0xFF1
  6267                           intcon3	equ	0xFF0
  6268                           postinc0	equ	0xFEE
  6269                           fsr0h	equ	0xFEA
  6270                           fsr0l	equ	0xFE9
  6271                           wreg	equ	0xFE8
  6272                           indf1	equ	0xFE7
  6273                           postinc1	equ	0xFE6
  6274                           postdec1	equ	0xFE5
  6275                           fsr1h	equ	0xFE2
  6276                           fsr1l	equ	0xFE1
  6277                           indf2	equ	0xFDF
  6278                           postinc2	equ	0xFDE
  6279                           fsr2h	equ	0xFDA
  6280                           fsr2l	equ	0xFD9
  6281                           status	equ	0xFD8
  6282                           
  6283                           	psect	temp
  6284  000051                     btemp:
  6285                           	opt stack 0
  6286  000051                     	ds	1
  6287  0000                     int$flags	set	btemp
  6288                           pclatu	equ	0xFFB
  6289                           pclath	equ	0xFFA
  6290                           tblptru	equ	0xFF8
  6291                           tblptrh	equ	0xFF7
  6292                           tblptrl	equ	0xFF6
  6293                           tablat	equ	0xFF5
  6294                           prodh	equ	0xFF4
  6295                           prodl	equ	0xFF3
  6296                           intcon	equ	0xFF2
  6297                           intcon2	equ	0xFF1
  6298                           intcon3	equ	0xFF0
  6299                           postinc0	equ	0xFEE
  6300                           fsr0h	equ	0xFEA
  6301                           fsr0l	equ	0xFE9
  6302                           wreg	equ	0xFE8
  6303                           indf1	equ	0xFE7
  6304                           postinc1	equ	0xFE6
  6305                           postdec1	equ	0xFE5
  6306                           fsr1h	equ	0xFE2
  6307                           fsr1l	equ	0xFE1
  6308                           indf2	equ	0xFDF
  6309                           postinc2	equ	0xFDE
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      80
    BANK0           160     57     157
    BANK1           256      5       5
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), com_command_setPower@temp(COMRAM[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), com_command_setPower@temp(COMRAM[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(COMRAM[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), 
		 -> com_command_setPower@temp(COMRAM[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   87829
                                              0 BANK1      5     5      0
                     _communications
                          _delayMS10
                               _init
                        _initMCPFout
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1415
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     453
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCPFout                                          1     1      0     453
                                             19 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (2) _delayMS10                                            5     3      2     453
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   84882
                                             55 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     402
                                             16 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   40551
                                             54 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   11793
                                             34 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   14186
                                             40 COMRAM    14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     572
                                             17 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     148
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   43323
                                              0 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   41714
                                             54 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    3575
                                             25 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     981
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    9990
                                             30 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    9497
                                             26 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   14263
                                             40 COMRAM    14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2313
                                             27 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     386
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   11685
                                             26 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    5429
                                             18 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    3728
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1204
                                             26 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     558
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1249
                                             20 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initMCPFout
     _delayMS10
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      5       5       6        2.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     39      9D       4       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F2       9        0.0%
DATA                 0      0      F2      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Jun 10 05:19:07 2017

                                       _SPISlaveInit 1684                                  ___wmul@multiplicand 0011  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l111 0F74                                                  l116 0FFC  
                                                l125 18D8                                                  l150 097A  
                                                l127 18D4                                                  l165 17D0  
                                                l406 186C                                                  l158 0A82  
                                                l611 0E48                                                  l299 10DC  
                                                l808 13BE                                                  l818 150C  
                                                l865 0F2C                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0039  
                                       ?_initMCPFout 0001                                                 l3010 1282  
                                               l3012 128E                                                 l3006 1266  
                                               l3110 111A                                                 l3008 1274  
                                               l3016 1298                                                 l3026 102C  
                                               l3124 1170                                                 l3116 1142  
                                               l3108 110A                                                 l3220 0F98  
                                               l3038 1070                                                 l3070 12EA  
                                               l3118 1156                                                 l2600 14FE  
                                               l3048 10CA                                                 l3128 1182  
                                               l3160 0976                                                 l3208 0F5E  
                                               l3242 0FE6                                                 l3226 0FA8  
                                               l3172 0A16                                                 l2630 0C7C  
                                               l3078 134A                                                 l3190 0AB0  
                                               l3174 0A28                                                 l2704 1938  
                                               l2560 13DA                                                 l2722 0D62  
                                               l2650 0D20                                                 l2626 0C48  
                                               l3186 0A62                                                 l3178 0A40  
                                               l2820 0B1E                                                 l2812 0B0C  
                                               l2740 0DA8                                                 l2564 1418  
                                               l2572 1370                                                 l2644 0CEA  
                                               l2636 0CAE                                                 l2806 0ADA  
                                               l2574 137C                                                 l2662 0E6A  
                                               l2638 0CB2                                                 l2902 0902  
                                               l2832 0B9C                                                 l2752 0E04  
                                               l2584 13B0                                                 l2576 1380  
                                               l2592 14CA                                                 l2672 0EC2  
                                               l2656 0D58                                                 l2834 0BCC  
                                               l2746 0DB2                                                 l2738 0DA2  
                                               l2594 14D6                                                 l2914 191A  
                                               l2828 0B72                                                 l2836 0BDA  
                                               l2692 1652                                                 l2748 0DF6  
                                               l2596 14DA                                                 l2860 0708  
                                               l2772 17BE                                                 l2688 163E  
                                               l2872 079E                                                 l2848 0684  
                                               l2890 0880                                                 l2882 0828  
                                               l2876 07E2                                                 l2796 1868  
                                               l2894 08AC                                                 l2886 0854  
                                               l2898 08D8                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2120 1840  
                                               u2130 1842                                                 u2220 0AD8  
                                               _IPR1 000F9F                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               u1870 140E                                                 u2807 1460  
                                               u1880 1444                                                 u2817 1472  
                                               u2770 0FD2                                                 u2827 1488  
                                               u1877 1404                                                 u2837 149E  
                                               u1887 143A                                                 u2847 17C4  
                                               u2857 122E                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0D62                                                 _main 0F50  
                                               _init 1986                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 0051  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00A0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00F8                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 10E0  
                                       main@inx_1080 0103                                                ?_atol 001B  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 062A                                                STR_11 0653  
                                              STR_12 0653                                                STR_20 061E  
                                              STR_13 0657                                                STR_21 063E  
                                              STR_14 062A                                                STR_22 060D  
                                              STR_23 064F                                                STR_15 065B  
                                              STR_40 064B                                                STR_32 0643  
                                              STR_16 0639                                                STR_17 062A  
                                              STR_26 0657                                                STR_18 0624  
                                              STR_19 0617                                                STR_27 0624  
                                              STR_35 0647                                                STR_28 0657  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 13D0  
                                    __end_of___llmod 151E                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001B                                    ?_command_builder3 001B  
                                       main@initDone 0100                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 16D4  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0013  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0017  
                                 ??_command_builder1 001F                                   ??_command_builder3 0023  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 0039  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1970                                     ?_powerPulseCheck 0001  
                                    __end_of_isdigit 1940                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0024                                                atol@c 0028  
                                              atol@s 001B                                                _ultoa 0E5A  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                      __end_of_strcmp2 0D62  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 0019                 com_command_setEnergyUsed@send_buffer 0029  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 0019  
                                    __initialization 151E                                         __end_of_atol 0E5A  
                                       __end_of_main 1020                                         __end_of_init 1998  
                             __end_of_communications 1188                               _com_command_setVersion 1870  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 1848  
                       command_builder_add_char@data 0011                                               ??_atol 001F  
                                             ??_main 003C                                               ??_init 0015  
                                      _SPI_send_data 1902                                        __activetblptr 000002  
                            _process_data_parameters 0660                                     receive_data@data 0015  
                                   ___llmod@dividend 000F                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 001C                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0010  
                              ??_initInterruptsClear 000F                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 162E  
                                             ___wmul 1896                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 0017  
                                          ??___llmod 0017                                               _initIO 18E0  
                                             clear_0 1562                                               clear_1 156E  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 0029  
                                          ??_initOSC 000F                            _process_data_parameterize 0AB6  
                                       __pdataCOMRAM 004E                                            ??_isdigit 000F  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 0028                             com_command_setPower@temp 002B  
                                             ultoa@v 0024                                            ??_strcmp2 0013  
                                   __end_of_strmatch 1848                                        ?_receive_data 0012  
                                         __accesstop 0060                              __end_of__initialization 1574  
                               __size_of_initMCPFout 006C                      powerPulseCheck@timerCountHFLast 00F9  
                    com_command_setPower@send_buffer 0029                                        ___rparam_used 000001  
                                  SPI_send_data@data 000F                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1998                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0012                                        __end_of_ultoa 0F50  
                          ??_process_data_parameters 003B                   powerPulseCheck@meterEnergyUsedPart 0060  
                       communications@receive_buffer 0096                command_builder_add_string@data_string 0015  
                 __end_of_command_builder_add_string 144C                           _command_builder_add_string 13D0  
                                            ??_ultoa 0024                                           __pbssBANK0 0060  
                                     ??_receive_data 0014                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0016                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 18BC                                              ?___lmul 000F  
                                            ?___wmul 000F                                   __CFG_CCP3MX$PORTB5 000000  
                                 ?_pulseFoutPassThru 0001                                      ??_SPI_send_data 000F  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 003B           communications@end_of_transmission_received 0045  
                                     ___lmul@product 0017                          __end_of_resetCommunications 12BE  
                                    _meterEnergyUsed 0064                                  ??_pulseFoutPassThru 000F  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 176A                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1970                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 15D8                                    __end_of_delayMS10 17E6  
                    __end_of_process_data_parameters 0906                             __end_of_SPI_receive_data 1870  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
                          __end_of_pulseFoutPassThru 18E0      process_data_parameterize@buffer_to_parameterize 0017  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0023                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 001E  
                                            ___lldiv 134E                                      __size_of___wmul 0026  
                                            ___llmod 14B8                                         __psmallconst 0600  
                               SPI_receive_data@data 000F                                      __size_of_initIO 0022  
                                            __pcinit 151E                                              __ramtop 0600  
                                          ?_strmatch 001A                                              __ptext0 0F50  
                                            __ptext1 18BC                                              __ptext2 0906  
                                            __ptext3 1940                                              __ptext4 1986  
                                            __ptext5 1958                                              __ptext6 144C  
                                            __ptext7 17B4                                              __ptext8 16D4  
                                            __ptext9 18E0                                           _meterWatts 0068  
                                          _T0CONbits 000FD5                                              _initOSC 1958  
                                  __end_of_initTimer 1958                                              _isdigit 1922  
                                __size_of_Timer0_ISR 0098                                              main@inx 0101  
                                            _strcmp2 0C36                                 end_of_initialization 1574  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 134E  
                          powerPulseCheck@firstPulse 0050                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1896                             __size_of_powerPulseCheck 01B0  
                                   ??_communications 003C                                      ___lldiv@divisor 0013  
                                    ___lldiv@counter 001B          process_data_parameterize@parameter_position 001F  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              receive_data@my_status 0042                                 __end_of_receive_data 10E0  
                                         ??_strmatch 001E                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 0043                          ??_com_command_setEnergyUsed 002B  
                                      ?_process_data 00C0                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                   powerPulseCheck@timerCountHFCheck 004E                           process_data@receive_buffer 00C0  
                        __end_of_initInterruptsClear 1720                    __end_of_process_data_parameterize 0C36  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 1720  
                communications@receive_current_state 0044                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1684                                       __end_of___wmul 18BC  
                                      __pidataCOMRAM 199C                command_builder_add_string@send_buffer 0013  
                                     __end_of_initIO 1902                                       ??_process_data 003C  
                        ?_command_builder_add_string 0013                                  start_initialization 151E  
                                      ??_initMCPFout 0014                         resetCommunications@commState 0040  
                                   _command_builder1 1582                                     _command_builder3 1188  
                          _com_command_setEnergyUsed 176A                                      ___llmod@divisor 0013  
                                    ___llmod@counter 0017                    com_command_setVersion@send_buffer 0023  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0011  
                              ?_com_command_setPower 0029                                       ??_SPISlaveInit 000F  
                                           ??___lmul 0017                                             ??___wmul 0013  
                send_end_of_transmission@send_buffer 001F                                    ??_powerPulseCheck 001C  
                                        __pdataBANK0 00F9                                             ??_initIO 000F  
                         ??_send_end_of_transmission 0021                           ??_command_builder_add_char 0012  
                                        __pbssCOMRAM 003C                                        __pcstackBANK0 00C0  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0011  
                                 __end_of_Timer0_ISR 00A0                                         _isdigit$2277 0010  
                                     delayMS10@count 000F                                    ?_SPI_receive_data 000F  
                                          _delayMS10 17B4                                  __end_of_initMCPFout 14B8  
                      com_command_setEnergyUsed@temp 002B                                   ??_SPI_receive_data 0011  
                                       delayMS10@inx 0012                                command_builder1@data1 001D  
                        command_builder1@send_buffer 001B                             ?_process_data_parameters 0037  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 001D                                command_builder3@data2 001F  
                              command_builder3@data3 0021                                             ?___lldiv 000F  
                                           ?___llmod 000F                                __end_of_SPI_send_data 1922  
                                           ?_initOSC 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 0037                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                    send_data@send_end 0015  
                                          _initTimer 1940                                             ?_strcmp2 000F  
                       __size_of_resetCommunications 0098                                       __size_of_ultoa 00F6  
                                     strmatch@result 001E                  process_data_parameterize@parameters 0015  
                           pulseFoutPassThru@runonce 0049                                         _receive_data 1020  
                                     ___wmul@product 0013                                             _LATAbits 000F89  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 000F                                 __end_of_process_data 1818  
                                          _send_data 12BE                               ??_com_command_setPower 002B  
                  process_data_parameters@parameters 0037                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 000F  
                command_builder_add_char@send_buffer 000F                                           ?_initTimer 0001  
                                  ___lmul@multiplier 000F                                 __end_of_SPISlaveInit 16D4  
                                          copy_data0 1532                                          _initMCPFout 144C  
           process_data@end_of_transmission_received 00F6                                           ?_send_data 0011  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001B  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 004A  
                   __end_of_send_end_of_transmission 1986                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 162E  
                           __end_of_command_builder1 15D8                             __end_of_command_builder3 1226  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 0018  
                       process_data_parameterize@inx 001C                                     __size_of_isdigit 001E  
                                           __ptext10 10E0                                             __ptext11 12BE  
                                           __ptext20 1818                                             __ptext12 1902  
                                           __ptext21 0C36                                             __ptext13 1226  
                                           __ptext30 15D8                                             __ptext22 1970  
                                           __ptext14 1870                                             __ptext31 0D62  
                                           __ptext23 1582                                             __ptext15 1720  
                                           __ptext32 1922                                             __ptext24 176A  
                                           __ptext16 1020                                             __ptext33 162E  
                                           __ptext25 0E5A                                             __ptext17 1848  
                                           __ptext34 0AB6                                             __ptext26 14B8  
                                           __ptext18 17E6                                             __ptext35 1896  
                                           __ptext27 134E                                             __ptext19 0660  
                                           __ptext36 1684                                             __ptext28 1188  
                                           __ptext29 13D0                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                      _powerPulseCheck 0906  
                                      __size_of_atol 00F8                                        __size_of_main 00D0  
                                      strmatch@match 0020                                        __size_of_init 0012  
                        powerPulseCheck@mcpHFoutLast 0048                                          ??_delayMS10 0011  
                         ?_process_data_parameterize 0015                         __size_of_initInterruptsClear 004C  
                        powerPulseCheck@mcpLFoutLast 0047                                             int$flags 0051  
                                           atol@sign 0023                    __end_of_com_command_setEnergyUsed 17B4  
                            __size_of_communications 00A8                                             _strmatch 1818  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 00C2  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                        ??_initTimer 000F                                             isdigit@c 0011  
                                          ultoa@base 0022                             ??_com_command_setVersion 0025  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 00C4                                         _timerCountHF 004A  
                                       _timerCountLF 003C                                     ___lldiv@dividend 000F  
                      communications@no_more_to_send 00F7                                          ??_send_data 0013  
                                          strmatch@a 001A                                            strmatch@b 001C  
                                         _OSCCONbits 000FD3                                  _resetCommunications 1226  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 001C  
                                           ultoa@val 001E                                             strcmp2@a 000F  
                                           strcmp2@b 0011                                     ___lldiv@quotient 0017  
                                       _process_data 17E6                                    _SPI_transmit_wait 0046  
                              __size_of_SPISlaveInit 0050                            communications@send_buffer 006C  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0AB6                                 ?_resetCommunications 0037  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 001F  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 000F  
