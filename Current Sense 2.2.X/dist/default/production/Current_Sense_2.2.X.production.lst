

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Apr 02 02:39:50 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     _ANSELAbits	set	3896
    41  0000                     _ANSELBbits	set	3897
    42  0000                     _LATBbits	set	3978
    43  0000                     _LATCbits	set	3979
    44  0000                     _PORTBbits	set	3969
    45  0000                     _SSP2BUF	set	3951
    46  0000                     _SSP2CON1bits	set	3948
    47  0000                     _SSP2CON3	set	3945
    48  0000                     _SSP2CON3bits	set	3945
    49  0000                     _SSP2STATbits	set	3949
    50  0000                     _TRISAbits	set	3986
    51  0000                     _TRISBbits	set	3987
    52  0000                     _TRISCbits	set	3988
    53                           
    54                           	psect	smallconst
    55  000600                     __psmallconst:
    56                           	opt stack 0
    57  000600  00                 	db	0
    58  000601                     __stringdata:
    59                           	opt stack 0
    60  000601                     STR_3:
    61                           
    62                           ; BSR set to: 15
    63  000601  43                 	db	67	;'C'
    64  000602  61                 	db	97	;'a'
    65  000603  6C                 	db	108	;'l'
    66  000604  69                 	db	105	;'i'
    67  000605  62                 	db	98	;'b'
    68  000606  72                 	db	114	;'r'
    69  000607  61                 	db	97	;'a'
    70  000608  74                 	db	116	;'t'
    71  000609  69                 	db	105	;'i'
    72  00060A  6F                 	db	111	;'o'
    73  00060B  6E                 	db	110	;'n'
    74  00060C  00                 	db	0
    75  00060D                     STR_20:
    76                           
    77                           ; BSR set to: 15
    78  00060D  50                 	db	80	;'P'
    79  00060E  53                 	db	83	;'S'
    80  00060F  56                 	db	86	;'V'
    81  000610  65                 	db	101	;'e'
    82  000611  72                 	db	114	;'r'
    83  000612  73                 	db	115	;'s'
    84  000613  69                 	db	105	;'i'
    85  000614  6F                 	db	111	;'o'
    86  000615  6E                 	db	110	;'n'
    87  000616  00                 	db	0
    88  000617                     STR_18:
    89                           
    90                           ; BSR set to: 15
    91  000617  56                 	db	86	;'V'
    92  000618  6F                 	db	111	;'o'
    93  000619  6C                 	db	108	;'l'
    94  00061A  74                 	db	116	;'t'
    95  00061B  73                 	db	115	;'s'
    96  00061C  00                 	db	0
    97  00061D                     STR_17:
    98                           
    99                           ; BSR set to: 15
   100  00061D  57                 	db	87	;'W'
   101  00061E  61                 	db	97	;'a'
   102  00061F  74                 	db	116	;'t'
   103  000620  74                 	db	116	;'t'
   104  000621  73                 	db	115	;'s'
   105  000622  00                 	db	0
   106  000623                     STR_6:
   107                           
   108                           ; BSR set to: 15
   109  000623  4C                 	db	76	;'L'
   110  000624  45                 	db	69	;'E'
   111  000625  44                 	db	68	;'D'
   112  000626  42                 	db	66	;'B'
   113  000627  00                 	db	0
   114  000628                     STR_5:
   115                           
   116                           ; BSR set to: 15
   117  000628  44                 	db	68	;'D'
   118  000629  61                 	db	97	;'a'
   119  00062A  74                 	db	116	;'t'
   120  00062B  61                 	db	97	;'a'
   121  00062C  00                 	db	0
   122  00062D                     STR_4:
   123                           
   124                           ; BSR set to: 15
   125  00062D  52                 	db	82	;'R'
   126  00062E  65                 	db	101	;'e'
   127  00062F  61                 	db	97	;'a'
   128  000630  64                 	db	100	;'d'
   129  000631  00                 	db	0
   130  000632                     STR_15:
   131                           
   132                           ; BSR set to: 15
   133  000632  43                 	db	67	;'C'
   134  000633  6F                 	db	111	;'o'
   135  000634  6E                 	db	110	;'n'
   136  000635  66                 	db	102	;'f'
   137  000636  00                 	db	0
   138  000637                     STR_19:
   139                           
   140                           ; BSR set to: 15
   141  000637  41                 	db	65	;'A'
   142  000638  6D                 	db	109	;'m'
   143  000639  70                 	db	112	;'p'
   144  00063A  73                 	db	115	;'s'
   145  00063B  00                 	db	0
   146  00063C                     STR_26:
   147                           
   148                           ; BSR set to: 15
   149  00063C  31                 	db	49	;'1'
   150  00063D  31                 	db	49	;'1'
   151  00063E  31                 	db	49	;'1'
   152  00063F  00                 	db	0
   153  000640                     STR_29:
   154                           
   155                           ; BSR set to: 15
   156  000640  32                 	db	50	;'2'
   157  000641  32                 	db	50	;'2'
   158  000642  32                 	db	50	;'2'
   159  000643  00                 	db	0
   160  000644                     STR_32:
   161                           
   162                           ; BSR set to: 15
   163  000644  33                 	db	51	;'3'
   164  000645  33                 	db	51	;'3'
   165  000646  33                 	db	51	;'3'
   166  000647  00                 	db	0
   167  000648                     STR_37:
   168                           
   169                           ; BSR set to: 15
   170  000648  34                 	db	52	;'4'
   171  000649  34                 	db	52	;'4'
   172  00064A  34                 	db	52	;'4'
   173  00064B  00                 	db	0
   174  00064C                     STR_1:
   175                           
   176                           ; BSR set to: 15
   177  00064C  45                 	db	69	;'E'
   178  00064D  4E                 	db	78	;'N'
   179  00064E  44                 	db	68	;'D'
   180  00064F  00                 	db	0
   181  000650                     STR_10:
   182                           
   183                           ; BSR set to: 15
   184  000650  4F                 	db	79	;'O'
   185  000651  66                 	db	102	;'f'
   186  000652  66                 	db	102	;'f'
   187  000653  00                 	db	0
   188  000654                     STR_2:
   189                           
   190                           ; BSR set to: 15
   191  000654  53                 	db	83	;'S'
   192  000655  65                 	db	101	;'e'
   193  000656  74                 	db	116	;'t'
   194  000657  00                 	db	0
   195  000658                     STR_7:
   196                           
   197                           ; BSR set to: 15
   198  000658  4F                 	db	79	;'O'
   199  000659  6E                 	db	110	;'n'
   200  00065A  00                 	db	0
   201  00065B                     __end_of__stringdata:
   202                           	opt stack 0
   203                           
   204                           ; #config settings
   205  00065B  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           	psect	cinit
   208  001274                     __pcinit:
   209                           	opt stack 0
   210  001274                     start_initialization:
   211                           	opt stack 0
   212  001274                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Clear objects allocated to BANK0 (84 bytes)
   216  001274  EE00  F060         	lfsr	0,__pbssBANK0
   217  001278  0E54               	movlw	84
   218  00127A                     clear_0:
   219  00127A  6AEE               	clrf	postinc0,c
   220  00127C  06E8               	decf	wreg,f,c
   221  00127E  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to COMRAM (7 bytes)
   224  001280  EE00  F057         	lfsr	0,__pbssCOMRAM
   225  001284  0E07               	movlw	7
   226  001286                     clear_1:
   227  001286  6AEE               	clrf	postinc0,c
   228  001288  06E8               	decf	wreg,f,c
   229  00128A  E1FD               	bnz	clear_1
   230  00128C                     end_of_initialization:
   231                           	opt stack 0
   232  00128C                     __end_of__initialization:
   233                           	opt stack 0
   234  00128C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   235  00128E  6EF8               	movwf	tblptru,c
   236  001290  0100               	movlb	0
   237  001292  EF4B  F009         	goto	_main	;jump to C main() function
   238                           tblptru	equ	0xFF8
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	bssCOMRAM
   243  000057                     __pbssCOMRAM:
   244                           	opt stack 0
   245  000057                     resetCommunications@commState:
   246                           	opt stack 0
   247  000057                     	ds	2
   248  000059                     _SPI_transmit_wait:
   249                           	opt stack 0
   250  000059                     	ds	1
   251  00005A                     communications@end_of_transmission_received:
   252                           	opt stack 0
   253  00005A                     	ds	1
   254  00005B                     communications@last_state_active:
   255                           	opt stack 0
   256  00005B                     	ds	1
   257  00005C                     communications@receive_current_state:
   258                           	opt stack 0
   259  00005C                     	ds	1
   260  00005D                     receive_data@my_status:
   261                           	opt stack 0
   262  00005D                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           
   267                           	psect	bssBANK0
   268  000060                     __pbssBANK0:
   269                           	opt stack 0
   270  000060                     communications@receive_buffer:
   271                           	opt stack 0
   272  000060                     	ds	42
   273  00008A                     communications@send_buffer:
   274                           	opt stack 0
   275  00008A                     	ds	42
   276                           tblptru	equ	0xFF8
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           
   280                           	psect	cstackCOMRAM
   281  000001                     __pcstackCOMRAM:
   282                           	opt stack 0
   283  000001                     ?_strcmp2:
   284                           	opt stack 0
   285  000001                     ?___wmul:
   286                           	opt stack 0
   287  000001                     SPI_send_data@data:
   288                           	opt stack 0
   289  000001                     delayMS@a:
   290                           	opt stack 0
   291  000001                     command_builder_add_char@send_buffer:
   292                           	opt stack 0
   293  000001                     strcmp2@a:
   294                           	opt stack 0
   295  000001                     SPI_receive_data@data:
   296                           	opt stack 0
   297  000001                     ___wmul@multiplier:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     SPI_send_data@sendGood:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306  000002                     	ds	1
   307  000003                     command_builder_add_char@data:
   308                           	opt stack 0
   309  000003                     SPI_receive_data@recvGood:
   310                           	opt stack 0
   311  000003                     delayMS@i:
   312                           	opt stack 0
   313  000003                     send_data@send_buffer:
   314                           	opt stack 0
   315  000003                     strcmp2@b:
   316                           	opt stack 0
   317  000003                     ___wmul@multiplicand:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x2
   321  000003                     	ds	1
   322  000004                     ??_command_builder_add_char:
   323  000004                     receive_data@receive_buffer:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x3
   327  000004                     	ds	1
   328  000005                     ??_send_data:
   329  000005                     ??_strcmp2:
   330  000005                     delayMS@j:
   331                           	opt stack 0
   332  000005                     command_builder_add_string@send_buffer:
   333                           	opt stack 0
   334  000005                     ___wmul@product:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338  000005                     	ds	1
   339  000006                     ??_receive_data:
   340                           
   341                           ; 0 bytes @ 0x5
   342  000006                     	ds	1
   343  000007                     receive_data@data:
   344                           	opt stack 0
   345  000007                     send_data@send_end:
   346                           	opt stack 0
   347  000007                     init@i:
   348                           	opt stack 0
   349  000007                     process_data_parameterize@parameters:
   350                           	opt stack 0
   351  000007                     command_builder_add_string@data_string:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x6
   355  000007                     	ds	1
   356  000008                     strcmp2@match:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x7
   360  000008                     	ds	1
   361  000009                     ??_command_builder_add_string:
   362  000009                     process_data_parameterize@buffer_to_parameterize:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x8
   366  000009                     	ds	1
   367  00000A                     strcmp2@inx:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x9
   371  00000A                     	ds	1
   372  00000B                     ??_process_data_parameterize:
   373  00000B                     command_builder_add_string@inx:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0xA
   377  00000B                     	ds	1
   378  00000C                     strmatch@a:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0xB
   382  00000C                     	ds	1
   383  00000D                     command_builder1@send_buffer:
   384                           	opt stack 0
   385  00000D                     command_builder2@send_buffer:
   386                           	opt stack 0
   387  00000D                     command_builder3@send_buffer:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0xC
   391  00000D                     	ds	1
   392  00000E                     process_data_parameterize@inx:
   393                           	opt stack 0
   394  00000E                     strmatch@b:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xD
   398  00000E                     	ds	1
   399  00000F                     command_builder1@data1:
   400                           	opt stack 0
   401  00000F                     command_builder2@data1:
   402                           	opt stack 0
   403  00000F                     command_builder3@data1:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0xE
   407  00000F                     	ds	1
   408  000010                     process_data_parameterize@parameter_index:
   409                           	opt stack 0
   410  000010                     strmatch@result:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xF
   414  000010                     	ds	1
   415  000011                     process_data_parameterize@parameter_position:
   416                           	opt stack 0
   417  000011                     command_builder2@data2:
   418                           	opt stack 0
   419  000011                     command_builder3@data2:
   420                           	opt stack 0
   421  000011                     send_end_of_transmission@send_buffer:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x10
   425  000011                     	ds	1
   426  000012                     strmatch@match:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x11
   430  000012                     	ds	1
   431  000013                     command_builder3@data3:
   432                           	opt stack 0
   433  000013                     com_command_testLED@send_buffer:
   434                           	opt stack 0
   435  000013                     com_command_readCalibration@send_buffer:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x12
   439  000013                     	ds	2
   440  000015                     process_data_parameters@parameters:
   441                           	opt stack 0
   442  000015                     com_command_setPower@send_buffer:
   443                           	opt stack 0
   444  000015                     com_command_setVolts@send_buffer:
   445                           	opt stack 0
   446  000015                     com_command_setAmps@send_buffer:
   447                           	opt stack 0
   448  000015                     com_command_setVersion@send_buffer:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x14
   452  000015                     	ds	2
   453  000017                     resetCommunications@send_buffer:
   454                           	opt stack 0
   455  000017                     process_data_parameters@send_buffer:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x16
   459  000017                     	ds	2
   460  000019                     ??_resetCommunications:
   461  000019                     ??_process_data_parameters:
   462                           
   463                           ; 0 bytes @ 0x18
   464  000019                     	ds	1
   465  00001A                     process_data_parameters@end_of_transmission_received:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x19
   469  00001A                     	ds	1
   470  00001B                     process_data@receive_buffer:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1A
   474  00001B                     	ds	2
   475  00001D                     process_data@send_buffer:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x1C
   479  00001D                     	ds	2
   480  00001F                     process_data@parameters:
   481                           	opt stack 0
   482                           
   483                           ; 50 bytes @ 0x1E
   484  00001F                     	ds	50
   485  000051                     process_data@end_of_transmission_received:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x50
   489  000051                     	ds	1
   490  000052                     ??_communications:
   491                           
   492                           ; 0 bytes @ 0x51
   493  000052                     	ds	1
   494  000053                     communications@no_more_to_send:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x52
   498  000053                     	ds	1
   499  000054                     communications@firstTime:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x53
   503  000054                     	ds	1
   504  000055                     main@togglePulse:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x54
   508  000055                     	ds	2
   509                           tblptru	equ	0xFF8
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513 ;;
   514 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   515 ;;
   516 ;; *************** function _main *****************
   517 ;; Defined at:
   518 ;;		line 157 in file "Current_Sense_Main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  togglePulse     2   84[COMRAM] unsigned int 
   523 ;; Return value:  Size  Location     Type
   524 ;;		None               void
   525 ;; Registers used:
   526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   532 ;;      Params:         0       0       0       0       0       0       0
   533 ;;      Locals:         2       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0
   535 ;;      Totals:         2       0       0       0       0       0       0
   536 ;;Total ram usage:        2 bytes
   537 ;; Hardware stack levels required when called:    7
   538 ;; This function calls:
   539 ;;		_SPISlaveInit
   540 ;;		_communications
   541 ;;		_init
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548  001296                     __ptext0:
   549                           	opt stack 0
   550  001296                     _main:
   551                           	opt stack 24
   552                           
   553                           ;Current_Sense_Main.c: 158: unsigned int togglePulse = 0;
   554                           
   555                           ; BSR set to: 15
   556                           ;incstack = 0
   557  001296  0E00               	movlw	0
   558  001298  6E56               	movwf	main@togglePulse+1,c
   559  00129A  0E00               	movlw	0
   560  00129C  6E55               	movwf	main@togglePulse,c
   561                           
   562                           ;Current_Sense_Main.c: 159: init();
   563  00129E  EC55  F008         	call	_init	;wreg free
   564                           
   565                           ;Current_Sense_Main.c: 161: SPISlaveInit( );
   566  0012A2  EC2C  F008         	call	_SPISlaveInit	;wreg free
   567                           
   568                           ;Current_Sense_Main.c: 185: communications( 1 );
   569  0012A6  0E01               	movlw	1
   570  0012A8  EC7D  F006         	call	_communications
   571  0012AC                     l1760:
   572                           
   573                           ;Current_Sense_Main.c: 189: communications( 0 );
   574  0012AC  0E00               	movlw	0
   575  0012AE  EC7D  F006         	call	_communications
   576  0012B2  D7FC               	goto	l1760
   577  0012B4                     __end_of_main:
   578                           	opt stack 0
   579                           tblptru	equ	0xFF8
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           
   583 ;; *************** function _init *****************
   584 ;; Defined at:
   585 ;;		line 213 in file "Current_Sense_Main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  i               2    6[COMRAM] unsigned int 
   590 ;; Return value:  Size  Location     Type
   591 ;;		None               void
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         2       0       0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0       0       0
   602 ;;      Totals:         2       0       0       0       0       0       0
   603 ;;Total ram usage:        2 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    1
   606 ;; This function calls:
   607 ;;		_delayMS
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text1
   614  0010AA                     __ptext1:
   615                           	opt stack 0
   616  0010AA                     _init:
   617                           	opt stack 29
   618                           
   619                           ;Current_Sense_Main.c: 214: TRISAbits.TRISA0 = 0;
   620                           
   621                           ;incstack = 0
   622  0010AA  9092               	bcf	3986,0,c	;volatile
   623                           
   624                           ;Current_Sense_Main.c: 215: TRISAbits.TRISA1 = 1;
   625  0010AC  8292               	bsf	3986,1,c	;volatile
   626                           
   627                           ;Current_Sense_Main.c: 216: TRISBbits.RB4 = 0;
   628  0010AE  9893               	bcf	3987,4,c	;volatile
   629                           
   630                           ;Current_Sense_Main.c: 217: TRISCbits.TRISC3 = 0;
   631  0010B0  9694               	bcf	3988,3,c	;volatile
   632                           
   633                           ;Current_Sense_Main.c: 218: TRISCbits.TRISC5 = 0;
   634  0010B2  9A94               	bcf	3988,5,c	;volatile
   635                           
   636                           ;Current_Sense_Main.c: 219: TRISCbits.TRISC6 = 0;
   637  0010B4  9C94               	bcf	3988,6,c	;volatile
   638                           
   639                           ;Current_Sense_Main.c: 220: TRISCbits.TRISC7 = 0;
   640  0010B6  9E94               	bcf	3988,7,c	;volatile
   641                           
   642                           ;Current_Sense_Main.c: 221: ANSELAbits.ANSA1 = 0b0;
   643  0010B8  010F               	movlb	15	; () banked
   644  0010BA  9338               	bcf	56,1,b	;volatile
   645                           
   646                           ;Current_Sense_Main.c: 223: LATCbits.LATC6 = 1;
   647  0010BC  8C8B               	bsf	3979,6,c	;volatile
   648                           
   649                           ;Current_Sense_Main.c: 224: LATCbits.LATC3 = 1;
   650  0010BE  868B               	bsf	3979,3,c	;volatile
   651                           
   652                           ;Current_Sense_Main.c: 225: LATCbits.LATC5 = 1;
   653  0010C0  8A8B               	bsf	3979,5,c	;volatile
   654                           
   655                           ;Current_Sense_Main.c: 226: LATCbits.LATC7 = 1;
   656  0010C2  8E8B               	bsf	3979,7,c	;volatile
   657                           
   658                           ; BSR set to: 15
   659                           ;Current_Sense_Main.c: 230: unsigned int i;
   660                           ;Current_Sense_Main.c: 231: for (i = 0; i < 5; i++) {
   661  0010C4  0E00               	movlw	0
   662  0010C6  6E08               	movwf	init@i+1,c
   663  0010C8  0E00               	movlw	0
   664  0010CA  6E07               	movwf	init@i,c
   665  0010CC                     
   666                           ; BSR set to: 15
   667  0010CC  0E05               	movlw	5
   668  0010CE  5C07               	subwf	init@i,w,c
   669  0010D0  0E00               	movlw	0
   670  0010D2  5808               	subwfb	init@i+1,w,c
   671  0010D4  B0D8               	btfsc	status,0,c
   672  0010D6  0012               	return	
   673                           
   674                           ;Current_Sense_Main.c: 232: LATBbits.LATB4 = 1;
   675                           
   676                           ; BSR set to: 15
   677  0010D8  888A               	bsf	3978,4,c	;volatile
   678                           
   679                           ;Current_Sense_Main.c: 233: delayMS(25);
   680  0010DA  0E00               	movlw	0
   681  0010DC  6E02               	movwf	delayMS@a+1,c
   682  0010DE  0E19               	movlw	25
   683  0010E0  6E01               	movwf	delayMS@a,c
   684  0010E2  EC7D  F008         	call	_delayMS	;wreg free
   685                           
   686                           ;Current_Sense_Main.c: 234: LATBbits.LATB4 = 0;
   687  0010E6  988A               	bcf	3978,4,c	;volatile
   688                           
   689                           ;Current_Sense_Main.c: 235: delayMS(25);
   690  0010E8  0E00               	movlw	0
   691  0010EA  6E02               	movwf	delayMS@a+1,c
   692  0010EC  0E19               	movlw	25
   693  0010EE  6E01               	movwf	delayMS@a,c
   694  0010F0  EC7D  F008         	call	_delayMS	;wreg free
   695  0010F4  4A07               	infsnz	init@i,f,c
   696  0010F6  2A08               	incf	init@i+1,f,c
   697  0010F8  D7E9               	goto	L1
   698  0010FA                     __end_of_init:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _communications *****************
   706 ;; Defined at:
   707 ;;		line 81 in file "SlaveComm_PIC18.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  firstTime       1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  firstTime       1   83[COMRAM] unsigned char 
   712 ;;  no_more_to_s    1   82[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         0       0       0       0       0       0       0
   723 ;;      Locals:         2       0       0       0       0       0       0
   724 ;;      Temps:          1       0       0       0       0       0       0
   725 ;;      Totals:         3       0       0       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    6
   729 ;; This function calls:
   730 ;;		_process_data
   731 ;;		_receive_data
   732 ;;		_resetCommunications
   733 ;;		_send_data
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text2
   740  000CFA                     __ptext2:
   741                           	opt stack 0
   742  000CFA                     _communications:
   743                           	opt stack 24
   744                           
   745                           ;incstack = 0
   746                           ;communications@firstTime stored from wreg
   747  000CFA  6E54               	movwf	communications@firstTime,c
   748                           
   749                           ;SlaveComm_PIC18.c: 83: static struct buffer receive_buffer;
   750                           ;SlaveComm_PIC18.c: 84: static struct buffer send_buffer;
   751                           ;SlaveComm_PIC18.c: 86: static bool end_of_transmission_received = 0;
   752                           ;SlaveComm_PIC18.c: 87: bool no_more_to_send;
   753                           ;SlaveComm_PIC18.c: 89: static enum receive_status receive_current_state;
   754                           ;SlaveComm_PIC18.c: 92: if( firstTime == 1 )
   755  000CFC  0454               	decf	communications@firstTime,w,c
   756  000CFE  A4D8               	btfss	status,2,c
   757  000D00  D00F               	goto	l1730
   758                           
   759                           ;SlaveComm_PIC18.c: 93: {
   760                           ;SlaveComm_PIC18.c: 94: send_buffer.write_position = 0;
   761  000D02  0E00               	movlw	0
   762  000D04  0100               	movlb	0	; () banked
   763  000D06  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
   764                           
   765                           ;SlaveComm_PIC18.c: 95: send_buffer.read_position = 0;
   766  000D08  0E00               	movlw	0
   767  000D0A  0100               	movlb	0	; () banked
   768  000D0C  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
   769                           
   770                           ; BSR set to: 0
   771                           ;SlaveComm_PIC18.c: 96: resetCommunications( &send_buffer );
   772  000D0E  0100               	movlb	0	; () banked
   773  000D10  0E00               	movlw	high communications@send_buffer
   774  000D12  6E18               	movwf	resetCommunications@send_buffer+1,c
   775  000D14  0100               	movlb	0	; () banked
   776  000D16  0E8A               	movlw	low communications@send_buffer
   777  000D18  6E17               	movwf	resetCommunications@send_buffer,c
   778  000D1A  ECB3  F005         	call	_resetCommunications	;wreg free
   779                           
   780                           ;SlaveComm_PIC18.c: 97: }
   781  000D1E  0012               	return	
   782  000D20                     l1730:
   783                           
   784                           ;SlaveComm_PIC18.c: 98: else
   785                           ;SlaveComm_PIC18.c: 99: {
   786                           ;SlaveComm_PIC18.c: 100: receive_current_state = receive_data( &receive_buffer );
   787  000D20  0100               	movlb	0	; () banked
   788  000D22  0E00               	movlw	high communications@receive_buffer
   789  000D24  6E05               	movwf	receive_data@receive_buffer+1,c
   790  000D26  0100               	movlb	0	; () banked
   791  000D28  0E60               	movlw	low communications@receive_buffer
   792  000D2A  6E04               	movwf	receive_data@receive_buffer,c
   793  000D2C  EC1C  F006         	call	_receive_data	;wreg free
   794  000D30  6E5C               	movwf	communications@receive_current_state,c
   795                           
   796                           ;SlaveComm_PIC18.c: 102: switch( receive_current_state )
   797  000D32  D015               	goto	l1738
   798  000D34                     l1732:
   799                           
   800                           ;SlaveComm_PIC18.c: 112: if( process_data( &receive_buffer, &send_buffer ) == 1 )
   801  000D34  0100               	movlb	0	; () banked
   802  000D36  0E00               	movlw	high communications@receive_buffer
   803  000D38  6E1C               	movwf	process_data@receive_buffer+1,c
   804  000D3A  0100               	movlb	0	; () banked
   805  000D3C  0E60               	movlw	low communications@receive_buffer
   806  000D3E  6E1B               	movwf	process_data@receive_buffer,c
   807  000D40  0100               	movlb	0	; () banked
   808  000D42  0E00               	movlw	high communications@send_buffer
   809  000D44  6E1E               	movwf	process_data@send_buffer+1,c
   810  000D46  0100               	movlb	0	; () banked
   811  000D48  0E8A               	movlw	low communications@send_buffer
   812  000D4A  6E1D               	movwf	process_data@send_buffer,c
   813  000D4C  ECB0  F008         	call	_process_data	;wreg free
   814  000D50  6E52               	movwf	??_communications& (0+255),c
   815  000D52  0452               	decf	??_communications,w,c
   816  000D54  A4D8               	btfss	status,2,c
   817  000D56  D00D               	goto	l1740
   818                           
   819                           ;SlaveComm_PIC18.c: 113: {
   820                           ;SlaveComm_PIC18.c: 114: end_of_transmission_received = 1;
   821  000D58  0E01               	movlw	1
   822  000D5A  6E5A               	movwf	communications@end_of_transmission_received,c
   823  000D5C  D00A               	goto	l1740
   824  000D5E                     l1738:
   825  000D5E  505C               	movf	communications@receive_current_state,w,c
   826                           
   827                           ; Switch size 1, requested type "space"
   828                           ; Number of cases is 3, Range of values is 0 to 2
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte           10     6 (average)
   832                           ;	Chosen strategy is simple_byte
   833  000D60  0A00               	xorlw	0	; case 0
   834  000D62  B4D8               	btfsc	status,2,c
   835  000D64  D006               	goto	l1740
   836  000D66  0A01               	xorlw	1	; case 1
   837  000D68  B4D8               	btfsc	status,2,c
   838  000D6A  D003               	goto	l1740
   839  000D6C  0A03               	xorlw	3	; case 2
   840  000D6E  B4D8               	btfsc	status,2,c
   841  000D70  D7E1               	goto	l1732
   842  000D72                     l1740:
   843                           
   844                           ;SlaveComm_PIC18.c: 120: no_more_to_send = send_data( &send_buffer );
   845  000D72  0100               	movlb	0	; () banked
   846  000D74  0E00               	movlw	high communications@send_buffer
   847  000D76  6E04               	movwf	send_data@send_buffer+1,c
   848  000D78  0100               	movlb	0	; () banked
   849  000D7A  0E8A               	movlw	low communications@send_buffer
   850  000D7C  6E03               	movwf	send_data@send_buffer,c
   851  000D7E  EC23  F007         	call	_send_data	;wreg free
   852  000D82  6E53               	movwf	communications@no_more_to_send,c
   853                           
   854                           ;SlaveComm_PIC18.c: 123: static bool last_state_active = 0;
   855                           ;SlaveComm_PIC18.c: 124: if( PORTBbits.SS2 == 0b1 )
   856  000D84  A081               	btfss	3969,0,c	;volatile
   857  000D86  D003               	goto	l130
   858                           
   859                           ;SlaveComm_PIC18.c: 125: {
   860                           ;SlaveComm_PIC18.c: 126: last_state_active = 0;
   861  000D88  0E00               	movlw	0
   862  000D8A  6E5B               	movwf	communications@last_state_active,c
   863                           
   864                           ;SlaveComm_PIC18.c: 127: }
   865  000D8C  0012               	return	
   866  000D8E                     l130:
   867                           
   868                           ;SlaveComm_PIC18.c: 128: else
   869                           ;SlaveComm_PIC18.c: 129: {
   870                           ;SlaveComm_PIC18.c: 130: if( last_state_active == 0 )
   871  000D8E  665B               	tstfsz	communications@last_state_active,c
   872  000D90  D008               	goto	l1748
   873                           
   874                           ;SlaveComm_PIC18.c: 131: {
   875                           ;SlaveComm_PIC18.c: 132: resetCommunications( &send_buffer );
   876  000D92  0100               	movlb	0	; () banked
   877  000D94  0E00               	movlw	high communications@send_buffer
   878  000D96  6E18               	movwf	resetCommunications@send_buffer+1,c
   879  000D98  0100               	movlb	0	; () banked
   880  000D9A  0E8A               	movlw	low communications@send_buffer
   881  000D9C  6E17               	movwf	resetCommunications@send_buffer,c
   882  000D9E  ECB3  F005         	call	_resetCommunications	;wreg free
   883  000DA2                     l1748:
   884                           
   885                           ;SlaveComm_PIC18.c: 133: }
   886                           ;SlaveComm_PIC18.c: 135: last_state_active = 1;
   887  000DA2  0E01               	movlw	1
   888  000DA4  6E5B               	movwf	communications@last_state_active,c
   889  000DA6  0012               	return	
   890  000DA8                     __end_of_communications:
   891                           	opt stack 0
   892                           tblptru	equ	0xFF8
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           status	equ	0xFD8
   896                           
   897 ;; *************** function _send_data *****************
   898 ;; Defined at:
   899 ;;		line 460 in file "SlaveComm_PIC18.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  send_buffer     2    2[COMRAM] PTR struct buffer
   902 ;;		 -> communications@send_buffer(42), 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  send_end        1    6[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         2       0       0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0
   917 ;;      Totals:         5       0       0       0       0       0       0
   918 ;;Total ram usage:        5 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    1
   921 ;; This function calls:
   922 ;;		_SPI_send_data
   923 ;; This function is called by:
   924 ;;		_communications
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text3
   929  000E46                     __ptext3:
   930                           	opt stack 0
   931  000E46                     _send_data:
   932                           	opt stack 28
   933                           
   934                           ;SlaveComm_PIC18.c: 462: bool send_end;
   935                           ;SlaveComm_PIC18.c: 464: if( send_buffer->read_position == send_buffer->write_position )
   936                           
   937                           ;incstack = 0
   938  000E46  EE20 F029          	lfsr	2,41
   939  000E4A  5003               	movf	send_data@send_buffer,w,c
   940  000E4C  26D9               	addwf	fsr2l,f,c
   941  000E4E  5004               	movf	send_data@send_buffer+1,w,c
   942  000E50  22DA               	addwfc	fsr2h,f,c
   943  000E52  EE10 F028          	lfsr	1,40
   944  000E56  5003               	movf	send_data@send_buffer,w,c
   945  000E58  26E1               	addwf	fsr1l,f,c
   946  000E5A  5004               	movf	send_data@send_buffer+1,w,c
   947  000E5C  22E2               	addwfc	fsr1h,f,c
   948  000E5E  50E7               	movf	indf1,w,c
   949  000E60  62DF               	cpfseq	indf2,c
   950  000E62  D006               	goto	l1696
   951                           
   952                           ;SlaveComm_PIC18.c: 465: {
   953                           ;SlaveComm_PIC18.c: 466: send_end = 1;
   954  000E64  0E01               	movlw	1
   955  000E66  6E07               	movwf	send_data@send_end,c
   956                           
   957                           ;SlaveComm_PIC18.c: 467: SPI_send_data( '\0' );
   958  000E68  0E00               	movlw	0
   959  000E6A  EC5A  F009         	call	_SPI_send_data
   960                           
   961                           ;SlaveComm_PIC18.c: 468: }
   962  000E6E  D031               	goto	l1704
   963  000E70                     l1696:
   964                           
   965                           ;SlaveComm_PIC18.c: 469: else
   966                           ;SlaveComm_PIC18.c: 470: {
   967                           ;SlaveComm_PIC18.c: 471: send_end = 0;
   968  000E70  0E00               	movlw	0
   969  000E72  6E07               	movwf	send_data@send_end,c
   970                           
   971                           ;SlaveComm_PIC18.c: 474: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
   972  000E74  EE20 F029          	lfsr	2,41
   973  000E78  5003               	movf	send_data@send_buffer,w,c
   974  000E7A  26D9               	addwf	fsr2l,f,c
   975  000E7C  5004               	movf	send_data@send_buffer+1,w,c
   976  000E7E  22DA               	addwfc	fsr2h,f,c
   977  000E80  50DF               	movf	indf2,w,c
   978  000E82  6E05               	movwf	??_send_data& (0+255),c
   979  000E84  5005               	movf	??_send_data,w,c
   980  000E86  0D01               	mullw	1
   981  000E88  50F3               	movf	prodl,w,c
   982  000E8A  2403               	addwf	send_data@send_buffer,w,c
   983  000E8C  6ED9               	movwf	fsr2l,c
   984  000E8E  50F4               	movf	prodh,w,c
   985  000E90  2004               	addwfc	send_data@send_buffer+1,w,c
   986  000E92  6EDA               	movwf	fsr2h,c
   987  000E94  50DF               	movf	indf2,w,c
   988  000E96  EC5A  F009         	call	_SPI_send_data
   989  000E9A  6E06               	movwf	(??_send_data+1)& (0+255),c
   990  000E9C  0406               	decf	??_send_data+1,w,c
   991  000E9E  A4D8               	btfss	status,2,c
   992  000EA0  D018               	goto	l1704
   993                           
   994                           ;SlaveComm_PIC18.c: 475: {
   995                           ;SlaveComm_PIC18.c: 477: send_buffer->read_position++;
   996  000EA2  EE20 F029          	lfsr	2,41
   997  000EA6  5003               	movf	send_data@send_buffer,w,c
   998  000EA8  26D9               	addwf	fsr2l,f,c
   999  000EAA  5004               	movf	send_data@send_buffer+1,w,c
  1000  000EAC  22DA               	addwfc	fsr2h,f,c
  1001  000EAE  2ADF               	incf	indf2,f,c
  1002                           
  1003                           ;SlaveComm_PIC18.c: 478: if( send_buffer->read_position >= 40 )
  1004  000EB0  EE20 F029          	lfsr	2,41
  1005  000EB4  5003               	movf	send_data@send_buffer,w,c
  1006  000EB6  26D9               	addwf	fsr2l,f,c
  1007  000EB8  5004               	movf	send_data@send_buffer+1,w,c
  1008  000EBA  22DA               	addwfc	fsr2h,f,c
  1009  000EBC  0E27               	movlw	39
  1010  000EBE  64DF               	cpfsgt	indf2,c
  1011  000EC0  D008               	goto	l1704
  1012                           
  1013                           ;SlaveComm_PIC18.c: 479: {
  1014                           ;SlaveComm_PIC18.c: 480: send_buffer->read_position = 0;
  1015  000EC2  EE20 F029          	lfsr	2,41
  1016  000EC6  5003               	movf	send_data@send_buffer,w,c
  1017  000EC8  26D9               	addwf	fsr2l,f,c
  1018  000ECA  5004               	movf	send_data@send_buffer+1,w,c
  1019  000ECC  22DA               	addwfc	fsr2h,f,c
  1020  000ECE  0E00               	movlw	0
  1021  000ED0  6EDF               	movwf	indf2,c
  1022  000ED2                     l1704:
  1023                           
  1024                           ;SlaveComm_PIC18.c: 481: }
  1025                           ;SlaveComm_PIC18.c: 482: }
  1026                           ;SlaveComm_PIC18.c: 483: }
  1027                           ;SlaveComm_PIC18.c: 485: return send_end;
  1028  000ED2  5007               	movf	send_data@send_end,w,c
  1029  000ED4  0012               	return	
  1030  000ED6                     __end_of_send_data:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           prodh	equ	0xFF4
  1034                           prodl	equ	0xFF3
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           indf1	equ	0xFE7
  1038                           fsr1h	equ	0xFE2
  1039                           fsr1l	equ	0xFE1
  1040                           indf2	equ	0xFDF
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _SPI_send_data *****************
  1046 ;; Defined at:
  1047 ;;		line 558 in file "SlaveComm_PIC18.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  data            1    wreg     unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  data            1    0[COMRAM] unsigned char 
  1052 ;;  sendGood        1    1[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      unsigned char 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1062 ;;      Params:         0       0       0       0       0       0       0
  1063 ;;      Locals:         2       0       0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_send_data
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text4
  1076  0012B4                     __ptext4:
  1077                           	opt stack 0
  1078  0012B4                     _SPI_send_data:
  1079                           	opt stack 28
  1080                           
  1081                           ;incstack = 0
  1082                           ;SPI_send_data@data stored from wreg
  1083  0012B4  6E01               	movwf	SPI_send_data@data,c
  1084                           
  1085                           ;SlaveComm_PIC18.c: 560: bool sendGood = 0;
  1086  0012B6  0E00               	movlw	0
  1087  0012B8  6E02               	movwf	SPI_send_data@sendGood,c
  1088                           
  1089                           ;SlaveComm_PIC18.c: 562: if( SPI_transmit_wait == 0 )
  1090  0012BA  6659               	tstfsz	_SPI_transmit_wait,c
  1091  0012BC  D006               	goto	l1604
  1092                           
  1093                           ;SlaveComm_PIC18.c: 563: {
  1094                           ;SlaveComm_PIC18.c: 564: SSP2BUF = data;
  1095  0012BE  C001  FF6F         	movff	SPI_send_data@data,3951	;volatile
  1096                           
  1097                           ;SlaveComm_PIC18.c: 565: SPI_transmit_wait = 1;
  1098  0012C2  0E01               	movlw	1
  1099  0012C4  6E59               	movwf	_SPI_transmit_wait,c
  1100                           
  1101                           ;SlaveComm_PIC18.c: 566: sendGood = 1;
  1102  0012C6  0E01               	movlw	1
  1103  0012C8  D001               	goto	L2
  1104  0012CA                     l1604:
  1105                           
  1106                           ;SlaveComm_PIC18.c: 568: else
  1107                           ;SlaveComm_PIC18.c: 569: {
  1108                           ;SlaveComm_PIC18.c: 570: sendGood = 0;
  1109  0012CA  0E00               	movlw	0
  1110  0012CC                     L2:
  1111  0012CC  6E02               	movwf	SPI_send_data@sendGood,c
  1112                           
  1113                           ;SlaveComm_PIC18.c: 571: }
  1114                           ;SlaveComm_PIC18.c: 573: return sendGood;
  1115  0012CE  5002               	movf	SPI_send_data@sendGood,w,c
  1116  0012D0  0012               	return	
  1117  0012D2                     __end_of_SPI_send_data:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           prodh	equ	0xFF4
  1121                           prodl	equ	0xFF3
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           indf1	equ	0xFE7
  1125                           fsr1h	equ	0xFE2
  1126                           fsr1l	equ	0xFE1
  1127                           indf2	equ	0xFDF
  1128                           fsr2h	equ	0xFDA
  1129                           fsr2l	equ	0xFD9
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _resetCommunications *****************
  1133 ;; Defined at:
  1134 ;;		line 143 in file "SlaveComm_PIC18.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  1137 ;;		 -> communications@send_buffer(42), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;		None               void
  1142 ;; Registers used:
  1143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         2       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0       0       0
  1152 ;;      Totals:         4       0       0       0       0       0       0
  1153 ;;Total ram usage:        4 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    4
  1156 ;; This function calls:
  1157 ;;		_com_command_readCalibration
  1158 ;;		_com_command_setAmps
  1159 ;;		_com_command_setPower
  1160 ;;		_com_command_setVersion
  1161 ;;		_com_command_setVolts
  1162 ;;		_com_command_testLED
  1163 ;;		_delayMS
  1164 ;; This function is called by:
  1165 ;;		_communications
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text5
  1170  000B66                     __ptext5:
  1171                           	opt stack 0
  1172  000B66                     _resetCommunications:
  1173                           	opt stack 25
  1174                           
  1175                           ;SlaveComm_PIC18.c: 146: static int commState = 0;
  1176                           ;SlaveComm_PIC18.c: 149: SSP2CON1bits.SSPEN = 0;
  1177                           
  1178                           ;incstack = 0
  1179  000B66  9A6C               	bcf	3948,5,c	;volatile
  1180                           
  1181                           ;SlaveComm_PIC18.c: 150: delayMS( 1 );
  1182  000B68  0E00               	movlw	0
  1183  000B6A  6E02               	movwf	delayMS@a+1,c
  1184  000B6C  0E01               	movlw	1
  1185  000B6E  6E01               	movwf	delayMS@a,c
  1186  000B70  EC7D  F008         	call	_delayMS	;wreg free
  1187                           
  1188                           ;SlaveComm_PIC18.c: 151: SSP2CON1bits.SSPEN = 1;
  1189  000B74  8A6C               	bsf	3948,5,c	;volatile
  1190                           
  1191                           ;SlaveComm_PIC18.c: 153: SSP2CON1bits.WCOL = 0;
  1192  000B76  9E6C               	bcf	3948,7,c	;volatile
  1193                           
  1194                           ;SlaveComm_PIC18.c: 154: SPI_transmit_wait = 0;
  1195  000B78  0E00               	movlw	0
  1196  000B7A  6E59               	movwf	_SPI_transmit_wait,c
  1197                           
  1198                           ;SlaveComm_PIC18.c: 156: send_buffer->read_position = 0;
  1199  000B7C  EE20 F029          	lfsr	2,41
  1200  000B80  5017               	movf	resetCommunications@send_buffer,w,c
  1201  000B82  26D9               	addwf	fsr2l,f,c
  1202  000B84  5018               	movf	resetCommunications@send_buffer+1,w,c
  1203  000B86  22DA               	addwfc	fsr2h,f,c
  1204  000B88  0E00               	movlw	0
  1205  000B8A  6EDF               	movwf	indf2,c
  1206                           
  1207                           ;SlaveComm_PIC18.c: 157: send_buffer->write_position = 0;
  1208  000B8C  EE20 F028          	lfsr	2,40
  1209  000B90  5017               	movf	resetCommunications@send_buffer,w,c
  1210  000B92  26D9               	addwf	fsr2l,f,c
  1211  000B94  5018               	movf	resetCommunications@send_buffer+1,w,c
  1212  000B96  22DA               	addwfc	fsr2h,f,c
  1213  000B98  0E00               	movlw	0
  1214  000B9A  6EDF               	movwf	indf2,c
  1215                           
  1216                           ;SlaveComm_PIC18.c: 162: commState++;
  1217  000B9C  4A57               	infsnz	resetCommunications@commState,f,c
  1218  000B9E  2A58               	incf	resetCommunications@commState+1,f,c
  1219                           
  1220                           ;SlaveComm_PIC18.c: 163: switch( commState )
  1221  000BA0  D02F               	goto	l1642
  1222  000BA2                     l1626:
  1223                           
  1224                           ;SlaveComm_PIC18.c: 166: com_command_setVersion( send_buffer );
  1225  000BA2  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  1226  000BA6  C017  F015         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  1227  000BAA  ECEE  F008         	call	_com_command_setVersion	;wreg free
  1228                           
  1229                           ;SlaveComm_PIC18.c: 167: break;
  1230  000BAE  0012               	return	
  1231  000BB0                     l1628:
  1232                           
  1233                           ;SlaveComm_PIC18.c: 169: com_command_setPower( send_buffer );
  1234  000BB0  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  1235  000BB4  C017  F015         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  1236  000BB8  EC01  F009         	call	_com_command_setPower	;wreg free
  1237                           
  1238                           ;SlaveComm_PIC18.c: 170: break;
  1239  000BBC  0012               	return	
  1240  000BBE                     l1630:
  1241                           
  1242                           ;SlaveComm_PIC18.c: 172: com_command_setVolts( send_buffer );
  1243  000BBE  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setVolts@send_buffer+1
  1244  000BC2  C017  F015         	movff	resetCommunications@send_buffer,com_command_setVolts@send_buffer
  1245  000BC6  ECDB  F008         	call	_com_command_setVolts	;wreg free
  1246                           
  1247                           ;SlaveComm_PIC18.c: 173: break;
  1248  000BCA  0012               	return	
  1249  000BCC                     l1632:
  1250                           
  1251                           ;SlaveComm_PIC18.c: 175: com_command_setAmps( send_buffer );
  1252  000BCC  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setAmps@send_buffer+1
  1253  000BD0  C017  F015         	movff	resetCommunications@send_buffer,com_command_setAmps@send_buffer
  1254  000BD4  EC14  F009         	call	_com_command_setAmps	;wreg free
  1255                           
  1256                           ;SlaveComm_PIC18.c: 176: break;
  1257  000BD8  0012               	return	
  1258  000BDA                     l1634:
  1259                           
  1260                           ;SlaveComm_PIC18.c: 178: com_command_readCalibration( send_buffer );
  1261  000BDA  C018  F014         	movff	resetCommunications@send_buffer+1,com_command_readCalibration@send_buffer+1
  1262  000BDE  C017  F013         	movff	resetCommunications@send_buffer,com_command_readCalibration@send_buffer
  1263  000BE2  EC78  F009         	call	_com_command_readCalibration	;wreg free
  1264                           
  1265                           ;SlaveComm_PIC18.c: 179: break;
  1266  000BE6  0012               	return	
  1267  000BE8                     l1636:
  1268                           
  1269                           ;SlaveComm_PIC18.c: 181: com_command_testLED( send_buffer );
  1270  000BE8  C018  F014         	movff	resetCommunications@send_buffer+1,com_command_testLED@send_buffer+1
  1271  000BEC  C017  F013         	movff	resetCommunications@send_buffer,com_command_testLED@send_buffer
  1272  000BF0  EC69  F009         	call	_com_command_testLED	;wreg free
  1273                           
  1274                           ;SlaveComm_PIC18.c: 182: break;
  1275  000BF4  0012               	return	
  1276  000BF6                     l1638:
  1277                           
  1278                           ;SlaveComm_PIC18.c: 184: commState = 0;
  1279  000BF6  0E00               	movlw	0
  1280  000BF8  6E58               	movwf	resetCommunications@commState+1,c
  1281  000BFA  0E00               	movlw	0
  1282  000BFC  6E57               	movwf	resetCommunications@commState,c
  1283                           
  1284                           ;SlaveComm_PIC18.c: 185: break;
  1285  000BFE  0012               	return	
  1286  000C00                     l1642:
  1287  000C00  C057  F019         	movff	resetCommunications@commState,??_resetCommunications
  1288  000C04  C058  F01A         	movff	resetCommunications@commState+1,??_resetCommunications+1
  1289                           
  1290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1291                           ; Switch size 1, requested type "space"
  1292                           ; Number of cases is 1, Range of values is 0 to 0
  1293                           ; switch strategies available:
  1294                           ; Name         Instructions Cycles
  1295                           ; simple_byte            4     3 (average)
  1296                           ;	Chosen strategy is simple_byte
  1297  000C08  501A               	movf	??_resetCommunications+1,w,c
  1298  000C0A  0A00               	xorlw	0	; case 0
  1299  000C0C  A4D8               	btfss	status,2,c
  1300  000C0E  D7F3               	goto	l1638
  1301                           
  1302                           ; Switch size 1, requested type "space"
  1303                           ; Number of cases is 6, Range of values is 1 to 6
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           19    10 (average)
  1307                           ;	Chosen strategy is simple_byte
  1308  000C10  5019               	movf	??_resetCommunications,w,c
  1309  000C12  0A01               	xorlw	1	; case 1
  1310  000C14  B4D8               	btfsc	status,2,c
  1311  000C16  D7C5               	goto	l1626
  1312  000C18  0A03               	xorlw	3	; case 2
  1313  000C1A  B4D8               	btfsc	status,2,c
  1314  000C1C  D7C9               	goto	l1628
  1315  000C1E  0A01               	xorlw	1	; case 3
  1316  000C20  B4D8               	btfsc	status,2,c
  1317  000C22  D7CD               	goto	l1630
  1318  000C24  0A07               	xorlw	7	; case 4
  1319  000C26  B4D8               	btfsc	status,2,c
  1320  000C28  D7D1               	goto	l1632
  1321  000C2A  0A01               	xorlw	1	; case 5
  1322  000C2C  B4D8               	btfsc	status,2,c
  1323  000C2E  D7D5               	goto	l1634
  1324  000C30  0A03               	xorlw	3	; case 6
  1325  000C32  B4D8               	btfsc	status,2,c
  1326  000C34  D7D9               	goto	l1636
  1327  000C36  D7DF               	goto	l1638
  1328  000C38                     __end_of_resetCommunications:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           prodh	equ	0xFF4
  1332                           prodl	equ	0xFF3
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           indf1	equ	0xFE7
  1336                           fsr1h	equ	0xFE2
  1337                           fsr1l	equ	0xFE1
  1338                           indf2	equ	0xFDF
  1339                           fsr2h	equ	0xFDA
  1340                           fsr2l	equ	0xFD9
  1341                           status	equ	0xFD8
  1342                           
  1343 ;; *************** function _delayMS *****************
  1344 ;; Defined at:
  1345 ;;		line 240 in file "Current_Sense_Main.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  a               2    0[COMRAM] unsigned int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  j               2    4[COMRAM] unsigned int 
  1350 ;;  i               2    2[COMRAM] unsigned int 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;		None               void
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         2       0       0       0       0       0       0
  1361 ;;      Locals:         4       0       0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0
  1363 ;;      Totals:         6       0       0       0       0       0       0
  1364 ;;Total ram usage:        6 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_init
  1370 ;;		_resetCommunications
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text6
  1375  0010FA                     __ptext6:
  1376                           	opt stack 0
  1377  0010FA                     _delayMS:
  1378                           	opt stack 29
  1379                           
  1380                           ;Current_Sense_Main.c: 241: unsigned int i, j;
  1381                           ;Current_Sense_Main.c: 243: for (i = 0; i < a; i++)
  1382                           
  1383                           ;incstack = 0
  1384  0010FA  0E00               	movlw	0
  1385  0010FC  6E04               	movwf	delayMS@i+1,c
  1386  0010FE  0E00               	movlw	0
  1387  001100  6E03               	movwf	delayMS@i,c
  1388  001102  D00F               	goto	l1456
  1389  001104                     l1444:
  1390                           
  1391                           ;Current_Sense_Main.c: 244: for (j = 0; j < 100; j++);
  1392  001104  0E00               	movlw	0
  1393  001106  6E06               	movwf	delayMS@j+1,c
  1394  001108  0E00               	movlw	0
  1395  00110A  6E05               	movwf	delayMS@j,c
  1396  00110C  0E64               	movlw	100
  1397  00110E  5C05               	subwf	delayMS@j,w,c
  1398  001110  0E00               	movlw	0
  1399  001112  5806               	subwfb	delayMS@j+1,w,c
  1400  001114  B0D8               	btfsc	status,0,c
  1401  001116  D003               	goto	l1454
  1402  001118  4A05               	infsnz	delayMS@j,f,c
  1403  00111A  2A06               	incf	delayMS@j+1,f,c
  1404  00111C  D7F7               	goto	L3
  1405  00111E                     l1454:
  1406  00111E  4A03               	infsnz	delayMS@i,f,c
  1407  001120  2A04               	incf	delayMS@i+1,f,c
  1408  001122                     l1456:
  1409  001122  5001               	movf	delayMS@a,w,c
  1410  001124  5C03               	subwf	delayMS@i,w,c
  1411  001126  5002               	movf	delayMS@a+1,w,c
  1412  001128  5804               	subwfb	delayMS@i+1,w,c
  1413  00112A  B0D8               	btfsc	status,0,c
  1414  00112C  0012               	return	
  1415  00112E  D7EA               	goto	l1444
  1416  001130                     __end_of_delayMS:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           indf1	equ	0xFE7
  1424                           fsr1h	equ	0xFE2
  1425                           fsr1l	equ	0xFE1
  1426                           indf2	equ	0xFDF
  1427                           fsr2h	equ	0xFDA
  1428                           fsr2l	equ	0xFD9
  1429                           status	equ	0xFD8
  1430                           
  1431 ;; *************** function _com_command_testLED *****************
  1432 ;; Defined at:
  1433 ;;		line 586 in file "SlaveComm_PIC18.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1436 ;;		 -> communications@send_buffer(42), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;		None               void
  1441 ;; Registers used:
  1442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1448 ;;      Params:         2       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0
  1451 ;;      Totals:         2       0       0       0       0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		_command_builder2
  1457 ;; This function is called by:
  1458 ;;		_resetCommunications
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text7
  1463  0012D2                     __ptext7:
  1464                           	opt stack 0
  1465  0012D2                     _com_command_testLED:
  1466                           	opt stack 25
  1467                           
  1468                           ;SlaveComm_PIC18.c: 588: command_builder2( send_buffer, "Read", "LEDB" );
  1469                           
  1470                           ;incstack = 0
  1471  0012D2  C014  F00E         	movff	com_command_testLED@send_buffer+1,command_builder2@send_buffer+1
  1472  0012D6  C013  F00D         	movff	com_command_testLED@send_buffer,command_builder2@send_buffer
  1473  0012DA  0E06               	movlw	high STR_4
  1474  0012DC  6E10               	movwf	command_builder2@data1+1,c
  1475  0012DE  0E2D               	movlw	low STR_4
  1476  0012E0  6E0F               	movwf	command_builder2@data1,c
  1477  0012E2  0E06               	movlw	high STR_6
  1478  0012E4  6E12               	movwf	command_builder2@data2+1,c
  1479  0012E6  0E23               	movlw	low STR_6
  1480  0012E8  6E11               	movwf	command_builder2@data2,c
  1481  0012EA  EC6B  F007         	call	_command_builder2	;wreg free
  1482  0012EE  0012               	return	
  1483  0012F0                     __end_of_com_command_testLED:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           prodh	equ	0xFF4
  1487                           prodl	equ	0xFF3
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           indf1	equ	0xFE7
  1491                           fsr1h	equ	0xFE2
  1492                           fsr1l	equ	0xFE1
  1493                           indf2	equ	0xFDF
  1494                           fsr2h	equ	0xFDA
  1495                           fsr2l	equ	0xFD9
  1496                           status	equ	0xFD8
  1497                           
  1498 ;; *************** function _com_command_setVolts *****************
  1499 ;; Defined at:
  1500 ;;		line 600 in file "SlaveComm_PIC18.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1503 ;;		 -> communications@send_buffer(42), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;		None               void
  1508 ;; Registers used:
  1509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         2       0       0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0
  1518 ;;      Totals:         2       0       0       0       0       0       0
  1519 ;;Total ram usage:        2 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    3
  1522 ;; This function calls:
  1523 ;;		_command_builder3
  1524 ;; This function is called by:
  1525 ;;		_resetCommunications
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text8
  1530  0011B6                     __ptext8:
  1531                           	opt stack 0
  1532  0011B6                     _com_command_setVolts:
  1533                           	opt stack 25
  1534                           
  1535                           ;SlaveComm_PIC18.c: 602: command_builder3( send_buffer, "Set", "Volts", "222" );
  1536                           
  1537                           ;incstack = 0
  1538  0011B6  C016  F00E         	movff	com_command_setVolts@send_buffer+1,command_builder3@send_buffer+1
  1539  0011BA  C015  F00D         	movff	com_command_setVolts@send_buffer,command_builder3@send_buffer
  1540  0011BE  0E06               	movlw	high STR_2
  1541  0011C0  6E10               	movwf	command_builder3@data1+1,c
  1542  0011C2  0E54               	movlw	low STR_2
  1543  0011C4  6E0F               	movwf	command_builder3@data1,c
  1544  0011C6  0E06               	movlw	high STR_18
  1545  0011C8  6E12               	movwf	command_builder3@data2+1,c
  1546  0011CA  0E17               	movlw	low STR_18
  1547  0011CC  6E11               	movwf	command_builder3@data2,c
  1548  0011CE  0E06               	movlw	high STR_29
  1549  0011D0  6E14               	movwf	command_builder3@data3+1,c
  1550  0011D2  0E40               	movlw	low STR_29
  1551  0011D4  6E13               	movwf	command_builder3@data3,c
  1552  0011D6  ECD4  F006         	call	_command_builder3	;wreg free
  1553  0011DA  0012               	return	
  1554  0011DC                     __end_of_com_command_setVolts:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           indf1	equ	0xFE7
  1562                           fsr1h	equ	0xFE2
  1563                           fsr1l	equ	0xFE1
  1564                           indf2	equ	0xFDF
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _com_command_setVersion *****************
  1570 ;; Defined at:
  1571 ;;		line 621 in file "SlaveComm_PIC18.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1574 ;;		 -> communications@send_buffer(42), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         2       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         2       0       0       0       0       0       0
  1590 ;;Total ram usage:        2 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_command_builder3
  1595 ;; This function is called by:
  1596 ;;		_resetCommunications
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text9
  1601  0011DC                     __ptext9:
  1602                           	opt stack 0
  1603  0011DC                     _com_command_setVersion:
  1604                           	opt stack 25
  1605                           
  1606                           ;SlaveComm_PIC18.c: 623: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  1607                           
  1608                           ;incstack = 0
  1609  0011DC  C016  F00E         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  1610  0011E0  C015  F00D         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  1611  0011E4  0E06               	movlw	high STR_2
  1612  0011E6  6E10               	movwf	command_builder3@data1+1,c
  1613  0011E8  0E54               	movlw	low STR_2
  1614  0011EA  6E0F               	movwf	command_builder3@data1,c
  1615  0011EC  0E06               	movlw	high STR_20
  1616  0011EE  6E12               	movwf	command_builder3@data2+1,c
  1617  0011F0  0E0D               	movlw	low STR_20
  1618  0011F2  6E11               	movwf	command_builder3@data2,c
  1619  0011F4  0E06               	movlw	high STR_37
  1620  0011F6  6E14               	movwf	command_builder3@data3+1,c
  1621  0011F8  0E48               	movlw	low STR_37
  1622  0011FA  6E13               	movwf	command_builder3@data3,c
  1623  0011FC  ECD4  F006         	call	_command_builder3	;wreg free
  1624  001200  0012               	return	
  1625  001202                     __end_of_com_command_setVersion:
  1626                           	opt stack 0
  1627                           tblptru	equ	0xFF8
  1628                           prodh	equ	0xFF4
  1629                           prodl	equ	0xFF3
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           indf1	equ	0xFE7
  1633                           fsr1h	equ	0xFE2
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _com_command_setPower *****************
  1641 ;; Defined at:
  1642 ;;		line 593 in file "SlaveComm_PIC18.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1645 ;;		 -> communications@send_buffer(42), 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;		None               void
  1650 ;; Registers used:
  1651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1657 ;;      Params:         2       0       0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0
  1660 ;;      Totals:         2       0       0       0       0       0       0
  1661 ;;Total ram usage:        2 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    3
  1664 ;; This function calls:
  1665 ;;		_command_builder3
  1666 ;; This function is called by:
  1667 ;;		_resetCommunications
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text10
  1672  001202                     __ptext10:
  1673                           	opt stack 0
  1674  001202                     _com_command_setPower:
  1675                           	opt stack 25
  1676                           
  1677                           ;SlaveComm_PIC18.c: 595: command_builder3( send_buffer, "Set", "Watts", "111" );
  1678                           
  1679                           ;incstack = 0
  1680  001202  C016  F00E         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  1681  001206  C015  F00D         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  1682  00120A  0E06               	movlw	high STR_2
  1683  00120C  6E10               	movwf	command_builder3@data1+1,c
  1684  00120E  0E54               	movlw	low STR_2
  1685  001210  6E0F               	movwf	command_builder3@data1,c
  1686  001212  0E06               	movlw	high STR_17
  1687  001214  6E12               	movwf	command_builder3@data2+1,c
  1688  001216  0E1D               	movlw	low STR_17
  1689  001218  6E11               	movwf	command_builder3@data2,c
  1690  00121A  0E06               	movlw	high STR_26
  1691  00121C  6E14               	movwf	command_builder3@data3+1,c
  1692  00121E  0E3C               	movlw	low STR_26
  1693  001220  6E13               	movwf	command_builder3@data3,c
  1694  001222  ECD4  F006         	call	_command_builder3	;wreg free
  1695  001226  0012               	return	
  1696  001228                     __end_of_com_command_setPower:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           prodh	equ	0xFF4
  1700                           prodl	equ	0xFF3
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           indf1	equ	0xFE7
  1704                           fsr1h	equ	0xFE2
  1705                           fsr1l	equ	0xFE1
  1706                           indf2	equ	0xFDF
  1707                           fsr2h	equ	0xFDA
  1708                           fsr2l	equ	0xFD9
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function _com_command_setAmps *****************
  1712 ;; Defined at:
  1713 ;;		line 607 in file "SlaveComm_PIC18.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1716 ;;		 -> communications@send_buffer(42), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1728 ;;      Params:         2       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0
  1731 ;;      Totals:         2       0       0       0       0       0       0
  1732 ;;Total ram usage:        2 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    3
  1735 ;; This function calls:
  1736 ;;		_command_builder3
  1737 ;; This function is called by:
  1738 ;;		_resetCommunications
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text11
  1743  001228                     __ptext11:
  1744                           	opt stack 0
  1745  001228                     _com_command_setAmps:
  1746                           	opt stack 25
  1747                           
  1748                           ;SlaveComm_PIC18.c: 609: command_builder3( send_buffer, "Set", "Amps", "333" );
  1749                           
  1750                           ;incstack = 0
  1751  001228  C016  F00E         	movff	com_command_setAmps@send_buffer+1,command_builder3@send_buffer+1
  1752  00122C  C015  F00D         	movff	com_command_setAmps@send_buffer,command_builder3@send_buffer
  1753  001230  0E06               	movlw	high STR_2
  1754  001232  6E10               	movwf	command_builder3@data1+1,c
  1755  001234  0E54               	movlw	low STR_2
  1756  001236  6E0F               	movwf	command_builder3@data1,c
  1757  001238  0E06               	movlw	high STR_19
  1758  00123A  6E12               	movwf	command_builder3@data2+1,c
  1759  00123C  0E37               	movlw	low STR_19
  1760  00123E  6E11               	movwf	command_builder3@data2,c
  1761  001240  0E06               	movlw	high STR_32
  1762  001242  6E14               	movwf	command_builder3@data3+1,c
  1763  001244  0E44               	movlw	low STR_32
  1764  001246  6E13               	movwf	command_builder3@data3,c
  1765  001248  ECD4  F006         	call	_command_builder3	;wreg free
  1766  00124C  0012               	return	
  1767  00124E                     __end_of_com_command_setAmps:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           prodh	equ	0xFF4
  1771                           prodl	equ	0xFF3
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           indf1	equ	0xFE7
  1775                           fsr1h	equ	0xFE2
  1776                           fsr1l	equ	0xFE1
  1777                           indf2	equ	0xFDF
  1778                           fsr2h	equ	0xFDA
  1779                           fsr2l	equ	0xFD9
  1780                           status	equ	0xFD8
  1781                           
  1782 ;; *************** function _com_command_readCalibration *****************
  1783 ;; Defined at:
  1784 ;;		line 614 in file "SlaveComm_PIC18.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1787 ;;		 -> communications@send_buffer(42), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1799 ;;      Params:         2       0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    3
  1806 ;; This function calls:
  1807 ;;		_command_builder2
  1808 ;; This function is called by:
  1809 ;;		_resetCommunications
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text12
  1814  0012F0                     __ptext12:
  1815                           	opt stack 0
  1816  0012F0                     _com_command_readCalibration:
  1817                           	opt stack 25
  1818                           
  1819                           ;SlaveComm_PIC18.c: 616: command_builder2( send_buffer, "Read", "Calibration" );
  1820                           
  1821                           ;incstack = 0
  1822  0012F0  C014  F00E         	movff	com_command_readCalibration@send_buffer+1,command_builder2@send_buffer+1
  1823  0012F4  C013  F00D         	movff	com_command_readCalibration@send_buffer,command_builder2@send_buffer
  1824  0012F8  0E06               	movlw	high STR_4
  1825  0012FA  6E10               	movwf	command_builder2@data1+1,c
  1826  0012FC  0E2D               	movlw	low STR_4
  1827  0012FE  6E0F               	movwf	command_builder2@data1,c
  1828  001300  0E06               	movlw	high STR_3
  1829  001302  6E12               	movwf	command_builder2@data2+1,c
  1830  001304  0E01               	movlw	low STR_3
  1831  001306  6E11               	movwf	command_builder2@data2,c
  1832  001308  EC6B  F007         	call	_command_builder2	;wreg free
  1833  00130C  0012               	return	
  1834  00130E                     __end_of_com_command_readCalibration:
  1835                           	opt stack 0
  1836                           tblptru	equ	0xFF8
  1837                           prodh	equ	0xFF4
  1838                           prodl	equ	0xFF3
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           indf1	equ	0xFE7
  1842                           fsr1h	equ	0xFE2
  1843                           fsr1l	equ	0xFE1
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _command_builder2 *****************
  1850 ;; Defined at:
  1851 ;;		line 392 in file "SlaveComm_PIC18.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  1854 ;;		 -> communications@send_buffer(42), 
  1855 ;;  data1           2   14[COMRAM] PTR unsigned char 
  1856 ;;		 -> STR_33(5), STR_22(5), 
  1857 ;;  data2           2   16[COMRAM] PTR unsigned char 
  1858 ;;		 -> STR_34(12), STR_23(5), 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1870 ;;      Params:         6       0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0
  1873 ;;      Totals:         6       0       0       0       0       0       0
  1874 ;;Total ram usage:        6 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    2
  1877 ;; This function calls:
  1878 ;;		_command_builder_add_char
  1879 ;;		_command_builder_add_string
  1880 ;; This function is called by:
  1881 ;;		_com_command_testLED
  1882 ;;		_com_command_readCalibration
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text13
  1887  000ED6                     __ptext13:
  1888                           	opt stack 0
  1889  000ED6                     _command_builder2:
  1890                           	opt stack 25
  1891                           
  1892                           ;SlaveComm_PIC18.c: 394: command_builder_add_char( send_buffer, '#' );
  1893                           
  1894                           ;incstack = 0
  1895  000ED6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1896  000EDA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1897  000EDE  0E23               	movlw	35
  1898  000EE0  6E03               	movwf	command_builder_add_char@data,c
  1899  000EE2  EC01  F008         	call	_command_builder_add_char	;wreg free
  1900                           
  1901                           ;SlaveComm_PIC18.c: 395: command_builder_add_char( send_buffer, '#' );
  1902  000EE6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1903  000EEA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1904  000EEE  0E23               	movlw	35
  1905  000EF0  6E03               	movwf	command_builder_add_char@data,c
  1906  000EF2  EC01  F008         	call	_command_builder_add_char	;wreg free
  1907                           
  1908                           ;SlaveComm_PIC18.c: 396: command_builder_add_char( send_buffer, '!' );
  1909  000EF6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1910  000EFA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1911  000EFE  0E21               	movlw	33
  1912  000F00  6E03               	movwf	command_builder_add_char@data,c
  1913  000F02  EC01  F008         	call	_command_builder_add_char	;wreg free
  1914                           
  1915                           ;SlaveComm_PIC18.c: 397: command_builder_add_string( send_buffer, data1 );
  1916  000F06  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1917  000F0A  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1918  000F0E  C010  F008         	movff	command_builder2@data1+1,command_builder_add_string@data_string+1
  1919  000F12  C00F  F007         	movff	command_builder2@data1,command_builder_add_string@data_string
  1920  000F16  ECA8  F007         	call	_command_builder_add_string	;wreg free
  1921                           
  1922                           ;SlaveComm_PIC18.c: 398: command_builder_add_char( send_buffer, ';' );
  1923  000F1A  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1924  000F1E  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1925  000F22  0E3B               	movlw	59
  1926  000F24  6E03               	movwf	command_builder_add_char@data,c
  1927  000F26  EC01  F008         	call	_command_builder_add_char	;wreg free
  1928                           
  1929                           ;SlaveComm_PIC18.c: 399: command_builder_add_string( send_buffer, data2 );
  1930  000F2A  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1931  000F2E  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1932  000F32  C012  F008         	movff	command_builder2@data2+1,command_builder_add_string@data_string+1
  1933  000F36  C011  F007         	movff	command_builder2@data2,command_builder_add_string@data_string
  1934  000F3A  ECA8  F007         	call	_command_builder_add_string	;wreg free
  1935                           
  1936                           ;SlaveComm_PIC18.c: 400: command_builder_add_char( send_buffer, '*' );
  1937  000F3E  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1938  000F42  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1939  000F46  0E2A               	movlw	42
  1940  000F48  6E03               	movwf	command_builder_add_char@data,c
  1941  000F4A  EC01  F008         	call	_command_builder_add_char	;wreg free
  1942  000F4E  0012               	return	
  1943  000F50                     __end_of_command_builder2:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           prodh	equ	0xFF4
  1947                           prodl	equ	0xFF3
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           indf1	equ	0xFE7
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _receive_data *****************
  1959 ;; Defined at:
  1960 ;;		line 190 in file "SlaveComm_PIC18.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  receive_buff    2    3[COMRAM] PTR struct buffer
  1963 ;;		 -> communications@receive_buffer(42), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  data            1    6[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      enum E7493
  1968 ;; Registers used:
  1969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         2       0       0       0       0       0       0
  1976 ;;      Locals:         1       0       0       0       0       0       0
  1977 ;;      Temps:          1       0       0       0       0       0       0
  1978 ;;      Totals:         4       0       0       0       0       0       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    1
  1982 ;; This function calls:
  1983 ;;		_SPI_receive_data
  1984 ;; This function is called by:
  1985 ;;		_communications
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text14
  1990  000C38                     __ptext14:
  1991                           	opt stack 0
  1992  000C38                     _receive_data:
  1993                           	opt stack 28
  1994                           
  1995                           ;SlaveComm_PIC18.c: 192: char data;
  1996                           ;SlaveComm_PIC18.c: 194: static enum receive_status my_status = receive_waiting;
  1997                           ;SlaveComm_PIC18.c: 196: if( my_status == receive_end_command )
  1998                           
  1999                           ;incstack = 0
  2000  000C38  505D               	movf	receive_data@my_status,w,c
  2001  000C3A  0A02               	xorlw	2
  2002  000C3C  A4D8               	btfss	status,2,c
  2003  000C3E  D002               	goto	l1652
  2004                           
  2005                           ;SlaveComm_PIC18.c: 197: {
  2006                           ;SlaveComm_PIC18.c: 198: my_status = receive_waiting;
  2007  000C40  0E00               	movlw	0
  2008  000C42  6E5D               	movwf	receive_data@my_status,c
  2009  000C44                     l1652:
  2010                           
  2011                           ;SlaveComm_PIC18.c: 199: }
  2012                           ;SlaveComm_PIC18.c: 201: if( SPI_receive_data( &data ) == 1 )
  2013  000C44  0E00               	movlw	high receive_data@data
  2014  000C46  6E02               	movwf	SPI_receive_data@data+1,c
  2015  000C48  0E07               	movlw	low receive_data@data
  2016  000C4A  6E01               	movwf	SPI_receive_data@data,c
  2017  000C4C  ECC7  F008         	call	_SPI_receive_data	;wreg free
  2018  000C50  6E06               	movwf	??_receive_data& (0+255),c
  2019  000C52  0406               	decf	??_receive_data,w,c
  2020  000C54  A4D8               	btfss	status,2,c
  2021  000C56  D04F               	goto	l153
  2022                           
  2023                           ;SlaveComm_PIC18.c: 202: {
  2024                           ;SlaveComm_PIC18.c: 203: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2025  000C58  5007               	movf	receive_data@data,w,c
  2026  000C5A  0A21               	xorlw	33
  2027  000C5C  A4D8               	btfss	status,2,c
  2028  000C5E  D015               	goto	l1664
  2029  000C60  045D               	decf	receive_data@my_status,w,c
  2030  000C62  B4D8               	btfsc	status,2,c
  2031  000C64  D012               	goto	l1664
  2032                           
  2033                           ;SlaveComm_PIC18.c: 204: {
  2034                           ;SlaveComm_PIC18.c: 205: my_status = receive_in_command;
  2035  000C66  0E01               	movlw	1
  2036  000C68  6E5D               	movwf	receive_data@my_status,c
  2037                           
  2038                           ;SlaveComm_PIC18.c: 206: receive_buffer->read_position = 0;
  2039  000C6A  EE20 F029          	lfsr	2,41
  2040  000C6E  5004               	movf	receive_data@receive_buffer,w,c
  2041  000C70  26D9               	addwf	fsr2l,f,c
  2042  000C72  5005               	movf	receive_data@receive_buffer+1,w,c
  2043  000C74  22DA               	addwfc	fsr2h,f,c
  2044  000C76  0E00               	movlw	0
  2045  000C78  6EDF               	movwf	indf2,c
  2046                           
  2047                           ;SlaveComm_PIC18.c: 207: receive_buffer->write_position = 0;
  2048  000C7A  EE20 F028          	lfsr	2,40
  2049  000C7E  5004               	movf	receive_data@receive_buffer,w,c
  2050  000C80  26D9               	addwf	fsr2l,f,c
  2051  000C82  5005               	movf	receive_data@receive_buffer+1,w,c
  2052  000C84  22DA               	addwfc	fsr2h,f,c
  2053  000C86  0E00               	movlw	0
  2054  000C88  6EDF               	movwf	indf2,c
  2055  000C8A                     l1664:
  2056                           
  2057                           ;SlaveComm_PIC18.c: 208: }
  2058                           ;SlaveComm_PIC18.c: 210: if( my_status == receive_in_command )
  2059  000C8A  045D               	decf	receive_data@my_status,w,c
  2060  000C8C  A4D8               	btfss	status,2,c
  2061  000C8E  D02A               	goto	l1674
  2062                           
  2063                           ;SlaveComm_PIC18.c: 211: {
  2064                           ;SlaveComm_PIC18.c: 212: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2065  000C90  EE20 F028          	lfsr	2,40
  2066  000C94  5004               	movf	receive_data@receive_buffer,w,c
  2067  000C96  26D9               	addwf	fsr2l,f,c
  2068  000C98  5005               	movf	receive_data@receive_buffer+1,w,c
  2069  000C9A  22DA               	addwfc	fsr2h,f,c
  2070  000C9C  50DF               	movf	indf2,w,c
  2071  000C9E  6E06               	movwf	??_receive_data& (0+255),c
  2072  000CA0  5006               	movf	??_receive_data,w,c
  2073  000CA2  0D01               	mullw	1
  2074  000CA4  50F3               	movf	prodl,w,c
  2075  000CA6  2404               	addwf	receive_data@receive_buffer,w,c
  2076  000CA8  6ED9               	movwf	fsr2l,c
  2077  000CAA  50F4               	movf	prodh,w,c
  2078  000CAC  2005               	addwfc	receive_data@receive_buffer+1,w,c
  2079  000CAE  6EDA               	movwf	fsr2h,c
  2080  000CB0  C007  FFDF         	movff	receive_data@data,indf2
  2081                           
  2082                           ;SlaveComm_PIC18.c: 214: receive_buffer->write_position++;
  2083  000CB4  EE20 F028          	lfsr	2,40
  2084  000CB8  5004               	movf	receive_data@receive_buffer,w,c
  2085  000CBA  26D9               	addwf	fsr2l,f,c
  2086  000CBC  5005               	movf	receive_data@receive_buffer+1,w,c
  2087  000CBE  22DA               	addwfc	fsr2h,f,c
  2088  000CC0  2ADF               	incf	indf2,f,c
  2089                           
  2090                           ;SlaveComm_PIC18.c: 215: if( receive_buffer->write_position >= 40 )
  2091  000CC2  EE20 F028          	lfsr	2,40
  2092  000CC6  5004               	movf	receive_data@receive_buffer,w,c
  2093  000CC8  26D9               	addwf	fsr2l,f,c
  2094  000CCA  5005               	movf	receive_data@receive_buffer+1,w,c
  2095  000CCC  22DA               	addwfc	fsr2h,f,c
  2096  000CCE  0E27               	movlw	39
  2097  000CD0  64DF               	cpfsgt	indf2,c
  2098  000CD2  D008               	goto	l1674
  2099                           
  2100                           ;SlaveComm_PIC18.c: 216: {
  2101                           ;SlaveComm_PIC18.c: 217: receive_buffer->write_position = ( 40 - 1 );
  2102  000CD4  EE20 F028          	lfsr	2,40
  2103  000CD8  5004               	movf	receive_data@receive_buffer,w,c
  2104  000CDA  26D9               	addwf	fsr2l,f,c
  2105  000CDC  5005               	movf	receive_data@receive_buffer+1,w,c
  2106  000CDE  22DA               	addwfc	fsr2h,f,c
  2107  000CE0  0E27               	movlw	39
  2108  000CE2  6EDF               	movwf	indf2,c
  2109  000CE4                     l1674:
  2110                           
  2111                           ;SlaveComm_PIC18.c: 218: }
  2112                           ;SlaveComm_PIC18.c: 219: }
  2113                           ;SlaveComm_PIC18.c: 221: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  2114  000CE4  045D               	decf	receive_data@my_status,w,c
  2115  000CE6  A4D8               	btfss	status,2,c
  2116  000CE8  D006               	goto	l153
  2117  000CEA  5007               	movf	receive_data@data,w,c
  2118  000CEC  0A2A               	xorlw	42
  2119  000CEE  A4D8               	btfss	status,2,c
  2120  000CF0  D002               	goto	l153
  2121                           
  2122                           ;SlaveComm_PIC18.c: 222: {
  2123                           ;SlaveComm_PIC18.c: 223: my_status = receive_end_command;
  2124  000CF2  0E02               	movlw	2
  2125  000CF4  6E5D               	movwf	receive_data@my_status,c
  2126  000CF6                     l153:
  2127                           
  2128                           ;SlaveComm_PIC18.c: 224: }
  2129                           ;SlaveComm_PIC18.c: 225: }
  2130                           ;SlaveComm_PIC18.c: 227: return my_status;
  2131  000CF6  505D               	movf	receive_data@my_status,w,c
  2132  000CF8  0012               	return	
  2133  000CFA                     __end_of_receive_data:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           indf1	equ	0xFE7
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _SPI_receive_data *****************
  2149 ;; Defined at:
  2150 ;;		line 537 in file "SlaveComm_PIC18.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  data            2    0[COMRAM] PTR unsigned char 
  2153 ;;		 -> receive_data@data(1), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  recvGood        1    2[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      unsigned char 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr2l, fsr2h, status,2
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2165 ;;      Params:         2       0       0       0       0       0       0
  2166 ;;      Locals:         1       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0
  2168 ;;      Totals:         3       0       0       0       0       0       0
  2169 ;;Total ram usage:        3 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_receive_data
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text15
  2179  00118E                     __ptext15:
  2180                           	opt stack 0
  2181  00118E                     _SPI_receive_data:
  2182                           	opt stack 28
  2183                           
  2184                           ;SlaveComm_PIC18.c: 540: bool recvGood = 0;
  2185                           
  2186                           ;incstack = 0
  2187  00118E  0E00               	movlw	0
  2188  001190  6E03               	movwf	SPI_receive_data@recvGood,c
  2189                           
  2190                           ;SlaveComm_PIC18.c: 542: if( SSP2STATbits.BF == 1 )
  2191  001192  A06D               	btfss	3949,0,c	;volatile
  2192  001194  D00C               	goto	l1492
  2193                           
  2194                           ;SlaveComm_PIC18.c: 543: {
  2195                           ;SlaveComm_PIC18.c: 544: *data = SSP2BUF;
  2196  001196  C001  FFD9         	movff	SPI_receive_data@data,fsr2l
  2197  00119A  C002  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2198  00119E  CF6F FFDF          	movff	3951,indf2	;volatile
  2199                           
  2200                           ;SlaveComm_PIC18.c: 545: recvGood = 1;
  2201  0011A2  0E01               	movlw	1
  2202  0011A4  6E03               	movwf	SPI_receive_data@recvGood,c
  2203                           
  2204                           ;SlaveComm_PIC18.c: 546: SSP2CON1bits.WCOL = 0;
  2205  0011A6  9E6C               	bcf	3948,7,c	;volatile
  2206                           
  2207                           ;SlaveComm_PIC18.c: 547: SPI_transmit_wait = 0;
  2208  0011A8  0E00               	movlw	0
  2209  0011AA  6E59               	movwf	_SPI_transmit_wait,c
  2210                           
  2211                           ;SlaveComm_PIC18.c: 548: }
  2212  0011AC  D002               	goto	l258
  2213  0011AE                     l1492:
  2214                           
  2215                           ;SlaveComm_PIC18.c: 549: else
  2216                           ;SlaveComm_PIC18.c: 550: {
  2217                           ;SlaveComm_PIC18.c: 551: recvGood = 0;
  2218  0011AE  0E00               	movlw	0
  2219  0011B0  6E03               	movwf	SPI_receive_data@recvGood,c
  2220  0011B2                     l258:
  2221                           
  2222                           ;SlaveComm_PIC18.c: 552: }
  2223                           ;SlaveComm_PIC18.c: 554: return recvGood;
  2224  0011B2  5003               	movf	SPI_receive_data@recvGood,w,c
  2225  0011B4  0012               	return	
  2226  0011B6                     __end_of_SPI_receive_data:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           prodh	equ	0xFF4
  2230                           prodl	equ	0xFF3
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           indf1	equ	0xFE7
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           indf2	equ	0xFDF
  2237                           fsr2h	equ	0xFDA
  2238                           fsr2l	equ	0xFD9
  2239                           status	equ	0xFD8
  2240                           
  2241 ;; *************** function _process_data *****************
  2242 ;; Defined at:
  2243 ;;		line 230 in file "SlaveComm_PIC18.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  receive_buff    2   26[COMRAM] PTR struct buffer
  2246 ;;		 -> communications@receive_buffer(42), 
  2247 ;;  send_buffer     2   28[COMRAM] PTR struct buffer
  2248 ;;		 -> communications@send_buffer(42), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  parameters     50   30[COMRAM] unsigned char [10][5]
  2251 ;;  end_of_trans    1   80[COMRAM] unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      unsigned char 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2261 ;;      Params:         4       0       0       0       0       0       0
  2262 ;;      Locals:        51       0       0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0
  2264 ;;      Totals:        55       0       0       0       0       0       0
  2265 ;;Total ram usage:       55 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    5
  2268 ;; This function calls:
  2269 ;;		_process_data_parameterize
  2270 ;;		_process_data_parameters
  2271 ;; This function is called by:
  2272 ;;		_communications
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text16
  2277  001160                     __ptext16:
  2278                           	opt stack 0
  2279  001160                     _process_data:
  2280                           	opt stack 24
  2281                           
  2282                           ;SlaveComm_PIC18.c: 232: bool end_of_transmission_received;
  2283                           ;SlaveComm_PIC18.c: 237: char parameters[5][10];
  2284                           ;SlaveComm_PIC18.c: 239: process_data_parameterize( parameters, receive_buffer );
  2285                           
  2286                           ;incstack = 0
  2287  001160  0E00               	movlw	high process_data@parameters
  2288  001162  6E08               	movwf	process_data_parameterize@parameters+1,c
  2289  001164  0E1F               	movlw	low process_data@parameters
  2290  001166  6E07               	movwf	process_data_parameterize@parameters,c
  2291  001168  C01C  F00A         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  2292  00116C  C01B  F009         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  2293  001170  EC55  F004         	call	_process_data_parameterize	;wreg free
  2294                           
  2295                           ;SlaveComm_PIC18.c: 241: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  2296  001174  0E00               	movlw	high process_data@parameters
  2297  001176  6E16               	movwf	process_data_parameters@parameters+1,c
  2298  001178  0E1F               	movlw	low process_data@parameters
  2299  00117A  6E15               	movwf	process_data_parameters@parameters,c
  2300  00117C  C01E  F018         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  2301  001180  C01D  F017         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  2302  001184  EC2E  F003         	call	_process_data_parameters	;wreg free
  2303  001188  6E51               	movwf	process_data@end_of_transmission_received,c
  2304                           
  2305                           ;SlaveComm_PIC18.c: 243: return end_of_transmission_received;
  2306  00118A  5051               	movf	process_data@end_of_transmission_received,w,c
  2307  00118C  0012               	return	
  2308  00118E                     __end_of_process_data:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           indf1	equ	0xFE7
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           indf2	equ	0xFDF
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _process_data_parameters *****************
  2324 ;; Defined at:
  2325 ;;		line 306 in file "SlaveComm_PIC18.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  2328 ;;		 -> process_data@parameters(50), 
  2329 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  2330 ;;		 -> communications@send_buffer(42), 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  end_of_trans    1   25[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2342 ;;      Params:         4       0       0       0       0       0       0
  2343 ;;      Locals:         1       0       0       0       0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0       0
  2345 ;;      Totals:         6       0       0       0       0       0       0
  2346 ;;Total ram usage:        6 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		_command_builder3
  2351 ;;		_send_end_of_transmission
  2352 ;;		_strmatch
  2353 ;; This function is called by:
  2354 ;;		_process_data
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text17
  2359  00065C                     __ptext17:
  2360                           	opt stack 0
  2361  00065C                     _process_data_parameters:
  2362                           	opt stack 24
  2363                           
  2364                           ;SlaveComm_PIC18.c: 308: bool end_of_transmission_received = 0;
  2365                           
  2366                           ;incstack = 0
  2367  00065C  0E00               	movlw	0
  2368  00065E  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  2369                           
  2370                           ;SlaveComm_PIC18.c: 311: if( strmatch( parameters[0], "END" ) == 1 )
  2371  000660  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2372  000664  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2373  000668  0E06               	movlw	high STR_1
  2374  00066A  6E0F               	movwf	strmatch@b+1,c
  2375  00066C  0E4C               	movlw	low STR_1
  2376  00066E  6E0E               	movwf	strmatch@b,c
  2377  000670  EC98  F008         	call	_strmatch	;wreg free
  2378  000674  6E19               	movwf	??_process_data_parameters& (0+255),c
  2379  000676  0419               	decf	??_process_data_parameters,w,c
  2380  000678  A4D8               	btfss	status,2,c
  2381  00067A  D008               	goto	l1548
  2382                           
  2383                           ;SlaveComm_PIC18.c: 312: {
  2384                           ;SlaveComm_PIC18.c: 313: if( LATBbits.LATB4 == 1 )
  2385  00067C  A88A               	btfss	3978,4,c	;volatile
  2386  00067E  D002               	goto	l182
  2387                           
  2388                           ;SlaveComm_PIC18.c: 314: {
  2389                           ;SlaveComm_PIC18.c: 315: LATBbits.LATB4 = 0;
  2390  000680  988A               	bcf	3978,4,c	;volatile
  2391                           
  2392                           ;SlaveComm_PIC18.c: 316: }
  2393  000682  D001               	goto	l1546
  2394  000684                     l182:
  2395                           
  2396                           ;SlaveComm_PIC18.c: 317: else
  2397                           ;SlaveComm_PIC18.c: 318: {
  2398                           ;SlaveComm_PIC18.c: 319: LATBbits.LATB4 = 1;
  2399  000684  888A               	bsf	3978,4,c	;volatile
  2400  000686                     l1546:
  2401                           
  2402                           ;SlaveComm_PIC18.c: 320: }
  2403                           ;SlaveComm_PIC18.c: 322: end_of_transmission_received = 1;
  2404  000686  0E01               	movlw	1
  2405  000688  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  2406                           
  2407                           ;SlaveComm_PIC18.c: 323: }
  2408  00068A  D10D               	goto	l1590
  2409  00068C                     l1548:
  2410                           
  2411                           ;SlaveComm_PIC18.c: 324: else if( strmatch( parameters[0], "Set" ) == 1 )
  2412  00068C  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2413  000690  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2414  000694  0E06               	movlw	high STR_2
  2415  000696  6E0F               	movwf	strmatch@b+1,c
  2416  000698  0E54               	movlw	low STR_2
  2417  00069A  6E0E               	movwf	strmatch@b,c
  2418  00069C  EC98  F008         	call	_strmatch	;wreg free
  2419  0006A0  6E19               	movwf	??_process_data_parameters& (0+255),c
  2420  0006A2  0419               	decf	??_process_data_parameters,w,c
  2421  0006A4  A4D8               	btfss	status,2,c
  2422  0006A6  D00D               	goto	l1552
  2423                           
  2424                           ;SlaveComm_PIC18.c: 325: {
  2425                           ;SlaveComm_PIC18.c: 326: if( strmatch( parameters[1], "Calibration" ) == 1 )
  2426  0006A8  0E0A               	movlw	10
  2427  0006AA  2415               	addwf	process_data_parameters@parameters,w,c
  2428  0006AC  6E0C               	movwf	strmatch@a,c
  2429  0006AE  0E00               	movlw	0
  2430  0006B0  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2431  0006B2  6E0D               	movwf	strmatch@a+1,c
  2432  0006B4  0E06               	movlw	high STR_3
  2433  0006B6  6E0F               	movwf	strmatch@b+1,c
  2434  0006B8  0E01               	movlw	low STR_3
  2435  0006BA  6E0E               	movwf	strmatch@b,c
  2436  0006BC  EC98  F008         	call	_strmatch	;wreg free
  2437  0006C0  D0F2               	goto	l1590
  2438  0006C2                     l1552:
  2439                           
  2440                           ;SlaveComm_PIC18.c: 332: else if( strmatch( parameters[0], "Read" ) == 1 )
  2441  0006C2  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2442  0006C6  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2443  0006CA  0E06               	movlw	high STR_4
  2444  0006CC  6E0F               	movwf	strmatch@b+1,c
  2445  0006CE  0E2D               	movlw	low STR_4
  2446  0006D0  6E0E               	movwf	strmatch@b,c
  2447  0006D2  EC98  F008         	call	_strmatch	;wreg free
  2448  0006D6  6E19               	movwf	??_process_data_parameters& (0+255),c
  2449  0006D8  0419               	decf	??_process_data_parameters,w,c
  2450  0006DA  B4D8               	btfsc	status,2,c
  2451  0006DC  D0E4               	goto	l1590
  2452                           
  2453                           ;SlaveComm_PIC18.c: 336: else if( strmatch( parameters[0], "Data" ) == 1 )
  2454                           
  2455                           ;SlaveComm_PIC18.c: 333: {
  2456                           ;SlaveComm_PIC18.c: 335: }
  2457  0006DE  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2458  0006E2  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2459  0006E6  0E06               	movlw	high STR_5
  2460  0006E8  6E0F               	movwf	strmatch@b+1,c
  2461  0006EA  0E28               	movlw	low STR_5
  2462  0006EC  6E0E               	movwf	strmatch@b,c
  2463  0006EE  EC98  F008         	call	_strmatch	;wreg free
  2464  0006F2  6E19               	movwf	??_process_data_parameters& (0+255),c
  2465  0006F4  0419               	decf	??_process_data_parameters,w,c
  2466  0006F6  A4D8               	btfss	status,2,c
  2467  0006F8  D056               	goto	l1568
  2468                           
  2469                           ;SlaveComm_PIC18.c: 337: {
  2470                           ;SlaveComm_PIC18.c: 338: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2471  0006FA  0E0A               	movlw	10
  2472  0006FC  2415               	addwf	process_data_parameters@parameters,w,c
  2473  0006FE  6E0C               	movwf	strmatch@a,c
  2474  000700  0E00               	movlw	0
  2475  000702  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2476  000704  6E0D               	movwf	strmatch@a+1,c
  2477  000706  0E06               	movlw	high STR_6
  2478  000708  6E0F               	movwf	strmatch@b+1,c
  2479  00070A  0E23               	movlw	low STR_6
  2480  00070C  6E0E               	movwf	strmatch@b,c
  2481  00070E  EC98  F008         	call	_strmatch	;wreg free
  2482  000712  6E19               	movwf	??_process_data_parameters& (0+255),c
  2483  000714  0419               	decf	??_process_data_parameters,w,c
  2484  000716  A4D8               	btfss	status,2,c
  2485  000718  D0C6               	goto	l1590
  2486                           
  2487                           ;SlaveComm_PIC18.c: 339: {
  2488                           ;SlaveComm_PIC18.c: 340: if( strmatch( parameters[2], "On" ) == 1 )
  2489  00071A  0E14               	movlw	20
  2490  00071C  2415               	addwf	process_data_parameters@parameters,w,c
  2491  00071E  6E0C               	movwf	strmatch@a,c
  2492  000720  0E00               	movlw	0
  2493  000722  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2494  000724  6E0D               	movwf	strmatch@a+1,c
  2495  000726  0E06               	movlw	high STR_7
  2496  000728  6E0F               	movwf	strmatch@b+1,c
  2497  00072A  0E58               	movlw	low STR_7
  2498  00072C  6E0E               	movwf	strmatch@b,c
  2499  00072E  EC98  F008         	call	_strmatch	;wreg free
  2500  000732  6E19               	movwf	??_process_data_parameters& (0+255),c
  2501  000734  0419               	decf	??_process_data_parameters,w,c
  2502  000736  A4D8               	btfss	status,2,c
  2503  000738  D013               	goto	l1564
  2504                           
  2505                           ;SlaveComm_PIC18.c: 341: {
  2506                           ;SlaveComm_PIC18.c: 342: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  2507  00073A  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2508  00073E  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2509  000742  0E06               	movlw	high STR_2
  2510  000744  6E10               	movwf	command_builder3@data1+1,c
  2511  000746  0E54               	movlw	low STR_2
  2512  000748  6E0F               	movwf	command_builder3@data1,c
  2513  00074A  0E06               	movlw	high STR_6
  2514  00074C  6E12               	movwf	command_builder3@data2+1,c
  2515  00074E  0E23               	movlw	low STR_6
  2516  000750  6E11               	movwf	command_builder3@data2,c
  2517  000752  0E06               	movlw	high STR_10
  2518  000754  6E14               	movwf	command_builder3@data3+1,c
  2519  000756  0E50               	movlw	low STR_10
  2520  000758  6E13               	movwf	command_builder3@data3,c
  2521  00075A  ECD4  F006         	call	_command_builder3	;wreg free
  2522                           
  2523                           ;SlaveComm_PIC18.c: 343: }
  2524  00075E  D0A3               	goto	l1590
  2525  000760                     l1564:
  2526                           
  2527                           ;SlaveComm_PIC18.c: 344: else if( strmatch( parameters[2], "Off" ) == 1 )
  2528  000760  0E14               	movlw	20
  2529  000762  2415               	addwf	process_data_parameters@parameters,w,c
  2530  000764  6E0C               	movwf	strmatch@a,c
  2531  000766  0E00               	movlw	0
  2532  000768  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2533  00076A  6E0D               	movwf	strmatch@a+1,c
  2534  00076C  0E06               	movlw	high STR_10
  2535  00076E  6E0F               	movwf	strmatch@b+1,c
  2536  000770  0E50               	movlw	low STR_10
  2537  000772  6E0E               	movwf	strmatch@b,c
  2538  000774  EC98  F008         	call	_strmatch	;wreg free
  2539  000778  6E19               	movwf	??_process_data_parameters& (0+255),c
  2540  00077A  0419               	decf	??_process_data_parameters,w,c
  2541  00077C  A4D8               	btfss	status,2,c
  2542  00077E  D093               	goto	l1590
  2543                           
  2544                           ;SlaveComm_PIC18.c: 345: {
  2545                           ;SlaveComm_PIC18.c: 346: command_builder3( send_buffer, "Set", "LEDB", "On" );
  2546  000780  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2547  000784  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2548  000788  0E06               	movlw	high STR_2
  2549  00078A  6E10               	movwf	command_builder3@data1+1,c
  2550  00078C  0E54               	movlw	low STR_2
  2551  00078E  6E0F               	movwf	command_builder3@data1,c
  2552  000790  0E06               	movlw	high STR_6
  2553  000792  6E12               	movwf	command_builder3@data2+1,c
  2554  000794  0E23               	movlw	low STR_6
  2555  000796  6E11               	movwf	command_builder3@data2,c
  2556  000798  0E06               	movlw	high STR_7
  2557  00079A  6E14               	movwf	command_builder3@data3+1,c
  2558  00079C  0E58               	movlw	low STR_7
  2559  00079E  6E13               	movwf	command_builder3@data3,c
  2560  0007A0  ECD4  F006         	call	_command_builder3	;wreg free
  2561  0007A4  D080               	goto	l1590
  2562  0007A6                     l1568:
  2563                           
  2564                           ;SlaveComm_PIC18.c: 350: else if( strmatch( parameters[0], "Conf" ) == 1 )
  2565  0007A6  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2566  0007AA  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2567  0007AE  0E06               	movlw	high STR_15
  2568  0007B0  6E0F               	movwf	strmatch@b+1,c
  2569  0007B2  0E32               	movlw	low STR_15
  2570  0007B4  6E0E               	movwf	strmatch@b,c
  2571  0007B6  EC98  F008         	call	_strmatch	;wreg free
  2572  0007BA  6E19               	movwf	??_process_data_parameters& (0+255),c
  2573  0007BC  0419               	decf	??_process_data_parameters,w,c
  2574  0007BE  A4D8               	btfss	status,2,c
  2575  0007C0  D072               	goto	l1590
  2576                           
  2577                           ;SlaveComm_PIC18.c: 351: {
  2578                           ;SlaveComm_PIC18.c: 352: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2579  0007C2  0E0A               	movlw	10
  2580  0007C4  2415               	addwf	process_data_parameters@parameters,w,c
  2581  0007C6  6E0C               	movwf	strmatch@a,c
  2582  0007C8  0E00               	movlw	0
  2583  0007CA  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2584  0007CC  6E0D               	movwf	strmatch@a+1,c
  2585  0007CE  0E06               	movlw	high STR_6
  2586  0007D0  6E0F               	movwf	strmatch@b+1,c
  2587  0007D2  0E23               	movlw	low STR_6
  2588  0007D4  6E0E               	movwf	strmatch@b,c
  2589  0007D6  EC98  F008         	call	_strmatch	;wreg free
  2590  0007DA  6E19               	movwf	??_process_data_parameters& (0+255),c
  2591  0007DC  0419               	decf	??_process_data_parameters,w,c
  2592  0007DE  A4D8               	btfss	status,2,c
  2593  0007E0  D007               	goto	l1574
  2594                           
  2595                           ;SlaveComm_PIC18.c: 353: {
  2596                           ;SlaveComm_PIC18.c: 354: send_end_of_transmission( send_buffer );
  2597  0007E2  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2598  0007E6  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2599  0007EA  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2600                           
  2601                           ;SlaveComm_PIC18.c: 355: }
  2602  0007EE  D05B               	goto	l1590
  2603  0007F0                     l1574:
  2604                           
  2605                           ;SlaveComm_PIC18.c: 356: else if( strmatch( parameters[1], "Watts" ) == 1 )
  2606  0007F0  0E0A               	movlw	10
  2607  0007F2  2415               	addwf	process_data_parameters@parameters,w,c
  2608  0007F4  6E0C               	movwf	strmatch@a,c
  2609  0007F6  0E00               	movlw	0
  2610  0007F8  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2611  0007FA  6E0D               	movwf	strmatch@a+1,c
  2612  0007FC  0E06               	movlw	high STR_17
  2613  0007FE  6E0F               	movwf	strmatch@b+1,c
  2614  000800  0E1D               	movlw	low STR_17
  2615  000802  6E0E               	movwf	strmatch@b,c
  2616  000804  EC98  F008         	call	_strmatch	;wreg free
  2617  000808  6E19               	movwf	??_process_data_parameters& (0+255),c
  2618  00080A  0419               	decf	??_process_data_parameters,w,c
  2619  00080C  A4D8               	btfss	status,2,c
  2620  00080E  D007               	goto	l1578
  2621                           
  2622                           ;SlaveComm_PIC18.c: 357: {
  2623                           ;SlaveComm_PIC18.c: 358: send_end_of_transmission( send_buffer );
  2624  000810  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2625  000814  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2626  000818  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2627                           
  2628                           ;SlaveComm_PIC18.c: 359: }
  2629  00081C  D044               	goto	l1590
  2630  00081E                     l1578:
  2631                           
  2632                           ;SlaveComm_PIC18.c: 360: else if( strmatch( parameters[1], "Volts" ) == 1 )
  2633  00081E  0E0A               	movlw	10
  2634  000820  2415               	addwf	process_data_parameters@parameters,w,c
  2635  000822  6E0C               	movwf	strmatch@a,c
  2636  000824  0E00               	movlw	0
  2637  000826  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2638  000828  6E0D               	movwf	strmatch@a+1,c
  2639  00082A  0E06               	movlw	high STR_18
  2640  00082C  6E0F               	movwf	strmatch@b+1,c
  2641  00082E  0E17               	movlw	low STR_18
  2642  000830  6E0E               	movwf	strmatch@b,c
  2643  000832  EC98  F008         	call	_strmatch	;wreg free
  2644  000836  6E19               	movwf	??_process_data_parameters& (0+255),c
  2645  000838  0419               	decf	??_process_data_parameters,w,c
  2646  00083A  A4D8               	btfss	status,2,c
  2647  00083C  D007               	goto	l1582
  2648                           
  2649                           ;SlaveComm_PIC18.c: 361: {
  2650                           ;SlaveComm_PIC18.c: 362: send_end_of_transmission( send_buffer );
  2651  00083E  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2652  000842  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2653  000846  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2654                           
  2655                           ;SlaveComm_PIC18.c: 363: }
  2656  00084A  D02D               	goto	l1590
  2657  00084C                     l1582:
  2658                           
  2659                           ;SlaveComm_PIC18.c: 364: else if( strmatch( parameters[1], "Amps" ) == 1 )
  2660  00084C  0E0A               	movlw	10
  2661  00084E  2415               	addwf	process_data_parameters@parameters,w,c
  2662  000850  6E0C               	movwf	strmatch@a,c
  2663  000852  0E00               	movlw	0
  2664  000854  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2665  000856  6E0D               	movwf	strmatch@a+1,c
  2666  000858  0E06               	movlw	high STR_19
  2667  00085A  6E0F               	movwf	strmatch@b+1,c
  2668  00085C  0E37               	movlw	low STR_19
  2669  00085E  6E0E               	movwf	strmatch@b,c
  2670  000860  EC98  F008         	call	_strmatch	;wreg free
  2671  000864  6E19               	movwf	??_process_data_parameters& (0+255),c
  2672  000866  0419               	decf	??_process_data_parameters,w,c
  2673  000868  A4D8               	btfss	status,2,c
  2674  00086A  D007               	goto	l1586
  2675                           
  2676                           ;SlaveComm_PIC18.c: 365: {
  2677                           ;SlaveComm_PIC18.c: 366: send_end_of_transmission( send_buffer );
  2678  00086C  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2679  000870  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2680  000874  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2681                           
  2682                           ;SlaveComm_PIC18.c: 367: }
  2683  000878  D016               	goto	l1590
  2684  00087A                     l1586:
  2685                           
  2686                           ;SlaveComm_PIC18.c: 368: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  2687  00087A  0E0A               	movlw	10
  2688  00087C  2415               	addwf	process_data_parameters@parameters,w,c
  2689  00087E  6E0C               	movwf	strmatch@a,c
  2690  000880  0E00               	movlw	0
  2691  000882  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2692  000884  6E0D               	movwf	strmatch@a+1,c
  2693  000886  0E06               	movlw	high STR_20
  2694  000888  6E0F               	movwf	strmatch@b+1,c
  2695  00088A  0E0D               	movlw	low STR_20
  2696  00088C  6E0E               	movwf	strmatch@b,c
  2697  00088E  EC98  F008         	call	_strmatch	;wreg free
  2698  000892  6E19               	movwf	??_process_data_parameters& (0+255),c
  2699  000894  0419               	decf	??_process_data_parameters,w,c
  2700  000896  A4D8               	btfss	status,2,c
  2701  000898  D006               	goto	l1590
  2702                           
  2703                           ;SlaveComm_PIC18.c: 369: {
  2704                           ;SlaveComm_PIC18.c: 370: send_end_of_transmission( send_buffer );
  2705  00089A  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2706  00089E  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2707  0008A2  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2708  0008A6                     l1590:
  2709                           
  2710                           ;SlaveComm_PIC18.c: 371: }
  2711                           ;SlaveComm_PIC18.c: 372: }
  2712                           ;SlaveComm_PIC18.c: 378: return end_of_transmission_received;
  2713  0008A6  501A               	movf	process_data_parameters@end_of_transmission_received,w,c
  2714  0008A8  0012               	return	
  2715  0008AA                     __end_of_process_data_parameters:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           indf1	equ	0xFE7
  2723                           fsr1h	equ	0xFE2
  2724                           fsr1l	equ	0xFE1
  2725                           indf2	equ	0xFDF
  2726                           fsr2h	equ	0xFDA
  2727                           fsr2l	equ	0xFD9
  2728                           status	equ	0xFD8
  2729                           
  2730 ;; *************** function _strmatch *****************
  2731 ;; Defined at:
  2732 ;;		line 488 in file "SlaveComm_PIC18.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  a               2   11[COMRAM] PTR unsigned char 
  2735 ;;		 -> process_data@parameters(50), 
  2736 ;;  b               2   13[COMRAM] PTR unsigned char 
  2737 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  2738 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  2739 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  2740 ;;		 -> STR_2(4), STR_1(4), 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  result          2   15[COMRAM] int 
  2743 ;;  match           1   17[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      unsigned char 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         4       0       0       0       0       0       0
  2754 ;;      Locals:         3       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0
  2756 ;;      Totals:         7       0       0       0       0       0       0
  2757 ;;Total ram usage:        7 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		_strcmp2
  2762 ;; This function is called by:
  2763 ;;		_process_data_parameters
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text18
  2768  001130                     __ptext18:
  2769                           	opt stack 0
  2770  001130                     _strmatch:
  2771                           	opt stack 26
  2772                           
  2773                           ;SlaveComm_PIC18.c: 490: int result;
  2774                           ;SlaveComm_PIC18.c: 491: bool match;
  2775                           ;SlaveComm_PIC18.c: 493: result = strcmp2( a, b );
  2776                           
  2777                           ;incstack = 0
  2778  001130  C00D  F002         	movff	strmatch@a+1,strcmp2@a+1
  2779  001134  C00C  F001         	movff	strmatch@a,strcmp2@a
  2780  001138  C00F  F004         	movff	strmatch@b+1,strcmp2@b+1
  2781  00113C  C00E  F003         	movff	strmatch@b,strcmp2@b
  2782  001140  EC11  F005         	call	_strcmp2	;wreg free
  2783  001144  C001  F010         	movff	?_strcmp2,strmatch@result
  2784  001148  C002  F011         	movff	?_strcmp2+1,strmatch@result+1
  2785                           
  2786                           ;SlaveComm_PIC18.c: 495: match = ( result == 0 ) ? 1 : 0;
  2787  00114C  5011               	movf	strmatch@result+1,w,c
  2788  00114E  1010               	iorwf	strmatch@result,w,c
  2789  001150  A4D8               	btfss	status,2,c
  2790  001152  D002               	goto	u670
  2791  001154  0E01               	movlw	1
  2792  001156  D001               	goto	u676
  2793  001158                     u670:
  2794  001158  0E00               	movlw	0
  2795  00115A                     u676:
  2796  00115A  6E12               	movwf	strmatch@match,c
  2797                           
  2798                           ;SlaveComm_PIC18.c: 497: return match;
  2799  00115C  5012               	movf	strmatch@match,w,c
  2800  00115E  0012               	return	
  2801  001160                     __end_of_strmatch:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           prodh	equ	0xFF4
  2805                           prodl	equ	0xFF3
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           indf1	equ	0xFE7
  2809                           fsr1h	equ	0xFE2
  2810                           fsr1l	equ	0xFE1
  2811                           indf2	equ	0xFDF
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _strcmp2 *****************
  2817 ;; Defined at:
  2818 ;;		line 500 in file "SlaveComm_PIC18.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  a               2    0[COMRAM] PTR unsigned char 
  2821 ;;		 -> process_data@parameters(50), 
  2822 ;;  b               2    2[COMRAM] PTR unsigned char 
  2823 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  2824 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  2825 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  2826 ;;		 -> STR_2(4), STR_1(4), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  inx             2    9[COMRAM] int 
  2829 ;;  match           2    7[COMRAM] int 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  2    0[COMRAM] int 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2839 ;;      Params:         4       0       0       0       0       0       0
  2840 ;;      Locals:         4       0       0       0       0       0       0
  2841 ;;      Temps:          3       0       0       0       0       0       0
  2842 ;;      Totals:        11       0       0       0       0       0       0
  2843 ;;Total ram usage:       11 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_strmatch
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text19
  2853  000A22                     __ptext19:
  2854                           	opt stack 0
  2855  000A22                     _strcmp2:
  2856                           	opt stack 26
  2857                           
  2858                           ;SlaveComm_PIC18.c: 502: int inx = 0;
  2859                           
  2860                           ;incstack = 0
  2861  000A22  0E00               	movlw	0
  2862  000A24  6E0B               	movwf	strcmp2@inx+1,c
  2863  000A26  0E00               	movlw	0
  2864  000A28  6E0A               	movwf	strcmp2@inx,c
  2865                           
  2866                           ;SlaveComm_PIC18.c: 503: int match = 0;
  2867  000A2A  0E00               	movlw	0
  2868  000A2C  6E09               	movwf	strcmp2@match+1,c
  2869  000A2E  0E00               	movlw	0
  2870  000A30  6E08               	movwf	strcmp2@match,c
  2871                           
  2872                           ;SlaveComm_PIC18.c: 505: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  2873  000A32  D03B               	goto	l1380
  2874  000A34                     l1368:
  2875                           
  2876                           ;SlaveComm_PIC18.c: 506: {
  2877                           ;SlaveComm_PIC18.c: 507: if( a[inx] > b[inx] )
  2878  000A34  C003  F005         	movff	strcmp2@b,??_strcmp2
  2879  000A38  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2880  000A3C  500A               	movf	strcmp2@inx,w,c
  2881  000A3E  2605               	addwf	??_strcmp2,f,c
  2882  000A40  500B               	movf	strcmp2@inx+1,w,c
  2883  000A42  2206               	addwfc	??_strcmp2+1,f,c
  2884  000A44  C005  FFF6         	movff	??_strcmp2,tblptrl
  2885  000A48  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2886  000A4C                     	if	0	;tblptru may be non-zero
  2887  000A4C                     	endif
  2888  000A4C                     	if	0	;tblptru may be non-zero
  2889  000A4C                     	endif
  2890  000A4C  0008               	tblrd		*
  2891  000A4E  CFF5 F007          	movff	tablat,??_strcmp2+2
  2892  000A52  500A               	movf	strcmp2@inx,w,c
  2893  000A54  2401               	addwf	strcmp2@a,w,c
  2894  000A56  6ED9               	movwf	fsr2l,c
  2895  000A58  500B               	movf	strcmp2@inx+1,w,c
  2896  000A5A  2002               	addwfc	strcmp2@a+1,w,c
  2897  000A5C  6EDA               	movwf	fsr2h,c
  2898  000A5E  50DF               	movf	indf2,w,c
  2899  000A60  5C07               	subwf	??_strcmp2+2,w,c
  2900  000A62  B0D8               	btfsc	status,0,c
  2901  000A64  D005               	goto	l1372
  2902                           
  2903                           ;SlaveComm_PIC18.c: 508: {
  2904                           ;SlaveComm_PIC18.c: 509: match = 1;
  2905  000A66  0E00               	movlw	0
  2906  000A68  6E09               	movwf	strcmp2@match+1,c
  2907  000A6A  0E01               	movlw	1
  2908  000A6C  6E08               	movwf	strcmp2@match,c
  2909                           
  2910                           ;SlaveComm_PIC18.c: 510: }
  2911  000A6E  D01B               	goto	l1378
  2912  000A70                     l1372:
  2913                           
  2914                           ;SlaveComm_PIC18.c: 511: else if( a[inx] < b[inx] )
  2915  000A70  500A               	movf	strcmp2@inx,w,c
  2916  000A72  2401               	addwf	strcmp2@a,w,c
  2917  000A74  6ED9               	movwf	fsr2l,c
  2918  000A76  500B               	movf	strcmp2@inx+1,w,c
  2919  000A78  2002               	addwfc	strcmp2@a+1,w,c
  2920  000A7A  6EDA               	movwf	fsr2h,c
  2921  000A7C  50DF               	movf	indf2,w,c
  2922  000A7E  6E05               	movwf	??_strcmp2& (0+255),c
  2923  000A80  C003  F006         	movff	strcmp2@b,??_strcmp2+1
  2924  000A84  C004  F007         	movff	strcmp2@b+1,??_strcmp2+2
  2925  000A88  500A               	movf	strcmp2@inx,w,c
  2926  000A8A  2606               	addwf	??_strcmp2+1,f,c
  2927  000A8C  500B               	movf	strcmp2@inx+1,w,c
  2928  000A8E  2207               	addwfc	??_strcmp2+2,f,c
  2929  000A90  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  2930  000A94  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  2931  000A98                     	if	0	;tblptru may be non-zero
  2932  000A98                     	endif
  2933  000A98                     	if	0	;tblptru may be non-zero
  2934  000A98                     	endif
  2935  000A98  0008               	tblrd		*
  2936  000A9A  50F5               	movf	tablat,w,c
  2937  000A9C  5C05               	subwf	??_strcmp2,w,c
  2938  000A9E  B0D8               	btfsc	status,0,c
  2939  000AA0  D002               	goto	l1378
  2940                           
  2941                           ;SlaveComm_PIC18.c: 512: {
  2942                           ;SlaveComm_PIC18.c: 513: match = -1;
  2943  000AA2  6808               	setf	strcmp2@match,c
  2944  000AA4  6809               	setf	strcmp2@match+1,c
  2945  000AA6                     l1378:
  2946                           
  2947                           ;SlaveComm_PIC18.c: 518: }
  2948                           ;SlaveComm_PIC18.c: 520: inx++;
  2949  000AA6  4A0A               	infsnz	strcmp2@inx,f,c
  2950  000AA8  2A0B               	incf	strcmp2@inx+1,f,c
  2951  000AAA                     l1380:
  2952  000AAA  500A               	movf	strcmp2@inx,w,c
  2953  000AAC  2401               	addwf	strcmp2@a,w,c
  2954  000AAE  6ED9               	movwf	fsr2l,c
  2955  000AB0  500B               	movf	strcmp2@inx+1,w,c
  2956  000AB2  2002               	addwfc	strcmp2@a+1,w,c
  2957  000AB4  6EDA               	movwf	fsr2h,c
  2958  000AB6  50DF               	movf	indf2,w,c
  2959  000AB8  B4D8               	btfsc	status,2,c
  2960  000ABA  D015               	goto	l1386
  2961  000ABC  C003  F005         	movff	strcmp2@b,??_strcmp2
  2962  000AC0  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2963  000AC4  500A               	movf	strcmp2@inx,w,c
  2964  000AC6  2605               	addwf	??_strcmp2,f,c
  2965  000AC8  500B               	movf	strcmp2@inx+1,w,c
  2966  000ACA  2206               	addwfc	??_strcmp2+1,f,c
  2967  000ACC  C005  FFF6         	movff	??_strcmp2,tblptrl
  2968  000AD0  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2969  000AD4                     	if	0	;tblptru may be non-zero
  2970  000AD4                     	endif
  2971  000AD4                     	if	0	;tblptru may be non-zero
  2972  000AD4                     	endif
  2973  000AD4  0008               	tblrd		*
  2974  000AD6  50F5               	movf	tablat,w,c
  2975  000AD8  0900               	iorlw	0
  2976  000ADA  B4D8               	btfsc	status,2,c
  2977  000ADC  D004               	goto	l1386
  2978  000ADE  5009               	movf	strcmp2@match+1,w,c
  2979  000AE0  1008               	iorwf	strcmp2@match,w,c
  2980  000AE2  B4D8               	btfsc	status,2,c
  2981  000AE4  D7A7               	goto	l1368
  2982  000AE6                     l1386:
  2983                           
  2984                           ;SlaveComm_PIC18.c: 521: }
  2985                           ;SlaveComm_PIC18.c: 524: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  2986  000AE6  500A               	movf	strcmp2@inx,w,c
  2987  000AE8  2401               	addwf	strcmp2@a,w,c
  2988  000AEA  6ED9               	movwf	fsr2l,c
  2989  000AEC  500B               	movf	strcmp2@inx+1,w,c
  2990  000AEE  2002               	addwfc	strcmp2@a+1,w,c
  2991  000AF0  6EDA               	movwf	fsr2h,c
  2992  000AF2  50DF               	movf	indf2,w,c
  2993  000AF4  A4D8               	btfss	status,2,c
  2994  000AF6  D014               	goto	l1392
  2995  000AF8  C003  F005         	movff	strcmp2@b,??_strcmp2
  2996  000AFC  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2997  000B00  500A               	movf	strcmp2@inx,w,c
  2998  000B02  2605               	addwf	??_strcmp2,f,c
  2999  000B04  500B               	movf	strcmp2@inx+1,w,c
  3000  000B06  2206               	addwfc	??_strcmp2+1,f,c
  3001  000B08  C005  FFF6         	movff	??_strcmp2,tblptrl
  3002  000B0C  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3003  000B10                     	if	0	;tblptru may be non-zero
  3004  000B10                     	endif
  3005  000B10                     	if	0	;tblptru may be non-zero
  3006  000B10                     	endif
  3007  000B10  0008               	tblrd		*
  3008  000B12  50F5               	movf	tablat,w,c
  3009  000B14  0900               	iorlw	0
  3010  000B16  B4D8               	btfsc	status,2,c
  3011  000B18  D003               	goto	l1392
  3012                           
  3013                           ;SlaveComm_PIC18.c: 525: {
  3014                           ;SlaveComm_PIC18.c: 526: match = -1;
  3015  000B1A  6808               	setf	strcmp2@match,c
  3016  000B1C  6809               	setf	strcmp2@match+1,c
  3017                           
  3018                           ;SlaveComm_PIC18.c: 527: }
  3019  000B1E  D01E               	goto	l1398
  3020  000B20                     l1392:
  3021                           
  3022                           ;SlaveComm_PIC18.c: 528: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  3023  000B20  500A               	movf	strcmp2@inx,w,c
  3024  000B22  2401               	addwf	strcmp2@a,w,c
  3025  000B24  6ED9               	movwf	fsr2l,c
  3026  000B26  500B               	movf	strcmp2@inx+1,w,c
  3027  000B28  2002               	addwfc	strcmp2@a+1,w,c
  3028  000B2A  6EDA               	movwf	fsr2h,c
  3029  000B2C  50DF               	movf	indf2,w,c
  3030  000B2E  B4D8               	btfsc	status,2,c
  3031  000B30  D015               	goto	l1398
  3032  000B32  C003  F005         	movff	strcmp2@b,??_strcmp2
  3033  000B36  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  3034  000B3A  500A               	movf	strcmp2@inx,w,c
  3035  000B3C  2605               	addwf	??_strcmp2,f,c
  3036  000B3E  500B               	movf	strcmp2@inx+1,w,c
  3037  000B40  2206               	addwfc	??_strcmp2+1,f,c
  3038  000B42  C005  FFF6         	movff	??_strcmp2,tblptrl
  3039  000B46  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3040  000B4A                     	if	0	;tblptru may be non-zero
  3041  000B4A                     	endif
  3042  000B4A                     	if	0	;tblptru may be non-zero
  3043  000B4A                     	endif
  3044  000B4A  0008               	tblrd		*
  3045  000B4C  50F5               	movf	tablat,w,c
  3046  000B4E  0900               	iorlw	0
  3047  000B50  A4D8               	btfss	status,2,c
  3048  000B52  D004               	goto	l1398
  3049                           
  3050                           ;SlaveComm_PIC18.c: 529: {
  3051                           ;SlaveComm_PIC18.c: 530: match = 1;
  3052  000B54  0E00               	movlw	0
  3053  000B56  6E09               	movwf	strcmp2@match+1,c
  3054  000B58  0E01               	movlw	1
  3055  000B5A  6E08               	movwf	strcmp2@match,c
  3056  000B5C                     l1398:
  3057                           
  3058                           ;SlaveComm_PIC18.c: 531: }
  3059                           ;SlaveComm_PIC18.c: 533: return match;
  3060  000B5C  C008  F001         	movff	strcmp2@match,?_strcmp2
  3061  000B60  C009  F002         	movff	strcmp2@match+1,?_strcmp2+1
  3062  000B64  0012               	return	
  3063  000B66                     __end_of_strcmp2:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           prodh	equ	0xFF4
  3070                           prodl	equ	0xFF3
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           indf1	equ	0xFE7
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _send_end_of_transmission *****************
  3082 ;; Defined at:
  3083 ;;		line 579 in file "SlaveComm_PIC18.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  3086 ;;		 -> communications@send_buffer(42), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3098 ;;      Params:         2       0       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		_command_builder1
  3107 ;; This function is called by:
  3108 ;;		_process_data_parameters
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text20
  3113  00130E                     __ptext20:
  3114                           	opt stack 0
  3115  00130E                     _send_end_of_transmission:
  3116                           	opt stack 24
  3117                           
  3118                           ;SlaveComm_PIC18.c: 581: command_builder1( send_buffer, "END" );
  3119                           
  3120                           ;incstack = 0
  3121  00130E  C012  F00E         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3122  001312  C011  F00D         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3123  001316  0E06               	movlw	high STR_1
  3124  001318  6E10               	movwf	command_builder1@data1+1,c
  3125  00131A  0E4C               	movlw	low STR_1
  3126  00131C  6E0F               	movwf	command_builder1@data1,c
  3127  00131E  ECD6  F007         	call	_command_builder1	;wreg free
  3128  001322  0012               	return	
  3129  001324                     __end_of_send_end_of_transmission:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodh	equ	0xFF4
  3136                           prodl	equ	0xFF3
  3137                           postinc0	equ	0xFEE
  3138                           wreg	equ	0xFE8
  3139                           indf1	equ	0xFE7
  3140                           fsr1h	equ	0xFE2
  3141                           fsr1l	equ	0xFE1
  3142                           indf2	equ	0xFDF
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _command_builder1 *****************
  3148 ;; Defined at:
  3149 ;;		line 381 in file "SlaveComm_PIC18.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3152 ;;		 -> communications@send_buffer(42), 
  3153 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3154 ;;		 -> STR_21(4), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;		None               void
  3159 ;; Registers used:
  3160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         4       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         4       0       0       0       0       0       0
  3170 ;;Total ram usage:        4 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		_command_builder_add_char
  3175 ;;		_command_builder_add_string
  3176 ;; This function is called by:
  3177 ;;		_send_end_of_transmission
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text21
  3182  000FAC                     __ptext21:
  3183                           	opt stack 0
  3184  000FAC                     _command_builder1:
  3185                           	opt stack 24
  3186                           
  3187                           ;SlaveComm_PIC18.c: 383: command_builder_add_char( send_buffer, '#' );
  3188                           
  3189                           ;incstack = 0
  3190  000FAC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3191  000FB0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3192  000FB4  0E23               	movlw	35
  3193  000FB6  6E03               	movwf	command_builder_add_char@data,c
  3194  000FB8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3195                           
  3196                           ;SlaveComm_PIC18.c: 384: command_builder_add_char( send_buffer, '#' );
  3197  000FBC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3198  000FC0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3199  000FC4  0E23               	movlw	35
  3200  000FC6  6E03               	movwf	command_builder_add_char@data,c
  3201  000FC8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3202                           
  3203                           ;SlaveComm_PIC18.c: 385: command_builder_add_char( send_buffer, '!' );
  3204  000FCC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3205  000FD0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3206  000FD4  0E21               	movlw	33
  3207  000FD6  6E03               	movwf	command_builder_add_char@data,c
  3208  000FD8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3209                           
  3210                           ;SlaveComm_PIC18.c: 386: command_builder_add_string( send_buffer, data1 );
  3211  000FDC  C00E  F006         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  3212  000FE0  C00D  F005         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  3213  000FE4  C010  F008         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  3214  000FE8  C00F  F007         	movff	command_builder1@data1,command_builder_add_string@data_string
  3215  000FEC  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3216                           
  3217                           ;SlaveComm_PIC18.c: 387: command_builder_add_char( send_buffer, '*' );
  3218  000FF0  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3219  000FF4  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3220  000FF8  0E2A               	movlw	42
  3221  000FFA  6E03               	movwf	command_builder_add_char@data,c
  3222  000FFC  EC01  F008         	call	_command_builder_add_char	;wreg free
  3223  001000  0012               	return	
  3224  001002                     __end_of_command_builder1:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           postinc0	equ	0xFEE
  3233                           wreg	equ	0xFE8
  3234                           indf1	equ	0xFE7
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _command_builder3 *****************
  3243 ;; Defined at:
  3244 ;;		line 405 in file "SlaveComm_PIC18.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3247 ;;		 -> communications@send_buffer(42), 
  3248 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3249 ;;		 -> STR_35(4), STR_30(4), STR_27(4), STR_24(4), 
  3250 ;;		 -> STR_12(4), STR_8(4), 
  3251 ;;  data2           2   16[COMRAM] PTR unsigned char 
  3252 ;;		 -> STR_36(10), STR_31(5), STR_28(6), STR_25(6), 
  3253 ;;		 -> STR_13(5), STR_9(5), 
  3254 ;;  data3           2   18[COMRAM] PTR unsigned char 
  3255 ;;		 -> STR_37(4), STR_32(4), STR_29(4), STR_26(4), 
  3256 ;;		 -> STR_14(3), STR_10(4), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3268 ;;      Params:         8       0       0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0
  3271 ;;      Totals:         8       0       0       0       0       0       0
  3272 ;;Total ram usage:        8 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    2
  3275 ;; This function calls:
  3276 ;;		_command_builder_add_char
  3277 ;;		_command_builder_add_string
  3278 ;; This function is called by:
  3279 ;;		_process_data_parameters
  3280 ;;		_com_command_setPower
  3281 ;;		_com_command_setVolts
  3282 ;;		_com_command_setAmps
  3283 ;;		_com_command_setVersion
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text22
  3288  000DA8                     __ptext22:
  3289                           	opt stack 0
  3290  000DA8                     _command_builder3:
  3291                           	opt stack 25
  3292                           
  3293                           ;SlaveComm_PIC18.c: 407: command_builder_add_char( send_buffer, '#' );
  3294                           
  3295                           ;incstack = 0
  3296  000DA8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3297  000DAC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3298  000DB0  0E23               	movlw	35
  3299  000DB2  6E03               	movwf	command_builder_add_char@data,c
  3300  000DB4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3301                           
  3302                           ;SlaveComm_PIC18.c: 408: command_builder_add_char( send_buffer, '#' );
  3303  000DB8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3304  000DBC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3305  000DC0  0E23               	movlw	35
  3306  000DC2  6E03               	movwf	command_builder_add_char@data,c
  3307  000DC4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3308                           
  3309                           ;SlaveComm_PIC18.c: 409: command_builder_add_char( send_buffer, '!' );
  3310  000DC8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3311  000DCC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3312  000DD0  0E21               	movlw	33
  3313  000DD2  6E03               	movwf	command_builder_add_char@data,c
  3314  000DD4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3315                           
  3316                           ;SlaveComm_PIC18.c: 410: command_builder_add_string( send_buffer, data1 );
  3317  000DD8  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3318  000DDC  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3319  000DE0  C010  F008         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  3320  000DE4  C00F  F007         	movff	command_builder3@data1,command_builder_add_string@data_string
  3321  000DE8  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3322                           
  3323                           ;SlaveComm_PIC18.c: 411: command_builder_add_char( send_buffer, ';' );
  3324  000DEC  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3325  000DF0  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3326  000DF4  0E3B               	movlw	59
  3327  000DF6  6E03               	movwf	command_builder_add_char@data,c
  3328  000DF8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3329                           
  3330                           ;SlaveComm_PIC18.c: 412: command_builder_add_string( send_buffer, data2 );
  3331  000DFC  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3332  000E00  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3333  000E04  C012  F008         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  3334  000E08  C011  F007         	movff	command_builder3@data2,command_builder_add_string@data_string
  3335  000E0C  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3336                           
  3337                           ;SlaveComm_PIC18.c: 413: command_builder_add_char( send_buffer, ';' );
  3338  000E10  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3339  000E14  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3340  000E18  0E3B               	movlw	59
  3341  000E1A  6E03               	movwf	command_builder_add_char@data,c
  3342  000E1C  EC01  F008         	call	_command_builder_add_char	;wreg free
  3343                           
  3344                           ;SlaveComm_PIC18.c: 414: command_builder_add_string( send_buffer, data3 );
  3345  000E20  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3346  000E24  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3347  000E28  C014  F008         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  3348  000E2C  C013  F007         	movff	command_builder3@data3,command_builder_add_string@data_string
  3349  000E30  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3350                           
  3351                           ;SlaveComm_PIC18.c: 415: command_builder_add_char( send_buffer, '*' );
  3352  000E34  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3353  000E38  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3354  000E3C  0E2A               	movlw	42
  3355  000E3E  6E03               	movwf	command_builder_add_char@data,c
  3356  000E40  EC01  F008         	call	_command_builder_add_char	;wreg free
  3357  000E44  0012               	return	
  3358  000E46                     __end_of_command_builder3:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           indf1	equ	0xFE7
  3369                           fsr1h	equ	0xFE2
  3370                           fsr1l	equ	0xFE1
  3371                           indf2	equ	0xFDF
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _command_builder_add_string *****************
  3377 ;; Defined at:
  3378 ;;		line 450 in file "SlaveComm_PIC18.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  send_buffer     2    4[COMRAM] PTR struct buffer
  3381 ;;		 -> communications@send_buffer(42), 
  3382 ;;  data_string     2    6[COMRAM] PTR unsigned char 
  3383 ;;		 -> STR_37(4), STR_36(10), STR_35(4), STR_34(12), 
  3384 ;;		 -> STR_33(5), STR_32(4), STR_31(5), STR_30(4), 
  3385 ;;		 -> STR_29(4), STR_28(6), STR_27(4), STR_26(4), 
  3386 ;;		 -> STR_25(6), STR_24(4), STR_23(5), STR_22(5), 
  3387 ;;		 -> STR_21(4), STR_14(3), STR_13(5), STR_12(4), 
  3388 ;;		 -> STR_10(4), STR_9(5), STR_8(4), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  inx             2   10[COMRAM] int 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3400 ;;      Params:         4       0       0       0       0       0       0
  3401 ;;      Locals:         2       0       0       0       0       0       0
  3402 ;;      Temps:          2       0       0       0       0       0       0
  3403 ;;      Totals:         8       0       0       0       0       0       0
  3404 ;;Total ram usage:        8 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    1
  3407 ;; This function calls:
  3408 ;;		_command_builder_add_char
  3409 ;; This function is called by:
  3410 ;;		_command_builder1
  3411 ;;		_command_builder2
  3412 ;;		_command_builder3
  3413 ;;		_command_builder4
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text23
  3418  000F50                     __ptext23:
  3419                           	opt stack 0
  3420  000F50                     _command_builder_add_string:
  3421                           	opt stack 25
  3422                           
  3423                           ;SlaveComm_PIC18.c: 452: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  3424                           
  3425                           ;incstack = 0
  3426  000F50  0E00               	movlw	0
  3427  000F52  6E0C               	movwf	command_builder_add_string@inx+1,c
  3428  000F54  0E00               	movlw	0
  3429  000F56  6E0B               	movwf	command_builder_add_string@inx,c
  3430  000F58  D017               	goto	l1356
  3431  000F5A                     l1352:
  3432                           
  3433                           ;SlaveComm_PIC18.c: 453: {
  3434                           ;SlaveComm_PIC18.c: 454: command_builder_add_char( send_buffer, data_string[inx] );
  3435  000F5A  C006  F002         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  3436  000F5E  C005  F001         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  3437  000F62  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  3438  000F66  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  3439  000F6A  500B               	movf	command_builder_add_string@inx,w,c
  3440  000F6C  2609               	addwf	??_command_builder_add_string,f,c
  3441  000F6E  500C               	movf	command_builder_add_string@inx+1,w,c
  3442  000F70  220A               	addwfc	??_command_builder_add_string+1,f,c
  3443  000F72  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3444  000F76  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3445  000F7A                     	if	0	;tblptru may be non-zero
  3446  000F7A                     	endif
  3447  000F7A                     	if	0	;tblptru may be non-zero
  3448  000F7A                     	endif
  3449  000F7A  0008               	tblrd		*
  3450  000F7C  CFF5 F003          	movff	tablat,command_builder_add_char@data
  3451  000F80  EC01  F008         	call	_command_builder_add_char	;wreg free
  3452  000F84  4A0B               	infsnz	command_builder_add_string@inx,f,c
  3453  000F86  2A0C               	incf	command_builder_add_string@inx+1,f,c
  3454  000F88                     l1356:
  3455  000F88  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  3456  000F8C  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  3457  000F90  500B               	movf	command_builder_add_string@inx,w,c
  3458  000F92  2609               	addwf	??_command_builder_add_string,f,c
  3459  000F94  500C               	movf	command_builder_add_string@inx+1,w,c
  3460  000F96  220A               	addwfc	??_command_builder_add_string+1,f,c
  3461  000F98  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3462  000F9C  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3463  000FA0                     	if	0	;tblptru may be non-zero
  3464  000FA0                     	endif
  3465  000FA0                     	if	0	;tblptru may be non-zero
  3466  000FA0                     	endif
  3467  000FA0  0008               	tblrd		*
  3468  000FA2  50F5               	movf	tablat,w,c
  3469  000FA4  0900               	iorlw	0
  3470  000FA6  B4D8               	btfsc	status,2,c
  3471                           
  3472                           ;SlaveComm_PIC18.c: 455: }
  3473                           ;SlaveComm_PIC18.c: 457: return;
  3474  000FA8  0012               	return	
  3475  000FAA  D7D7               	goto	l1352
  3476  000FAC                     __end_of_command_builder_add_string:
  3477                           	opt stack 0
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           postinc0	equ	0xFEE
  3485                           wreg	equ	0xFE8
  3486                           indf1	equ	0xFE7
  3487                           fsr1h	equ	0xFE2
  3488                           fsr1l	equ	0xFE1
  3489                           indf2	equ	0xFDF
  3490                           fsr2h	equ	0xFDA
  3491                           fsr2l	equ	0xFD9
  3492                           status	equ	0xFD8
  3493                           
  3494 ;; *************** function _command_builder_add_char *****************
  3495 ;; Defined at:
  3496 ;;		line 437 in file "SlaveComm_PIC18.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  send_buffer     2    0[COMRAM] PTR struct buffer
  3499 ;;		 -> communications@send_buffer(42), 
  3500 ;;  data            1    2[COMRAM] unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;		None               void
  3505 ;; Registers used:
  3506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:         3       0       0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0
  3514 ;;      Temps:          1       0       0       0       0       0       0
  3515 ;;      Totals:         4       0       0       0       0       0       0
  3516 ;;Total ram usage:        4 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_command_builder1
  3522 ;;		_command_builder2
  3523 ;;		_command_builder3
  3524 ;;		_command_builder_add_string
  3525 ;;		_command_builder4
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text24
  3530  001002                     __ptext24:
  3531                           	opt stack 0
  3532  001002                     _command_builder_add_char:
  3533                           	opt stack 25
  3534                           
  3535                           ;SlaveComm_PIC18.c: 439: send_buffer->data_buffer[send_buffer->write_position] = data;
  3536                           
  3537                           ;incstack = 0
  3538  001002  EE20 F028          	lfsr	2,40
  3539  001006  5001               	movf	command_builder_add_char@send_buffer,w,c
  3540  001008  26D9               	addwf	fsr2l,f,c
  3541  00100A  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3542  00100C  22DA               	addwfc	fsr2h,f,c
  3543  00100E  50DF               	movf	indf2,w,c
  3544  001010  6E04               	movwf	??_command_builder_add_char& (0+255),c
  3545  001012  5004               	movf	??_command_builder_add_char,w,c
  3546  001014  0D01               	mullw	1
  3547  001016  50F3               	movf	prodl,w,c
  3548  001018  2401               	addwf	command_builder_add_char@send_buffer,w,c
  3549  00101A  6ED9               	movwf	fsr2l,c
  3550  00101C  50F4               	movf	prodh,w,c
  3551  00101E  2002               	addwfc	command_builder_add_char@send_buffer+1,w,c
  3552  001020  6EDA               	movwf	fsr2h,c
  3553  001022  C003  FFDF         	movff	command_builder_add_char@data,indf2
  3554                           
  3555                           ;SlaveComm_PIC18.c: 441: send_buffer->write_position++;
  3556  001026  EE20 F028          	lfsr	2,40
  3557  00102A  5001               	movf	command_builder_add_char@send_buffer,w,c
  3558  00102C  26D9               	addwf	fsr2l,f,c
  3559  00102E  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3560  001030  22DA               	addwfc	fsr2h,f,c
  3561  001032  2ADF               	incf	indf2,f,c
  3562                           
  3563                           ;SlaveComm_PIC18.c: 442: if( send_buffer->write_position >= 40 )
  3564  001034  EE20 F028          	lfsr	2,40
  3565  001038  5001               	movf	command_builder_add_char@send_buffer,w,c
  3566  00103A  26D9               	addwf	fsr2l,f,c
  3567  00103C  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3568  00103E  22DA               	addwfc	fsr2h,f,c
  3569  001040  0E27               	movlw	39
  3570  001042  64DF               	cpfsgt	indf2,c
  3571  001044  0012               	return	
  3572                           
  3573                           ;SlaveComm_PIC18.c: 443: {
  3574                           ;SlaveComm_PIC18.c: 444: send_buffer->write_position = 0;
  3575  001046  EE20 F028          	lfsr	2,40
  3576  00104A  5001               	movf	command_builder_add_char@send_buffer,w,c
  3577  00104C  26D9               	addwf	fsr2l,f,c
  3578  00104E  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3579  001050  22DA               	addwfc	fsr2h,f,c
  3580  001052  0E00               	movlw	0
  3581  001054  6EDF               	movwf	indf2,c
  3582  001056  0012               	return	
  3583  001058                     __end_of_command_builder_add_char:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           indf1	equ	0xFE7
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _process_data_parameterize *****************
  3602 ;; Defined at:
  3603 ;;		line 247 in file "SlaveComm_PIC18.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  parameters      2    6[COMRAM] PTR unsigned char [10]
  3606 ;;		 -> process_data@parameters(50), 
  3607 ;;  buffer_to_pa    2    8[COMRAM] PTR struct buffer
  3608 ;;		 -> communications@receive_buffer(42), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  inx             2   13[COMRAM] int 
  3611 ;;  parameter_po    1   16[COMRAM] unsigned char 
  3612 ;;  parameter_in    1   15[COMRAM] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3622 ;;      Params:         4       0       0       0       0       0       0
  3623 ;;      Locals:         4       0       0       0       0       0       0
  3624 ;;      Temps:          3       0       0       0       0       0       0
  3625 ;;      Totals:        11       0       0       0       0       0       0
  3626 ;;Total ram usage:       11 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    1
  3629 ;; This function calls:
  3630 ;;		___wmul
  3631 ;; This function is called by:
  3632 ;;		_process_data
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text25
  3637  0008AA                     __ptext25:
  3638                           	opt stack 0
  3639  0008AA                     _process_data_parameterize:
  3640                           	opt stack 27
  3641                           
  3642                           ;SlaveComm_PIC18.c: 249: unsigned char parameter_position = 0;
  3643                           
  3644                           ;incstack = 0
  3645  0008AA  0E00               	movlw	0
  3646  0008AC  6E11               	movwf	process_data_parameterize@parameter_position,c
  3647                           
  3648                           ;SlaveComm_PIC18.c: 250: unsigned char parameter_index = 0;
  3649  0008AE  0E00               	movlw	0
  3650  0008B0  6E10               	movwf	process_data_parameterize@parameter_index,c
  3651                           
  3652                           ;SlaveComm_PIC18.c: 259: for( int inx = 0; inx < 5; inx++ )
  3653  0008B2  0E00               	movlw	0
  3654  0008B4  6E0F               	movwf	process_data_parameterize@inx+1,c
  3655  0008B6  0E00               	movlw	0
  3656  0008B8  6E0E               	movwf	process_data_parameterize@inx,c
  3657  0008BA  500F               	movf	process_data_parameterize@inx+1,w,c
  3658  0008BC  0A80               	xorlw	128
  3659  0008BE  0F80               	addlw	-128
  3660  0008C0  0E05               	movlw	5
  3661  0008C2  B4D8               	btfsc	status,2,c
  3662  0008C4  5C0E               	subwf	process_data_parameterize@inx,w,c
  3663  0008C6  B0D8               	btfsc	status,0,c
  3664  0008C8  D07C               	goto	l1532
  3665                           
  3666                           ;SlaveComm_PIC18.c: 260: {
  3667                           ;SlaveComm_PIC18.c: 261: parameters[inx][0] = '\0';
  3668  0008CA  C00E  F001         	movff	process_data_parameterize@inx,___wmul@multiplier
  3669  0008CE  C00F  F002         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  3670  0008D2  0E00               	movlw	0
  3671  0008D4  6E04               	movwf	___wmul@multiplicand+1,c
  3672  0008D6  0E0A               	movlw	10
  3673  0008D8  6E03               	movwf	___wmul@multiplicand,c
  3674  0008DA  EC27  F009         	call	___wmul	;wreg free
  3675  0008DE  5001               	movf	?___wmul,w,c
  3676  0008E0  2407               	addwf	process_data_parameterize@parameters,w,c
  3677  0008E2  6ED9               	movwf	fsr2l,c
  3678  0008E4  5002               	movf	?___wmul+1,w,c
  3679  0008E6  2008               	addwfc	process_data_parameterize@parameters+1,w,c
  3680  0008E8  6EDA               	movwf	fsr2h,c
  3681  0008EA  0E00               	movlw	0
  3682  0008EC  6EDF               	movwf	indf2,c
  3683  0008EE  4A0E               	infsnz	process_data_parameterize@inx,f,c
  3684  0008F0  2A0F               	incf	process_data_parameterize@inx+1,f,c
  3685  0008F2  D7E3               	goto	L4
  3686  0008F4                     l1508:
  3687                           
  3688                           ;SlaveComm_PIC18.c: 273: parameter_position = 0;
  3689  0008F4  0E00               	movlw	0
  3690  0008F6  6E11               	movwf	process_data_parameterize@parameter_position,c
  3691                           
  3692                           ;SlaveComm_PIC18.c: 274: parameter_index++;
  3693  0008F8  2A10               	incf	process_data_parameterize@parameter_index,f,c
  3694                           
  3695                           ;SlaveComm_PIC18.c: 276: if( parameter_index >= 5 )
  3696  0008FA  0E04               	movlw	4
  3697  0008FC  6410               	cpfsgt	process_data_parameterize@parameter_index,c
  3698  0008FE  D05A               	goto	l1530
  3699                           
  3700                           ;SlaveComm_PIC18.c: 277: {
  3701                           ;SlaveComm_PIC18.c: 280: parameter_index = ( 5 - 1 );
  3702  000900  0E04               	movlw	4
  3703  000902  6E10               	movwf	process_data_parameterize@parameter_index,c
  3704  000904  D057               	goto	l1530
  3705  000906                     l1516:
  3706                           
  3707                           ;SlaveComm_PIC18.c: 286: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  3708  000906  EE20 F029          	lfsr	2,41
  3709  00090A  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3710  00090C  26D9               	addwf	fsr2l,f,c
  3711  00090E  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3712  000910  22DA               	addwfc	fsr2h,f,c
  3713  000912  50DF               	movf	indf2,w,c
  3714  000914  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3715  000916  500B               	movf	??_process_data_parameterize,w,c
  3716  000918  0D01               	mullw	1
  3717  00091A  50F3               	movf	prodl,w,c
  3718  00091C  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3719  00091E  6ED9               	movwf	fsr2l,c
  3720  000920  50F4               	movf	prodh,w,c
  3721  000922  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3722  000924  6EDA               	movwf	fsr2h,c
  3723  000926  5010               	movf	process_data_parameterize@parameter_index,w,c
  3724  000928  0D0A               	mullw	10
  3725  00092A  C007  F00C         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  3726  00092E  C008  F00D         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  3727  000932  50F3               	movf	prodl,w,c
  3728  000934  260C               	addwf	??_process_data_parameterize+1,f,c
  3729  000936  50F4               	movf	prodh,w,c
  3730  000938  220D               	addwfc	??_process_data_parameterize+2,f,c
  3731  00093A  5011               	movf	process_data_parameterize@parameter_position,w,c
  3732  00093C  0D01               	mullw	1
  3733  00093E  50F3               	movf	prodl,w,c
  3734  000940  240C               	addwf	??_process_data_parameterize+1,w,c
  3735  000942  6EE1               	movwf	fsr1l,c
  3736  000944  50F4               	movf	prodh,w,c
  3737  000946  200D               	addwfc	??_process_data_parameterize+2,w,c
  3738  000948  6EE2               	movwf	fsr1h,c
  3739  00094A  CFDF FFE7          	movff	indf2,indf1
  3740                           
  3741                           ;SlaveComm_PIC18.c: 287: parameter_position++;
  3742  00094E  2A11               	incf	process_data_parameterize@parameter_position,f,c
  3743                           
  3744                           ;SlaveComm_PIC18.c: 288: if( parameter_position >= 10 )
  3745  000950  0E09               	movlw	9
  3746  000952  6411               	cpfsgt	process_data_parameterize@parameter_position,c
  3747  000954  D002               	goto	l1524
  3748                           
  3749                           ;SlaveComm_PIC18.c: 289: {
  3750                           ;SlaveComm_PIC18.c: 292: parameter_position = ( 10 - 1 );
  3751  000956  0E09               	movlw	9
  3752  000958  6E11               	movwf	process_data_parameterize@parameter_position,c
  3753  00095A                     l1524:
  3754                           
  3755                           ;SlaveComm_PIC18.c: 293: }
  3756                           ;SlaveComm_PIC18.c: 296: parameters[parameter_index][parameter_position] = '\0';
  3757  00095A  5010               	movf	process_data_parameterize@parameter_index,w,c
  3758  00095C  0D0A               	mullw	10
  3759  00095E  C007  F00B         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  3760  000962  C008  F00C         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  3761  000966  50F3               	movf	prodl,w,c
  3762  000968  260B               	addwf	??_process_data_parameterize,f,c
  3763  00096A  50F4               	movf	prodh,w,c
  3764  00096C  220C               	addwfc	??_process_data_parameterize+1,f,c
  3765  00096E  5011               	movf	process_data_parameterize@parameter_position,w,c
  3766  000970  0D01               	mullw	1
  3767  000972  50F3               	movf	prodl,w,c
  3768  000974  240B               	addwf	??_process_data_parameterize,w,c
  3769  000976  6ED9               	movwf	fsr2l,c
  3770  000978  50F4               	movf	prodh,w,c
  3771  00097A  200C               	addwfc	??_process_data_parameterize+1,w,c
  3772  00097C  6EDA               	movwf	fsr2h,c
  3773  00097E  0E00               	movlw	0
  3774  000980  6EDF               	movwf	indf2,c
  3775                           
  3776                           ;SlaveComm_PIC18.c: 297: break;
  3777  000982  D018               	goto	l1530
  3778  000984                     l1528:
  3779  000984  EE20 F029          	lfsr	2,41
  3780  000988  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3781  00098A  26D9               	addwf	fsr2l,f,c
  3782  00098C  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3783  00098E  22DA               	addwfc	fsr2h,f,c
  3784  000990  50DF               	movf	indf2,w,c
  3785  000992  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3786  000994  500B               	movf	??_process_data_parameterize,w,c
  3787  000996  0D01               	mullw	1
  3788  000998  50F3               	movf	prodl,w,c
  3789  00099A  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3790  00099C  6ED9               	movwf	fsr2l,c
  3791  00099E  50F4               	movf	prodh,w,c
  3792  0009A0  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3793  0009A2  6EDA               	movwf	fsr2h,c
  3794  0009A4  50DF               	movf	indf2,w,c
  3795                           
  3796                           ; Switch size 1, requested type "space"
  3797                           ; Number of cases is 2, Range of values is 33 to 59
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            7     4 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  0009A6  0A21               	xorlw	33	; case 33
  3803  0009A8  B4D8               	btfsc	status,2,c
  3804  0009AA  D004               	goto	l1530
  3805  0009AC  0A1A               	xorlw	26	; case 59
  3806  0009AE  B4D8               	btfsc	status,2,c
  3807  0009B0  D7A1               	goto	l1508
  3808  0009B2  D7A9               	goto	l1516
  3809  0009B4                     l1530:
  3810                           
  3811                           ;SlaveComm_PIC18.c: 300: buffer_to_parameterize->read_position++;
  3812  0009B4  EE20 F029          	lfsr	2,41
  3813  0009B8  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3814  0009BA  26D9               	addwf	fsr2l,f,c
  3815  0009BC  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3816  0009BE  22DA               	addwfc	fsr2h,f,c
  3817  0009C0  2ADF               	incf	indf2,f,c
  3818  0009C2                     l1532:
  3819  0009C2  EE20 F029          	lfsr	2,41
  3820  0009C6  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3821  0009C8  26D9               	addwf	fsr2l,f,c
  3822  0009CA  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3823  0009CC  22DA               	addwfc	fsr2h,f,c
  3824  0009CE  50DF               	movf	indf2,w,c
  3825  0009D0  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3826  0009D2  500B               	movf	??_process_data_parameterize,w,c
  3827  0009D4  0D01               	mullw	1
  3828  0009D6  50F3               	movf	prodl,w,c
  3829  0009D8  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3830  0009DA  6ED9               	movwf	fsr2l,c
  3831  0009DC  50F4               	movf	prodh,w,c
  3832  0009DE  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3833  0009E0  6EDA               	movwf	fsr2h,c
  3834  0009E2  50DF               	movf	indf2,w,c
  3835  0009E4  0A2A               	xorlw	42
  3836  0009E6  B4D8               	btfsc	status,2,c
  3837  0009E8  0012               	return	
  3838  0009EA  EE20 F029          	lfsr	2,41
  3839  0009EE  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3840  0009F0  26D9               	addwf	fsr2l,f,c
  3841  0009F2  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3842  0009F4  22DA               	addwfc	fsr2h,f,c
  3843  0009F6  50DF               	movf	indf2,w,c
  3844  0009F8  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3845  0009FA  0E28               	movlw	40
  3846  0009FC  5C0B               	subwf	??_process_data_parameterize,w,c
  3847  0009FE  B0D8               	btfsc	status,0,c
  3848  000A00  0012               	return	
  3849  000A02  EE20 F029          	lfsr	2,41
  3850  000A06  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3851  000A08  26D9               	addwf	fsr2l,f,c
  3852  000A0A  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3853  000A0C  22DA               	addwfc	fsr2h,f,c
  3854  000A0E  EE10 F028          	lfsr	1,40
  3855  000A12  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3856  000A14  26E1               	addwf	fsr1l,f,c
  3857  000A16  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3858  000A18  22E2               	addwfc	fsr1h,f,c
  3859  000A1A  50E7               	movf	indf1,w,c
  3860  000A1C  62DF               	cpfseq	indf2,c
  3861  000A1E  D7B2               	goto	l1528
  3862  000A20  0012               	return	
  3863  000A22                     __end_of_process_data_parameterize:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           postinc0	equ	0xFEE
  3872                           wreg	equ	0xFE8
  3873                           indf1	equ	0xFE7
  3874                           fsr1h	equ	0xFE2
  3875                           fsr1l	equ	0xFE1
  3876                           indf2	equ	0xFDF
  3877                           fsr2h	equ	0xFDA
  3878                           fsr2l	equ	0xFD9
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function ___wmul *****************
  3882 ;; Defined at:
  3883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  multiplier      2    0[COMRAM] unsigned int 
  3886 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  product         2    4[COMRAM] unsigned int 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2    0[COMRAM] unsigned int 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0, prodl, prodh
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3898 ;;      Params:         4       0       0       0       0       0       0
  3899 ;;      Locals:         2       0       0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0
  3901 ;;      Totals:         6       0       0       0       0       0       0
  3902 ;;Total ram usage:        6 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_process_data_parameterize
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text26
  3912  00124E                     __ptext26:
  3913                           	opt stack 0
  3914  00124E                     ___wmul:
  3915                           	opt stack 27
  3916                           
  3917                           ;incstack = 0
  3918  00124E  5001               	movf	___wmul@multiplier,w,c
  3919  001250  0203               	mulwf	___wmul@multiplicand,c
  3920  001252  CFF3 F005          	movff	prodl,___wmul@product
  3921  001256  CFF4 F006          	movff	prodh,___wmul@product+1
  3922  00125A  5001               	movf	___wmul@multiplier,w,c
  3923  00125C  0204               	mulwf	___wmul@multiplicand+1,c
  3924  00125E  50F3               	movf	prodl,w,c
  3925  001260  2606               	addwf	___wmul@product+1,f,c
  3926  001262  5002               	movf	___wmul@multiplier+1,w,c
  3927  001264  0203               	mulwf	___wmul@multiplicand,c
  3928  001266  50F3               	movf	prodl,w,c
  3929  001268  2606               	addwf	___wmul@product+1,f,c
  3930  00126A  C005  F001         	movff	___wmul@product,?___wmul
  3931  00126E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3932  001272  0012               	return	
  3933  001274                     __end_of___wmul:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           indf1	equ	0xFE7
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           indf2	equ	0xFDF
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951 ;; *************** function _SPISlaveInit *****************
  3952 ;; Defined at:
  3953 ;;		line 627 in file "SlaveComm_PIC18.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;		None
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;		None               void
  3960 ;; Registers used:
  3961 ;;		wreg, status,2
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3967 ;;      Params:         0       0       0       0       0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0
  3970 ;;      Totals:         0       0       0       0       0       0       0
  3971 ;;Total ram usage:        0 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text27
  3981  001058                     __ptext27:
  3982                           	opt stack 0
  3983  001058                     _SPISlaveInit:
  3984                           	opt stack 30
  3985                           
  3986                           ;SlaveComm_PIC18.c: 630: TRISAbits.TRISA0 = 0;
  3987                           
  3988                           ;incstack = 0
  3989  001058  9092               	bcf	3986,0,c	;volatile
  3990                           
  3991                           ;SlaveComm_PIC18.c: 631: TRISAbits.TRISA1 = 1;
  3992  00105A  8292               	bsf	3986,1,c	;volatile
  3993                           
  3994                           ;SlaveComm_PIC18.c: 632: TRISBbits.RB4 = 0;
  3995  00105C  9893               	bcf	3987,4,c	;volatile
  3996                           
  3997                           ;SlaveComm_PIC18.c: 633: TRISCbits.TRISC3 = 0;
  3998  00105E  9694               	bcf	3988,3,c	;volatile
  3999                           
  4000                           ;SlaveComm_PIC18.c: 634: TRISCbits.TRISC5 = 0;
  4001  001060  9A94               	bcf	3988,5,c	;volatile
  4002                           
  4003                           ;SlaveComm_PIC18.c: 635: TRISCbits.TRISC6 = 0;
  4004  001062  9C94               	bcf	3988,6,c	;volatile
  4005                           
  4006                           ;SlaveComm_PIC18.c: 636: TRISCbits.TRISC7 = 0;
  4007  001064  9E94               	bcf	3988,7,c	;volatile
  4008                           
  4009                           ;SlaveComm_PIC18.c: 637: ANSELAbits.ANSA1 = 0b0;
  4010  001066  010F               	movlb	15	; () banked
  4011  001068  9338               	bcf	56,1,b	;volatile
  4012                           
  4013                           ;SlaveComm_PIC18.c: 639: LATCbits.LATC6 = 1;
  4014  00106A  8C8B               	bsf	3979,6,c	;volatile
  4015                           
  4016                           ;SlaveComm_PIC18.c: 640: LATCbits.LATC3 = 1;
  4017  00106C  868B               	bsf	3979,3,c	;volatile
  4018                           
  4019                           ;SlaveComm_PIC18.c: 641: LATCbits.LATC5 = 1;
  4020  00106E  8A8B               	bsf	3979,5,c	;volatile
  4021                           
  4022                           ;SlaveComm_PIC18.c: 642: LATCbits.LATC7 = 1;
  4023  001070  8E8B               	bsf	3979,7,c	;volatile
  4024                           
  4025                           ;SlaveComm_PIC18.c: 645: SSP2CON1bits.SSPEN = 0;
  4026  001072  9A6C               	bcf	3948,5,c	;volatile
  4027                           
  4028                           ;SlaveComm_PIC18.c: 647: ANSELBbits.ANSB0 = 0b0;
  4029  001074  010F               	movlb	15	; () banked
  4030  001076  9139               	bcf	57,0,b	;volatile
  4031                           
  4032                           ;SlaveComm_PIC18.c: 648: ANSELBbits.ANSB1 = 0b0;
  4033  001078  010F               	movlb	15	; () banked
  4034  00107A  9339               	bcf	57,1,b	;volatile
  4035                           
  4036                           ;SlaveComm_PIC18.c: 649: ANSELBbits.ANSB2 = 0b0;
  4037  00107C  010F               	movlb	15	; () banked
  4038  00107E  9539               	bcf	57,2,b	;volatile
  4039                           
  4040                           ;SlaveComm_PIC18.c: 650: ANSELBbits.ANSB3 = 0b0;
  4041  001080  010F               	movlb	15	; () banked
  4042  001082  9739               	bcf	57,3,b	;volatile
  4043                           
  4044                           ;SlaveComm_PIC18.c: 652: TRISBbits.RB0 = 0b1;
  4045  001084  8093               	bsf	3987,0,c	;volatile
  4046                           
  4047                           ;SlaveComm_PIC18.c: 653: TRISBbits.RB1 = 0b1;
  4048  001086  8293               	bsf	3987,1,c	;volatile
  4049                           
  4050                           ;SlaveComm_PIC18.c: 654: TRISBbits.RB2 = 0b1;
  4051  001088  8493               	bsf	3987,2,c	;volatile
  4052                           
  4053                           ;SlaveComm_PIC18.c: 655: TRISBbits.RB3 = 0b0;
  4054  00108A  9693               	bcf	3987,3,c	;volatile
  4055                           
  4056                           ;SlaveComm_PIC18.c: 657: SSP2STATbits.SMP = 0;
  4057  00108C  9E6D               	bcf	3949,7,c	;volatile
  4058                           
  4059                           ;SlaveComm_PIC18.c: 658: SSP2STATbits.CKE = 1;
  4060  00108E  8C6D               	bsf	3949,6,c	;volatile
  4061                           
  4062                           ;SlaveComm_PIC18.c: 660: SSP2CON1bits.WCOL = 0;
  4063  001090  9E6C               	bcf	3948,7,c	;volatile
  4064                           
  4065                           ;SlaveComm_PIC18.c: 661: SSP2CON1bits.SSPOV = 0;
  4066  001092  9C6C               	bcf	3948,6,c	;volatile
  4067                           
  4068                           ;SlaveComm_PIC18.c: 662: SSP2CON1bits.SSPEN = 0;
  4069  001094  9A6C               	bcf	3948,5,c	;volatile
  4070                           
  4071                           ;SlaveComm_PIC18.c: 663: SSP2CON1bits.CKP = 1;
  4072  001096  886C               	bsf	3948,4,c	;volatile
  4073                           
  4074                           ; BSR set to: 15
  4075                           ;SlaveComm_PIC18.c: 664: SSP2CON1bits.SSPM = 0b0100;
  4076  001098  506C               	movf	3948,w,c	;volatile
  4077  00109A  0BF0               	andlw	-16
  4078  00109C  0904               	iorlw	4
  4079  00109E  6E6C               	movwf	3948,c	;volatile
  4080                           
  4081                           ;SlaveComm_PIC18.c: 667: SSP2CON3 = 0x00;
  4082  0010A0  0E00               	movlw	0
  4083  0010A2  6E69               	movwf	3945,c	;volatile
  4084                           
  4085                           ; BSR set to: 15
  4086                           ;SlaveComm_PIC18.c: 668: SSP2CON3bits.BOEN = 0b0;
  4087  0010A4  9869               	bcf	3945,4,c	;volatile
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;SlaveComm_PIC18.c: 670: SSP2CON1bits.SSPEN = 1;
  4091  0010A6  8A6C               	bsf	3948,5,c	;volatile
  4092  0010A8  0012               	return	
  4093  0010AA                     __end_of_SPISlaveInit:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           postinc0	equ	0xFEE
  4102                           wreg	equ	0xFE8
  4103                           indf1	equ	0xFE7
  4104                           fsr1h	equ	0xFE2
  4105                           fsr1l	equ	0xFE1
  4106                           indf2	equ	0xFDF
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           indf1	equ	0xFE7
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           fsr2h	equ	0xFDA
  4123                           fsr2l	equ	0xFD9
  4124                           status	equ	0xFD8
  4125                           
  4126                           	psect	rparam
  4127  0000                     tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           indf1	equ	0xFE7
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      93
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_readCalibration@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setAmps@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setVolts@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_testLED@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[4]), STR_36(CODE[10]), STR_35(CODE[4]), STR_34(CODE[12]), 
		 -> STR_33(CODE[5]), STR_32(CODE[4]), STR_31(CODE[5]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_28(CODE[6]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[6]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[5]), 
		 -> STR_21(CODE[4]), STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 4
		 -> STR_37(CODE[4]), STR_32(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), 
		 -> STR_14(CODE[3]), STR_10(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_36(CODE[10]), STR_31(CODE[5]), STR_28(CODE[6]), STR_25(CODE[6]), 
		 -> STR_13(CODE[5]), STR_9(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_35(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), 
		 -> STR_12(CODE[4]), STR_8(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder2@data2	PTR unsigned char  size(2) Largest target is 12
		 -> STR_34(CODE[12]), STR_23(CODE[5]), 

    command_builder2@data1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_33(CODE[5]), STR_22(CODE[5]), 

    command_builder2@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_21(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _init->_delayMS
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setAmps
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _resetCommunications->_com_command_setVolts
    _com_command_testLED->_command_builder2
    _com_command_setVolts->_command_builder3
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _com_command_setAmps->_command_builder3
    _com_command_readCalibration->_command_builder2
    _command_builder2->_command_builder_add_string
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   65656
                                             84 COMRAM     2     2      0
                       _SPISlaveInit
                     _communications
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     297
                                              6 COMRAM     2     2      0
                            _delayMS
 ---------------------------------------------------------------------------------
 (1) _communications                                       3     3      0   65358
                                             81 COMRAM     3     3      0
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     278
                                              2 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46031
                                             22 COMRAM     4     2      2
        _com_command_readCalibration
                _com_command_setAmps
               _com_command_setPower
             _com_command_setVersion
               _com_command_setVolts
                _com_command_testLED
                            _delayMS
 ---------------------------------------------------------------------------------
 (2) _delayMS                                              6     4      2     251
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _com_command_testLED                                  2     0      2    6903
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (3) _com_command_setVolts                                 2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                 2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setAmps                                  2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_readCalibration                          2     0      2    6903
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (4) _command_builder2                                     6     0      6    6828
                                             12 COMRAM     6     0      6
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     397
                                              3 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     100
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   18629
                                             26 COMRAM    55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              6     2      4   17536
                                             20 COMRAM     6     2      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2259
                                             11 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     685
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    6837
                                             16 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    6550
                                             12 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    7848
                                             12 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    3742
                                              4 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    2570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     864
                                              6 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPISlaveInit
   _communications
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_readCalibration
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setAmps
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setVolts
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_testLED
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _delayMS
     _send_data
       _SPI_send_data
   _init
     _delayMS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      54       4       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       9        0.0%
DATA                 0      0      B1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Apr 02 02:39:50 2017

                                       _SPISlaveInit 1058                                  ___wmul@multiplicand 0003  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l130 0D8E                                                  l153 0CF6  
                                                l182 0684                                                  l258 11B2  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                u670 1158                                                  u676 115A  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0019                                                 l1352 0F5A  
                                               l1530 09B4                                                 l1524 095A  
                                               l1516 0906                                                 l1508 08F4  
                                               l1532 09C2                                                 l1356 0F88  
                                               l1372 0A70                                                 l1380 0AAA  
                                               l1444 1104                                                 l1604 12CA  
                                               l1454 111E                                                 l1630 0BBE  
                                               l1528 0984                                                 l1392 0B20  
                                               l1368 0A34                                                 l1552 06C2  
                                               l1456 1122                                                 l1632 0BCC  
                                               l1704 0ED2                                                 l1386 0AE6  
                                               l1378 0AA6                                                 l1546 0686  
                                               l1634 0BDA                                                 l1626 0BA2  
                                               l1642 0C00                                                 l1730 0D20  
                                               l1564 0760                                                 l1548 068C  
                                               l1492 11AE                                                 l1652 0C44  
                                               l1636 0BE8                                                 l1628 0BB0  
                                               l1732 0D34                                                 l1740 0D72  
                                               l1398 0B5C                                                 l1582 084C  
                                               l1574 07F0                                                 l1590 08A6  
                                               l1638 0BF6                                                 l1568 07A6  
                                               l1664 0C8A                                                 l1760 12AC  
                                               l1586 087A                                                 l1578 081E  
                                               l1674 0CE4                                                 l1738 0D5E  
                                               l1748 0DA2                                                 l1696 0E70  
                                               STR_1 064C                                                 STR_2 0654  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 062D                                                 STR_5 0628  
                                               STR_6 0623                                                 STR_7 0658  
                                               STR_8 0654                                                 STR_9 0623  
                                               _main 1296                                                 _init 10AA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               indf1 000FE7                                                 fsr1l 000FE1  
                                               indf2 000FDF                                                 fsr2l 000FD9  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 001E  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 0000                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 0054                        __size_of_com_command_setPower 0026  
                      __size_of_com_command_setVolts 0026                                       _communications 0CFA  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 0650                                                STR_11 0650  
                                              STR_12 0654                                                STR_20 060D  
                                              STR_13 0623                                                STR_21 064C  
                                              STR_22 062D                                                STR_14 0658  
                                              STR_30 0654                                                STR_23 0623  
                                              STR_31 0637                                                STR_15 0632  
                                              STR_16 0623                                                STR_24 0654  
                                              STR_32 0644                                                STR_33 062D  
                                              STR_25 061D                                                STR_17 061D  
                                              STR_34 0601                                                STR_26 063C  
                                              STR_18 0617                                                STR_35 0654  
                                              STR_27 0654                                                STR_19 0637  
                                              STR_36 060D                                                STR_28 0617  
                                              STR_37 0648                                                STR_29 0640  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 000D  
                                  ?_command_builder2 000D                                    ?_command_builder3 000D  
                                    __end_of_delayMS 1130                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0009  
                                 ??_command_builder1 0011                                   ??_command_builder2 0013  
                                 ??_command_builder3 0015                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0017                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                   __CFG_MCLRE$EXTMCLR 000000  
                                              init@i 0007                                                tablat 000FF5  
                                              status 000FD8                                      __end_of_strcmp2 0B66  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 000B                        command_builder_add_string@inx 000B  
                                    __initialization 1274                                         __end_of_main 12B4  
                                       __end_of_init 10FA                               __end_of_communications 0DA8  
                             _com_command_setVersion 11DC                  __size_of_command_builder_add_string 005C  
                                   _SPI_receive_data 118E                         command_builder_add_char@data 0003  
                                             ??_main 0055                                               ??_init 0007  
                                      _SPI_send_data 12B4                                        __activetblptr 000002  
                            _process_data_parameters 065C                                     receive_data@data 0007  
                        __end_of_com_command_setAmps 124E                                       __CFG_WDTEN$OFF 000000  
                        __end_of_com_command_testLED 12F0                                SPI_send_data@sendGood 0002  
                                     __CFG_XINST$OFF 000000                                               ___wmul 124E  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                             clear_0 127A                                               clear_1 1286  
                                          ??_delayMS 0003                                       ?_SPI_send_data 0001  
                          _process_data_parameterize 08AA                  __end_of_com_command_readCalibration 130E  
                        _com_command_readCalibration 12F0                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                            ??_strcmp2 0005  
                                   __end_of_strmatch 1160                                        ?_receive_data 0004  
                                         __accesstop 0060                              __end_of__initialization 128C  
                    com_command_setPower@send_buffer 0015                                    SPI_send_data@data 0001  
                                     __pcstackCOMRAM 0001                           receive_data@receive_buffer 0004  
                          ??_process_data_parameters 0019                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0007                   __end_of_command_builder_add_string 0FAC  
                         _command_builder_add_string 0F50                                           __pbssBANK0 0060  
                                     ??_receive_data 0006                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0008                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___wmul 0001                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0001                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 001A           communications@end_of_transmission_received 005A  
                        __end_of_resetCommunications 0C38                         __end_of_com_command_setPower 1228  
                       __end_of_com_command_setVolts 11DC                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 130E                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 1002                      __end_of_process_data_parameters 08AA  
                           __end_of_SPI_receive_data 11B6                            __size_of_command_builder1 0056  
                          __size_of_command_builder2 007A                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 0009                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0015  
                                            __Lparam 0000             process_data_parameterize@parameter_index 0010  
                                    __size_of___wmul 0026                                         __psmallconst 0600  
                               SPI_receive_data@data 0001                                              __pcinit 1274  
                                            _delayMS 10FA                                              __ramtop 0600  
                                          ?_strmatch 000C                                              __ptext0 1296  
                                            __ptext1 10AA                                              __ptext2 0CFA  
                                            __ptext3 0E46                                              __ptext4 12B4  
                                            __ptext5 0B66                                              __ptext6 10FA  
                                            __ptext7 12D2                                              __ptext8 11B6  
                                            __ptext9 11DC                                              _strcmp2 0A22  
                               end_of_initialization 128C                   __size_of_process_data_parameterize 0178  
                                  __end_of_send_data 0ED6                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1202                                     ??_communications 0052  
        process_data_parameterize@parameter_position 0011                                              postinc0 000FEE  
                              receive_data@my_status 005D                                 __end_of_receive_data 0CFA  
                                         ??_strmatch 0010                                            _PORTBbits 000F81  
                    communications@last_state_active 005B                                        ?_process_data 001B  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 001B  
                  __end_of_process_data_parameterize 0A22                         __size_of_com_command_setAmps 0026  
                       __size_of_com_command_testLED 001E                                 _com_command_setPower 1202  
                               _com_command_setVolts 11B6                  communications@receive_current_state 005C  
                                      ?_SPISlaveInit 0001                                       __end_of___wmul 1274  
              command_builder_add_string@send_buffer 0005                                       ??_process_data 001F  
                        ?_command_builder_add_string 0005                                  start_initialization 1274  
                       resetCommunications@commState 0057                                     _command_builder1 0FAC  
                                   _command_builder2 0ED6                                     _command_builder3 0DA8  
                  com_command_setVersion@send_buffer 0015                                 send_data@send_buffer 0003  
                              ?_com_command_setPower 0015                                ?_com_command_setVolts 0015  
                                     ??_SPISlaveInit 0001                                             ??___wmul 0005  
                send_end_of_transmission@send_buffer 0011                           ??_send_end_of_transmission 0013  
                         ??_command_builder_add_char 0004                                          __pbssCOMRAM 0057  
                           SPI_receive_data@recvGood 0003                                  __end_of__stringdata 065B  
                                  ?_SPI_receive_data 0001                                   ??_SPI_receive_data 0003  
                     com_command_testLED@send_buffer 0013                                command_builder1@data1 000F  
                        command_builder1@send_buffer 000D                             ?_process_data_parameters 0015  
                              command_builder2@data1 000F                                command_builder2@data2 0011  
                              __size_of_receive_data 00C2                                command_builder3@data1 000F  
                              command_builder3@data2 0011                                command_builder3@data3 0013  
                                           ?_delayMS 0001                                __end_of_SPI_send_data 12D2  
                                        __smallconst 0600                       resetCommunications@send_buffer 0017  
                                  __size_of_strmatch 0030                                    send_data@send_end 0007  
                                           ?_strcmp2 0001                         __size_of_resetCommunications 00D2  
                                     strmatch@result 0010                  process_data_parameterize@parameters 0007  
                                       _receive_data 0C38                                       ___wmul@product 0005  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                               __end_of_process_data 118E                                            _send_data 0E46  
                             ??_com_command_setPower 0017                    process_data_parameters@parameters 0015  
                             ??_com_command_setVolts 0017                       com_command_setAmps@send_buffer 0015  
                                   __CFG_WDTPS$32768 000000                          command_builder2@send_buffer 000D  
                                           _SSP2CON3 000F69               com_command_readCalibration@send_buffer 0013  
                                        __stringdata 0601                                    ___wmul@multiplier 0001  
                command_builder_add_char@send_buffer 0001                         ?_com_command_readCalibration 0013  
                                _com_command_setAmps 1228                                  _com_command_testLED 12D2  
                               __end_of_SPISlaveInit 10AA             process_data@end_of_transmission_received 0051  
                                         ?_send_data 0003                                             __Hrparam 0000  
                               ?_com_command_setAmps 0015                                 ?_com_command_testLED 0013  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 000D                                    __CFG_P2BMX$PORTB5 000000  
                   __end_of_send_end_of_transmission 1324                     __end_of_command_builder_add_char 1058  
                                   __size_of_delayMS 0036                             __end_of_command_builder1 1002  
                           __end_of_command_builder2 0F50                             __end_of_command_builder3 0E46  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                         strcmp2@inx 000A                         process_data_parameterize@inx 000E  
                      ??_com_command_readCalibration 0015                                             __ptext10 1202  
                                           __ptext11 1228                                             __ptext20 130E  
                                           __ptext12 12F0                                             __ptext21 0FAC  
                                           __ptext13 0ED6                                             __ptext22 0DA8  
                                           __ptext14 0C38                                             __ptext23 0F50  
                                           __ptext15 118E                                             __ptext24 1002  
                                           __ptext16 1160                                             __ptext25 08AA  
                                           __ptext17 065C                                             __ptext26 124E  
                                           __ptext18 1130                                             __ptext27 1058  
                                           __ptext19 0A22                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 0144  
                                      __size_of_main 001E                                        strmatch@match 0012  
                                      __size_of_init 0050                                             delayMS@a 0001  
                                           delayMS@i 0003                                             delayMS@j 0005  
                         ?_process_data_parameterize 0007                                ??_com_command_setAmps 0017  
                              ??_com_command_testLED 0015                      com_command_setVolts@send_buffer 0015  
                            __size_of_communications 00AE                                             _strmatch 1130  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 001D  
                           ??_com_command_setVersion 0017                                __size_of_process_data 002E  
                             process_data@parameters 001F                        communications@no_more_to_send 0053  
                                    main@togglePulse 0055                                          ??_send_data 0005  
                                          strmatch@a 000C                                            strmatch@b 000E  
               __size_of_com_command_readCalibration 001E                                  _resetCommunications 0B66  
                          __size_of_SPI_receive_data 0028                                             strcmp2@a 0001  
                                           strcmp2@b 0003                                         _process_data 1160  
                                  _SPI_transmit_wait 0059                                __size_of_SPISlaveInit 0052  
                          communications@send_buffer 008A                     __size_of_process_data_parameters 024E  
                                  __CFG_T3CMX$PORTC0 000000                                 ?_resetCommunications 0017  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0011  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0001  
