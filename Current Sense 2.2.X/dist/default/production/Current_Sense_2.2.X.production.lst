

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 14 11:27:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.45
    62                           ; Generated 16/11/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18LF25K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001B84                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for powerPulseCheck@timerCountHFCheck
   101  001B84  0001               	dw	1
   102                           
   103                           ;initializer for powerPulseCheck@firstPulse
   104  001B86  01                 	db	1
   105                           
   106                           ;initializer for powerPulseCheck@timerCountHFLast
   107  001B87  FFFF               	dw	65535
   108  001B89  7FFF               	dw	32767
   109  0000                     _ANSELBbits	set	3897
   110  0000                     _ANSELAbits	set	3896
   111  0000                     _ANSELC	set	3898
   112  0000                     _ANSELB	set	3897
   113  0000                     _ANSELA	set	3896
   114  0000                     _SSP2CON3bits	set	3945
   115  0000                     _SSP2CON3	set	3945
   116  0000                     _SSP2BUF	set	3951
   117  0000                     _SSP2STATbits	set	3949
   118  0000                     _SSP2CON1bits	set	3948
   119  0000                     _LATCbits	set	3979
   120  0000                     _T0CONbits	set	4053
   121  0000                     _IPR5	set	3967
   122  0000                     _IPR4	set	3964
   123  0000                     _IPR3	set	4005
   124  0000                     _IPR2	set	4002
   125  0000                     _IPR1	set	3999
   126  0000                     _PIE5	set	3965
   127  0000                     _PIE4	set	3962
   128  0000                     _PIE3	set	4003
   129  0000                     _PIE2	set	4000
   130  0000                     _PIE1	set	3997
   131  0000                     _PIR5	set	3966
   132  0000                     _PIR4	set	3963
   133  0000                     _PIR3	set	4004
   134  0000                     _PIR2	set	4001
   135  0000                     _PIR1	set	3998
   136  0000                     _RCONbits	set	4048
   137  0000                     _INTCON3	set	4080
   138  0000                     _INTCON2	set	4081
   139  0000                     _INTCON	set	4082
   140  0000                     _TRISAbits	set	3986
   141  0000                     _TRISCbits	set	3988
   142  0000                     _TRISBbits	set	3987
   143  0000                     _ADCON0bits	set	4034
   144  0000                     _OSCTUNEbits	set	3995
   145  0000                     _OSCCON2bits	set	4050
   146  0000                     _OSCCONbits	set	4051
   147  0000                     _PORTAbits	set	3968
   148  0000                     _TMR0L	set	4054
   149  0000                     _TMR0H	set	4055
   150  0000                     _INTCONbits	set	4082
   151  0000                     _PORTBbits	set	3969
   152  0000                     _LATAbits	set	3977
   153  0000                     _PORTCbits	set	3970
   154  0000                     _LATBbits	set	3978
   155                           
   156                           	psect	smallconst
   157  000600                     __psmallconst:
   158                           	opt stack 0
   159  000600  00                 	db	0
   160  000601                     STR_3:
   161                           
   162                           ; BSR set to: 0
   163  000601  43                 	db	67	;'C'
   164  000602  61                 	db	97	;'a'
   165  000603  6C                 	db	108	;'l'
   166  000604  69                 	db	105	;'i'
   167  000605  62                 	db	98	;'b'
   168  000606  72                 	db	114	;'r'
   169  000607  61                 	db	97	;'a'
   170  000608  74                 	db	116	;'t'
   171  000609  69                 	db	105	;'i'
   172  00060A  6F                 	db	111	;'o'
   173  00060B  6E                 	db	110	;'n'
   174  00060C  00                 	db	0
   175  00060D                     STR_22:
   176                           
   177                           ; BSR set to: 0
   178  00060D  50                 	db	80	;'P'
   179  00060E  53                 	db	83	;'S'
   180  00060F  56                 	db	86	;'V'
   181  000610  65                 	db	101	;'e'
   182  000611  72                 	db	114	;'r'
   183  000612  73                 	db	115	;'s'
   184  000613  69                 	db	105	;'i'
   185  000614  6F                 	db	111	;'o'
   186  000615  6E                 	db	110	;'n'
   187  000616  00                 	db	0
   188  000617                     STR_4:
   189                           
   190                           ; BSR set to: 0
   191  000617  45                 	db	69	;'E'
   192  000618  6E                 	db	110	;'n'
   193  000619  55                 	db	85	;'U'
   194  00061A  73                 	db	115	;'s'
   195  00061B  65                 	db	101	;'e'
   196  00061C  64                 	db	100	;'d'
   197  00061D  00                 	db	0
   198  00061E                     STR_20:
   199                           
   200                           ; BSR set to: 0
   201  00061E  56                 	db	86	;'V'
   202  00061F  6F                 	db	111	;'o'
   203  000620  6C                 	db	108	;'l'
   204  000621  74                 	db	116	;'t'
   205  000622  73                 	db	115	;'s'
   206  000623  00                 	db	0
   207  000624                     STR_18:
   208                           
   209                           ; BSR set to: 0
   210  000624  57                 	db	87	;'W'
   211  000625  61                 	db	97	;'a'
   212  000626  74                 	db	116	;'t'
   213  000627  74                 	db	116	;'t'
   214  000628  73                 	db	115	;'s'
   215  000629  00                 	db	0
   216  00062A                     STR_7:
   217                           
   218                           ; BSR set to: 0
   219  00062A  4C                 	db	76	;'L'
   220  00062B  45                 	db	69	;'E'
   221  00062C  44                 	db	68	;'D'
   222  00062D  42                 	db	66	;'B'
   223  00062E  00                 	db	0
   224  00062F                     STR_6:
   225                           
   226                           ; BSR set to: 0
   227  00062F  44                 	db	68	;'D'
   228  000630  61                 	db	97	;'a'
   229  000631  74                 	db	116	;'t'
   230  000632  61                 	db	97	;'a'
   231  000633  00                 	db	0
   232  000634                     STR_5:
   233                           
   234                           ; BSR set to: 0
   235  000634  52                 	db	82	;'R'
   236  000635  65                 	db	101	;'e'
   237  000636  61                 	db	97	;'a'
   238  000637  64                 	db	100	;'d'
   239  000638  00                 	db	0
   240  000639                     STR_16:
   241                           
   242                           ; BSR set to: 0
   243  000639  43                 	db	67	;'C'
   244  00063A  6F                 	db	111	;'o'
   245  00063B  6E                 	db	110	;'n'
   246  00063C  66                 	db	102	;'f'
   247  00063D  00                 	db	0
   248  00063E                     STR_21:
   249                           
   250                           ; BSR set to: 0
   251  00063E  41                 	db	65	;'A'
   252  00063F  6D                 	db	109	;'m'
   253  000640  70                 	db	112	;'p'
   254  000641  73                 	db	115	;'s'
   255  000642  00                 	db	0
   256  000643                     
   257                           ; BSR set to: 0
   258  000643  32                 	db	50	;'2'
   259  000644  32                 	db	50	;'2'
   260  000645  32                 	db	50	;'2'
   261  000646  00                 	db	0
   262  000647                     
   263                           ; BSR set to: 0
   264  000647  33                 	db	51	;'3'
   265  000648  33                 	db	51	;'3'
   266  000649  33                 	db	51	;'3'
   267  00064A  00                 	db	0
   268  00064B                     STR_40:
   269                           
   270                           ; BSR set to: 0
   271  00064B  34                 	db	52	;'4'
   272  00064C  34                 	db	52	;'4'
   273  00064D  34                 	db	52	;'4'
   274  00064E  00                 	db	0
   275  00064F                     STR_1:
   276                           
   277                           ; BSR set to: 0
   278  00064F  45                 	db	69	;'E'
   279  000650  4E                 	db	78	;'N'
   280  000651  44                 	db	68	;'D'
   281  000652  00                 	db	0
   282  000653                     STR_11:
   283                           
   284                           ; BSR set to: 0
   285  000653  4F                 	db	79	;'O'
   286  000654  66                 	db	102	;'f'
   287  000655  66                 	db	102	;'f'
   288  000656  00                 	db	0
   289  000657                     STR_2:
   290                           
   291                           ; BSR set to: 0
   292  000657  53                 	db	83	;'S'
   293  000658  65                 	db	101	;'e'
   294  000659  74                 	db	116	;'t'
   295  00065A  00                 	db	0
   296  00065B                     STR_8:
   297                           
   298                           ; BSR set to: 0
   299  00065B  4F                 	db	79	;'O'
   300  00065C  6E                 	db	110	;'n'
   301  00065D  00                 	db	0
   302  0000                     
   303                           ; #config settings
   304  00065E  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           	psect	cinit
   307  001754                     __pcinit:
   308                           	opt stack 0
   309  001754                     start_initialization:
   310                           	opt stack 0
   311  001754                     __initialization:
   312                           	opt stack 0
   313                           
   314                           ; Initialize objects allocated to COMRAM (7 bytes)
   315                           ; load TBLPTR registers with __pidataCOMRAM
   316  001754  0E84               	movlw	low __pidataCOMRAM
   317  001756  6EF6               	movwf	tblptrl,c
   318  001758  0E1B               	movlw	high __pidataCOMRAM
   319  00175A  6EF7               	movwf	tblptrh,c
   320  00175C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   321  00175E  6EF8               	movwf	tblptru,c
   322  001760  EE00  F046         	lfsr	0,__pdataCOMRAM
   323  001764  EE10 F007          	lfsr	1,7
   324  001768                     copy_data0:
   325  001768  0009               	tblrd		*+
   326  00176A  CFF5 FFEE          	movff	tablat,postinc0
   327  00176E  50E5               	movf	postdec1,w,c
   328  001770  50E1               	movf	fsr1l,w,c
   329  001772  E1FA               	bnz	copy_data0
   330                           
   331                           ; Clear objects allocated to BANK1 (42 bytes)
   332  001774  EE01  F000         	lfsr	0,__pbssBANK1
   333  001778  0E2A               	movlw	42
   334  00177A                     clear_0:
   335  00177A  6AEE               	clrf	postinc0,c
   336  00177C  06E8               	decf	wreg,f,c
   337  00177E  E1FD               	bnz	clear_0
   338                           
   339                           ; Clear objects allocated to BANK0 (61 bytes)
   340  001780  EE00  F0BF         	lfsr	0,__pbssBANK0
   341  001784  0E3D               	movlw	61
   342  001786                     clear_1:
   343  001786  6AEE               	clrf	postinc0,c
   344  001788  06E8               	decf	wreg,f,c
   345  00178A  E1FD               	bnz	clear_1
   346                           
   347                           ; Clear objects allocated to COMRAM (11 bytes)
   348  00178C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   349  001790  0E0B               	movlw	11
   350  001792                     clear_2:
   351  001792  6AEE               	clrf	postinc0,c
   352  001794  06E8               	decf	wreg,f,c
   353  001796  E1FD               	bnz	clear_2
   354  001798                     end_of_initialization:
   355                           	opt stack 0
   356  001798                     __end_of__initialization:
   357                           	opt stack 0
   358  001798  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   359  00179A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   360  00179C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   361  00179E  6EF8               	movwf	tblptru,c
   362  0017A0  0100               	movlb	0
   363  0017A2  EFAB  F007         	goto	_main	;jump to C main() function
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           postdec1	equ	0xFE5
   371                           fsr1l	equ	0xFE1
   372                           
   373                           	psect	bssCOMRAM
   374  00003B                     __pbssCOMRAM:
   375                           	opt stack 0
   376  00003B                     resetCommunications@commState:
   377                           	opt stack 0
   378  00003B                     	ds	2
   379  00003D                     receive_data@my_status:
   380                           	opt stack 0
   381  00003D                     	ds	1
   382  00003E                     _SPI_transmit_wait:
   383                           	opt stack 0
   384  00003E                     	ds	1
   385  00003F                     powerPulseCheck@mcpLFoutLast:
   386                           	opt stack 0
   387  00003F                     	ds	1
   388  000040                     powerPulseCheck@mcpHFoutLast:
   389                           	opt stack 0
   390  000040                     	ds	1
   391  000041                     pulseFoutPassThru@runonce:
   392                           	opt stack 0
   393  000041                     	ds	1
   394  000042                     _timerCountHF:
   395                           	opt stack 0
   396  000042                     	ds	4
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	dataCOMRAM
   407  000046                     __pdataCOMRAM:
   408                           	opt stack 0
   409  000046                     powerPulseCheck@timerCountHFCheck:
   410                           	opt stack 0
   411  000046                     	ds	2
   412  000048                     powerPulseCheck@firstPulse:
   413                           	opt stack 0
   414  000048                     	ds	1
   415  000049                     powerPulseCheck@timerCountHFLast:
   416                           	opt stack 0
   417  000049                     	ds	4
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	bssBANK0
   428  0000BF                     __pbssBANK0:
   429                           	opt stack 0
   430  0000BF                     powerPulseCheck@meterEnergyUsedPart:
   431                           	opt stack 0
   432  0000BF                     	ds	4
   433  0000C3                     _timerCountLF:
   434                           	opt stack 0
   435  0000C3                     	ds	4
   436  0000C7                     _meterEnergyUsed:
   437                           	opt stack 0
   438  0000C7                     	ds	4
   439  0000CB                     _meterWatts:
   440                           	opt stack 0
   441  0000CB                     	ds	4
   442  0000CF                     communications@last_state_active:
   443                           	opt stack 0
   444  0000CF                     	ds	1
   445  0000D0                     communications@receive_current_state:
   446                           	opt stack 0
   447  0000D0                     	ds	1
   448  0000D1                     communications@end_of_transmission_received:
   449                           	opt stack 0
   450  0000D1                     	ds	1
   451  0000D2                     communications@send_buffer:
   452                           	opt stack 0
   453  0000D2                     	ds	42
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463                           	psect	bssBANK1
   464  000100                     __pbssBANK1:
   465                           	opt stack 0
   466  000100                     communications@receive_buffer:
   467                           	opt stack 0
   468  000100                     	ds	42
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	cstackBANK0
   479  000060                     __pcstackBANK0:
   480                           	opt stack 0
   481  000060                     xsum_builder@xsumBuf:
   482                           	opt stack 0
   483                           
   484                           ; 16 bytes @ 0x0
   485  000060                     	ds	16
   486  000070                     com_command_setPower@temp:
   487                           	opt stack 0
   488  000070                     com_command_setEnergyUsed@temp:
   489                           	opt stack 0
   490                           
   491                           ; 12 bytes @ 0x10
   492  000070                     	ds	12
   493  00007C                     resetCommunications@send_buffer:
   494                           	opt stack 0
   495  00007C                     process_data_parameters@parameters:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  00007C                     	ds	2
   500  00007E                     ??_resetCommunications:
   501  00007E                     process_data_parameters@send_buffer:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1E
   505  00007E                     	ds	2
   506  000080                     process_data_parameters@end_of_transmission_received:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x20
   510  000080                     	ds	1
   511  000081                     process_data@receive_buffer:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x21
   515  000081                     	ds	2
   516  000083                     process_data@send_buffer:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x23
   520  000083                     	ds	2
   521  000085                     process_data@parameters:
   522                           	opt stack 0
   523                           
   524                           ; 50 bytes @ 0x25
   525  000085                     	ds	50
   526  0000B7                     process_data@end_of_transmission_received:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x57
   530  0000B7                     	ds	1
   531  0000B8                     communications@no_more_to_send:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x58
   535  0000B8                     	ds	1
   536  0000B9                     communications@firstTime:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x59
   540  0000B9                     	ds	1
   541  0000BA                     main@initDone:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x5A
   545  0000BA                     	ds	1
   546  0000BB                     main@inx:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x5B
   550  0000BB                     	ds	2
   551  0000BD                     main@inx_1084:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x5D
   555  0000BD                     	ds	2
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	cstackCOMRAM
   566  000001                     __pcstackCOMRAM:
   567                           	opt stack 0
   568  000001                     ??_Timer0_ISR:
   569                           
   570                           ; 1 bytes @ 0x0
   571  000001                     	ds	18
   572  000013                     ??_isdigit:
   573  000013                     ?_command_builder_add_char:
   574                           	opt stack 0
   575  000013                     ?_strcmp2:
   576                           	opt stack 0
   577  000013                     ?___wmul:
   578                           	opt stack 0
   579  000013                     ?___lwdiv:
   580                           	opt stack 0
   581  000013                     ?___lwmod:
   582                           	opt stack 0
   583  000013                     ?___lmul:
   584                           	opt stack 0
   585  000013                     ?___lldiv:
   586                           	opt stack 0
   587  000013                     ?___llmod:
   588                           	opt stack 0
   589  000013                     SPI_send_data@data:
   590                           	opt stack 0
   591  000013                     delayMS10@count:
   592                           	opt stack 0
   593  000013                     command_builder_add_char@send_buffer:
   594                           	opt stack 0
   595  000013                     strcmp2@a:
   596                           	opt stack 0
   597  000013                     SPI_receive_data@data:
   598                           	opt stack 0
   599  000013                     ___wmul@multiplier:
   600                           	opt stack 0
   601  000013                     ___lwdiv@dividend:
   602                           	opt stack 0
   603  000013                     ___lwmod@dividend:
   604                           	opt stack 0
   605  000013                     ___lmul@multiplier:
   606                           	opt stack 0
   607  000013                     ___lldiv@dividend:
   608                           	opt stack 0
   609  000013                     ___llmod@dividend:
   610                           	opt stack 0
   611                           
   612                           ; 4 bytes @ 0x12
   613  000013                     	ds	1
   614  000014                     SPI_send_data@sendGood:
   615                           	opt stack 0
   616  000014                     _isdigit$2307:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x13
   620  000014                     	ds	1
   621  000015                     ??_delayMS10:
   622  000015                     command_builder_add_char@data:
   623                           	opt stack 0
   624  000015                     SPI_receive_data@recvGood:
   625                           	opt stack 0
   626  000015                     isdigit@c:
   627                           	opt stack 0
   628  000015                     send_data@send_buffer:
   629                           	opt stack 0
   630  000015                     strcmp2@b:
   631                           	opt stack 0
   632  000015                     ___wmul@multiplicand:
   633                           	opt stack 0
   634  000015                     ___lwdiv@divisor:
   635                           	opt stack 0
   636  000015                     ___lwmod@divisor:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x14
   640  000015                     	ds	1
   641  000016                     ??_command_builder_add_char:
   642  000016                     delayMS10@inx:
   643                           	opt stack 0
   644  000016                     receive_data@receive_buffer:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x15
   648  000016                     	ds	1
   649  000017                     ??_send_data:
   650  000017                     ??_strcmp2:
   651  000017                     ?_command_builder_add_string:
   652                           	opt stack 0
   653  000017                     ___lwdiv@counter:
   654                           	opt stack 0
   655  000017                     ___lwmod@counter:
   656                           	opt stack 0
   657  000017                     command_builder_add_string@send_buffer:
   658                           	opt stack 0
   659  000017                     ___wmul@product:
   660                           	opt stack 0
   661  000017                     ___lmul@multiplicand:
   662                           	opt stack 0
   663  000017                     ___lldiv@divisor:
   664                           	opt stack 0
   665  000017                     ___llmod@divisor:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x16
   669  000017                     	ds	1
   670  000018                     ??_initMCPFout:
   671  000018                     ??_receive_data:
   672  000018                     ___lwdiv@quotient:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x17
   676  000018                     	ds	1
   677  000019                     receive_data@data:
   678                           	opt stack 0
   679  000019                     send_data@send_end:
   680                           	opt stack 0
   681  000019                     process_data_parameterize@parameters:
   682                           	opt stack 0
   683  000019                     command_builder_add_string@data_string:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x18
   687  000019                     	ds	1
   688  00001A                     strcmp2@match:
   689                           	opt stack 0
   690  00001A                     utoa@buf:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694  00001A                     	ds	1
   695  00001B                     ??_command_builder_add_string:
   696  00001B                     ___llmod@counter:
   697                           	opt stack 0
   698  00001B                     process_data_parameterize@buffer_to_parameterize:
   699                           	opt stack 0
   700  00001B                     ___lmul@product:
   701                           	opt stack 0
   702  00001B                     ___lldiv@quotient:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1A
   706  00001B                     	ds	1
   707  00001C                     strcmp2@inx:
   708                           	opt stack 0
   709  00001C                     utoa@val:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x1B
   713  00001C                     	ds	1
   714  00001D                     ??_process_data_parameterize:
   715  00001D                     command_builder_add_string@xsum:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x1C
   719  00001D                     	ds	1
   720  00001E                     strmatch@a:
   721                           	opt stack 0
   722  00001E                     utoa@base:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1D
   726  00001E                     	ds	1
   727  00001F                     ?_atol:
   728                           	opt stack 0
   729  00001F                     ___lldiv@counter:
   730                           	opt stack 0
   731  00001F                     command_builder_add_string@inx:
   732                           	opt stack 0
   733  00001F                     atol@s:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x1E
   737  00001F                     	ds	1
   738  000020                     process_data_parameterize@inx:
   739                           	opt stack 0
   740  000020                     strmatch@b:
   741                           	opt stack 0
   742  000020                     utoa@v:
   743                           	opt stack 0
   744  000020                     ultoa@buf:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x1F
   748  000020                     	ds	2
   749  000022                     process_data_parameterize@parameter_index:
   750                           	opt stack 0
   751  000022                     utoa@c:
   752                           	opt stack 0
   753  000022                     strmatch@result:
   754                           	opt stack 0
   755  000022                     ultoa@val:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x21
   759  000022                     	ds	1
   760  000023                     ??_atol:
   761  000023                     process_data_parameterize@parameter_position:
   762                           	opt stack 0
   763  000023                     itoa@buf:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     strmatch@match:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x23
   772  000024                     	ds	1
   773  000025                     itoa@val:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x24
   777  000025                     	ds	1
   778  000026                     ultoa@base:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x25
   782  000026                     	ds	1
   783  000027                     atol@sign:
   784                           	opt stack 0
   785  000027                     itoa@base:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x26
   789  000027                     	ds	1
   790  000028                     atol@a:
   791                           	opt stack 0
   792  000028                     ultoa@v:
   793                           	opt stack 0
   794                           
   795                           ; 4 bytes @ 0x27
   796  000028                     	ds	1
   797  000029                     itoa@cp:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x28
   801  000029                     	ds	2
   802  00002B                     xsum_builder@send_buffer:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x2A
   806  00002B                     	ds	1
   807  00002C                     atol@c:
   808                           	opt stack 0
   809  00002C                     ultoa@c:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x2B
   813  00002C                     	ds	1
   814  00002D                     xsum_builder@xsum:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x2C
   818  00002D                     	ds	2
   819  00002F                     command_builder1@send_buffer:
   820                           	opt stack 0
   821  00002F                     command_builder3@send_buffer:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x2E
   825  00002F                     	ds	2
   826  000031                     command_builder1@data1:
   827                           	opt stack 0
   828  000031                     command_builder3@data1:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x30
   832  000031                     	ds	2
   833  000033                     command_builder1@xsum:
   834                           	opt stack 0
   835  000033                     command_builder3@data2:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x32
   839  000033                     	ds	2
   840  000035                     command_builder3@data3:
   841                           	opt stack 0
   842  000035                     send_end_of_transmission@send_buffer:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x34
   846  000035                     	ds	2
   847  000037                     command_builder3@xsum:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x36
   851  000037                     	ds	2
   852  000039                     com_command_setPower@send_buffer:
   853                           	opt stack 0
   854  000039                     com_command_setEnergyUsed@send_buffer:
   855                           	opt stack 0
   856  000039                     com_command_setVersion@send_buffer:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x38
   860  000039                     	ds	2
   861  00003B                     tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1l	equ	0xFE1
   869                           
   870                           ; 1 bytes @ 0x3A
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 80 in file "Current_Sense_Main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  inx             2   93[BANK0 ] int 
   881 ;;  inx             2   91[BANK0 ] int 
   882 ;;  initDone        1   90[BANK0 ] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   892 ;;      Params:         0       0       0       0       0       0       0
   893 ;;      Locals:         0       5       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0
   895 ;;      Totals:         0       5       0       0       0       0       0
   896 ;;Total ram usage:        5 bytes
   897 ;; Hardware stack levels required when called:   10
   898 ;; This function calls:
   899 ;;		_communications
   900 ;;		_delayMS10
   901 ;;		_init
   902 ;;		_initMCPFout
   903 ;;		_initTimer
   904 ;;		_powerPulseCheck
   905 ;;		_pulseFoutPassThru
   906 ;; This function is called by:
   907 ;;		Startup code after reset
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text0
   912  000F56                     __ptext0:
   913                           	opt stack 0
   914  000F56                     _main:
   915                           	opt stack 21
   916                           
   917                           ;Current_Sense_Main.c: 82: init();
   918                           
   919                           ;incstack = 0
   920  000F56  ECB9  F00D         	call	_init	;wreg free
   921                           
   922                           ;Current_Sense_Main.c: 84: for (int inx = 0; inx < 10; inx++)
   923  000F5A  0E00               	movlw	0
   924  000F5C  0100               	movlb	0	; () banked
   925  000F5E  6FBC               	movwf	(main@inx+1)& (0+255),b
   926  000F60  0E00               	movlw	0
   927  000F62  6FBB               	movwf	main@inx& (0+255),b
   928  000F64                     l3401:
   929                           
   930                           ; BSR set to: 0
   931  000F64  BFBC               	btfsc	(main@inx+1)& (0+255),7,b
   932  000F66  D006               	goto	l113
   933  000F68  51BC               	movf	(main@inx+1)& (0+255),w,b
   934  000F6A  E116               	bnz	l3413
   935  000F6C  0E0A               	movlw	10
   936  000F6E  5DBB               	subwf	main@inx& (0+255),w,b
   937  000F70  B0D8               	btfsc	status,0,c
   938  000F72  D012               	goto	u2840
   939  000F74                     l113:
   940                           
   941                           ; BSR set to: 0
   942                           ;Current_Sense_Main.c: 85: {
   943                           ;Current_Sense_Main.c: 86: LATBbits.LATB4 = 1;
   944  000F74  888A               	bsf	3978,4,c	;volatile
   945                           
   946                           ; BSR set to: 0
   947                           ;Current_Sense_Main.c: 87: delayMS10(10);
   948  000F76  0E00               	movlw	0
   949  000F78  6E14               	movwf	delayMS10@count+1,c
   950  000F7A  0E0A               	movlw	10
   951  000F7C  6E13               	movwf	delayMS10@count,c
   952  000F7E  ECD2  F00C         	call	_delayMS10	;wreg free
   953                           
   954                           ;Current_Sense_Main.c: 88: LATBbits.LATB4 = 0;
   955  000F82  988A               	bcf	3978,4,c	;volatile
   956                           
   957                           ;Current_Sense_Main.c: 89: delayMS10(10);
   958  000F84  0E00               	movlw	0
   959  000F86  6E14               	movwf	delayMS10@count+1,c
   960  000F88  0E0A               	movlw	10
   961  000F8A  6E13               	movwf	delayMS10@count,c
   962  000F8C  ECD2  F00C         	call	_delayMS10	;wreg free
   963  000F90  0100               	movlb	0	; () banked
   964  000F92  4BBB               	infsnz	main@inx& (0+255),f,b
   965  000F94  2BBC               	incf	(main@inx+1)& (0+255),f,b
   966  000F96  D7E6               	goto	l3401
   967  000F98                     u2840:
   968  000F98                     l3413:
   969                           
   970                           ; BSR set to: 0
   971                           ;Current_Sense_Main.c: 90: }
   972                           ;Current_Sense_Main.c: 92: initTimer();
   973  000F98  EC96  F00D         	call	_initTimer	;wreg free
   974                           
   975                           ;Current_Sense_Main.c: 120: communications(1);
   976  000F9C  0E01               	movlw	1
   977  000F9E  ECC4  F008         	call	_communications
   978                           
   979                           ;Current_Sense_Main.c: 127: bool initDone = 0;
   980  000FA2  0E00               	movlw	0
   981  000FA4  0100               	movlb	0	; () banked
   982  000FA6  6FBA               	movwf	main@initDone& (0+255),b
   983  000FA8                     l3419:
   984                           
   985                           ; BSR set to: 0
   986                           ;Current_Sense_Main.c: 130: {
   987                           ;Current_Sense_Main.c: 131: communications(0);
   988  000FA8  0E00               	movlw	0
   989  000FAA  ECC4  F008         	call	_communications
   990                           
   991                           ;Current_Sense_Main.c: 132: pulseFoutPassThru();
   992  000FAE  EC56  F00D         	call	_pulseFoutPassThru	;wreg free
   993                           
   994                           ;Current_Sense_Main.c: 133: powerPulseCheck();
   995  000FB2  EC92  F004         	call	_powerPulseCheck	;wreg free
   996                           
   997                           ;Current_Sense_Main.c: 136: if (initDone == 0)
   998  000FB6  0100               	movlb	0	; () banked
   999  000FB8  51BA               	movf	main@initDone& (0+255),w,b
  1000  000FBA  A4D8               	btfss	status,2,c
  1001  000FBC  D7F5               	goto	l115
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;Current_Sense_Main.c: 137: {
  1005                           ;Current_Sense_Main.c: 138: if (timerCountLF > 1000)
  1006  000FBE  51C6               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1007  000FC0  11C5               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1008  000FC2  E106               	bnz	u2860
  1009  000FC4  0EE9               	movlw	233
  1010  000FC6  5DC3               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1011  000FC8  0E03               	movlw	3
  1012  000FCA  59C4               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1013  000FCC  A0D8               	btfss	status,0,c
  1014  000FCE  D7EC               	goto	l115
  1015  000FD0                     u2860:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;Current_Sense_Main.c: 139: {
  1019                           ;Current_Sense_Main.c: 140: initMCPFout();
  1020  000FD0  EC8A  F00A         	call	_initMCPFout	;wreg free
  1021                           
  1022                           ;Current_Sense_Main.c: 141: initDone = 1;
  1023  000FD4  0E01               	movlw	1
  1024  000FD6  0100               	movlb	0	; () banked
  1025  000FD8  6FBA               	movwf	main@initDone& (0+255),b
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;Current_Sense_Main.c: 143: for (int inx = 0; inx < 10; inx++)
  1029  000FDA  0E00               	movlw	0
  1030  000FDC  6FBE               	movwf	(main@inx_1084+1)& (0+255),b
  1031  000FDE  0E00               	movlw	0
  1032  000FE0  6FBD               	movwf	main@inx_1084& (0+255),b
  1033  000FE2                     l3435:
  1034                           
  1035                           ; BSR set to: 0
  1036  000FE2  BFBE               	btfsc	(main@inx_1084+1)& (0+255),7,b
  1037  000FE4  D006               	goto	l118
  1038  000FE6  51BE               	movf	(main@inx_1084+1)& (0+255),w,b
  1039  000FE8  E1DF               	bnz	l3419
  1040  000FEA  0E0A               	movlw	10
  1041  000FEC  5DBD               	subwf	main@inx_1084& (0+255),w,b
  1042  000FEE  B0D8               	btfsc	status,0,c
  1043  000FF0  D7DB               	goto	l115
  1044  000FF2                     l118:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;Current_Sense_Main.c: 144: {
  1048                           ;Current_Sense_Main.c: 145: LATBbits.LATB4 = 1;
  1049  000FF2  888A               	bsf	3978,4,c	;volatile
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;Current_Sense_Main.c: 146: delayMS10(3);
  1053  000FF4  0E00               	movlw	0
  1054  000FF6  6E14               	movwf	delayMS10@count+1,c
  1055  000FF8  0E03               	movlw	3
  1056  000FFA  6E13               	movwf	delayMS10@count,c
  1057  000FFC  ECD2  F00C         	call	_delayMS10	;wreg free
  1058                           
  1059                           ;Current_Sense_Main.c: 147: LATBbits.LATB4 = 0;
  1060  001000  988A               	bcf	3978,4,c	;volatile
  1061                           
  1062                           ;Current_Sense_Main.c: 148: delayMS10(5);
  1063  001002  0E00               	movlw	0
  1064  001004  6E14               	movwf	delayMS10@count+1,c
  1065  001006  0E05               	movlw	5
  1066  001008  6E13               	movwf	delayMS10@count,c
  1067  00100A  ECD2  F00C         	call	_delayMS10	;wreg free
  1068  00100E  0100               	movlb	0	; () banked
  1069  001010  4BBD               	infsnz	main@inx_1084& (0+255),f,b
  1070  001012  2BBE               	incf	(main@inx_1084+1)& (0+255),f,b
  1071  001014  D7E6               	goto	l3435
  1072  001016                     __end_of_main:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           postinc0	equ	0xFEE
  1079                           wreg	equ	0xFE8
  1080                           postdec1	equ	0xFE5
  1081                           fsr1l	equ	0xFE1
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function _pulseFoutPassThru *****************
  1085 ;; Defined at:
  1086 ;;		line 191 in file "Current_Sense_Main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1100 ;;      Params:         0       0       0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text1
  1115  001AAC                     __ptext1:
  1116                           	opt stack 0
  1117  001AAC                     _pulseFoutPassThru:
  1118                           	opt stack 29
  1119                           
  1120                           ;Current_Sense_Main.c: 194: static bool runonce = 0;
  1121                           ;Current_Sense_Main.c: 196: if (PORTCbits.RC2 == 0)
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;incstack = 0
  1125  001AAC  B482               	btfsc	3970,2,c	;volatile
  1126  001AAE  D00C               	goto	l127
  1127                           
  1128                           ;Current_Sense_Main.c: 197: {
  1129                           ;Current_Sense_Main.c: 198: LATAbits.LATA0 = 1;
  1130  001AB0  8089               	bsf	3977,0,c	;volatile
  1131                           
  1132                           ;Current_Sense_Main.c: 199: if (runonce == 0)
  1133  001AB2  5041               	movf	pulseFoutPassThru@runonce,w,c
  1134  001AB4  A4D8               	btfss	status,2,c
  1135  001AB6  0012               	return	
  1136                           
  1137                           ;Current_Sense_Main.c: 200: {
  1138                           ;Current_Sense_Main.c: 201: runonce = 1;
  1139  001AB8  0E01               	movlw	1
  1140  001ABA  6E41               	movwf	pulseFoutPassThru@runonce,c
  1141                           
  1142                           ;Current_Sense_Main.c: 202: if (PORTBbits.RB4 == 1)
  1143  001ABC  A881               	btfss	3969,4,c	;volatile
  1144  001ABE  D002               	goto	l129
  1145                           
  1146                           ;Current_Sense_Main.c: 203: {
  1147                           ;Current_Sense_Main.c: 204: LATBbits.LATB4 = 0;
  1148  001AC0  988A               	bcf	3978,4,c	;volatile
  1149                           
  1150                           ;Current_Sense_Main.c: 205: }
  1151  001AC2  0012               	return	
  1152  001AC4                     l129:
  1153                           
  1154                           ;Current_Sense_Main.c: 206: else
  1155                           ;Current_Sense_Main.c: 207: {
  1156                           ;Current_Sense_Main.c: 208: LATBbits.LATB4 = 1;
  1157  001AC4  888A               	bsf	3978,4,c	;volatile
  1158                           
  1159                           ;Current_Sense_Main.c: 209: }
  1160                           ;Current_Sense_Main.c: 210: }
  1161                           ;Current_Sense_Main.c: 211: }
  1162  001AC6  0012               	return	
  1163  001AC8                     l127:
  1164                           
  1165                           ;Current_Sense_Main.c: 212: else
  1166                           ;Current_Sense_Main.c: 213: {
  1167                           ;Current_Sense_Main.c: 214: LATAbits.LATA0 = 0;
  1168  001AC8  9089               	bcf	3977,0,c	;volatile
  1169                           
  1170                           ;Current_Sense_Main.c: 215: runonce = 0;
  1171  001ACA  0E00               	movlw	0
  1172  001ACC  6E41               	movwf	pulseFoutPassThru@runonce,c
  1173  001ACE  0012               	return	
  1174  001AD0                     __end_of_pulseFoutPassThru:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _powerPulseCheck *****************
  1187 ;; Defined at:
  1188 ;;		line 235 in file "Current_Sense_Main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1202 ;;      Params:         0       0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    2
  1209 ;; This function calls:
  1210 ;;		___lldiv
  1211 ;;		___lmul
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text2
  1218  000924                     __ptext2:
  1219                           	opt stack 0
  1220  000924                     _powerPulseCheck:
  1221                           	opt stack 28
  1222                           
  1223                           ;Current_Sense_Main.c: 247: static unsigned long meterEnergyUsedPart = 0;
  1224                           ;Current_Sense_Main.c: 248: static unsigned long timerCountHFLast = 2147483647;
  1225                           ;Current_Sense_Main.c: 249: static unsigned int timerCountHFCheck = 1;
  1226                           ;Current_Sense_Main.c: 250: static bool firstPulse = 1;
  1227                           ;Current_Sense_Main.c: 253: static bool mcpHFoutLast = 0;
  1228                           ;Current_Sense_Main.c: 254: static bool mcpLFoutLast = 0;
  1229                           ;Current_Sense_Main.c: 258: if (PORTCbits.RC2 == 0)
  1230                           
  1231                           ;incstack = 0
  1232  000924  B482               	btfsc	3970,2,c	;volatile
  1233  000926  D036               	goto	l152
  1234                           
  1235                           ;Current_Sense_Main.c: 259: {
  1236                           ;Current_Sense_Main.c: 260: if (mcpHFoutLast == 0)
  1237  000928  5040               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1238  00092A  A4D8               	btfss	status,2,c
  1239  00092C  D035               	goto	l154
  1240                           
  1241                           ;Current_Sense_Main.c: 261: {
  1242                           ;Current_Sense_Main.c: 262: mcpHFoutLast = 1;
  1243  00092E  0E01               	movlw	1
  1244  000930  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1245                           
  1246                           ;Current_Sense_Main.c: 263: firstPulse = 0;
  1247  000932  0E00               	movlw	0
  1248  000934  6E48               	movwf	powerPulseCheck@firstPulse,c
  1249                           
  1250                           ;Current_Sense_Main.c: 265: timerCountHFLast = timerCountHF;
  1251  000936  C042  F049         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1252  00093A  C043  F04A         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1253  00093E  C044  F04B         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1254  000942  C045  F04C         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1255                           
  1256                           ;Current_Sense_Main.c: 266: timerCountHF = 0;
  1257  000946  0E00               	movlw	0
  1258  000948  6E42               	movwf	_timerCountHF,c	;volatile
  1259  00094A  0E00               	movlw	0
  1260  00094C  6E43               	movwf	_timerCountHF+1,c	;volatile
  1261  00094E  0E00               	movlw	0
  1262  000950  6E44               	movwf	_timerCountHF+2,c	;volatile
  1263  000952  0E00               	movlw	0
  1264  000954  6E45               	movwf	_timerCountHF+3,c	;volatile
  1265                           
  1266                           ;Current_Sense_Main.c: 267: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHFLast;
  1267  000956  0EE0               	movlw	224
  1268  000958  6E13               	movwf	___lldiv@dividend,c
  1269  00095A  0ED4               	movlw	212
  1270  00095C  6E14               	movwf	___lldiv@dividend+1,c
  1271  00095E  0E0E               	movlw	14
  1272  000960  6E15               	movwf	___lldiv@dividend+2,c
  1273  000962  0E00               	movlw	0
  1274  000964  6E16               	movwf	___lldiv@dividend+3,c
  1275  000966  C049  F017         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1276  00096A  C04A  F018         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1277  00096E  C04B  F019         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1278  000972  C04C  F01A         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1279  000976  EC49  F00A         	call	___lldiv	;wreg free
  1280  00097A  C013  F0CB         	movff	?___lldiv,_meterWatts
  1281  00097E  C014  F0CC         	movff	?___lldiv+1,_meterWatts+1
  1282  000982  C015  F0CD         	movff	?___lldiv+2,_meterWatts+2
  1283  000986  C016  F0CE         	movff	?___lldiv+3,_meterWatts+3
  1284                           
  1285                           ;Current_Sense_Main.c: 271: timerCountHFCheck = 1;
  1286  00098A  0E00               	movlw	0
  1287  00098C  6E47               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1288  00098E  0E01               	movlw	1
  1289  000990  6E46               	movwf	powerPulseCheck@timerCountHFCheck,c
  1290                           
  1291                           ;Current_Sense_Main.c: 272: }
  1292                           ;Current_Sense_Main.c: 273: }
  1293  000992  D002               	goto	l154
  1294  000994                     l152:
  1295                           
  1296                           ;Current_Sense_Main.c: 274: else
  1297                           ;Current_Sense_Main.c: 275: {
  1298                           ;Current_Sense_Main.c: 276: mcpHFoutLast = 0;
  1299  000994  0E00               	movlw	0
  1300  000996  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1301  000998                     l154:
  1302                           
  1303                           ;Current_Sense_Main.c: 277: }
  1304                           ;Current_Sense_Main.c: 285: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast))
  1305  000998  5048               	movf	powerPulseCheck@firstPulse,w,c
  1306  00099A  A4D8               	btfss	status,2,c
  1307  00099C  D050               	goto	l158
  1308  00099E  5042               	movf	_timerCountHF,w,c	;volatile
  1309  0009A0  5C49               	subwf	powerPulseCheck@timerCountHFLast,w,c
  1310  0009A2  5043               	movf	_timerCountHF+1,w,c	;volatile
  1311  0009A4  584A               	subwfb	powerPulseCheck@timerCountHFLast+1,w,c
  1312  0009A6  5044               	movf	_timerCountHF+2,w,c	;volatile
  1313  0009A8  584B               	subwfb	powerPulseCheck@timerCountHFLast+2,w,c
  1314  0009AA  5045               	movf	_timerCountHF+3,w,c	;volatile
  1315  0009AC  584C               	subwfb	powerPulseCheck@timerCountHFLast+3,w,c
  1316  0009AE  B0D8               	btfsc	status,0,c
  1317  0009B0  D046               	goto	l158
  1318                           
  1319                           ;Current_Sense_Main.c: 286: {
  1320                           ;Current_Sense_Main.c: 287: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1321  0009B2  C046  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1322  0009B6  C047  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1323  0009BA  6A15               	clrf	___lmul@multiplier+2,c
  1324  0009BC  6A16               	clrf	___lmul@multiplier+3,c
  1325  0009BE  0EE8               	movlw	232
  1326  0009C0  6E17               	movwf	___lmul@multiplicand,c
  1327  0009C2  0E03               	movlw	3
  1328  0009C4  6E18               	movwf	___lmul@multiplicand+1,c
  1329  0009C6  0E00               	movlw	0
  1330  0009C8  6E19               	movwf	___lmul@multiplicand+2,c
  1331  0009CA  0E00               	movlw	0
  1332  0009CC  6E1A               	movwf	___lmul@multiplicand+3,c
  1333  0009CE  EC7F  F00B         	call	___lmul	;wreg free
  1334  0009D2  5042               	movf	_timerCountHF,w,c	;volatile
  1335  0009D4  5C13               	subwf	?___lmul,w,c
  1336  0009D6  5043               	movf	_timerCountHF+1,w,c	;volatile
  1337  0009D8  5814               	subwfb	?___lmul+1,w,c
  1338  0009DA  5044               	movf	_timerCountHF+2,w,c	;volatile
  1339  0009DC  5815               	subwfb	?___lmul+2,w,c
  1340  0009DE  5045               	movf	_timerCountHF+3,w,c	;volatile
  1341  0009E0  5816               	subwfb	?___lmul+3,w,c
  1342  0009E2  B0D8               	btfsc	status,0,c
  1343  0009E4  D02C               	goto	l158
  1344                           
  1345                           ;Current_Sense_Main.c: 288: {
  1346                           ;Current_Sense_Main.c: 289: if (timerCountHFCheck < 90)
  1347  0009E6  5047               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1348  0009E8  E121               	bnz	l3361
  1349  0009EA  0E5A               	movlw	90
  1350  0009EC  5C46               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1351  0009EE  B0D8               	btfsc	status,0,c
  1352  0009F0  D01D               	goto	l157
  1353                           
  1354                           ;Current_Sense_Main.c: 290: {
  1355                           ;Current_Sense_Main.c: 291: timerCountHFCheck++;
  1356  0009F2  4A46               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1357  0009F4  2A47               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1358                           
  1359                           ;Current_Sense_Main.c: 292: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHF;
  1360  0009F6  0EE0               	movlw	224
  1361  0009F8  6E13               	movwf	___lldiv@dividend,c
  1362  0009FA  0ED4               	movlw	212
  1363  0009FC  6E14               	movwf	___lldiv@dividend+1,c
  1364  0009FE  0E0E               	movlw	14
  1365  000A00  6E15               	movwf	___lldiv@dividend+2,c
  1366  000A02  0E00               	movlw	0
  1367  000A04  6E16               	movwf	___lldiv@dividend+3,c
  1368  000A06  C042  F017         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1369  000A0A  C043  F018         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1370  000A0E  C044  F019         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1371  000A12  C045  F01A         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1372  000A16  EC49  F00A         	call	___lldiv	;wreg free
  1373  000A1A  C013  F0CB         	movff	?___lldiv,_meterWatts
  1374  000A1E  C014  F0CC         	movff	?___lldiv+1,_meterWatts+1
  1375  000A22  C015  F0CD         	movff	?___lldiv+2,_meterWatts+2
  1376  000A26  C016  F0CE         	movff	?___lldiv+3,_meterWatts+3
  1377                           
  1378                           ;Current_Sense_Main.c: 293: }
  1379  000A2A  D009               	goto	l158
  1380  000A2C                     l157:
  1381  000A2C                     l3361:
  1382                           
  1383                           ;Current_Sense_Main.c: 294: else
  1384                           ;Current_Sense_Main.c: 295: {
  1385                           ;Current_Sense_Main.c: 296: meterWatts = 0;
  1386  000A2C  0E00               	movlw	0
  1387  000A2E  0100               	movlb	0	; () banked
  1388  000A30  6FCB               	movwf	_meterWatts& (0+255),b
  1389  000A32  0E00               	movlw	0
  1390  000A34  6FCC               	movwf	(_meterWatts+1)& (0+255),b
  1391  000A36  0E00               	movlw	0
  1392  000A38  6FCD               	movwf	(_meterWatts+2)& (0+255),b
  1393  000A3A  0E00               	movlw	0
  1394  000A3C  6FCE               	movwf	(_meterWatts+3)& (0+255),b
  1395  000A3E                     l158:
  1396                           
  1397                           ;Current_Sense_Main.c: 297: }
  1398                           ;Current_Sense_Main.c: 299: }
  1399                           ;Current_Sense_Main.c: 300: }
  1400                           ;Current_Sense_Main.c: 302: if (firstPulse == 1)
  1401                           
  1402                           ; BSR set to: 0
  1403                           
  1404                           ; BSR set to: 0
  1405                           
  1406                           ; BSR set to: 0
  1407  000A3E  0448               	decf	powerPulseCheck@firstPulse,w,c
  1408  000A40  A4D8               	btfss	status,2,c
  1409  000A42  D009               	goto	l159
  1410                           
  1411                           ;Current_Sense_Main.c: 303: {
  1412                           ;Current_Sense_Main.c: 304: meterWatts = 0;
  1413  000A44  0E00               	movlw	0
  1414  000A46  0100               	movlb	0	; () banked
  1415  000A48  6FCB               	movwf	_meterWatts& (0+255),b
  1416  000A4A  0E00               	movlw	0
  1417  000A4C  6FCC               	movwf	(_meterWatts+1)& (0+255),b
  1418  000A4E  0E00               	movlw	0
  1419  000A50  6FCD               	movwf	(_meterWatts+2)& (0+255),b
  1420  000A52  0E00               	movlw	0
  1421  000A54  6FCE               	movwf	(_meterWatts+3)& (0+255),b
  1422  000A56                     l159:
  1423                           
  1424                           ;Current_Sense_Main.c: 305: }
  1425                           ;Current_Sense_Main.c: 309: if (PORTAbits.RA1 == 0)
  1426                           
  1427                           ; BSR set to: 0
  1428  000A56  B280               	btfsc	3968,1,c	;volatile
  1429  000A58  D030               	goto	l160
  1430                           
  1431                           ;Current_Sense_Main.c: 310: {
  1432                           ;Current_Sense_Main.c: 311: if (mcpLFoutLast == 0)
  1433  000A5A  503F               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1434  000A5C  A4D8               	btfss	status,2,c
  1435  000A5E  0012               	return	
  1436                           
  1437                           ;Current_Sense_Main.c: 312: {
  1438                           ;Current_Sense_Main.c: 313: mcpLFoutLast = 1;
  1439  000A60  0E01               	movlw	1
  1440  000A62  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1441                           
  1442                           ;Current_Sense_Main.c: 315: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1443  000A64  0E80               	movlw	128
  1444  000A66  0100               	movlb	0	; () banked
  1445  000A68  27BF               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1446  000A6A  0E97               	movlw	151
  1447  000A6C  23C0               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1448  000A6E  0E06               	movlw	6
  1449  000A70  23C1               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1450  000A72  0E00               	movlw	0
  1451  000A74  23C2               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1452                           
  1453                           ;Current_Sense_Main.c: 316: while (meterEnergyUsedPart > 100000)
  1454  000A76  D00E               	goto	l162
  1455  000A78                     l3375:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;Current_Sense_Main.c: 317: {
  1459                           ;Current_Sense_Main.c: 318: meterEnergyUsed++;
  1460  000A78  0E01               	movlw	1
  1461  000A7A  27C7               	addwf	_meterEnergyUsed& (0+255),f,b
  1462  000A7C  0E00               	movlw	0
  1463  000A7E  23C8               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1464  000A80  23C9               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1465  000A82  23CA               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1466                           
  1467                           ;Current_Sense_Main.c: 319: meterEnergyUsedPart -= 100000;
  1468  000A84  0EA0               	movlw	160
  1469  000A86  5FBF               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1470  000A88  0E86               	movlw	134
  1471  000A8A  5BC0               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1472  000A8C  0E01               	movlw	1
  1473  000A8E  5BC1               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1474  000A90  0E00               	movlw	0
  1475  000A92  5BC2               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1476  000A94                     l162:
  1477                           
  1478                           ; BSR set to: 0
  1479  000A94  51C2               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1480  000A96  E1F0               	bnz	l3375
  1481  000A98  0EA1               	movlw	161
  1482  000A9A  5DBF               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1483  000A9C  0E86               	movlw	134
  1484  000A9E  59C0               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1485  000AA0  0E01               	movlw	1
  1486  000AA2  59C1               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1487  000AA4  B0D8               	btfsc	status,0,c
  1488  000AA6  D7E8               	goto	l163
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;Current_Sense_Main.c: 320: }
  1492                           ;Current_Sense_Main.c: 322: timerCountLF = 0;
  1493                           
  1494                           ; BSR set to: 0
  1495  000AA8  0E00               	movlw	0
  1496  000AAA  6FC3               	movwf	_timerCountLF& (0+255),b	;volatile
  1497  000AAC  0E00               	movlw	0
  1498  000AAE  6FC4               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  1499  000AB0  0E00               	movlw	0
  1500  000AB2  6FC5               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  1501  000AB4  0E00               	movlw	0
  1502  000AB6  6FC6               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;Current_Sense_Main.c: 323: }
  1506                           ;Current_Sense_Main.c: 324: }
  1507  000AB8  0012               	return	
  1508  000ABA                     l160:
  1509                           
  1510                           ;Current_Sense_Main.c: 325: else
  1511                           ;Current_Sense_Main.c: 326: {
  1512                           ;Current_Sense_Main.c: 327: mcpLFoutLast = 0;
  1513                           
  1514                           ; BSR set to: 0
  1515  000ABA  0E00               	movlw	0
  1516  000ABC  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1517  000ABE  0012               	return	
  1518  000AC0                     __end_of_powerPulseCheck:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           postdec1	equ	0xFE5
  1527                           fsr1l	equ	0xFE1
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _initTimer *****************
  1531 ;; Defined at:
  1532 ;;		line 417 in file "Current_Sense_Main.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1546 ;;      Params:         0       0       0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text3
  1561  001B2C                     __ptext3:
  1562                           	opt stack 0
  1563  001B2C                     _initTimer:
  1564                           	opt stack 29
  1565                           
  1566                           ;Current_Sense_Main.c: 420: T0CONbits.TMR0ON = 0;
  1567                           
  1568                           ;incstack = 0
  1569  001B2C  9ED5               	bcf	4053,7,c	;volatile
  1570                           
  1571                           ;Current_Sense_Main.c: 421: T0CONbits.T08BIT = 0;
  1572  001B2E  9CD5               	bcf	4053,6,c	;volatile
  1573                           
  1574                           ;Current_Sense_Main.c: 422: T0CONbits.T0CS = 0;
  1575  001B30  9AD5               	bcf	4053,5,c	;volatile
  1576                           
  1577                           ;Current_Sense_Main.c: 423: T0CONbits.PSA = 0;
  1578  001B32  96D5               	bcf	4053,3,c	;volatile
  1579                           
  1580                           ;Current_Sense_Main.c: 424: T0CONbits.T0PS = 0b001;
  1581  001B34  50D5               	movf	4053,w,c	;volatile
  1582  001B36  0BF8               	andlw	-8
  1583  001B38  0901               	iorlw	1
  1584  001B3A  6ED5               	movwf	4053,c	;volatile
  1585                           
  1586                           ;Current_Sense_Main.c: 426: INTCONbits.TMR0IE = 1;
  1587  001B3C  8AF2               	bsf	intcon,5,c	;volatile
  1588                           
  1589                           ;Current_Sense_Main.c: 427: INTCONbits.GIE = 1;
  1590  001B3E  8EF2               	bsf	intcon,7,c	;volatile
  1591                           
  1592                           ;Current_Sense_Main.c: 428: T0CONbits.TMR0ON = 1;
  1593  001B40  8ED5               	bsf	4053,7,c	;volatile
  1594  001B42  0012               	return		;funcret
  1595  001B44                     __end_of_initTimer:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           intcon	equ	0xFF2
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           postdec1	equ	0xFE5
  1605                           fsr1l	equ	0xFE1
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _init *****************
  1609 ;; Defined at:
  1610 ;;		line 343 in file "Current_Sense_Main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1624 ;;      Params:         0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		_initIO
  1633 ;;		_initInterruptsClear
  1634 ;;		_initMCPFout
  1635 ;;		_initOSC
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text4
  1642  001B72                     __ptext4:
  1643                           	opt stack 0
  1644  001B72                     _init:
  1645                           	opt stack 27
  1646                           
  1647                           ;Current_Sense_Main.c: 345: initOSC();
  1648                           
  1649                           ;incstack = 0
  1650  001B72  ECA2  F00D         	call	_initOSC	;wreg free
  1651                           
  1652                           ;Current_Sense_Main.c: 346: initIO();
  1653  001B76  EC78  F00D         	call	_initIO	;wreg free
  1654                           
  1655                           ;Current_Sense_Main.c: 347: initInterruptsClear();
  1656  001B7A  ECFC  F00B         	call	_initInterruptsClear	;wreg free
  1657                           
  1658                           ;Current_Sense_Main.c: 348: initMCPFout();
  1659  001B7E  EC8A  F00A         	call	_initMCPFout	;wreg free
  1660  001B82  0012               	return	
  1661  001B84                     __end_of_init:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           intcon	equ	0xFF2
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _initOSC *****************
  1675 ;; Defined at:
  1676 ;;		line 353 in file "Current_Sense_Main.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_init
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text5
  1705  001B44                     __ptext5:
  1706                           	opt stack 0
  1707  001B44                     _initOSC:
  1708                           	opt stack 28
  1709                           
  1710                           ;Current_Sense_Main.c: 356: OSCCONbits.IDLEN = 0;
  1711                           
  1712                           ;incstack = 0
  1713  001B44  9ED3               	bcf	4051,7,c	;volatile
  1714                           
  1715                           ;Current_Sense_Main.c: 357: OSCCONbits.IRCF = 0b111;
  1716  001B46  88D3               	bsf	4051,4,c	;volatile
  1717  001B48  8AD3               	bsf	4051,5,c	;volatile
  1718  001B4A  8CD3               	bsf	4051,6,c	;volatile
  1719                           
  1720                           ;Current_Sense_Main.c: 358: OSCCONbits.SCS = 0b11;
  1721  001B4C  0E03               	movlw	3
  1722  001B4E  12D3               	iorwf	4051,f,c	;volatile
  1723                           
  1724                           ;Current_Sense_Main.c: 360: OSCCON2bits.MFIOSEL = 0;
  1725  001B50  98D2               	bcf	4050,4,c	;volatile
  1726                           
  1727                           ;Current_Sense_Main.c: 361: OSCCON2bits.SOSCGO = 0;
  1728  001B52  96D2               	bcf	4050,3,c	;volatile
  1729                           
  1730                           ;Current_Sense_Main.c: 362: OSCCON2bits.PRISD = 0;
  1731  001B54  94D2               	bcf	4050,2,c	;volatile
  1732                           
  1733                           ;Current_Sense_Main.c: 364: OSCTUNEbits.INTSRC = 1;
  1734  001B56  8E9B               	bsf	3995,7,c	;volatile
  1735                           
  1736                           ;Current_Sense_Main.c: 365: OSCTUNEbits.PLLEN = 0;
  1737  001B58  9C9B               	bcf	3995,6,c	;volatile
  1738  001B5A  0012               	return	
  1739  001B5C                     __end_of_initOSC:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           intcon	equ	0xFF2
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           postdec1	equ	0xFE5
  1749                           fsr1l	equ	0xFE1
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _initMCPFout *****************
  1753 ;; Defined at:
  1754 ;;		line 434 in file "Current_Sense_Main.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1768 ;;      Params:         0       0       0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0
  1770 ;;      Temps:          1       0       0       0       0       0       0
  1771 ;;      Totals:         1       0       0       0       0       0       0
  1772 ;;Total ram usage:        1 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    2
  1775 ;; This function calls:
  1776 ;;		_delayMS10
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;;		_init
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text6
  1784  001514                     __ptext6:
  1785                           	opt stack 0
  1786  001514                     _initMCPFout:
  1787                           	opt stack 28
  1788                           
  1789                           ;Current_Sense_Main.c: 439: TRISCbits.TRISC6 = 0;
  1790                           
  1791                           ;incstack = 0
  1792  001514  9C94               	bcf	3988,6,c	;volatile
  1793                           
  1794                           ;Current_Sense_Main.c: 440: TRISCbits.TRISC7 = 0;
  1795  001516  9E94               	bcf	3988,7,c	;volatile
  1796                           
  1797                           ;Current_Sense_Main.c: 441: TRISCbits.TRISC5 = 0;
  1798  001518  9A94               	bcf	3988,5,c	;volatile
  1799                           
  1800                           ;Current_Sense_Main.c: 442: TRISCbits.TRISC3 = 0;
  1801  00151A  9694               	bcf	3988,3,c	;volatile
  1802                           
  1803                           ;Current_Sense_Main.c: 445: LATCbits.LATC7 = 0;
  1804  00151C  9E8B               	bcf	3979,7,c	;volatile
  1805                           
  1806                           ;Current_Sense_Main.c: 446: LATCbits.LATC5 = 0;
  1807  00151E  9A8B               	bcf	3979,5,c	;volatile
  1808                           
  1809                           ;Current_Sense_Main.c: 447: LATCbits.LATC3 = 0;
  1810  001520  968B               	bcf	3979,3,c	;volatile
  1811                           
  1812                           ;Current_Sense_Main.c: 449: _delay((unsigned long)((5)*(16000000/4000.0)));
  1813  001522  0E1A               	movlw	26
  1814  001524  6E18               	movwf	??_initMCPFout& (0+255),c
  1815  001526  0EF8               	movlw	248
  1816  001528                     u2897:
  1817  001528  2EE8               	decfsz	wreg,f,c
  1818  00152A  D7FE               	bra	u2897
  1819  00152C  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1820  00152E  D7FC               	bra	u2897
  1821  001530  D000               	nop2	
  1822                           
  1823                           ;Current_Sense_Main.c: 450: LATCbits.LATC6 = 0;
  1824  001532  9C8B               	bcf	3979,6,c	;volatile
  1825                           
  1826                           ;Current_Sense_Main.c: 451: _delay((unsigned long)((5)*(16000000/4000.0)));
  1827  001534  0E1A               	movlw	26
  1828  001536  6E18               	movwf	??_initMCPFout& (0+255),c
  1829  001538  0EF8               	movlw	248
  1830  00153A                     u2907:
  1831  00153A  2EE8               	decfsz	wreg,f,c
  1832  00153C  D7FE               	bra	u2907
  1833  00153E  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1834  001540  D7FC               	bra	u2907
  1835  001542  D000               	nop2	
  1836                           
  1837                           ;Current_Sense_Main.c: 453: LATCbits.LATC7 = 0;
  1838  001544  9E8B               	bcf	3979,7,c	;volatile
  1839                           
  1840                           ;Current_Sense_Main.c: 454: LATCbits.LATC5 = 0;
  1841  001546  9A8B               	bcf	3979,5,c	;volatile
  1842                           
  1843                           ;Current_Sense_Main.c: 455: LATCbits.LATC3 = 0;
  1844  001548  968B               	bcf	3979,3,c	;volatile
  1845                           
  1846                           ;Current_Sense_Main.c: 457: _delay((unsigned long)((5)*(16000000/4000.0)));
  1847  00154A  0E1A               	movlw	26
  1848  00154C  6E18               	movwf	??_initMCPFout& (0+255),c
  1849  00154E  0EF8               	movlw	248
  1850  001550                     u2917:
  1851  001550  2EE8               	decfsz	wreg,f,c
  1852  001552  D7FE               	bra	u2917
  1853  001554  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1854  001556  D7FC               	bra	u2917
  1855  001558  D000               	nop2	
  1856                           
  1857                           ;Current_Sense_Main.c: 459: LATCbits.LATC7 = 1;
  1858  00155A  8E8B               	bsf	3979,7,c	;volatile
  1859                           
  1860                           ;Current_Sense_Main.c: 460: LATCbits.LATC5 = 1;
  1861  00155C  8A8B               	bsf	3979,5,c	;volatile
  1862                           
  1863                           ;Current_Sense_Main.c: 461: LATCbits.LATC3 = 1;
  1864  00155E  868B               	bsf	3979,3,c	;volatile
  1865                           
  1866                           ;Current_Sense_Main.c: 463: _delay((unsigned long)((5)*(16000000/4000.0)));
  1867  001560  0E1A               	movlw	26
  1868  001562  6E18               	movwf	??_initMCPFout& (0+255),c
  1869  001564  0EF8               	movlw	248
  1870  001566                     u2927:
  1871  001566  2EE8               	decfsz	wreg,f,c
  1872  001568  D7FE               	bra	u2927
  1873  00156A  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1874  00156C  D7FC               	bra	u2927
  1875  00156E  D000               	nop2	
  1876                           
  1877                           ;Current_Sense_Main.c: 464: LATCbits.LATC6 = 1;
  1878  001570  8C8B               	bsf	3979,6,c	;volatile
  1879                           
  1880                           ;Current_Sense_Main.c: 465: delayMS10(10);
  1881  001572  0E00               	movlw	0
  1882  001574  6E14               	movwf	delayMS10@count+1,c
  1883  001576  0E0A               	movlw	10
  1884  001578  6E13               	movwf	delayMS10@count,c
  1885  00157A  ECD2  F00C         	call	_delayMS10	;wreg free
  1886  00157E  0012               	return	
  1887  001580                     __end_of_initMCPFout:
  1888                           	opt stack 0
  1889                           tblptru	equ	0xFF8
  1890                           tblptrh	equ	0xFF7
  1891                           tblptrl	equ	0xFF6
  1892                           tablat	equ	0xFF5
  1893                           intcon	equ	0xFF2
  1894                           postinc0	equ	0xFEE
  1895                           wreg	equ	0xFE8
  1896                           postdec1	equ	0xFE5
  1897                           fsr1l	equ	0xFE1
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _delayMS10 *****************
  1901 ;; Defined at:
  1902 ;;		line 334 in file "Current_Sense_Main.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  count           2   18[COMRAM] int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  inx             2   21[COMRAM] int 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         2       0       0       0       0       0       0
  1917 ;;      Locals:         2       0       0       0       0       0       0
  1918 ;;      Temps:          1       0       0       0       0       0       0
  1919 ;;      Totals:         5       0       0       0       0       0       0
  1920 ;;Total ram usage:        5 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;;		_initMCPFout
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text7
  1932  0019A4                     __ptext7:
  1933                           	opt stack 0
  1934  0019A4                     _delayMS10:
  1935                           	opt stack 28
  1936                           
  1937                           ;Current_Sense_Main.c: 336: for (int inx = 0; inx < count; inx++)
  1938                           
  1939                           ;incstack = 0
  1940  0019A4  0E00               	movlw	0
  1941  0019A6  6E17               	movwf	delayMS10@inx+1,c
  1942  0019A8  0E00               	movlw	0
  1943  0019AA  6E16               	movwf	delayMS10@inx,c
  1944  0019AC  D009               	goto	l169
  1945  0019AE                     
  1946                           ;Current_Sense_Main.c: 337: {
  1947                           ;Current_Sense_Main.c: 339: _delay((unsigned long)((10)*(16000000/4000.0)));
  1948  0019AE  0E34               	movlw	52
  1949  0019B0  6E15               	movwf	??_delayMS10& (0+255),c
  1950  0019B2  0EF2               	movlw	242
  1951  0019B4                     u2937:
  1952  0019B4  2EE8               	decfsz	wreg,f,c
  1953  0019B6  D7FE               	bra	u2937
  1954  0019B8  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1955  0019BA  D7FC               	bra	u2937
  1956  0019BC  4A16               	infsnz	delayMS10@inx,f,c
  1957  0019BE  2A17               	incf	delayMS10@inx+1,f,c
  1958  0019C0                     l169:
  1959  0019C0  5013               	movf	delayMS10@count,w,c
  1960  0019C2  5C16               	subwf	delayMS10@inx,w,c
  1961  0019C4  5017               	movf	delayMS10@inx+1,w,c
  1962  0019C6  0A80               	xorlw	128
  1963  0019C8  6E15               	movwf	??_delayMS10& (0+255),c
  1964  0019CA  5014               	movf	delayMS10@count+1,w,c
  1965  0019CC  0A80               	xorlw	128
  1966  0019CE  5815               	subwfb	??_delayMS10& (0+255),w,c
  1967  0019D0  B0D8               	btfsc	status,0,c
  1968  0019D2  0012               	return	
  1969  0019D4  D7EC               	goto	l170
  1970  0019D6                     __end_of_delayMS10:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           intcon	equ	0xFF2
  1977                           postinc0	equ	0xFEE
  1978                           wreg	equ	0xFE8
  1979                           postdec1	equ	0xFE5
  1980                           fsr1l	equ	0xFE1
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function _initInterruptsClear *****************
  1984 ;; Defined at:
  1985 ;;		line 388 in file "Current_Sense_Main.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1999 ;;      Params:         0       0       0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_init
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text8
  2014  0017F8                     __ptext8:
  2015                           	opt stack 0
  2016  0017F8                     _initInterruptsClear:
  2017                           	opt stack 28
  2018                           
  2019                           ;Current_Sense_Main.c: 391: INTCON = 0b00000000;
  2020                           
  2021                           ;incstack = 0
  2022  0017F8  0E00               	movlw	0
  2023  0017FA  6EF2               	movwf	intcon,c	;volatile
  2024                           
  2025                           ;Current_Sense_Main.c: 392: INTCON2 = 0b00000000;
  2026  0017FC  0E00               	movlw	0
  2027  0017FE  6EF1               	movwf	intcon2,c	;volatile
  2028                           
  2029                           ;Current_Sense_Main.c: 393: INTCON3 = 0b00000000;
  2030  001800  0E00               	movlw	0
  2031  001802  6EF0               	movwf	intcon3,c	;volatile
  2032                           
  2033                           ;Current_Sense_Main.c: 395: RCONbits.IPEN = 0;
  2034  001804  9ED0               	bcf	4048,7,c	;volatile
  2035                           
  2036                           ;Current_Sense_Main.c: 397: PIR1 = 0b00000000;
  2037  001806  0E00               	movlw	0
  2038  001808  6E9E               	movwf	3998,c	;volatile
  2039                           
  2040                           ;Current_Sense_Main.c: 398: PIR2 = 0b00000000;
  2041  00180A  0E00               	movlw	0
  2042  00180C  6EA1               	movwf	4001,c	;volatile
  2043                           
  2044                           ;Current_Sense_Main.c: 399: PIR3 = 0b00000000;
  2045  00180E  0E00               	movlw	0
  2046  001810  6EA4               	movwf	4004,c	;volatile
  2047                           
  2048                           ;Current_Sense_Main.c: 400: PIR4 = 0b00000000;
  2049  001812  0E00               	movlw	0
  2050  001814  6E7B               	movwf	3963,c	;volatile
  2051                           
  2052                           ;Current_Sense_Main.c: 401: PIR5 = 0b00000000;
  2053  001816  0E00               	movlw	0
  2054  001818  6E7E               	movwf	3966,c	;volatile
  2055                           
  2056                           ;Current_Sense_Main.c: 403: PIE1 = 0b00000000;
  2057  00181A  0E00               	movlw	0
  2058  00181C  6E9D               	movwf	3997,c	;volatile
  2059                           
  2060                           ;Current_Sense_Main.c: 404: PIE2 = 0b00000000;
  2061  00181E  0E00               	movlw	0
  2062  001820  6EA0               	movwf	4000,c	;volatile
  2063                           
  2064                           ;Current_Sense_Main.c: 405: PIE3 = 0b00000000;
  2065  001822  0E00               	movlw	0
  2066  001824  6EA3               	movwf	4003,c	;volatile
  2067                           
  2068                           ;Current_Sense_Main.c: 406: PIE4 = 0b00000000;
  2069  001826  0E00               	movlw	0
  2070  001828  6E7A               	movwf	3962,c	;volatile
  2071                           
  2072                           ;Current_Sense_Main.c: 407: PIE5 = 0b00000000;
  2073  00182A  0E00               	movlw	0
  2074  00182C  6E7D               	movwf	3965,c	;volatile
  2075                           
  2076                           ;Current_Sense_Main.c: 409: IPR1 = 0b00000000;
  2077  00182E  0E00               	movlw	0
  2078  001830  6E9F               	movwf	3999,c	;volatile
  2079                           
  2080                           ;Current_Sense_Main.c: 410: IPR2 = 0b00000000;
  2081  001832  0E00               	movlw	0
  2082  001834  6EA2               	movwf	4002,c	;volatile
  2083                           
  2084                           ;Current_Sense_Main.c: 411: IPR3 = 0b00000000;
  2085  001836  0E00               	movlw	0
  2086  001838  6EA5               	movwf	4005,c	;volatile
  2087                           
  2088                           ;Current_Sense_Main.c: 412: IPR4 = 0b00000000;
  2089  00183A  0E00               	movlw	0
  2090  00183C  6E7C               	movwf	3964,c	;volatile
  2091                           
  2092                           ;Current_Sense_Main.c: 413: IPR5 = 0b00000000;
  2093  00183E  0E00               	movlw	0
  2094  001840  6E7F               	movwf	3967,c	;volatile
  2095  001842  0012               	return		;funcret
  2096  001844                     __end_of_initInterruptsClear:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           intcon	equ	0xFF2
  2103                           intcon2	equ	0xFF1
  2104                           intcon3	equ	0xFF0
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1l	equ	0xFE1
  2109                           status	equ	0xFD8
  2110                           
  2111 ;; *************** function _initIO *****************
  2112 ;; Defined at:
  2113 ;;		line 370 in file "Current_Sense_Main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2127 ;;      Params:         0       0       0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_init
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text9
  2142  001AF0                     __ptext9:
  2143                           	opt stack 0
  2144  001AF0                     _initIO:
  2145                           	opt stack 28
  2146                           
  2147                           ;Current_Sense_Main.c: 372: ADCON0bits.ADON = 0;
  2148                           
  2149                           ;incstack = 0
  2150  001AF0  90C2               	bcf	4034,0,c	;volatile
  2151                           
  2152                           ;Current_Sense_Main.c: 373: ANSELA = 0b00000000;
  2153  001AF2  0E00               	movlw	0
  2154  001AF4  010F               	movlb	15	; () banked
  2155  001AF6  6F38               	movwf	56,b	;volatile
  2156                           
  2157                           ;Current_Sense_Main.c: 374: ANSELB = 0b00000000;
  2158  001AF8  0E00               	movlw	0
  2159  001AFA  6F39               	movwf	57,b	;volatile
  2160                           
  2161                           ;Current_Sense_Main.c: 375: ANSELC = 0b00000000;
  2162  001AFC  0E00               	movlw	0
  2163  001AFE  6F3A               	movwf	58,b	;volatile
  2164                           
  2165                           ; BSR set to: 15
  2166                           ;Current_Sense_Main.c: 377: TRISBbits.TRISB4 = 0;
  2167  001B00  9893               	bcf	3987,4,c	;volatile
  2168                           
  2169                           ; BSR set to: 15
  2170                           ;Current_Sense_Main.c: 378: LATBbits.LATB4 = 0;
  2171  001B02  988A               	bcf	3978,4,c	;volatile
  2172                           
  2173                           ; BSR set to: 15
  2174                           ;Current_Sense_Main.c: 380: TRISCbits.TRISC2 = 1;
  2175  001B04  8494               	bsf	3988,2,c	;volatile
  2176                           
  2177                           ; BSR set to: 15
  2178                           ;Current_Sense_Main.c: 381: TRISAbits.TRISA1 = 1;
  2179  001B06  8292               	bsf	3986,1,c	;volatile
  2180                           
  2181                           ; BSR set to: 15
  2182                           ;Current_Sense_Main.c: 382: TRISAbits.TRISA0 = 0;
  2183  001B08  9092               	bcf	3986,0,c	;volatile
  2184                           
  2185                           ; BSR set to: 15
  2186                           ;Current_Sense_Main.c: 383: LATAbits.LATA0 = 0;
  2187  001B0A  9089               	bcf	3977,0,c	;volatile
  2188  001B0C  0012               	return	
  2189  001B0E                     __end_of_initIO:
  2190                           	opt stack 0
  2191                           tblptru	equ	0xFF8
  2192                           tblptrh	equ	0xFF7
  2193                           tblptrl	equ	0xFF6
  2194                           tablat	equ	0xFF5
  2195                           intcon	equ	0xFF2
  2196                           intcon2	equ	0xFF1
  2197                           intcon3	equ	0xFF0
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           postdec1	equ	0xFE5
  2201                           fsr1l	equ	0xFE1
  2202                           status	equ	0xFD8
  2203                           
  2204 ;; *************** function _communications *****************
  2205 ;; Defined at:
  2206 ;;		line 93 in file "SlaveComm_PIC18.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  firstTime       1    wreg     unsigned char 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  firstTime       1   89[BANK0 ] unsigned char 
  2211 ;;  no_more_to_s    1   88[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2221 ;;      Params:         0       0       0       0       0       0       0
  2222 ;;      Locals:         0       2       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0
  2224 ;;      Totals:         0       2       0       0       0       0       0
  2225 ;;Total ram usage:        2 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    9
  2228 ;; This function calls:
  2229 ;;		_SPISlaveInit
  2230 ;;		_process_data
  2231 ;;		_receive_data
  2232 ;;		_resetCommunications
  2233 ;;		_send_data
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text10
  2240  001188                     __ptext10:
  2241                           	opt stack 0
  2242  001188                     _communications:
  2243                           	opt stack 21
  2244                           
  2245                           ; BSR set to: 15
  2246                           ;incstack = 0
  2247                           ;communications@firstTime stored from wreg
  2248  001188  0100               	movlb	0	; () banked
  2249  00118A  6FB9               	movwf	communications@firstTime& (0+255),b
  2250                           
  2251                           ;SlaveComm_PIC18.c: 95: static struct buffer receive_buffer;
  2252                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  2253                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  2254                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  2255                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  2256                           ;SlaveComm_PIC18.c: 104: if (firstTime == 1)
  2257  00118C  0100               	movlb	0	; () banked
  2258  00118E  05B9               	decf	communications@firstTime& (0+255),w,b
  2259  001190  A4D8               	btfss	status,2,c
  2260  001192  D00E               	goto	l277
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;SlaveComm_PIC18.c: 105: {
  2264                           ;SlaveComm_PIC18.c: 106: SPISlaveInit();
  2265  001194  EC6C  F00C         	call	_SPISlaveInit	;wreg free
  2266                           
  2267                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  2268  001198  0E00               	movlw	0
  2269  00119A  0100               	movlb	0	; () banked
  2270  00119C  6FFA               	movwf	(communications@send_buffer+40)& (0+255),b
  2271                           
  2272                           ; BSR set to: 0
  2273                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  2274  00119E  0E00               	movlw	0
  2275  0011A0  6FFB               	movwf	(communications@send_buffer+41)& (0+255),b
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;SlaveComm_PIC18.c: 109: resetCommunications(&send_buffer);
  2279  0011A2  0ED2               	movlw	low communications@send_buffer
  2280  0011A4  6F7C               	movwf	resetCommunications@send_buffer& (0+255),b
  2281  0011A6  0E00               	movlw	high communications@send_buffer
  2282  0011A8  6F7D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2283  0011AA  EC68  F009         	call	_resetCommunications	;wreg free
  2284                           
  2285                           ;SlaveComm_PIC18.c: 110: }
  2286  0011AE  0012               	return	
  2287  0011B0                     l277:
  2288                           
  2289                           ;SlaveComm_PIC18.c: 111: else
  2290                           ;SlaveComm_PIC18.c: 112: {
  2291                           ;SlaveComm_PIC18.c: 113: receive_current_state = receive_data(&receive_buffer);
  2292  0011B0  0E00               	movlw	low communications@receive_buffer
  2293  0011B2  6E16               	movwf	receive_data@receive_buffer,c
  2294  0011B4  0E01               	movlw	high communications@receive_buffer
  2295  0011B6  6E17               	movwf	receive_data@receive_buffer+1,c
  2296  0011B8  EC0B  F008         	call	_receive_data	;wreg free
  2297  0011BC  0100               	movlb	0	; () banked
  2298  0011BE  6FD0               	movwf	communications@receive_current_state& (0+255),b
  2299                           
  2300                           ;SlaveComm_PIC18.c: 115: switch (receive_current_state)
  2301  0011C0  D011               	goto	l279
  2302  0011C2                     
  2303                           ; BSR set to: 0
  2304                           ;SlaveComm_PIC18.c: 125: if (process_data(&receive_buffer, &send_buffer) == 1)
  2305                           
  2306                           ; BSR set to: 0
  2307  0011C2  0E00               	movlw	low communications@receive_buffer
  2308  0011C4  6F81               	movwf	process_data@receive_buffer& (0+255),b
  2309  0011C6  0E01               	movlw	high communications@receive_buffer
  2310  0011C8  6F82               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2311  0011CA  0ED2               	movlw	low communications@send_buffer
  2312  0011CC  6F83               	movwf	process_data@send_buffer& (0+255),b
  2313  0011CE  0E00               	movlw	high communications@send_buffer
  2314  0011D0  6F84               	movwf	(process_data@send_buffer+1)& (0+255),b
  2315  0011D2  ECEB  F00C         	call	_process_data	;wreg free
  2316  0011D6  06E8               	decf	wreg,f,c
  2317  0011D8  A4D8               	btfss	status,2,c
  2318  0011DA  D00E               	goto	l281
  2319                           
  2320                           ;SlaveComm_PIC18.c: 126: {
  2321                           ;SlaveComm_PIC18.c: 127: end_of_transmission_received = 1;
  2322  0011DC  0E01               	movlw	1
  2323  0011DE  0100               	movlb	0	; () banked
  2324  0011E0  6FD1               	movwf	communications@end_of_transmission_received& (0+255),b
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;SlaveComm_PIC18.c: 131: }
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;SlaveComm_PIC18.c: 128: }
  2331                           ;SlaveComm_PIC18.c: 130: break;
  2332  0011E2  D00A               	goto	l281
  2333  0011E4                     l279:
  2334                           
  2335                           ; BSR set to: 0
  2336                           
  2337                           ; BSR set to: 0
  2338  0011E4  51D0               	movf	communications@receive_current_state& (0+255),w,b
  2339                           
  2340                           ; Switch size 1, requested type "space"
  2341                           ; Number of cases is 3, Range of values is 0 to 2
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           10     6 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346  0011E6  0A00               	xorlw	0	; case 0
  2347  0011E8  B4D8               	btfsc	status,2,c
  2348  0011EA  D006               	goto	l281
  2349  0011EC  0A01               	xorlw	1	; case 1
  2350  0011EE  B4D8               	btfsc	status,2,c
  2351  0011F0  D003               	goto	l281
  2352  0011F2  0A03               	xorlw	3	; case 2
  2353  0011F4  B4D8               	btfsc	status,2,c
  2354  0011F6  D7E5               	goto	l283
  2355  0011F8                     l281:
  2356                           
  2357                           ;SlaveComm_PIC18.c: 133: no_more_to_send = send_data(&send_buffer);
  2358                           
  2359                           ; BSR set to: 0
  2360  0011F8  0ED2               	movlw	low communications@send_buffer
  2361  0011FA  6E15               	movwf	send_data@send_buffer,c
  2362  0011FC  0E00               	movlw	high communications@send_buffer
  2363  0011FE  6E16               	movwf	send_data@send_buffer+1,c
  2364  001200  EC01  F00A         	call	_send_data	;wreg free
  2365  001204  0100               	movlb	0	; () banked
  2366  001206  6FB8               	movwf	communications@no_more_to_send& (0+255),b
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;SlaveComm_PIC18.c: 136: static bool last_state_active = 0;
  2370                           ;SlaveComm_PIC18.c: 137: if (PORTBbits.SS2 == 0b1)
  2371  001208  A081               	btfss	3969,0,c	;volatile
  2372  00120A  D003               	goto	l287
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;SlaveComm_PIC18.c: 138: {
  2376                           ;SlaveComm_PIC18.c: 139: last_state_active = 0;
  2377  00120C  0E00               	movlw	0
  2378  00120E  6FCF               	movwf	communications@last_state_active& (0+255),b
  2379                           
  2380                           ;SlaveComm_PIC18.c: 140: }
  2381  001210  0012               	return	
  2382  001212                     l287:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;SlaveComm_PIC18.c: 141: else
  2386                           ;SlaveComm_PIC18.c: 142: {
  2387                           ;SlaveComm_PIC18.c: 143: if (last_state_active == 0)
  2388                           
  2389                           ; BSR set to: 0
  2390  001212  51CF               	movf	communications@last_state_active& (0+255),w,b
  2391  001214  A4D8               	btfss	status,2,c
  2392  001216  D006               	goto	l289
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;SlaveComm_PIC18.c: 144: {
  2396                           ;SlaveComm_PIC18.c: 145: resetCommunications(&send_buffer);
  2397  001218  0ED2               	movlw	low communications@send_buffer
  2398  00121A  6F7C               	movwf	resetCommunications@send_buffer& (0+255),b
  2399  00121C  0E00               	movlw	high communications@send_buffer
  2400  00121E  6F7D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2401  001220  EC68  F009         	call	_resetCommunications	;wreg free
  2402  001224                     l289:
  2403                           
  2404                           ;SlaveComm_PIC18.c: 146: }
  2405                           ;SlaveComm_PIC18.c: 148: last_state_active = 1;
  2406  001224  0E01               	movlw	1
  2407  001226  0100               	movlb	0	; () banked
  2408  001228  6FCF               	movwf	communications@last_state_active& (0+255),b
  2409                           
  2410                           ; BSR set to: 0
  2411                           
  2412                           ; BSR set to: 0
  2413  00122A  0012               	return	
  2414  00122C                     __end_of_communications:
  2415                           	opt stack 0
  2416                           tblptru	equ	0xFF8
  2417                           tblptrh	equ	0xFF7
  2418                           tblptrl	equ	0xFF6
  2419                           tablat	equ	0xFF5
  2420                           intcon	equ	0xFF2
  2421                           intcon2	equ	0xFF1
  2422                           intcon3	equ	0xFF0
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1l	equ	0xFE1
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _send_data *****************
  2430 ;; Defined at:
  2431 ;;		line 503 in file "SlaveComm_PIC18.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2434 ;;		 -> communications@send_buffer(42), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  send_end        1   24[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2446 ;;      Params:         2       0       0       0       0       0       0
  2447 ;;      Locals:         1       0       0       0       0       0       0
  2448 ;;      Temps:          2       0       0       0       0       0       0
  2449 ;;      Totals:         5       0       0       0       0       0       0
  2450 ;;Total ram usage:        5 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    2
  2453 ;; This function calls:
  2454 ;;		_SPI_send_data
  2455 ;; This function is called by:
  2456 ;;		_communications
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text11
  2461  001402                     __ptext11:
  2462                           	opt stack 0
  2463  001402                     _send_data:
  2464                           	opt stack 27
  2465                           
  2466                           ;SlaveComm_PIC18.c: 505: bool send_end;
  2467                           ;SlaveComm_PIC18.c: 507: if (send_buffer->read_position == send_buffer->write_position)
  2468                           
  2469                           ;incstack = 0
  2470  001402  EE20 F028          	lfsr	2,40
  2471  001406  5015               	movf	send_data@send_buffer,w,c
  2472  001408  26D9               	addwf	fsr2l,f,c
  2473  00140A  5016               	movf	send_data@send_buffer+1,w,c
  2474  00140C  22DA               	addwfc	fsr2h,f,c
  2475  00140E  EE10 F029          	lfsr	1,41
  2476  001412  5015               	movf	send_data@send_buffer,w,c
  2477  001414  26E1               	addwf	fsr1l,f,c
  2478  001416  5016               	movf	send_data@send_buffer+1,w,c
  2479  001418  22E2               	addwfc	fsr1h,f,c
  2480  00141A  50DE               	movf	postinc2,w,c
  2481  00141C  18E6               	xorwf	postinc1,w,c
  2482  00141E  A4D8               	btfss	status,2,c
  2483  001420  D006               	goto	l390
  2484                           
  2485                           ;SlaveComm_PIC18.c: 508: {
  2486                           ;SlaveComm_PIC18.c: 509: send_end = 1;
  2487  001422  0E01               	movlw	1
  2488  001424  6E19               	movwf	send_data@send_end,c
  2489                           
  2490                           ;SlaveComm_PIC18.c: 510: SPI_send_data('\0');
  2491  001426  0E00               	movlw	0
  2492  001428  EC68  F00D         	call	_SPI_send_data
  2493                           
  2494                           ;SlaveComm_PIC18.c: 511: }
  2495  00142C  D030               	goto	l393
  2496  00142E                     l390:
  2497                           
  2498                           ;SlaveComm_PIC18.c: 512: else
  2499                           ;SlaveComm_PIC18.c: 513: {
  2500                           ;SlaveComm_PIC18.c: 514: send_end = 0;
  2501  00142E  0E00               	movlw	0
  2502  001430  6E19               	movwf	send_data@send_end,c
  2503                           
  2504                           ;SlaveComm_PIC18.c: 517: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2505  001432  EE20 F029          	lfsr	2,41
  2506  001436  5015               	movf	send_data@send_buffer,w,c
  2507  001438  26D9               	addwf	fsr2l,f,c
  2508  00143A  5016               	movf	send_data@send_buffer+1,w,c
  2509  00143C  22DA               	addwfc	fsr2h,f,c
  2510  00143E  50DF               	movf	indf2,w,c
  2511  001440  6E17               	movwf	??_send_data& (0+255),c
  2512  001442  5017               	movf	??_send_data,w,c
  2513  001444  0D01               	mullw	1
  2514  001446  50F3               	movf	prodl,w,c
  2515  001448  2415               	addwf	send_data@send_buffer,w,c
  2516  00144A  6ED9               	movwf	fsr2l,c
  2517  00144C  50F4               	movf	prodh,w,c
  2518  00144E  2016               	addwfc	send_data@send_buffer+1,w,c
  2519  001450  6EDA               	movwf	fsr2h,c
  2520  001452  50DF               	movf	indf2,w,c
  2521  001454  EC68  F00D         	call	_SPI_send_data
  2522  001458  06E8               	decf	wreg,f,c
  2523  00145A  A4D8               	btfss	status,2,c
  2524  00145C  D018               	goto	l393
  2525                           
  2526                           ;SlaveComm_PIC18.c: 518: {
  2527                           ;SlaveComm_PIC18.c: 520: send_buffer->read_position++;
  2528  00145E  EE20 F029          	lfsr	2,41
  2529  001462  5015               	movf	send_data@send_buffer,w,c
  2530  001464  26D9               	addwf	fsr2l,f,c
  2531  001466  5016               	movf	send_data@send_buffer+1,w,c
  2532  001468  22DA               	addwfc	fsr2h,f,c
  2533  00146A  2ADF               	incf	indf2,f,c
  2534                           
  2535                           ;SlaveComm_PIC18.c: 521: if (send_buffer->read_position >= 40)
  2536  00146C  EE20 F029          	lfsr	2,41
  2537  001470  5015               	movf	send_data@send_buffer,w,c
  2538  001472  26D9               	addwf	fsr2l,f,c
  2539  001474  5016               	movf	send_data@send_buffer+1,w,c
  2540  001476  22DA               	addwfc	fsr2h,f,c
  2541  001478  0E27               	movlw	39
  2542  00147A  64DF               	cpfsgt	indf2,c
  2543  00147C  D008               	goto	l393
  2544                           
  2545                           ;SlaveComm_PIC18.c: 522: {
  2546                           ;SlaveComm_PIC18.c: 523: send_buffer->read_position = 0;
  2547  00147E  EE20 F029          	lfsr	2,41
  2548  001482  5015               	movf	send_data@send_buffer,w,c
  2549  001484  26D9               	addwf	fsr2l,f,c
  2550  001486  5016               	movf	send_data@send_buffer+1,w,c
  2551  001488  22DA               	addwfc	fsr2h,f,c
  2552  00148A  0E00               	movlw	0
  2553  00148C  6EDF               	movwf	indf2,c
  2554  00148E                     l393:
  2555                           
  2556                           ;SlaveComm_PIC18.c: 524: }
  2557                           ;SlaveComm_PIC18.c: 525: }
  2558                           ;SlaveComm_PIC18.c: 526: }
  2559                           ;SlaveComm_PIC18.c: 528: return send_end;
  2560  00148E  5019               	movf	send_data@send_end,w,c
  2561  001490  0012               	return	
  2562  001492                     __end_of_send_data:
  2563                           	opt stack 0
  2564                           tblptru	equ	0xFF8
  2565                           tblptrh	equ	0xFF7
  2566                           tblptrl	equ	0xFF6
  2567                           tablat	equ	0xFF5
  2568                           prodh	equ	0xFF4
  2569                           prodl	equ	0xFF3
  2570                           intcon	equ	0xFF2
  2571                           intcon2	equ	0xFF1
  2572                           intcon3	equ	0xFF0
  2573                           postinc0	equ	0xFEE
  2574                           wreg	equ	0xFE8
  2575                           postinc1	equ	0xFE6
  2576                           postdec1	equ	0xFE5
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           fsr2h	equ	0xFDA
  2582                           fsr2l	equ	0xFD9
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function _SPI_send_data *****************
  2586 ;; Defined at:
  2587 ;;		line 601 in file "SlaveComm_PIC18.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  data            1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  data            1   18[COMRAM] unsigned char 
  2592 ;;  sendGood        1   19[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      unsigned char 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2602 ;;      Params:         0       0       0       0       0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0
  2605 ;;      Totals:         2       0       0       0       0       0       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_send_data
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text12
  2617  001AD0                     __ptext12:
  2618                           	opt stack 0
  2619  001AD0                     _SPI_send_data:
  2620                           	opt stack 27
  2621                           
  2622                           ;incstack = 0
  2623                           ;SPI_send_data@data stored from wreg
  2624  001AD0  6E13               	movwf	SPI_send_data@data,c
  2625                           
  2626                           ;SlaveComm_PIC18.c: 603: bool sendGood = 0;
  2627  001AD2  0E00               	movlw	0
  2628  001AD4  6E14               	movwf	SPI_send_data@sendGood,c
  2629                           
  2630                           ;SlaveComm_PIC18.c: 605: if (SPI_transmit_wait == 0)
  2631  001AD6  503E               	movf	_SPI_transmit_wait,w,c
  2632  001AD8  A4D8               	btfss	status,2,c
  2633  001ADA  D006               	goto	l421
  2634                           
  2635                           ;SlaveComm_PIC18.c: 606: {
  2636                           ;SlaveComm_PIC18.c: 607: SSP2BUF = data;
  2637  001ADC  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2638                           
  2639                           ;SlaveComm_PIC18.c: 608: SPI_transmit_wait = 1;
  2640  001AE0  0E01               	movlw	1
  2641  001AE2  6E3E               	movwf	_SPI_transmit_wait,c
  2642                           
  2643                           ;SlaveComm_PIC18.c: 609: sendGood = 1;
  2644  001AE4  0E01               	movlw	1
  2645  001AE6  D001               	goto	L1
  2646  001AE8                     l421:
  2647                           
  2648                           ;SlaveComm_PIC18.c: 611: else
  2649                           ;SlaveComm_PIC18.c: 612: {
  2650                           ;SlaveComm_PIC18.c: 613: sendGood = 0;
  2651  001AE8  0E00               	movlw	0
  2652  001AEA                     L1:
  2653  001AEA  6E14               	movwf	SPI_send_data@sendGood,c
  2654                           
  2655                           ;SlaveComm_PIC18.c: 614: }
  2656                           ;SlaveComm_PIC18.c: 616: return sendGood;
  2657  001AEC  5014               	movf	SPI_send_data@sendGood,w,c
  2658  001AEE  0012               	return	
  2659  001AF0                     __end_of_SPI_send_data:
  2660                           	opt stack 0
  2661                           tblptru	equ	0xFF8
  2662                           tblptrh	equ	0xFF7
  2663                           tblptrl	equ	0xFF6
  2664                           tablat	equ	0xFF5
  2665                           prodh	equ	0xFF4
  2666                           prodl	equ	0xFF3
  2667                           intcon	equ	0xFF2
  2668                           intcon2	equ	0xFF1
  2669                           intcon3	equ	0xFF0
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           postinc1	equ	0xFE6
  2673                           postdec1	equ	0xFE5
  2674                           fsr1h	equ	0xFE2
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           postinc2	equ	0xFDE
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _resetCommunications *****************
  2683 ;; Defined at:
  2684 ;;		line 156 in file "SlaveComm_PIC18.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  send_buffer     2   28[BANK0 ] PTR struct buffer
  2687 ;;		 -> communications@send_buffer(42), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       2       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          0       2       0       0       0       0       0
  2702 ;;      Totals:         0       4       0       0       0       0       0
  2703 ;;Total ram usage:        4 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    7
  2706 ;; This function calls:
  2707 ;;		_com_command_setEnergyUsed
  2708 ;;		_com_command_setPower
  2709 ;;		_com_command_setVersion
  2710 ;; This function is called by:
  2711 ;;		_communications
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text13
  2716  0012D0                     __ptext13:
  2717                           	opt stack 0
  2718  0012D0                     _resetCommunications:
  2719                           	opt stack 22
  2720                           
  2721                           ;SlaveComm_PIC18.c: 159: static int commState = 0;
  2722                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.SSPEN = 0;
  2723                           
  2724                           ;incstack = 0
  2725  0012D0  9A6C               	bcf	3948,5,c	;volatile
  2726                           
  2727                           ;SlaveComm_PIC18.c: 163: _delay((unsigned long)((1)*(16000000/4000.0)));
  2728  0012D2  0E06               	movlw	6
  2729  0012D4  0100               	movlb	0	; () banked
  2730  0012D6  6F7E               	movwf	??_resetCommunications& (0+255),b
  2731  0012D8  0E30               	movlw	48
  2732  0012DA                     u2947:
  2733  0012DA  2EE8               	decfsz	wreg,f,c
  2734  0012DC  D7FE               	bra	u2947
  2735  0012DE  2F7E               	decfsz	??_resetCommunications& (0+255),f,b
  2736  0012E0  D7FC               	bra	u2947
  2737  0012E2  F000               	nop	
  2738                           
  2739                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 1;
  2740  0012E4  8A6C               	bsf	3948,5,c	;volatile
  2741                           
  2742                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.WCOL = 0;
  2743  0012E6  9E6C               	bcf	3948,7,c	;volatile
  2744                           
  2745                           ;SlaveComm_PIC18.c: 167: SPI_transmit_wait = 0;
  2746  0012E8  0E00               	movlw	0
  2747  0012EA  6E3E               	movwf	_SPI_transmit_wait,c
  2748                           
  2749                           ;SlaveComm_PIC18.c: 169: send_buffer->read_position = 0;
  2750  0012EC  0100               	movlb	0	; () banked
  2751  0012EE  EE20 F029          	lfsr	2,41
  2752  0012F2  517C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2753  0012F4  26D9               	addwf	fsr2l,f,c
  2754  0012F6  517D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2755  0012F8  22DA               	addwfc	fsr2h,f,c
  2756  0012FA  0E00               	movlw	0
  2757  0012FC  6EDF               	movwf	indf2,c
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;SlaveComm_PIC18.c: 170: send_buffer->write_position = 0;
  2761  0012FE  EE20 F028          	lfsr	2,40
  2762  001302  517C               	movf	resetCommunications@send_buffer& (0+255),w,b
  2763  001304  26D9               	addwf	fsr2l,f,c
  2764  001306  517D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2765  001308  22DA               	addwfc	fsr2h,f,c
  2766  00130A  0E00               	movlw	0
  2767  00130C  6EDF               	movwf	indf2,c
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;SlaveComm_PIC18.c: 175: commState++;
  2771  00130E  4A3B               	infsnz	resetCommunications@commState,f,c
  2772  001310  2A3C               	incf	resetCommunications@commState+1,f,c
  2773                           
  2774                           ;SlaveComm_PIC18.c: 176: switch (commState)
  2775  001312  D019               	goto	l295
  2776  001314                     
  2777                           ; BSR set to: 0
  2778                           ;SlaveComm_PIC18.c: 179: com_command_setVersion(send_buffer);
  2779                           
  2780                           ; BSR set to: 0
  2781  001314  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2782  001318  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2783  00131C  EC30  F00D         	call	_com_command_setVersion	;wreg free
  2784                           
  2785                           ;SlaveComm_PIC18.c: 180: break;
  2786  001320  0012               	return	
  2787  001322                     
  2788                           ;SlaveComm_PIC18.c: 182: com_command_setPower(send_buffer);
  2789  001322  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2790  001326  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2791  00132A  EC22  F00C         	call	_com_command_setPower	;wreg free
  2792                           
  2793                           ;SlaveComm_PIC18.c: 183: break;
  2794  00132E  0012               	return	
  2795  001330                     
  2796                           ;SlaveComm_PIC18.c: 185: com_command_setEnergyUsed(send_buffer);
  2797  001330  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2798  001334  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2799  001338  EC47  F00C         	call	_com_command_setEnergyUsed	;wreg free
  2800  00133C                     
  2801                           ;SlaveComm_PIC18.c: 197: commState = 0;
  2802  00133C  0E00               	movlw	0
  2803  00133E  6E3C               	movwf	resetCommunications@commState+1,c
  2804  001340  0E00               	movlw	0
  2805  001342  6E3B               	movwf	resetCommunications@commState,c
  2806                           
  2807                           ;SlaveComm_PIC18.c: 199: }
  2808                           
  2809                           ;SlaveComm_PIC18.c: 198: break;
  2810  001344  0012               	return	
  2811  001346                     l295:
  2812  001346  C03B  F07E         	movff	resetCommunications@commState,??_resetCommunications
  2813  00134A  C03C  F07F         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2814                           
  2815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2816                           ; Switch size 1, requested type "space"
  2817                           ; Number of cases is 1, Range of values is 0 to 0
  2818                           ; switch strategies available:
  2819                           ; Name         Instructions Cycles
  2820                           ; simple_byte            4     3 (average)
  2821                           ;	Chosen strategy is simple_byte
  2822  00134E  0100               	movlb	0	; () banked
  2823  001350  517F               	movf	(??_resetCommunications+1)& (0+255),w,b
  2824  001352  0A00               	xorlw	0	; case 0
  2825  001354  A4D8               	btfss	status,2,c
  2826  001356  D7F2               	goto	l300
  2827                           
  2828                           ; BSR set to: 0
  2829                           ; Switch size 1, requested type "space"
  2830                           ; Number of cases is 3, Range of values is 1 to 3
  2831                           ; switch strategies available:
  2832                           ; Name         Instructions Cycles
  2833                           ; simple_byte           10     6 (average)
  2834                           ;	Chosen strategy is simple_byte
  2835  001358  517E               	movf	??_resetCommunications& (0+255),w,b
  2836  00135A  0A01               	xorlw	1	; case 1
  2837  00135C  B4D8               	btfsc	status,2,c
  2838  00135E  D7DA               	goto	l296
  2839  001360  0A03               	xorlw	3	; case 2
  2840  001362  B4D8               	btfsc	status,2,c
  2841  001364  D7DE               	goto	l298
  2842  001366  0A01               	xorlw	1	; case 3
  2843  001368  B4D8               	btfsc	status,2,c
  2844  00136A  D7E2               	goto	l299
  2845  00136C  D7E7               	goto	l300
  2846  00136E                     __end_of_resetCommunications:
  2847                           	opt stack 0
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           intcon	equ	0xFF2
  2855                           intcon2	equ	0xFF1
  2856                           intcon3	equ	0xFF0
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postinc1	equ	0xFE6
  2860                           postdec1	equ	0xFE5
  2861                           fsr1h	equ	0xFE2
  2862                           fsr1l	equ	0xFE1
  2863                           indf2	equ	0xFDF
  2864                           postinc2	equ	0xFDE
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _com_command_setVersion *****************
  2870 ;; Defined at:
  2871 ;;		line 681 in file "SlaveComm_PIC18.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  2874 ;;		 -> communications@send_buffer(42), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2886 ;;      Params:         2       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0
  2889 ;;      Totals:         2       0       0       0       0       0       0
  2890 ;;Total ram usage:        2 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    6
  2893 ;; This function calls:
  2894 ;;		_command_builder3
  2895 ;; This function is called by:
  2896 ;;		_resetCommunications
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text14
  2901  001A60                     __ptext14:
  2902                           	opt stack 0
  2903  001A60                     _com_command_setVersion:
  2904                           	opt stack 22
  2905                           
  2906                           ;SlaveComm_PIC18.c: 683: command_builder3(send_buffer, "Set", "PSVersion", "444");
  2907                           
  2908                           ;incstack = 0
  2909  001A60  C039  F02F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2910  001A64  C03A  F030         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2911  001A68  0E57               	movlw	low STR_2
  2912  001A6A  6E31               	movwf	command_builder3@data1,c
  2913  001A6C  0E06               	movlw	high STR_2
  2914  001A6E  6E32               	movwf	command_builder3@data1+1,c
  2915  001A70  0E0D               	movlw	low STR_22
  2916  001A72  6E33               	movwf	command_builder3@data2,c
  2917  001A74  0E06               	movlw	high STR_22
  2918  001A76  6E34               	movwf	command_builder3@data2+1,c
  2919  001A78  0E4B               	movlw	low STR_40
  2920  001A7A  6E35               	movwf	command_builder3@data3,c
  2921  001A7C  0E06               	movlw	high STR_40
  2922  001A7E  6E36               	movwf	command_builder3@data3+1,c
  2923  001A80  EC6B  F008         	call	_command_builder3	;wreg free
  2924  001A84  0012               	return		;funcret
  2925  001A86                     __end_of_com_command_setVersion:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           intcon2	equ	0xFF1
  2935                           intcon3	equ	0xFF0
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           postinc1	equ	0xFE6
  2939                           postdec1	equ	0xFE5
  2940                           fsr1h	equ	0xFE2
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           postinc2	equ	0xFDE
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _com_command_setPower *****************
  2949 ;; Defined at:
  2950 ;;		line 636 in file "SlaveComm_PIC18.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  2953 ;;		 -> communications@send_buffer(42), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  temp           12   16[BANK0 ] unsigned char [12]
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         2       0       0       0       0       0       0
  2966 ;;      Locals:         0      12       0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0
  2968 ;;      Totals:         2      12       0       0       0       0       0
  2969 ;;Total ram usage:       14 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    6
  2972 ;; This function calls:
  2973 ;;		_command_builder3
  2974 ;;		_ultoa
  2975 ;; This function is called by:
  2976 ;;		_resetCommunications
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text15
  2981  001844                     __ptext15:
  2982                           	opt stack 0
  2983  001844                     _com_command_setPower:
  2984                           	opt stack 22
  2985                           
  2986                           ;SlaveComm_PIC18.c: 639: char temp[12];
  2987                           ;SlaveComm_PIC18.c: 641: ultoa(temp, meterWatts, 10);
  2988                           
  2989                           ;incstack = 0
  2990  001844  0E70               	movlw	low com_command_setPower@temp
  2991  001846  6E20               	movwf	ultoa@buf,c
  2992  001848  0E00               	movlw	high com_command_setPower@temp
  2993  00184A  6E21               	movwf	ultoa@buf+1,c
  2994  00184C  C0CB  F022         	movff	_meterWatts,ultoa@val
  2995  001850  C0CC  F023         	movff	_meterWatts+1,ultoa@val+1
  2996  001854  C0CD  F024         	movff	_meterWatts+2,ultoa@val+2
  2997  001858  C0CE  F025         	movff	_meterWatts+3,ultoa@val+3
  2998  00185C  0E00               	movlw	0
  2999  00185E  6E27               	movwf	ultoa@base+1,c
  3000  001860  0E0A               	movlw	10
  3001  001862  6E26               	movwf	ultoa@base,c
  3002  001864  ECB6  F006         	call	_ultoa	;wreg free
  3003                           
  3004                           ;SlaveComm_PIC18.c: 642: command_builder3(send_buffer, "Set", "Watts", temp);
  3005  001868  C039  F02F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3006  00186C  C03A  F030         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3007  001870  0E57               	movlw	low STR_2
  3008  001872  6E31               	movwf	command_builder3@data1,c
  3009  001874  0E06               	movlw	high STR_2
  3010  001876  6E32               	movwf	command_builder3@data1+1,c
  3011  001878  0E24               	movlw	low STR_18
  3012  00187A  6E33               	movwf	command_builder3@data2,c
  3013  00187C  0E06               	movlw	high STR_18
  3014  00187E  6E34               	movwf	command_builder3@data2+1,c
  3015  001880  0E70               	movlw	low com_command_setPower@temp
  3016  001882  6E35               	movwf	command_builder3@data3,c
  3017  001884  0E00               	movlw	high com_command_setPower@temp
  3018  001886  6E36               	movwf	command_builder3@data3+1,c
  3019  001888  EC6B  F008         	call	_command_builder3	;wreg free
  3020  00188C  0012               	return	
  3021  00188E                     __end_of_com_command_setPower:
  3022                           	opt stack 0
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           prodh	equ	0xFF4
  3028                           prodl	equ	0xFF3
  3029                           intcon	equ	0xFF2
  3030                           intcon2	equ	0xFF1
  3031                           intcon3	equ	0xFF0
  3032                           postinc0	equ	0xFEE
  3033                           wreg	equ	0xFE8
  3034                           postinc1	equ	0xFE6
  3035                           postdec1	equ	0xFE5
  3036                           fsr1h	equ	0xFE2
  3037                           fsr1l	equ	0xFE1
  3038                           indf2	equ	0xFDF
  3039                           postinc2	equ	0xFDE
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044 ;; *************** function _receive_data *****************
  3045 ;; Defined at:
  3046 ;;		line 203 in file "SlaveComm_PIC18.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3049 ;;		 -> communications@receive_buffer(42), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  data            1   24[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      enum E6751
  3054 ;; Registers used:
  3055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3061 ;;      Params:         2       0       0       0       0       0       0
  3062 ;;      Locals:         1       0       0       0       0       0       0
  3063 ;;      Temps:          1       0       0       0       0       0       0
  3064 ;;      Totals:         4       0       0       0       0       0       0
  3065 ;;Total ram usage:        4 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    2
  3068 ;; This function calls:
  3069 ;;		_SPI_receive_data
  3070 ;; This function is called by:
  3071 ;;		_communications
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text16
  3076  001016                     __ptext16:
  3077                           	opt stack 0
  3078  001016                     _receive_data:
  3079                           	opt stack 27
  3080                           
  3081                           ;SlaveComm_PIC18.c: 205: char data;
  3082                           ;SlaveComm_PIC18.c: 207: static enum receive_status my_status = receive_waiting;
  3083                           ;SlaveComm_PIC18.c: 209: if (my_status == receive_end_command)
  3084                           
  3085                           ;incstack = 0
  3086  001016  0E02               	movlw	2
  3087  001018  183D               	xorwf	receive_data@my_status,w,c
  3088  00101A  A4D8               	btfss	status,2,c
  3089  00101C  D002               	goto	l306
  3090                           
  3091                           ;SlaveComm_PIC18.c: 210: {
  3092                           ;SlaveComm_PIC18.c: 211: my_status = receive_waiting;
  3093  00101E  0E00               	movlw	0
  3094  001020  6E3D               	movwf	receive_data@my_status,c
  3095  001022                     l306:
  3096                           
  3097                           ;SlaveComm_PIC18.c: 212: }
  3098                           ;SlaveComm_PIC18.c: 214: if (SPI_receive_data(&data) == 1)
  3099  001022  0E19               	movlw	low receive_data@data
  3100  001024  6E13               	movwf	SPI_receive_data@data,c
  3101  001026  0E00               	movlw	high receive_data@data
  3102  001028  6E14               	movwf	SPI_receive_data@data+1,c
  3103  00102A  EC1C  F00D         	call	_SPI_receive_data	;wreg free
  3104  00102E  06E8               	decf	wreg,f,c
  3105  001030  A4D8               	btfss	status,2,c
  3106  001032  D04F               	goto	l311
  3107                           
  3108                           ;SlaveComm_PIC18.c: 215: {
  3109                           ;SlaveComm_PIC18.c: 216: if ((data == '!') && (my_status != receive_in_command))
  3110  001034  0E21               	movlw	33
  3111  001036  1819               	xorwf	receive_data@data,w,c
  3112  001038  A4D8               	btfss	status,2,c
  3113  00103A  D015               	goto	l308
  3114  00103C  043D               	decf	receive_data@my_status,w,c
  3115  00103E  B4D8               	btfsc	status,2,c
  3116  001040  D012               	goto	l308
  3117                           
  3118                           ;SlaveComm_PIC18.c: 217: {
  3119                           ;SlaveComm_PIC18.c: 218: my_status = receive_in_command;
  3120  001042  0E01               	movlw	1
  3121  001044  6E3D               	movwf	receive_data@my_status,c
  3122                           
  3123                           ;SlaveComm_PIC18.c: 219: receive_buffer->read_position = 0;
  3124  001046  EE20 F029          	lfsr	2,41
  3125  00104A  5016               	movf	receive_data@receive_buffer,w,c
  3126  00104C  26D9               	addwf	fsr2l,f,c
  3127  00104E  5017               	movf	receive_data@receive_buffer+1,w,c
  3128  001050  22DA               	addwfc	fsr2h,f,c
  3129  001052  0E00               	movlw	0
  3130  001054  6EDF               	movwf	indf2,c
  3131                           
  3132                           ;SlaveComm_PIC18.c: 220: receive_buffer->write_position = 0;
  3133  001056  EE20 F028          	lfsr	2,40
  3134  00105A  5016               	movf	receive_data@receive_buffer,w,c
  3135  00105C  26D9               	addwf	fsr2l,f,c
  3136  00105E  5017               	movf	receive_data@receive_buffer+1,w,c
  3137  001060  22DA               	addwfc	fsr2h,f,c
  3138  001062  0E00               	movlw	0
  3139  001064  6EDF               	movwf	indf2,c
  3140  001066                     l308:
  3141                           
  3142                           ;SlaveComm_PIC18.c: 221: }
  3143                           ;SlaveComm_PIC18.c: 223: if (my_status == receive_in_command)
  3144  001066  043D               	decf	receive_data@my_status,w,c
  3145  001068  A4D8               	btfss	status,2,c
  3146  00106A  D02A               	goto	l310
  3147                           
  3148                           ;SlaveComm_PIC18.c: 224: {
  3149                           ;SlaveComm_PIC18.c: 225: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3150  00106C  EE20 F028          	lfsr	2,40
  3151  001070  5016               	movf	receive_data@receive_buffer,w,c
  3152  001072  26D9               	addwf	fsr2l,f,c
  3153  001074  5017               	movf	receive_data@receive_buffer+1,w,c
  3154  001076  22DA               	addwfc	fsr2h,f,c
  3155  001078  50DF               	movf	indf2,w,c
  3156  00107A  6E18               	movwf	??_receive_data& (0+255),c
  3157  00107C  5018               	movf	??_receive_data,w,c
  3158  00107E  0D01               	mullw	1
  3159  001080  50F3               	movf	prodl,w,c
  3160  001082  2416               	addwf	receive_data@receive_buffer,w,c
  3161  001084  6ED9               	movwf	fsr2l,c
  3162  001086  50F4               	movf	prodh,w,c
  3163  001088  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3164  00108A  6EDA               	movwf	fsr2h,c
  3165  00108C  C019  FFDF         	movff	receive_data@data,indf2
  3166                           
  3167                           ;SlaveComm_PIC18.c: 227: receive_buffer->write_position++;
  3168  001090  EE20 F028          	lfsr	2,40
  3169  001094  5016               	movf	receive_data@receive_buffer,w,c
  3170  001096  26D9               	addwf	fsr2l,f,c
  3171  001098  5017               	movf	receive_data@receive_buffer+1,w,c
  3172  00109A  22DA               	addwfc	fsr2h,f,c
  3173  00109C  2ADF               	incf	indf2,f,c
  3174                           
  3175                           ;SlaveComm_PIC18.c: 228: if (receive_buffer->write_position >= 40)
  3176  00109E  EE20 F028          	lfsr	2,40
  3177  0010A2  5016               	movf	receive_data@receive_buffer,w,c
  3178  0010A4  26D9               	addwf	fsr2l,f,c
  3179  0010A6  5017               	movf	receive_data@receive_buffer+1,w,c
  3180  0010A8  22DA               	addwfc	fsr2h,f,c
  3181  0010AA  0E27               	movlw	39
  3182  0010AC  64DF               	cpfsgt	indf2,c
  3183  0010AE  D008               	goto	l310
  3184                           
  3185                           ;SlaveComm_PIC18.c: 229: {
  3186                           ;SlaveComm_PIC18.c: 230: receive_buffer->write_position = (40 - 1);
  3187  0010B0  EE20 F028          	lfsr	2,40
  3188  0010B4  5016               	movf	receive_data@receive_buffer,w,c
  3189  0010B6  26D9               	addwf	fsr2l,f,c
  3190  0010B8  5017               	movf	receive_data@receive_buffer+1,w,c
  3191  0010BA  22DA               	addwfc	fsr2h,f,c
  3192  0010BC  0E27               	movlw	39
  3193  0010BE  6EDF               	movwf	indf2,c
  3194  0010C0                     l310:
  3195                           
  3196                           ;SlaveComm_PIC18.c: 231: }
  3197                           ;SlaveComm_PIC18.c: 232: }
  3198                           ;SlaveComm_PIC18.c: 234: if ((my_status == receive_in_command) && (data == '*'))
  3199  0010C0  043D               	decf	receive_data@my_status,w,c
  3200  0010C2  A4D8               	btfss	status,2,c
  3201  0010C4  D006               	goto	l311
  3202  0010C6  0E2A               	movlw	42
  3203  0010C8  1819               	xorwf	receive_data@data,w,c
  3204  0010CA  A4D8               	btfss	status,2,c
  3205  0010CC  D002               	goto	l311
  3206                           
  3207                           ;SlaveComm_PIC18.c: 235: {
  3208                           ;SlaveComm_PIC18.c: 236: my_status = receive_end_command;
  3209  0010CE  0E02               	movlw	2
  3210  0010D0  6E3D               	movwf	receive_data@my_status,c
  3211  0010D2                     l311:
  3212                           
  3213                           ;SlaveComm_PIC18.c: 237: }
  3214                           ;SlaveComm_PIC18.c: 238: }
  3215                           ;SlaveComm_PIC18.c: 240: return my_status;
  3216  0010D2  503D               	movf	receive_data@my_status,w,c
  3217  0010D4  0012               	return	
  3218  0010D6                     __end_of_receive_data:
  3219                           	opt stack 0
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           intcon	equ	0xFF2
  3227                           intcon2	equ	0xFF1
  3228                           intcon3	equ	0xFF0
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           postinc1	equ	0xFE6
  3232                           postdec1	equ	0xFE5
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           postinc2	equ	0xFDE
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function _SPI_receive_data *****************
  3242 ;; Defined at:
  3243 ;;		line 580 in file "SlaveComm_PIC18.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  data            2   18[COMRAM] PTR unsigned char 
  3246 ;;		 -> receive_data@data(1), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  recvGood        1   20[COMRAM] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      unsigned char 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr2l, fsr2h, status,2
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3258 ;;      Params:         2       0       0       0       0       0       0
  3259 ;;      Locals:         1       0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0
  3261 ;;      Totals:         3       0       0       0       0       0       0
  3262 ;;Total ram usage:        3 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_receive_data
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text17
  3273  001A38                     __ptext17:
  3274                           	opt stack 0
  3275  001A38                     _SPI_receive_data:
  3276                           	opt stack 27
  3277                           
  3278                           ;SlaveComm_PIC18.c: 583: bool recvGood = 0;
  3279                           
  3280                           ;incstack = 0
  3281  001A38  0E00               	movlw	0
  3282  001A3A  6E15               	movwf	SPI_receive_data@recvGood,c
  3283                           
  3284                           ;SlaveComm_PIC18.c: 585: if (SSP2STATbits.BF == 1)
  3285  001A3C  A06D               	btfss	3949,0,c	;volatile
  3286  001A3E  D00C               	goto	l416
  3287                           
  3288                           ;SlaveComm_PIC18.c: 586: {
  3289                           ;SlaveComm_PIC18.c: 587: *data = SSP2BUF;
  3290  001A40  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3291  001A44  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3292  001A48  CF6F FFDF          	movff	3951,indf2	;volatile
  3293                           
  3294                           ;SlaveComm_PIC18.c: 588: recvGood = 1;
  3295  001A4C  0E01               	movlw	1
  3296  001A4E  6E15               	movwf	SPI_receive_data@recvGood,c
  3297                           
  3298                           ;SlaveComm_PIC18.c: 589: SSP2CON1bits.WCOL = 0;
  3299  001A50  9E6C               	bcf	3948,7,c	;volatile
  3300                           
  3301                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 0;
  3302  001A52  0E00               	movlw	0
  3303  001A54  6E3E               	movwf	_SPI_transmit_wait,c
  3304                           
  3305                           ;SlaveComm_PIC18.c: 591: }
  3306  001A56  D002               	goto	l417
  3307  001A58                     l416:
  3308                           
  3309                           ;SlaveComm_PIC18.c: 592: else
  3310                           ;SlaveComm_PIC18.c: 593: {
  3311                           ;SlaveComm_PIC18.c: 594: recvGood = 0;
  3312  001A58  0E00               	movlw	0
  3313  001A5A  6E15               	movwf	SPI_receive_data@recvGood,c
  3314  001A5C                     l417:
  3315                           
  3316                           ;SlaveComm_PIC18.c: 595: }
  3317                           ;SlaveComm_PIC18.c: 597: return recvGood;
  3318  001A5C  5015               	movf	SPI_receive_data@recvGood,w,c
  3319  001A5E  0012               	return	
  3320  001A60                     __end_of_SPI_receive_data:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           intcon	equ	0xFF2
  3329                           intcon2	equ	0xFF1
  3330                           intcon3	equ	0xFF0
  3331                           postinc0	equ	0xFEE
  3332                           wreg	equ	0xFE8
  3333                           postinc1	equ	0xFE6
  3334                           postdec1	equ	0xFE5
  3335                           fsr1h	equ	0xFE2
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           postinc2	equ	0xFDE
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _process_data *****************
  3344 ;; Defined at:
  3345 ;;		line 243 in file "SlaveComm_PIC18.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  receive_buff    2   33[BANK0 ] PTR struct buffer
  3348 ;;		 -> communications@receive_buffer(42), 
  3349 ;;  send_buffer     2   35[BANK0 ] PTR struct buffer
  3350 ;;		 -> communications@send_buffer(42), 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  parameters     50   37[BANK0 ] unsigned char [10][5]
  3353 ;;  end_of_trans    1   87[BANK0 ] unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      unsigned char 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         0       4       0       0       0       0       0
  3364 ;;      Locals:         0      51       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0
  3366 ;;      Totals:         0      55       0       0       0       0       0
  3367 ;;Total ram usage:       55 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    8
  3370 ;; This function calls:
  3371 ;;		_process_data_parameterize
  3372 ;;		_process_data_parameters
  3373 ;; This function is called by:
  3374 ;;		_communications
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text18
  3379  0019D6                     __ptext18:
  3380                           	opt stack 0
  3381  0019D6                     _process_data:
  3382                           	opt stack 21
  3383                           
  3384                           ;SlaveComm_PIC18.c: 245: bool end_of_transmission_received;
  3385                           ;SlaveComm_PIC18.c: 250: char parameters[5][10];
  3386                           ;SlaveComm_PIC18.c: 252: process_data_parameterize(parameters, receive_buffer);
  3387                           
  3388                           ;incstack = 0
  3389  0019D6  0E85               	movlw	low process_data@parameters
  3390  0019D8  6E19               	movwf	process_data_parameterize@parameters,c
  3391  0019DA  0E00               	movlw	high process_data@parameters
  3392  0019DC  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3393  0019DE  C081  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3394  0019E2  C082  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3395  0019E6  EC60  F005         	call	_process_data_parameterize	;wreg free
  3396                           
  3397                           ;SlaveComm_PIC18.c: 254: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3398  0019EA  0E85               	movlw	low process_data@parameters
  3399  0019EC  0100               	movlb	0	; () banked
  3400  0019EE  6F7C               	movwf	process_data_parameters@parameters& (0+255),b
  3401  0019F0  0E00               	movlw	high process_data@parameters
  3402  0019F2  6F7D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3403  0019F4  C083  F07E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3404  0019F8  C084  F07F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3405  0019FC  EC30  F003         	call	_process_data_parameters	;wreg free
  3406  001A00  0100               	movlb	0	; () banked
  3407  001A02  6FB7               	movwf	process_data@end_of_transmission_received& (0+255),b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;SlaveComm_PIC18.c: 256: return end_of_transmission_received;
  3411  001A04  51B7               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3412  001A06  0012               	return	
  3413  001A08                     __end_of_process_data:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           intcon2	equ	0xFF1
  3423                           intcon3	equ	0xFF0
  3424                           postinc0	equ	0xFEE
  3425                           wreg	equ	0xFE8
  3426                           postinc1	equ	0xFE6
  3427                           postdec1	equ	0xFE5
  3428                           fsr1h	equ	0xFE2
  3429                           fsr1l	equ	0xFE1
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _process_data_parameters *****************
  3437 ;; Defined at:
  3438 ;;		line 319 in file "SlaveComm_PIC18.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  parameters      2   28[BANK0 ] PTR unsigned char [10]
  3441 ;;		 -> process_data@parameters(50), 
  3442 ;;  send_buffer     2   30[BANK0 ] PTR struct buffer
  3443 ;;		 -> communications@send_buffer(42), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  end_of_trans    1   32[BANK0 ] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       4       0       0       0       0       0
  3456 ;;      Locals:         0       1       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         0       5       0       0       0       0       0
  3459 ;;Total ram usage:        5 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    7
  3462 ;; This function calls:
  3463 ;;		_atol
  3464 ;;		_com_command_setEnergyUsed
  3465 ;;		_command_builder3
  3466 ;;		_send_end_of_transmission
  3467 ;;		_strmatch
  3468 ;; This function is called by:
  3469 ;;		_process_data
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text19
  3474  000660                     __ptext19:
  3475                           	opt stack 0
  3476  000660                     _process_data_parameters:
  3477                           	opt stack 21
  3478                           
  3479                           ;SlaveComm_PIC18.c: 321: bool end_of_transmission_received = 0;
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;incstack = 0
  3483  000660  0E00               	movlw	0
  3484  000662  0100               	movlb	0	; () banked
  3485  000664  6F80               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;SlaveComm_PIC18.c: 324: if (strmatch(parameters[0], "END") == 1)
  3489  000666  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3490  00066A  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3491  00066E  0E4F               	movlw	low STR_1
  3492  000670  6E20               	movwf	strmatch@b,c
  3493  000672  0E06               	movlw	high STR_1
  3494  000674  6E21               	movwf	strmatch@b+1,c
  3495  000676  EC04  F00D         	call	_strmatch	;wreg free
  3496  00067A  06E8               	decf	wreg,f,c
  3497  00067C  A4D8               	btfss	status,2,c
  3498  00067E  D004               	goto	l335
  3499                           
  3500                           ;SlaveComm_PIC18.c: 325: {
  3501                           ;SlaveComm_PIC18.c: 335: end_of_transmission_received = 1;
  3502  000680  0E01               	movlw	1
  3503  000682  0100               	movlb	0	; () banked
  3504  000684  6F80               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  3505                           
  3506                           ;SlaveComm_PIC18.c: 336: }
  3507  000686  D14B               	goto	l361
  3508  000688                     l335:
  3509                           
  3510                           ;SlaveComm_PIC18.c: 337: else if (strmatch(parameters[0], "Set") == 1)
  3511                           
  3512                           ; BSR set to: 0
  3513  000688  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3514  00068C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3515  000690  0E57               	movlw	low STR_2
  3516  000692  6E20               	movwf	strmatch@b,c
  3517  000694  0E06               	movlw	high STR_2
  3518  000696  6E21               	movwf	strmatch@b+1,c
  3519  000698  EC04  F00D         	call	_strmatch	;wreg free
  3520  00069C  06E8               	decf	wreg,f,c
  3521  00069E  A4D8               	btfss	status,2,c
  3522  0006A0  D038               	goto	l337
  3523                           
  3524                           ;SlaveComm_PIC18.c: 338: {
  3525                           ;SlaveComm_PIC18.c: 339: if (strmatch(parameters[1], "Calibration") == 1)
  3526  0006A2  0E0A               	movlw	10
  3527  0006A4  0100               	movlb	0	; () banked
  3528  0006A6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3529  0006A8  6E1E               	movwf	strmatch@a,c
  3530  0006AA  0E00               	movlw	0
  3531  0006AC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3532  0006AE  6E1F               	movwf	strmatch@a+1,c
  3533  0006B0  0E01               	movlw	low STR_3
  3534  0006B2  6E20               	movwf	strmatch@b,c
  3535  0006B4  0E06               	movlw	high STR_3
  3536  0006B6  6E21               	movwf	strmatch@b+1,c
  3537  0006B8  EC04  F00D         	call	_strmatch	;wreg free
  3538  0006BC  06E8               	decf	wreg,f,c
  3539  0006BE  B4D8               	btfsc	status,2,c
  3540  0006C0  D12E               	goto	l361
  3541                           
  3542                           ;SlaveComm_PIC18.c: 343: else if (strmatch(parameters[1], "EnUsed") == 1)
  3543                           
  3544                           ;SlaveComm_PIC18.c: 340: {
  3545                           ;SlaveComm_PIC18.c: 342: }
  3546  0006C2  0E0A               	movlw	10
  3547  0006C4  0100               	movlb	0	; () banked
  3548  0006C6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3549  0006C8  6E1E               	movwf	strmatch@a,c
  3550  0006CA  0E00               	movlw	0
  3551  0006CC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3552  0006CE  6E1F               	movwf	strmatch@a+1,c
  3553  0006D0  0E17               	movlw	low STR_4
  3554  0006D2  6E20               	movwf	strmatch@b,c
  3555  0006D4  0E06               	movlw	high STR_4
  3556  0006D6  6E21               	movwf	strmatch@b+1,c
  3557  0006D8  EC04  F00D         	call	_strmatch	;wreg free
  3558  0006DC  06E8               	decf	wreg,f,c
  3559  0006DE  A4D8               	btfss	status,2,c
  3560  0006E0  D11E               	goto	l361
  3561                           
  3562                           ;SlaveComm_PIC18.c: 344: {
  3563                           ;SlaveComm_PIC18.c: 349: meterEnergyUsed = atol(parameters[2]);
  3564  0006E2  0E14               	movlw	20
  3565  0006E4  0100               	movlb	0	; () banked
  3566  0006E6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3567  0006E8  6E1F               	movwf	atol@s,c
  3568  0006EA  0E00               	movlw	0
  3569  0006EC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3570  0006EE  6E20               	movwf	atol@s+1,c
  3571  0006F0  EC31  F007         	call	_atol	;wreg free
  3572  0006F4  C01F  F0C7         	movff	?_atol,_meterEnergyUsed
  3573  0006F8  C020  F0C8         	movff	?_atol+1,_meterEnergyUsed+1
  3574  0006FC  C021  F0C9         	movff	?_atol+2,_meterEnergyUsed+2
  3575  000700  C022  F0CA         	movff	?_atol+3,_meterEnergyUsed+3
  3576                           
  3577                           ;SlaveComm_PIC18.c: 350: com_command_setEnergyUsed(send_buffer);
  3578  000704  C07E  F039         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3579  000708  C07F  F03A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3580  00070C  EC47  F00C         	call	_com_command_setEnergyUsed	;wreg free
  3581                           
  3582                           ;SlaveComm_PIC18.c: 351: }
  3583                           ;SlaveComm_PIC18.c: 356: }
  3584  000710  D106               	goto	l361
  3585  000712                     l337:
  3586                           
  3587                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Read") == 1)
  3588  000712  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3589  000716  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3590  00071A  0E34               	movlw	low STR_5
  3591  00071C  6E20               	movwf	strmatch@b,c
  3592  00071E  0E06               	movlw	high STR_5
  3593  000720  6E21               	movwf	strmatch@b+1,c
  3594  000722  EC04  F00D         	call	_strmatch	;wreg free
  3595  000726  06E8               	decf	wreg,f,c
  3596  000728  B4D8               	btfsc	status,2,c
  3597  00072A  D0F9               	goto	l361
  3598                           
  3599                           ;SlaveComm_PIC18.c: 361: else if (strmatch(parameters[0], "Data") == 1)
  3600                           
  3601                           ;SlaveComm_PIC18.c: 358: {
  3602                           ;SlaveComm_PIC18.c: 360: }
  3603  00072C  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3604  000730  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3605  000734  0E2F               	movlw	low STR_6
  3606  000736  6E20               	movwf	strmatch@b,c
  3607  000738  0E06               	movlw	high STR_6
  3608  00073A  6E21               	movwf	strmatch@b+1,c
  3609  00073C  EC04  F00D         	call	_strmatch	;wreg free
  3610  000740  06E8               	decf	wreg,f,c
  3611  000742  A4D8               	btfss	status,2,c
  3612  000744  D056               	goto	l344
  3613                           
  3614                           ;SlaveComm_PIC18.c: 362: {
  3615                           ;SlaveComm_PIC18.c: 363: if (strmatch(parameters[1], "LEDB") == 1)
  3616  000746  0E0A               	movlw	10
  3617  000748  0100               	movlb	0	; () banked
  3618  00074A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3619  00074C  6E1E               	movwf	strmatch@a,c
  3620  00074E  0E00               	movlw	0
  3621  000750  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3622  000752  6E1F               	movwf	strmatch@a+1,c
  3623  000754  0E2A               	movlw	low STR_7
  3624  000756  6E20               	movwf	strmatch@b,c
  3625  000758  0E06               	movlw	high STR_7
  3626  00075A  6E21               	movwf	strmatch@b+1,c
  3627  00075C  EC04  F00D         	call	_strmatch	;wreg free
  3628  000760  06E8               	decf	wreg,f,c
  3629  000762  A4D8               	btfss	status,2,c
  3630  000764  D0DC               	goto	l361
  3631                           
  3632                           ;SlaveComm_PIC18.c: 364: {
  3633                           ;SlaveComm_PIC18.c: 365: if (strmatch(parameters[2], "On") == 1)
  3634  000766  0E14               	movlw	20
  3635  000768  0100               	movlb	0	; () banked
  3636  00076A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3637  00076C  6E1E               	movwf	strmatch@a,c
  3638  00076E  0E00               	movlw	0
  3639  000770  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3640  000772  6E1F               	movwf	strmatch@a+1,c
  3641  000774  0E5B               	movlw	low STR_8
  3642  000776  6E20               	movwf	strmatch@b,c
  3643  000778  0E06               	movlw	high STR_8
  3644  00077A  6E21               	movwf	strmatch@b+1,c
  3645  00077C  EC04  F00D         	call	_strmatch	;wreg free
  3646  000780  06E8               	decf	wreg,f,c
  3647  000782  A4D8               	btfss	status,2,c
  3648  000784  D013               	goto	l346
  3649                           
  3650                           ;SlaveComm_PIC18.c: 366: {
  3651                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3652  000786  C07E  F02F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3653  00078A  C07F  F030         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3654  00078E  0E57               	movlw	low STR_2
  3655  000790  6E31               	movwf	command_builder3@data1,c
  3656  000792  0E06               	movlw	high STR_2
  3657  000794  6E32               	movwf	command_builder3@data1+1,c
  3658  000796  0E2A               	movlw	low STR_7
  3659  000798  6E33               	movwf	command_builder3@data2,c
  3660  00079A  0E06               	movlw	high STR_7
  3661  00079C  6E34               	movwf	command_builder3@data2+1,c
  3662  00079E  0E53               	movlw	low STR_11
  3663  0007A0  6E35               	movwf	command_builder3@data3,c
  3664  0007A2  0E06               	movlw	high STR_11
  3665  0007A4  6E36               	movwf	command_builder3@data3+1,c
  3666  0007A6  EC6B  F008         	call	_command_builder3	;wreg free
  3667                           
  3668                           ;SlaveComm_PIC18.c: 368: }
  3669  0007AA  D0B9               	goto	l361
  3670  0007AC                     l346:
  3671                           
  3672                           ;SlaveComm_PIC18.c: 369: else if (strmatch(parameters[2], "Off") == 1)
  3673  0007AC  0E14               	movlw	20
  3674  0007AE  0100               	movlb	0	; () banked
  3675  0007B0  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3676  0007B2  6E1E               	movwf	strmatch@a,c
  3677  0007B4  0E00               	movlw	0
  3678  0007B6  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3679  0007B8  6E1F               	movwf	strmatch@a+1,c
  3680  0007BA  0E53               	movlw	low STR_11
  3681  0007BC  6E20               	movwf	strmatch@b,c
  3682  0007BE  0E06               	movlw	high STR_11
  3683  0007C0  6E21               	movwf	strmatch@b+1,c
  3684  0007C2  EC04  F00D         	call	_strmatch	;wreg free
  3685  0007C6  06E8               	decf	wreg,f,c
  3686  0007C8  A4D8               	btfss	status,2,c
  3687  0007CA  D0A9               	goto	l361
  3688                           
  3689                           ;SlaveComm_PIC18.c: 370: {
  3690                           ;SlaveComm_PIC18.c: 371: command_builder3(send_buffer, "Set", "LEDB", "On");
  3691  0007CC  C07E  F02F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3692  0007D0  C07F  F030         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3693  0007D4  0E57               	movlw	low STR_2
  3694  0007D6  6E31               	movwf	command_builder3@data1,c
  3695  0007D8  0E06               	movlw	high STR_2
  3696  0007DA  6E32               	movwf	command_builder3@data1+1,c
  3697  0007DC  0E2A               	movlw	low STR_7
  3698  0007DE  6E33               	movwf	command_builder3@data2,c
  3699  0007E0  0E06               	movlw	high STR_7
  3700  0007E2  6E34               	movwf	command_builder3@data2+1,c
  3701  0007E4  0E5B               	movlw	low STR_8
  3702  0007E6  6E35               	movwf	command_builder3@data3,c
  3703  0007E8  0E06               	movlw	high STR_8
  3704  0007EA  6E36               	movwf	command_builder3@data3+1,c
  3705  0007EC  EC6B  F008         	call	_command_builder3	;wreg free
  3706                           
  3707                           ;SlaveComm_PIC18.c: 372: }
  3708                           ;SlaveComm_PIC18.c: 373: }
  3709                           ;SlaveComm_PIC18.c: 374: }
  3710  0007F0  D096               	goto	l361
  3711  0007F2                     l344:
  3712                           
  3713                           ;SlaveComm_PIC18.c: 375: else if (strmatch(parameters[0], "Conf") == 1)
  3714  0007F2  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3715  0007F6  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3716  0007FA  0E39               	movlw	low STR_16
  3717  0007FC  6E20               	movwf	strmatch@b,c
  3718  0007FE  0E06               	movlw	high STR_16
  3719  000800  6E21               	movwf	strmatch@b+1,c
  3720  000802  EC04  F00D         	call	_strmatch	;wreg free
  3721  000806  06E8               	decf	wreg,f,c
  3722  000808  A4D8               	btfss	status,2,c
  3723  00080A  D089               	goto	l361
  3724                           
  3725                           ;SlaveComm_PIC18.c: 376: {
  3726                           ;SlaveComm_PIC18.c: 377: if (strmatch(parameters[1], "LEDB") == 1)
  3727  00080C  0E0A               	movlw	10
  3728  00080E  0100               	movlb	0	; () banked
  3729  000810  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3730  000812  6E1E               	movwf	strmatch@a,c
  3731  000814  0E00               	movlw	0
  3732  000816  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3733  000818  6E1F               	movwf	strmatch@a+1,c
  3734  00081A  0E2A               	movlw	low STR_7
  3735  00081C  6E20               	movwf	strmatch@b,c
  3736  00081E  0E06               	movlw	high STR_7
  3737  000820  6E21               	movwf	strmatch@b+1,c
  3738  000822  EC04  F00D         	call	_strmatch	;wreg free
  3739  000826  06E8               	decf	wreg,f,c
  3740  000828  A4D8               	btfss	status,2,c
  3741  00082A  D007               	goto	l351
  3742                           
  3743                           ;SlaveComm_PIC18.c: 378: {
  3744                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  3745  00082C  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3746  000830  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3747  000834  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3748                           
  3749                           ;SlaveComm_PIC18.c: 380: }
  3750  000838  D072               	goto	l361
  3751  00083A                     l351:
  3752                           
  3753                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "Watts") == 1)
  3754  00083A  0E0A               	movlw	10
  3755  00083C  0100               	movlb	0	; () banked
  3756  00083E  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3757  000840  6E1E               	movwf	strmatch@a,c
  3758  000842  0E00               	movlw	0
  3759  000844  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3760  000846  6E1F               	movwf	strmatch@a+1,c
  3761  000848  0E24               	movlw	low STR_18
  3762  00084A  6E20               	movwf	strmatch@b,c
  3763  00084C  0E06               	movlw	high STR_18
  3764  00084E  6E21               	movwf	strmatch@b+1,c
  3765  000850  EC04  F00D         	call	_strmatch	;wreg free
  3766  000854  06E8               	decf	wreg,f,c
  3767  000856  A4D8               	btfss	status,2,c
  3768  000858  D007               	goto	l353
  3769                           
  3770                           ;SlaveComm_PIC18.c: 382: {
  3771                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  3772  00085A  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3773  00085E  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3774  000862  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3775                           
  3776                           ;SlaveComm_PIC18.c: 384: }
  3777  000866  D05B               	goto	l361
  3778  000868                     l353:
  3779                           
  3780                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "EnUsed") == 1)
  3781  000868  0E0A               	movlw	10
  3782  00086A  0100               	movlb	0	; () banked
  3783  00086C  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3784  00086E  6E1E               	movwf	strmatch@a,c
  3785  000870  0E00               	movlw	0
  3786  000872  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3787  000874  6E1F               	movwf	strmatch@a+1,c
  3788  000876  0E17               	movlw	low STR_4
  3789  000878  6E20               	movwf	strmatch@b,c
  3790  00087A  0E06               	movlw	high STR_4
  3791  00087C  6E21               	movwf	strmatch@b+1,c
  3792  00087E  EC04  F00D         	call	_strmatch	;wreg free
  3793  000882  06E8               	decf	wreg,f,c
  3794  000884  A4D8               	btfss	status,2,c
  3795  000886  D007               	goto	l355
  3796                           
  3797                           ;SlaveComm_PIC18.c: 386: {
  3798                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  3799  000888  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3800  00088C  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3801  000890  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3802                           
  3803                           ;SlaveComm_PIC18.c: 388: }
  3804  000894  D044               	goto	l361
  3805  000896                     l355:
  3806                           
  3807                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Volts") == 1)
  3808  000896  0E0A               	movlw	10
  3809  000898  0100               	movlb	0	; () banked
  3810  00089A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3811  00089C  6E1E               	movwf	strmatch@a,c
  3812  00089E  0E00               	movlw	0
  3813  0008A0  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3814  0008A2  6E1F               	movwf	strmatch@a+1,c
  3815  0008A4  0E1E               	movlw	low STR_20
  3816  0008A6  6E20               	movwf	strmatch@b,c
  3817  0008A8  0E06               	movlw	high STR_20
  3818  0008AA  6E21               	movwf	strmatch@b+1,c
  3819  0008AC  EC04  F00D         	call	_strmatch	;wreg free
  3820  0008B0  06E8               	decf	wreg,f,c
  3821  0008B2  A4D8               	btfss	status,2,c
  3822  0008B4  D007               	goto	l357
  3823                           
  3824                           ;SlaveComm_PIC18.c: 390: {
  3825                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  3826  0008B6  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3827  0008BA  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3828  0008BE  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3829                           
  3830                           ;SlaveComm_PIC18.c: 392: }
  3831  0008C2  D02D               	goto	l361
  3832  0008C4                     l357:
  3833                           
  3834                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "Amps") == 1)
  3835  0008C4  0E0A               	movlw	10
  3836  0008C6  0100               	movlb	0	; () banked
  3837  0008C8  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3838  0008CA  6E1E               	movwf	strmatch@a,c
  3839  0008CC  0E00               	movlw	0
  3840  0008CE  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3841  0008D0  6E1F               	movwf	strmatch@a+1,c
  3842  0008D2  0E3E               	movlw	low STR_21
  3843  0008D4  6E20               	movwf	strmatch@b,c
  3844  0008D6  0E06               	movlw	high STR_21
  3845  0008D8  6E21               	movwf	strmatch@b+1,c
  3846  0008DA  EC04  F00D         	call	_strmatch	;wreg free
  3847  0008DE  06E8               	decf	wreg,f,c
  3848  0008E0  A4D8               	btfss	status,2,c
  3849  0008E2  D007               	goto	l359
  3850                           
  3851                           ;SlaveComm_PIC18.c: 394: {
  3852                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  3853  0008E4  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3854  0008E8  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3855  0008EC  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3856                           
  3857                           ;SlaveComm_PIC18.c: 396: }
  3858  0008F0  D016               	goto	l361
  3859  0008F2                     l359:
  3860                           
  3861                           ;SlaveComm_PIC18.c: 397: else if (strmatch(parameters[1], "PSVersion") == 1)
  3862  0008F2  0E0A               	movlw	10
  3863  0008F4  0100               	movlb	0	; () banked
  3864  0008F6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  3865  0008F8  6E1E               	movwf	strmatch@a,c
  3866  0008FA  0E00               	movlw	0
  3867  0008FC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3868  0008FE  6E1F               	movwf	strmatch@a+1,c
  3869  000900  0E0D               	movlw	low STR_22
  3870  000902  6E20               	movwf	strmatch@b,c
  3871  000904  0E06               	movlw	high STR_22
  3872  000906  6E21               	movwf	strmatch@b+1,c
  3873  000908  EC04  F00D         	call	_strmatch	;wreg free
  3874  00090C  06E8               	decf	wreg,f,c
  3875  00090E  A4D8               	btfss	status,2,c
  3876  000910  D006               	goto	l361
  3877                           
  3878                           ;SlaveComm_PIC18.c: 398: {
  3879                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission(send_buffer);
  3880  000912  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3881  000916  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3882  00091A  ECAE  F00D         	call	_send_end_of_transmission	;wreg free
  3883  00091E                     l361:
  3884                           
  3885                           ;SlaveComm_PIC18.c: 400: }
  3886                           ;SlaveComm_PIC18.c: 401: }
  3887                           ;SlaveComm_PIC18.c: 407: return end_of_transmission_received;
  3888  00091E  0100               	movlb	0	; () banked
  3889  000920  5180               	movf	process_data_parameters@end_of_transmission_received& (0+255),w,b
  3890  000922  0012               	return	
  3891  000924                     __end_of_process_data_parameters:
  3892                           	opt stack 0
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           intcon2	equ	0xFF1
  3901                           intcon3	equ	0xFF0
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           postinc1	equ	0xFE6
  3905                           postdec1	equ	0xFE5
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function _strmatch *****************
  3915 ;; Defined at:
  3916 ;;		line 531 in file "SlaveComm_PIC18.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  a               2   29[COMRAM] PTR unsigned char 
  3919 ;;		 -> process_data@parameters(50), 
  3920 ;;  b               2   31[COMRAM] PTR unsigned char 
  3921 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3922 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3923 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3924 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  result          2   33[COMRAM] int 
  3927 ;;  match           1   35[COMRAM] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         4       0       0       0       0       0       0
  3938 ;;      Locals:         3       0       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0
  3940 ;;      Totals:         7       0       0       0       0       0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    2
  3944 ;; This function calls:
  3945 ;;		_strcmp2
  3946 ;; This function is called by:
  3947 ;;		_process_data_parameters
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text20
  3952  001A08                     __ptext20:
  3953                           	opt stack 0
  3954  001A08                     _strmatch:
  3955                           	opt stack 25
  3956                           
  3957                           ;SlaveComm_PIC18.c: 533: int result;
  3958                           ;SlaveComm_PIC18.c: 534: bool match;
  3959                           ;SlaveComm_PIC18.c: 536: result = strcmp2(a, b);
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;incstack = 0
  3963  001A08  C01E  F013         	movff	strmatch@a,strcmp2@a
  3964  001A0C  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3965  001A10  C020  F015         	movff	strmatch@b,strcmp2@b
  3966  001A14  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3967  001A18  EC20  F006         	call	_strcmp2	;wreg free
  3968  001A1C  C013  F022         	movff	?_strcmp2,strmatch@result
  3969  001A20  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3970                           
  3971                           ;SlaveComm_PIC18.c: 538: match = (result == 0) ? 1 : 0;
  3972  001A24  5022               	movf	strmatch@result,w,c
  3973  001A26  1023               	iorwf	strmatch@result+1,w,c
  3974  001A28  A4D8               	btfss	status,2,c
  3975  001A2A  D002               	goto	u2450
  3976  001A2C  0E01               	movlw	1
  3977  001A2E  D001               	goto	u2460
  3978  001A30                     u2450:
  3979  001A30  0E00               	movlw	0
  3980  001A32                     u2460:
  3981  001A32  6E24               	movwf	strmatch@match,c
  3982                           
  3983                           ;SlaveComm_PIC18.c: 540: return match;
  3984  001A34  5024               	movf	strmatch@match,w,c
  3985  001A36  0012               	return	
  3986  001A38                     __end_of_strmatch:
  3987                           	opt stack 0
  3988                           tblptru	equ	0xFF8
  3989                           tblptrh	equ	0xFF7
  3990                           tblptrl	equ	0xFF6
  3991                           tablat	equ	0xFF5
  3992                           prodh	equ	0xFF4
  3993                           prodl	equ	0xFF3
  3994                           intcon	equ	0xFF2
  3995                           intcon2	equ	0xFF1
  3996                           intcon3	equ	0xFF0
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           postinc1	equ	0xFE6
  4000                           postdec1	equ	0xFE5
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           fsr2h	equ	0xFDA
  4006                           fsr2l	equ	0xFD9
  4007                           status	equ	0xFD8
  4008                           
  4009 ;; *************** function _strcmp2 *****************
  4010 ;; Defined at:
  4011 ;;		line 543 in file "SlaveComm_PIC18.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  a               2   18[COMRAM] PTR unsigned char 
  4014 ;;		 -> process_data@parameters(50), 
  4015 ;;  b               2   20[COMRAM] PTR unsigned char 
  4016 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4017 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4018 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4019 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  inx             2   27[COMRAM] int 
  4022 ;;  match           2   25[COMRAM] int 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  2   18[COMRAM] int 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4032 ;;      Params:         4       0       0       0       0       0       0
  4033 ;;      Locals:         4       0       0       0       0       0       0
  4034 ;;      Temps:          3       0       0       0       0       0       0
  4035 ;;      Totals:        11       0       0       0       0       0       0
  4036 ;;Total ram usage:       11 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_strmatch
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text21
  4047  000C40                     __ptext21:
  4048                           	opt stack 0
  4049  000C40                     _strcmp2:
  4050                           	opt stack 25
  4051                           
  4052                           ;SlaveComm_PIC18.c: 545: int inx = 0;
  4053                           
  4054                           ;incstack = 0
  4055  000C40  0E00               	movlw	0
  4056  000C42  6E1D               	movwf	strcmp2@inx+1,c
  4057  000C44  0E00               	movlw	0
  4058  000C46  6E1C               	movwf	strcmp2@inx,c
  4059                           
  4060                           ;SlaveComm_PIC18.c: 546: int match = 0;
  4061  000C48  0E00               	movlw	0
  4062  000C4A  6E1B               	movwf	strcmp2@match+1,c
  4063  000C4C  0E00               	movlw	0
  4064  000C4E  6E1A               	movwf	strcmp2@match,c
  4065                           
  4066                           ;SlaveComm_PIC18.c: 548: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4067  000C50  D035               	goto	l400
  4068  000C52                     
  4069                           ;SlaveComm_PIC18.c: 549: {
  4070                           ;SlaveComm_PIC18.c: 550: if (a[inx] > b[inx])
  4071  000C52  501C               	movf	strcmp2@inx,w,c
  4072  000C54  2413               	addwf	strcmp2@a,w,c
  4073  000C56  6ED9               	movwf	fsr2l,c
  4074  000C58  501D               	movf	strcmp2@inx+1,w,c
  4075  000C5A  2014               	addwfc	strcmp2@a+1,w,c
  4076  000C5C  6EDA               	movwf	fsr2h,c
  4077  000C5E  501C               	movf	strcmp2@inx,w,c
  4078  000C60  2415               	addwf	strcmp2@b,w,c
  4079  000C62  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4080  000C64  501D               	movf	strcmp2@inx+1,w,c
  4081  000C66  2016               	addwfc	strcmp2@b+1,w,c
  4082  000C68  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4083  000C6A  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4084  000C6E  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4085  000C72                     	if	0	;tblptru may be non-zero
  4086  000C72                     	endif
  4087  000C72                     	if	0	;tblptru may be non-zero
  4088  000C72                     	endif
  4089  000C72  50DE               	movf	postinc2,w,c
  4090  000C74  0009               	tblrd		*+
  4091  000C76  5CF5               	subwf	tablat,w,c
  4092  000C78  B0D8               	btfsc	status,0,c
  4093  000C7A  D005               	goto	l402
  4094                           
  4095                           ;SlaveComm_PIC18.c: 551: {
  4096                           ;SlaveComm_PIC18.c: 552: match = 1;
  4097  000C7C  0E00               	movlw	0
  4098  000C7E  6E1B               	movwf	strcmp2@match+1,c
  4099  000C80  0E01               	movlw	1
  4100  000C82  6E1A               	movwf	strcmp2@match,c
  4101                           
  4102                           ;SlaveComm_PIC18.c: 553: }
  4103  000C84  D019               	goto	l404
  4104  000C86                     l402:
  4105                           
  4106                           ;SlaveComm_PIC18.c: 554: else if (a[inx] < b[inx])
  4107  000C86  501C               	movf	strcmp2@inx,w,c
  4108  000C88  2413               	addwf	strcmp2@a,w,c
  4109  000C8A  6ED9               	movwf	fsr2l,c
  4110  000C8C  501D               	movf	strcmp2@inx+1,w,c
  4111  000C8E  2014               	addwfc	strcmp2@a+1,w,c
  4112  000C90  6EDA               	movwf	fsr2h,c
  4113  000C92  50DF               	movf	indf2,w,c
  4114  000C94  6E17               	movwf	??_strcmp2& (0+255),c
  4115  000C96  501C               	movf	strcmp2@inx,w,c
  4116  000C98  2415               	addwf	strcmp2@b,w,c
  4117  000C9A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4118  000C9C  501D               	movf	strcmp2@inx+1,w,c
  4119  000C9E  2016               	addwfc	strcmp2@b+1,w,c
  4120  000CA0  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4121  000CA2  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4122  000CA6  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4123  000CAA                     	if	0	;tblptru may be non-zero
  4124  000CAA                     	endif
  4125  000CAA                     	if	0	;tblptru may be non-zero
  4126  000CAA                     	endif
  4127  000CAA  0008               	tblrd		*
  4128  000CAC  50F5               	movf	tablat,w,c
  4129  000CAE  5C17               	subwf	??_strcmp2,w,c
  4130  000CB0  B0D8               	btfsc	status,0,c
  4131  000CB2  D002               	goto	l404
  4132                           
  4133                           ;SlaveComm_PIC18.c: 555: {
  4134                           ;SlaveComm_PIC18.c: 556: match = -1;
  4135  000CB4  681A               	setf	strcmp2@match,c
  4136  000CB6  681B               	setf	strcmp2@match+1,c
  4137  000CB8                     l404:
  4138                           
  4139                           ;SlaveComm_PIC18.c: 561: }
  4140                           ;SlaveComm_PIC18.c: 563: inx++;
  4141                           
  4142                           ;SlaveComm_PIC18.c: 559: {
  4143  000CB8  4A1C               	infsnz	strcmp2@inx,f,c
  4144  000CBA  2A1D               	incf	strcmp2@inx+1,f,c
  4145  000CBC                     l400:
  4146  000CBC  501C               	movf	strcmp2@inx,w,c
  4147  000CBE  2413               	addwf	strcmp2@a,w,c
  4148  000CC0  6ED9               	movwf	fsr2l,c
  4149  000CC2  501D               	movf	strcmp2@inx+1,w,c
  4150  000CC4  2014               	addwfc	strcmp2@a+1,w,c
  4151  000CC6  6EDA               	movwf	fsr2h,c
  4152  000CC8  50DF               	movf	indf2,w,c
  4153  000CCA  B4D8               	btfsc	status,2,c
  4154  000CCC  D013               	goto	u2330
  4155  000CCE  501C               	movf	strcmp2@inx,w,c
  4156  000CD0  2415               	addwf	strcmp2@b,w,c
  4157  000CD2  6E17               	movwf	??_strcmp2& (0+255),c
  4158  000CD4  501D               	movf	strcmp2@inx+1,w,c
  4159  000CD6  2016               	addwfc	strcmp2@b+1,w,c
  4160  000CD8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4161  000CDA  C017  FFF6         	movff	??_strcmp2,tblptrl
  4162  000CDE  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4163  000CE2                     	if	0	;tblptru may be non-zero
  4164  000CE2                     	endif
  4165  000CE2                     	if	0	;tblptru may be non-zero
  4166  000CE2                     	endif
  4167  000CE2  0008               	tblrd		*
  4168  000CE4  50F5               	movf	tablat,w,c
  4169  000CE6  0900               	iorlw	0
  4170  000CE8  B4D8               	btfsc	status,2,c
  4171  000CEA  D004               	goto	u2330
  4172  000CEC  501A               	movf	strcmp2@match,w,c
  4173  000CEE  101B               	iorwf	strcmp2@match+1,w,c
  4174  000CF0  B4D8               	btfsc	status,2,c
  4175  000CF2  D7AF               	goto	l401
  4176  000CF4                     u2330:
  4177                           
  4178                           ;SlaveComm_PIC18.c: 564: }
  4179                           ;SlaveComm_PIC18.c: 567: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4180  000CF4  501C               	movf	strcmp2@inx,w,c
  4181  000CF6  2413               	addwf	strcmp2@a,w,c
  4182  000CF8  6ED9               	movwf	fsr2l,c
  4183  000CFA  501D               	movf	strcmp2@inx+1,w,c
  4184  000CFC  2014               	addwfc	strcmp2@a+1,w,c
  4185  000CFE  6EDA               	movwf	fsr2h,c
  4186  000D00  50DF               	movf	indf2,w,c
  4187  000D02  A4D8               	btfss	status,2,c
  4188  000D04  D012               	goto	l410
  4189  000D06  501C               	movf	strcmp2@inx,w,c
  4190  000D08  2415               	addwf	strcmp2@b,w,c
  4191  000D0A  6E17               	movwf	??_strcmp2& (0+255),c
  4192  000D0C  501D               	movf	strcmp2@inx+1,w,c
  4193  000D0E  2016               	addwfc	strcmp2@b+1,w,c
  4194  000D10  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4195  000D12  C017  FFF6         	movff	??_strcmp2,tblptrl
  4196  000D16  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4197  000D1A                     	if	0	;tblptru may be non-zero
  4198  000D1A                     	endif
  4199  000D1A                     	if	0	;tblptru may be non-zero
  4200  000D1A                     	endif
  4201  000D1A  0008               	tblrd		*
  4202  000D1C  50F5               	movf	tablat,w,c
  4203  000D1E  0900               	iorlw	0
  4204  000D20  B4D8               	btfsc	status,2,c
  4205  000D22  D003               	goto	l410
  4206                           
  4207                           ;SlaveComm_PIC18.c: 568: {
  4208                           ;SlaveComm_PIC18.c: 569: match = -1;
  4209  000D24  681A               	setf	strcmp2@match,c
  4210  000D26  681B               	setf	strcmp2@match+1,c
  4211                           
  4212                           ;SlaveComm_PIC18.c: 570: }
  4213  000D28  D01C               	goto	l412
  4214  000D2A                     l410:
  4215                           
  4216                           ;SlaveComm_PIC18.c: 571: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4217  000D2A  501C               	movf	strcmp2@inx,w,c
  4218  000D2C  2413               	addwf	strcmp2@a,w,c
  4219  000D2E  6ED9               	movwf	fsr2l,c
  4220  000D30  501D               	movf	strcmp2@inx+1,w,c
  4221  000D32  2014               	addwfc	strcmp2@a+1,w,c
  4222  000D34  6EDA               	movwf	fsr2h,c
  4223  000D36  50DF               	movf	indf2,w,c
  4224  000D38  B4D8               	btfsc	status,2,c
  4225  000D3A  D013               	goto	l412
  4226  000D3C  501C               	movf	strcmp2@inx,w,c
  4227  000D3E  2415               	addwf	strcmp2@b,w,c
  4228  000D40  6E17               	movwf	??_strcmp2& (0+255),c
  4229  000D42  501D               	movf	strcmp2@inx+1,w,c
  4230  000D44  2016               	addwfc	strcmp2@b+1,w,c
  4231  000D46  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4232  000D48  C017  FFF6         	movff	??_strcmp2,tblptrl
  4233  000D4C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4234  000D50                     	if	0	;tblptru may be non-zero
  4235  000D50                     	endif
  4236  000D50                     	if	0	;tblptru may be non-zero
  4237  000D50                     	endif
  4238  000D50  0008               	tblrd		*
  4239  000D52  50F5               	movf	tablat,w,c
  4240  000D54  0900               	iorlw	0
  4241  000D56  A4D8               	btfss	status,2,c
  4242  000D58  D004               	goto	l412
  4243                           
  4244                           ;SlaveComm_PIC18.c: 572: {
  4245                           ;SlaveComm_PIC18.c: 573: match = 1;
  4246  000D5A  0E00               	movlw	0
  4247  000D5C  6E1B               	movwf	strcmp2@match+1,c
  4248  000D5E  0E01               	movlw	1
  4249  000D60  6E1A               	movwf	strcmp2@match,c
  4250  000D62                     l412:
  4251                           
  4252                           ;SlaveComm_PIC18.c: 574: }
  4253                           ;SlaveComm_PIC18.c: 576: return match;
  4254  000D62  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4255  000D66  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4256  000D6A  0012               	return	
  4257  000D6C                     __end_of_strcmp2:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           intcon2	equ	0xFF1
  4267                           intcon3	equ	0xFF0
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           postinc1	equ	0xFE6
  4271                           postdec1	equ	0xFE5
  4272                           fsr1h	equ	0xFE2
  4273                           fsr1l	equ	0xFE1
  4274                           indf2	equ	0xFDF
  4275                           postinc2	equ	0xFDE
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _send_end_of_transmission *****************
  4281 ;; Defined at:
  4282 ;;		line 622 in file "SlaveComm_PIC18.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  send_buffer     2   52[COMRAM] PTR struct buffer
  4285 ;;		 -> communications@send_buffer(42), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         2       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0
  4300 ;;      Totals:         2       0       0       0       0       0       0
  4301 ;;Total ram usage:        2 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    6
  4304 ;; This function calls:
  4305 ;;		_command_builder1
  4306 ;; This function is called by:
  4307 ;;		_process_data_parameters
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text22
  4312  001B5C                     __ptext22:
  4313                           	opt stack 0
  4314  001B5C                     _send_end_of_transmission:
  4315                           	opt stack 21
  4316                           
  4317                           ;SlaveComm_PIC18.c: 624: command_builder1(send_buffer, "END");
  4318                           
  4319                           ;incstack = 0
  4320  001B5C  C035  F02F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4321  001B60  C036  F030         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4322  001B64  0E4F               	movlw	low STR_1
  4323  001B66  6E31               	movwf	command_builder1@data1,c
  4324  001B68  0E06               	movlw	high STR_1
  4325  001B6A  6E32               	movwf	command_builder1@data1+1,c
  4326  001B6C  EC52  F00B         	call	_command_builder1	;wreg free
  4327  001B70  0012               	return	
  4328  001B72                     __end_of_send_end_of_transmission:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           intcon2	equ	0xFF1
  4338                           intcon3	equ	0xFF0
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           postinc1	equ	0xFE6
  4342                           postdec1	equ	0xFE5
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _command_builder1 *****************
  4352 ;; Defined at:
  4353 ;;		line 410 in file "SlaveComm_PIC18.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  4356 ;;		 -> communications@send_buffer(42), 
  4357 ;;  data1           2   48[COMRAM] PTR unsigned char 
  4358 ;;		 -> STR_23(4), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  xsum            2   50[COMRAM] int 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:         4       0       0       0       0       0       0
  4371 ;;      Locals:         2       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0
  4373 ;;      Totals:         6       0       0       0       0       0       0
  4374 ;;Total ram usage:        6 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    5
  4377 ;; This function calls:
  4378 ;;		_command_builder_add_char
  4379 ;;		_command_builder_add_string
  4380 ;;		_xsum_builder
  4381 ;; This function is called by:
  4382 ;;		_send_end_of_transmission
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text23
  4387  0016A4                     __ptext23:
  4388                           	opt stack 0
  4389  0016A4                     _command_builder1:
  4390                           	opt stack 21
  4391                           
  4392                           ;SlaveComm_PIC18.c: 412: command_builder_add_char( send_buffer, '#' );
  4393                           
  4394                           ;incstack = 0
  4395  0016A4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4396  0016A8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4397  0016AC  0E23               	movlw	35
  4398  0016AE  6E15               	movwf	command_builder_add_char@data,c
  4399  0016B0  EC24  F00B         	call	_command_builder_add_char	;wreg free
  4400                           
  4401                           ;SlaveComm_PIC18.c: 413: command_builder_add_char( send_buffer, '!' );
  4402  0016B4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4403  0016B8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4404  0016BC  0E21               	movlw	33
  4405  0016BE  6E15               	movwf	command_builder_add_char@data,c
  4406  0016C0  EC24  F00B         	call	_command_builder_add_char	;wreg free
  4407                           
  4408                           ;SlaveComm_PIC18.c: 414: int xsum = 0;
  4409  0016C4  0E00               	movlw	0
  4410  0016C6  6E34               	movwf	command_builder1@xsum+1,c
  4411  0016C8  0E00               	movlw	0
  4412  0016CA  6E33               	movwf	command_builder1@xsum,c
  4413                           
  4414                           ;SlaveComm_PIC18.c: 415: xsum += command_builder_add_string( send_buffer, data1 );
  4415  0016CC  C02F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4416  0016D0  C030  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4417  0016D4  C031  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4418  0016D8  C032  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4419  0016DC  ECB7  F009         	call	_command_builder_add_string	;wreg free
  4420  0016E0  5017               	movf	?_command_builder_add_string,w,c
  4421  0016E2  2633               	addwf	command_builder1@xsum,f,c
  4422  0016E4  5018               	movf	?_command_builder_add_string+1,w,c
  4423  0016E6  2234               	addwfc	command_builder1@xsum+1,f,c
  4424                           
  4425                           ;SlaveComm_PIC18.c: 416: xsum_builder( send_buffer, xsum );
  4426  0016E8  C02F  F02B         	movff	command_builder1@send_buffer,xsum_builder@send_buffer
  4427  0016EC  C030  F02C         	movff	command_builder1@send_buffer+1,xsum_builder@send_buffer+1
  4428  0016F0  C033  F02D         	movff	command_builder1@xsum,xsum_builder@xsum
  4429  0016F4  C034  F02E         	movff	command_builder1@xsum+1,xsum_builder@xsum+1
  4430  0016F8  ECF3  F00A         	call	_xsum_builder	;wreg free
  4431  0016FC  0012               	return	
  4432  0016FE                     __end_of_command_builder1:
  4433                           	opt stack 0
  4434                           tblptru	equ	0xFF8
  4435                           tblptrh	equ	0xFF7
  4436                           tblptrl	equ	0xFF6
  4437                           tablat	equ	0xFF5
  4438                           prodh	equ	0xFF4
  4439                           prodl	equ	0xFF3
  4440                           intcon	equ	0xFF2
  4441                           intcon2	equ	0xFF1
  4442                           intcon3	equ	0xFF0
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           postinc1	equ	0xFE6
  4446                           postdec1	equ	0xFE5
  4447                           fsr1h	equ	0xFE2
  4448                           fsr1l	equ	0xFE1
  4449                           indf2	equ	0xFDF
  4450                           postinc2	equ	0xFDE
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function _com_command_setEnergyUsed *****************
  4456 ;; Defined at:
  4457 ;;		line 647 in file "SlaveComm_PIC18.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4460 ;;		 -> communications@send_buffer(42), 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  temp           12   16[BANK0 ] unsigned char [12]
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4472 ;;      Params:         2       0       0       0       0       0       0
  4473 ;;      Locals:         0      12       0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0
  4475 ;;      Totals:         2      12       0       0       0       0       0
  4476 ;;Total ram usage:       14 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    6
  4479 ;; This function calls:
  4480 ;;		_command_builder3
  4481 ;;		_ultoa
  4482 ;; This function is called by:
  4483 ;;		_resetCommunications
  4484 ;;		_process_data_parameters
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text24
  4489  00188E                     __ptext24:
  4490                           	opt stack 0
  4491  00188E                     _com_command_setEnergyUsed:
  4492                           	opt stack 22
  4493                           
  4494                           ;SlaveComm_PIC18.c: 649: char temp[12];
  4495                           ;SlaveComm_PIC18.c: 651: ultoa(temp, meterEnergyUsed, 10);
  4496                           
  4497                           ;incstack = 0
  4498  00188E  0E70               	movlw	low com_command_setEnergyUsed@temp
  4499  001890  6E20               	movwf	ultoa@buf,c
  4500  001892  0E00               	movlw	high com_command_setEnergyUsed@temp
  4501  001894  6E21               	movwf	ultoa@buf+1,c
  4502  001896  C0C7  F022         	movff	_meterEnergyUsed,ultoa@val
  4503  00189A  C0C8  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4504  00189E  C0C9  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4505  0018A2  C0CA  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4506  0018A6  0E00               	movlw	0
  4507  0018A8  6E27               	movwf	ultoa@base+1,c
  4508  0018AA  0E0A               	movlw	10
  4509  0018AC  6E26               	movwf	ultoa@base,c
  4510  0018AE  ECB6  F006         	call	_ultoa	;wreg free
  4511                           
  4512                           ;SlaveComm_PIC18.c: 653: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4513  0018B2  C039  F02F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4514  0018B6  C03A  F030         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4515  0018BA  0E57               	movlw	low STR_2
  4516  0018BC  6E31               	movwf	command_builder3@data1,c
  4517  0018BE  0E06               	movlw	high STR_2
  4518  0018C0  6E32               	movwf	command_builder3@data1+1,c
  4519  0018C2  0E17               	movlw	low STR_4
  4520  0018C4  6E33               	movwf	command_builder3@data2,c
  4521  0018C6  0E06               	movlw	high STR_4
  4522  0018C8  6E34               	movwf	command_builder3@data2+1,c
  4523  0018CA  0E70               	movlw	low com_command_setEnergyUsed@temp
  4524  0018CC  6E35               	movwf	command_builder3@data3,c
  4525  0018CE  0E00               	movlw	high com_command_setEnergyUsed@temp
  4526  0018D0  6E36               	movwf	command_builder3@data3+1,c
  4527  0018D2  EC6B  F008         	call	_command_builder3	;wreg free
  4528  0018D6  0012               	return	
  4529  0018D8                     __end_of_com_command_setEnergyUsed:
  4530                           	opt stack 0
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           prodh	equ	0xFF4
  4536                           prodl	equ	0xFF3
  4537                           intcon	equ	0xFF2
  4538                           intcon2	equ	0xFF1
  4539                           intcon3	equ	0xFF0
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postinc1	equ	0xFE6
  4543                           postdec1	equ	0xFE5
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           indf2	equ	0xFDF
  4547                           postinc2	equ	0xFDE
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           
  4552 ;; *************** function _ultoa *****************
  4553 ;; Defined at:
  4554 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4557 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4558 ;;  val             4   33[COMRAM] unsigned long 
  4559 ;;  base            2   37[COMRAM] int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  v               4   39[COMRAM] unsigned long 
  4562 ;;  c               1   43[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2   31[COMRAM] PTR unsigned char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         8       0       0       0       0       0       0
  4573 ;;      Locals:         5       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0
  4575 ;;      Totals:        13       0       0       0       0       0       0
  4576 ;;Total ram usage:       13 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    2
  4579 ;; This function calls:
  4580 ;;		___lldiv
  4581 ;;		___llmod
  4582 ;; This function is called by:
  4583 ;;		_com_command_setPower
  4584 ;;		_com_command_setEnergyUsed
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text25
  4589  000D6C                     __ptext25:
  4590                           	opt stack 0
  4591  000D6C                     _ultoa:
  4592                           	opt stack 25
  4593                           
  4594                           ;incstack = 0
  4595  000D6C  C022  F028         	movff	ultoa@val,ultoa@v
  4596  000D70  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4597  000D74  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4598  000D78  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4599  000D7C  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4600  000D80  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4601  000D84  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4602  000D88  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4603  000D8C  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4604  000D90  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4605  000D94  0E00               	movlw	0
  4606  000D96  BE18               	btfsc	___lldiv@divisor+1,7,c
  4607  000D98  0EFF               	movlw	-1
  4608  000D9A  6E19               	movwf	___lldiv@divisor+2,c
  4609  000D9C  6E1A               	movwf	___lldiv@divisor+3,c
  4610  000D9E  EC49  F00A         	call	___lldiv	;wreg free
  4611  000DA2  C013  F028         	movff	?___lldiv,ultoa@v
  4612  000DA6  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4613  000DAA  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4614  000DAE  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4615  000DB2  4A20               	infsnz	ultoa@buf,f,c
  4616  000DB4  2A21               	incf	ultoa@buf+1,f,c
  4617  000DB6  5028               	movf	ultoa@v,w,c
  4618  000DB8  1029               	iorwf	ultoa@v+1,w,c
  4619  000DBA  102A               	iorwf	ultoa@v+2,w,c
  4620  000DBC  102B               	iorwf	ultoa@v+3,w,c
  4621  000DBE  A4D8               	btfss	status,2,c
  4622  000DC0  D7DD               	goto	l887
  4623  000DC2  C020  FFD9         	movff	ultoa@buf,fsr2l
  4624  000DC6  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4625  000DCA  0E00               	movlw	0
  4626  000DCC  6EDF               	movwf	indf2,c
  4627  000DCE  0620               	decf	ultoa@buf,f,c
  4628  000DD0  A0D8               	btfss	status,0,c
  4629  000DD2  0621               	decf	ultoa@buf+1,f,c
  4630  000DD4  C022  F013         	movff	ultoa@val,___llmod@dividend
  4631  000DD8  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4632  000DDC  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4633  000DE0  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4634  000DE4  C026  F017         	movff	ultoa@base,___llmod@divisor
  4635  000DE8  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4636  000DEC  0E00               	movlw	0
  4637  000DEE  BE18               	btfsc	___llmod@divisor+1,7,c
  4638  000DF0  0EFF               	movlw	-1
  4639  000DF2  6E19               	movwf	___llmod@divisor+2,c
  4640  000DF4  6E1A               	movwf	___llmod@divisor+3,c
  4641  000DF6  ECC0  F00A         	call	___llmod	;wreg free
  4642  000DFA  5013               	movf	?___llmod,w,c
  4643  000DFC  6E2C               	movwf	ultoa@c,c
  4644  000DFE  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4645  000E02  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4646  000E06  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4647  000E0A  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4648  000E0E  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4649  000E12  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4650  000E16  0E00               	movlw	0
  4651  000E18  BE18               	btfsc	___lldiv@divisor+1,7,c
  4652  000E1A  0EFF               	movlw	-1
  4653  000E1C  6E19               	movwf	___lldiv@divisor+2,c
  4654  000E1E  6E1A               	movwf	___lldiv@divisor+3,c
  4655  000E20  EC49  F00A         	call	___lldiv	;wreg free
  4656  000E24  C013  F022         	movff	?___lldiv,ultoa@val
  4657  000E28  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4658  000E2C  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4659  000E30  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4660  000E34  0E09               	movlw	9
  4661  000E36  642C               	cpfsgt	ultoa@c,c
  4662  000E38  D002               	goto	l890
  4663  000E3A  0E07               	movlw	7
  4664  000E3C  262C               	addwf	ultoa@c,f,c
  4665  000E3E                     l890:
  4666  000E3E  0E30               	movlw	48
  4667  000E40  262C               	addwf	ultoa@c,f,c
  4668  000E42  C020  FFD9         	movff	ultoa@buf,fsr2l
  4669  000E46  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4670  000E4A  C02C  FFDF         	movff	ultoa@c,indf2
  4671  000E4E  0620               	decf	ultoa@buf,f,c
  4672  000E50  A0D8               	btfss	status,0,c
  4673  000E52  0621               	decf	ultoa@buf+1,f,c
  4674  000E54  5022               	movf	ultoa@val,w,c
  4675  000E56  1023               	iorwf	ultoa@val+1,w,c
  4676  000E58  1024               	iorwf	ultoa@val+2,w,c
  4677  000E5A  1025               	iorwf	ultoa@val+3,w,c
  4678  000E5C  B4D8               	btfsc	status,2,c
  4679  000E5E  0012               	return	
  4680  000E60  D7B9               	goto	l889
  4681  000E62                     __end_of_ultoa:
  4682                           	opt stack 0
  4683                           tblptru	equ	0xFF8
  4684                           tblptrh	equ	0xFF7
  4685                           tblptrl	equ	0xFF6
  4686                           tablat	equ	0xFF5
  4687                           prodh	equ	0xFF4
  4688                           prodl	equ	0xFF3
  4689                           intcon	equ	0xFF2
  4690                           intcon2	equ	0xFF1
  4691                           intcon3	equ	0xFF0
  4692                           postinc0	equ	0xFEE
  4693                           wreg	equ	0xFE8
  4694                           postinc1	equ	0xFE6
  4695                           postdec1	equ	0xFE5
  4696                           fsr1h	equ	0xFE2
  4697                           fsr1l	equ	0xFE1
  4698                           indf2	equ	0xFDF
  4699                           postinc2	equ	0xFDE
  4700                           fsr2h	equ	0xFDA
  4701                           fsr2l	equ	0xFD9
  4702                           status	equ	0xFD8
  4703                           
  4704 ;; *************** function ___llmod *****************
  4705 ;; Defined at:
  4706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  dividend        4   18[COMRAM] unsigned long 
  4709 ;;  divisor         4   22[COMRAM] unsigned long 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  counter         1   26[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  4   18[COMRAM] unsigned long 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4721 ;;      Params:         8       0       0       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0
  4724 ;;      Totals:         9       0       0       0       0       0       0
  4725 ;;Total ram usage:        9 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_ultoa
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text26
  4736  001580                     __ptext26:
  4737                           	opt stack 0
  4738  001580                     ___llmod:
  4739                           	opt stack 25
  4740                           
  4741                           ;incstack = 0
  4742  001580  5017               	movf	___llmod@divisor,w,c
  4743  001582  1018               	iorwf	___llmod@divisor+1,w,c
  4744  001584  1019               	iorwf	___llmod@divisor+2,w,c
  4745  001586  101A               	iorwf	___llmod@divisor+3,w,c
  4746  001588  B4D8               	btfsc	status,2,c
  4747  00158A  D024               	goto	l849
  4748  00158C  0E01               	movlw	1
  4749  00158E  6E1B               	movwf	___llmod@counter,c
  4750  001590  D006               	goto	l844
  4751  001592  90D8               	bcf	status,0,c
  4752  001594  3617               	rlcf	___llmod@divisor,f,c
  4753  001596  3618               	rlcf	___llmod@divisor+1,f,c
  4754  001598  3619               	rlcf	___llmod@divisor+2,f,c
  4755  00159A  361A               	rlcf	___llmod@divisor+3,f,c
  4756  00159C  2A1B               	incf	___llmod@counter,f,c
  4757  00159E                     l844:
  4758  00159E  AE1A               	btfss	___llmod@divisor+3,7,c
  4759  0015A0  D7F8               	goto	l845
  4760  0015A2                     u2270:
  4761  0015A2  5017               	movf	___llmod@divisor,w,c
  4762  0015A4  5C13               	subwf	___llmod@dividend,w,c
  4763  0015A6  5018               	movf	___llmod@divisor+1,w,c
  4764  0015A8  5814               	subwfb	___llmod@dividend+1,w,c
  4765  0015AA  5019               	movf	___llmod@divisor+2,w,c
  4766  0015AC  5815               	subwfb	___llmod@dividend+2,w,c
  4767  0015AE  501A               	movf	___llmod@divisor+3,w,c
  4768  0015B0  5816               	subwfb	___llmod@dividend+3,w,c
  4769  0015B2  A0D8               	btfss	status,0,c
  4770  0015B4  D008               	goto	l848
  4771  0015B6  5017               	movf	___llmod@divisor,w,c
  4772  0015B8  5E13               	subwf	___llmod@dividend,f,c
  4773  0015BA  5018               	movf	___llmod@divisor+1,w,c
  4774  0015BC  5A14               	subwfb	___llmod@dividend+1,f,c
  4775  0015BE  5019               	movf	___llmod@divisor+2,w,c
  4776  0015C0  5A15               	subwfb	___llmod@dividend+2,f,c
  4777  0015C2  501A               	movf	___llmod@divisor+3,w,c
  4778  0015C4  5A16               	subwfb	___llmod@dividend+3,f,c
  4779  0015C6                     l848:
  4780  0015C6  90D8               	bcf	status,0,c
  4781  0015C8  321A               	rrcf	___llmod@divisor+3,f,c
  4782  0015CA  3219               	rrcf	___llmod@divisor+2,f,c
  4783  0015CC  3218               	rrcf	___llmod@divisor+1,f,c
  4784  0015CE  3217               	rrcf	___llmod@divisor,f,c
  4785  0015D0  2E1B               	decfsz	___llmod@counter,f,c
  4786  0015D2  D7E7               	goto	u2270
  4787  0015D4                     l849:
  4788  0015D4  C013  F013         	movff	___llmod@dividend,?___llmod
  4789  0015D8  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4790  0015DC  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4791  0015E0  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4792  0015E4  0012               	return		;funcret
  4793  0015E6                     __end_of___llmod:
  4794                           	opt stack 0
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           prodh	equ	0xFF4
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           intcon2	equ	0xFF1
  4803                           intcon3	equ	0xFF0
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           postinc1	equ	0xFE6
  4807                           postdec1	equ	0xFE5
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function ___lldiv *****************
  4817 ;; Defined at:
  4818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  dividend        4   18[COMRAM] unsigned long 
  4821 ;;  divisor         4   22[COMRAM] unsigned long 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  quotient        4   26[COMRAM] unsigned long 
  4824 ;;  counter         1   30[COMRAM] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  4   18[COMRAM] unsigned long 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4834 ;;      Params:         8       0       0       0       0       0       0
  4835 ;;      Locals:         5       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0
  4837 ;;      Totals:        13       0       0       0       0       0       0
  4838 ;;Total ram usage:       13 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_powerPulseCheck
  4845 ;;		_ultoa
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text27
  4850  001492                     __ptext27:
  4851                           	opt stack 0
  4852  001492                     ___lldiv:
  4853                           	opt stack 28
  4854                           
  4855                           ;incstack = 0
  4856  001492  0E00               	movlw	0
  4857  001494  6E1B               	movwf	___lldiv@quotient,c
  4858  001496  0E00               	movlw	0
  4859  001498  6E1C               	movwf	___lldiv@quotient+1,c
  4860  00149A  0E00               	movlw	0
  4861  00149C  6E1D               	movwf	___lldiv@quotient+2,c
  4862  00149E  0E00               	movlw	0
  4863  0014A0  6E1E               	movwf	___lldiv@quotient+3,c
  4864  0014A2  5017               	movf	___lldiv@divisor,w,c
  4865  0014A4  1018               	iorwf	___lldiv@divisor+1,w,c
  4866  0014A6  1019               	iorwf	___lldiv@divisor+2,w,c
  4867  0014A8  101A               	iorwf	___lldiv@divisor+3,w,c
  4868  0014AA  B4D8               	btfsc	status,2,c
  4869  0014AC  D02A               	goto	l839
  4870  0014AE  0E01               	movlw	1
  4871  0014B0  6E1F               	movwf	___lldiv@counter,c
  4872  0014B2  D006               	goto	l834
  4873  0014B4  90D8               	bcf	status,0,c
  4874  0014B6  3617               	rlcf	___lldiv@divisor,f,c
  4875  0014B8  3618               	rlcf	___lldiv@divisor+1,f,c
  4876  0014BA  3619               	rlcf	___lldiv@divisor+2,f,c
  4877  0014BC  361A               	rlcf	___lldiv@divisor+3,f,c
  4878  0014BE  2A1F               	incf	___lldiv@counter,f,c
  4879  0014C0                     l834:
  4880  0014C0  AE1A               	btfss	___lldiv@divisor+3,7,c
  4881  0014C2  D7F8               	goto	l835
  4882  0014C4                     u2240:
  4883  0014C4  90D8               	bcf	status,0,c
  4884  0014C6  361B               	rlcf	___lldiv@quotient,f,c
  4885  0014C8  361C               	rlcf	___lldiv@quotient+1,f,c
  4886  0014CA  361D               	rlcf	___lldiv@quotient+2,f,c
  4887  0014CC  361E               	rlcf	___lldiv@quotient+3,f,c
  4888  0014CE  5017               	movf	___lldiv@divisor,w,c
  4889  0014D0  5C13               	subwf	___lldiv@dividend,w,c
  4890  0014D2  5018               	movf	___lldiv@divisor+1,w,c
  4891  0014D4  5814               	subwfb	___lldiv@dividend+1,w,c
  4892  0014D6  5019               	movf	___lldiv@divisor+2,w,c
  4893  0014D8  5815               	subwfb	___lldiv@dividend+2,w,c
  4894  0014DA  501A               	movf	___lldiv@divisor+3,w,c
  4895  0014DC  5816               	subwfb	___lldiv@dividend+3,w,c
  4896  0014DE  A0D8               	btfss	status,0,c
  4897  0014E0  D009               	goto	l838
  4898  0014E2  5017               	movf	___lldiv@divisor,w,c
  4899  0014E4  5E13               	subwf	___lldiv@dividend,f,c
  4900  0014E6  5018               	movf	___lldiv@divisor+1,w,c
  4901  0014E8  5A14               	subwfb	___lldiv@dividend+1,f,c
  4902  0014EA  5019               	movf	___lldiv@divisor+2,w,c
  4903  0014EC  5A15               	subwfb	___lldiv@dividend+2,f,c
  4904  0014EE  501A               	movf	___lldiv@divisor+3,w,c
  4905  0014F0  5A16               	subwfb	___lldiv@dividend+3,f,c
  4906  0014F2  801B               	bsf	___lldiv@quotient,0,c
  4907  0014F4                     l838:
  4908  0014F4  90D8               	bcf	status,0,c
  4909  0014F6  321A               	rrcf	___lldiv@divisor+3,f,c
  4910  0014F8  3219               	rrcf	___lldiv@divisor+2,f,c
  4911  0014FA  3218               	rrcf	___lldiv@divisor+1,f,c
  4912  0014FC  3217               	rrcf	___lldiv@divisor,f,c
  4913  0014FE  2E1F               	decfsz	___lldiv@counter,f,c
  4914  001500  D7E1               	goto	u2240
  4915  001502                     l839:
  4916  001502  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4917  001506  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4918  00150A  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4919  00150E  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4920  001512  0012               	return		;funcret
  4921  001514                     __end_of___lldiv:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           intcon	equ	0xFF2
  4930                           intcon2	equ	0xFF1
  4931                           intcon3	equ	0xFF0
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           postinc1	equ	0xFE6
  4935                           postdec1	equ	0xFE5
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function _command_builder3 *****************
  4945 ;; Defined at:
  4946 ;;		line 435 in file "SlaveComm_PIC18.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  4949 ;;		 -> communications@send_buffer(42), 
  4950 ;;  data1           2   48[COMRAM] PTR unsigned char 
  4951 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4952 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4953 ;;  data2           2   50[COMRAM] PTR unsigned char 
  4954 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4955 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4956 ;;  data3           2   52[COMRAM] PTR unsigned char 
  4957 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4958 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  xsum            2   54[COMRAM] int 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4970 ;;      Params:         8       0       0       0       0       0       0
  4971 ;;      Locals:         2       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0
  4973 ;;      Totals:        10       0       0       0       0       0       0
  4974 ;;Total ram usage:       10 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    5
  4977 ;; This function calls:
  4978 ;;		_command_builder_add_char
  4979 ;;		_command_builder_add_string
  4980 ;;		_xsum_builder
  4981 ;; This function is called by:
  4982 ;;		_process_data_parameters
  4983 ;;		_com_command_setPower
  4984 ;;		_com_command_setEnergyUsed
  4985 ;;		_com_command_setVersion
  4986 ;;		_com_command_setVolts
  4987 ;;		_com_command_setAmps
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text28
  4992  0010D6                     __ptext28:
  4993                           	opt stack 0
  4994  0010D6                     _command_builder3:
  4995                           	opt stack 22
  4996                           
  4997                           ;SlaveComm_PIC18.c: 437: command_builder_add_char( send_buffer, '#' );
  4998                           
  4999                           ;incstack = 0
  5000  0010D6  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5001  0010DA  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5002  0010DE  0E23               	movlw	35
  5003  0010E0  6E15               	movwf	command_builder_add_char@data,c
  5004  0010E2  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5005                           
  5006                           ;SlaveComm_PIC18.c: 438: command_builder_add_char( send_buffer, '!' );
  5007  0010E6  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5008  0010EA  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5009  0010EE  0E21               	movlw	33
  5010  0010F0  6E15               	movwf	command_builder_add_char@data,c
  5011  0010F2  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5012                           
  5013                           ;SlaveComm_PIC18.c: 439: int xsum = 0;
  5014  0010F6  0E00               	movlw	0
  5015  0010F8  6E38               	movwf	command_builder3@xsum+1,c
  5016  0010FA  0E00               	movlw	0
  5017  0010FC  6E37               	movwf	command_builder3@xsum,c
  5018                           
  5019                           ;SlaveComm_PIC18.c: 440: xsum += command_builder_add_string( send_buffer, data1 );
  5020  0010FE  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5021  001102  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5022  001106  C031  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5023  00110A  C032  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5024  00110E  ECB7  F009         	call	_command_builder_add_string	;wreg free
  5025  001112  5017               	movf	?_command_builder_add_string,w,c
  5026  001114  2637               	addwf	command_builder3@xsum,f,c
  5027  001116  5018               	movf	?_command_builder_add_string+1,w,c
  5028  001118  2238               	addwfc	command_builder3@xsum+1,f,c
  5029                           
  5030                           ;SlaveComm_PIC18.c: 441: command_builder_add_char( send_buffer, ';' );
  5031  00111A  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5032  00111E  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5033  001122  0E3B               	movlw	59
  5034  001124  6E15               	movwf	command_builder_add_char@data,c
  5035  001126  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5036                           
  5037                           ;SlaveComm_PIC18.c: 442: xsum += command_builder_add_string( send_buffer, data2 );
  5038  00112A  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5039  00112E  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5040  001132  C033  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5041  001136  C034  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5042  00113A  ECB7  F009         	call	_command_builder_add_string	;wreg free
  5043  00113E  5017               	movf	?_command_builder_add_string,w,c
  5044  001140  2637               	addwf	command_builder3@xsum,f,c
  5045  001142  5018               	movf	?_command_builder_add_string+1,w,c
  5046  001144  2238               	addwfc	command_builder3@xsum+1,f,c
  5047                           
  5048                           ;SlaveComm_PIC18.c: 443: command_builder_add_char( send_buffer, ';' );
  5049  001146  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5050  00114A  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5051  00114E  0E3B               	movlw	59
  5052  001150  6E15               	movwf	command_builder_add_char@data,c
  5053  001152  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5054                           
  5055                           ;SlaveComm_PIC18.c: 444: xsum += command_builder_add_string( send_buffer, data3 );
  5056  001156  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5057  00115A  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5058  00115E  C035  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5059  001162  C036  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5060  001166  ECB7  F009         	call	_command_builder_add_string	;wreg free
  5061  00116A  5017               	movf	?_command_builder_add_string,w,c
  5062  00116C  2637               	addwf	command_builder3@xsum,f,c
  5063  00116E  5018               	movf	?_command_builder_add_string+1,w,c
  5064  001170  2238               	addwfc	command_builder3@xsum+1,f,c
  5065                           
  5066                           ;SlaveComm_PIC18.c: 445: xsum_builder( send_buffer, xsum );
  5067  001172  C02F  F02B         	movff	command_builder3@send_buffer,xsum_builder@send_buffer
  5068  001176  C030  F02C         	movff	command_builder3@send_buffer+1,xsum_builder@send_buffer+1
  5069  00117A  C037  F02D         	movff	command_builder3@xsum,xsum_builder@xsum
  5070  00117E  C038  F02E         	movff	command_builder3@xsum+1,xsum_builder@xsum+1
  5071  001182  ECF3  F00A         	call	_xsum_builder	;wreg free
  5072  001186  0012               	return	
  5073  001188                     __end_of_command_builder3:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           prodh	equ	0xFF4
  5080                           prodl	equ	0xFF3
  5081                           intcon	equ	0xFF2
  5082                           intcon2	equ	0xFF1
  5083                           intcon3	equ	0xFF0
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postinc1	equ	0xFE6
  5087                           postdec1	equ	0xFE5
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           indf2	equ	0xFDF
  5091                           postinc2	equ	0xFDE
  5092                           fsr2h	equ	0xFDA
  5093                           fsr2l	equ	0xFD9
  5094                           status	equ	0xFD8
  5095                           
  5096 ;; *************** function _xsum_builder *****************
  5097 ;; Defined at:
  5098 ;;		line 467 in file "SlaveComm_PIC18.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  send_buffer     2   42[COMRAM] PTR struct buffer
  5101 ;;		 -> communications@send_buffer(42), 
  5102 ;;  xsum            2   44[COMRAM] int 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  xsumBuf        16    0[BANK0 ] unsigned char [16]
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5114 ;;      Params:         4       0       0       0       0       0       0
  5115 ;;      Locals:         0      16       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0
  5117 ;;      Totals:         4      16       0       0       0       0       0
  5118 ;;Total ram usage:       20 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    4
  5121 ;; This function calls:
  5122 ;;		_command_builder_add_char
  5123 ;;		_command_builder_add_string
  5124 ;;		_itoa
  5125 ;; This function is called by:
  5126 ;;		_command_builder1
  5127 ;;		_command_builder3
  5128 ;;		_command_builder2
  5129 ;;		_command_builder4
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text29
  5134  0015E6                     __ptext29:
  5135                           	opt stack 0
  5136  0015E6                     _xsum_builder:
  5137                           	opt stack 22
  5138                           
  5139                           ;SlaveComm_PIC18.c: 469: command_builder_add_char( send_buffer, ';' );
  5140                           
  5141                           ;incstack = 0
  5142  0015E6  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5143  0015EA  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5144  0015EE  0E3B               	movlw	59
  5145  0015F0  6E15               	movwf	command_builder_add_char@data,c
  5146  0015F2  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5147                           
  5148                           ;SlaveComm_PIC18.c: 470: command_builder_add_char( send_buffer, '@' );
  5149  0015F6  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5150  0015FA  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5151  0015FE  0E40               	movlw	64
  5152  001600  6E15               	movwf	command_builder_add_char@data,c
  5153  001602  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5154                           
  5155                           ;SlaveComm_PIC18.c: 471: char xsumBuf[16];
  5156                           ;SlaveComm_PIC18.c: 472: itoa( xsumBuf, xsum, 8 );
  5157  001606  0E60               	movlw	low xsum_builder@xsumBuf
  5158  001608  6E23               	movwf	itoa@buf,c
  5159  00160A  0E00               	movlw	high xsum_builder@xsumBuf
  5160  00160C  6E24               	movwf	itoa@buf+1,c
  5161  00160E  C02D  F025         	movff	xsum_builder@xsum,itoa@val
  5162  001612  C02E  F026         	movff	xsum_builder@xsum+1,itoa@val+1
  5163  001616  0E00               	movlw	0
  5164  001618  6E28               	movwf	itoa@base+1,c
  5165  00161A  0E08               	movlw	8
  5166  00161C  6E27               	movwf	itoa@base,c
  5167  00161E  EC90  F00C         	call	_itoa	;wreg free
  5168                           
  5169                           ;SlaveComm_PIC18.c: 473: command_builder_add_string( send_buffer, xsumBuf );
  5170  001622  C02B  F017         	movff	xsum_builder@send_buffer,command_builder_add_string@send_buffer
  5171  001626  C02C  F018         	movff	xsum_builder@send_buffer+1,command_builder_add_string@send_buffer+1
  5172  00162A  0E60               	movlw	low xsum_builder@xsumBuf
  5173  00162C  6E19               	movwf	command_builder_add_string@data_string,c
  5174  00162E  0E00               	movlw	high xsum_builder@xsumBuf
  5175  001630  6E1A               	movwf	command_builder_add_string@data_string+1,c
  5176  001632  ECB7  F009         	call	_command_builder_add_string	;wreg free
  5177                           
  5178                           ;SlaveComm_PIC18.c: 475: command_builder_add_char( send_buffer, '*' );
  5179  001636  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5180  00163A  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5181  00163E  0E2A               	movlw	42
  5182  001640  6E15               	movwf	command_builder_add_char@data,c
  5183  001642  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5184  001646  0012               	return	
  5185  001648                     __end_of_xsum_builder:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           intcon	equ	0xFF2
  5194                           intcon2	equ	0xFF1
  5195                           intcon3	equ	0xFF0
  5196                           postinc0	equ	0xFEE
  5197                           wreg	equ	0xFE8
  5198                           postinc1	equ	0xFE6
  5199                           postdec1	equ	0xFE5
  5200                           fsr1h	equ	0xFE2
  5201                           fsr1l	equ	0xFE1
  5202                           indf2	equ	0xFDF
  5203                           postinc2	equ	0xFDE
  5204                           fsr2h	equ	0xFDA
  5205                           fsr2l	equ	0xFD9
  5206                           status	equ	0xFD8
  5207                           
  5208 ;; *************** function _itoa *****************
  5209 ;; Defined at:
  5210 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  buf             2   34[COMRAM] PTR unsigned char 
  5213 ;;		 -> xsum_builder@xsumBuf(16), 
  5214 ;;  val             2   36[COMRAM] int 
  5215 ;;  base            2   38[COMRAM] int 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  cp              2   40[COMRAM] PTR unsigned char 
  5218 ;;		 -> xsum_builder@xsumBuf(16), 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2   34[COMRAM] PTR unsigned char 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5228 ;;      Params:         6       0       0       0       0       0       0
  5229 ;;      Locals:         2       0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0
  5231 ;;      Totals:         8       0       0       0       0       0       0
  5232 ;;Total ram usage:        8 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    3
  5235 ;; This function calls:
  5236 ;;		_utoa
  5237 ;; This function is called by:
  5238 ;;		_xsum_builder
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text30
  5243  001920                     __ptext30:
  5244                           	opt stack 0
  5245  001920                     _itoa:
  5246                           	opt stack 22
  5247                           
  5248                           ;incstack = 0
  5249  001920  C023  F029         	movff	itoa@buf,itoa@cp
  5250  001924  C024  F02A         	movff	itoa@buf+1,itoa@cp+1
  5251  001928  AE26               	btfss	itoa@val+1,7,c
  5252  00192A  D00C               	goto	l800
  5253  00192C  C023  FFD9         	movff	itoa@buf,fsr2l
  5254  001930  C024  FFDA         	movff	itoa@buf+1,fsr2h
  5255  001934  0E2D               	movlw	45
  5256  001936  6EDF               	movwf	indf2,c
  5257  001938  4A23               	infsnz	itoa@buf,f,c
  5258  00193A  2A24               	incf	itoa@buf+1,f,c
  5259  00193C  6C25               	negf	itoa@val,c
  5260  00193E  1E26               	comf	itoa@val+1,f,c
  5261  001940  B0D8               	btfsc	status,0,c
  5262  001942  2A26               	incf	itoa@val+1,f,c
  5263  001944                     l800:
  5264  001944  C023  F01A         	movff	itoa@buf,utoa@buf
  5265  001948  C024  F01B         	movff	itoa@buf+1,utoa@buf+1
  5266  00194C  C025  F01C         	movff	itoa@val,utoa@val
  5267  001950  C026  F01D         	movff	itoa@val+1,utoa@val+1
  5268  001954  C027  F01E         	movff	itoa@base,utoa@base
  5269  001958  C028  F01F         	movff	itoa@base+1,utoa@base+1
  5270  00195C  EC16  F009         	call	_utoa	;wreg free
  5271  001960  0012               	return	
  5272  001962                     __end_of_itoa:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           prodh	equ	0xFF4
  5279                           prodl	equ	0xFF3
  5280                           intcon	equ	0xFF2
  5281                           intcon2	equ	0xFF1
  5282                           intcon3	equ	0xFF0
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           postinc1	equ	0xFE6
  5286                           postdec1	equ	0xFE5
  5287                           fsr1h	equ	0xFE2
  5288                           fsr1l	equ	0xFE1
  5289                           indf2	equ	0xFDF
  5290                           postinc2	equ	0xFDE
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           
  5295 ;; *************** function _utoa *****************
  5296 ;; Defined at:
  5297 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  buf             2   25[COMRAM] PTR unsigned char 
  5300 ;;		 -> xsum_builder@xsumBuf(16), 
  5301 ;;  val             2   27[COMRAM] unsigned int 
  5302 ;;  base            2   29[COMRAM] int 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  v               2   31[COMRAM] unsigned int 
  5305 ;;  c               1   33[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  2   25[COMRAM] PTR unsigned char 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5315 ;;      Params:         6       0       0       0       0       0       0
  5316 ;;      Locals:         3       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0
  5318 ;;      Totals:         9       0       0       0       0       0       0
  5319 ;;Total ram usage:        9 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    2
  5322 ;; This function calls:
  5323 ;;		___lwdiv
  5324 ;;		___lwmod
  5325 ;; This function is called by:
  5326 ;;		_itoa
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text31
  5331  00122C                     __ptext31:
  5332                           	opt stack 0
  5333  00122C                     _utoa:
  5334                           	opt stack 22
  5335                           
  5336                           ;incstack = 0
  5337  00122C  C01C  F020         	movff	utoa@val,utoa@v
  5338  001230  C01D  F021         	movff	utoa@val+1,utoa@v+1
  5339  001234  C020  F013         	movff	utoa@v,___lwdiv@dividend
  5340  001238  C021  F014         	movff	utoa@v+1,___lwdiv@dividend+1
  5341  00123C  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  5342  001240  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  5343  001244  ECD3  F00B         	call	___lwdiv	;wreg free
  5344  001248  C013  F020         	movff	?___lwdiv,utoa@v
  5345  00124C  C014  F021         	movff	?___lwdiv+1,utoa@v+1
  5346  001250  4A1A               	infsnz	utoa@buf,f,c
  5347  001252  2A1B               	incf	utoa@buf+1,f,c
  5348  001254  5020               	movf	utoa@v,w,c
  5349  001256  1021               	iorwf	utoa@v+1,w,c
  5350  001258  A4D8               	btfss	status,2,c
  5351  00125A  D7EC               	goto	l804
  5352  00125C  C01A  FFD9         	movff	utoa@buf,fsr2l
  5353  001260  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  5354  001264  0E00               	movlw	0
  5355  001266  6EDF               	movwf	indf2,c
  5356  001268  061A               	decf	utoa@buf,f,c
  5357  00126A  A0D8               	btfss	status,0,c
  5358  00126C  061B               	decf	utoa@buf+1,f,c
  5359  00126E  C01C  F013         	movff	utoa@val,___lwmod@dividend
  5360  001272  C01D  F014         	movff	utoa@val+1,___lwmod@dividend+1
  5361  001276  C01E  F015         	movff	utoa@base,___lwmod@divisor
  5362  00127A  C01F  F016         	movff	utoa@base+1,___lwmod@divisor+1
  5363  00127E  ECB1  F00C         	call	___lwmod	;wreg free
  5364  001282  5013               	movf	?___lwmod,w,c
  5365  001284  6E22               	movwf	utoa@c,c
  5366  001286  C01C  F013         	movff	utoa@val,___lwdiv@dividend
  5367  00128A  C01D  F014         	movff	utoa@val+1,___lwdiv@dividend+1
  5368  00128E  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  5369  001292  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  5370  001296  ECD3  F00B         	call	___lwdiv	;wreg free
  5371  00129A  C013  F01C         	movff	?___lwdiv,utoa@val
  5372  00129E  C014  F01D         	movff	?___lwdiv+1,utoa@val+1
  5373  0012A2  0E09               	movlw	9
  5374  0012A4  6422               	cpfsgt	utoa@c,c
  5375  0012A6  D002               	goto	l807
  5376  0012A8  0E07               	movlw	7
  5377  0012AA  2622               	addwf	utoa@c,f,c
  5378  0012AC                     l807:
  5379  0012AC  0E30               	movlw	48
  5380  0012AE  2622               	addwf	utoa@c,f,c
  5381  0012B0  C01A  FFD9         	movff	utoa@buf,fsr2l
  5382  0012B4  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  5383  0012B8  C022  FFDF         	movff	utoa@c,indf2
  5384  0012BC  061A               	decf	utoa@buf,f,c
  5385  0012BE  A0D8               	btfss	status,0,c
  5386  0012C0  061B               	decf	utoa@buf+1,f,c
  5387  0012C2  501C               	movf	utoa@val,w,c
  5388  0012C4  101D               	iorwf	utoa@val+1,w,c
  5389  0012C6  A4D8               	btfss	status,2,c
  5390  0012C8  D7D2               	goto	l806
  5391                           
  5392                           ;	Return value of _utoa is never used
  5393  0012CA  4A1A               	infsnz	utoa@buf,f,c
  5394  0012CC  2A1B               	incf	utoa@buf+1,f,c
  5395  0012CE  0012               	return	
  5396  0012D0                     __end_of_utoa:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           intcon2	equ	0xFF1
  5406                           intcon3	equ	0xFF0
  5407                           postinc0	equ	0xFEE
  5408                           wreg	equ	0xFE8
  5409                           postinc1	equ	0xFE6
  5410                           postdec1	equ	0xFE5
  5411                           fsr1h	equ	0xFE2
  5412                           fsr1l	equ	0xFE1
  5413                           indf2	equ	0xFDF
  5414                           postinc2	equ	0xFDE
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function ___lwmod *****************
  5420 ;; Defined at:
  5421 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  dividend        2   18[COMRAM] unsigned int 
  5424 ;;  divisor         2   20[COMRAM] unsigned int 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  counter         1   22[COMRAM] unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  2   18[COMRAM] unsigned int 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5436 ;;      Params:         4       0       0       0       0       0       0
  5437 ;;      Locals:         1       0       0       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0
  5439 ;;      Totals:         5       0       0       0       0       0       0
  5440 ;;Total ram usage:        5 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_utoa
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text32
  5451  001962                     __ptext32:
  5452                           	opt stack 0
  5453  001962                     ___lwmod:
  5454                           	opt stack 22
  5455                           
  5456                           ;incstack = 0
  5457  001962  5015               	movf	___lwmod@divisor,w,c
  5458  001964  1016               	iorwf	___lwmod@divisor+1,w,c
  5459  001966  B4D8               	btfsc	status,2,c
  5460  001968  D018               	goto	l916
  5461  00196A  0E01               	movlw	1
  5462  00196C  6E17               	movwf	___lwmod@counter,c
  5463  00196E  D004               	goto	l911
  5464  001970  90D8               	bcf	status,0,c
  5465  001972  3615               	rlcf	___lwmod@divisor,f,c
  5466  001974  3616               	rlcf	___lwmod@divisor+1,f,c
  5467  001976  2A17               	incf	___lwmod@counter,f,c
  5468  001978                     l911:
  5469  001978  AE16               	btfss	___lwmod@divisor+1,7,c
  5470  00197A  D7FA               	goto	l912
  5471  00197C                     u2130:
  5472  00197C  5015               	movf	___lwmod@divisor,w,c
  5473  00197E  5C13               	subwf	___lwmod@dividend,w,c
  5474  001980  5016               	movf	___lwmod@divisor+1,w,c
  5475  001982  5814               	subwfb	___lwmod@dividend+1,w,c
  5476  001984  A0D8               	btfss	status,0,c
  5477  001986  D004               	goto	l915
  5478  001988  5015               	movf	___lwmod@divisor,w,c
  5479  00198A  5E13               	subwf	___lwmod@dividend,f,c
  5480  00198C  5016               	movf	___lwmod@divisor+1,w,c
  5481  00198E  5A14               	subwfb	___lwmod@dividend+1,f,c
  5482  001990                     l915:
  5483  001990  90D8               	bcf	status,0,c
  5484  001992  3216               	rrcf	___lwmod@divisor+1,f,c
  5485  001994  3215               	rrcf	___lwmod@divisor,f,c
  5486  001996  2E17               	decfsz	___lwmod@counter,f,c
  5487  001998  D7F1               	goto	u2130
  5488  00199A                     l916:
  5489  00199A  C013  F013         	movff	___lwmod@dividend,?___lwmod
  5490  00199E  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  5491  0019A2  0012               	return		;funcret
  5492  0019A4                     __end_of___lwmod:
  5493                           	opt stack 0
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           intcon	equ	0xFF2
  5501                           intcon2	equ	0xFF1
  5502                           intcon3	equ	0xFF0
  5503                           postinc0	equ	0xFEE
  5504                           wreg	equ	0xFE8
  5505                           postinc1	equ	0xFE6
  5506                           postdec1	equ	0xFE5
  5507                           fsr1h	equ	0xFE2
  5508                           fsr1l	equ	0xFE1
  5509                           indf2	equ	0xFDF
  5510                           postinc2	equ	0xFDE
  5511                           fsr2h	equ	0xFDA
  5512                           fsr2l	equ	0xFD9
  5513                           status	equ	0xFD8
  5514                           
  5515 ;; *************** function ___lwdiv *****************
  5516 ;; Defined at:
  5517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  dividend        2   18[COMRAM] unsigned int 
  5520 ;;  divisor         2   20[COMRAM] unsigned int 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  quotient        2   23[COMRAM] unsigned int 
  5523 ;;  counter         1   22[COMRAM] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  2   18[COMRAM] unsigned int 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5533 ;;      Params:         4       0       0       0       0       0       0
  5534 ;;      Locals:         3       0       0       0       0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0
  5536 ;;      Totals:         7       0       0       0       0       0       0
  5537 ;;Total ram usage:        7 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    1
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_utoa
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text33
  5548  0017A6                     __ptext33:
  5549                           	opt stack 0
  5550  0017A6                     ___lwdiv:
  5551                           	opt stack 22
  5552                           
  5553                           ;incstack = 0
  5554  0017A6  0E00               	movlw	0
  5555  0017A8  6E19               	movwf	___lwdiv@quotient+1,c
  5556  0017AA  0E00               	movlw	0
  5557  0017AC  6E18               	movwf	___lwdiv@quotient,c
  5558  0017AE  5015               	movf	___lwdiv@divisor,w,c
  5559  0017B0  1016               	iorwf	___lwdiv@divisor+1,w,c
  5560  0017B2  B4D8               	btfsc	status,2,c
  5561  0017B4  D01C               	goto	l906
  5562  0017B6  0E01               	movlw	1
  5563  0017B8  6E17               	movwf	___lwdiv@counter,c
  5564  0017BA  D004               	goto	l901
  5565  0017BC  90D8               	bcf	status,0,c
  5566  0017BE  3615               	rlcf	___lwdiv@divisor,f,c
  5567  0017C0  3616               	rlcf	___lwdiv@divisor+1,f,c
  5568  0017C2  2A17               	incf	___lwdiv@counter,f,c
  5569  0017C4                     l901:
  5570  0017C4  AE16               	btfss	___lwdiv@divisor+1,7,c
  5571  0017C6  D7FA               	goto	l902
  5572  0017C8                     u2100:
  5573  0017C8  90D8               	bcf	status,0,c
  5574  0017CA  3618               	rlcf	___lwdiv@quotient,f,c
  5575  0017CC  3619               	rlcf	___lwdiv@quotient+1,f,c
  5576  0017CE  5015               	movf	___lwdiv@divisor,w,c
  5577  0017D0  5C13               	subwf	___lwdiv@dividend,w,c
  5578  0017D2  5016               	movf	___lwdiv@divisor+1,w,c
  5579  0017D4  5814               	subwfb	___lwdiv@dividend+1,w,c
  5580  0017D6  A0D8               	btfss	status,0,c
  5581  0017D8  D005               	goto	l905
  5582  0017DA  5015               	movf	___lwdiv@divisor,w,c
  5583  0017DC  5E13               	subwf	___lwdiv@dividend,f,c
  5584  0017DE  5016               	movf	___lwdiv@divisor+1,w,c
  5585  0017E0  5A14               	subwfb	___lwdiv@dividend+1,f,c
  5586  0017E2  8018               	bsf	___lwdiv@quotient,0,c
  5587  0017E4                     l905:
  5588  0017E4  90D8               	bcf	status,0,c
  5589  0017E6  3216               	rrcf	___lwdiv@divisor+1,f,c
  5590  0017E8  3215               	rrcf	___lwdiv@divisor,f,c
  5591  0017EA  2E17               	decfsz	___lwdiv@counter,f,c
  5592  0017EC  D7ED               	goto	u2100
  5593  0017EE                     l906:
  5594  0017EE  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  5595  0017F2  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5596  0017F6  0012               	return		;funcret
  5597  0017F8                     __end_of___lwdiv:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           prodh	equ	0xFF4
  5604                           prodl	equ	0xFF3
  5605                           intcon	equ	0xFF2
  5606                           intcon2	equ	0xFF1
  5607                           intcon3	equ	0xFF0
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           postinc1	equ	0xFE6
  5611                           postdec1	equ	0xFE5
  5612                           fsr1h	equ	0xFE2
  5613                           fsr1l	equ	0xFE1
  5614                           indf2	equ	0xFDF
  5615                           postinc2	equ	0xFDE
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _command_builder_add_string *****************
  5621 ;; Defined at:
  5622 ;;		line 492 in file "SlaveComm_PIC18.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5625 ;;		 -> communications@send_buffer(42), 
  5626 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5627 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5628 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5629 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5630 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5631 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5632 ;;		 -> xsum_builder@xsumBuf(16), STR_15(3), STR_14(5), STR_13(4), 
  5633 ;;		 -> STR_11(4), STR_10(5), STR_9(4), 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  inx             2   30[COMRAM] int 
  5636 ;;  xsum            2   28[COMRAM] int 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  2   22[COMRAM] int 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5646 ;;      Params:         4       0       0       0       0       0       0
  5647 ;;      Locals:         4       0       0       0       0       0       0
  5648 ;;      Temps:          2       0       0       0       0       0       0
  5649 ;;      Totals:        10       0       0       0       0       0       0
  5650 ;;Total ram usage:       10 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    2
  5653 ;; This function calls:
  5654 ;;		_command_builder_add_char
  5655 ;; This function is called by:
  5656 ;;		_command_builder1
  5657 ;;		_command_builder3
  5658 ;;		_xsum_builder
  5659 ;;		_command_builder2
  5660 ;;		_command_builder4
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text34
  5665  00136E                     __ptext34:
  5666                           	opt stack 0
  5667  00136E                     _command_builder_add_string:
  5668                           	opt stack 23
  5669                           
  5670                           ;SlaveComm_PIC18.c: 494: int xsum = 0;
  5671                           
  5672                           ;incstack = 0
  5673  00136E  0E00               	movlw	0
  5674  001370  6E1E               	movwf	command_builder_add_string@xsum+1,c
  5675  001372  0E00               	movlw	0
  5676  001374  6E1D               	movwf	command_builder_add_string@xsum,c
  5677                           
  5678                           ;SlaveComm_PIC18.c: 495: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  5679  001376  0E00               	movlw	0
  5680  001378  6E20               	movwf	command_builder_add_string@inx+1,c
  5681  00137A  0E00               	movlw	0
  5682  00137C  6E1F               	movwf	command_builder_add_string@inx,c
  5683  00137E  D023               	goto	l384
  5684  001380                     
  5685                           ;SlaveComm_PIC18.c: 496: {
  5686                           ;SlaveComm_PIC18.c: 497: xsum += command_builder_add_char( send_buffer, data_string[inx]
      +                           );
  5687  001380  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5688  001384  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5689  001388  501F               	movf	command_builder_add_string@inx,w,c
  5690  00138A  2419               	addwf	command_builder_add_string@data_string,w,c
  5691  00138C  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5692  00138E  5020               	movf	command_builder_add_string@inx+1,w,c
  5693  001390  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5694  001392  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5695  001394  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5696  001398  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5697  00139C  6AF8               	clrf	tblptru,c
  5698  00139E  0E05               	movlw	(high __ramtop+-1)
  5699  0013A0  64F7               	cpfsgt	tblptrh,c
  5700  0013A2  D003               	bra	u2197
  5701  0013A4  0008               	tblrd		*
  5702  0013A6  50F5               	movf	tablat,w,c
  5703  0013A8  D005               	bra	u2190
  5704  0013AA                     u2197:
  5705  0013AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5706  0013AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5707  0013B2  50E7               	movf	indf1,w,c
  5708  0013B4                     u2190:
  5709  0013B4  6E15               	movwf	command_builder_add_char@data,c
  5710  0013B6  EC24  F00B         	call	_command_builder_add_char	;wreg free
  5711  0013BA  5013               	movf	?_command_builder_add_char,w,c
  5712  0013BC  261D               	addwf	command_builder_add_string@xsum,f,c
  5713  0013BE  5014               	movf	?_command_builder_add_char+1,w,c
  5714  0013C0  221E               	addwfc	command_builder_add_string@xsum+1,f,c
  5715  0013C2  4A1F               	infsnz	command_builder_add_string@inx,f,c
  5716  0013C4  2A20               	incf	command_builder_add_string@inx+1,f,c
  5717  0013C6                     l384:
  5718  0013C6  501F               	movf	command_builder_add_string@inx,w,c
  5719  0013C8  2419               	addwf	command_builder_add_string@data_string,w,c
  5720  0013CA  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5721  0013CC  5020               	movf	command_builder_add_string@inx+1,w,c
  5722  0013CE  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5723  0013D0  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5724  0013D2  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5725  0013D6  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5726  0013DA  6AF8               	clrf	tblptru,c
  5727  0013DC  0E05               	movlw	(high __ramtop+-1)
  5728  0013DE  64F7               	cpfsgt	tblptrh,c
  5729  0013E0  D003               	bra	u2207
  5730  0013E2  0008               	tblrd		*
  5731  0013E4  50F5               	movf	tablat,w,c
  5732  0013E6  D005               	bra	u2200
  5733  0013E8                     u2207:
  5734  0013E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5735  0013EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5736  0013F0  50E7               	movf	indf1,w,c
  5737  0013F2                     u2200:
  5738  0013F2  0900               	iorlw	0
  5739  0013F4  A4D8               	btfss	status,2,c
  5740  0013F6  D7C4               	goto	l385
  5741                           
  5742                           ;SlaveComm_PIC18.c: 498: }
  5743                           ;SlaveComm_PIC18.c: 500: return xsum;
  5744  0013F8  C01D  F017         	movff	command_builder_add_string@xsum,?_command_builder_add_string
  5745  0013FC  C01E  F018         	movff	command_builder_add_string@xsum+1,?_command_builder_add_string+1
  5746  001400  0012               	return		;funcret
  5747  001402                     __end_of_command_builder_add_string:
  5748                           	opt stack 0
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           prodh	equ	0xFF4
  5754                           prodl	equ	0xFF3
  5755                           intcon	equ	0xFF2
  5756                           intcon2	equ	0xFF1
  5757                           intcon3	equ	0xFF0
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           indf1	equ	0xFE7
  5761                           postinc1	equ	0xFE6
  5762                           postdec1	equ	0xFE5
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           indf2	equ	0xFDF
  5766                           postinc2	equ	0xFDE
  5767                           fsr2h	equ	0xFDA
  5768                           fsr2l	equ	0xFD9
  5769                           status	equ	0xFD8
  5770                           
  5771 ;; *************** function _command_builder_add_char *****************
  5772 ;; Defined at:
  5773 ;;		line 479 in file "SlaveComm_PIC18.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5776 ;;		 -> communications@send_buffer(42), 
  5777 ;;  data            1   20[COMRAM] unsigned char 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  2   18[COMRAM] int 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5789 ;;      Params:         3       0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0
  5791 ;;      Temps:          1       0       0       0       0       0       0
  5792 ;;      Totals:         4       0       0       0       0       0       0
  5793 ;;Total ram usage:        4 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_command_builder1
  5800 ;;		_command_builder3
  5801 ;;		_xsum_builder
  5802 ;;		_command_builder_add_string
  5803 ;;		_command_builder2
  5804 ;;		_command_builder4
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text35
  5809  001648                     __ptext35:
  5810                           	opt stack 0
  5811  001648                     _command_builder_add_char:
  5812                           	opt stack 23
  5813                           
  5814                           ;SlaveComm_PIC18.c: 481: send_buffer->data_buffer[send_buffer->write_position] = data;
  5815                           
  5816                           ;incstack = 0
  5817  001648  EE20 F028          	lfsr	2,40
  5818  00164C  5013               	movf	command_builder_add_char@send_buffer,w,c
  5819  00164E  26D9               	addwf	fsr2l,f,c
  5820  001650  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5821  001652  22DA               	addwfc	fsr2h,f,c
  5822  001654  50DF               	movf	indf2,w,c
  5823  001656  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5824  001658  5016               	movf	??_command_builder_add_char,w,c
  5825  00165A  0D01               	mullw	1
  5826  00165C  50F3               	movf	prodl,w,c
  5827  00165E  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5828  001660  6ED9               	movwf	fsr2l,c
  5829  001662  50F4               	movf	prodh,w,c
  5830  001664  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5831  001666  6EDA               	movwf	fsr2h,c
  5832  001668  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5833                           
  5834                           ;SlaveComm_PIC18.c: 483: send_buffer->write_position++;
  5835  00166C  EE20 F028          	lfsr	2,40
  5836  001670  5013               	movf	command_builder_add_char@send_buffer,w,c
  5837  001672  26D9               	addwf	fsr2l,f,c
  5838  001674  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5839  001676  22DA               	addwfc	fsr2h,f,c
  5840  001678  2ADF               	incf	indf2,f,c
  5841                           
  5842                           ;SlaveComm_PIC18.c: 484: if( send_buffer->write_position >= 40 )
  5843  00167A  EE20 F028          	lfsr	2,40
  5844  00167E  5013               	movf	command_builder_add_char@send_buffer,w,c
  5845  001680  26D9               	addwf	fsr2l,f,c
  5846  001682  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5847  001684  22DA               	addwfc	fsr2h,f,c
  5848  001686  0E27               	movlw	39
  5849  001688  64DF               	cpfsgt	indf2,c
  5850  00168A  D008               	goto	l380
  5851                           
  5852                           ;SlaveComm_PIC18.c: 485: {
  5853                           ;SlaveComm_PIC18.c: 486: send_buffer->write_position = 0;
  5854  00168C  EE20 F028          	lfsr	2,40
  5855  001690  5013               	movf	command_builder_add_char@send_buffer,w,c
  5856  001692  26D9               	addwf	fsr2l,f,c
  5857  001694  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5858  001696  22DA               	addwfc	fsr2h,f,c
  5859  001698  0E00               	movlw	0
  5860  00169A  6EDF               	movwf	indf2,c
  5861  00169C                     l380:
  5862                           
  5863                           ;SlaveComm_PIC18.c: 487: }
  5864                           ;SlaveComm_PIC18.c: 489: return data;
  5865  00169C  C015  F013         	movff	command_builder_add_char@data,?_command_builder_add_char
  5866  0016A0  6A14               	clrf	?_command_builder_add_char+1,c
  5867  0016A2  0012               	return	
  5868  0016A4                     __end_of_command_builder_add_char:
  5869                           	opt stack 0
  5870                           tblptru	equ	0xFF8
  5871                           tblptrh	equ	0xFF7
  5872                           tblptrl	equ	0xFF6
  5873                           tablat	equ	0xFF5
  5874                           prodh	equ	0xFF4
  5875                           prodl	equ	0xFF3
  5876                           intcon	equ	0xFF2
  5877                           intcon2	equ	0xFF1
  5878                           intcon3	equ	0xFF0
  5879                           postinc0	equ	0xFEE
  5880                           wreg	equ	0xFE8
  5881                           indf1	equ	0xFE7
  5882                           postinc1	equ	0xFE6
  5883                           postdec1	equ	0xFE5
  5884                           fsr1h	equ	0xFE2
  5885                           fsr1l	equ	0xFE1
  5886                           indf2	equ	0xFDF
  5887                           postinc2	equ	0xFDE
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _atol *****************
  5893 ;; Defined at:
  5894 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5897 ;;		 -> process_data@parameters(50), 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  a               4   39[COMRAM] long 
  5900 ;;  c               1   43[COMRAM] unsigned char 
  5901 ;;  sign            1   38[COMRAM] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  4   30[COMRAM] long 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5911 ;;      Params:         4       0       0       0       0       0       0
  5912 ;;      Locals:         6       0       0       0       0       0       0
  5913 ;;      Temps:          4       0       0       0       0       0       0
  5914 ;;      Totals:        14       0       0       0       0       0       0
  5915 ;;Total ram usage:       14 bytes
  5916 ;; Hardware stack levels used:    1
  5917 ;; Hardware stack levels required when called:    2
  5918 ;; This function calls:
  5919 ;;		___lmul
  5920 ;;		_isdigit
  5921 ;; This function is called by:
  5922 ;;		_process_data_parameters
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text36
  5927  000E62                     __ptext36:
  5928                           	opt stack 0
  5929  000E62                     _atol:
  5930                           	opt stack 25
  5931                           
  5932                           ;incstack = 0
  5933  000E62  C01F  FFD9         	movff	atol@s,fsr2l
  5934  000E66  C020  FFDA         	movff	atol@s+1,fsr2h
  5935  000E6A  50DF               	movf	indf2,w,c
  5936  000E6C  6E2C               	movwf	atol@c,c
  5937  000E6E  4A1F               	infsnz	atol@s,f,c
  5938  000E70  2A20               	incf	atol@s+1,f,c
  5939  000E72  0E20               	movlw	32
  5940  000E74  182C               	xorwf	atol@c,w,c
  5941  000E76  B4D8               	btfsc	status,2,c
  5942  000E78  D7F4               	goto	_atol
  5943  000E7A  0E09               	movlw	9
  5944  000E7C  182C               	xorwf	atol@c,w,c
  5945  000E7E  B4D8               	btfsc	status,2,c
  5946  000E80  D7F0               	goto	_atol
  5947  000E82  0E00               	movlw	0
  5948  000E84  6E28               	movwf	atol@a,c
  5949  000E86  0E00               	movlw	0
  5950  000E88  6E29               	movwf	atol@a+1,c
  5951  000E8A  0E00               	movlw	0
  5952  000E8C  6E2A               	movwf	atol@a+2,c
  5953  000E8E  0E00               	movlw	0
  5954  000E90  6E2B               	movwf	atol@a+3,c
  5955  000E92  0E00               	movlw	0
  5956  000E94  6E27               	movwf	atol@sign,c
  5957  000E96  0E2D               	movlw	45
  5958  000E98  182C               	xorwf	atol@c,w,c
  5959  000E9A  A4D8               	btfss	status,2,c
  5960  000E9C  D002               	goto	l616
  5961  000E9E  2A27               	incf	atol@sign,f,c
  5962  000EA0  D027               	goto	L3
  5963  000EA2                     l616:
  5964  000EA2  0E2B               	movlw	43
  5965  000EA4  182C               	xorwf	atol@c,w,c
  5966  000EA6  A4D8               	btfss	status,2,c
  5967  000EA8  D02B               	goto	l619
  5968  000EAA  D022               	goto	L3
  5969  000EAC  C028  F013         	movff	atol@a,___lmul@multiplier
  5970  000EB0  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5971  000EB4  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5972  000EB8  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5973  000EBC  0E0A               	movlw	10
  5974  000EBE  6E17               	movwf	___lmul@multiplicand,c
  5975  000EC0  0E00               	movlw	0
  5976  000EC2  6E18               	movwf	___lmul@multiplicand+1,c
  5977  000EC4  0E00               	movlw	0
  5978  000EC6  6E19               	movwf	___lmul@multiplicand+2,c
  5979  000EC8  0E00               	movlw	0
  5980  000ECA  6E1A               	movwf	___lmul@multiplicand+3,c
  5981  000ECC  EC7F  F00B         	call	___lmul	;wreg free
  5982  000ED0  C02C  F023         	movff	atol@c,??_atol
  5983  000ED4  0ED0               	movlw	208
  5984  000ED6  2623               	addwf	??_atol,f,c
  5985  000ED8  5023               	movf	??_atol,w,c
  5986  000EDA  2413               	addwf	?___lmul,w,c
  5987  000EDC  6E28               	movwf	atol@a,c
  5988  000EDE  0E00               	movlw	0
  5989  000EE0  2014               	addwfc	?___lmul+1,w,c
  5990  000EE2  6E29               	movwf	atol@a+1,c
  5991  000EE4  0E00               	movlw	0
  5992  000EE6  2015               	addwfc	?___lmul+2,w,c
  5993  000EE8  6E2A               	movwf	atol@a+2,c
  5994  000EEA  0E00               	movlw	0
  5995  000EEC  2016               	addwfc	?___lmul+3,w,c
  5996  000EEE  6E2B               	movwf	atol@a+3,c
  5997  000EF0                     L3:
  5998  000EF0  C01F  FFD9         	movff	atol@s,fsr2l
  5999  000EF4  C020  FFDA         	movff	atol@s+1,fsr2h
  6000  000EF8  50DF               	movf	indf2,w,c
  6001  000EFA  6E2C               	movwf	atol@c,c
  6002  000EFC  4A1F               	infsnz	atol@s,f,c
  6003  000EFE  2A20               	incf	atol@s+1,f,c
  6004  000F00                     l619:
  6005  000F00  502C               	movf	atol@c,w,c
  6006  000F02  EC87  F00D         	call	_isdigit
  6007  000F06  B0D8               	btfsc	status,0,c
  6008  000F08  D7D1               	goto	l620
  6009  000F0A  5027               	movf	atol@sign,w,c
  6010  000F0C  B4D8               	btfsc	status,2,c
  6011  000F0E  D01A               	goto	l622
  6012  000F10  C028  F023         	movff	atol@a,??_atol
  6013  000F14  C029  F024         	movff	atol@a+1,??_atol+1
  6014  000F18  C02A  F025         	movff	atol@a+2,??_atol+2
  6015  000F1C  C02B  F026         	movff	atol@a+3,??_atol+3
  6016  000F20  1E23               	comf	??_atol,f,c
  6017  000F22  1E24               	comf	??_atol+1,f,c
  6018  000F24  1E25               	comf	??_atol+2,f,c
  6019  000F26  1E26               	comf	??_atol+3,f,c
  6020  000F28  2A23               	incf	??_atol,f,c
  6021  000F2A  0E00               	movlw	0
  6022  000F2C  2224               	addwfc	??_atol+1,f,c
  6023  000F2E  2225               	addwfc	??_atol+2,f,c
  6024  000F30  2226               	addwfc	??_atol+3,f,c
  6025  000F32  C023  F01F         	movff	??_atol,?_atol
  6026  000F36  C024  F020         	movff	??_atol+1,?_atol+1
  6027  000F3A  C025  F021         	movff	??_atol+2,?_atol+2
  6028  000F3E  C026  F022         	movff	??_atol+3,?_atol+3
  6029  000F42  0012               	return	
  6030  000F44                     l622:
  6031  000F44  C028  F01F         	movff	atol@a,?_atol
  6032  000F48  C029  F020         	movff	atol@a+1,?_atol+1
  6033  000F4C  C02A  F021         	movff	atol@a+2,?_atol+2
  6034  000F50  C02B  F022         	movff	atol@a+3,?_atol+3
  6035  000F54  0012               	return		;funcret
  6036  000F56                     __end_of_atol:
  6037                           	opt stack 0
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           prodh	equ	0xFF4
  6043                           prodl	equ	0xFF3
  6044                           intcon	equ	0xFF2
  6045                           intcon2	equ	0xFF1
  6046                           intcon3	equ	0xFF0
  6047                           postinc0	equ	0xFEE
  6048                           wreg	equ	0xFE8
  6049                           indf1	equ	0xFE7
  6050                           postinc1	equ	0xFE6
  6051                           postdec1	equ	0xFE5
  6052                           fsr1h	equ	0xFE2
  6053                           fsr1l	equ	0xFE1
  6054                           indf2	equ	0xFDF
  6055                           postinc2	equ	0xFDE
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _isdigit *****************
  6061 ;; Defined at:
  6062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  c               1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  c               1   20[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;		None               void
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6076 ;;      Params:         0       0       0       0       0       0       0
  6077 ;;      Locals:         2       0       0       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0       0       0
  6079 ;;      Totals:         3       0       0       0       0       0       0
  6080 ;;Total ram usage:        3 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_atol
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text37
  6091  001B0E                     __ptext37:
  6092                           	opt stack 0
  6093  001B0E                     _isdigit:
  6094                           	opt stack 25
  6095                           
  6096                           ;incstack = 0
  6097                           ;isdigit@c stored from wreg
  6098  001B0E  6E15               	movwf	isdigit@c,c
  6099  001B10  0E00               	movlw	0
  6100  001B12  6E14               	movwf	_isdigit$2307,c
  6101  001B14  0E3A               	movlw	58
  6102  001B16  6015               	cpfslt	isdigit@c,c
  6103  001B18  D005               	goto	l794
  6104  001B1A  0E2F               	movlw	47
  6105  001B1C  6415               	cpfsgt	isdigit@c,c
  6106  001B1E  D002               	goto	l794
  6107  001B20  0E01               	movlw	1
  6108  001B22  6E14               	movwf	_isdigit$2307,c
  6109  001B24                     l794:
  6110  001B24  C014  F013         	movff	_isdigit$2307,??_isdigit
  6111  001B28  3013               	rrcf	??_isdigit,w,c
  6112  001B2A  0012               	return	
  6113  001B2C                     __end_of_isdigit:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           prodh	equ	0xFF4
  6120                           prodl	equ	0xFF3
  6121                           intcon	equ	0xFF2
  6122                           intcon2	equ	0xFF1
  6123                           intcon3	equ	0xFF0
  6124                           postinc0	equ	0xFEE
  6125                           wreg	equ	0xFE8
  6126                           indf1	equ	0xFE7
  6127                           postinc1	equ	0xFE6
  6128                           postdec1	equ	0xFE5
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           indf2	equ	0xFDF
  6132                           postinc2	equ	0xFDE
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function ___lmul *****************
  6138 ;; Defined at:
  6139 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  multiplier      4   18[COMRAM] unsigned long 
  6142 ;;  multiplicand    4   22[COMRAM] unsigned long 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  product         4   26[COMRAM] unsigned long 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  4   18[COMRAM] unsigned long 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6154 ;;      Params:         8       0       0       0       0       0       0
  6155 ;;      Locals:         4       0       0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0
  6157 ;;      Totals:        12       0       0       0       0       0       0
  6158 ;;Total ram usage:       12 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    1
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_powerPulseCheck
  6165 ;;		_atol
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text38
  6170  0016FE                     __ptext38:
  6171                           	opt stack 0
  6172  0016FE                     ___lmul:
  6173                           	opt stack 28
  6174                           
  6175                           ;incstack = 0
  6176  0016FE  0E00               	movlw	0
  6177  001700  6E1B               	movwf	___lmul@product,c
  6178  001702  0E00               	movlw	0
  6179  001704  6E1C               	movwf	___lmul@product+1,c
  6180  001706  0E00               	movlw	0
  6181  001708  6E1D               	movwf	___lmul@product+2,c
  6182  00170A  0E00               	movlw	0
  6183  00170C  6E1E               	movwf	___lmul@product+3,c
  6184  00170E  A013               	btfss	___lmul@multiplier,0,c
  6185  001710  D008               	goto	l463
  6186  001712  5017               	movf	___lmul@multiplicand,w,c
  6187  001714  261B               	addwf	___lmul@product,f,c
  6188  001716  5018               	movf	___lmul@multiplicand+1,w,c
  6189  001718  221C               	addwfc	___lmul@product+1,f,c
  6190  00171A  5019               	movf	___lmul@multiplicand+2,w,c
  6191  00171C  221D               	addwfc	___lmul@product+2,f,c
  6192  00171E  501A               	movf	___lmul@multiplicand+3,w,c
  6193  001720  221E               	addwfc	___lmul@product+3,f,c
  6194  001722                     l463:
  6195  001722  90D8               	bcf	status,0,c
  6196  001724  3617               	rlcf	___lmul@multiplicand,f,c
  6197  001726  3618               	rlcf	___lmul@multiplicand+1,f,c
  6198  001728  3619               	rlcf	___lmul@multiplicand+2,f,c
  6199  00172A  361A               	rlcf	___lmul@multiplicand+3,f,c
  6200  00172C  90D8               	bcf	status,0,c
  6201  00172E  3216               	rrcf	___lmul@multiplier+3,f,c
  6202  001730  3215               	rrcf	___lmul@multiplier+2,f,c
  6203  001732  3214               	rrcf	___lmul@multiplier+1,f,c
  6204  001734  3213               	rrcf	___lmul@multiplier,f,c
  6205  001736  5013               	movf	___lmul@multiplier,w,c
  6206  001738  1014               	iorwf	___lmul@multiplier+1,w,c
  6207  00173A  1015               	iorwf	___lmul@multiplier+2,w,c
  6208  00173C  1016               	iorwf	___lmul@multiplier+3,w,c
  6209  00173E  A4D8               	btfss	status,2,c
  6210  001740  D7E6               	goto	l462
  6211  001742  C01B  F013         	movff	___lmul@product,?___lmul
  6212  001746  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  6213  00174A  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  6214  00174E  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  6215  001752  0012               	return		;funcret
  6216  001754                     __end_of___lmul:
  6217                           	opt stack 0
  6218                           tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           prodh	equ	0xFF4
  6223                           prodl	equ	0xFF3
  6224                           intcon	equ	0xFF2
  6225                           intcon2	equ	0xFF1
  6226                           intcon3	equ	0xFF0
  6227                           postinc0	equ	0xFEE
  6228                           wreg	equ	0xFE8
  6229                           indf1	equ	0xFE7
  6230                           postinc1	equ	0xFE6
  6231                           postdec1	equ	0xFE5
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           indf2	equ	0xFDF
  6235                           postinc2	equ	0xFDE
  6236                           fsr2h	equ	0xFDA
  6237                           fsr2l	equ	0xFD9
  6238                           status	equ	0xFD8
  6239                           
  6240 ;; *************** function _process_data_parameterize *****************
  6241 ;; Defined at:
  6242 ;;		line 260 in file "SlaveComm_PIC18.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  6245 ;;		 -> process_data@parameters(50), 
  6246 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  6247 ;;		 -> communications@receive_buffer(42), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  inx             2   31[COMRAM] int 
  6250 ;;  parameter_po    1   34[COMRAM] unsigned char 
  6251 ;;  parameter_in    1   33[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6261 ;;      Params:         4       0       0       0       0       0       0
  6262 ;;      Locals:         4       0       0       0       0       0       0
  6263 ;;      Temps:          3       0       0       0       0       0       0
  6264 ;;      Totals:        11       0       0       0       0       0       0
  6265 ;;Total ram usage:       11 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    2
  6268 ;; This function calls:
  6269 ;;		___wmul
  6270 ;; This function is called by:
  6271 ;;		_process_data
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text39
  6276  000AC0                     __ptext39:
  6277                           	opt stack 0
  6278  000AC0                     _process_data_parameterize:
  6279                           	opt stack 26
  6280                           
  6281                           ;SlaveComm_PIC18.c: 262: unsigned char parameter_position = 0;
  6282                           
  6283                           ;incstack = 0
  6284  000AC0  0E00               	movlw	0
  6285  000AC2  6E23               	movwf	process_data_parameterize@parameter_position,c
  6286                           
  6287                           ;SlaveComm_PIC18.c: 263: unsigned char parameter_index = 0;
  6288  000AC4  0E00               	movlw	0
  6289  000AC6  6E22               	movwf	process_data_parameterize@parameter_index,c
  6290                           
  6291                           ;SlaveComm_PIC18.c: 272: for (int inx = 0; inx < 5; inx++)
  6292  000AC8  0E00               	movlw	0
  6293  000ACA  6E21               	movwf	process_data_parameterize@inx+1,c
  6294  000ACC  0E00               	movlw	0
  6295  000ACE  6E20               	movwf	process_data_parameterize@inx,c
  6296  000AD0  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6297  000AD2  D008               	goto	l318
  6298  000AD4  5021               	movf	process_data_parameterize@inx+1,w,c
  6299  000AD6  E105               	bnz	u1510
  6300  000AD8  0E05               	movlw	5
  6301  000ADA  5C20               	subwf	process_data_parameterize@inx,w,c
  6302  000ADC  B0D8               	btfsc	status,0,c
  6303  000ADE  D082               	goto	l320
  6304  000AE0  D001               	goto	l318
  6305  000AE2                     u1510:
  6306  000AE2  D080               	goto	l320
  6307  000AE4                     l318:
  6308                           
  6309                           ;SlaveComm_PIC18.c: 273: {
  6310                           ;SlaveComm_PIC18.c: 274: parameters[inx][0] = '\0';
  6311  000AE4  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6312  000AE8  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6313  000AEC  0E00               	movlw	0
  6314  000AEE  6E16               	movwf	___wmul@multiplicand+1,c
  6315  000AF0  0E0A               	movlw	10
  6316  000AF2  6E15               	movwf	___wmul@multiplicand,c
  6317  000AF4  EC43  F00D         	call	___wmul	;wreg free
  6318  000AF8  5013               	movf	?___wmul,w,c
  6319  000AFA  2419               	addwf	process_data_parameterize@parameters,w,c
  6320  000AFC  6ED9               	movwf	fsr2l,c
  6321  000AFE  5014               	movf	?___wmul+1,w,c
  6322  000B00  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6323  000B02  6EDA               	movwf	fsr2h,c
  6324  000B04  0E00               	movlw	0
  6325  000B06  6EDF               	movwf	indf2,c
  6326  000B08  4A20               	infsnz	process_data_parameterize@inx,f,c
  6327  000B0A  2A21               	incf	process_data_parameterize@inx+1,f,c
  6328  000B0C  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6329  000B0E  D7EA               	goto	l318
  6330  000B10  5021               	movf	process_data_parameterize@inx+1,w,c
  6331  000B12  E168               	bnz	l2385
  6332  000B14  D7E1               	goto	L2
  6333  000B16                     
  6334                           ;SlaveComm_PIC18.c: 286: parameter_position = 0;
  6335  000B16  0E00               	movlw	0
  6336  000B18  6E23               	movwf	process_data_parameterize@parameter_position,c
  6337                           
  6338                           ;SlaveComm_PIC18.c: 287: parameter_index++;
  6339  000B1A  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6340                           
  6341                           ;SlaveComm_PIC18.c: 289: if (parameter_index >= 5)
  6342  000B1C  0E04               	movlw	4
  6343  000B1E  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6344  000B20  D05A               	goto	l324
  6345                           
  6346                           ;SlaveComm_PIC18.c: 290: {
  6347                           ;SlaveComm_PIC18.c: 293: parameter_index = (5 - 1);
  6348  000B22  0E04               	movlw	4
  6349  000B24  6E22               	movwf	process_data_parameterize@parameter_index,c
  6350                           
  6351                           ;SlaveComm_PIC18.c: 294: }
  6352                           ;SlaveComm_PIC18.c: 296: break;
  6353  000B26  D057               	goto	l324
  6354  000B28                     
  6355                           ;SlaveComm_PIC18.c: 299: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6356  000B28  EE20 F029          	lfsr	2,41
  6357  000B2C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6358  000B2E  26D9               	addwf	fsr2l,f,c
  6359  000B30  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6360  000B32  22DA               	addwfc	fsr2h,f,c
  6361  000B34  50DF               	movf	indf2,w,c
  6362  000B36  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6363  000B38  501D               	movf	??_process_data_parameterize,w,c
  6364  000B3A  0D01               	mullw	1
  6365  000B3C  50F3               	movf	prodl,w,c
  6366  000B3E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6367  000B40  6ED9               	movwf	fsr2l,c
  6368  000B42  50F4               	movf	prodh,w,c
  6369  000B44  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6370  000B46  6EDA               	movwf	fsr2h,c
  6371  000B48  5022               	movf	process_data_parameterize@parameter_index,w,c
  6372  000B4A  0D0A               	mullw	10
  6373  000B4C  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6374  000B50  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6375  000B54  50F3               	movf	prodl,w,c
  6376  000B56  261E               	addwf	??_process_data_parameterize+1,f,c
  6377  000B58  50F4               	movf	prodh,w,c
  6378  000B5A  221F               	addwfc	??_process_data_parameterize+2,f,c
  6379  000B5C  5023               	movf	process_data_parameterize@parameter_position,w,c
  6380  000B5E  0D01               	mullw	1
  6381  000B60  50F3               	movf	prodl,w,c
  6382  000B62  241E               	addwf	??_process_data_parameterize+1,w,c
  6383  000B64  6EE1               	movwf	fsr1l,c
  6384  000B66  50F4               	movf	prodh,w,c
  6385  000B68  201F               	addwfc	??_process_data_parameterize+2,w,c
  6386  000B6A  6EE2               	movwf	fsr1h,c
  6387  000B6C  CFDF FFE7          	movff	indf2,indf1
  6388                           
  6389                           ;SlaveComm_PIC18.c: 300: parameter_position++;
  6390  000B70  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6391                           
  6392                           ;SlaveComm_PIC18.c: 301: if (parameter_position >= 10)
  6393  000B72  0E09               	movlw	9
  6394  000B74  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6395  000B76  D002               	goto	l328
  6396                           
  6397                           ;SlaveComm_PIC18.c: 302: {
  6398                           ;SlaveComm_PIC18.c: 305: parameter_position = (10 - 1);
  6399  000B78  0E09               	movlw	9
  6400  000B7A  6E23               	movwf	process_data_parameterize@parameter_position,c
  6401  000B7C                     l328:
  6402                           
  6403                           ;SlaveComm_PIC18.c: 306: }
  6404                           ;SlaveComm_PIC18.c: 309: parameters[parameter_index][parameter_position] = '\0';
  6405  000B7C  5022               	movf	process_data_parameterize@parameter_index,w,c
  6406  000B7E  0D0A               	mullw	10
  6407  000B80  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6408  000B84  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6409  000B88  50F3               	movf	prodl,w,c
  6410  000B8A  261D               	addwf	??_process_data_parameterize,f,c
  6411  000B8C  50F4               	movf	prodh,w,c
  6412  000B8E  221E               	addwfc	??_process_data_parameterize+1,f,c
  6413  000B90  5023               	movf	process_data_parameterize@parameter_position,w,c
  6414  000B92  0D01               	mullw	1
  6415  000B94  50F3               	movf	prodl,w,c
  6416  000B96  241D               	addwf	??_process_data_parameterize,w,c
  6417  000B98  6ED9               	movwf	fsr2l,c
  6418  000B9A  50F4               	movf	prodh,w,c
  6419  000B9C  201E               	addwfc	??_process_data_parameterize+1,w,c
  6420  000B9E  6EDA               	movwf	fsr2h,c
  6421  000BA0  0E00               	movlw	0
  6422  000BA2  6EDF               	movwf	indf2,c
  6423                           
  6424                           ;SlaveComm_PIC18.c: 311: }
  6425                           
  6426                           ;SlaveComm_PIC18.c: 310: break;
  6427  000BA4  D018               	goto	l324
  6428  000BA6  EE20 F029          	lfsr	2,41
  6429  000BAA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6430  000BAC  26D9               	addwf	fsr2l,f,c
  6431  000BAE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6432  000BB0  22DA               	addwfc	fsr2h,f,c
  6433  000BB2  50DF               	movf	indf2,w,c
  6434  000BB4  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6435  000BB6  501D               	movf	??_process_data_parameterize,w,c
  6436  000BB8  0D01               	mullw	1
  6437  000BBA  50F3               	movf	prodl,w,c
  6438  000BBC  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6439  000BBE  6ED9               	movwf	fsr2l,c
  6440  000BC0  50F4               	movf	prodh,w,c
  6441  000BC2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6442  000BC4  6EDA               	movwf	fsr2h,c
  6443  000BC6  50DF               	movf	indf2,w,c
  6444                           
  6445                           ; Switch size 1, requested type "space"
  6446                           ; Number of cases is 2, Range of values is 33 to 59
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte            7     4 (average)
  6450                           ;	Chosen strategy is simple_byte
  6451  000BC8  0A21               	xorlw	33	; case 33
  6452  000BCA  B4D8               	btfsc	status,2,c
  6453  000BCC  D004               	goto	l324
  6454  000BCE  0A1A               	xorlw	26	; case 59
  6455  000BD0  B4D8               	btfsc	status,2,c
  6456  000BD2  D7A1               	goto	l325
  6457  000BD4  D7A9               	goto	l327
  6458  000BD6                     l324:
  6459                           
  6460                           ;SlaveComm_PIC18.c: 313: buffer_to_parameterize->read_position++;
  6461  000BD6  EE20 F029          	lfsr	2,41
  6462  000BDA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6463  000BDC  26D9               	addwf	fsr2l,f,c
  6464  000BDE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6465  000BE0  22DA               	addwfc	fsr2h,f,c
  6466  000BE2  2ADF               	incf	indf2,f,c
  6467  000BE4                     l320:
  6468  000BE4                     l2385:
  6469  000BE4  EE20 F029          	lfsr	2,41
  6470  000BE8  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6471  000BEA  26D9               	addwf	fsr2l,f,c
  6472  000BEC  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6473  000BEE  22DA               	addwfc	fsr2h,f,c
  6474  000BF0  50DF               	movf	indf2,w,c
  6475  000BF2  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6476  000BF4  501D               	movf	??_process_data_parameterize,w,c
  6477  000BF6  0D01               	mullw	1
  6478  000BF8  50F3               	movf	prodl,w,c
  6479  000BFA  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6480  000BFC  6ED9               	movwf	fsr2l,c
  6481  000BFE  50F4               	movf	prodh,w,c
  6482  000C00  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6483  000C02  6EDA               	movwf	fsr2h,c
  6484  000C04  0E2A               	movlw	42
  6485  000C06  18DE               	xorwf	postinc2,w,c
  6486  000C08  B4D8               	btfsc	status,2,c
  6487  000C0A  0012               	return	
  6488  000C0C  EE20 F029          	lfsr	2,41
  6489  000C10  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6490  000C12  26D9               	addwf	fsr2l,f,c
  6491  000C14  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6492  000C16  22DA               	addwfc	fsr2h,f,c
  6493  000C18  0E28               	movlw	40
  6494  000C1A  60DF               	cpfslt	indf2,c
  6495  000C1C  0012               	return	
  6496  000C1E  EE20 F028          	lfsr	2,40
  6497  000C22  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6498  000C24  26D9               	addwf	fsr2l,f,c
  6499  000C26  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6500  000C28  22DA               	addwfc	fsr2h,f,c
  6501  000C2A  EE10 F029          	lfsr	1,41
  6502  000C2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6503  000C30  26E1               	addwf	fsr1l,f,c
  6504  000C32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6505  000C34  22E2               	addwfc	fsr1h,f,c
  6506  000C36  50DE               	movf	postinc2,w,c
  6507  000C38  18E6               	xorwf	postinc1,w,c
  6508  000C3A  B4D8               	btfsc	status,2,c
  6509  000C3C  0012               	return	
  6510  000C3E  D7B3               	goto	l322
  6511  000C40                     __end_of_process_data_parameterize:
  6512                           	opt stack 0
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           prodh	equ	0xFF4
  6518                           prodl	equ	0xFF3
  6519                           intcon	equ	0xFF2
  6520                           intcon2	equ	0xFF1
  6521                           intcon3	equ	0xFF0
  6522                           postinc0	equ	0xFEE
  6523                           wreg	equ	0xFE8
  6524                           indf1	equ	0xFE7
  6525                           postinc1	equ	0xFE6
  6526                           postdec1	equ	0xFE5
  6527                           fsr1h	equ	0xFE2
  6528                           fsr1l	equ	0xFE1
  6529                           indf2	equ	0xFDF
  6530                           postinc2	equ	0xFDE
  6531                           fsr2h	equ	0xFDA
  6532                           fsr2l	equ	0xFD9
  6533                           status	equ	0xFD8
  6534                           
  6535 ;; *************** function ___wmul *****************
  6536 ;; Defined at:
  6537 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  multiplier      2   18[COMRAM] unsigned int 
  6540 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  product         2   22[COMRAM] unsigned int 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2   18[COMRAM] unsigned int 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0, prodl, prodh
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6552 ;;      Params:         4       0       0       0       0       0       0
  6553 ;;      Locals:         2       0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0
  6555 ;;      Totals:         6       0       0       0       0       0       0
  6556 ;;Total ram usage:        6 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    1
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_process_data_parameterize
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text40
  6567  001A86                     __ptext40:
  6568                           	opt stack 0
  6569  001A86                     ___wmul:
  6570                           	opt stack 26
  6571                           
  6572                           ;incstack = 0
  6573  001A86  5013               	movf	___wmul@multiplier,w,c
  6574  001A88  0215               	mulwf	___wmul@multiplicand,c
  6575  001A8A  CFF3 F017          	movff	prodl,___wmul@product
  6576  001A8E  CFF4 F018          	movff	prodh,___wmul@product+1
  6577  001A92  5013               	movf	___wmul@multiplier,w,c
  6578  001A94  0216               	mulwf	___wmul@multiplicand+1,c
  6579  001A96  50F3               	movf	prodl,w,c
  6580  001A98  2618               	addwf	___wmul@product+1,f,c
  6581  001A9A  5014               	movf	___wmul@multiplier+1,w,c
  6582  001A9C  0215               	mulwf	___wmul@multiplicand,c
  6583  001A9E  50F3               	movf	prodl,w,c
  6584  001AA0  2618               	addwf	___wmul@product+1,f,c
  6585  001AA2  C017  F013         	movff	___wmul@product,?___wmul
  6586  001AA6  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6587  001AAA  0012               	return	
  6588  001AAC                     __end_of___wmul:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           prodh	equ	0xFF4
  6595                           prodl	equ	0xFF3
  6596                           intcon	equ	0xFF2
  6597                           intcon2	equ	0xFF1
  6598                           intcon3	equ	0xFF0
  6599                           postinc0	equ	0xFEE
  6600                           wreg	equ	0xFE8
  6601                           indf1	equ	0xFE7
  6602                           postinc1	equ	0xFE6
  6603                           postdec1	equ	0xFE5
  6604                           fsr1h	equ	0xFE2
  6605                           fsr1l	equ	0xFE1
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           fsr2h	equ	0xFDA
  6609                           fsr2l	equ	0xFD9
  6610                           status	equ	0xFD8
  6611                           
  6612 ;; *************** function _SPISlaveInit *****************
  6613 ;; Defined at:
  6614 ;;		line 687 in file "SlaveComm_PIC18.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;		None
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;		None
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		wreg, status,2
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6628 ;;      Params:         0       0       0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       0       0       0
  6631 ;;      Totals:         0       0       0       0       0       0       0
  6632 ;;Total ram usage:        0 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_communications
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text41
  6643  0018D8                     __ptext41:
  6644                           	opt stack 0
  6645  0018D8                     _SPISlaveInit:
  6646                           	opt stack 28
  6647                           
  6648                           ;SlaveComm_PIC18.c: 690: TRISAbits.TRISA0 = 0;
  6649                           
  6650                           ;incstack = 0
  6651  0018D8  9092               	bcf	3986,0,c	;volatile
  6652                           
  6653                           ;SlaveComm_PIC18.c: 691: TRISAbits.TRISA1 = 1;
  6654  0018DA  8292               	bsf	3986,1,c	;volatile
  6655                           
  6656                           ;SlaveComm_PIC18.c: 693: TRISCbits.TRISC3 = 0;
  6657  0018DC  9694               	bcf	3988,3,c	;volatile
  6658                           
  6659                           ;SlaveComm_PIC18.c: 694: TRISCbits.TRISC5 = 0;
  6660  0018DE  9A94               	bcf	3988,5,c	;volatile
  6661                           
  6662                           ;SlaveComm_PIC18.c: 695: TRISCbits.TRISC6 = 0;
  6663  0018E0  9C94               	bcf	3988,6,c	;volatile
  6664                           
  6665                           ;SlaveComm_PIC18.c: 696: TRISCbits.TRISC7 = 0;
  6666  0018E2  9E94               	bcf	3988,7,c	;volatile
  6667                           
  6668                           ;SlaveComm_PIC18.c: 697: ANSELAbits.ANSA1 = 0b0;
  6669  0018E4  010F               	movlb	15	; () banked
  6670  0018E6  9338               	bcf	56,1,b	;volatile
  6671                           
  6672                           ;SlaveComm_PIC18.c: 699: LATCbits.LATC6 = 1;
  6673  0018E8  8C8B               	bsf	3979,6,c	;volatile
  6674                           
  6675                           ;SlaveComm_PIC18.c: 700: LATCbits.LATC3 = 1;
  6676  0018EA  868B               	bsf	3979,3,c	;volatile
  6677                           
  6678                           ;SlaveComm_PIC18.c: 701: LATCbits.LATC5 = 1;
  6679  0018EC  8A8B               	bsf	3979,5,c	;volatile
  6680                           
  6681                           ;SlaveComm_PIC18.c: 702: LATCbits.LATC7 = 1;
  6682  0018EE  8E8B               	bsf	3979,7,c	;volatile
  6683                           
  6684                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.SSPEN = 0;
  6685  0018F0  9A6C               	bcf	3948,5,c	;volatile
  6686                           
  6687                           ;SlaveComm_PIC18.c: 707: ANSELBbits.ANSB0 = 0b0;
  6688  0018F2  9139               	bcf	57,0,b	;volatile
  6689                           
  6690                           ;SlaveComm_PIC18.c: 708: ANSELBbits.ANSB1 = 0b0;
  6691  0018F4  9339               	bcf	57,1,b	;volatile
  6692                           
  6693                           ;SlaveComm_PIC18.c: 709: ANSELBbits.ANSB2 = 0b0;
  6694  0018F6  9539               	bcf	57,2,b	;volatile
  6695                           
  6696                           ;SlaveComm_PIC18.c: 710: ANSELBbits.ANSB3 = 0b0;
  6697  0018F8  9739               	bcf	57,3,b	;volatile
  6698                           
  6699                           ;SlaveComm_PIC18.c: 712: TRISBbits.RB0 = 0b1;
  6700  0018FA  8093               	bsf	3987,0,c	;volatile
  6701                           
  6702                           ;SlaveComm_PIC18.c: 713: TRISBbits.RB1 = 0b1;
  6703  0018FC  8293               	bsf	3987,1,c	;volatile
  6704                           
  6705                           ;SlaveComm_PIC18.c: 714: TRISBbits.RB2 = 0b1;
  6706  0018FE  8493               	bsf	3987,2,c	;volatile
  6707                           
  6708                           ;SlaveComm_PIC18.c: 715: TRISBbits.RB3 = 0b0;
  6709  001900  9693               	bcf	3987,3,c	;volatile
  6710                           
  6711                           ;SlaveComm_PIC18.c: 717: SSP2STATbits.SMP = 0;
  6712  001902  9E6D               	bcf	3949,7,c	;volatile
  6713                           
  6714                           ;SlaveComm_PIC18.c: 718: SSP2STATbits.CKE = 1;
  6715  001904  8C6D               	bsf	3949,6,c	;volatile
  6716                           
  6717                           ;SlaveComm_PIC18.c: 720: SSP2CON1bits.WCOL = 0;
  6718  001906  9E6C               	bcf	3948,7,c	;volatile
  6719                           
  6720                           ;SlaveComm_PIC18.c: 721: SSP2CON1bits.SSPOV = 0;
  6721  001908  9C6C               	bcf	3948,6,c	;volatile
  6722                           
  6723                           ;SlaveComm_PIC18.c: 722: SSP2CON1bits.SSPEN = 0;
  6724  00190A  9A6C               	bcf	3948,5,c	;volatile
  6725                           
  6726                           ;SlaveComm_PIC18.c: 723: SSP2CON1bits.CKP = 1;
  6727  00190C  886C               	bsf	3948,4,c	;volatile
  6728                           
  6729                           ; BSR set to: 15
  6730                           ;SlaveComm_PIC18.c: 724: SSP2CON1bits.SSPM = 0b0100;
  6731  00190E  506C               	movf	3948,w,c	;volatile
  6732  001910  0BF0               	andlw	-16
  6733  001912  0904               	iorlw	4
  6734  001914  6E6C               	movwf	3948,c	;volatile
  6735                           
  6736                           ;SlaveComm_PIC18.c: 727: SSP2CON3 = 0x00;
  6737  001916  0E00               	movlw	0
  6738  001918  6E69               	movwf	3945,c	;volatile
  6739                           
  6740                           ; BSR set to: 15
  6741                           ;SlaveComm_PIC18.c: 728: SSP2CON3bits.BOEN = 0b0;
  6742  00191A  9869               	bcf	3945,4,c	;volatile
  6743                           
  6744                           ; BSR set to: 15
  6745                           ;SlaveComm_PIC18.c: 730: SSP2CON1bits.SSPEN = 1;
  6746  00191C  8A6C               	bsf	3948,5,c	;volatile
  6747  00191E  0012               	return	
  6748  001920                     __end_of_SPISlaveInit:
  6749                           	opt stack 0
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           prodh	equ	0xFF4
  6755                           prodl	equ	0xFF3
  6756                           intcon	equ	0xFF2
  6757                           intcon2	equ	0xFF1
  6758                           intcon3	equ	0xFF0
  6759                           postinc0	equ	0xFEE
  6760                           wreg	equ	0xFE8
  6761                           indf1	equ	0xFE7
  6762                           postinc1	equ	0xFE6
  6763                           postdec1	equ	0xFE5
  6764                           fsr1h	equ	0xFE2
  6765                           fsr1l	equ	0xFE1
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function _Timer0_ISR *****************
  6773 ;; Defined at:
  6774 ;;		line 221 in file "Current_Sense_Main.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6788 ;;      Params:         0       0       0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0
  6790 ;;      Temps:         18       0       0       0       0       0       0
  6791 ;;      Totals:        18       0       0       0       0       0       0
  6792 ;;Total ram usage:       18 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		Interrupt level 2
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	intcode
  6802  000008                     __pintcode:
  6803                           	opt stack 0
  6804  000008                     _Timer0_ISR:
  6805                           	opt stack 21
  6806                           
  6807                           ; BSR set to: 15
  6808                           ;incstack = 0
  6809  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6810  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6811  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6812  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6813  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6814  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6815  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6816  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6817  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6818  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6819  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6820  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6821  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6822  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6823  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6824  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6825  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6826  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6827  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6828                           
  6829                           ;Current_Sense_Main.c: 224: INTCONbits.TMR0IF = 0;
  6830  000052  94F2               	bcf	intcon,2,c	;volatile
  6831                           
  6832                           ;Current_Sense_Main.c: 226: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6833  000054  0EFC               	movlw	252
  6834  000056  6ED7               	movwf	4055,c	;volatile
  6835                           
  6836                           ;Current_Sense_Main.c: 227: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6837  000058  0E18               	movlw	24
  6838  00005A  6ED6               	movwf	4054,c	;volatile
  6839                           
  6840                           ;Current_Sense_Main.c: 229: timerCountHF++;
  6841  00005C  0E01               	movlw	1
  6842  00005E  2642               	addwf	_timerCountHF,f,c	;volatile
  6843  000060  0E00               	movlw	0
  6844  000062  2243               	addwfc	_timerCountHF+1,f,c	;volatile
  6845  000064  2244               	addwfc	_timerCountHF+2,f,c	;volatile
  6846  000066  2245               	addwfc	_timerCountHF+3,f,c	;volatile
  6847                           
  6848                           ;Current_Sense_Main.c: 230: timerCountLF++;
  6849  000068  0E01               	movlw	1
  6850  00006A  0100               	movlb	0	; () banked
  6851  00006C  27C3               	addwf	_timerCountLF& (0+255),f,b	;volatile
  6852  00006E  0E00               	movlw	0
  6853  000070  23C4               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  6854  000072  23C5               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  6855  000074  23C6               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  6856                           
  6857                           ; BSR set to: 0
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;Current_Sense_Main.c: 232: return;
  6861  000076  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6862  00007A  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6863  00007E  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6864  000082  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6865  000086  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6866  00008A  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6867  00008E  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6868  000092  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6869  000096  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6870  00009A  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6871  00009E  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6872  0000A2  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6873  0000A6  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6874  0000AA  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6875  0000AE  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6876  0000B2  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6877  0000B6  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6878  0000BA  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6879  0000BE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6880  0000C0  0011               	retfie		f
  6881  0000C2                     __end_of_Timer0_ISR:
  6882                           	opt stack 0
  6883                           pclatu	equ	0xFFB
  6884                           pclath	equ	0xFFA
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           intcon2	equ	0xFF1
  6893                           intcon3	equ	0xFF0
  6894                           postinc0	equ	0xFEE
  6895                           fsr0h	equ	0xFEA
  6896                           fsr0l	equ	0xFE9
  6897                           wreg	equ	0xFE8
  6898                           indf1	equ	0xFE7
  6899                           postinc1	equ	0xFE6
  6900                           postdec1	equ	0xFE5
  6901                           fsr1h	equ	0xFE2
  6902                           fsr1l	equ	0xFE1
  6903                           indf2	equ	0xFDF
  6904                           postinc2	equ	0xFDE
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           pclatu	equ	0xFFB
  6909                           pclath	equ	0xFFA
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           prodh	equ	0xFF4
  6915                           prodl	equ	0xFF3
  6916                           intcon	equ	0xFF2
  6917                           intcon2	equ	0xFF1
  6918                           intcon3	equ	0xFF0
  6919                           postinc0	equ	0xFEE
  6920                           fsr0h	equ	0xFEA
  6921                           fsr0l	equ	0xFE9
  6922                           wreg	equ	0xFE8
  6923                           indf1	equ	0xFE7
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           fsr1h	equ	0xFE2
  6927                           fsr1l	equ	0xFE1
  6928                           indf2	equ	0xFDF
  6929                           postinc2	equ	0xFDE
  6930                           fsr2h	equ	0xFDA
  6931                           fsr2l	equ	0xFD9
  6932                           status	equ	0xFD8
  6933                           
  6934                           	psect	rparam
  6935  0000                     pclatu	equ	0xFFB
  6936                           pclath	equ	0xFFA
  6937                           tblptru	equ	0xFF8
  6938                           tblptrh	equ	0xFF7
  6939                           tblptrl	equ	0xFF6
  6940                           tablat	equ	0xFF5
  6941                           prodh	equ	0xFF4
  6942                           prodl	equ	0xFF3
  6943                           intcon	equ	0xFF2
  6944                           intcon2	equ	0xFF1
  6945                           intcon3	equ	0xFF0
  6946                           postinc0	equ	0xFEE
  6947                           fsr0h	equ	0xFEA
  6948                           fsr0l	equ	0xFE9
  6949                           wreg	equ	0xFE8
  6950                           indf1	equ	0xFE7
  6951                           postinc1	equ	0xFE6
  6952                           postdec1	equ	0xFE5
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           indf2	equ	0xFDF
  6956                           postinc2	equ	0xFDE
  6957                           fsr2h	equ	0xFDA
  6958                           fsr2l	equ	0xFD9
  6959                           status	equ	0xFD8
  6960                           
  6961                           	psect	temp
  6962  00004D                     btemp:
  6963                           	opt stack 0
  6964  00004D                     	ds	1
  6965  0000                     int$flags	set	btemp
  6966  0000                     wtemp6	set	btemp+1
  6967                           pclatu	equ	0xFFB
  6968                           pclath	equ	0xFFA
  6969                           tblptru	equ	0xFF8
  6970                           tblptrh	equ	0xFF7
  6971                           tblptrl	equ	0xFF6
  6972                           tablat	equ	0xFF5
  6973                           prodh	equ	0xFF4
  6974                           prodl	equ	0xFF3
  6975                           intcon	equ	0xFF2
  6976                           intcon2	equ	0xFF1
  6977                           intcon3	equ	0xFF0
  6978                           postinc0	equ	0xFEE
  6979                           fsr0h	equ	0xFEA
  6980                           fsr0l	equ	0xFE9
  6981                           wreg	equ	0xFE8
  6982                           indf1	equ	0xFE7
  6983                           postinc1	equ	0xFE6
  6984                           postdec1	equ	0xFE5
  6985                           fsr1h	equ	0xFE2
  6986                           fsr1l	equ	0xFE1
  6987                           indf2	equ	0xFDF
  6988                           postinc2	equ	0xFDE
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     95     156
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> xsum_builder@xsumBuf(BANK0[16]), STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    xsum_builder@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _receive_data->_SPI_receive_data
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_xsum_builder
    _com_command_setEnergyUsed->_command_builder3
    _ultoa->___lldiv
    _command_builder3->_xsum_builder
    _xsum_builder->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _command_builder1->_xsum_builder
    _command_builder3->_xsum_builder

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  164111
                                             90 BANK0      5     5      0
                     _communications
                          _delayMS10
                               _init
                        _initMCPFout
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1597
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     426
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCPFout                                          1     1      0     426
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (2) _delayMS10                                            5     3      2     426
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0  161063
                                             88 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   78893
                                             28 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   24396
                                             56 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   27036
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     443
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   81392
                                             33 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   80050
                                             28 BANK0      5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   22314
                                             52 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     6     2      4   21743
                                             46 COMRAM     6     2      4
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   27126
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2560
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                    10     2      8   24275
                                             46 COMRAM    10     2      8
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (5) _xsum_builder                                        20    16      4   12279
                                             42 COMRAM     4     0      4
                                              0 BANK0     16    16      0
           _command_builder_add_char
         _command_builder_add_string
                               _itoa
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    2226
                                             34 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 9     3      6    1723
                                             25 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     601
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_string                          10     6      4    5635
                                             22 COMRAM    10     6      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (7) _command_builder_add_char                             4     1      3    3457
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     956
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                         18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initMCPFout
     _delayMS10
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5F      9C       4       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112       9        0.0%
DATA                 0      0     112      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 14 11:27:22 2019

                                       _SPISlaveInit 18D8                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l113 0F74                                                  l115 0FA8  
                                                l300 133C                                                  l310 10C0  
                                                l118 0FF2                                                  l311 10D2  
                                                l127 1AC8                                                  l320 0BE4  
                                                l400 0CBC                                                  l160 0ABA  
                                                l152 0994                                                  l401 0C52  
                                                l129 1AC4                                                  l322 0BA6  
                                                l410 0D2A                                                  l402 0C86  
                                                l306 1022                                                  l170 19AE  
                                                l162 0A94                                                  l154 0998  
                                                l163 0A78                                                  l324 0BD6  
                                                l412 0D62                                                  l404 0CB8  
                                                l308 1066                                                  l325 0B16  
                                                l421 1AE8                                                  l157 0A2C  
                                                l318 0AE4                                                  l158 0A3E  
                                                l327 0B28                                                  l351 083A  
                                                l335 0688                                                  l159 0A56  
                                                l328 0B7C                                                  l344 07F2  
                                                l416 1A58                                                  l361 091E  
                                                l353 0868                                                  l337 0712  
                                                l417 1A5C                                                  l281 11F8  
                                                l169 19C0                                                  l346 07AC  
                                                l355 0896                                                  l283 11C2  
                                                l620 0EAC                                                  l380 169C  
                                                l357 08C4                                                  l277 11B0  
                                                l462 170E                                                  l622 0F44  
                                                l390 142E                                                  l463 1722  
                                                l359 08F2                                                  l295 1346  
                                                l287 1212                                                  l279 11E4  
                                                l616 0EA2                                                  l384 13C6  
                                                l800 1944                                                  l296 1314  
                                                l385 1380                                                  l393 148E  
                                                l289 1224                                                  l298 1322  
                                                l619 0F00                                                  l299 1330  
                                                l804 1234                                                  l901 17C4  
                                                l902 17BC                                                  l806 126E  
                                                l911 1978                                                  l807 12AC  
                                                l912 1970                                                  l905 17E4  
                                                l906 17EE                                                  l834 14C0  
                                                l915 1990                                                  l835 14B4  
                                                l916 199A                                                  l844 159E  
                                                l845 1592                                                  l838 14F4  
                                                l839 1502                                                  l848 15C6  
                                                l849 15D4                                                  l794 1B24  
                                                l890 0E3E                                                  l887 0D7C  
                                                l889 0DD4                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 007E  
                                       ?_initMCPFout 0001                                                 l3401 0F64  
                                               l3413 0F98                                                 l2385 0BE4  
                                               l3361 0A2C                                                 l3435 0FE2  
                                               l3419 0FA8                                                 l3375 0A78  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2100 17C8                                                 u2200 13F2  
                                               u2130 197C                                                 u1510 0AE2  
                                               u2207 13E8                                                 u2240 14C4  
                                               u2330 0CF4                                                 u2190 13B4  
                                               u2270 15A2                                                 u2450 1A30  
                                               u2460 1A32                                                 u2197 13AA  
                                               _IPR1 000F9F                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               u2840 0F98                                                 u2907 153A  
                                               u2860 0FD0                                                 u2917 1550  
                                               u2927 1566                                                 u2937 19B4  
                                               u2947 12DA                                                 u2897 1528  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atol 0E62  
                                               _main 0F56                                                 _init 1B72  
                                               _itoa 1920                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                               _utoa 122C                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C2  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 00B9  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                               __end_of_xsum_builder 1648                                       _communications 1188  
                                       main@inx_1084 00BD                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              ?_itoa 0023                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1514                                                ?_utoa 001A  
                                    __end_of___llmod 15E6                                       __CFG_DEBUG$OFF 000000  
                                    __end_of___lwdiv 17F8                                      __end_of___lwmod 19A4  
                                  ?_command_builder1 002F                                    ?_command_builder3 002F  
                                       main@initDone 00BA                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 17F8  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0033                                   ??_command_builder3 0037  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 007E  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1B5C                                     ?_powerPulseCheck 0001  
                                    __end_of_isdigit 1B2C                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0D6C  
                                              pclath 000FFA                                                tablat 000FF5  
                                              utoa@c 0022                                                utoa@v 0020  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0D6C                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 0039                                 ?_initInterruptsClear 0001  
                      command_builder_add_string@inx 001F                                      __initialization 1754  
                                       __end_of_atol 0F56                                         __end_of_main 1016  
                                       __end_of_init 1B84                                         __end_of_itoa 1962  
                             __end_of_communications 122C                                         __end_of_utoa 12D0  
                             _com_command_setVersion 1A60                  __size_of_command_builder_add_string 0094  
                                   _SPI_receive_data 1A38                         command_builder_add_char@data 0015  
                                             ??_atol 0023                                               ??_main 003B  
                                             ??_init 0019                                               ??_itoa 0029  
                                      _SPI_send_data 1AD0                                               ??_utoa 0020  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                ??_initInterruptsClear 0013  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___lmul 16FE                                               ___wmul 1A86  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                          ??___lwdiv 0017                                            ??___lwmod 0017  
                                             _initIO 1AF0                                               clear_0 177A  
                                             clear_1 1786                                               clear_2 1792  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 0039  
                                          ??_initOSC 0013                            _process_data_parameterize 0AC0  
                                             itoa@cp 0029                                         __pdataCOMRAM 0046  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0070                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1A38  
                                   xsum_builder@xsum 002D                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 1798  
                               __size_of_initMCPFout 006C                      powerPulseCheck@timerCountHFLast 0049  
                    com_command_setPower@send_buffer 0039                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                __size_of_xsum_builder 0062  
                                     __pcstackCOMRAM 0001                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0E62  
                          ??_process_data_parameters 003B                   powerPulseCheck@meterEnergyUsedPart 00BF  
                       communications@receive_buffer 0100                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 1402                           _command_builder_add_string 136E  
                                            ??_ultoa 0028                                           __pbssBANK0 00BF  
                                         __pbssBANK1 0100                                       ??_receive_data 0018  
                                       _xsum_builder 15E6                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 1AAC                                              ?___lmul 0013  
                               command_builder1@xsum 0033                                              ?___wmul 0013  
                               command_builder3@xsum 0037                                   __CFG_CCP3MX$PORTB5 000000  
                                 ?_pulseFoutPassThru 0001                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0080           communications@end_of_transmission_received 00D1  
                                     ___lmul@product 001B                          __end_of_resetCommunications 136E  
                                    _meterEnergyUsed 00C7                                  ??_pulseFoutPassThru 0013  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 188E                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1B5C                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 1648                                    __end_of_delayMS10 19D6  
                    __end_of_process_data_parameters 0924                             __end_of_SPI_receive_data 1A60  
                          __size_of_command_builder1 005A                            __size_of_command_builder3 00B2  
                          __end_of_pulseFoutPassThru 1AD0      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0039                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 1492                                      __size_of___wmul 0026  
                                            ___llmod 1580                                              ___lwdiv 17A6  
                                            ___lwmod 1962                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 001E  
                                            __pcinit 1754                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0F56  
                                            __ptext1 1AAC                                              __ptext2 0924  
                                            __ptext3 1B2C                                              __ptext4 1B72  
                                            __ptext5 1B44                                              __ptext6 1514  
                                            __ptext7 19A4                                              __ptext8 17F8  
                                            __ptext9 1AF0                                           _meterWatts 00CB  
                                          _T0CONbits 000FD5                                              _initOSC 1B44  
                                  __end_of_initTimer 1B44                                              _isdigit 1B0E  
                                __size_of_Timer0_ISR 00BA                                              main@inx 00BB  
                                            _strcmp2 0C40                                 end_of_initialization 1798  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 1492  
                          powerPulseCheck@firstPulse 0048                                              itoa@buf 0023  
                                            itoa@val 0025                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1A86                             __size_of_powerPulseCheck 019C  
                                   ??_communications 003B                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                                            utoa@buf 001A                                              utoa@val 001C  
                              receive_data@my_status 003D                                 __end_of_receive_data 10D6  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 00CF                          ??_com_command_setEnergyUsed 003B  
                                      ?_process_data 0081                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                   powerPulseCheck@timerCountHFCheck 0046                           process_data@receive_buffer 0081  
                        __end_of_initInterruptsClear 1844                    __end_of_process_data_parameterize 0C40  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 1844  
                communications@receive_current_state 00D0                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1754                                       __end_of___wmul 1AAC  
                                      __pidataCOMRAM 1B84                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 1B0E                                       ??_process_data 003B  
                        ?_command_builder_add_string 0017                                  start_initialization 1754  
                                      ??_initMCPFout 0018                         resetCommunications@commState 003B  
                                   _command_builder1 16A4                                     _command_builder3 10D6  
                          _com_command_setEnergyUsed 188E                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0039  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 0039                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0035                                    ??_powerPulseCheck 0020  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0037  
                         ??_command_builder_add_char 0016                                          __pbssCOMRAM 003B  
                                      __pcstackBANK0 0060                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C2                                         _isdigit$2307 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 19A4                                  __end_of_initMCPFout 1580  
                      com_command_setEnergyUsed@temp 0070                                   ??_SPI_receive_data 0015  
                                       delayMS10@inx 0016                                     ___lwdiv@dividend 0013  
                              command_builder1@data1 0031                          command_builder1@send_buffer 002F  
                           ?_process_data_parameters 007C                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0031  
                              command_builder3@data2 0033                                command_builder3@data3 0035  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                                           ?___lwdiv 0013                                             ?___lwmod 0013  
                              __end_of_SPI_send_data 1AF0                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 007C  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                            xsum_builder@send_buffer 002B                                    send_data@send_end 0019  
                                          _initTimer 1B2C                                     ___lwdiv@quotient 0018  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009E  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                             pulseFoutPassThru@runonce 0041  
                                       _receive_data 1016                                       ___wmul@product 0017  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 1A08                                            _send_data 1402  
                             ??_com_command_setPower 003B                    process_data_parameters@parameters 007C  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1920                                            copy_data0 1768  
                                        _initMCPFout 1514             process_data@end_of_transmission_received 00B7  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 002F                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                     __end_of_send_end_of_transmission 1B72  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 16A4                             __end_of_command_builder1 16FE  
                           __end_of_command_builder3 1188                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                      ___lwdiv@divisor 0015  
                                    ___lwdiv@counter 0017                                             __ptext10 1188  
                                           __ptext11 1402                                             __ptext20 1A08  
                                           __ptext12 1AD0                                             __ptext21 0C40  
                                           __ptext13 12D0                                             __ptext30 1920  
                                           __ptext22 1B5C                                             __ptext14 1A60  
                                           __ptext31 122C                                             __ptext23 16A4  
                                           __ptext15 1844                                             __ptext40 1A86  
                                           __ptext32 1962                                             __ptext24 188E  
                                           __ptext16 1016                                             __ptext41 18D8  
                                           __ptext33 17A6                                             __ptext25 0D6C  
                                           __ptext17 1A38                                             __ptext34 136E  
                                           __ptext26 1580                                             __ptext18 19D6  
                                           __ptext35 1648                                             __ptext27 1492  
                                           __ptext19 0660                                             __ptext36 0E62  
                                           __ptext28 10D6                                             __ptext37 1B0E  
                                           __ptext29 15E6                                             __ptext38 16FE  
                                           __ptext39 0AC0                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                        ?_xsum_builder 002B  
                     command_builder_add_string@xsum 001D                                      _powerPulseCheck 0924  
                                      __size_of_atol 00F4                                        __size_of_main 00C0  
                                      strmatch@match 0024                                        __size_of_init 0012  
                                      __size_of_itoa 0042                          powerPulseCheck@mcpHFoutLast 0040  
                                      __size_of_utoa 00A4                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                        powerPulseCheck@mcpLFoutLast 003F                                             int$flags 004D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 18D8  
                            __size_of_communications 00A4                                             _strmatch 1A08  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0083  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                           itoa@base 0027                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 003B                                       ??_xsum_builder 002F  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 0085                                         _timerCountHF 0042  
                                       _timerCountLF 00C3                                     ___lwmod@dividend 0013  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 00B8  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 12D0                            __size_of_SPI_receive_data 0028  
                                           utoa@base 001E                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 19D6                                    _SPI_transmit_wait 003E  
                                    ___lwmod@divisor 0015                                __size_of_SPISlaveInit 0048  
                          communications@send_buffer 00D2                                      ___lwmod@counter 0017  
                   __size_of_process_data_parameters 02C4                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0AC0                                 ?_resetCommunications 007C  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0035  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 005C  
                          ?_command_builder_add_char 0013                                  xsum_builder@xsumBuf 0060  
