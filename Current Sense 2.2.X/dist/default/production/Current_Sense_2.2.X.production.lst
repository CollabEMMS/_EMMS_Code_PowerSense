

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu May 03 11:49:08 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.43
    62                           ; Generated 25/07/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18LF25K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  001A46                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for powerCalculation@currentScalar
   101  001A46  0001               	dw	1
   102                           
   103                           ;initializer for powerCalculation@voltageScalar
   104  001A48  0001               	dw	1
   105                           
   106                           ;initializer for powerCalculation@size
   107  001A4A  000E               	dw	14
   108  0000                     _ANSELBbits	set	3897
   109  0000                     _ANSELAbits	set	3896
   110  0000                     _ANSELC	set	3898
   111  0000                     _ANSELB	set	3897
   112  0000                     _ANSELA	set	3896
   113  0000                     _SSP2CON3bits	set	3945
   114  0000                     _SSP2CON3	set	3945
   115  0000                     _SSP2BUF	set	3951
   116  0000                     _SSP2STATbits	set	3949
   117  0000                     _SSP2CON1bits	set	3948
   118  0000                     _T0CONbits	set	4053
   119  0000                     _IPR5	set	3967
   120  0000                     _IPR4	set	3964
   121  0000                     _IPR3	set	4005
   122  0000                     _IPR2	set	4002
   123  0000                     _IPR1	set	3999
   124  0000                     _PIE5	set	3965
   125  0000                     _PIE4	set	3962
   126  0000                     _PIE3	set	4003
   127  0000                     _PIE2	set	4000
   128  0000                     _PIE1	set	3997
   129  0000                     _PIR5	set	3966
   130  0000                     _PIR4	set	3963
   131  0000                     _PIR3	set	4004
   132  0000                     _PIR2	set	4001
   133  0000                     _PIR1	set	3998
   134  0000                     _RCONbits	set	4048
   135  0000                     _INTCON3	set	4080
   136  0000                     _INTCON2	set	4081
   137  0000                     _INTCON	set	4082
   138  0000                     _TRISAbits	set	3986
   139  0000                     _TRISBbits	set	3987
   140  0000                     _TRISCbits	set	3988
   141  0000                     _ADCON0bits	set	4034
   142  0000                     _OSCTUNEbits	set	3995
   143  0000                     _OSCCON2bits	set	4050
   144  0000                     _OSCCONbits	set	4051
   145  0000                     _LATBbits	set	3978
   146  0000                     _PORTBbits	set	3969
   147  0000                     _SSP1CON1bits	set	4038
   148  0000                     _PIR1bits	set	3998
   149  0000                     _SSP1STATbits	set	4039
   150  0000                     _SSP1BUF	set	4041
   151  0000                     _TMR0L	set	4054
   152  0000                     _TMR0H	set	4055
   153  0000                     _INTCONbits	set	4082
   154  0000                     _PORTCbits	set	3970
   155  0000                     _LATAbits	set	3977
   156  0000                     _PORTAbits	set	3968
   157  0000                     _LATCbits	set	3979
   158                           
   159                           	psect	smallconst
   160  000600                     __psmallconst:
   161                           	opt stack 0
   162  000600  00                 	db	0
   163  000601                     STR_3:
   164                           
   165                           ; BSR set to: 0
   166  000601  43                 	db	67	;'C'
   167  000602  61                 	db	97	;'a'
   168  000603  6C                 	db	108	;'l'
   169  000604  69                 	db	105	;'i'
   170  000605  62                 	db	98	;'b'
   171  000606  72                 	db	114	;'r'
   172  000607  61                 	db	97	;'a'
   173  000608  74                 	db	116	;'t'
   174  000609  69                 	db	105	;'i'
   175  00060A  6F                 	db	111	;'o'
   176  00060B  6E                 	db	110	;'n'
   177  00060C  00                 	db	0
   178  00060D                     STR_22:
   179                           
   180                           ; BSR set to: 0
   181  00060D  50                 	db	80	;'P'
   182  00060E  53                 	db	83	;'S'
   183  00060F  56                 	db	86	;'V'
   184  000610  65                 	db	101	;'e'
   185  000611  72                 	db	114	;'r'
   186  000612  73                 	db	115	;'s'
   187  000613  69                 	db	105	;'i'
   188  000614  6F                 	db	111	;'o'
   189  000615  6E                 	db	110	;'n'
   190  000616  00                 	db	0
   191  000617                     STR_4:
   192                           
   193                           ; BSR set to: 0
   194  000617  45                 	db	69	;'E'
   195  000618  6E                 	db	110	;'n'
   196  000619  55                 	db	85	;'U'
   197  00061A  73                 	db	115	;'s'
   198  00061B  65                 	db	101	;'e'
   199  00061C  64                 	db	100	;'d'
   200  00061D  00                 	db	0
   201  00061E                     STR_20:
   202                           
   203                           ; BSR set to: 0
   204  00061E  56                 	db	86	;'V'
   205  00061F  6F                 	db	111	;'o'
   206  000620  6C                 	db	108	;'l'
   207  000621  74                 	db	116	;'t'
   208  000622  73                 	db	115	;'s'
   209  000623  00                 	db	0
   210  000624                     STR_18:
   211                           
   212                           ; BSR set to: 0
   213  000624  57                 	db	87	;'W'
   214  000625  61                 	db	97	;'a'
   215  000626  74                 	db	116	;'t'
   216  000627  74                 	db	116	;'t'
   217  000628  73                 	db	115	;'s'
   218  000629  00                 	db	0
   219  00062A                     STR_7:
   220                           
   221                           ; BSR set to: 0
   222  00062A  4C                 	db	76	;'L'
   223  00062B  45                 	db	69	;'E'
   224  00062C  44                 	db	68	;'D'
   225  00062D  42                 	db	66	;'B'
   226  00062E  00                 	db	0
   227  00062F                     STR_6:
   228                           
   229                           ; BSR set to: 0
   230  00062F  44                 	db	68	;'D'
   231  000630  61                 	db	97	;'a'
   232  000631  74                 	db	116	;'t'
   233  000632  61                 	db	97	;'a'
   234  000633  00                 	db	0
   235  000634                     STR_5:
   236                           
   237                           ; BSR set to: 0
   238  000634  52                 	db	82	;'R'
   239  000635  65                 	db	101	;'e'
   240  000636  61                 	db	97	;'a'
   241  000637  64                 	db	100	;'d'
   242  000638  00                 	db	0
   243  000639                     STR_16:
   244                           
   245                           ; BSR set to: 0
   246  000639  43                 	db	67	;'C'
   247  00063A  6F                 	db	111	;'o'
   248  00063B  6E                 	db	110	;'n'
   249  00063C  66                 	db	102	;'f'
   250  00063D  00                 	db	0
   251  00063E                     STR_21:
   252                           
   253                           ; BSR set to: 0
   254  00063E  41                 	db	65	;'A'
   255  00063F  6D                 	db	109	;'m'
   256  000640  70                 	db	112	;'p'
   257  000641  73                 	db	115	;'s'
   258  000642  00                 	db	0
   259  000643                     
   260                           ; BSR set to: 0
   261  000643  32                 	db	50	;'2'
   262  000644  32                 	db	50	;'2'
   263  000645  32                 	db	50	;'2'
   264  000646  00                 	db	0
   265  000647                     
   266                           ; BSR set to: 0
   267  000647  33                 	db	51	;'3'
   268  000648  33                 	db	51	;'3'
   269  000649  33                 	db	51	;'3'
   270  00064A  00                 	db	0
   271  00064B                     STR_40:
   272                           
   273                           ; BSR set to: 0
   274  00064B  34                 	db	52	;'4'
   275  00064C  34                 	db	52	;'4'
   276  00064D  34                 	db	52	;'4'
   277  00064E  00                 	db	0
   278  00064F                     STR_1:
   279                           
   280                           ; BSR set to: 0
   281  00064F  45                 	db	69	;'E'
   282  000650  4E                 	db	78	;'N'
   283  000651  44                 	db	68	;'D'
   284  000652  00                 	db	0
   285  000653                     STR_11:
   286                           
   287                           ; BSR set to: 0
   288  000653  4F                 	db	79	;'O'
   289  000654  66                 	db	102	;'f'
   290  000655  66                 	db	102	;'f'
   291  000656  00                 	db	0
   292  000657                     STR_2:
   293                           
   294                           ; BSR set to: 0
   295  000657  53                 	db	83	;'S'
   296  000658  65                 	db	101	;'e'
   297  000659  74                 	db	116	;'t'
   298  00065A  00                 	db	0
   299  00065B                     STR_8:
   300                           
   301                           ; BSR set to: 0
   302  00065B  4F                 	db	79	;'O'
   303  00065C  6E                 	db	110	;'n'
   304  00065D  00                 	db	0
   305  0000                     
   306                           ; #config settings
   307  00065E  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           	psect	cinit
   310  0016A8                     __pcinit:
   311                           	opt stack 0
   312  0016A8                     start_initialization:
   313                           	opt stack 0
   314  0016A8                     __initialization:
   315                           	opt stack 0
   316                           
   317                           ; Initialize objects allocated to BANK0 (6 bytes)
   318                           ; load TBLPTR registers with __pidataBANK0
   319  0016A8  0E46               	movlw	low __pidataBANK0
   320  0016AA  6EF6               	movwf	tblptrl,c
   321  0016AC  0E1A               	movlw	high __pidataBANK0
   322  0016AE  6EF7               	movwf	tblptrh,c
   323  0016B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   324  0016B2  6EF8               	movwf	tblptru,c
   325  0016B4  EE00  F0CF         	lfsr	0,__pdataBANK0
   326  0016B8  EE10 F006          	lfsr	1,6
   327  0016BC                     copy_data0:
   328  0016BC  0009               	tblrd		*+
   329  0016BE  CFF5 FFEE          	movff	tablat,postinc0
   330  0016C2  50E5               	movf	postdec1,w,c
   331  0016C4  50E1               	movf	fsr1l,w,c
   332  0016C6  E1FA               	bnz	copy_data0
   333                           
   334                           ; Clear objects allocated to BANK1 (42 bytes)
   335  0016C8  EE01  F033         	lfsr	0,__pbssBANK1
   336  0016CC  0E2A               	movlw	42
   337  0016CE                     clear_0:
   338  0016CE  6AEE               	clrf	postinc0,c
   339  0016D0  06E8               	decf	wreg,f,c
   340  0016D2  E1FD               	bnz	clear_0
   341                           
   342                           ; Clear objects allocated to BANK0 (92 bytes)
   343  0016D4  EE00  F060         	lfsr	0,__pbssBANK0
   344  0016D8  0E5C               	movlw	92
   345  0016DA                     clear_1:
   346  0016DA  6AEE               	clrf	postinc0,c
   347  0016DC  06E8               	decf	wreg,f,c
   348  0016DE  E1FD               	bnz	clear_1
   349                           
   350                           ; Clear objects allocated to COMRAM (20 bytes)
   351  0016E0  EE00  F038         	lfsr	0,__pbssCOMRAM
   352  0016E4  0E14               	movlw	20
   353  0016E6                     clear_2:
   354  0016E6  6AEE               	clrf	postinc0,c
   355  0016E8  06E8               	decf	wreg,f,c
   356  0016EA  E1FD               	bnz	clear_2
   357  0016EC                     end_of_initialization:
   358                           	opt stack 0
   359  0016EC                     __end_of__initialization:
   360                           	opt stack 0
   361  0016EC  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   362  0016EE  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   363  0016F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   364  0016F2  6EF8               	movwf	tblptru,c
   365  0016F4  0100               	movlb	0
   366  0016F6  EF54  F007         	goto	_main	;jump to C main() function
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           
   376                           	psect	bssCOMRAM
   377  000038                     __pbssCOMRAM:
   378                           	opt stack 0
   379  000038                     powerCalculation@counter:
   380                           	opt stack 0
   381  000038                     	ds	2
   382  00003A                     _currentData:
   383                           	opt stack 0
   384  00003A                     	ds	2
   385  00003C                     _voltageData:
   386                           	opt stack 0
   387  00003C                     	ds	2
   388  00003E                     receive_data@my_status:
   389                           	opt stack 0
   390  00003E                     	ds	1
   391  00003F                     communications@last_state_active:
   392                           	opt stack 0
   393  00003F                     	ds	1
   394  000040                     communications@receive_current_state:
   395                           	opt stack 0
   396  000040                     	ds	1
   397  000041                     communications@end_of_transmission_received:
   398                           	opt stack 0
   399  000041                     	ds	1
   400  000042                     _SPI_transmit_wait:
   401                           	opt stack 0
   402  000042                     	ds	1
   403  000043                     readSerialData@byte3Read:
   404                           	opt stack 0
   405  000043                     	ds	1
   406  000044                     readSerialData@byte2Read:
   407                           	opt stack 0
   408  000044                     	ds	1
   409  000045                     readSerialData@byte1Read:
   410                           	opt stack 0
   411  000045                     	ds	1
   412  000046                     	ds	1
   413  000047                     readSerialData@readingData:
   414                           	opt stack 0
   415  000047                     	ds	1
   416  000048                     energyPulseCheck@mcpLFoutLast:
   417                           	opt stack 0
   418  000048                     	ds	1
   419  000049                     pulseFoutPassThru@runonce:
   420                           	opt stack 0
   421  000049                     	ds	1
   422  00004A                     _dataAvailable:
   423                           	opt stack 0
   424  00004A                     	ds	1
   425  00004B                     _dataRead:
   426                           	opt stack 0
   427  00004B                     	ds	1
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	bssBANK0
   438  000060                     __pbssBANK0:
   439                           	opt stack 0
   440  000060                     powerCalculation@instantPower:
   441                           	opt stack 0
   442  000060                     	ds	28
   443  00007C                     energyPulseCheck@meterEnergyUsedPart:
   444                           	opt stack 0
   445  00007C                     	ds	4
   446  000080                     _timerCountLF:
   447                           	opt stack 0
   448  000080                     	ds	4
   449  000084                     _timerCountHF:
   450                           	opt stack 0
   451  000084                     	ds	4
   452  000088                     _meterEnergyUsed:
   453                           	opt stack 0
   454  000088                     	ds	4
   455  00008C                     _meterWatts:
   456                           	opt stack 0
   457  00008C                     	ds	4
   458  000090                     resetCommunications@commState:
   459                           	opt stack 0
   460  000090                     	ds	2
   461  000092                     communications@send_buffer:
   462                           	opt stack 0
   463  000092                     	ds	42
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	dataBANK0
   474  0000CF                     __pdataBANK0:
   475                           	opt stack 0
   476  0000CF                     powerCalculation@currentScalar:
   477                           	opt stack 0
   478  0000CF                     	ds	2
   479  0000D1                     powerCalculation@voltageScalar:
   480                           	opt stack 0
   481  0000D1                     	ds	2
   482  0000D3                     powerCalculation@size:
   483                           	opt stack 0
   484  0000D3                     	ds	2
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494                           	psect	bssBANK1
   495  000133                     __pbssBANK1:
   496                           	opt stack 0
   497  000133                     communications@receive_buffer:
   498                           	opt stack 0
   499  000133                     	ds	42
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	cstackBANK1
   510  000100                     __pcstackBANK1:
   511                           	opt stack 0
   512  000100                     process_data@parameters:
   513                           	opt stack 0
   514                           
   515                           ; 50 bytes @ 0x0
   516  000100                     	ds	50
   517  000132                     process_data@end_of_transmission_received:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x32
   521  000132                     	ds	1
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	cstackBANK0
   532  0000BC                     __pcstackBANK0:
   533                           	opt stack 0
   534  0000BC                     com_command_setPower@temp:
   535                           	opt stack 0
   536  0000BC                     com_command_setEnergyUsed@temp:
   537                           	opt stack 0
   538                           
   539                           ; 12 bytes @ 0x0
   540  0000BC                     	ds	12
   541  0000C8                     communications@no_more_to_send:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0xC
   545  0000C8                     	ds	1
   546  0000C9                     communications@firstTime:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xD
   550  0000C9                     	ds	1
   551  0000CA                     main@initDone:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xE
   555  0000CA                     	ds	1
   556  0000CB                     main@inx:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0xF
   560  0000CB                     	ds	2
   561  0000CD                     main@inx_1350:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x11
   565  0000CD                     	ds	2
   566                           tblptru	equ	0xFF8
   567                           tblptrh	equ	0xFF7
   568                           tblptrl	equ	0xFF6
   569                           tablat	equ	0xFF5
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           postdec1	equ	0xFE5
   573                           fsr1l	equ	0xFE1
   574                           
   575                           	psect	cstackCOMRAM
   576  000001                     __pcstackCOMRAM:
   577                           	opt stack 0
   578  000001                     ??_Timer0_ISR:
   579                           
   580                           ; 1 bytes @ 0x0
   581  000001                     	ds	18
   582  000013                     ??_isdigit:
   583  000013                     ?_strcmp2:
   584                           	opt stack 0
   585  000013                     ?___wmul:
   586                           	opt stack 0
   587  000013                     ?___awdiv:
   588                           	opt stack 0
   589  000013                     ?___lmul:
   590                           	opt stack 0
   591  000013                     ?___lldiv:
   592                           	opt stack 0
   593  000013                     ?___llmod:
   594                           	opt stack 0
   595  000013                     readSerialData@data:
   596                           	opt stack 0
   597  000013                     SPI_send_data@data:
   598                           	opt stack 0
   599  000013                     delayMS10@count:
   600                           	opt stack 0
   601  000013                     command_builder_add_char@send_buffer:
   602                           	opt stack 0
   603  000013                     strcmp2@a:
   604                           	opt stack 0
   605  000013                     SPI_receive_data@data:
   606                           	opt stack 0
   607  000013                     ___wmul@multiplier:
   608                           	opt stack 0
   609  000013                     ___awdiv@dividend:
   610                           	opt stack 0
   611  000013                     ___lmul@multiplier:
   612                           	opt stack 0
   613  000013                     ___lldiv@dividend:
   614                           	opt stack 0
   615  000013                     ___llmod@dividend:
   616                           	opt stack 0
   617                           
   618                           ; 4 bytes @ 0x12
   619  000013                     	ds	1
   620  000014                     SPI_send_data@sendGood:
   621                           	opt stack 0
   622  000014                     _isdigit$2583:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x13
   626  000014                     	ds	1
   627  000015                     ??_delayMS10:
   628  000015                     command_builder_add_char@data:
   629                           	opt stack 0
   630  000015                     SPI_receive_data@recvGood:
   631                           	opt stack 0
   632  000015                     isdigit@c:
   633                           	opt stack 0
   634  000015                     send_data@send_buffer:
   635                           	opt stack 0
   636  000015                     strcmp2@b:
   637                           	opt stack 0
   638  000015                     ___wmul@multiplicand:
   639                           	opt stack 0
   640  000015                     ___awdiv@divisor:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x14
   644  000015                     	ds	1
   645  000016                     ??_command_builder_add_char:
   646  000016                     delayMS10@inx:
   647                           	opt stack 0
   648  000016                     receive_data@receive_buffer:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x15
   652  000016                     	ds	1
   653  000017                     ??_send_data:
   654  000017                     ??_strcmp2:
   655  000017                     ___awdiv@counter:
   656                           	opt stack 0
   657  000017                     command_builder_add_string@send_buffer:
   658                           	opt stack 0
   659  000017                     ___wmul@product:
   660                           	opt stack 0
   661  000017                     ___lmul@multiplicand:
   662                           	opt stack 0
   663  000017                     ___lldiv@divisor:
   664                           	opt stack 0
   665  000017                     ___llmod@divisor:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x16
   669  000017                     	ds	1
   670  000018                     ??_receive_data:
   671  000018                     ___awdiv@sign:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x17
   675  000018                     	ds	1
   676  000019                     receive_data@data:
   677                           	opt stack 0
   678  000019                     send_data@send_end:
   679                           	opt stack 0
   680  000019                     process_data_parameterize@parameters:
   681                           	opt stack 0
   682  000019                     command_builder_add_string@data_string:
   683                           	opt stack 0
   684  000019                     ___awdiv@quotient:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x18
   688  000019                     	ds	1
   689  00001A                     strcmp2@match:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x19
   693  00001A                     	ds	1
   694  00001B                     ??_powerCalculation:
   695  00001B                     ??_command_builder_add_string:
   696  00001B                     ___llmod@counter:
   697                           	opt stack 0
   698  00001B                     process_data_parameterize@buffer_to_parameterize:
   699                           	opt stack 0
   700  00001B                     ___lmul@product:
   701                           	opt stack 0
   702  00001B                     ___lldiv@quotient:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x1A
   706  00001B                     	ds	1
   707  00001C                     strcmp2@inx:
   708                           	opt stack 0
   709  00001C                     _powerCalculation$2941:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x1B
   713  00001C                     	ds	1
   714  00001D                     ??_process_data_parameterize:
   715  00001D                     command_builder_add_string@inx:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x1C
   719  00001D                     	ds	1
   720  00001E                     strmatch@a:
   721                           	opt stack 0
   722  00001E                     _powerCalculation$2942:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1D
   726  00001E                     	ds	1
   727  00001F                     ?_atol:
   728                           	opt stack 0
   729  00001F                     ___lldiv@counter:
   730                           	opt stack 0
   731  00001F                     command_builder1@send_buffer:
   732                           	opt stack 0
   733  00001F                     command_builder3@send_buffer:
   734                           	opt stack 0
   735  00001F                     atol@s:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x1E
   739  00001F                     	ds	1
   740  000020                     powerCalculation@realPower:
   741                           	opt stack 0
   742  000020                     process_data_parameterize@inx:
   743                           	opt stack 0
   744  000020                     strmatch@b:
   745                           	opt stack 0
   746  000020                     ultoa@buf:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x1F
   750  000020                     	ds	1
   751  000021                     command_builder1@data1:
   752                           	opt stack 0
   753  000021                     command_builder3@data1:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x20
   757  000021                     	ds	1
   758  000022                     process_data_parameterize@parameter_index:
   759                           	opt stack 0
   760  000022                     powerCalculation@i:
   761                           	opt stack 0
   762  000022                     strmatch@result:
   763                           	opt stack 0
   764  000022                     ultoa@val:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x21
   768  000022                     	ds	1
   769  000023                     ??_atol:
   770  000023                     process_data_parameterize@parameter_position:
   771                           	opt stack 0
   772  000023                     command_builder3@data2:
   773                           	opt stack 0
   774  000023                     send_end_of_transmission@send_buffer:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x22
   778  000023                     	ds	1
   779  000024                     strmatch@match:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x23
   783  000024                     	ds	1
   784  000025                     command_builder3@data3:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x24
   788  000025                     	ds	1
   789  000026                     ultoa@base:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x25
   793  000026                     	ds	1
   794  000027                     atol@sign:
   795                           	opt stack 0
   796  000027                     com_command_setVersion@send_buffer:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x26
   800  000027                     	ds	1
   801  000028                     atol@a:
   802                           	opt stack 0
   803  000028                     ultoa@v:
   804                           	opt stack 0
   805                           
   806                           ; 4 bytes @ 0x27
   807  000028                     	ds	1
   808  000029                     
   809                           ; 1 bytes @ 0x28
   810  000029                     	ds	3
   811  00002C                     atol@c:
   812                           	opt stack 0
   813  00002C                     ultoa@c:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x2B
   817  00002C                     	ds	1
   818  00002D                     com_command_setPower@send_buffer:
   819                           	opt stack 0
   820  00002D                     com_command_setEnergyUsed@send_buffer:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x2C
   824  00002D                     	ds	2
   825  00002F                     resetCommunications@send_buffer:
   826                           	opt stack 0
   827  00002F                     process_data_parameters@parameters:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x2E
   831  00002F                     	ds	2
   832  000031                     ??_resetCommunications:
   833  000031                     process_data_parameters@send_buffer:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x30
   837  000031                     	ds	2
   838  000033                     process_data_parameters@end_of_transmission_received:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x32
   842  000033                     	ds	1
   843  000034                     process_data@receive_buffer:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x33
   847  000034                     	ds	2
   848  000036                     process_data@send_buffer:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x35
   852  000036                     	ds	2
   853  000038                     tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           postdec1	equ	0xFE5
   860                           fsr1l	equ	0xFE1
   861                           
   862                           ; 1 bytes @ 0x37
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 84 in file "Current_Sense_Main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  inx             2   17[BANK0 ] int 
   873 ;;  inx             2   15[BANK0 ] int 
   874 ;;  initDone        1   14[BANK0 ] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   884 ;;      Params:         0       0       0       0       0       0       0
   885 ;;      Locals:         0       5       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0
   887 ;;      Totals:         0       5       0       0       0       0       0
   888 ;;Total ram usage:        5 bytes
   889 ;; Hardware stack levels required when called:    8
   890 ;; This function calls:
   891 ;;		_communications
   892 ;;		_delayMS10
   893 ;;		_energyPulseCheck
   894 ;;		_init
   895 ;;		_initMCP
   896 ;;		_initTimer
   897 ;;		_powerCalculation
   898 ;;		_pulseFoutPassThru
   899 ;;		_readSerialData
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906  000EA8                     __ptext0:
   907                           	opt stack 0
   908  000EA8                     _main:
   909                           	opt stack 23
   910                           
   911                           ;Current_Sense_Main.c: 86: init();
   912                           
   913                           ;incstack = 0
   914  000EA8  ECFB  F00C         	call	_init	;wreg free
   915                           
   916                           ;Current_Sense_Main.c: 88: for (int inx = 0; inx < 10; inx++)
   917  000EAC  0E00               	movlw	0
   918  000EAE  0100               	movlb	0	; () banked
   919  000EB0  6FCC               	movwf	(main@inx+1)& (0+255),b
   920  000EB2  0E00               	movlw	0
   921  000EB4  6FCB               	movwf	main@inx& (0+255),b
   922  000EB6                     l3632:
   923                           
   924                           ; BSR set to: 0
   925  000EB6  0100               	movlb	0	; () banked
   926  000EB8  BFCC               	btfsc	(main@inx+1)& (0+255),7,b
   927  000EBA  D008               	goto	l135
   928  000EBC  0100               	movlb	0	; () banked
   929  000EBE  51CC               	movf	(main@inx+1)& (0+255),w,b
   930  000EC0  E117               	bnz	l3644
   931  000EC2  0E0A               	movlw	10
   932  000EC4  0100               	movlb	0	; () banked
   933  000EC6  5DCB               	subwf	main@inx& (0+255),w,b
   934  000EC8  B0D8               	btfsc	status,0,c
   935  000ECA  D012               	goto	u3140
   936  000ECC                     l135:
   937                           
   938                           ; BSR set to: 0
   939                           ;Current_Sense_Main.c: 89: {
   940                           ;Current_Sense_Main.c: 90: LATCbits.LATC0 = 1;
   941  000ECC  808B               	bsf	3979,0,c	;volatile
   942                           
   943                           ; BSR set to: 0
   944                           ;Current_Sense_Main.c: 91: delayMS10(10);
   945  000ECE  0E00               	movlw	0
   946  000ED0  6E14               	movwf	delayMS10@count+1,c
   947  000ED2  0E0A               	movlw	10
   948  000ED4  6E13               	movwf	delayMS10@count,c
   949  000ED6  EC2E  F00C         	call	_delayMS10	;wreg free
   950                           
   951                           ;Current_Sense_Main.c: 92: LATCbits.LATC0 = 0;
   952  000EDA  908B               	bcf	3979,0,c	;volatile
   953                           
   954                           ;Current_Sense_Main.c: 93: delayMS10(10);
   955  000EDC  0E00               	movlw	0
   956  000EDE  6E14               	movwf	delayMS10@count+1,c
   957  000EE0  0E0A               	movlw	10
   958  000EE2  6E13               	movwf	delayMS10@count,c
   959  000EE4  EC2E  F00C         	call	_delayMS10	;wreg free
   960  000EE8  0100               	movlb	0	; () banked
   961  000EEA  4BCB               	infsnz	main@inx& (0+255),f,b
   962  000EEC  2BCC               	incf	(main@inx+1)& (0+255),f,b
   963  000EEE  D7E3               	goto	l3632
   964  000EF0                     u3140:
   965  000EF0                     l3644:
   966                           
   967                           ; BSR set to: 0
   968                           ;Current_Sense_Main.c: 94: }
   969                           ;Current_Sense_Main.c: 96: initTimer();
   970  000EF0  ECE3  F00C         	call	_initTimer	;wreg free
   971                           
   972                           ;Current_Sense_Main.c: 124: communications(1);
   973  000EF4  0E01               	movlw	1
   974  000EF6  EC24  F008         	call	_communications
   975                           
   976                           ;Current_Sense_Main.c: 131: bool initDone = 0;
   977  000EFA  0E00               	movlw	0
   978  000EFC  0100               	movlb	0	; () banked
   979  000EFE  6FCA               	movwf	main@initDone& (0+255),b
   980  000F00                     l3650:
   981                           
   982                           ; BSR set to: 0
   983                           ;Current_Sense_Main.c: 134: {
   984                           ;Current_Sense_Main.c: 135: communications(0);
   985  000F00  0E00               	movlw	0
   986  000F02  EC24  F008         	call	_communications
   987                           
   988                           ;Current_Sense_Main.c: 136: pulseFoutPassThru();
   989  000F06  ECB2  F00C         	call	_pulseFoutPassThru	;wreg free
   990                           
   991                           ;Current_Sense_Main.c: 137: energyPulseCheck();
   992  000F0A  EC64  F00A         	call	_energyPulseCheck	;wreg free
   993                           
   994                           ;Current_Sense_Main.c: 138: readSerialData();
   995  000F0E  EC11  F009         	call	_readSerialData	;wreg free
   996                           
   997                           ;Current_Sense_Main.c: 139: powerCalculation();
   998  000F12  ECD9  F005         	call	_powerCalculation	;wreg free
   999                           
  1000                           ;Current_Sense_Main.c: 142: if (initDone == 0)
  1001  000F16  0100               	movlb	0	; () banked
  1002  000F18  51CA               	movf	main@initDone& (0+255),w,b
  1003  000F1A  0100               	movlb	0	; () banked
  1004  000F1C  A4D8               	btfss	status,2,c
  1005  000F1E  D7F0               	goto	l137
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;Current_Sense_Main.c: 143: {
  1009                           ;Current_Sense_Main.c: 144: if (timerCountLF > 1000)
  1010  000F20  0100               	movlb	0	; () banked
  1011  000F22  5183               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1012  000F24  0100               	movlb	0	; () banked
  1013  000F26  1182               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1014  000F28  E108               	bnz	u3160
  1015  000F2A  0EE9               	movlw	233
  1016  000F2C  0100               	movlb	0	; () banked
  1017  000F2E  5D80               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1018  000F30  0E03               	movlw	3
  1019  000F32  0100               	movlb	0	; () banked
  1020  000F34  5981               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1021  000F36  A0D8               	btfss	status,0,c
  1022  000F38  D7E3               	goto	l137
  1023  000F3A                     u3160:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;Current_Sense_Main.c: 145: {
  1027                           ;Current_Sense_Main.c: 146: initMCP();
  1028  000F3A  EC1A  F00D         	call	_initMCP	;wreg free
  1029                           
  1030                           ;Current_Sense_Main.c: 147: initDone = 1;
  1031  000F3E  0E01               	movlw	1
  1032  000F40  0100               	movlb	0	; () banked
  1033  000F42  6FCA               	movwf	main@initDone& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;Current_Sense_Main.c: 149: for (int inx = 0; inx < 10; inx++)
  1037  000F44  0E00               	movlw	0
  1038  000F46  0100               	movlb	0	; () banked
  1039  000F48  6FCE               	movwf	(main@inx_1350+1)& (0+255),b
  1040  000F4A  0E00               	movlw	0
  1041  000F4C  6FCD               	movwf	main@inx_1350& (0+255),b
  1042  000F4E                     l3670:
  1043                           
  1044                           ; BSR set to: 0
  1045  000F4E  0100               	movlb	0	; () banked
  1046  000F50  BFCE               	btfsc	(main@inx_1350+1)& (0+255),7,b
  1047  000F52  D008               	goto	l140
  1048  000F54  0100               	movlb	0	; () banked
  1049  000F56  51CE               	movf	(main@inx_1350+1)& (0+255),w,b
  1050  000F58  E1D3               	bnz	l3650
  1051  000F5A  0E0A               	movlw	10
  1052  000F5C  0100               	movlb	0	; () banked
  1053  000F5E  5DCD               	subwf	main@inx_1350& (0+255),w,b
  1054  000F60  B0D8               	btfsc	status,0,c
  1055  000F62  D7CE               	goto	l137
  1056  000F64                     l140:
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;Current_Sense_Main.c: 150: {
  1060                           ;Current_Sense_Main.c: 151: LATCbits.LATC0 = 1;
  1061  000F64  808B               	bsf	3979,0,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;Current_Sense_Main.c: 152: delayMS10(3);
  1065  000F66  0E00               	movlw	0
  1066  000F68  6E14               	movwf	delayMS10@count+1,c
  1067  000F6A  0E03               	movlw	3
  1068  000F6C  6E13               	movwf	delayMS10@count,c
  1069  000F6E  EC2E  F00C         	call	_delayMS10	;wreg free
  1070                           
  1071                           ;Current_Sense_Main.c: 153: LATCbits.LATC0 = 0;
  1072  000F72  908B               	bcf	3979,0,c	;volatile
  1073                           
  1074                           ;Current_Sense_Main.c: 154: delayMS10(5);
  1075  000F74  0E00               	movlw	0
  1076  000F76  6E14               	movwf	delayMS10@count+1,c
  1077  000F78  0E05               	movlw	5
  1078  000F7A  6E13               	movwf	delayMS10@count,c
  1079  000F7C  EC2E  F00C         	call	_delayMS10	;wreg free
  1080  000F80  0100               	movlb	0	; () banked
  1081  000F82  4BCD               	infsnz	main@inx_1350& (0+255),f,b
  1082  000F84  2BCE               	incf	(main@inx_1350+1)& (0+255),f,b
  1083  000F86  D7E3               	goto	l3670
  1084  000F88                     __end_of_main:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postdec1	equ	0xFE5
  1093                           fsr1l	equ	0xFE1
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _readSerialData *****************
  1097 ;; Defined at:
  1098 ;;		line 285 in file "Current_Sense_Main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  data            1   18[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1112 ;;      Params:         0       0       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0
  1115 ;;      Totals:         1       0       0       0       0       0       0
  1116 ;;Total ram usage:        1 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text1
  1127  001222                     __ptext1:
  1128                           	opt stack 0
  1129  001222                     _readSerialData:
  1130                           	opt stack 29
  1131                           
  1132                           ;Current_Sense_Main.c: 287: static bool readingData = 0;
  1133                           ;Current_Sense_Main.c: 288: static bool drFlag = 0;
  1134                           ;Current_Sense_Main.c: 289: static bool byte1Read = 0;
  1135                           ;Current_Sense_Main.c: 290: static bool byte2Read = 0;
  1136                           ;Current_Sense_Main.c: 291: static bool byte3Read = 0;
  1137                           ;Current_Sense_Main.c: 293: if (dataAvailable || readingData) {
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;incstack = 0
  1141  001222  504A               	movf	_dataAvailable,w,c
  1142  001224  A4D8               	btfss	status,2,c
  1143  001226  D003               	goto	u3010
  1144  001228  5047               	movf	readSerialData@readingData,w,c
  1145  00122A  B4D8               	btfsc	status,2,c
  1146  00122C  0012               	return	
  1147  00122E                     u3010:
  1148                           
  1149                           ;Current_Sense_Main.c: 298: if (!readingData) {
  1150  00122E  5047               	movf	readSerialData@readingData,w,c
  1151  001230  A4D8               	btfss	status,2,c
  1152  001232  D004               	goto	l188
  1153                           
  1154                           ;Current_Sense_Main.c: 299: SSP1BUF = 0xac;
  1155  001234  0EAC               	movlw	172
  1156  001236  6EC9               	movwf	4041,c	;volatile
  1157                           
  1158                           ;Current_Sense_Main.c: 300: readingData = 1;
  1159  001238  0E01               	movlw	1
  1160  00123A  6E47               	movwf	readSerialData@readingData,c
  1161  00123C                     l188:
  1162                           
  1163                           ;Current_Sense_Main.c: 301: }
  1164                           ;Current_Sense_Main.c: 303: if (readingData && SSP1STATbits.BF) {
  1165  00123C  5047               	movf	readSerialData@readingData,w,c
  1166  00123E  B4D8               	btfsc	status,2,c
  1167  001240  0012               	return	
  1168  001242  A0C7               	btfss	4039,0,c	;volatile
  1169  001244  0012               	return	
  1170                           
  1171                           ;Current_Sense_Main.c: 304: char data = SSP1BUF;
  1172  001246  CFC9 F013          	movff	4041,readSerialData@data	;volatile
  1173                           
  1174                           ;Current_Sense_Main.c: 305: PIR1bits.SSP1IF = 0;
  1175  00124A  969E               	bcf	3998,3,c	;volatile
  1176                           
  1177                           ;Current_Sense_Main.c: 306: SSP1CON1bits.WCOL = 0;
  1178  00124C  9EC6               	bcf	4038,7,c	;volatile
  1179                           
  1180                           ;Current_Sense_Main.c: 307: readingData = 0;
  1181  00124E  0E00               	movlw	0
  1182  001250  6E47               	movwf	readSerialData@readingData,c
  1183                           
  1184                           ;Current_Sense_Main.c: 309: if (!byte1Read) {
  1185  001252  5045               	movf	readSerialData@byte1Read,w,c
  1186  001254  A4D8               	btfss	status,2,c
  1187  001256  D007               	goto	l190
  1188                           
  1189                           ;Current_Sense_Main.c: 310: voltageData = (data << 8) & 0xFF;
  1190  001258  0E00               	movlw	0
  1191  00125A  6E3D               	movwf	_voltageData+1,c
  1192  00125C  0E00               	movlw	0
  1193  00125E  6E3C               	movwf	_voltageData,c
  1194                           
  1195                           ;Current_Sense_Main.c: 311: byte1Read = 1;
  1196  001260  0E01               	movlw	1
  1197  001262  6E45               	movwf	readSerialData@byte1Read,c
  1198                           
  1199                           ;Current_Sense_Main.c: 312: }
  1200  001264  0012               	return	
  1201  001266                     l190:
  1202                           
  1203                           ;Current_Sense_Main.c: 313: else if (!byte2Read) {
  1204  001266  5044               	movf	readSerialData@byte2Read,w,c
  1205  001268  A4D8               	btfss	status,2,c
  1206  00126A  D008               	goto	l192
  1207                           
  1208                           ;Current_Sense_Main.c: 314: voltageData = voltageData | data;
  1209  00126C  503C               	movf	_voltageData,w,c
  1210  00126E  1013               	iorwf	readSerialData@data,w,c
  1211  001270  6E3C               	movwf	_voltageData,c
  1212  001272  503D               	movf	_voltageData+1,w,c
  1213  001274  6E3D               	movwf	_voltageData+1,c
  1214                           
  1215                           ;Current_Sense_Main.c: 315: byte2Read = 1;
  1216  001276  0E01               	movlw	1
  1217  001278  6E44               	movwf	readSerialData@byte2Read,c
  1218                           
  1219                           ;Current_Sense_Main.c: 316: }
  1220  00127A  0012               	return	
  1221  00127C                     l192:
  1222                           
  1223                           ;Current_Sense_Main.c: 317: else if (!byte3Read) {
  1224  00127C  5043               	movf	readSerialData@byte3Read,w,c
  1225  00127E  A4D8               	btfss	status,2,c
  1226  001280  D007               	goto	l194
  1227                           
  1228                           ;Current_Sense_Main.c: 318: currentData = (data << 8) & 0xFF;
  1229  001282  0E00               	movlw	0
  1230  001284  6E3B               	movwf	_currentData+1,c
  1231  001286  0E00               	movlw	0
  1232  001288  6E3A               	movwf	_currentData,c
  1233                           
  1234                           ;Current_Sense_Main.c: 319: byte3Read = 1;
  1235  00128A  0E01               	movlw	1
  1236  00128C  6E43               	movwf	readSerialData@byte3Read,c
  1237                           
  1238                           ;Current_Sense_Main.c: 320: }
  1239  00128E  0012               	return	
  1240  001290                     l194:
  1241                           
  1242                           ;Current_Sense_Main.c: 321: else if (!dataRead) {
  1243  001290  504B               	movf	_dataRead,w,c
  1244  001292  A4D8               	btfss	status,2,c
  1245  001294  0012               	return	
  1246                           
  1247                           ;Current_Sense_Main.c: 322: currentData = currentData | data;
  1248  001296  503A               	movf	_currentData,w,c
  1249  001298  1013               	iorwf	readSerialData@data,w,c
  1250  00129A  6E3A               	movwf	_currentData,c
  1251  00129C  503B               	movf	_currentData+1,w,c
  1252  00129E  6E3B               	movwf	_currentData+1,c
  1253                           
  1254                           ;Current_Sense_Main.c: 324: dataAvailable = 0;
  1255  0012A0  0E00               	movlw	0
  1256  0012A2  6E4A               	movwf	_dataAvailable,c
  1257                           
  1258                           ;Current_Sense_Main.c: 325: byte1Read = 0;
  1259  0012A4  0E00               	movlw	0
  1260  0012A6  6E45               	movwf	readSerialData@byte1Read,c
  1261                           
  1262                           ;Current_Sense_Main.c: 326: byte2Read = 0;
  1263  0012A8  0E00               	movlw	0
  1264  0012AA  6E44               	movwf	readSerialData@byte2Read,c
  1265                           
  1266                           ;Current_Sense_Main.c: 327: byte3Read = 0;
  1267  0012AC  0E00               	movlw	0
  1268  0012AE  6E43               	movwf	readSerialData@byte3Read,c
  1269                           
  1270                           ;Current_Sense_Main.c: 328: dataRead = 1;
  1271  0012B0  0E01               	movlw	1
  1272  0012B2  6E4B               	movwf	_dataRead,c
  1273  0012B4  0012               	return	
  1274  0012B6                     __end_of_readSerialData:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           tblptrh	equ	0xFF7
  1278                           tblptrl	equ	0xFF6
  1279                           tablat	equ	0xFF5
  1280                           postinc0	equ	0xFEE
  1281                           wreg	equ	0xFE8
  1282                           postdec1	equ	0xFE5
  1283                           fsr1l	equ	0xFE1
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function _pulseFoutPassThru *****************
  1287 ;; Defined at:
  1288 ;;		line 197 in file "Current_Sense_Main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         0       0       0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text2
  1317  001964                     __ptext2:
  1318                           	opt stack 0
  1319  001964                     _pulseFoutPassThru:
  1320                           	opt stack 29
  1321                           
  1322                           ;Current_Sense_Main.c: 200: static bool runonce = 0;
  1323                           ;Current_Sense_Main.c: 202: if (PORTAbits.RA3 == 0)
  1324                           
  1325                           ;incstack = 0
  1326  001964  B680               	btfsc	3968,3,c	;volatile
  1327  001966  D00C               	goto	l149
  1328                           
  1329                           ;Current_Sense_Main.c: 203: {
  1330                           ;Current_Sense_Main.c: 204: LATAbits.LATA0 = 1;
  1331  001968  8089               	bsf	3977,0,c	;volatile
  1332                           
  1333                           ;Current_Sense_Main.c: 205: if (runonce == 0)
  1334  00196A  5049               	movf	pulseFoutPassThru@runonce,w,c
  1335  00196C  A4D8               	btfss	status,2,c
  1336  00196E  0012               	return	
  1337                           
  1338                           ;Current_Sense_Main.c: 206: {
  1339                           ;Current_Sense_Main.c: 207: runonce = 1;
  1340  001970  0E01               	movlw	1
  1341  001972  6E49               	movwf	pulseFoutPassThru@runonce,c
  1342                           
  1343                           ;Current_Sense_Main.c: 208: if (PORTCbits.RC1 == 1)
  1344  001974  A282               	btfss	3970,1,c	;volatile
  1345  001976  D002               	goto	l151
  1346                           
  1347                           ;Current_Sense_Main.c: 209: {
  1348                           ;Current_Sense_Main.c: 210: LATCbits.LATC1 = 0;
  1349  001978  928B               	bcf	3979,1,c	;volatile
  1350                           
  1351                           ;Current_Sense_Main.c: 211: }
  1352  00197A  0012               	return	
  1353  00197C                     l151:
  1354                           
  1355                           ;Current_Sense_Main.c: 212: else
  1356                           ;Current_Sense_Main.c: 213: {
  1357                           ;Current_Sense_Main.c: 214: LATCbits.LATC1 = 1;
  1358  00197C  828B               	bsf	3979,1,c	;volatile
  1359                           
  1360                           ;Current_Sense_Main.c: 215: }
  1361                           ;Current_Sense_Main.c: 216: }
  1362                           ;Current_Sense_Main.c: 217: }
  1363  00197E  0012               	return	
  1364  001980                     l149:
  1365                           
  1366                           ;Current_Sense_Main.c: 218: else
  1367                           ;Current_Sense_Main.c: 219: {
  1368                           ;Current_Sense_Main.c: 220: LATAbits.LATA0 = 0;
  1369  001980  9089               	bcf	3977,0,c	;volatile
  1370                           
  1371                           ;Current_Sense_Main.c: 221: runonce = 0;
  1372  001982  0E00               	movlw	0
  1373  001984  6E49               	movwf	pulseFoutPassThru@runonce,c
  1374  001986  0012               	return	
  1375  001988                     __end_of_pulseFoutPassThru:
  1376                           	opt stack 0
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           postinc0	equ	0xFEE
  1382                           wreg	equ	0xFE8
  1383                           postdec1	equ	0xFE5
  1384                           fsr1l	equ	0xFE1
  1385                           status	equ	0xFD8
  1386                           
  1387 ;; *************** function _powerCalculation *****************
  1388 ;; Defined at:
  1389 ;;		line 338 in file "Current_Sense_Main.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  i               2   33[COMRAM] int 
  1394 ;;  realPower       2   31[COMRAM] int 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1404 ;;      Params:         0       0       0       0       0       0       0
  1405 ;;      Locals:         8       0       0       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0       0       0
  1407 ;;      Totals:         9       0       0       0       0       0       0
  1408 ;;Total ram usage:        9 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    2
  1411 ;; This function calls:
  1412 ;;		___awdiv
  1413 ;;		___wmul
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text3
  1420  000BB2                     __ptext3:
  1421                           	opt stack 0
  1422  000BB2                     _powerCalculation:
  1423                           	opt stack 28
  1424                           
  1425                           ;Current_Sense_Main.c: 339: static int size = 14;
  1426                           ;Current_Sense_Main.c: 341: static int instantPower[14];
  1427                           ;Current_Sense_Main.c: 342: static int counter = 0;
  1428                           ;Current_Sense_Main.c: 346: static int voltageScalar = 1;
  1429                           ;Current_Sense_Main.c: 347: static int currentScalar = 1;
  1430                           ;Current_Sense_Main.c: 350: if (dataRead) {
  1431                           
  1432                           ;incstack = 0
  1433  000BB2  504B               	movf	_dataRead,w,c
  1434  000BB4  B4D8               	btfsc	status,2,c
  1435  000BB6  D035               	goto	l210
  1436                           
  1437                           ;Current_Sense_Main.c: 351: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1438  000BB8  C03A  F013         	movff	_currentData,___wmul@multiplier
  1439  000BBC  C03B  F014         	movff	_currentData+1,___wmul@multiplier+1
  1440  000BC0  C0CF  F015         	movff	powerCalculation@currentScalar,___wmul@multiplicand
  1441  000BC4  C0D0  F016         	movff	powerCalculation@currentScalar+1,___wmul@multiplicand+1
  1442  000BC8  EC9F  F00C         	call	___wmul	;wreg free
  1443  000BCC  C013  F01C         	movff	?___wmul,_powerCalculation$2941
  1444  000BD0  C014  F01D         	movff	?___wmul+1,_powerCalculation$2941+1
  1445                           
  1446                           ;Current_Sense_Main.c: 351: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1447  000BD4  C01C  F013         	movff	_powerCalculation$2941,___wmul@multiplier
  1448  000BD8  C01D  F014         	movff	_powerCalculation$2941+1,___wmul@multiplier+1
  1449  000BDC  C03C  F015         	movff	_voltageData,___wmul@multiplicand
  1450  000BE0  C03D  F016         	movff	_voltageData+1,___wmul@multiplicand+1
  1451  000BE4  EC9F  F00C         	call	___wmul	;wreg free
  1452  000BE8  C013  F01E         	movff	?___wmul,_powerCalculation$2942
  1453  000BEC  C014  F01F         	movff	?___wmul+1,_powerCalculation$2942+1
  1454                           
  1455                           ;Current_Sense_Main.c: 351: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1456  000BF0  C01E  F013         	movff	_powerCalculation$2942,___wmul@multiplier
  1457  000BF4  C01F  F014         	movff	_powerCalculation$2942+1,___wmul@multiplier+1
  1458  000BF8  C0D1  F015         	movff	powerCalculation@voltageScalar,___wmul@multiplicand
  1459  000BFC  C0D2  F016         	movff	powerCalculation@voltageScalar+1,___wmul@multiplicand+1
  1460  000C00  EC9F  F00C         	call	___wmul	;wreg free
  1461  000C04  90D8               	bcf	status,0,c
  1462  000C06  3438               	rlcf	powerCalculation@counter,w,c
  1463  000C08  6ED9               	movwf	fsr2l,c
  1464  000C0A  3439               	rlcf	powerCalculation@counter+1,w,c
  1465  000C0C  6EDA               	movwf	fsr2h,c
  1466  000C0E  0E60               	movlw	low powerCalculation@instantPower
  1467  000C10  26D9               	addwf	fsr2l,f,c
  1468  000C12  0E00               	movlw	high powerCalculation@instantPower
  1469  000C14  22DA               	addwfc	fsr2h,f,c
  1470  000C16  C013  FFDE         	movff	?___wmul,postinc2
  1471  000C1A  C014  FFDD         	movff	?___wmul+1,postdec2
  1472                           
  1473                           ;Current_Sense_Main.c: 352: counter++;
  1474  000C1E  4A38               	infsnz	powerCalculation@counter,f,c
  1475  000C20  2A39               	incf	powerCalculation@counter+1,f,c
  1476  000C22                     l210:
  1477                           
  1478                           ;Current_Sense_Main.c: 353: }
  1479                           ;Current_Sense_Main.c: 354: if (counter == size) {
  1480  000C22  0100               	movlb	0	; () banked
  1481  000C24  51D3               	movf	powerCalculation@size& (0+255),w,b
  1482  000C26  1838               	xorwf	powerCalculation@counter,w,c
  1483  000C28  E149               	bnz	l217
  1484  000C2A  0100               	movlb	0	; () banked
  1485  000C2C  51D4               	movf	(powerCalculation@size+1)& (0+255),w,b
  1486  000C2E  1839               	xorwf	powerCalculation@counter+1,w,c
  1487  000C30  A4D8               	btfss	status,2,c
  1488  000C32  0012               	return	
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;Current_Sense_Main.c: 356: if (PORTBbits.RB4 == 1) {
  1492  000C34  A881               	btfss	3969,4,c	;volatile
  1493  000C36  D002               	goto	l212
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;Current_Sense_Main.c: 357: LATBbits.LATB4 = 0;
  1497  000C38  988A               	bcf	3978,4,c	;volatile
  1498                           
  1499                           ;Current_Sense_Main.c: 358: }
  1500  000C3A  D001               	goto	l213
  1501  000C3C                     l212:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;Current_Sense_Main.c: 359: else {
  1505                           ;Current_Sense_Main.c: 360: LATBbits.LATB4 = 1;
  1506  000C3C  888A               	bsf	3978,4,c	;volatile
  1507  000C3E                     l213:
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;Current_Sense_Main.c: 361: }
  1511                           ;Current_Sense_Main.c: 363: int realPower = 0;
  1512                           
  1513                           ; BSR set to: 0
  1514  000C3E  0E00               	movlw	0
  1515  000C40  6E21               	movwf	powerCalculation@realPower+1,c
  1516  000C42  0E00               	movlw	0
  1517  000C44  6E20               	movwf	powerCalculation@realPower,c
  1518                           
  1519                           ;Current_Sense_Main.c: 364: for (int i = 0; i < size; i++) {
  1520  000C46  0E00               	movlw	0
  1521  000C48  6E23               	movwf	powerCalculation@i+1,c
  1522  000C4A  0E00               	movlw	0
  1523  000C4C  6E22               	movwf	powerCalculation@i,c
  1524  000C4E  D00F               	goto	l214
  1525  000C50                     
  1526                           ; BSR set to: 0
  1527                           ;Current_Sense_Main.c: 365: realPower =+ instantPower[i];
  1528                           
  1529                           ; BSR set to: 0
  1530  000C50  90D8               	bcf	status,0,c
  1531  000C52  3422               	rlcf	powerCalculation@i,w,c
  1532  000C54  6ED9               	movwf	fsr2l,c
  1533  000C56  3423               	rlcf	powerCalculation@i+1,w,c
  1534  000C58  6EDA               	movwf	fsr2h,c
  1535  000C5A  0E60               	movlw	low powerCalculation@instantPower
  1536  000C5C  26D9               	addwf	fsr2l,f,c
  1537  000C5E  0E00               	movlw	high powerCalculation@instantPower
  1538  000C60  22DA               	addwfc	fsr2h,f,c
  1539  000C62  CFDE F020          	movff	postinc2,powerCalculation@realPower
  1540  000C66  CFDD F021          	movff	postdec2,powerCalculation@realPower+1
  1541                           
  1542                           ; BSR set to: 0
  1543  000C6A  4A22               	infsnz	powerCalculation@i,f,c
  1544  000C6C  2A23               	incf	powerCalculation@i+1,f,c
  1545  000C6E                     l214:
  1546                           
  1547                           ; BSR set to: 0
  1548                           
  1549                           ; BSR set to: 0
  1550  000C6E  0100               	movlb	0	; () banked
  1551  000C70  51D3               	movf	powerCalculation@size& (0+255),w,b
  1552  000C72  5C22               	subwf	powerCalculation@i,w,c
  1553  000C74  5023               	movf	powerCalculation@i+1,w,c
  1554  000C76  0A80               	xorlw	128
  1555  000C78  6E1B               	movwf	??_powerCalculation& (0+255),c
  1556  000C7A  0100               	movlb	0	; () banked
  1557  000C7C  51D4               	movf	(powerCalculation@size+1)& (0+255),w,b
  1558  000C7E  0A80               	xorlw	128
  1559  000C80  581B               	subwfb	??_powerCalculation& (0+255),w,c
  1560  000C82  A0D8               	btfss	status,0,c
  1561  000C84  D7E5               	goto	l215
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;Current_Sense_Main.c: 366: }
  1565                           ;Current_Sense_Main.c: 367: meterWatts = realPower / counter;
  1566                           
  1567                           ; BSR set to: 0
  1568  000C86  C020  F013         	movff	powerCalculation@realPower,___awdiv@dividend
  1569  000C8A  C021  F014         	movff	powerCalculation@realPower+1,___awdiv@dividend+1
  1570  000C8E  C038  F015         	movff	powerCalculation@counter,___awdiv@divisor
  1571  000C92  C039  F016         	movff	powerCalculation@counter+1,___awdiv@divisor+1
  1572  000C96  ECA3  F009         	call	___awdiv	;wreg free
  1573  000C9A  C013  F08C         	movff	?___awdiv,_meterWatts
  1574  000C9E  C014  F08D         	movff	?___awdiv+1,_meterWatts+1
  1575  000CA2  0100               	movlb	0	; () banked
  1576  000CA4  0E00               	movlw	0
  1577  000CA6  BF8D               	btfsc	(_meterWatts+1)& (0+255),7,b
  1578  000CA8  0EFF               	movlw	-1
  1579  000CAA  6F8E               	movwf	(_meterWatts+2)& (0+255),b
  1580  000CAC  6F8F               	movwf	(_meterWatts+3)& (0+255),b
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;Current_Sense_Main.c: 368: counter = 0;
  1584  000CAE  0E00               	movlw	0
  1585  000CB0  6E39               	movwf	powerCalculation@counter+1,c
  1586  000CB2  0E00               	movlw	0
  1587  000CB4  6E38               	movwf	powerCalculation@counter,c
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;Current_Sense_Main.c: 369: dataRead = 0;
  1591  000CB6  0E00               	movlw	0
  1592  000CB8  6E4B               	movwf	_dataRead,c
  1593                           
  1594                           ; BSR set to: 0
  1595  000CBA  0012               	return	
  1596  000CBC                     l217:
  1597                           
  1598                           ; BSR set to: 0
  1599  000CBC  0012               	return		;funcret
  1600  000CBE                     __end_of_powerCalculation:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           postdec1	equ	0xFE5
  1609                           fsr1l	equ	0xFE1
  1610                           postinc2	equ	0xFDE
  1611                           postdec2	equ	0xFDD
  1612                           fsr2h	equ	0xFDA
  1613                           fsr2l	equ	0xFD9
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function ___awdiv *****************
  1617 ;; Defined at:
  1618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  dividend        2   18[COMRAM] int 
  1621 ;;  divisor         2   20[COMRAM] int 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  quotient        2   24[COMRAM] int 
  1624 ;;  sign            1   23[COMRAM] unsigned char 
  1625 ;;  counter         1   22[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2   18[COMRAM] int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         4       0       0       0       0       0       0
  1636 ;;      Locals:         4       0       0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0
  1638 ;;      Totals:         8       0       0       0       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_powerCalculation
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text4
  1650  001346                     __ptext4:
  1651                           	opt stack 0
  1652  001346                     ___awdiv:
  1653                           	opt stack 28
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;incstack = 0
  1657  001346  0E00               	movlw	0
  1658  001348  6E18               	movwf	___awdiv@sign,c
  1659  00134A  AE16               	btfss	___awdiv@divisor+1,7,c
  1660  00134C  D006               	goto	l679
  1661  00134E  6C15               	negf	___awdiv@divisor,c
  1662  001350  1E16               	comf	___awdiv@divisor+1,f,c
  1663  001352  B0D8               	btfsc	status,0,c
  1664  001354  2A16               	incf	___awdiv@divisor+1,f,c
  1665  001356  0E01               	movlw	1
  1666  001358  6E18               	movwf	___awdiv@sign,c
  1667  00135A                     l679:
  1668  00135A  AE14               	btfss	___awdiv@dividend+1,7,c
  1669  00135C  D006               	goto	l680
  1670  00135E  6C13               	negf	___awdiv@dividend,c
  1671  001360  1E14               	comf	___awdiv@dividend+1,f,c
  1672  001362  B0D8               	btfsc	status,0,c
  1673  001364  2A14               	incf	___awdiv@dividend+1,f,c
  1674  001366  0E01               	movlw	1
  1675  001368  1A18               	xorwf	___awdiv@sign,f,c
  1676  00136A                     l680:
  1677  00136A  0E00               	movlw	0
  1678  00136C  6E1A               	movwf	___awdiv@quotient+1,c
  1679  00136E  0E00               	movlw	0
  1680  001370  6E19               	movwf	___awdiv@quotient,c
  1681  001372  5015               	movf	___awdiv@divisor,w,c
  1682  001374  1016               	iorwf	___awdiv@divisor+1,w,c
  1683  001376  B4D8               	btfsc	status,2,c
  1684  001378  D01C               	goto	l687
  1685  00137A  0E01               	movlw	1
  1686  00137C  6E17               	movwf	___awdiv@counter,c
  1687  00137E  D004               	goto	l682
  1688  001380  90D8               	bcf	status,0,c
  1689  001382  3615               	rlcf	___awdiv@divisor,f,c
  1690  001384  3616               	rlcf	___awdiv@divisor+1,f,c
  1691  001386  2A17               	incf	___awdiv@counter,f,c
  1692  001388                     l682:
  1693  001388  AE16               	btfss	___awdiv@divisor+1,7,c
  1694  00138A  D7FA               	goto	l683
  1695  00138C                     u2860:
  1696  00138C  90D8               	bcf	status,0,c
  1697  00138E  3619               	rlcf	___awdiv@quotient,f,c
  1698  001390  361A               	rlcf	___awdiv@quotient+1,f,c
  1699  001392  5015               	movf	___awdiv@divisor,w,c
  1700  001394  5C13               	subwf	___awdiv@dividend,w,c
  1701  001396  5016               	movf	___awdiv@divisor+1,w,c
  1702  001398  5814               	subwfb	___awdiv@dividend+1,w,c
  1703  00139A  A0D8               	btfss	status,0,c
  1704  00139C  D005               	goto	l686
  1705  00139E  5015               	movf	___awdiv@divisor,w,c
  1706  0013A0  5E13               	subwf	___awdiv@dividend,f,c
  1707  0013A2  5016               	movf	___awdiv@divisor+1,w,c
  1708  0013A4  5A14               	subwfb	___awdiv@dividend+1,f,c
  1709  0013A6  8019               	bsf	___awdiv@quotient,0,c
  1710  0013A8                     l686:
  1711  0013A8  90D8               	bcf	status,0,c
  1712  0013AA  3216               	rrcf	___awdiv@divisor+1,f,c
  1713  0013AC  3215               	rrcf	___awdiv@divisor,f,c
  1714  0013AE  2E17               	decfsz	___awdiv@counter,f,c
  1715  0013B0  D7ED               	goto	u2860
  1716  0013B2                     l687:
  1717  0013B2  5018               	movf	___awdiv@sign,w,c
  1718  0013B4  B4D8               	btfsc	status,2,c
  1719  0013B6  D004               	goto	l688
  1720  0013B8  6C19               	negf	___awdiv@quotient,c
  1721  0013BA  1E1A               	comf	___awdiv@quotient+1,f,c
  1722  0013BC  B0D8               	btfsc	status,0,c
  1723  0013BE  2A1A               	incf	___awdiv@quotient+1,f,c
  1724  0013C0                     l688:
  1725  0013C0  C019  F013         	movff	___awdiv@quotient,?___awdiv
  1726  0013C4  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  1727  0013C8  0012               	return	
  1728  0013CA                     __end_of___awdiv:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           postinc2	equ	0xFDE
  1739                           postdec2	equ	0xFDD
  1740                           fsr2h	equ	0xFDA
  1741                           fsr2l	equ	0xFD9
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _initTimer *****************
  1745 ;; Defined at:
  1746 ;;		line 471 in file "Current_Sense_Main.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1760 ;;      Params:         0       0       0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text5
  1775  0019C6                     __ptext5:
  1776                           	opt stack 0
  1777  0019C6                     _initTimer:
  1778                           	opt stack 29
  1779                           
  1780                           ;Current_Sense_Main.c: 474: T0CONbits.TMR0ON = 0;
  1781                           
  1782                           ;incstack = 0
  1783  0019C6  9ED5               	bcf	4053,7,c	;volatile
  1784                           
  1785                           ;Current_Sense_Main.c: 475: T0CONbits.T08BIT = 0;
  1786  0019C8  9CD5               	bcf	4053,6,c	;volatile
  1787                           
  1788                           ;Current_Sense_Main.c: 476: T0CONbits.T0CS = 0;
  1789  0019CA  9AD5               	bcf	4053,5,c	;volatile
  1790                           
  1791                           ;Current_Sense_Main.c: 477: T0CONbits.PSA = 0;
  1792  0019CC  96D5               	bcf	4053,3,c	;volatile
  1793                           
  1794                           ;Current_Sense_Main.c: 478: T0CONbits.T0PS = 0b001;
  1795  0019CE  50D5               	movf	4053,w,c	;volatile
  1796  0019D0  0BF8               	andlw	-8
  1797  0019D2  0901               	iorlw	1
  1798  0019D4  6ED5               	movwf	4053,c	;volatile
  1799                           
  1800                           ;Current_Sense_Main.c: 480: INTCONbits.TMR0IE = 1;
  1801  0019D6  8AF2               	bsf	intcon,5,c	;volatile
  1802                           
  1803                           ;Current_Sense_Main.c: 481: INTCONbits.GIE = 1;
  1804  0019D8  8EF2               	bsf	intcon,7,c	;volatile
  1805                           
  1806                           ;Current_Sense_Main.c: 482: T0CONbits.TMR0ON = 1;
  1807  0019DA  8ED5               	bsf	4053,7,c	;volatile
  1808  0019DC  0012               	return	
  1809  0019DE                     __end_of_initTimer:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           intcon	equ	0xFF2
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1l	equ	0xFE1
  1820                           postinc2	equ	0xFDE
  1821                           postdec2	equ	0xFDD
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _init *****************
  1827 ;; Defined at:
  1828 ;;		line 385 in file "Current_Sense_Main.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    2
  1849 ;; This function calls:
  1850 ;;		_initIO
  1851 ;;		_initInterruptsClear
  1852 ;;		_initMCP
  1853 ;;		_initOSC
  1854 ;;		_initSPI
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text6
  1861  0019F6                     __ptext6:
  1862                           	opt stack 0
  1863  0019F6                     _init:
  1864                           	opt stack 28
  1865                           
  1866                           ;Current_Sense_Main.c: 387: initOSC();
  1867                           
  1868                           ;incstack = 0
  1869  0019F6  ECEF  F00C         	call	_initOSC	;wreg free
  1870                           
  1871                           ;Current_Sense_Main.c: 388: initIO();
  1872  0019FA  EC15  F00C         	call	_initIO	;wreg free
  1873                           
  1874                           ;Current_Sense_Main.c: 389: initInterruptsClear();
  1875  0019FE  ECA5  F00B         	call	_initInterruptsClear	;wreg free
  1876                           
  1877                           ;Current_Sense_Main.c: 390: initSPI();
  1878  001A02  EC11  F00D         	call	_initSPI	;wreg free
  1879                           
  1880                           ;Current_Sense_Main.c: 391: initMCP();
  1881  001A06  EC1A  F00D         	call	_initMCP	;wreg free
  1882  001A0A  0012               	return	
  1883  001A0C                     __end_of_init:
  1884                           	opt stack 0
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           intcon	equ	0xFF2
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           postdec1	equ	0xFE5
  1893                           fsr1l	equ	0xFE1
  1894                           postinc2	equ	0xFDE
  1895                           postdec2	equ	0xFDD
  1896                           fsr2h	equ	0xFDA
  1897                           fsr2l	equ	0xFD9
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _initSPI *****************
  1901 ;; Defined at:
  1902 ;;		line 488 in file "Current_Sense_Main.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		None
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1916 ;;      Params:         0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; Hardware stack levels required when called:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_init
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text7
  1931  001A22                     __ptext7:
  1932                           	opt stack 0
  1933  001A22                     _initSPI:
  1934                           	opt stack 28
  1935                           
  1936                           ;Current_Sense_Main.c: 499: SSP1CON1bits.SSPEN = 1;
  1937                           
  1938                           ;incstack = 0
  1939  001A22  8AC6               	bsf	4038,5,c	;volatile
  1940                           
  1941                           ;Current_Sense_Main.c: 500: SSP1CON1bits.CKP = 1;
  1942  001A24  88C6               	bsf	4038,4,c	;volatile
  1943                           
  1944                           ;Current_Sense_Main.c: 501: SSP1CON1bits.SSPM = 0b0000;
  1945  001A26  90C6               	bcf	4038,0,c	;volatile
  1946  001A28  92C6               	bcf	4038,1,c	;volatile
  1947  001A2A  94C6               	bcf	4038,2,c	;volatile
  1948  001A2C  96C6               	bcf	4038,3,c	;volatile
  1949                           
  1950                           ;Current_Sense_Main.c: 505: SSP1STATbits.SMP = 0;
  1951  001A2E  9EC7               	bcf	4039,7,c	;volatile
  1952                           
  1953                           ;Current_Sense_Main.c: 506: SSP1STATbits.CKE = 1;
  1954  001A30  8CC7               	bsf	4039,6,c	;volatile
  1955                           
  1956                           ;Current_Sense_Main.c: 508: return;
  1957  001A32  0012               	return		;funcret
  1958  001A34                     __end_of_initSPI:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           fsr1l	equ	0xFE1
  1969                           postinc2	equ	0xFDE
  1970                           postdec2	equ	0xFDD
  1971                           fsr2h	equ	0xFDA
  1972                           fsr2l	equ	0xFD9
  1973                           status	equ	0xFD8
  1974                           
  1975 ;; *************** function _initOSC *****************
  1976 ;; Defined at:
  1977 ;;		line 396 in file "Current_Sense_Main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         0       0       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_init
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text8
  2006  0019DE                     __ptext8:
  2007                           	opt stack 0
  2008  0019DE                     _initOSC:
  2009                           	opt stack 28
  2010                           
  2011                           ;Current_Sense_Main.c: 399: OSCCONbits.IDLEN = 0;
  2012                           
  2013                           ;incstack = 0
  2014  0019DE  9ED3               	bcf	4051,7,c	;volatile
  2015                           
  2016                           ;Current_Sense_Main.c: 400: OSCCONbits.IRCF = 0b111;
  2017  0019E0  88D3               	bsf	4051,4,c	;volatile
  2018  0019E2  8AD3               	bsf	4051,5,c	;volatile
  2019  0019E4  8CD3               	bsf	4051,6,c	;volatile
  2020                           
  2021                           ;Current_Sense_Main.c: 401: OSCCONbits.SCS = 0b11;
  2022  0019E6  0E03               	movlw	3
  2023  0019E8  12D3               	iorwf	4051,f,c	;volatile
  2024                           
  2025                           ;Current_Sense_Main.c: 403: OSCCON2bits.MFIOSEL = 0;
  2026  0019EA  98D2               	bcf	4050,4,c	;volatile
  2027                           
  2028                           ;Current_Sense_Main.c: 404: OSCCON2bits.SOSCGO = 0;
  2029  0019EC  96D2               	bcf	4050,3,c	;volatile
  2030                           
  2031                           ;Current_Sense_Main.c: 405: OSCCON2bits.PRISD = 0;
  2032  0019EE  94D2               	bcf	4050,2,c	;volatile
  2033                           
  2034                           ;Current_Sense_Main.c: 407: OSCTUNEbits.INTSRC = 1;
  2035  0019F0  8E9B               	bsf	3995,7,c	;volatile
  2036                           
  2037                           ;Current_Sense_Main.c: 408: OSCTUNEbits.PLLEN = 0;
  2038  0019F2  9C9B               	bcf	3995,6,c	;volatile
  2039  0019F4  0012               	return	
  2040  0019F6                     __end_of_initOSC:
  2041                           	opt stack 0
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1l	equ	0xFE1
  2051                           postinc2	equ	0xFDE
  2052                           postdec2	equ	0xFDD
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _initMCP *****************
  2058 ;; Defined at:
  2059 ;;		line 511 in file "Current_Sense_Main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2073 ;;      Params:         0       0       0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;;		_init
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text9
  2089  001A34                     __ptext9:
  2090                           	opt stack 0
  2091  001A34                     _initMCP:
  2092                           	opt stack 29
  2093                           
  2094                           ;Current_Sense_Main.c: 514: TRISCbits.TRISC6 = 0;
  2095                           
  2096                           ;incstack = 0
  2097  001A34  9C94               	bcf	3988,6,c	;volatile
  2098                           
  2099                           ;Current_Sense_Main.c: 517: LATCbits.LATC6 = 0;
  2100  001A36  9C8B               	bcf	3979,6,c	;volatile
  2101                           
  2102                           ;Current_Sense_Main.c: 518: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2103  001A38  D000               	nop2		;2 cycle nop
  2104  001A3A  D000               	nop2		;2 cycle nop
  2105                           
  2106                           ;Current_Sense_Main.c: 519: LATCbits.LATC6 = 1;
  2107  001A3C  8C8B               	bsf	3979,6,c	;volatile
  2108                           
  2109                           ;Current_Sense_Main.c: 520: LATCbits.LATC7 = 0;
  2110  001A3E  9E8B               	bcf	3979,7,c	;volatile
  2111                           
  2112                           ;Current_Sense_Main.c: 523: SSP1BUF = 0b10101100;
  2113  001A40  0EAC               	movlw	172
  2114  001A42  6EC9               	movwf	4041,c	;volatile
  2115  001A44  0012               	return	
  2116  001A46                     __end_of_initMCP:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           intcon	equ	0xFF2
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           postdec1	equ	0xFE5
  2126                           fsr1l	equ	0xFE1
  2127                           postinc2	equ	0xFDE
  2128                           postdec2	equ	0xFDD
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _initInterruptsClear *****************
  2134 ;; Defined at:
  2135 ;;		line 441 in file "Current_Sense_Main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0
  2152 ;;      Totals:         0       0       0       0       0       0       0
  2153 ;;Total ram usage:        0 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_init
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text10
  2164  00174A                     __ptext10:
  2165                           	opt stack 0
  2166  00174A                     _initInterruptsClear:
  2167                           	opt stack 28
  2168                           
  2169                           ;Current_Sense_Main.c: 444: INTCON = 0b00000000;
  2170                           
  2171                           ;incstack = 0
  2172  00174A  0E00               	movlw	0
  2173  00174C  6EF2               	movwf	intcon,c	;volatile
  2174                           
  2175                           ;Current_Sense_Main.c: 445: INTCON2 = 0b00000000;
  2176  00174E  0E00               	movlw	0
  2177  001750  6EF1               	movwf	intcon2,c	;volatile
  2178                           
  2179                           ;Current_Sense_Main.c: 446: INTCON3 = 0b00000000;
  2180  001752  0E00               	movlw	0
  2181  001754  6EF0               	movwf	intcon3,c	;volatile
  2182                           
  2183                           ;Current_Sense_Main.c: 448: RCONbits.IPEN = 0;
  2184  001756  9ED0               	bcf	4048,7,c	;volatile
  2185                           
  2186                           ;Current_Sense_Main.c: 450: PIR1 = 0b00000000;
  2187  001758  0E00               	movlw	0
  2188  00175A  6E9E               	movwf	3998,c	;volatile
  2189                           
  2190                           ;Current_Sense_Main.c: 451: PIR2 = 0b00000000;
  2191  00175C  0E00               	movlw	0
  2192  00175E  6EA1               	movwf	4001,c	;volatile
  2193                           
  2194                           ;Current_Sense_Main.c: 452: PIR3 = 0b00000000;
  2195  001760  0E00               	movlw	0
  2196  001762  6EA4               	movwf	4004,c	;volatile
  2197                           
  2198                           ;Current_Sense_Main.c: 453: PIR4 = 0b00000000;
  2199  001764  0E00               	movlw	0
  2200  001766  6E7B               	movwf	3963,c	;volatile
  2201                           
  2202                           ;Current_Sense_Main.c: 454: PIR5 = 0b00000000;
  2203  001768  0E00               	movlw	0
  2204  00176A  6E7E               	movwf	3966,c	;volatile
  2205                           
  2206                           ;Current_Sense_Main.c: 456: PIE1 = 0b00000000;
  2207  00176C  0E00               	movlw	0
  2208  00176E  6E9D               	movwf	3997,c	;volatile
  2209                           
  2210                           ;Current_Sense_Main.c: 457: PIE2 = 0b00000000;
  2211  001770  0E00               	movlw	0
  2212  001772  6EA0               	movwf	4000,c	;volatile
  2213                           
  2214                           ;Current_Sense_Main.c: 458: PIE3 = 0b00000000;
  2215  001774  0E00               	movlw	0
  2216  001776  6EA3               	movwf	4003,c	;volatile
  2217                           
  2218                           ;Current_Sense_Main.c: 459: PIE4 = 0b00000000;
  2219  001778  0E00               	movlw	0
  2220  00177A  6E7A               	movwf	3962,c	;volatile
  2221                           
  2222                           ;Current_Sense_Main.c: 460: PIE5 = 0b00000000;
  2223  00177C  0E00               	movlw	0
  2224  00177E  6E7D               	movwf	3965,c	;volatile
  2225                           
  2226                           ;Current_Sense_Main.c: 462: IPR1 = 0b00000000;
  2227  001780  0E00               	movlw	0
  2228  001782  6E9F               	movwf	3999,c	;volatile
  2229                           
  2230                           ;Current_Sense_Main.c: 463: IPR2 = 0b00000000;
  2231  001784  0E00               	movlw	0
  2232  001786  6EA2               	movwf	4002,c	;volatile
  2233                           
  2234                           ;Current_Sense_Main.c: 464: IPR3 = 0b00000000;
  2235  001788  0E00               	movlw	0
  2236  00178A  6EA5               	movwf	4005,c	;volatile
  2237                           
  2238                           ;Current_Sense_Main.c: 465: IPR4 = 0b00000000;
  2239  00178C  0E00               	movlw	0
  2240  00178E  6E7C               	movwf	3964,c	;volatile
  2241                           
  2242                           ;Current_Sense_Main.c: 466: IPR5 = 0b00000000;
  2243  001790  0E00               	movlw	0
  2244  001792  6E7F               	movwf	3967,c	;volatile
  2245  001794  0012               	return	
  2246  001796                     __end_of_initInterruptsClear:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           intcon	equ	0xFF2
  2253                           intcon2	equ	0xFF1
  2254                           intcon3	equ	0xFF0
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           fsr1l	equ	0xFE1
  2259                           postinc2	equ	0xFDE
  2260                           postdec2	equ	0xFDD
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _initIO *****************
  2266 ;; Defined at:
  2267 ;;		line 413 in file "Current_Sense_Main.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         0       0       0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_init
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text11
  2296  00182A                     __ptext11:
  2297                           	opt stack 0
  2298  00182A                     _initIO:
  2299                           	opt stack 28
  2300                           
  2301                           ;Current_Sense_Main.c: 415: ADCON0bits.ADON = 0;
  2302                           
  2303                           ;incstack = 0
  2304  00182A  90C2               	bcf	4034,0,c	;volatile
  2305                           
  2306                           ;Current_Sense_Main.c: 416: ANSELA = 0b00000000;
  2307  00182C  0E00               	movlw	0
  2308  00182E  010F               	movlb	15	; () banked
  2309  001830  6F38               	movwf	56,b	;volatile
  2310                           
  2311                           ;Current_Sense_Main.c: 417: ANSELB = 0b00000000;
  2312  001832  0E00               	movlw	0
  2313  001834  010F               	movlb	15	; () banked
  2314  001836  6F39               	movwf	57,b	;volatile
  2315                           
  2316                           ;Current_Sense_Main.c: 418: ANSELC = 0b00000000;
  2317  001838  0E00               	movlw	0
  2318  00183A  010F               	movlb	15	; () banked
  2319  00183C  6F3A               	movwf	58,b	;volatile
  2320                           
  2321                           ; BSR set to: 15
  2322                           ;Current_Sense_Main.c: 420: TRISCbits.TRISC0 = 0;
  2323  00183E  9094               	bcf	3988,0,c	;volatile
  2324                           
  2325                           ; BSR set to: 15
  2326                           ;Current_Sense_Main.c: 421: LATCbits.LATC0 = 0;
  2327  001840  908B               	bcf	3979,0,c	;volatile
  2328                           
  2329                           ; BSR set to: 15
  2330                           ;Current_Sense_Main.c: 422: TRISCbits.TRISC1 = 0;
  2331  001842  9294               	bcf	3988,1,c	;volatile
  2332                           
  2333                           ; BSR set to: 15
  2334                           ;Current_Sense_Main.c: 423: LATCbits.LATC1 = 0;
  2335  001844  928B               	bcf	3979,1,c	;volatile
  2336                           
  2337                           ; BSR set to: 15
  2338                           ;Current_Sense_Main.c: 424: TRISBbits.TRISB4 = 0;
  2339  001846  9893               	bcf	3987,4,c	;volatile
  2340                           
  2341                           ; BSR set to: 15
  2342                           ;Current_Sense_Main.c: 425: LATBbits.LATB4 = 0;
  2343  001848  988A               	bcf	3978,4,c	;volatile
  2344                           
  2345                           ; BSR set to: 15
  2346                           ;Current_Sense_Main.c: 427: TRISAbits.TRISA3 = 1;
  2347  00184A  8692               	bsf	3986,3,c	;volatile
  2348                           
  2349                           ; BSR set to: 15
  2350                           ;Current_Sense_Main.c: 428: TRISAbits.TRISA2 = 1;
  2351  00184C  8492               	bsf	3986,2,c	;volatile
  2352                           
  2353                           ; BSR set to: 15
  2354                           ;Current_Sense_Main.c: 429: TRISAbits.TRISA0 = 0;
  2355  00184E  9092               	bcf	3986,0,c	;volatile
  2356                           
  2357                           ; BSR set to: 15
  2358                           ;Current_Sense_Main.c: 430: LATAbits.LATA0 = 0;
  2359  001850  9089               	bcf	3977,0,c	;volatile
  2360                           
  2361                           ; BSR set to: 15
  2362                           ;Current_Sense_Main.c: 433: TRISCbits.TRISC5 = 0;
  2363  001852  9A94               	bcf	3988,5,c	;volatile
  2364                           
  2365                           ; BSR set to: 15
  2366                           ;Current_Sense_Main.c: 434: TRISCbits.TRISC7 = 0;
  2367  001854  9E94               	bcf	3988,7,c	;volatile
  2368                           
  2369                           ; BSR set to: 15
  2370                           ;Current_Sense_Main.c: 435: TRISCbits.TRISC3 = 0;
  2371  001856  9694               	bcf	3988,3,c	;volatile
  2372                           
  2373                           ; BSR set to: 15
  2374                           ;Current_Sense_Main.c: 436: TRISCbits.TRISC4 = 1;
  2375  001858  8894               	bsf	3988,4,c	;volatile
  2376  00185A  0012               	return	
  2377  00185C                     __end_of_initIO:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           intcon	equ	0xFF2
  2384                           intcon2	equ	0xFF1
  2385                           intcon3	equ	0xFF0
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           postinc2	equ	0xFDE
  2391                           postdec2	equ	0xFDD
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _energyPulseCheck *****************
  2397 ;; Defined at:
  2398 ;;		line 242 in file "Current_Sense_Main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2412 ;;      Params:         0       0       0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text12
  2427  0014C8                     __ptext12:
  2428                           	opt stack 0
  2429  0014C8                     _energyPulseCheck:
  2430                           	opt stack 29
  2431                           
  2432                           ;Current_Sense_Main.c: 251: static unsigned long meterEnergyUsedPart = 0;
  2433                           ;Current_Sense_Main.c: 252: static bool mcpLFoutLast = 0;
  2434                           ;Current_Sense_Main.c: 255: if (PORTAbits.RA2 == 0)
  2435                           
  2436                           ; BSR set to: 15
  2437                           ;incstack = 0
  2438  0014C8  B480               	btfsc	3968,2,c	;volatile
  2439  0014CA  D037               	goto	l166
  2440                           
  2441                           ;Current_Sense_Main.c: 256: {
  2442                           ;Current_Sense_Main.c: 257: if (mcpLFoutLast == 0)
  2443  0014CC  5048               	movf	energyPulseCheck@mcpLFoutLast,w,c
  2444  0014CE  A4D8               	btfss	status,2,c
  2445  0014D0  0012               	return	
  2446                           
  2447                           ;Current_Sense_Main.c: 258: {
  2448                           ;Current_Sense_Main.c: 259: mcpLFoutLast = 1;
  2449  0014D2  0E01               	movlw	1
  2450  0014D4  6E48               	movwf	energyPulseCheck@mcpLFoutLast,c
  2451                           
  2452                           ;Current_Sense_Main.c: 261: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  2453  0014D6  0E80               	movlw	128
  2454  0014D8  0100               	movlb	0	; () banked
  2455  0014DA  277C               	addwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2456  0014DC  0E97               	movlw	151
  2457  0014DE  237D               	addwfc	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2458  0014E0  0E06               	movlw	6
  2459  0014E2  237E               	addwfc	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2460  0014E4  0E00               	movlw	0
  2461  0014E6  237F               	addwfc	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2462                           
  2463                           ;Current_Sense_Main.c: 262: while (meterEnergyUsedPart > 100000)
  2464  0014E8  D010               	goto	l168
  2465  0014EA                     l3538:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;Current_Sense_Main.c: 263: {
  2469                           ;Current_Sense_Main.c: 264: meterEnergyUsed++;
  2470  0014EA  0E01               	movlw	1
  2471  0014EC  0100               	movlb	0	; () banked
  2472  0014EE  2788               	addwf	_meterEnergyUsed& (0+255),f,b
  2473  0014F0  0E00               	movlw	0
  2474  0014F2  2389               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  2475  0014F4  238A               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  2476  0014F6  238B               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  2477                           
  2478                           ;Current_Sense_Main.c: 265: meterEnergyUsedPart -= 100000;
  2479  0014F8  0EA0               	movlw	160
  2480  0014FA  0100               	movlb	0	; () banked
  2481  0014FC  5F7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2482  0014FE  0E86               	movlw	134
  2483  001500  5B7D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2484  001502  0E01               	movlw	1
  2485  001504  5B7E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2486  001506  0E00               	movlw	0
  2487  001508  5B7F               	subwfb	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2488  00150A                     l168:
  2489                           
  2490                           ; BSR set to: 0
  2491  00150A  0100               	movlb	0	; () banked
  2492  00150C  517F               	movf	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  2493  00150E  E1ED               	bnz	l3538
  2494  001510  0EA1               	movlw	161
  2495  001512  0100               	movlb	0	; () banked
  2496  001514  5D7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),w,b
  2497  001516  0E86               	movlw	134
  2498  001518  0100               	movlb	0	; () banked
  2499  00151A  597D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  2500  00151C  0E01               	movlw	1
  2501  00151E  0100               	movlb	0	; () banked
  2502  001520  597E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  2503  001522  B0D8               	btfsc	status,0,c
  2504  001524  D7E2               	goto	l169
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;Current_Sense_Main.c: 266: }
  2508                           ;Current_Sense_Main.c: 268: timerCountLF = 0;
  2509                           
  2510                           ; BSR set to: 0
  2511  001526  0E00               	movlw	0
  2512  001528  0100               	movlb	0	; () banked
  2513  00152A  6F80               	movwf	_timerCountLF& (0+255),b	;volatile
  2514  00152C  0E00               	movlw	0
  2515  00152E  6F81               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  2516  001530  0E00               	movlw	0
  2517  001532  6F82               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  2518  001534  0E00               	movlw	0
  2519  001536  6F83               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;Current_Sense_Main.c: 269: }
  2523                           ;Current_Sense_Main.c: 270: }
  2524  001538  0012               	return	
  2525  00153A                     l166:
  2526                           
  2527                           ;Current_Sense_Main.c: 271: else
  2528                           ;Current_Sense_Main.c: 272: {
  2529                           ;Current_Sense_Main.c: 273: mcpLFoutLast = 0;
  2530                           
  2531                           ; BSR set to: 0
  2532  00153A  0E00               	movlw	0
  2533  00153C  6E48               	movwf	energyPulseCheck@mcpLFoutLast,c
  2534  00153E  0012               	return	
  2535  001540                     __end_of_energyPulseCheck:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           intcon	equ	0xFF2
  2542                           intcon2	equ	0xFF1
  2543                           intcon3	equ	0xFF0
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           postdec1	equ	0xFE5
  2547                           fsr1l	equ	0xFE1
  2548                           postinc2	equ	0xFDE
  2549                           postdec2	equ	0xFDD
  2550                           fsr2h	equ	0xFDA
  2551                           fsr2l	equ	0xFD9
  2552                           status	equ	0xFD8
  2553                           
  2554 ;; *************** function _delayMS10 *****************
  2555 ;; Defined at:
  2556 ;;		line 375 in file "Current_Sense_Main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  count           2   18[COMRAM] int 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  inx             2   21[COMRAM] int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2570 ;;      Params:         2       0       0       0       0       0       0
  2571 ;;      Locals:         2       0       0       0       0       0       0
  2572 ;;      Temps:          1       0       0       0       0       0       0
  2573 ;;      Totals:         5       0       0       0       0       0       0
  2574 ;;Total ram usage:        5 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text13
  2585  00185C                     __ptext13:
  2586                           	opt stack 0
  2587  00185C                     _delayMS10:
  2588                           	opt stack 29
  2589                           
  2590                           ;Current_Sense_Main.c: 377: for (int inx = 0; inx < count; inx++)
  2591                           
  2592                           ;incstack = 0
  2593  00185C  0E00               	movlw	0
  2594  00185E  6E17               	movwf	delayMS10@inx+1,c
  2595  001860  0E00               	movlw	0
  2596  001862  6E16               	movwf	delayMS10@inx,c
  2597  001864  D009               	goto	l220
  2598  001866                     
  2599                           ;Current_Sense_Main.c: 378: {
  2600                           ;Current_Sense_Main.c: 380: _delay((unsigned long)((10)*(16000000/4000.0)));
  2601  001866  0E34               	movlw	52
  2602  001868  6E15               	movwf	??_delayMS10& (0+255),c
  2603  00186A  0EF2               	movlw	242
  2604  00186C                     u3197:
  2605  00186C  2EE8               	decfsz	wreg,f,c
  2606  00186E  D7FE               	bra	u3197
  2607  001870  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2608  001872  D7FC               	bra	u3197
  2609  001874  4A16               	infsnz	delayMS10@inx,f,c
  2610  001876  2A17               	incf	delayMS10@inx+1,f,c
  2611  001878                     l220:
  2612  001878  5013               	movf	delayMS10@count,w,c
  2613  00187A  5C16               	subwf	delayMS10@inx,w,c
  2614  00187C  5017               	movf	delayMS10@inx+1,w,c
  2615  00187E  0A80               	xorlw	128
  2616  001880  6E15               	movwf	??_delayMS10& (0+255),c
  2617  001882  5014               	movf	delayMS10@count+1,w,c
  2618  001884  0A80               	xorlw	128
  2619  001886  5815               	subwfb	??_delayMS10& (0+255),w,c
  2620  001888  B0D8               	btfsc	status,0,c
  2621  00188A  0012               	return	
  2622  00188C  D7EC               	goto	l221
  2623  00188E                     __end_of_delayMS10:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           intcon	equ	0xFF2
  2630                           intcon2	equ	0xFF1
  2631                           intcon3	equ	0xFF0
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1l	equ	0xFE1
  2636                           postinc2	equ	0xFDE
  2637                           postdec2	equ	0xFDD
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _communications *****************
  2643 ;; Defined at:
  2644 ;;		line 89 in file "SlaveComm_PIC18.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  firstTime       1    wreg     unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  firstTime       1   13[BANK0 ] unsigned char 
  2649 ;;  no_more_to_s    1   12[BANK0 ] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         0       0       0       0       0       0       0
  2660 ;;      Locals:         0       2       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0
  2662 ;;      Totals:         0       2       0       0       0       0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    7
  2666 ;; This function calls:
  2667 ;;		_SPISlaveInit
  2668 ;;		_process_data
  2669 ;;		_receive_data
  2670 ;;		_resetCommunications
  2671 ;;		_send_data
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text14
  2678  001048                     __ptext14:
  2679                           	opt stack 0
  2680  001048                     _communications:
  2681                           	opt stack 23
  2682                           
  2683                           ;incstack = 0
  2684                           ;communications@firstTime stored from wreg
  2685  001048  0100               	movlb	0	; () banked
  2686  00104A  6FC9               	movwf	communications@firstTime& (0+255),b
  2687                           
  2688                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2689                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2690                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2691                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2692                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2693                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2694  00104C  0100               	movlb	0	; () banked
  2695  00104E  05C9               	decf	communications@firstTime& (0+255),w,b
  2696  001050  A4D8               	btfss	status,2,c
  2697  001052  D00F               	goto	l327
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;SlaveComm_PIC18.c: 101: {
  2701                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2702  001054  EC7D  F00B         	call	_SPISlaveInit	;wreg free
  2703                           
  2704                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2705  001058  0E00               	movlw	0
  2706  00105A  0100               	movlb	0	; () banked
  2707  00105C  6FBA               	movwf	(communications@send_buffer+40)& (0+255),b
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2711  00105E  0E00               	movlw	0
  2712  001060  0100               	movlb	0	; () banked
  2713  001062  6FBB               	movwf	(communications@send_buffer+41)& (0+255),b
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2717  001064  0E92               	movlw	low communications@send_buffer
  2718  001066  6E2F               	movwf	resetCommunications@send_buffer,c
  2719  001068  0E00               	movlw	high communications@send_buffer
  2720  00106A  6E30               	movwf	resetCommunications@send_buffer+1,c
  2721  00106C  ECC3  F008         	call	_resetCommunications	;wreg free
  2722                           
  2723                           ;SlaveComm_PIC18.c: 106: }
  2724  001070  0012               	return	
  2725  001072                     l327:
  2726                           
  2727                           ;SlaveComm_PIC18.c: 107: else
  2728                           ;SlaveComm_PIC18.c: 108: {
  2729                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2730  001072  0E33               	movlw	low communications@receive_buffer
  2731  001074  6E16               	movwf	receive_data@receive_buffer,c
  2732  001076  0E01               	movlw	high communications@receive_buffer
  2733  001078  6E17               	movwf	receive_data@receive_buffer+1,c
  2734  00107A  ECC4  F007         	call	_receive_data	;wreg free
  2735  00107E  6E40               	movwf	communications@receive_current_state,c
  2736                           
  2737                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2738  001080  D010               	goto	l329
  2739  001082                     
  2740                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2741  001082  0E33               	movlw	low communications@receive_buffer
  2742  001084  6E34               	movwf	process_data@receive_buffer,c
  2743  001086  0E01               	movlw	high communications@receive_buffer
  2744  001088  6E35               	movwf	process_data@receive_buffer+1,c
  2745  00108A  0E92               	movlw	low communications@send_buffer
  2746  00108C  6E36               	movwf	process_data@send_buffer,c
  2747  00108E  0E00               	movlw	high communications@send_buffer
  2748  001090  6E37               	movwf	process_data@send_buffer+1,c
  2749  001092  EC47  F00C         	call	_process_data	;wreg free
  2750  001096  06E8               	decf	wreg,f,c
  2751  001098  A4D8               	btfss	status,2,c
  2752  00109A  D00D               	goto	l331
  2753                           
  2754                           ;SlaveComm_PIC18.c: 122: {
  2755                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2756  00109C  0E01               	movlw	1
  2757  00109E  6E41               	movwf	communications@end_of_transmission_received,c
  2758                           
  2759                           ;SlaveComm_PIC18.c: 127: }
  2760                           
  2761                           ;SlaveComm_PIC18.c: 124: }
  2762                           ;SlaveComm_PIC18.c: 126: break;
  2763  0010A0  D00A               	goto	l331
  2764  0010A2                     l329:
  2765  0010A2  5040               	movf	communications@receive_current_state,w,c
  2766                           
  2767                           ; Switch size 1, requested type "space"
  2768                           ; Number of cases is 3, Range of values is 0 to 2
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte           10     6 (average)
  2772                           ;	Chosen strategy is simple_byte
  2773  0010A4  0A00               	xorlw	0	; case 0
  2774  0010A6  B4D8               	btfsc	status,2,c
  2775  0010A8  D006               	goto	l331
  2776  0010AA  0A01               	xorlw	1	; case 1
  2777  0010AC  B4D8               	btfsc	status,2,c
  2778  0010AE  D003               	goto	l331
  2779  0010B0  0A03               	xorlw	3	; case 2
  2780  0010B2  B4D8               	btfsc	status,2,c
  2781  0010B4  D7E6               	goto	l333
  2782  0010B6                     l331:
  2783                           
  2784                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2785  0010B6  0E92               	movlw	low communications@send_buffer
  2786  0010B8  6E15               	movwf	send_data@send_buffer,c
  2787  0010BA  0E00               	movlw	high communications@send_buffer
  2788  0010BC  6E16               	movwf	send_data@send_buffer+1,c
  2789  0010BE  EC5B  F009         	call	_send_data	;wreg free
  2790  0010C2  0100               	movlb	0	; () banked
  2791  0010C4  6FC8               	movwf	communications@no_more_to_send& (0+255),b
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2795                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2796  0010C6  A081               	btfss	3969,0,c	;volatile
  2797  0010C8  D003               	goto	l337
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;SlaveComm_PIC18.c: 134: {
  2801                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2802  0010CA  0E00               	movlw	0
  2803  0010CC  6E3F               	movwf	communications@last_state_active,c
  2804                           
  2805                           ;SlaveComm_PIC18.c: 136: }
  2806  0010CE  0012               	return	
  2807  0010D0                     l337:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;SlaveComm_PIC18.c: 137: else
  2811                           ;SlaveComm_PIC18.c: 138: {
  2812                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2813                           
  2814                           ; BSR set to: 0
  2815  0010D0  503F               	movf	communications@last_state_active,w,c
  2816  0010D2  A4D8               	btfss	status,2,c
  2817  0010D4  D006               	goto	l339
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;SlaveComm_PIC18.c: 140: {
  2821                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2822  0010D6  0E92               	movlw	low communications@send_buffer
  2823  0010D8  6E2F               	movwf	resetCommunications@send_buffer,c
  2824  0010DA  0E00               	movlw	high communications@send_buffer
  2825  0010DC  6E30               	movwf	resetCommunications@send_buffer+1,c
  2826  0010DE  ECC3  F008         	call	_resetCommunications	;wreg free
  2827  0010E2                     l339:
  2828                           
  2829                           ;SlaveComm_PIC18.c: 142: }
  2830                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2831  0010E2  0E01               	movlw	1
  2832  0010E4  6E3F               	movwf	communications@last_state_active,c
  2833  0010E6  0012               	return	
  2834  0010E8                     __end_of_communications:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           intcon	equ	0xFF2
  2841                           intcon2	equ	0xFF1
  2842                           intcon3	equ	0xFF0
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           postdec1	equ	0xFE5
  2846                           fsr1l	equ	0xFE1
  2847                           postinc2	equ	0xFDE
  2848                           postdec2	equ	0xFDD
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _send_data *****************
  2854 ;; Defined at:
  2855 ;;		line 485 in file "SlaveComm_PIC18.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2858 ;;		 -> communications@send_buffer(42), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  send_end        1   24[COMRAM] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      unsigned char 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2870 ;;      Params:         2       0       0       0       0       0       0
  2871 ;;      Locals:         1       0       0       0       0       0       0
  2872 ;;      Temps:          2       0       0       0       0       0       0
  2873 ;;      Totals:         5       0       0       0       0       0       0
  2874 ;;Total ram usage:        5 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		_SPI_send_data
  2879 ;; This function is called by:
  2880 ;;		_communications
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text15
  2885  0012B6                     __ptext15:
  2886                           	opt stack 0
  2887  0012B6                     _send_data:
  2888                           	opt stack 27
  2889                           
  2890                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2891                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2892                           
  2893                           ;incstack = 0
  2894  0012B6  EE20 F028          	lfsr	2,40
  2895  0012BA  5015               	movf	send_data@send_buffer,w,c
  2896  0012BC  26D9               	addwf	fsr2l,f,c
  2897  0012BE  5016               	movf	send_data@send_buffer+1,w,c
  2898  0012C0  22DA               	addwfc	fsr2h,f,c
  2899  0012C2  EE10 F029          	lfsr	1,41
  2900  0012C6  5015               	movf	send_data@send_buffer,w,c
  2901  0012C8  26E1               	addwf	fsr1l,f,c
  2902  0012CA  5016               	movf	send_data@send_buffer+1,w,c
  2903  0012CC  22E2               	addwfc	fsr1h,f,c
  2904  0012CE  50DE               	movf	postinc2,w,c
  2905  0012D0  18E6               	xorwf	postinc1,w,c
  2906  0012D2  A4D8               	btfss	status,2,c
  2907  0012D4  D006               	goto	l437
  2908                           
  2909                           ;SlaveComm_PIC18.c: 490: {
  2910                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2911  0012D6  0E01               	movlw	1
  2912  0012D8  6E19               	movwf	send_data@send_end,c
  2913                           
  2914                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2915  0012DA  0E00               	movlw	0
  2916  0012DC  ECC4  F00C         	call	_SPI_send_data
  2917                           
  2918                           ;SlaveComm_PIC18.c: 493: }
  2919  0012E0  D030               	goto	l440
  2920  0012E2                     l437:
  2921                           
  2922                           ;SlaveComm_PIC18.c: 494: else
  2923                           ;SlaveComm_PIC18.c: 495: {
  2924                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2925  0012E2  0E00               	movlw	0
  2926  0012E4  6E19               	movwf	send_data@send_end,c
  2927                           
  2928                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2929  0012E6  EE20 F029          	lfsr	2,41
  2930  0012EA  5015               	movf	send_data@send_buffer,w,c
  2931  0012EC  26D9               	addwf	fsr2l,f,c
  2932  0012EE  5016               	movf	send_data@send_buffer+1,w,c
  2933  0012F0  22DA               	addwfc	fsr2h,f,c
  2934  0012F2  50DF               	movf	indf2,w,c
  2935  0012F4  6E17               	movwf	??_send_data& (0+255),c
  2936  0012F6  5017               	movf	??_send_data,w,c
  2937  0012F8  0D01               	mullw	1
  2938  0012FA  50F3               	movf	prodl,w,c
  2939  0012FC  2415               	addwf	send_data@send_buffer,w,c
  2940  0012FE  6ED9               	movwf	fsr2l,c
  2941  001300  50F4               	movf	prodh,w,c
  2942  001302  2016               	addwfc	send_data@send_buffer+1,w,c
  2943  001304  6EDA               	movwf	fsr2h,c
  2944  001306  50DF               	movf	indf2,w,c
  2945  001308  ECC4  F00C         	call	_SPI_send_data
  2946  00130C  06E8               	decf	wreg,f,c
  2947  00130E  A4D8               	btfss	status,2,c
  2948  001310  D018               	goto	l440
  2949                           
  2950                           ;SlaveComm_PIC18.c: 500: {
  2951                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2952  001312  EE20 F029          	lfsr	2,41
  2953  001316  5015               	movf	send_data@send_buffer,w,c
  2954  001318  26D9               	addwf	fsr2l,f,c
  2955  00131A  5016               	movf	send_data@send_buffer+1,w,c
  2956  00131C  22DA               	addwfc	fsr2h,f,c
  2957  00131E  2ADF               	incf	indf2,f,c
  2958                           
  2959                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2960  001320  EE20 F029          	lfsr	2,41
  2961  001324  5015               	movf	send_data@send_buffer,w,c
  2962  001326  26D9               	addwf	fsr2l,f,c
  2963  001328  5016               	movf	send_data@send_buffer+1,w,c
  2964  00132A  22DA               	addwfc	fsr2h,f,c
  2965  00132C  0E27               	movlw	39
  2966  00132E  64DF               	cpfsgt	indf2,c
  2967  001330  D008               	goto	l440
  2968                           
  2969                           ;SlaveComm_PIC18.c: 504: {
  2970                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2971  001332  EE20 F029          	lfsr	2,41
  2972  001336  5015               	movf	send_data@send_buffer,w,c
  2973  001338  26D9               	addwf	fsr2l,f,c
  2974  00133A  5016               	movf	send_data@send_buffer+1,w,c
  2975  00133C  22DA               	addwfc	fsr2h,f,c
  2976  00133E  0E00               	movlw	0
  2977  001340  6EDF               	movwf	indf2,c
  2978  001342                     l440:
  2979                           
  2980                           ;SlaveComm_PIC18.c: 506: }
  2981                           ;SlaveComm_PIC18.c: 507: }
  2982                           ;SlaveComm_PIC18.c: 508: }
  2983                           ;SlaveComm_PIC18.c: 510: return send_end;
  2984  001342  5019               	movf	send_data@send_end,w,c
  2985  001344  0012               	return	
  2986  001346                     __end_of_send_data:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           intcon2	equ	0xFF1
  2996                           intcon3	equ	0xFF0
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           postinc1	equ	0xFE6
  3000                           postdec1	equ	0xFE5
  3001                           fsr1h	equ	0xFE2
  3002                           fsr1l	equ	0xFE1
  3003                           indf2	equ	0xFDF
  3004                           postinc2	equ	0xFDE
  3005                           postdec2	equ	0xFDD
  3006                           fsr2h	equ	0xFDA
  3007                           fsr2l	equ	0xFD9
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function _SPI_send_data *****************
  3011 ;; Defined at:
  3012 ;;		line 583 in file "SlaveComm_PIC18.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  data            1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  data            1   18[COMRAM] unsigned char 
  3017 ;;  sendGood        1   19[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3027 ;;      Params:         0       0       0       0       0       0       0
  3028 ;;      Locals:         2       0       0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_send_data
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text16
  3042  001988                     __ptext16:
  3043                           	opt stack 0
  3044  001988                     _SPI_send_data:
  3045                           	opt stack 27
  3046                           
  3047                           ;incstack = 0
  3048                           ;SPI_send_data@data stored from wreg
  3049  001988  6E13               	movwf	SPI_send_data@data,c
  3050                           
  3051                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  3052  00198A  0E00               	movlw	0
  3053  00198C  6E14               	movwf	SPI_send_data@sendGood,c
  3054                           
  3055                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  3056  00198E  5042               	movf	_SPI_transmit_wait,w,c
  3057  001990  A4D8               	btfss	status,2,c
  3058  001992  D006               	goto	l468
  3059                           
  3060                           ;SlaveComm_PIC18.c: 588: {
  3061                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  3062  001994  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  3063                           
  3064                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  3065  001998  0E01               	movlw	1
  3066  00199A  6E42               	movwf	_SPI_transmit_wait,c
  3067                           
  3068                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  3069  00199C  0E01               	movlw	1
  3070  00199E  D001               	goto	L1
  3071  0019A0                     l468:
  3072                           
  3073                           ;SlaveComm_PIC18.c: 593: else
  3074                           ;SlaveComm_PIC18.c: 594: {
  3075                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  3076  0019A0  0E00               	movlw	0
  3077  0019A2                     L1:
  3078  0019A2  6E14               	movwf	SPI_send_data@sendGood,c
  3079                           
  3080                           ;SlaveComm_PIC18.c: 596: }
  3081                           ;SlaveComm_PIC18.c: 598: return sendGood;
  3082  0019A4  5014               	movf	SPI_send_data@sendGood,w,c
  3083  0019A6  0012               	return	
  3084  0019A8                     __end_of_SPI_send_data:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           intcon2	equ	0xFF1
  3094                           intcon3	equ	0xFF0
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           postinc1	equ	0xFE6
  3098                           postdec1	equ	0xFE5
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           indf2	equ	0xFDF
  3102                           postinc2	equ	0xFDE
  3103                           postdec2	equ	0xFDD
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _resetCommunications *****************
  3109 ;; Defined at:
  3110 ;;		line 152 in file "SlaveComm_PIC18.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  3113 ;;		 -> communications@send_buffer(42), 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3125 ;;      Params:         2       0       0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0
  3127 ;;      Temps:          2       0       0       0       0       0       0
  3128 ;;      Totals:         4       0       0       0       0       0       0
  3129 ;;Total ram usage:        4 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    5
  3132 ;; This function calls:
  3133 ;;		_com_command_setEnergyUsed
  3134 ;;		_com_command_setPower
  3135 ;;		_com_command_setVersion
  3136 ;; This function is called by:
  3137 ;;		_communications
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text17
  3142  001186                     __ptext17:
  3143                           	opt stack 0
  3144  001186                     _resetCommunications:
  3145                           	opt stack 24
  3146                           
  3147                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  3148                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  3149                           
  3150                           ;incstack = 0
  3151  001186  9A6C               	bcf	3948,5,c	;volatile
  3152                           
  3153                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  3154  001188  0E06               	movlw	6
  3155  00118A  6E31               	movwf	??_resetCommunications& (0+255),c
  3156  00118C  0E30               	movlw	48
  3157  00118E                     u3207:
  3158  00118E  2EE8               	decfsz	wreg,f,c
  3159  001190  D7FE               	bra	u3207
  3160  001192  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  3161  001194  D7FC               	bra	u3207
  3162  001196  D000               	nop2	
  3163                           
  3164                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  3165  001198  8A6C               	bsf	3948,5,c	;volatile
  3166                           
  3167                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  3168  00119A  9E6C               	bcf	3948,7,c	;volatile
  3169                           
  3170                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  3171  00119C  0E00               	movlw	0
  3172  00119E  6E42               	movwf	_SPI_transmit_wait,c
  3173                           
  3174                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  3175  0011A0  EE20 F029          	lfsr	2,41
  3176  0011A4  502F               	movf	resetCommunications@send_buffer,w,c
  3177  0011A6  26D9               	addwf	fsr2l,f,c
  3178  0011A8  5030               	movf	resetCommunications@send_buffer+1,w,c
  3179  0011AA  22DA               	addwfc	fsr2h,f,c
  3180  0011AC  0E00               	movlw	0
  3181  0011AE  6EDF               	movwf	indf2,c
  3182                           
  3183                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  3184  0011B0  EE20 F028          	lfsr	2,40
  3185  0011B4  502F               	movf	resetCommunications@send_buffer,w,c
  3186  0011B6  26D9               	addwf	fsr2l,f,c
  3187  0011B8  5030               	movf	resetCommunications@send_buffer+1,w,c
  3188  0011BA  22DA               	addwfc	fsr2h,f,c
  3189  0011BC  0E00               	movlw	0
  3190  0011BE  6EDF               	movwf	indf2,c
  3191                           
  3192                           ;SlaveComm_PIC18.c: 171: commState++;
  3193  0011C0  0100               	movlb	0	; () banked
  3194  0011C2  4B90               	infsnz	resetCommunications@commState& (0+255),f,b
  3195  0011C4  2B91               	incf	(resetCommunications@commState+1)& (0+255),f,b
  3196                           
  3197                           ;SlaveComm_PIC18.c: 172: switch (commState)
  3198  0011C6  D01A               	goto	l345
  3199  0011C8                     
  3200                           ; BSR set to: 0
  3201                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  3202                           
  3203                           ; BSR set to: 0
  3204  0011C8  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  3205  0011CC  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  3206  0011D0  EC8C  F00C         	call	_com_command_setVersion	;wreg free
  3207                           
  3208                           ;SlaveComm_PIC18.c: 176: break;
  3209  0011D4  0012               	return	
  3210  0011D6                     
  3211                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  3212  0011D6  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  3213  0011DA  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  3214  0011DE  ECCB  F00B         	call	_com_command_setPower	;wreg free
  3215                           
  3216                           ;SlaveComm_PIC18.c: 179: break;
  3217  0011E2  0012               	return	
  3218  0011E4                     
  3219                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  3220  0011E4  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  3221  0011E8  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3222  0011EC  ECF0  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3223  0011F0                     
  3224                           ;SlaveComm_PIC18.c: 193: commState = 0;
  3225  0011F0  0E00               	movlw	0
  3226  0011F2  0100               	movlb	0	; () banked
  3227  0011F4  6F91               	movwf	(resetCommunications@commState+1)& (0+255),b
  3228  0011F6  0E00               	movlw	0
  3229  0011F8  6F90               	movwf	resetCommunications@commState& (0+255),b
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;SlaveComm_PIC18.c: 195: }
  3233                           
  3234                           ;SlaveComm_PIC18.c: 194: break;
  3235  0011FA  0012               	return	
  3236  0011FC                     l345:
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241  0011FC  C090  F031         	movff	resetCommunications@commState,??_resetCommunications
  3242  001200  C091  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  3243                           
  3244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3245                           ; Switch size 1, requested type "space"
  3246                           ; Number of cases is 1, Range of values is 0 to 0
  3247                           ; switch strategies available:
  3248                           ; Name         Instructions Cycles
  3249                           ; simple_byte            4     3 (average)
  3250                           ;	Chosen strategy is simple_byte
  3251  001204  5032               	movf	??_resetCommunications+1,w,c
  3252  001206  0A00               	xorlw	0	; case 0
  3253  001208  A4D8               	btfss	status,2,c
  3254  00120A  D7F2               	goto	l350
  3255                           
  3256                           ; BSR set to: 0
  3257                           ; Switch size 1, requested type "space"
  3258                           ; Number of cases is 3, Range of values is 1 to 3
  3259                           ; switch strategies available:
  3260                           ; Name         Instructions Cycles
  3261                           ; simple_byte           10     6 (average)
  3262                           ;	Chosen strategy is simple_byte
  3263  00120C  5031               	movf	??_resetCommunications,w,c
  3264  00120E  0A01               	xorlw	1	; case 1
  3265  001210  B4D8               	btfsc	status,2,c
  3266  001212  D7DA               	goto	l346
  3267  001214  0A03               	xorlw	3	; case 2
  3268  001216  B4D8               	btfsc	status,2,c
  3269  001218  D7DE               	goto	l348
  3270  00121A  0A01               	xorlw	1	; case 3
  3271  00121C  B4D8               	btfsc	status,2,c
  3272  00121E  D7E2               	goto	l349
  3273  001220  D7E7               	goto	l350
  3274  001222                     __end_of_resetCommunications:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           intcon2	equ	0xFF1
  3284                           intcon3	equ	0xFF0
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           postinc1	equ	0xFE6
  3288                           postdec1	equ	0xFE5
  3289                           fsr1h	equ	0xFE2
  3290                           fsr1l	equ	0xFE1
  3291                           indf2	equ	0xFDF
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           fsr2h	equ	0xFDA
  3295                           fsr2l	equ	0xFD9
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _com_command_setVersion *****************
  3299 ;; Defined at:
  3300 ;;		line 663 in file "SlaveComm_PIC18.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  3303 ;;		 -> communications@send_buffer(42), 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         2       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         2       0       0       0       0       0       0
  3319 ;;Total ram usage:        2 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    4
  3322 ;; This function calls:
  3323 ;;		_command_builder3
  3324 ;; This function is called by:
  3325 ;;		_resetCommunications
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text18
  3330  001918                     __ptext18:
  3331                           	opt stack 0
  3332  001918                     _com_command_setVersion:
  3333                           	opt stack 24
  3334                           
  3335                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3336                           
  3337                           ;incstack = 0
  3338  001918  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3339  00191C  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3340  001920  0E57               	movlw	low STR_2
  3341  001922  6E21               	movwf	command_builder3@data1,c
  3342  001924  0E06               	movlw	high STR_2
  3343  001926  6E22               	movwf	command_builder3@data1+1,c
  3344  001928  0E0D               	movlw	low STR_22
  3345  00192A  6E23               	movwf	command_builder3@data2,c
  3346  00192C  0E06               	movlw	high STR_22
  3347  00192E  6E24               	movwf	command_builder3@data2+1,c
  3348  001930  0E4B               	movlw	low STR_40
  3349  001932  6E25               	movwf	command_builder3@data3,c
  3350  001934  0E06               	movlw	high STR_40
  3351  001936  6E26               	movwf	command_builder3@data3+1,c
  3352  001938  EC74  F008         	call	_command_builder3	;wreg free
  3353  00193C  0012               	return		;funcret
  3354  00193E                     __end_of_com_command_setVersion:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           prodh	equ	0xFF4
  3361                           prodl	equ	0xFF3
  3362                           intcon	equ	0xFF2
  3363                           intcon2	equ	0xFF1
  3364                           intcon3	equ	0xFF0
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           postinc1	equ	0xFE6
  3368                           postdec1	equ	0xFE5
  3369                           fsr1h	equ	0xFE2
  3370                           fsr1l	equ	0xFE1
  3371                           indf2	equ	0xFDF
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _com_command_setPower *****************
  3379 ;; Defined at:
  3380 ;;		line 618 in file "SlaveComm_PIC18.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3383 ;;		 -> communications@send_buffer(42), 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  temp           12    0[BANK0 ] unsigned char [12]
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3395 ;;      Params:         2       0       0       0       0       0       0
  3396 ;;      Locals:         0      12       0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0
  3398 ;;      Totals:         2      12       0       0       0       0       0
  3399 ;;Total ram usage:       14 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    4
  3402 ;; This function calls:
  3403 ;;		_command_builder3
  3404 ;;		_ultoa
  3405 ;; This function is called by:
  3406 ;;		_resetCommunications
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text19
  3411  001796                     __ptext19:
  3412                           	opt stack 0
  3413  001796                     _com_command_setPower:
  3414                           	opt stack 24
  3415                           
  3416                           ;SlaveComm_PIC18.c: 621: char temp[12];
  3417                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  3418                           
  3419                           ;incstack = 0
  3420  001796  0EBC               	movlw	low com_command_setPower@temp
  3421  001798  6E20               	movwf	ultoa@buf,c
  3422  00179A  0E00               	movlw	high com_command_setPower@temp
  3423  00179C  6E21               	movwf	ultoa@buf+1,c
  3424  00179E  C08C  F022         	movff	_meterWatts,ultoa@val
  3425  0017A2  C08D  F023         	movff	_meterWatts+1,ultoa@val+1
  3426  0017A6  C08E  F024         	movff	_meterWatts+2,ultoa@val+2
  3427  0017AA  C08F  F025         	movff	_meterWatts+3,ultoa@val+3
  3428  0017AE  0E00               	movlw	0
  3429  0017B0  6E27               	movwf	ultoa@base+1,c
  3430  0017B2  0E0A               	movlw	10
  3431  0017B4  6E26               	movwf	ultoa@base,c
  3432  0017B6  EC5F  F006         	call	_ultoa	;wreg free
  3433                           
  3434                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  3435  0017BA  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3436  0017BE  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3437  0017C2  0E57               	movlw	low STR_2
  3438  0017C4  6E21               	movwf	command_builder3@data1,c
  3439  0017C6  0E06               	movlw	high STR_2
  3440  0017C8  6E22               	movwf	command_builder3@data1+1,c
  3441  0017CA  0E24               	movlw	low STR_18
  3442  0017CC  6E23               	movwf	command_builder3@data2,c
  3443  0017CE  0E06               	movlw	high STR_18
  3444  0017D0  6E24               	movwf	command_builder3@data2+1,c
  3445  0017D2  0EBC               	movlw	low com_command_setPower@temp
  3446  0017D4  6E25               	movwf	command_builder3@data3,c
  3447  0017D6  0E00               	movlw	high com_command_setPower@temp
  3448  0017D8  6E26               	movwf	command_builder3@data3+1,c
  3449  0017DA  EC74  F008         	call	_command_builder3	;wreg free
  3450  0017DE  0012               	return	
  3451  0017E0                     __end_of_com_command_setPower:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           prodh	equ	0xFF4
  3458                           prodl	equ	0xFF3
  3459                           intcon	equ	0xFF2
  3460                           intcon2	equ	0xFF1
  3461                           intcon3	equ	0xFF0
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           postinc1	equ	0xFE6
  3465                           postdec1	equ	0xFE5
  3466                           fsr1h	equ	0xFE2
  3467                           fsr1l	equ	0xFE1
  3468                           indf2	equ	0xFDF
  3469                           postinc2	equ	0xFDE
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _receive_data *****************
  3476 ;; Defined at:
  3477 ;;		line 199 in file "SlaveComm_PIC18.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3480 ;;		 -> communications@receive_buffer(42), 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  data            1   24[COMRAM] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      enum E6751
  3485 ;; Registers used:
  3486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3492 ;;      Params:         2       0       0       0       0       0       0
  3493 ;;      Locals:         1       0       0       0       0       0       0
  3494 ;;      Temps:          1       0       0       0       0       0       0
  3495 ;;      Totals:         4       0       0       0       0       0       0
  3496 ;;Total ram usage:        4 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    2
  3499 ;; This function calls:
  3500 ;;		_SPI_receive_data
  3501 ;; This function is called by:
  3502 ;;		_communications
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text20
  3507  000F88                     __ptext20:
  3508                           	opt stack 0
  3509  000F88                     _receive_data:
  3510                           	opt stack 27
  3511                           
  3512                           ;SlaveComm_PIC18.c: 201: char data;
  3513                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  3514                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  3515                           
  3516                           ;incstack = 0
  3517  000F88  0E02               	movlw	2
  3518  000F8A  183E               	xorwf	receive_data@my_status,w,c
  3519  000F8C  A4D8               	btfss	status,2,c
  3520  000F8E  D002               	goto	l356
  3521                           
  3522                           ;SlaveComm_PIC18.c: 206: {
  3523                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  3524  000F90  0E00               	movlw	0
  3525  000F92  6E3E               	movwf	receive_data@my_status,c
  3526  000F94                     l356:
  3527                           
  3528                           ;SlaveComm_PIC18.c: 208: }
  3529                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3530  000F94  0E19               	movlw	low receive_data@data
  3531  000F96  6E13               	movwf	SPI_receive_data@data,c
  3532  000F98  0E00               	movlw	high receive_data@data
  3533  000F9A  6E14               	movwf	SPI_receive_data@data+1,c
  3534  000F9C  EC78  F00C         	call	_SPI_receive_data	;wreg free
  3535  000FA0  06E8               	decf	wreg,f,c
  3536  000FA2  A4D8               	btfss	status,2,c
  3537  000FA4  D04F               	goto	l361
  3538                           
  3539                           ;SlaveComm_PIC18.c: 211: {
  3540                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3541  000FA6  0E21               	movlw	33
  3542  000FA8  1819               	xorwf	receive_data@data,w,c
  3543  000FAA  A4D8               	btfss	status,2,c
  3544  000FAC  D015               	goto	l358
  3545  000FAE  043E               	decf	receive_data@my_status,w,c
  3546  000FB0  B4D8               	btfsc	status,2,c
  3547  000FB2  D012               	goto	l358
  3548                           
  3549                           ;SlaveComm_PIC18.c: 213: {
  3550                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3551  000FB4  0E01               	movlw	1
  3552  000FB6  6E3E               	movwf	receive_data@my_status,c
  3553                           
  3554                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3555  000FB8  EE20 F029          	lfsr	2,41
  3556  000FBC  5016               	movf	receive_data@receive_buffer,w,c
  3557  000FBE  26D9               	addwf	fsr2l,f,c
  3558  000FC0  5017               	movf	receive_data@receive_buffer+1,w,c
  3559  000FC2  22DA               	addwfc	fsr2h,f,c
  3560  000FC4  0E00               	movlw	0
  3561  000FC6  6EDF               	movwf	indf2,c
  3562                           
  3563                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3564  000FC8  EE20 F028          	lfsr	2,40
  3565  000FCC  5016               	movf	receive_data@receive_buffer,w,c
  3566  000FCE  26D9               	addwf	fsr2l,f,c
  3567  000FD0  5017               	movf	receive_data@receive_buffer+1,w,c
  3568  000FD2  22DA               	addwfc	fsr2h,f,c
  3569  000FD4  0E00               	movlw	0
  3570  000FD6  6EDF               	movwf	indf2,c
  3571  000FD8                     l358:
  3572                           
  3573                           ;SlaveComm_PIC18.c: 217: }
  3574                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3575  000FD8  043E               	decf	receive_data@my_status,w,c
  3576  000FDA  A4D8               	btfss	status,2,c
  3577  000FDC  D02A               	goto	l360
  3578                           
  3579                           ;SlaveComm_PIC18.c: 220: {
  3580                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3581  000FDE  EE20 F028          	lfsr	2,40
  3582  000FE2  5016               	movf	receive_data@receive_buffer,w,c
  3583  000FE4  26D9               	addwf	fsr2l,f,c
  3584  000FE6  5017               	movf	receive_data@receive_buffer+1,w,c
  3585  000FE8  22DA               	addwfc	fsr2h,f,c
  3586  000FEA  50DF               	movf	indf2,w,c
  3587  000FEC  6E18               	movwf	??_receive_data& (0+255),c
  3588  000FEE  5018               	movf	??_receive_data,w,c
  3589  000FF0  0D01               	mullw	1
  3590  000FF2  50F3               	movf	prodl,w,c
  3591  000FF4  2416               	addwf	receive_data@receive_buffer,w,c
  3592  000FF6  6ED9               	movwf	fsr2l,c
  3593  000FF8  50F4               	movf	prodh,w,c
  3594  000FFA  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3595  000FFC  6EDA               	movwf	fsr2h,c
  3596  000FFE  C019  FFDF         	movff	receive_data@data,indf2
  3597                           
  3598                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3599  001002  EE20 F028          	lfsr	2,40
  3600  001006  5016               	movf	receive_data@receive_buffer,w,c
  3601  001008  26D9               	addwf	fsr2l,f,c
  3602  00100A  5017               	movf	receive_data@receive_buffer+1,w,c
  3603  00100C  22DA               	addwfc	fsr2h,f,c
  3604  00100E  2ADF               	incf	indf2,f,c
  3605                           
  3606                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3607  001010  EE20 F028          	lfsr	2,40
  3608  001014  5016               	movf	receive_data@receive_buffer,w,c
  3609  001016  26D9               	addwf	fsr2l,f,c
  3610  001018  5017               	movf	receive_data@receive_buffer+1,w,c
  3611  00101A  22DA               	addwfc	fsr2h,f,c
  3612  00101C  0E27               	movlw	39
  3613  00101E  64DF               	cpfsgt	indf2,c
  3614  001020  D008               	goto	l360
  3615                           
  3616                           ;SlaveComm_PIC18.c: 225: {
  3617                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3618  001022  EE20 F028          	lfsr	2,40
  3619  001026  5016               	movf	receive_data@receive_buffer,w,c
  3620  001028  26D9               	addwf	fsr2l,f,c
  3621  00102A  5017               	movf	receive_data@receive_buffer+1,w,c
  3622  00102C  22DA               	addwfc	fsr2h,f,c
  3623  00102E  0E27               	movlw	39
  3624  001030  6EDF               	movwf	indf2,c
  3625  001032                     l360:
  3626                           
  3627                           ;SlaveComm_PIC18.c: 227: }
  3628                           ;SlaveComm_PIC18.c: 228: }
  3629                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3630  001032  043E               	decf	receive_data@my_status,w,c
  3631  001034  A4D8               	btfss	status,2,c
  3632  001036  D006               	goto	l361
  3633  001038  0E2A               	movlw	42
  3634  00103A  1819               	xorwf	receive_data@data,w,c
  3635  00103C  A4D8               	btfss	status,2,c
  3636  00103E  D002               	goto	l361
  3637                           
  3638                           ;SlaveComm_PIC18.c: 231: {
  3639                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3640  001040  0E02               	movlw	2
  3641  001042  6E3E               	movwf	receive_data@my_status,c
  3642  001044                     l361:
  3643                           
  3644                           ;SlaveComm_PIC18.c: 233: }
  3645                           ;SlaveComm_PIC18.c: 234: }
  3646                           ;SlaveComm_PIC18.c: 236: return my_status;
  3647  001044  503E               	movf	receive_data@my_status,w,c
  3648  001046  0012               	return	
  3649  001048                     __end_of_receive_data:
  3650                           	opt stack 0
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           intcon2	equ	0xFF1
  3659                           intcon3	equ	0xFF0
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           postinc1	equ	0xFE6
  3663                           postdec1	equ	0xFE5
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _SPI_receive_data *****************
  3674 ;; Defined at:
  3675 ;;		line 562 in file "SlaveComm_PIC18.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  data            2   18[COMRAM] PTR unsigned char 
  3678 ;;		 -> receive_data@data(1), 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  recvGood        1   20[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      unsigned char 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr2l, fsr2h, status,2
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3690 ;;      Params:         2       0       0       0       0       0       0
  3691 ;;      Locals:         1       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0
  3693 ;;      Totals:         3       0       0       0       0       0       0
  3694 ;;Total ram usage:        3 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_receive_data
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text21
  3705  0018F0                     __ptext21:
  3706                           	opt stack 0
  3707  0018F0                     _SPI_receive_data:
  3708                           	opt stack 27
  3709                           
  3710                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3711                           
  3712                           ;incstack = 0
  3713  0018F0  0E00               	movlw	0
  3714  0018F2  6E15               	movwf	SPI_receive_data@recvGood,c
  3715                           
  3716                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3717  0018F4  A06D               	btfss	3949,0,c	;volatile
  3718  0018F6  D00C               	goto	l463
  3719                           
  3720                           ;SlaveComm_PIC18.c: 568: {
  3721                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3722  0018F8  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3723  0018FC  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3724  001900  CF6F FFDF          	movff	3951,indf2	;volatile
  3725                           
  3726                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3727  001904  0E01               	movlw	1
  3728  001906  6E15               	movwf	SPI_receive_data@recvGood,c
  3729                           
  3730                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3731  001908  9E6C               	bcf	3948,7,c	;volatile
  3732                           
  3733                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3734  00190A  0E00               	movlw	0
  3735  00190C  6E42               	movwf	_SPI_transmit_wait,c
  3736                           
  3737                           ;SlaveComm_PIC18.c: 573: }
  3738  00190E  D002               	goto	l464
  3739  001910                     l463:
  3740                           
  3741                           ;SlaveComm_PIC18.c: 574: else
  3742                           ;SlaveComm_PIC18.c: 575: {
  3743                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3744  001910  0E00               	movlw	0
  3745  001912  6E15               	movwf	SPI_receive_data@recvGood,c
  3746  001914                     l464:
  3747                           
  3748                           ;SlaveComm_PIC18.c: 577: }
  3749                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3750  001914  5015               	movf	SPI_receive_data@recvGood,w,c
  3751  001916  0012               	return	
  3752  001918                     __end_of_SPI_receive_data:
  3753                           	opt stack 0
  3754                           tblptru	equ	0xFF8
  3755                           tblptrh	equ	0xFF7
  3756                           tblptrl	equ	0xFF6
  3757                           tablat	equ	0xFF5
  3758                           prodh	equ	0xFF4
  3759                           prodl	equ	0xFF3
  3760                           intcon	equ	0xFF2
  3761                           intcon2	equ	0xFF1
  3762                           intcon3	equ	0xFF0
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postinc1	equ	0xFE6
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           indf2	equ	0xFDF
  3770                           postinc2	equ	0xFDE
  3771                           postdec2	equ	0xFDD
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function _process_data *****************
  3777 ;; Defined at:
  3778 ;;		line 239 in file "SlaveComm_PIC18.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  receive_buff    2   51[COMRAM] PTR struct buffer
  3781 ;;		 -> communications@receive_buffer(42), 
  3782 ;;  send_buffer     2   53[COMRAM] PTR struct buffer
  3783 ;;		 -> communications@send_buffer(42), 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  3786 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      unsigned char 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3796 ;;      Params:         4       0       0       0       0       0       0
  3797 ;;      Locals:         0       0      51       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0
  3799 ;;      Totals:         4       0      51       0       0       0       0
  3800 ;;Total ram usage:       55 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    6
  3803 ;; This function calls:
  3804 ;;		_process_data_parameterize
  3805 ;;		_process_data_parameters
  3806 ;; This function is called by:
  3807 ;;		_communications
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text22
  3812  00188E                     __ptext22:
  3813                           	opt stack 0
  3814  00188E                     _process_data:
  3815                           	opt stack 23
  3816                           
  3817                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3818                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3819                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3820                           
  3821                           ;incstack = 0
  3822  00188E  0E00               	movlw	low process_data@parameters
  3823  001890  6E19               	movwf	process_data_parameterize@parameters,c
  3824  001892  0E01               	movlw	high process_data@parameters
  3825  001894  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3826  001896  C034  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3827  00189A  C035  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3828  00189E  EC83  F004         	call	_process_data_parameterize	;wreg free
  3829                           
  3830                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3831  0018A2  0E00               	movlw	low process_data@parameters
  3832  0018A4  6E2F               	movwf	process_data_parameters@parameters,c
  3833  0018A6  0E01               	movlw	high process_data@parameters
  3834  0018A8  6E30               	movwf	process_data_parameters@parameters+1,c
  3835  0018AA  C036  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3836  0018AE  C037  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3837  0018B2  EC30  F003         	call	_process_data_parameters	;wreg free
  3838  0018B6  0101               	movlb	1	; () banked
  3839  0018B8  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3843  0018BA  0101               	movlb	1	; () banked
  3844  0018BC  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3845  0018BE  0012               	return	
  3846  0018C0                     __end_of_process_data:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           intcon2	equ	0xFF1
  3856                           intcon3	equ	0xFF0
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           postinc1	equ	0xFE6
  3860                           postdec1	equ	0xFE5
  3861                           fsr1h	equ	0xFE2
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           postinc2	equ	0xFDE
  3865                           postdec2	equ	0xFDD
  3866                           fsr2h	equ	0xFDA
  3867                           fsr2l	equ	0xFD9
  3868                           status	equ	0xFD8
  3869                           
  3870 ;; *************** function _process_data_parameters *****************
  3871 ;; Defined at:
  3872 ;;		line 315 in file "SlaveComm_PIC18.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  3875 ;;		 -> process_data@parameters(50), 
  3876 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  3877 ;;		 -> communications@send_buffer(42), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      unsigned char 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3889 ;;      Params:         4       0       0       0       0       0       0
  3890 ;;      Locals:         1       0       0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0
  3892 ;;      Totals:         5       0       0       0       0       0       0
  3893 ;;Total ram usage:        5 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    5
  3896 ;; This function calls:
  3897 ;;		_atol
  3898 ;;		_com_command_setEnergyUsed
  3899 ;;		_command_builder3
  3900 ;;		_send_end_of_transmission
  3901 ;;		_strmatch
  3902 ;; This function is called by:
  3903 ;;		_process_data
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text23
  3908  000660                     __ptext23:
  3909                           	opt stack 0
  3910  000660                     _process_data_parameters:
  3911                           	opt stack 23
  3912                           
  3913                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;incstack = 0
  3917  000660  0E00               	movlw	0
  3918  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3919                           
  3920                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3921  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3922  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3923  00066C  0E4F               	movlw	low STR_1
  3924  00066E  6E20               	movwf	strmatch@b,c
  3925  000670  0E06               	movlw	high STR_1
  3926  000672  6E21               	movwf	strmatch@b+1,c
  3927  000674  EC60  F00C         	call	_strmatch	;wreg free
  3928  000678  06E8               	decf	wreg,f,c
  3929  00067A  A4D8               	btfss	status,2,c
  3930  00067C  D003               	goto	l385
  3931                           
  3932                           ;SlaveComm_PIC18.c: 321: {
  3933                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3934  00067E  0E01               	movlw	1
  3935  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3936                           
  3937                           ;SlaveComm_PIC18.c: 332: }
  3938  000682  D13F               	goto	l411
  3939  000684                     l385:
  3940                           
  3941                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3942  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3943  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3944  00068C  0E57               	movlw	low STR_2
  3945  00068E  6E20               	movwf	strmatch@b,c
  3946  000690  0E06               	movlw	high STR_2
  3947  000692  6E21               	movwf	strmatch@b+1,c
  3948  000694  EC60  F00C         	call	_strmatch	;wreg free
  3949  000698  06E8               	decf	wreg,f,c
  3950  00069A  A4D8               	btfss	status,2,c
  3951  00069C  D035               	goto	l387
  3952                           
  3953                           ;SlaveComm_PIC18.c: 334: {
  3954                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3955  00069E  0E0A               	movlw	10
  3956  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3957  0006A2  6E1E               	movwf	strmatch@a,c
  3958  0006A4  0E00               	movlw	0
  3959  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3960  0006A8  6E1F               	movwf	strmatch@a+1,c
  3961  0006AA  0E01               	movlw	low STR_3
  3962  0006AC  6E20               	movwf	strmatch@b,c
  3963  0006AE  0E06               	movlw	high STR_3
  3964  0006B0  6E21               	movwf	strmatch@b+1,c
  3965  0006B2  EC60  F00C         	call	_strmatch	;wreg free
  3966  0006B6  06E8               	decf	wreg,f,c
  3967  0006B8  B4D8               	btfsc	status,2,c
  3968  0006BA  D123               	goto	l411
  3969                           
  3970                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3971                           
  3972                           ;SlaveComm_PIC18.c: 336: {
  3973                           ;SlaveComm_PIC18.c: 338: }
  3974  0006BC  0E0A               	movlw	10
  3975  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3976  0006C0  6E1E               	movwf	strmatch@a,c
  3977  0006C2  0E00               	movlw	0
  3978  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3979  0006C6  6E1F               	movwf	strmatch@a+1,c
  3980  0006C8  0E17               	movlw	low STR_4
  3981  0006CA  6E20               	movwf	strmatch@b,c
  3982  0006CC  0E06               	movlw	high STR_4
  3983  0006CE  6E21               	movwf	strmatch@b+1,c
  3984  0006D0  EC60  F00C         	call	_strmatch	;wreg free
  3985  0006D4  06E8               	decf	wreg,f,c
  3986  0006D6  A4D8               	btfss	status,2,c
  3987  0006D8  D114               	goto	l411
  3988                           
  3989                           ;SlaveComm_PIC18.c: 340: {
  3990                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3991  0006DA  0E14               	movlw	20
  3992  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3993  0006DE  6E1F               	movwf	atol@s,c
  3994  0006E0  0E00               	movlw	0
  3995  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3996  0006E4  6E20               	movwf	atol@s+1,c
  3997  0006E6  ECDA  F006         	call	_atol	;wreg free
  3998  0006EA  C01F  F088         	movff	?_atol,_meterEnergyUsed
  3999  0006EE  C020  F089         	movff	?_atol+1,_meterEnergyUsed+1
  4000  0006F2  C021  F08A         	movff	?_atol+2,_meterEnergyUsed+2
  4001  0006F6  C022  F08B         	movff	?_atol+3,_meterEnergyUsed+3
  4002                           
  4003                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  4004  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  4005  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  4006  000702  ECF0  F00B         	call	_com_command_setEnergyUsed	;wreg free
  4007                           
  4008                           ;SlaveComm_PIC18.c: 347: }
  4009                           ;SlaveComm_PIC18.c: 352: }
  4010  000706  D0FD               	goto	l411
  4011  000708                     l387:
  4012                           
  4013                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  4014  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4015  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4016  000710  0E34               	movlw	low STR_5
  4017  000712  6E20               	movwf	strmatch@b,c
  4018  000714  0E06               	movlw	high STR_5
  4019  000716  6E21               	movwf	strmatch@b+1,c
  4020  000718  EC60  F00C         	call	_strmatch	;wreg free
  4021  00071C  06E8               	decf	wreg,f,c
  4022  00071E  B4D8               	btfsc	status,2,c
  4023  000720  D0F0               	goto	l411
  4024                           
  4025                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  4026                           
  4027                           ;SlaveComm_PIC18.c: 354: {
  4028                           ;SlaveComm_PIC18.c: 356: }
  4029  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4030  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4031  00072A  0E2F               	movlw	low STR_6
  4032  00072C  6E20               	movwf	strmatch@b,c
  4033  00072E  0E06               	movlw	high STR_6
  4034  000730  6E21               	movwf	strmatch@b+1,c
  4035  000732  EC60  F00C         	call	_strmatch	;wreg free
  4036  000736  06E8               	decf	wreg,f,c
  4037  000738  A4D8               	btfss	status,2,c
  4038  00073A  D053               	goto	l394
  4039                           
  4040                           ;SlaveComm_PIC18.c: 358: {
  4041                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  4042  00073C  0E0A               	movlw	10
  4043  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  4044  000740  6E1E               	movwf	strmatch@a,c
  4045  000742  0E00               	movlw	0
  4046  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4047  000746  6E1F               	movwf	strmatch@a+1,c
  4048  000748  0E2A               	movlw	low STR_7
  4049  00074A  6E20               	movwf	strmatch@b,c
  4050  00074C  0E06               	movlw	high STR_7
  4051  00074E  6E21               	movwf	strmatch@b+1,c
  4052  000750  EC60  F00C         	call	_strmatch	;wreg free
  4053  000754  06E8               	decf	wreg,f,c
  4054  000756  A4D8               	btfss	status,2,c
  4055  000758  D0D4               	goto	l411
  4056                           
  4057                           ;SlaveComm_PIC18.c: 360: {
  4058                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  4059  00075A  0E14               	movlw	20
  4060  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  4061  00075E  6E1E               	movwf	strmatch@a,c
  4062  000760  0E00               	movlw	0
  4063  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4064  000764  6E1F               	movwf	strmatch@a+1,c
  4065  000766  0E5B               	movlw	low STR_8
  4066  000768  6E20               	movwf	strmatch@b,c
  4067  00076A  0E06               	movlw	high STR_8
  4068  00076C  6E21               	movwf	strmatch@b+1,c
  4069  00076E  EC60  F00C         	call	_strmatch	;wreg free
  4070  000772  06E8               	decf	wreg,f,c
  4071  000774  A4D8               	btfss	status,2,c
  4072  000776  D013               	goto	l396
  4073                           
  4074                           ;SlaveComm_PIC18.c: 362: {
  4075                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  4076  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4077  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4078  000780  0E57               	movlw	low STR_2
  4079  000782  6E21               	movwf	command_builder3@data1,c
  4080  000784  0E06               	movlw	high STR_2
  4081  000786  6E22               	movwf	command_builder3@data1+1,c
  4082  000788  0E2A               	movlw	low STR_7
  4083  00078A  6E23               	movwf	command_builder3@data2,c
  4084  00078C  0E06               	movlw	high STR_7
  4085  00078E  6E24               	movwf	command_builder3@data2+1,c
  4086  000790  0E53               	movlw	low STR_11
  4087  000792  6E25               	movwf	command_builder3@data3,c
  4088  000794  0E06               	movlw	high STR_11
  4089  000796  6E26               	movwf	command_builder3@data3+1,c
  4090  000798  EC74  F008         	call	_command_builder3	;wreg free
  4091                           
  4092                           ;SlaveComm_PIC18.c: 364: }
  4093  00079C  D0B2               	goto	l411
  4094  00079E                     l396:
  4095                           
  4096                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  4097  00079E  0E14               	movlw	20
  4098  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  4099  0007A2  6E1E               	movwf	strmatch@a,c
  4100  0007A4  0E00               	movlw	0
  4101  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4102  0007A8  6E1F               	movwf	strmatch@a+1,c
  4103  0007AA  0E53               	movlw	low STR_11
  4104  0007AC  6E20               	movwf	strmatch@b,c
  4105  0007AE  0E06               	movlw	high STR_11
  4106  0007B0  6E21               	movwf	strmatch@b+1,c
  4107  0007B2  EC60  F00C         	call	_strmatch	;wreg free
  4108  0007B6  06E8               	decf	wreg,f,c
  4109  0007B8  A4D8               	btfss	status,2,c
  4110  0007BA  D0A3               	goto	l411
  4111                           
  4112                           ;SlaveComm_PIC18.c: 366: {
  4113                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  4114  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4115  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4116  0007C4  0E57               	movlw	low STR_2
  4117  0007C6  6E21               	movwf	command_builder3@data1,c
  4118  0007C8  0E06               	movlw	high STR_2
  4119  0007CA  6E22               	movwf	command_builder3@data1+1,c
  4120  0007CC  0E2A               	movlw	low STR_7
  4121  0007CE  6E23               	movwf	command_builder3@data2,c
  4122  0007D0  0E06               	movlw	high STR_7
  4123  0007D2  6E24               	movwf	command_builder3@data2+1,c
  4124  0007D4  0E5B               	movlw	low STR_8
  4125  0007D6  6E25               	movwf	command_builder3@data3,c
  4126  0007D8  0E06               	movlw	high STR_8
  4127  0007DA  6E26               	movwf	command_builder3@data3+1,c
  4128  0007DC  EC74  F008         	call	_command_builder3	;wreg free
  4129                           
  4130                           ;SlaveComm_PIC18.c: 368: }
  4131                           ;SlaveComm_PIC18.c: 369: }
  4132                           ;SlaveComm_PIC18.c: 370: }
  4133  0007E0  D090               	goto	l411
  4134  0007E2                     l394:
  4135                           
  4136                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  4137  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4138  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4139  0007EA  0E39               	movlw	low STR_16
  4140  0007EC  6E20               	movwf	strmatch@b,c
  4141  0007EE  0E06               	movlw	high STR_16
  4142  0007F0  6E21               	movwf	strmatch@b+1,c
  4143  0007F2  EC60  F00C         	call	_strmatch	;wreg free
  4144  0007F6  06E8               	decf	wreg,f,c
  4145  0007F8  A4D8               	btfss	status,2,c
  4146  0007FA  D083               	goto	l411
  4147                           
  4148                           ;SlaveComm_PIC18.c: 372: {
  4149                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  4150  0007FC  0E0A               	movlw	10
  4151  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  4152  000800  6E1E               	movwf	strmatch@a,c
  4153  000802  0E00               	movlw	0
  4154  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4155  000806  6E1F               	movwf	strmatch@a+1,c
  4156  000808  0E2A               	movlw	low STR_7
  4157  00080A  6E20               	movwf	strmatch@b,c
  4158  00080C  0E06               	movlw	high STR_7
  4159  00080E  6E21               	movwf	strmatch@b+1,c
  4160  000810  EC60  F00C         	call	_strmatch	;wreg free
  4161  000814  06E8               	decf	wreg,f,c
  4162  000816  A4D8               	btfss	status,2,c
  4163  000818  D007               	goto	l401
  4164                           
  4165                           ;SlaveComm_PIC18.c: 374: {
  4166                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  4167  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4168  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4169  000822  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4170                           
  4171                           ;SlaveComm_PIC18.c: 376: }
  4172  000826  D06D               	goto	l411
  4173  000828                     l401:
  4174                           
  4175                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  4176  000828  0E0A               	movlw	10
  4177  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  4178  00082C  6E1E               	movwf	strmatch@a,c
  4179  00082E  0E00               	movlw	0
  4180  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4181  000832  6E1F               	movwf	strmatch@a+1,c
  4182  000834  0E24               	movlw	low STR_18
  4183  000836  6E20               	movwf	strmatch@b,c
  4184  000838  0E06               	movlw	high STR_18
  4185  00083A  6E21               	movwf	strmatch@b+1,c
  4186  00083C  EC60  F00C         	call	_strmatch	;wreg free
  4187  000840  06E8               	decf	wreg,f,c
  4188  000842  A4D8               	btfss	status,2,c
  4189  000844  D007               	goto	l403
  4190                           
  4191                           ;SlaveComm_PIC18.c: 378: {
  4192                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  4193  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4194  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4195  00084E  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4196                           
  4197                           ;SlaveComm_PIC18.c: 380: }
  4198  000852  D057               	goto	l411
  4199  000854                     l403:
  4200                           
  4201                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  4202  000854  0E0A               	movlw	10
  4203  000856  242F               	addwf	process_data_parameters@parameters,w,c
  4204  000858  6E1E               	movwf	strmatch@a,c
  4205  00085A  0E00               	movlw	0
  4206  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4207  00085E  6E1F               	movwf	strmatch@a+1,c
  4208  000860  0E17               	movlw	low STR_4
  4209  000862  6E20               	movwf	strmatch@b,c
  4210  000864  0E06               	movlw	high STR_4
  4211  000866  6E21               	movwf	strmatch@b+1,c
  4212  000868  EC60  F00C         	call	_strmatch	;wreg free
  4213  00086C  06E8               	decf	wreg,f,c
  4214  00086E  A4D8               	btfss	status,2,c
  4215  000870  D007               	goto	l405
  4216                           
  4217                           ;SlaveComm_PIC18.c: 382: {
  4218                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  4219  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4220  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4221  00087A  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4222                           
  4223                           ;SlaveComm_PIC18.c: 384: }
  4224  00087E  D041               	goto	l411
  4225  000880                     l405:
  4226                           
  4227                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  4228  000880  0E0A               	movlw	10
  4229  000882  242F               	addwf	process_data_parameters@parameters,w,c
  4230  000884  6E1E               	movwf	strmatch@a,c
  4231  000886  0E00               	movlw	0
  4232  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4233  00088A  6E1F               	movwf	strmatch@a+1,c
  4234  00088C  0E1E               	movlw	low STR_20
  4235  00088E  6E20               	movwf	strmatch@b,c
  4236  000890  0E06               	movlw	high STR_20
  4237  000892  6E21               	movwf	strmatch@b+1,c
  4238  000894  EC60  F00C         	call	_strmatch	;wreg free
  4239  000898  06E8               	decf	wreg,f,c
  4240  00089A  A4D8               	btfss	status,2,c
  4241  00089C  D007               	goto	l407
  4242                           
  4243                           ;SlaveComm_PIC18.c: 386: {
  4244                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  4245  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4246  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4247  0008A6  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4248                           
  4249                           ;SlaveComm_PIC18.c: 388: }
  4250  0008AA  D02B               	goto	l411
  4251  0008AC                     l407:
  4252                           
  4253                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  4254  0008AC  0E0A               	movlw	10
  4255  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  4256  0008B0  6E1E               	movwf	strmatch@a,c
  4257  0008B2  0E00               	movlw	0
  4258  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4259  0008B6  6E1F               	movwf	strmatch@a+1,c
  4260  0008B8  0E3E               	movlw	low STR_21
  4261  0008BA  6E20               	movwf	strmatch@b,c
  4262  0008BC  0E06               	movlw	high STR_21
  4263  0008BE  6E21               	movwf	strmatch@b+1,c
  4264  0008C0  EC60  F00C         	call	_strmatch	;wreg free
  4265  0008C4  06E8               	decf	wreg,f,c
  4266  0008C6  A4D8               	btfss	status,2,c
  4267  0008C8  D007               	goto	l409
  4268                           
  4269                           ;SlaveComm_PIC18.c: 390: {
  4270                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  4271  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4272  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4273  0008D2  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4274                           
  4275                           ;SlaveComm_PIC18.c: 392: }
  4276  0008D6  D015               	goto	l411
  4277  0008D8                     l409:
  4278                           
  4279                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  4280  0008D8  0E0A               	movlw	10
  4281  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  4282  0008DC  6E1E               	movwf	strmatch@a,c
  4283  0008DE  0E00               	movlw	0
  4284  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4285  0008E2  6E1F               	movwf	strmatch@a+1,c
  4286  0008E4  0E0D               	movlw	low STR_22
  4287  0008E6  6E20               	movwf	strmatch@b,c
  4288  0008E8  0E06               	movlw	high STR_22
  4289  0008EA  6E21               	movwf	strmatch@b+1,c
  4290  0008EC  EC60  F00C         	call	_strmatch	;wreg free
  4291  0008F0  06E8               	decf	wreg,f,c
  4292  0008F2  A4D8               	btfss	status,2,c
  4293  0008F4  D006               	goto	l411
  4294                           
  4295                           ;SlaveComm_PIC18.c: 394: {
  4296                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  4297  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4298  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4299  0008FE  EC06  F00D         	call	_send_end_of_transmission	;wreg free
  4300  000902                     l411:
  4301                           
  4302                           ;SlaveComm_PIC18.c: 396: }
  4303                           ;SlaveComm_PIC18.c: 397: }
  4304                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  4305  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  4306  000904  0012               	return	
  4307  000906                     __end_of_process_data_parameters:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon	equ	0xFF2
  4316                           intcon2	equ	0xFF1
  4317                           intcon3	equ	0xFF0
  4318                           postinc0	equ	0xFEE
  4319                           wreg	equ	0xFE8
  4320                           postinc1	equ	0xFE6
  4321                           postdec1	equ	0xFE5
  4322                           fsr1h	equ	0xFE2
  4323                           fsr1l	equ	0xFE1
  4324                           indf2	equ	0xFDF
  4325                           postinc2	equ	0xFDE
  4326                           postdec2	equ	0xFDD
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function _strmatch *****************
  4332 ;; Defined at:
  4333 ;;		line 513 in file "SlaveComm_PIC18.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  a               2   29[COMRAM] PTR unsigned char 
  4336 ;;		 -> process_data@parameters(50), 
  4337 ;;  b               2   31[COMRAM] PTR unsigned char 
  4338 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4339 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4340 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4341 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  result          2   33[COMRAM] int 
  4344 ;;  match           1   35[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      unsigned char 
  4347 ;; Registers used:
  4348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4354 ;;      Params:         4       0       0       0       0       0       0
  4355 ;;      Locals:         3       0       0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0
  4357 ;;      Totals:         7       0       0       0       0       0       0
  4358 ;;Total ram usage:        7 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    2
  4361 ;; This function calls:
  4362 ;;		_strcmp2
  4363 ;; This function is called by:
  4364 ;;		_process_data_parameters
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text24
  4369  0018C0                     __ptext24:
  4370                           	opt stack 0
  4371  0018C0                     _strmatch:
  4372                           	opt stack 25
  4373                           
  4374                           ;SlaveComm_PIC18.c: 515: int result;
  4375                           ;SlaveComm_PIC18.c: 516: bool match;
  4376                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  4377                           
  4378                           ;incstack = 0
  4379  0018C0  C01E  F013         	movff	strmatch@a,strcmp2@a
  4380  0018C4  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4381  0018C8  C020  F015         	movff	strmatch@b,strcmp2@b
  4382  0018CC  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4383  0018D0  EC43  F005         	call	_strcmp2	;wreg free
  4384  0018D4  C013  F022         	movff	?_strcmp2,strmatch@result
  4385  0018D8  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4386                           
  4387                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  4388  0018DC  5022               	movf	strmatch@result,w,c
  4389  0018DE  1023               	iorwf	strmatch@result+1,w,c
  4390  0018E0  A4D8               	btfss	status,2,c
  4391  0018E2  D002               	goto	u2390
  4392  0018E4  0E01               	movlw	1
  4393  0018E6  D001               	goto	u2400
  4394  0018E8                     u2390:
  4395  0018E8  0E00               	movlw	0
  4396  0018EA                     u2400:
  4397  0018EA  6E24               	movwf	strmatch@match,c
  4398                           
  4399                           ;SlaveComm_PIC18.c: 522: return match;
  4400  0018EC  5024               	movf	strmatch@match,w,c
  4401  0018EE  0012               	return	
  4402  0018F0                     __end_of_strmatch:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           intcon	equ	0xFF2
  4411                           intcon2	equ	0xFF1
  4412                           intcon3	equ	0xFF0
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           postinc1	equ	0xFE6
  4416                           postdec1	equ	0xFE5
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           postinc2	equ	0xFDE
  4421                           postdec2	equ	0xFDD
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _strcmp2 *****************
  4427 ;; Defined at:
  4428 ;;		line 525 in file "SlaveComm_PIC18.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  a               2   18[COMRAM] PTR unsigned char 
  4431 ;;		 -> process_data@parameters(50), 
  4432 ;;  b               2   20[COMRAM] PTR unsigned char 
  4433 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4434 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4435 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4436 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  inx             2   27[COMRAM] int 
  4439 ;;  match           2   25[COMRAM] int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2   18[COMRAM] int 
  4442 ;; Registers used:
  4443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4449 ;;      Params:         4       0       0       0       0       0       0
  4450 ;;      Locals:         4       0       0       0       0       0       0
  4451 ;;      Temps:          3       0       0       0       0       0       0
  4452 ;;      Totals:        11       0       0       0       0       0       0
  4453 ;;Total ram usage:       11 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_strmatch
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text25
  4464  000A86                     __ptext25:
  4465                           	opt stack 0
  4466  000A86                     _strcmp2:
  4467                           	opt stack 25
  4468                           
  4469                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  4470                           
  4471                           ;incstack = 0
  4472  000A86  0E00               	movlw	0
  4473  000A88  6E1D               	movwf	strcmp2@inx+1,c
  4474  000A8A  0E00               	movlw	0
  4475  000A8C  6E1C               	movwf	strcmp2@inx,c
  4476                           
  4477                           ;SlaveComm_PIC18.c: 528: int match = 0;
  4478  000A8E  0E00               	movlw	0
  4479  000A90  6E1B               	movwf	strcmp2@match+1,c
  4480  000A92  0E00               	movlw	0
  4481  000A94  6E1A               	movwf	strcmp2@match,c
  4482                           
  4483                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4484  000A96  D035               	goto	l447
  4485  000A98                     
  4486                           ;SlaveComm_PIC18.c: 531: {
  4487                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  4488  000A98  501C               	movf	strcmp2@inx,w,c
  4489  000A9A  2413               	addwf	strcmp2@a,w,c
  4490  000A9C  6ED9               	movwf	fsr2l,c
  4491  000A9E  501D               	movf	strcmp2@inx+1,w,c
  4492  000AA0  2014               	addwfc	strcmp2@a+1,w,c
  4493  000AA2  6EDA               	movwf	fsr2h,c
  4494  000AA4  501C               	movf	strcmp2@inx,w,c
  4495  000AA6  2415               	addwf	strcmp2@b,w,c
  4496  000AA8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4497  000AAA  501D               	movf	strcmp2@inx+1,w,c
  4498  000AAC  2016               	addwfc	strcmp2@b+1,w,c
  4499  000AAE  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4500  000AB0  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4501  000AB4  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4502  000AB8                     	if	0	;tblptru may be non-zero
  4503  000AB8                     	endif
  4504  000AB8                     	if	0	;tblptru may be non-zero
  4505  000AB8                     	endif
  4506  000AB8  50DE               	movf	postinc2,w,c
  4507  000ABA  0009               	tblrd		*+
  4508  000ABC  5CF5               	subwf	tablat,w,c
  4509  000ABE  B0D8               	btfsc	status,0,c
  4510  000AC0  D005               	goto	l449
  4511                           
  4512                           ;SlaveComm_PIC18.c: 533: {
  4513                           ;SlaveComm_PIC18.c: 534: match = 1;
  4514  000AC2  0E00               	movlw	0
  4515  000AC4  6E1B               	movwf	strcmp2@match+1,c
  4516  000AC6  0E01               	movlw	1
  4517  000AC8  6E1A               	movwf	strcmp2@match,c
  4518                           
  4519                           ;SlaveComm_PIC18.c: 535: }
  4520  000ACA  D019               	goto	l451
  4521  000ACC                     l449:
  4522                           
  4523                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  4524  000ACC  501C               	movf	strcmp2@inx,w,c
  4525  000ACE  2413               	addwf	strcmp2@a,w,c
  4526  000AD0  6ED9               	movwf	fsr2l,c
  4527  000AD2  501D               	movf	strcmp2@inx+1,w,c
  4528  000AD4  2014               	addwfc	strcmp2@a+1,w,c
  4529  000AD6  6EDA               	movwf	fsr2h,c
  4530  000AD8  50DF               	movf	indf2,w,c
  4531  000ADA  6E17               	movwf	??_strcmp2& (0+255),c
  4532  000ADC  501C               	movf	strcmp2@inx,w,c
  4533  000ADE  2415               	addwf	strcmp2@b,w,c
  4534  000AE0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4535  000AE2  501D               	movf	strcmp2@inx+1,w,c
  4536  000AE4  2016               	addwfc	strcmp2@b+1,w,c
  4537  000AE6  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4538  000AE8  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4539  000AEC  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4540  000AF0                     	if	0	;tblptru may be non-zero
  4541  000AF0                     	endif
  4542  000AF0                     	if	0	;tblptru may be non-zero
  4543  000AF0                     	endif
  4544  000AF0  0008               	tblrd		*
  4545  000AF2  50F5               	movf	tablat,w,c
  4546  000AF4  5C17               	subwf	??_strcmp2,w,c
  4547  000AF6  B0D8               	btfsc	status,0,c
  4548  000AF8  D002               	goto	l451
  4549                           
  4550                           ;SlaveComm_PIC18.c: 537: {
  4551                           ;SlaveComm_PIC18.c: 538: match = -1;
  4552  000AFA  681A               	setf	strcmp2@match,c
  4553  000AFC  681B               	setf	strcmp2@match+1,c
  4554  000AFE                     l451:
  4555                           
  4556                           ;SlaveComm_PIC18.c: 543: }
  4557                           ;SlaveComm_PIC18.c: 545: inx++;
  4558                           
  4559                           ;SlaveComm_PIC18.c: 541: {
  4560  000AFE  4A1C               	infsnz	strcmp2@inx,f,c
  4561  000B00  2A1D               	incf	strcmp2@inx+1,f,c
  4562  000B02                     l447:
  4563  000B02  501C               	movf	strcmp2@inx,w,c
  4564  000B04  2413               	addwf	strcmp2@a,w,c
  4565  000B06  6ED9               	movwf	fsr2l,c
  4566  000B08  501D               	movf	strcmp2@inx+1,w,c
  4567  000B0A  2014               	addwfc	strcmp2@a+1,w,c
  4568  000B0C  6EDA               	movwf	fsr2h,c
  4569  000B0E  50DF               	movf	indf2,w,c
  4570  000B10  B4D8               	btfsc	status,2,c
  4571  000B12  D013               	goto	u2270
  4572  000B14  501C               	movf	strcmp2@inx,w,c
  4573  000B16  2415               	addwf	strcmp2@b,w,c
  4574  000B18  6E17               	movwf	??_strcmp2& (0+255),c
  4575  000B1A  501D               	movf	strcmp2@inx+1,w,c
  4576  000B1C  2016               	addwfc	strcmp2@b+1,w,c
  4577  000B1E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4578  000B20  C017  FFF6         	movff	??_strcmp2,tblptrl
  4579  000B24  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4580  000B28                     	if	0	;tblptru may be non-zero
  4581  000B28                     	endif
  4582  000B28                     	if	0	;tblptru may be non-zero
  4583  000B28                     	endif
  4584  000B28  0008               	tblrd		*
  4585  000B2A  50F5               	movf	tablat,w,c
  4586  000B2C  0900               	iorlw	0
  4587  000B2E  B4D8               	btfsc	status,2,c
  4588  000B30  D004               	goto	u2270
  4589  000B32  501A               	movf	strcmp2@match,w,c
  4590  000B34  101B               	iorwf	strcmp2@match+1,w,c
  4591  000B36  B4D8               	btfsc	status,2,c
  4592  000B38  D7AF               	goto	l448
  4593  000B3A                     u2270:
  4594                           
  4595                           ;SlaveComm_PIC18.c: 546: }
  4596                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4597  000B3A  501C               	movf	strcmp2@inx,w,c
  4598  000B3C  2413               	addwf	strcmp2@a,w,c
  4599  000B3E  6ED9               	movwf	fsr2l,c
  4600  000B40  501D               	movf	strcmp2@inx+1,w,c
  4601  000B42  2014               	addwfc	strcmp2@a+1,w,c
  4602  000B44  6EDA               	movwf	fsr2h,c
  4603  000B46  50DF               	movf	indf2,w,c
  4604  000B48  A4D8               	btfss	status,2,c
  4605  000B4A  D012               	goto	l457
  4606  000B4C  501C               	movf	strcmp2@inx,w,c
  4607  000B4E  2415               	addwf	strcmp2@b,w,c
  4608  000B50  6E17               	movwf	??_strcmp2& (0+255),c
  4609  000B52  501D               	movf	strcmp2@inx+1,w,c
  4610  000B54  2016               	addwfc	strcmp2@b+1,w,c
  4611  000B56  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4612  000B58  C017  FFF6         	movff	??_strcmp2,tblptrl
  4613  000B5C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4614  000B60                     	if	0	;tblptru may be non-zero
  4615  000B60                     	endif
  4616  000B60                     	if	0	;tblptru may be non-zero
  4617  000B60                     	endif
  4618  000B60  0008               	tblrd		*
  4619  000B62  50F5               	movf	tablat,w,c
  4620  000B64  0900               	iorlw	0
  4621  000B66  B4D8               	btfsc	status,2,c
  4622  000B68  D003               	goto	l457
  4623                           
  4624                           ;SlaveComm_PIC18.c: 550: {
  4625                           ;SlaveComm_PIC18.c: 551: match = -1;
  4626  000B6A  681A               	setf	strcmp2@match,c
  4627  000B6C  681B               	setf	strcmp2@match+1,c
  4628                           
  4629                           ;SlaveComm_PIC18.c: 552: }
  4630  000B6E  D01C               	goto	l459
  4631  000B70                     l457:
  4632                           
  4633                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4634  000B70  501C               	movf	strcmp2@inx,w,c
  4635  000B72  2413               	addwf	strcmp2@a,w,c
  4636  000B74  6ED9               	movwf	fsr2l,c
  4637  000B76  501D               	movf	strcmp2@inx+1,w,c
  4638  000B78  2014               	addwfc	strcmp2@a+1,w,c
  4639  000B7A  6EDA               	movwf	fsr2h,c
  4640  000B7C  50DF               	movf	indf2,w,c
  4641  000B7E  B4D8               	btfsc	status,2,c
  4642  000B80  D013               	goto	l459
  4643  000B82  501C               	movf	strcmp2@inx,w,c
  4644  000B84  2415               	addwf	strcmp2@b,w,c
  4645  000B86  6E17               	movwf	??_strcmp2& (0+255),c
  4646  000B88  501D               	movf	strcmp2@inx+1,w,c
  4647  000B8A  2016               	addwfc	strcmp2@b+1,w,c
  4648  000B8C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4649  000B8E  C017  FFF6         	movff	??_strcmp2,tblptrl
  4650  000B92  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4651  000B96                     	if	0	;tblptru may be non-zero
  4652  000B96                     	endif
  4653  000B96                     	if	0	;tblptru may be non-zero
  4654  000B96                     	endif
  4655  000B96  0008               	tblrd		*
  4656  000B98  50F5               	movf	tablat,w,c
  4657  000B9A  0900               	iorlw	0
  4658  000B9C  A4D8               	btfss	status,2,c
  4659  000B9E  D004               	goto	l459
  4660                           
  4661                           ;SlaveComm_PIC18.c: 554: {
  4662                           ;SlaveComm_PIC18.c: 555: match = 1;
  4663  000BA0  0E00               	movlw	0
  4664  000BA2  6E1B               	movwf	strcmp2@match+1,c
  4665  000BA4  0E01               	movlw	1
  4666  000BA6  6E1A               	movwf	strcmp2@match,c
  4667  000BA8                     l459:
  4668                           
  4669                           ;SlaveComm_PIC18.c: 556: }
  4670                           ;SlaveComm_PIC18.c: 558: return match;
  4671  000BA8  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4672  000BAC  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4673  000BB0  0012               	return	
  4674  000BB2                     __end_of_strcmp2:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           intcon2	equ	0xFF1
  4684                           intcon3	equ	0xFF0
  4685                           postinc0	equ	0xFEE
  4686                           wreg	equ	0xFE8
  4687                           postinc1	equ	0xFE6
  4688                           postdec1	equ	0xFE5
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8
  4697                           
  4698 ;; *************** function _send_end_of_transmission *****************
  4699 ;; Defined at:
  4700 ;;		line 604 in file "SlaveComm_PIC18.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4703 ;;		 -> communications@send_buffer(42), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4715 ;;      Params:         2       0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0
  4718 ;;      Totals:         2       0       0       0       0       0       0
  4719 ;;Total ram usage:        2 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    4
  4722 ;; This function calls:
  4723 ;;		_command_builder1
  4724 ;; This function is called by:
  4725 ;;		_process_data_parameters
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text26
  4730  001A0C                     __ptext26:
  4731                           	opt stack 0
  4732  001A0C                     _send_end_of_transmission:
  4733                           	opt stack 23
  4734                           
  4735                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4736                           
  4737                           ;incstack = 0
  4738  001A0C  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4739  001A10  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4740  001A14  0E4F               	movlw	low STR_1
  4741  001A16  6E21               	movwf	command_builder1@data1,c
  4742  001A18  0E06               	movlw	high STR_1
  4743  001A1A  6E22               	movwf	command_builder1@data1+1,c
  4744  001A1C  ECD3  F00A         	call	_command_builder1	;wreg free
  4745  001A20  0012               	return	
  4746  001A22                     __end_of_send_end_of_transmission:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           intcon3	equ	0xFF0
  4757                           postinc0	equ	0xFEE
  4758                           wreg	equ	0xFE8
  4759                           postinc1	equ	0xFE6
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           indf2	equ	0xFDF
  4764                           postinc2	equ	0xFDE
  4765                           postdec2	equ	0xFDD
  4766                           fsr2h	equ	0xFDA
  4767                           fsr2l	equ	0xFD9
  4768                           status	equ	0xFD8
  4769                           
  4770 ;; *************** function _command_builder1 *****************
  4771 ;; Defined at:
  4772 ;;		line 406 in file "SlaveComm_PIC18.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4775 ;;		 -> communications@send_buffer(42), 
  4776 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4777 ;;		 -> STR_23(4), 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4789 ;;      Params:         4       0       0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0
  4792 ;;      Totals:         4       0       0       0       0       0       0
  4793 ;;Total ram usage:        4 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    3
  4796 ;; This function calls:
  4797 ;;		_command_builder_add_char
  4798 ;;		_command_builder_add_string
  4799 ;; This function is called by:
  4800 ;;		_send_end_of_transmission
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text27
  4805  0015A6                     __ptext27:
  4806                           	opt stack 0
  4807  0015A6                     _command_builder1:
  4808                           	opt stack 23
  4809                           
  4810                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4811                           
  4812                           ;incstack = 0
  4813  0015A6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4814  0015AA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4815  0015AE  0E23               	movlw	35
  4816  0015B0  6E15               	movwf	command_builder_add_char@data,c
  4817  0015B2  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  4818                           
  4819                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4820  0015B6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4821  0015BA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4822  0015BE  0E23               	movlw	35
  4823  0015C0  6E15               	movwf	command_builder_add_char@data,c
  4824  0015C2  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  4825                           
  4826                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4827  0015C6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4828  0015CA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4829  0015CE  0E21               	movlw	33
  4830  0015D0  6E15               	movwf	command_builder_add_char@data,c
  4831  0015D2  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  4832                           
  4833                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4834  0015D6  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4835  0015DA  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4836  0015DE  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4837  0015E2  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4838  0015E6  EC26  F00A         	call	_command_builder_add_string	;wreg free
  4839                           
  4840                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4841  0015EA  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4842  0015EE  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4843  0015F2  0E2A               	movlw	42
  4844  0015F4  6E15               	movwf	command_builder_add_char@data,c
  4845  0015F6  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  4846  0015FA  0012               	return	
  4847  0015FC                     __end_of_command_builder1:
  4848                           	opt stack 0
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           prodh	equ	0xFF4
  4854                           prodl	equ	0xFF3
  4855                           intcon	equ	0xFF2
  4856                           intcon2	equ	0xFF1
  4857                           intcon3	equ	0xFF0
  4858                           postinc0	equ	0xFEE
  4859                           wreg	equ	0xFE8
  4860                           postinc1	equ	0xFE6
  4861                           postdec1	equ	0xFE5
  4862                           fsr1h	equ	0xFE2
  4863                           fsr1l	equ	0xFE1
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           fsr2h	equ	0xFDA
  4868                           fsr2l	equ	0xFD9
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _com_command_setEnergyUsed *****************
  4872 ;; Defined at:
  4873 ;;		line 629 in file "SlaveComm_PIC18.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4876 ;;		 -> communications@send_buffer(42), 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         2       0       0       0       0       0       0
  4889 ;;      Locals:         0      12       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0
  4891 ;;      Totals:         2      12       0       0       0       0       0
  4892 ;;Total ram usage:       14 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    4
  4895 ;; This function calls:
  4896 ;;		_command_builder3
  4897 ;;		_ultoa
  4898 ;; This function is called by:
  4899 ;;		_resetCommunications
  4900 ;;		_process_data_parameters
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text28
  4905  0017E0                     __ptext28:
  4906                           	opt stack 0
  4907  0017E0                     _com_command_setEnergyUsed:
  4908                           	opt stack 24
  4909                           
  4910                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4911                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4912                           
  4913                           ;incstack = 0
  4914  0017E0  0EBC               	movlw	low com_command_setEnergyUsed@temp
  4915  0017E2  6E20               	movwf	ultoa@buf,c
  4916  0017E4  0E00               	movlw	high com_command_setEnergyUsed@temp
  4917  0017E6  6E21               	movwf	ultoa@buf+1,c
  4918  0017E8  C088  F022         	movff	_meterEnergyUsed,ultoa@val
  4919  0017EC  C089  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4920  0017F0  C08A  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4921  0017F4  C08B  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4922  0017F8  0E00               	movlw	0
  4923  0017FA  6E27               	movwf	ultoa@base+1,c
  4924  0017FC  0E0A               	movlw	10
  4925  0017FE  6E26               	movwf	ultoa@base,c
  4926  001800  EC5F  F006         	call	_ultoa	;wreg free
  4927                           
  4928                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4929  001804  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4930  001808  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4931  00180C  0E57               	movlw	low STR_2
  4932  00180E  6E21               	movwf	command_builder3@data1,c
  4933  001810  0E06               	movlw	high STR_2
  4934  001812  6E22               	movwf	command_builder3@data1+1,c
  4935  001814  0E17               	movlw	low STR_4
  4936  001816  6E23               	movwf	command_builder3@data2,c
  4937  001818  0E06               	movlw	high STR_4
  4938  00181A  6E24               	movwf	command_builder3@data2+1,c
  4939  00181C  0EBC               	movlw	low com_command_setEnergyUsed@temp
  4940  00181E  6E25               	movwf	command_builder3@data3,c
  4941  001820  0E00               	movlw	high com_command_setEnergyUsed@temp
  4942  001822  6E26               	movwf	command_builder3@data3+1,c
  4943  001824  EC74  F008         	call	_command_builder3	;wreg free
  4944  001828  0012               	return	
  4945  00182A                     __end_of_com_command_setEnergyUsed:
  4946                           	opt stack 0
  4947                           tblptru	equ	0xFF8
  4948                           tblptrh	equ	0xFF7
  4949                           tblptrl	equ	0xFF6
  4950                           tablat	equ	0xFF5
  4951                           prodh	equ	0xFF4
  4952                           prodl	equ	0xFF3
  4953                           intcon	equ	0xFF2
  4954                           intcon2	equ	0xFF1
  4955                           intcon3	equ	0xFF0
  4956                           postinc0	equ	0xFEE
  4957                           wreg	equ	0xFE8
  4958                           postinc1	equ	0xFE6
  4959                           postdec1	equ	0xFE5
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           postinc2	equ	0xFDE
  4964                           postdec2	equ	0xFDD
  4965                           fsr2h	equ	0xFDA
  4966                           fsr2l	equ	0xFD9
  4967                           status	equ	0xFD8
  4968                           
  4969 ;; *************** function _ultoa *****************
  4970 ;; Defined at:
  4971 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ltoa.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4974 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4975 ;;  val             4   33[COMRAM] unsigned long 
  4976 ;;  base            2   37[COMRAM] int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  v               4   39[COMRAM] unsigned long 
  4979 ;;  c               1   43[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2   31[COMRAM] PTR unsigned char 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4989 ;;      Params:         8       0       0       0       0       0       0
  4990 ;;      Locals:         5       0       0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0
  4992 ;;      Totals:        13       0       0       0       0       0       0
  4993 ;;Total ram usage:       13 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    2
  4996 ;; This function calls:
  4997 ;;		___lldiv
  4998 ;;		___llmod
  4999 ;; This function is called by:
  5000 ;;		_com_command_setPower
  5001 ;;		_com_command_setEnergyUsed
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text29
  5006  000CBE                     __ptext29:
  5007                           	opt stack 0
  5008  000CBE                     _ultoa:
  5009                           	opt stack 25
  5010                           
  5011                           ;incstack = 0
  5012  000CBE  C022  F028         	movff	ultoa@val,ultoa@v
  5013  000CC2  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  5014  000CC6  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  5015  000CCA  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  5016  000CCE  C028  F013         	movff	ultoa@v,___lldiv@dividend
  5017  000CD2  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  5018  000CD6  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  5019  000CDA  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  5020  000CDE  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5021  000CE2  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5022  000CE6  0E00               	movlw	0
  5023  000CE8  BE18               	btfsc	___lldiv@divisor+1,7,c
  5024  000CEA  0EFF               	movlw	-1
  5025  000CEC  6E19               	movwf	___lldiv@divisor+2,c
  5026  000CEE  6E1A               	movwf	___lldiv@divisor+3,c
  5027  000CF0  ECE5  F009         	call	___lldiv	;wreg free
  5028  000CF4  C013  F028         	movff	?___lldiv,ultoa@v
  5029  000CF8  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  5030  000CFC  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  5031  000D00  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  5032  000D04  4A20               	infsnz	ultoa@buf,f,c
  5033  000D06  2A21               	incf	ultoa@buf+1,f,c
  5034  000D08  5028               	movf	ultoa@v,w,c
  5035  000D0A  1029               	iorwf	ultoa@v+1,w,c
  5036  000D0C  102A               	iorwf	ultoa@v+2,w,c
  5037  000D0E  102B               	iorwf	ultoa@v+3,w,c
  5038  000D10  A4D8               	btfss	status,2,c
  5039  000D12  D7DD               	goto	l920
  5040  000D14  C020  FFD9         	movff	ultoa@buf,fsr2l
  5041  000D18  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5042  000D1C  0E00               	movlw	0
  5043  000D1E  6EDF               	movwf	indf2,c
  5044  000D20  0620               	decf	ultoa@buf,f,c
  5045  000D22  A0D8               	btfss	status,0,c
  5046  000D24  0621               	decf	ultoa@buf+1,f,c
  5047  000D26  C022  F013         	movff	ultoa@val,___llmod@dividend
  5048  000D2A  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  5049  000D2E  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  5050  000D32  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  5051  000D36  C026  F017         	movff	ultoa@base,___llmod@divisor
  5052  000D3A  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  5053  000D3E  0E00               	movlw	0
  5054  000D40  BE18               	btfsc	___llmod@divisor+1,7,c
  5055  000D42  0EFF               	movlw	-1
  5056  000D44  6E19               	movwf	___llmod@divisor+2,c
  5057  000D46  6E1A               	movwf	___llmod@divisor+3,c
  5058  000D48  ECA0  F00A         	call	___llmod	;wreg free
  5059  000D4C  5013               	movf	?___llmod,w,c
  5060  000D4E  6E2C               	movwf	ultoa@c,c
  5061  000D50  C022  F013         	movff	ultoa@val,___lldiv@dividend
  5062  000D54  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  5063  000D58  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  5064  000D5C  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  5065  000D60  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5066  000D64  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5067  000D68  0E00               	movlw	0
  5068  000D6A  BE18               	btfsc	___lldiv@divisor+1,7,c
  5069  000D6C  0EFF               	movlw	-1
  5070  000D6E  6E19               	movwf	___lldiv@divisor+2,c
  5071  000D70  6E1A               	movwf	___lldiv@divisor+3,c
  5072  000D72  ECE5  F009         	call	___lldiv	;wreg free
  5073  000D76  C013  F022         	movff	?___lldiv,ultoa@val
  5074  000D7A  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  5075  000D7E  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  5076  000D82  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  5077  000D86  0E09               	movlw	9
  5078  000D88  642C               	cpfsgt	ultoa@c,c
  5079  000D8A  D002               	goto	l923
  5080  000D8C  0E07               	movlw	7
  5081  000D8E  262C               	addwf	ultoa@c,f,c
  5082  000D90                     l923:
  5083  000D90  0E30               	movlw	48
  5084  000D92  262C               	addwf	ultoa@c,f,c
  5085  000D94  C020  FFD9         	movff	ultoa@buf,fsr2l
  5086  000D98  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5087  000D9C  C02C  FFDF         	movff	ultoa@c,indf2
  5088  000DA0  0620               	decf	ultoa@buf,f,c
  5089  000DA2  A0D8               	btfss	status,0,c
  5090  000DA4  0621               	decf	ultoa@buf+1,f,c
  5091  000DA6  5022               	movf	ultoa@val,w,c
  5092  000DA8  1023               	iorwf	ultoa@val+1,w,c
  5093  000DAA  1024               	iorwf	ultoa@val+2,w,c
  5094  000DAC  1025               	iorwf	ultoa@val+3,w,c
  5095  000DAE  B4D8               	btfsc	status,2,c
  5096  000DB0  0012               	return	
  5097  000DB2  D7B9               	goto	l922
  5098  000DB4                     __end_of_ultoa:
  5099                           	opt stack 0
  5100                           tblptru	equ	0xFF8
  5101                           tblptrh	equ	0xFF7
  5102                           tblptrl	equ	0xFF6
  5103                           tablat	equ	0xFF5
  5104                           prodh	equ	0xFF4
  5105                           prodl	equ	0xFF3
  5106                           intcon	equ	0xFF2
  5107                           intcon2	equ	0xFF1
  5108                           intcon3	equ	0xFF0
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           postinc1	equ	0xFE6
  5112                           postdec1	equ	0xFE5
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           postinc2	equ	0xFDE
  5117                           postdec2	equ	0xFDD
  5118                           fsr2h	equ	0xFDA
  5119                           fsr2l	equ	0xFD9
  5120                           status	equ	0xFD8
  5121                           
  5122 ;; *************** function ___llmod *****************
  5123 ;; Defined at:
  5124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  dividend        4   18[COMRAM] unsigned long 
  5127 ;;  divisor         4   22[COMRAM] unsigned long 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  counter         1   26[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  4   18[COMRAM] unsigned long 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5139 ;;      Params:         8       0       0       0       0       0       0
  5140 ;;      Locals:         1       0       0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0
  5142 ;;      Totals:         9       0       0       0       0       0       0
  5143 ;;Total ram usage:        9 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_ultoa
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text30
  5154  001540                     __ptext30:
  5155                           	opt stack 0
  5156  001540                     ___llmod:
  5157                           	opt stack 25
  5158                           
  5159                           ;incstack = 0
  5160  001540  5017               	movf	___llmod@divisor,w,c
  5161  001542  1018               	iorwf	___llmod@divisor+1,w,c
  5162  001544  1019               	iorwf	___llmod@divisor+2,w,c
  5163  001546  101A               	iorwf	___llmod@divisor+3,w,c
  5164  001548  B4D8               	btfsc	status,2,c
  5165  00154A  D024               	goto	l882
  5166  00154C  0E01               	movlw	1
  5167  00154E  6E1B               	movwf	___llmod@counter,c
  5168  001550  D006               	goto	l877
  5169  001552  90D8               	bcf	status,0,c
  5170  001554  3617               	rlcf	___llmod@divisor,f,c
  5171  001556  3618               	rlcf	___llmod@divisor+1,f,c
  5172  001558  3619               	rlcf	___llmod@divisor+2,f,c
  5173  00155A  361A               	rlcf	___llmod@divisor+3,f,c
  5174  00155C  2A1B               	incf	___llmod@counter,f,c
  5175  00155E                     l877:
  5176  00155E  AE1A               	btfss	___llmod@divisor+3,7,c
  5177  001560  D7F8               	goto	l878
  5178  001562                     u2210:
  5179  001562  5017               	movf	___llmod@divisor,w,c
  5180  001564  5C13               	subwf	___llmod@dividend,w,c
  5181  001566  5018               	movf	___llmod@divisor+1,w,c
  5182  001568  5814               	subwfb	___llmod@dividend+1,w,c
  5183  00156A  5019               	movf	___llmod@divisor+2,w,c
  5184  00156C  5815               	subwfb	___llmod@dividend+2,w,c
  5185  00156E  501A               	movf	___llmod@divisor+3,w,c
  5186  001570  5816               	subwfb	___llmod@dividend+3,w,c
  5187  001572  A0D8               	btfss	status,0,c
  5188  001574  D008               	goto	l881
  5189  001576  5017               	movf	___llmod@divisor,w,c
  5190  001578  5E13               	subwf	___llmod@dividend,f,c
  5191  00157A  5018               	movf	___llmod@divisor+1,w,c
  5192  00157C  5A14               	subwfb	___llmod@dividend+1,f,c
  5193  00157E  5019               	movf	___llmod@divisor+2,w,c
  5194  001580  5A15               	subwfb	___llmod@dividend+2,f,c
  5195  001582  501A               	movf	___llmod@divisor+3,w,c
  5196  001584  5A16               	subwfb	___llmod@dividend+3,f,c
  5197  001586                     l881:
  5198  001586  90D8               	bcf	status,0,c
  5199  001588  321A               	rrcf	___llmod@divisor+3,f,c
  5200  00158A  3219               	rrcf	___llmod@divisor+2,f,c
  5201  00158C  3218               	rrcf	___llmod@divisor+1,f,c
  5202  00158E  3217               	rrcf	___llmod@divisor,f,c
  5203  001590  2E1B               	decfsz	___llmod@counter,f,c
  5204  001592  D7E7               	goto	u2210
  5205  001594                     l882:
  5206  001594  C013  F013         	movff	___llmod@dividend,?___llmod
  5207  001598  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  5208  00159C  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  5209  0015A0  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  5210  0015A4  0012               	return		;funcret
  5211  0015A6                     __end_of___llmod:
  5212                           	opt stack 0
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           intcon	equ	0xFF2
  5220                           intcon2	equ	0xFF1
  5221                           intcon3	equ	0xFF0
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           postinc1	equ	0xFE6
  5225                           postdec1	equ	0xFE5
  5226                           fsr1h	equ	0xFE2
  5227                           fsr1l	equ	0xFE1
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           postdec2	equ	0xFDD
  5231                           fsr2h	equ	0xFDA
  5232                           fsr2l	equ	0xFD9
  5233                           status	equ	0xFD8
  5234                           
  5235 ;; *************** function ___lldiv *****************
  5236 ;; Defined at:
  5237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  dividend        4   18[COMRAM] unsigned long 
  5240 ;;  divisor         4   22[COMRAM] unsigned long 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  quotient        4   26[COMRAM] unsigned long 
  5243 ;;  counter         1   30[COMRAM] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  4   18[COMRAM] unsigned long 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5253 ;;      Params:         8       0       0       0       0       0       0
  5254 ;;      Locals:         5       0       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0
  5256 ;;      Totals:        13       0       0       0       0       0       0
  5257 ;;Total ram usage:       13 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    1
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_ultoa
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text31
  5268  0013CA                     __ptext31:
  5269                           	opt stack 0
  5270  0013CA                     ___lldiv:
  5271                           	opt stack 25
  5272                           
  5273                           ;incstack = 0
  5274  0013CA  0E00               	movlw	0
  5275  0013CC  6E1B               	movwf	___lldiv@quotient,c
  5276  0013CE  0E00               	movlw	0
  5277  0013D0  6E1C               	movwf	___lldiv@quotient+1,c
  5278  0013D2  0E00               	movlw	0
  5279  0013D4  6E1D               	movwf	___lldiv@quotient+2,c
  5280  0013D6  0E00               	movlw	0
  5281  0013D8  6E1E               	movwf	___lldiv@quotient+3,c
  5282  0013DA  5017               	movf	___lldiv@divisor,w,c
  5283  0013DC  1018               	iorwf	___lldiv@divisor+1,w,c
  5284  0013DE  1019               	iorwf	___lldiv@divisor+2,w,c
  5285  0013E0  101A               	iorwf	___lldiv@divisor+3,w,c
  5286  0013E2  B4D8               	btfsc	status,2,c
  5287  0013E4  D02A               	goto	l872
  5288  0013E6  0E01               	movlw	1
  5289  0013E8  6E1F               	movwf	___lldiv@counter,c
  5290  0013EA  D006               	goto	l867
  5291  0013EC  90D8               	bcf	status,0,c
  5292  0013EE  3617               	rlcf	___lldiv@divisor,f,c
  5293  0013F0  3618               	rlcf	___lldiv@divisor+1,f,c
  5294  0013F2  3619               	rlcf	___lldiv@divisor+2,f,c
  5295  0013F4  361A               	rlcf	___lldiv@divisor+3,f,c
  5296  0013F6  2A1F               	incf	___lldiv@counter,f,c
  5297  0013F8                     l867:
  5298  0013F8  AE1A               	btfss	___lldiv@divisor+3,7,c
  5299  0013FA  D7F8               	goto	l868
  5300  0013FC                     u2180:
  5301  0013FC  90D8               	bcf	status,0,c
  5302  0013FE  361B               	rlcf	___lldiv@quotient,f,c
  5303  001400  361C               	rlcf	___lldiv@quotient+1,f,c
  5304  001402  361D               	rlcf	___lldiv@quotient+2,f,c
  5305  001404  361E               	rlcf	___lldiv@quotient+3,f,c
  5306  001406  5017               	movf	___lldiv@divisor,w,c
  5307  001408  5C13               	subwf	___lldiv@dividend,w,c
  5308  00140A  5018               	movf	___lldiv@divisor+1,w,c
  5309  00140C  5814               	subwfb	___lldiv@dividend+1,w,c
  5310  00140E  5019               	movf	___lldiv@divisor+2,w,c
  5311  001410  5815               	subwfb	___lldiv@dividend+2,w,c
  5312  001412  501A               	movf	___lldiv@divisor+3,w,c
  5313  001414  5816               	subwfb	___lldiv@dividend+3,w,c
  5314  001416  A0D8               	btfss	status,0,c
  5315  001418  D009               	goto	l871
  5316  00141A  5017               	movf	___lldiv@divisor,w,c
  5317  00141C  5E13               	subwf	___lldiv@dividend,f,c
  5318  00141E  5018               	movf	___lldiv@divisor+1,w,c
  5319  001420  5A14               	subwfb	___lldiv@dividend+1,f,c
  5320  001422  5019               	movf	___lldiv@divisor+2,w,c
  5321  001424  5A15               	subwfb	___lldiv@dividend+2,f,c
  5322  001426  501A               	movf	___lldiv@divisor+3,w,c
  5323  001428  5A16               	subwfb	___lldiv@dividend+3,f,c
  5324  00142A  801B               	bsf	___lldiv@quotient,0,c
  5325  00142C                     l871:
  5326  00142C  90D8               	bcf	status,0,c
  5327  00142E  321A               	rrcf	___lldiv@divisor+3,f,c
  5328  001430  3219               	rrcf	___lldiv@divisor+2,f,c
  5329  001432  3218               	rrcf	___lldiv@divisor+1,f,c
  5330  001434  3217               	rrcf	___lldiv@divisor,f,c
  5331  001436  2E1F               	decfsz	___lldiv@counter,f,c
  5332  001438  D7E1               	goto	u2180
  5333  00143A                     l872:
  5334  00143A  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5335  00143E  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5336  001442  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5337  001446  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5338  00144A  0012               	return		;funcret
  5339  00144C                     __end_of___lldiv:
  5340                           	opt stack 0
  5341                           tblptru	equ	0xFF8
  5342                           tblptrh	equ	0xFF7
  5343                           tblptrl	equ	0xFF6
  5344                           tablat	equ	0xFF5
  5345                           prodh	equ	0xFF4
  5346                           prodl	equ	0xFF3
  5347                           intcon	equ	0xFF2
  5348                           intcon2	equ	0xFF1
  5349                           intcon3	equ	0xFF0
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           postinc1	equ	0xFE6
  5353                           postdec1	equ	0xFE5
  5354                           fsr1h	equ	0xFE2
  5355                           fsr1l	equ	0xFE1
  5356                           indf2	equ	0xFDF
  5357                           postinc2	equ	0xFDE
  5358                           postdec2	equ	0xFDD
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _command_builder3 *****************
  5364 ;; Defined at:
  5365 ;;		line 430 in file "SlaveComm_PIC18.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  5368 ;;		 -> communications@send_buffer(42), 
  5369 ;;  data1           2   32[COMRAM] PTR unsigned char 
  5370 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5371 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5372 ;;  data2           2   34[COMRAM] PTR unsigned char 
  5373 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5374 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5375 ;;  data3           2   36[COMRAM] PTR unsigned char 
  5376 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5377 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5389 ;;      Params:         8       0       0       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0
  5392 ;;      Totals:         8       0       0       0       0       0       0
  5393 ;;Total ram usage:        8 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    3
  5396 ;; This function calls:
  5397 ;;		_command_builder_add_char
  5398 ;;		_command_builder_add_string
  5399 ;; This function is called by:
  5400 ;;		_process_data_parameters
  5401 ;;		_com_command_setPower
  5402 ;;		_com_command_setEnergyUsed
  5403 ;;		_com_command_setVersion
  5404 ;;		_com_command_setVolts
  5405 ;;		_com_command_setAmps
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text32
  5410  0010E8                     __ptext32:
  5411                           	opt stack 0
  5412  0010E8                     _command_builder3:
  5413                           	opt stack 24
  5414                           
  5415                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  5416                           
  5417                           ;incstack = 0
  5418  0010E8  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5419  0010EC  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5420  0010F0  0E23               	movlw	35
  5421  0010F2  6E15               	movwf	command_builder_add_char@data,c
  5422  0010F4  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5423                           
  5424                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  5425  0010F8  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5426  0010FC  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5427  001100  0E23               	movlw	35
  5428  001102  6E15               	movwf	command_builder_add_char@data,c
  5429  001104  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5430                           
  5431                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  5432  001108  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5433  00110C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5434  001110  0E21               	movlw	33
  5435  001112  6E15               	movwf	command_builder_add_char@data,c
  5436  001114  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5437                           
  5438                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  5439  001118  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5440  00111C  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5441  001120  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5442  001124  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5443  001128  EC26  F00A         	call	_command_builder_add_string	;wreg free
  5444                           
  5445                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  5446  00112C  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5447  001130  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5448  001134  0E3B               	movlw	59
  5449  001136  6E15               	movwf	command_builder_add_char@data,c
  5450  001138  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5451                           
  5452                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  5453  00113C  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5454  001140  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5455  001144  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5456  001148  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5457  00114C  EC26  F00A         	call	_command_builder_add_string	;wreg free
  5458                           
  5459                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  5460  001150  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5461  001154  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5462  001158  0E3B               	movlw	59
  5463  00115A  6E15               	movwf	command_builder_add_char@data,c
  5464  00115C  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5465                           
  5466                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  5467  001160  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5468  001164  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5469  001168  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5470  00116C  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5471  001170  EC26  F00A         	call	_command_builder_add_string	;wreg free
  5472                           
  5473                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  5474  001174  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5475  001178  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5476  00117C  0E2A               	movlw	42
  5477  00117E  6E15               	movwf	command_builder_add_char@data,c
  5478  001180  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5479  001184  0012               	return	
  5480  001186                     __end_of_command_builder3:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           intcon2	equ	0xFF1
  5490                           intcon3	equ	0xFF0
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           postinc1	equ	0xFE6
  5494                           postdec1	equ	0xFE5
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _command_builder_add_string *****************
  5505 ;; Defined at:
  5506 ;;		line 475 in file "SlaveComm_PIC18.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5509 ;;		 -> communications@send_buffer(42), 
  5510 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5511 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5512 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5513 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5514 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5515 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5516 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  5517 ;;		 -> STR_10(5), STR_9(4), 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  inx             2   28[COMRAM] int 
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5529 ;;      Params:         4       0       0       0       0       0       0
  5530 ;;      Locals:         2       0       0       0       0       0       0
  5531 ;;      Temps:          2       0       0       0       0       0       0
  5532 ;;      Totals:         8       0       0       0       0       0       0
  5533 ;;Total ram usage:        8 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    2
  5536 ;; This function calls:
  5537 ;;		_command_builder_add_char
  5538 ;; This function is called by:
  5539 ;;		_command_builder1
  5540 ;;		_command_builder3
  5541 ;;		_command_builder2
  5542 ;;		_command_builder4
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text33
  5547  00144C                     __ptext33:
  5548                           	opt stack 0
  5549  00144C                     _command_builder_add_string:
  5550                           	opt stack 24
  5551                           
  5552                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5553                           
  5554                           ;incstack = 0
  5555  00144C  0E00               	movlw	0
  5556  00144E  6E1E               	movwf	command_builder_add_string@inx+1,c
  5557  001450  0E00               	movlw	0
  5558  001452  6E1D               	movwf	command_builder_add_string@inx,c
  5559  001454  D01F               	goto	l431
  5560  001456                     
  5561                           ;SlaveComm_PIC18.c: 478: {
  5562                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5563  001456  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5564  00145A  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5565  00145E  501D               	movf	command_builder_add_string@inx,w,c
  5566  001460  2419               	addwf	command_builder_add_string@data_string,w,c
  5567  001462  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5568  001464  501E               	movf	command_builder_add_string@inx+1,w,c
  5569  001466  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5570  001468  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5571  00146A  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5572  00146E  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5573  001472  6AF8               	clrf	tblptru,c
  5574  001474  0E05               	movlw	(high __ramtop+-1)
  5575  001476  64F7               	cpfsgt	tblptrh,c
  5576  001478  D003               	bra	u2147
  5577  00147A  0008               	tblrd		*
  5578  00147C  50F5               	movf	tablat,w,c
  5579  00147E  D005               	bra	u2140
  5580  001480                     u2147:
  5581  001480  CFF6 FFE1          	movff	tblptrl,fsr1l
  5582  001484  CFF7 FFE2          	movff	tblptrh,fsr1h
  5583  001488  50E7               	movf	indf1,w,c
  5584  00148A                     u2140:
  5585  00148A  6E15               	movwf	command_builder_add_char@data,c
  5586  00148C  ECFE  F00A         	call	_command_builder_add_char	;wreg free
  5587  001490  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5588  001492  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5589  001494                     l431:
  5590  001494  501D               	movf	command_builder_add_string@inx,w,c
  5591  001496  2419               	addwf	command_builder_add_string@data_string,w,c
  5592  001498  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5593  00149A  501E               	movf	command_builder_add_string@inx+1,w,c
  5594  00149C  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5595  00149E  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5596  0014A0  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5597  0014A4  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5598  0014A8  6AF8               	clrf	tblptru,c
  5599  0014AA  0E05               	movlw	(high __ramtop+-1)
  5600  0014AC  64F7               	cpfsgt	tblptrh,c
  5601  0014AE  D003               	bra	u2157
  5602  0014B0  0008               	tblrd		*
  5603  0014B2  50F5               	movf	tablat,w,c
  5604  0014B4  D005               	bra	u2150
  5605  0014B6                     u2157:
  5606  0014B6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5607  0014BA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5608  0014BE  50E7               	movf	indf1,w,c
  5609  0014C0                     u2150:
  5610  0014C0  0900               	iorlw	0
  5611  0014C2  B4D8               	btfsc	status,2,c
  5612  0014C4  0012               	return	
  5613  0014C6  D7C7               	goto	l432
  5614  0014C8                     __end_of_command_builder_add_string:
  5615                           	opt stack 0
  5616                           tblptru	equ	0xFF8
  5617                           tblptrh	equ	0xFF7
  5618                           tblptrl	equ	0xFF6
  5619                           tablat	equ	0xFF5
  5620                           prodh	equ	0xFF4
  5621                           prodl	equ	0xFF3
  5622                           intcon	equ	0xFF2
  5623                           intcon2	equ	0xFF1
  5624                           intcon3	equ	0xFF0
  5625                           postinc0	equ	0xFEE
  5626                           wreg	equ	0xFE8
  5627                           indf1	equ	0xFE7
  5628                           postinc1	equ	0xFE6
  5629                           postdec1	equ	0xFE5
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _command_builder_add_char *****************
  5640 ;; Defined at:
  5641 ;;		line 462 in file "SlaveComm_PIC18.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5644 ;;		 -> communications@send_buffer(42), 
  5645 ;;  data            1   20[COMRAM] unsigned char 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  1    wreg      void 
  5650 ;; Registers used:
  5651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5657 ;;      Params:         3       0       0       0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0
  5659 ;;      Temps:          1       0       0       0       0       0       0
  5660 ;;      Totals:         4       0       0       0       0       0       0
  5661 ;;Total ram usage:        4 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_command_builder1
  5668 ;;		_command_builder3
  5669 ;;		_command_builder_add_string
  5670 ;;		_command_builder2
  5671 ;;		_command_builder4
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text34
  5676  0015FC                     __ptext34:
  5677                           	opt stack 0
  5678  0015FC                     _command_builder_add_char:
  5679                           	opt stack 24
  5680                           
  5681                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5682                           
  5683                           ;incstack = 0
  5684  0015FC  EE20 F028          	lfsr	2,40
  5685  001600  5013               	movf	command_builder_add_char@send_buffer,w,c
  5686  001602  26D9               	addwf	fsr2l,f,c
  5687  001604  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5688  001606  22DA               	addwfc	fsr2h,f,c
  5689  001608  50DF               	movf	indf2,w,c
  5690  00160A  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5691  00160C  5016               	movf	??_command_builder_add_char,w,c
  5692  00160E  0D01               	mullw	1
  5693  001610  50F3               	movf	prodl,w,c
  5694  001612  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5695  001614  6ED9               	movwf	fsr2l,c
  5696  001616  50F4               	movf	prodh,w,c
  5697  001618  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5698  00161A  6EDA               	movwf	fsr2h,c
  5699  00161C  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5700                           
  5701                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5702  001620  EE20 F028          	lfsr	2,40
  5703  001624  5013               	movf	command_builder_add_char@send_buffer,w,c
  5704  001626  26D9               	addwf	fsr2l,f,c
  5705  001628  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5706  00162A  22DA               	addwfc	fsr2h,f,c
  5707  00162C  2ADF               	incf	indf2,f,c
  5708                           
  5709                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5710  00162E  EE20 F028          	lfsr	2,40
  5711  001632  5013               	movf	command_builder_add_char@send_buffer,w,c
  5712  001634  26D9               	addwf	fsr2l,f,c
  5713  001636  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5714  001638  22DA               	addwfc	fsr2h,f,c
  5715  00163A  0E27               	movlw	39
  5716  00163C  64DF               	cpfsgt	indf2,c
  5717  00163E  0012               	return	
  5718                           
  5719                           ;SlaveComm_PIC18.c: 468: {
  5720                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5721  001640  EE20 F028          	lfsr	2,40
  5722  001644  5013               	movf	command_builder_add_char@send_buffer,w,c
  5723  001646  26D9               	addwf	fsr2l,f,c
  5724  001648  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5725  00164A  22DA               	addwfc	fsr2h,f,c
  5726  00164C  0E00               	movlw	0
  5727  00164E  6EDF               	movwf	indf2,c
  5728  001650  0012               	return	
  5729  001652                     __end_of_command_builder_add_char:
  5730                           	opt stack 0
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           prodh	equ	0xFF4
  5736                           prodl	equ	0xFF3
  5737                           intcon	equ	0xFF2
  5738                           intcon2	equ	0xFF1
  5739                           intcon3	equ	0xFF0
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           indf1	equ	0xFE7
  5743                           postinc1	equ	0xFE6
  5744                           postdec1	equ	0xFE5
  5745                           fsr1h	equ	0xFE2
  5746                           fsr1l	equ	0xFE1
  5747                           indf2	equ	0xFDF
  5748                           postinc2	equ	0xFDE
  5749                           postdec2	equ	0xFDD
  5750                           fsr2h	equ	0xFDA
  5751                           fsr2l	equ	0xFD9
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _atol *****************
  5755 ;; Defined at:
  5756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\atol.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5759 ;;		 -> process_data@parameters(50), 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  a               4   39[COMRAM] long 
  5762 ;;  c               1   43[COMRAM] unsigned char 
  5763 ;;  sign            1   38[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4   30[COMRAM] long 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         4       0       0       0       0       0       0
  5774 ;;      Locals:         6       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0
  5776 ;;      Totals:        14       0       0       0       0       0       0
  5777 ;;Total ram usage:       14 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    2
  5780 ;; This function calls:
  5781 ;;		___lmul
  5782 ;;		_isdigit
  5783 ;; This function is called by:
  5784 ;;		_process_data_parameters
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text35
  5789  000DB4                     __ptext35:
  5790                           	opt stack 0
  5791  000DB4                     _atol:
  5792                           	opt stack 25
  5793                           
  5794                           ;incstack = 0
  5795  000DB4  C01F  FFD9         	movff	atol@s,fsr2l
  5796  000DB8  C020  FFDA         	movff	atol@s+1,fsr2h
  5797  000DBC  50DF               	movf	indf2,w,c
  5798  000DBE  6E2C               	movwf	atol@c,c
  5799  000DC0  4A1F               	infsnz	atol@s,f,c
  5800  000DC2  2A20               	incf	atol@s+1,f,c
  5801  000DC4  0E20               	movlw	32
  5802  000DC6  182C               	xorwf	atol@c,w,c
  5803  000DC8  B4D8               	btfsc	status,2,c
  5804  000DCA  D7F4               	goto	_atol
  5805  000DCC  0E09               	movlw	9
  5806  000DCE  182C               	xorwf	atol@c,w,c
  5807  000DD0  B4D8               	btfsc	status,2,c
  5808  000DD2  D7F0               	goto	_atol
  5809  000DD4  0E00               	movlw	0
  5810  000DD6  6E28               	movwf	atol@a,c
  5811  000DD8  0E00               	movlw	0
  5812  000DDA  6E29               	movwf	atol@a+1,c
  5813  000DDC  0E00               	movlw	0
  5814  000DDE  6E2A               	movwf	atol@a+2,c
  5815  000DE0  0E00               	movlw	0
  5816  000DE2  6E2B               	movwf	atol@a+3,c
  5817  000DE4  0E00               	movlw	0
  5818  000DE6  6E27               	movwf	atol@sign,c
  5819  000DE8  0E2D               	movlw	45
  5820  000DEA  182C               	xorwf	atol@c,w,c
  5821  000DEC  A4D8               	btfss	status,2,c
  5822  000DEE  D002               	goto	l663
  5823  000DF0  2A27               	incf	atol@sign,f,c
  5824  000DF2  D027               	goto	L3
  5825  000DF4                     l663:
  5826  000DF4  0E2B               	movlw	43
  5827  000DF6  182C               	xorwf	atol@c,w,c
  5828  000DF8  A4D8               	btfss	status,2,c
  5829  000DFA  D02B               	goto	l666
  5830  000DFC  D022               	goto	L3
  5831  000DFE  C028  F013         	movff	atol@a,___lmul@multiplier
  5832  000E02  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5833  000E06  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5834  000E0A  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5835  000E0E  0E0A               	movlw	10
  5836  000E10  6E17               	movwf	___lmul@multiplicand,c
  5837  000E12  0E00               	movlw	0
  5838  000E14  6E18               	movwf	___lmul@multiplicand+1,c
  5839  000E16  0E00               	movlw	0
  5840  000E18  6E19               	movwf	___lmul@multiplicand+2,c
  5841  000E1A  0E00               	movlw	0
  5842  000E1C  6E1A               	movwf	___lmul@multiplicand+3,c
  5843  000E1E  EC29  F00B         	call	___lmul	;wreg free
  5844  000E22  C02C  F023         	movff	atol@c,??_atol
  5845  000E26  0ED0               	movlw	208
  5846  000E28  2623               	addwf	??_atol,f,c
  5847  000E2A  5023               	movf	??_atol,w,c
  5848  000E2C  2413               	addwf	?___lmul,w,c
  5849  000E2E  6E28               	movwf	atol@a,c
  5850  000E30  0E00               	movlw	0
  5851  000E32  2014               	addwfc	?___lmul+1,w,c
  5852  000E34  6E29               	movwf	atol@a+1,c
  5853  000E36  0E00               	movlw	0
  5854  000E38  2015               	addwfc	?___lmul+2,w,c
  5855  000E3A  6E2A               	movwf	atol@a+2,c
  5856  000E3C  0E00               	movlw	0
  5857  000E3E  2016               	addwfc	?___lmul+3,w,c
  5858  000E40  6E2B               	movwf	atol@a+3,c
  5859  000E42                     L3:
  5860  000E42  C01F  FFD9         	movff	atol@s,fsr2l
  5861  000E46  C020  FFDA         	movff	atol@s+1,fsr2h
  5862  000E4A  50DF               	movf	indf2,w,c
  5863  000E4C  6E2C               	movwf	atol@c,c
  5864  000E4E  4A1F               	infsnz	atol@s,f,c
  5865  000E50  2A20               	incf	atol@s+1,f,c
  5866  000E52                     l666:
  5867  000E52  502C               	movf	atol@c,w,c
  5868  000E54  ECD4  F00C         	call	_isdigit
  5869  000E58  B0D8               	btfsc	status,0,c
  5870  000E5A  D7D1               	goto	l667
  5871  000E5C  5027               	movf	atol@sign,w,c
  5872  000E5E  B4D8               	btfsc	status,2,c
  5873  000E60  D01A               	goto	l669
  5874  000E62  C028  F023         	movff	atol@a,??_atol
  5875  000E66  C029  F024         	movff	atol@a+1,??_atol+1
  5876  000E6A  C02A  F025         	movff	atol@a+2,??_atol+2
  5877  000E6E  C02B  F026         	movff	atol@a+3,??_atol+3
  5878  000E72  1E23               	comf	??_atol,f,c
  5879  000E74  1E24               	comf	??_atol+1,f,c
  5880  000E76  1E25               	comf	??_atol+2,f,c
  5881  000E78  1E26               	comf	??_atol+3,f,c
  5882  000E7A  2A23               	incf	??_atol,f,c
  5883  000E7C  0E00               	movlw	0
  5884  000E7E  2224               	addwfc	??_atol+1,f,c
  5885  000E80  2225               	addwfc	??_atol+2,f,c
  5886  000E82  2226               	addwfc	??_atol+3,f,c
  5887  000E84  C023  F01F         	movff	??_atol,?_atol
  5888  000E88  C024  F020         	movff	??_atol+1,?_atol+1
  5889  000E8C  C025  F021         	movff	??_atol+2,?_atol+2
  5890  000E90  C026  F022         	movff	??_atol+3,?_atol+3
  5891  000E94  0012               	return	
  5892  000E96                     l669:
  5893  000E96  C028  F01F         	movff	atol@a,?_atol
  5894  000E9A  C029  F020         	movff	atol@a+1,?_atol+1
  5895  000E9E  C02A  F021         	movff	atol@a+2,?_atol+2
  5896  000EA2  C02B  F022         	movff	atol@a+3,?_atol+3
  5897  000EA6  0012               	return		;funcret
  5898  000EA8                     __end_of_atol:
  5899                           	opt stack 0
  5900                           tblptru	equ	0xFF8
  5901                           tblptrh	equ	0xFF7
  5902                           tblptrl	equ	0xFF6
  5903                           tablat	equ	0xFF5
  5904                           prodh	equ	0xFF4
  5905                           prodl	equ	0xFF3
  5906                           intcon	equ	0xFF2
  5907                           intcon2	equ	0xFF1
  5908                           intcon3	equ	0xFF0
  5909                           postinc0	equ	0xFEE
  5910                           wreg	equ	0xFE8
  5911                           indf1	equ	0xFE7
  5912                           postinc1	equ	0xFE6
  5913                           postdec1	equ	0xFE5
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           indf2	equ	0xFDF
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           fsr2h	equ	0xFDA
  5920                           fsr2l	equ	0xFD9
  5921                           status	equ	0xFD8
  5922                           
  5923 ;; *************** function _isdigit *****************
  5924 ;; Defined at:
  5925 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  c               1    wreg     unsigned char 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  c               1   20[COMRAM] unsigned char 
  5930 ;; Return value:  Size  Location     Type
  5931 ;;		None               void
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5939 ;;      Params:         0       0       0       0       0       0       0
  5940 ;;      Locals:         2       0       0       0       0       0       0
  5941 ;;      Temps:          1       0       0       0       0       0       0
  5942 ;;      Totals:         3       0       0       0       0       0       0
  5943 ;;Total ram usage:        3 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    1
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_atol
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text36
  5954  0019A8                     __ptext36:
  5955                           	opt stack 0
  5956  0019A8                     _isdigit:
  5957                           	opt stack 25
  5958                           
  5959                           ;incstack = 0
  5960                           ;isdigit@c stored from wreg
  5961  0019A8  6E15               	movwf	isdigit@c,c
  5962  0019AA  0E00               	movlw	0
  5963  0019AC  6E14               	movwf	_isdigit$2583,c
  5964  0019AE  0E3A               	movlw	58
  5965  0019B0  6015               	cpfslt	isdigit@c,c
  5966  0019B2  D005               	goto	l841
  5967  0019B4  0E2F               	movlw	47
  5968  0019B6  6415               	cpfsgt	isdigit@c,c
  5969  0019B8  D002               	goto	l841
  5970  0019BA  0E01               	movlw	1
  5971  0019BC  6E14               	movwf	_isdigit$2583,c
  5972  0019BE                     l841:
  5973  0019BE  C014  F013         	movff	_isdigit$2583,??_isdigit
  5974  0019C2  3013               	rrcf	??_isdigit,w,c
  5975  0019C4  0012               	return	
  5976  0019C6                     __end_of_isdigit:
  5977                           	opt stack 0
  5978                           tblptru	equ	0xFF8
  5979                           tblptrh	equ	0xFF7
  5980                           tblptrl	equ	0xFF6
  5981                           tablat	equ	0xFF5
  5982                           prodh	equ	0xFF4
  5983                           prodl	equ	0xFF3
  5984                           intcon	equ	0xFF2
  5985                           intcon2	equ	0xFF1
  5986                           intcon3	equ	0xFF0
  5987                           postinc0	equ	0xFEE
  5988                           wreg	equ	0xFE8
  5989                           indf1	equ	0xFE7
  5990                           postinc1	equ	0xFE6
  5991                           postdec1	equ	0xFE5
  5992                           fsr1h	equ	0xFE2
  5993                           fsr1l	equ	0xFE1
  5994                           indf2	equ	0xFDF
  5995                           postinc2	equ	0xFDE
  5996                           postdec2	equ	0xFDD
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function ___lmul *****************
  6002 ;; Defined at:
  6003 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  multiplier      4   18[COMRAM] unsigned long 
  6006 ;;  multiplicand    4   22[COMRAM] unsigned long 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  product         4   26[COMRAM] unsigned long 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  4   18[COMRAM] unsigned long 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6018 ;;      Params:         8       0       0       0       0       0       0
  6019 ;;      Locals:         4       0       0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0
  6021 ;;      Totals:        12       0       0       0       0       0       0
  6022 ;;Total ram usage:       12 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    1
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_atol
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text37
  6033  001652                     __ptext37:
  6034                           	opt stack 0
  6035  001652                     ___lmul:
  6036                           	opt stack 25
  6037                           
  6038                           ;incstack = 0
  6039  001652  0E00               	movlw	0
  6040  001654  6E1B               	movwf	___lmul@product,c
  6041  001656  0E00               	movlw	0
  6042  001658  6E1C               	movwf	___lmul@product+1,c
  6043  00165A  0E00               	movlw	0
  6044  00165C  6E1D               	movwf	___lmul@product+2,c
  6045  00165E  0E00               	movlw	0
  6046  001660  6E1E               	movwf	___lmul@product+3,c
  6047  001662  A013               	btfss	___lmul@multiplier,0,c
  6048  001664  D008               	goto	l510
  6049  001666  5017               	movf	___lmul@multiplicand,w,c
  6050  001668  261B               	addwf	___lmul@product,f,c
  6051  00166A  5018               	movf	___lmul@multiplicand+1,w,c
  6052  00166C  221C               	addwfc	___lmul@product+1,f,c
  6053  00166E  5019               	movf	___lmul@multiplicand+2,w,c
  6054  001670  221D               	addwfc	___lmul@product+2,f,c
  6055  001672  501A               	movf	___lmul@multiplicand+3,w,c
  6056  001674  221E               	addwfc	___lmul@product+3,f,c
  6057  001676                     l510:
  6058  001676  90D8               	bcf	status,0,c
  6059  001678  3617               	rlcf	___lmul@multiplicand,f,c
  6060  00167A  3618               	rlcf	___lmul@multiplicand+1,f,c
  6061  00167C  3619               	rlcf	___lmul@multiplicand+2,f,c
  6062  00167E  361A               	rlcf	___lmul@multiplicand+3,f,c
  6063  001680  90D8               	bcf	status,0,c
  6064  001682  3216               	rrcf	___lmul@multiplier+3,f,c
  6065  001684  3215               	rrcf	___lmul@multiplier+2,f,c
  6066  001686  3214               	rrcf	___lmul@multiplier+1,f,c
  6067  001688  3213               	rrcf	___lmul@multiplier,f,c
  6068  00168A  5013               	movf	___lmul@multiplier,w,c
  6069  00168C  1014               	iorwf	___lmul@multiplier+1,w,c
  6070  00168E  1015               	iorwf	___lmul@multiplier+2,w,c
  6071  001690  1016               	iorwf	___lmul@multiplier+3,w,c
  6072  001692  A4D8               	btfss	status,2,c
  6073  001694  D7E6               	goto	l509
  6074  001696  C01B  F013         	movff	___lmul@product,?___lmul
  6075  00169A  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  6076  00169E  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  6077  0016A2  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  6078  0016A6  0012               	return		;funcret
  6079  0016A8                     __end_of___lmul:
  6080                           	opt stack 0
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           intcon	equ	0xFF2
  6088                           intcon2	equ	0xFF1
  6089                           intcon3	equ	0xFF0
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           indf1	equ	0xFE7
  6093                           postinc1	equ	0xFE6
  6094                           postdec1	equ	0xFE5
  6095                           fsr1h	equ	0xFE2
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           postinc2	equ	0xFDE
  6099                           postdec2	equ	0xFDD
  6100                           fsr2h	equ	0xFDA
  6101                           fsr2l	equ	0xFD9
  6102                           status	equ	0xFD8
  6103                           
  6104 ;; *************** function _process_data_parameterize *****************
  6105 ;; Defined at:
  6106 ;;		line 256 in file "SlaveComm_PIC18.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  6109 ;;		 -> process_data@parameters(50), 
  6110 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  6111 ;;		 -> communications@receive_buffer(42), 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  inx             2   31[COMRAM] int 
  6114 ;;  parameter_po    1   34[COMRAM] unsigned char 
  6115 ;;  parameter_in    1   33[COMRAM] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6125 ;;      Params:         4       0       0       0       0       0       0
  6126 ;;      Locals:         4       0       0       0       0       0       0
  6127 ;;      Temps:          3       0       0       0       0       0       0
  6128 ;;      Totals:        11       0       0       0       0       0       0
  6129 ;;Total ram usage:       11 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    2
  6132 ;; This function calls:
  6133 ;;		___wmul
  6134 ;; This function is called by:
  6135 ;;		_process_data
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text38
  6140  000906                     __ptext38:
  6141                           	opt stack 0
  6142  000906                     _process_data_parameterize:
  6143                           	opt stack 26
  6144                           
  6145                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  6146                           
  6147                           ;incstack = 0
  6148  000906  0E00               	movlw	0
  6149  000908  6E23               	movwf	process_data_parameterize@parameter_position,c
  6150                           
  6151                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  6152  00090A  0E00               	movlw	0
  6153  00090C  6E22               	movwf	process_data_parameterize@parameter_index,c
  6154                           
  6155                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  6156  00090E  0E00               	movlw	0
  6157  000910  6E21               	movwf	process_data_parameterize@inx+1,c
  6158  000912  0E00               	movlw	0
  6159  000914  6E20               	movwf	process_data_parameterize@inx,c
  6160  000916  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6161  000918  D008               	goto	l368
  6162  00091A  5021               	movf	process_data_parameterize@inx+1,w,c
  6163  00091C  E105               	bnz	u2480
  6164  00091E  0E05               	movlw	5
  6165  000920  5C20               	subwf	process_data_parameterize@inx,w,c
  6166  000922  B0D8               	btfsc	status,0,c
  6167  000924  D082               	goto	l370
  6168  000926  D001               	goto	l368
  6169  000928                     u2480:
  6170  000928  D080               	goto	l370
  6171  00092A                     l368:
  6172                           
  6173                           ;SlaveComm_PIC18.c: 269: {
  6174                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  6175  00092A  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6176  00092E  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6177  000932  0E00               	movlw	0
  6178  000934  6E16               	movwf	___wmul@multiplicand+1,c
  6179  000936  0E0A               	movlw	10
  6180  000938  6E15               	movwf	___wmul@multiplicand,c
  6181  00093A  EC9F  F00C         	call	___wmul	;wreg free
  6182  00093E  5013               	movf	?___wmul,w,c
  6183  000940  2419               	addwf	process_data_parameterize@parameters,w,c
  6184  000942  6ED9               	movwf	fsr2l,c
  6185  000944  5014               	movf	?___wmul+1,w,c
  6186  000946  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6187  000948  6EDA               	movwf	fsr2h,c
  6188  00094A  0E00               	movlw	0
  6189  00094C  6EDF               	movwf	indf2,c
  6190  00094E  4A20               	infsnz	process_data_parameterize@inx,f,c
  6191  000950  2A21               	incf	process_data_parameterize@inx+1,f,c
  6192  000952  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6193  000954  D7EA               	goto	l368
  6194  000956  5021               	movf	process_data_parameterize@inx+1,w,c
  6195  000958  E168               	bnz	l3162
  6196  00095A  D7E1               	goto	L2
  6197  00095C                     
  6198                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  6199  00095C  0E00               	movlw	0
  6200  00095E  6E23               	movwf	process_data_parameterize@parameter_position,c
  6201                           
  6202                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  6203  000960  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6204                           
  6205                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  6206  000962  0E04               	movlw	4
  6207  000964  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6208  000966  D05A               	goto	l374
  6209                           
  6210                           ;SlaveComm_PIC18.c: 286: {
  6211                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  6212  000968  0E04               	movlw	4
  6213  00096A  6E22               	movwf	process_data_parameterize@parameter_index,c
  6214                           
  6215                           ;SlaveComm_PIC18.c: 290: }
  6216                           ;SlaveComm_PIC18.c: 292: break;
  6217  00096C  D057               	goto	l374
  6218  00096E                     
  6219                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6220  00096E  EE20 F029          	lfsr	2,41
  6221  000972  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6222  000974  26D9               	addwf	fsr2l,f,c
  6223  000976  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6224  000978  22DA               	addwfc	fsr2h,f,c
  6225  00097A  50DF               	movf	indf2,w,c
  6226  00097C  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6227  00097E  501D               	movf	??_process_data_parameterize,w,c
  6228  000980  0D01               	mullw	1
  6229  000982  50F3               	movf	prodl,w,c
  6230  000984  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6231  000986  6ED9               	movwf	fsr2l,c
  6232  000988  50F4               	movf	prodh,w,c
  6233  00098A  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6234  00098C  6EDA               	movwf	fsr2h,c
  6235  00098E  5022               	movf	process_data_parameterize@parameter_index,w,c
  6236  000990  0D0A               	mullw	10
  6237  000992  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6238  000996  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6239  00099A  50F3               	movf	prodl,w,c
  6240  00099C  261E               	addwf	??_process_data_parameterize+1,f,c
  6241  00099E  50F4               	movf	prodh,w,c
  6242  0009A0  221F               	addwfc	??_process_data_parameterize+2,f,c
  6243  0009A2  5023               	movf	process_data_parameterize@parameter_position,w,c
  6244  0009A4  0D01               	mullw	1
  6245  0009A6  50F3               	movf	prodl,w,c
  6246  0009A8  241E               	addwf	??_process_data_parameterize+1,w,c
  6247  0009AA  6EE1               	movwf	fsr1l,c
  6248  0009AC  50F4               	movf	prodh,w,c
  6249  0009AE  201F               	addwfc	??_process_data_parameterize+2,w,c
  6250  0009B0  6EE2               	movwf	fsr1h,c
  6251  0009B2  CFDF FFE7          	movff	indf2,indf1
  6252                           
  6253                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  6254  0009B6  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6255                           
  6256                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  6257  0009B8  0E09               	movlw	9
  6258  0009BA  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6259  0009BC  D002               	goto	l378
  6260                           
  6261                           ;SlaveComm_PIC18.c: 298: {
  6262                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  6263  0009BE  0E09               	movlw	9
  6264  0009C0  6E23               	movwf	process_data_parameterize@parameter_position,c
  6265  0009C2                     l378:
  6266                           
  6267                           ;SlaveComm_PIC18.c: 302: }
  6268                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  6269  0009C2  5022               	movf	process_data_parameterize@parameter_index,w,c
  6270  0009C4  0D0A               	mullw	10
  6271  0009C6  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6272  0009CA  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6273  0009CE  50F3               	movf	prodl,w,c
  6274  0009D0  261D               	addwf	??_process_data_parameterize,f,c
  6275  0009D2  50F4               	movf	prodh,w,c
  6276  0009D4  221E               	addwfc	??_process_data_parameterize+1,f,c
  6277  0009D6  5023               	movf	process_data_parameterize@parameter_position,w,c
  6278  0009D8  0D01               	mullw	1
  6279  0009DA  50F3               	movf	prodl,w,c
  6280  0009DC  241D               	addwf	??_process_data_parameterize,w,c
  6281  0009DE  6ED9               	movwf	fsr2l,c
  6282  0009E0  50F4               	movf	prodh,w,c
  6283  0009E2  201E               	addwfc	??_process_data_parameterize+1,w,c
  6284  0009E4  6EDA               	movwf	fsr2h,c
  6285  0009E6  0E00               	movlw	0
  6286  0009E8  6EDF               	movwf	indf2,c
  6287                           
  6288                           ;SlaveComm_PIC18.c: 307: }
  6289                           
  6290                           ;SlaveComm_PIC18.c: 306: break;
  6291  0009EA  D018               	goto	l374
  6292  0009EC  EE20 F029          	lfsr	2,41
  6293  0009F0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6294  0009F2  26D9               	addwf	fsr2l,f,c
  6295  0009F4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6296  0009F6  22DA               	addwfc	fsr2h,f,c
  6297  0009F8  50DF               	movf	indf2,w,c
  6298  0009FA  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6299  0009FC  501D               	movf	??_process_data_parameterize,w,c
  6300  0009FE  0D01               	mullw	1
  6301  000A00  50F3               	movf	prodl,w,c
  6302  000A02  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6303  000A04  6ED9               	movwf	fsr2l,c
  6304  000A06  50F4               	movf	prodh,w,c
  6305  000A08  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6306  000A0A  6EDA               	movwf	fsr2h,c
  6307  000A0C  50DF               	movf	indf2,w,c
  6308                           
  6309                           ; Switch size 1, requested type "space"
  6310                           ; Number of cases is 2, Range of values is 33 to 59
  6311                           ; switch strategies available:
  6312                           ; Name         Instructions Cycles
  6313                           ; simple_byte            7     4 (average)
  6314                           ;	Chosen strategy is simple_byte
  6315  000A0E  0A21               	xorlw	33	; case 33
  6316  000A10  B4D8               	btfsc	status,2,c
  6317  000A12  D004               	goto	l374
  6318  000A14  0A1A               	xorlw	26	; case 59
  6319  000A16  B4D8               	btfsc	status,2,c
  6320  000A18  D7A1               	goto	l375
  6321  000A1A  D7A9               	goto	l377
  6322  000A1C                     l374:
  6323                           
  6324                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  6325  000A1C  EE20 F029          	lfsr	2,41
  6326  000A20  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6327  000A22  26D9               	addwf	fsr2l,f,c
  6328  000A24  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6329  000A26  22DA               	addwfc	fsr2h,f,c
  6330  000A28  2ADF               	incf	indf2,f,c
  6331  000A2A                     l370:
  6332  000A2A                     l3162:
  6333  000A2A  EE20 F029          	lfsr	2,41
  6334  000A2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6335  000A30  26D9               	addwf	fsr2l,f,c
  6336  000A32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6337  000A34  22DA               	addwfc	fsr2h,f,c
  6338  000A36  50DF               	movf	indf2,w,c
  6339  000A38  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6340  000A3A  501D               	movf	??_process_data_parameterize,w,c
  6341  000A3C  0D01               	mullw	1
  6342  000A3E  50F3               	movf	prodl,w,c
  6343  000A40  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6344  000A42  6ED9               	movwf	fsr2l,c
  6345  000A44  50F4               	movf	prodh,w,c
  6346  000A46  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6347  000A48  6EDA               	movwf	fsr2h,c
  6348  000A4A  0E2A               	movlw	42
  6349  000A4C  18DE               	xorwf	postinc2,w,c
  6350  000A4E  B4D8               	btfsc	status,2,c
  6351  000A50  0012               	return	
  6352  000A52  EE20 F029          	lfsr	2,41
  6353  000A56  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6354  000A58  26D9               	addwf	fsr2l,f,c
  6355  000A5A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6356  000A5C  22DA               	addwfc	fsr2h,f,c
  6357  000A5E  0E28               	movlw	40
  6358  000A60  60DF               	cpfslt	indf2,c
  6359  000A62  0012               	return	
  6360  000A64  EE20 F028          	lfsr	2,40
  6361  000A68  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6362  000A6A  26D9               	addwf	fsr2l,f,c
  6363  000A6C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6364  000A6E  22DA               	addwfc	fsr2h,f,c
  6365  000A70  EE10 F029          	lfsr	1,41
  6366  000A74  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6367  000A76  26E1               	addwf	fsr1l,f,c
  6368  000A78  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6369  000A7A  22E2               	addwfc	fsr1h,f,c
  6370  000A7C  50DE               	movf	postinc2,w,c
  6371  000A7E  18E6               	xorwf	postinc1,w,c
  6372  000A80  B4D8               	btfsc	status,2,c
  6373  000A82  0012               	return	
  6374  000A84  D7B3               	goto	l372
  6375  000A86                     __end_of_process_data_parameterize:
  6376                           	opt stack 0
  6377                           tblptru	equ	0xFF8
  6378                           tblptrh	equ	0xFF7
  6379                           tblptrl	equ	0xFF6
  6380                           tablat	equ	0xFF5
  6381                           prodh	equ	0xFF4
  6382                           prodl	equ	0xFF3
  6383                           intcon	equ	0xFF2
  6384                           intcon2	equ	0xFF1
  6385                           intcon3	equ	0xFF0
  6386                           postinc0	equ	0xFEE
  6387                           wreg	equ	0xFE8
  6388                           indf1	equ	0xFE7
  6389                           postinc1	equ	0xFE6
  6390                           postdec1	equ	0xFE5
  6391                           fsr1h	equ	0xFE2
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           postdec2	equ	0xFDD
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8
  6399                           
  6400 ;; *************** function ___wmul *****************
  6401 ;; Defined at:
  6402 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  multiplier      2   18[COMRAM] unsigned int 
  6405 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  product         2   22[COMRAM] unsigned int 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  2   18[COMRAM] unsigned int 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0, prodl, prodh
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6417 ;;      Params:         4       0       0       0       0       0       0
  6418 ;;      Locals:         2       0       0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0
  6420 ;;      Totals:         6       0       0       0       0       0       0
  6421 ;;Total ram usage:        6 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_powerCalculation
  6428 ;;		_process_data_parameterize
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text39
  6433  00193E                     __ptext39:
  6434                           	opt stack 0
  6435  00193E                     ___wmul:
  6436                           	opt stack 28
  6437                           
  6438                           ;incstack = 0
  6439  00193E  5013               	movf	___wmul@multiplier,w,c
  6440  001940  0215               	mulwf	___wmul@multiplicand,c
  6441  001942  CFF3 F017          	movff	prodl,___wmul@product
  6442  001946  CFF4 F018          	movff	prodh,___wmul@product+1
  6443  00194A  5013               	movf	___wmul@multiplier,w,c
  6444  00194C  0216               	mulwf	___wmul@multiplicand+1,c
  6445  00194E  50F3               	movf	prodl,w,c
  6446  001950  2618               	addwf	___wmul@product+1,f,c
  6447  001952  5014               	movf	___wmul@multiplier+1,w,c
  6448  001954  0215               	mulwf	___wmul@multiplicand,c
  6449  001956  50F3               	movf	prodl,w,c
  6450  001958  2618               	addwf	___wmul@product+1,f,c
  6451  00195A  C017  F013         	movff	___wmul@product,?___wmul
  6452  00195E  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6453  001962  0012               	return	
  6454  001964                     __end_of___wmul:
  6455                           	opt stack 0
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           intcon3	equ	0xFF0
  6465                           postinc0	equ	0xFEE
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           postinc1	equ	0xFE6
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           fsr2h	equ	0xFDA
  6476                           fsr2l	equ	0xFD9
  6477                           status	equ	0xFD8
  6478                           
  6479 ;; *************** function _SPISlaveInit *****************
  6480 ;; Defined at:
  6481 ;;		line 669 in file "SlaveComm_PIC18.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;		None
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;		None
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      void 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6495 ;;      Params:         0       0       0       0       0       0       0
  6496 ;;      Locals:         0       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0
  6498 ;;      Totals:         0       0       0       0       0       0       0
  6499 ;;Total ram usage:        0 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    1
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_communications
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text40
  6510  0016FA                     __ptext40:
  6511                           	opt stack 0
  6512  0016FA                     _SPISlaveInit:
  6513                           	opt stack 28
  6514                           
  6515                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  6516                           
  6517                           ;incstack = 0
  6518  0016FA  9092               	bcf	3986,0,c	;volatile
  6519                           
  6520                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  6521  0016FC  8292               	bsf	3986,1,c	;volatile
  6522                           
  6523                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  6524  0016FE  9694               	bcf	3988,3,c	;volatile
  6525                           
  6526                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  6527  001700  9A94               	bcf	3988,5,c	;volatile
  6528                           
  6529                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  6530  001702  9C94               	bcf	3988,6,c	;volatile
  6531                           
  6532                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  6533  001704  9E94               	bcf	3988,7,c	;volatile
  6534                           
  6535                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  6536  001706  010F               	movlb	15	; () banked
  6537  001708  9338               	bcf	56,1,b	;volatile
  6538                           
  6539                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6540  00170A  8C8B               	bsf	3979,6,c	;volatile
  6541                           
  6542                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6543  00170C  868B               	bsf	3979,3,c	;volatile
  6544                           
  6545                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6546  00170E  8A8B               	bsf	3979,5,c	;volatile
  6547                           
  6548                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6549  001710  8E8B               	bsf	3979,7,c	;volatile
  6550                           
  6551                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6552  001712  9A6C               	bcf	3948,5,c	;volatile
  6553                           
  6554                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6555  001714  010F               	movlb	15	; () banked
  6556  001716  9139               	bcf	57,0,b	;volatile
  6557                           
  6558                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6559  001718  010F               	movlb	15	; () banked
  6560  00171A  9339               	bcf	57,1,b	;volatile
  6561                           
  6562                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6563  00171C  010F               	movlb	15	; () banked
  6564  00171E  9539               	bcf	57,2,b	;volatile
  6565                           
  6566                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6567  001720  010F               	movlb	15	; () banked
  6568  001722  9739               	bcf	57,3,b	;volatile
  6569                           
  6570                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6571  001724  8093               	bsf	3987,0,c	;volatile
  6572                           
  6573                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6574  001726  8293               	bsf	3987,1,c	;volatile
  6575                           
  6576                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6577  001728  8493               	bsf	3987,2,c	;volatile
  6578                           
  6579                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6580  00172A  9693               	bcf	3987,3,c	;volatile
  6581                           
  6582                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6583  00172C  9E6D               	bcf	3949,7,c	;volatile
  6584                           
  6585                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6586  00172E  8C6D               	bsf	3949,6,c	;volatile
  6587                           
  6588                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6589  001730  9E6C               	bcf	3948,7,c	;volatile
  6590                           
  6591                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6592  001732  9C6C               	bcf	3948,6,c	;volatile
  6593                           
  6594                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6595  001734  9A6C               	bcf	3948,5,c	;volatile
  6596                           
  6597                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6598  001736  886C               	bsf	3948,4,c	;volatile
  6599                           
  6600                           ; BSR set to: 15
  6601                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6602  001738  506C               	movf	3948,w,c	;volatile
  6603  00173A  0BF0               	andlw	-16
  6604  00173C  0904               	iorlw	4
  6605  00173E  6E6C               	movwf	3948,c	;volatile
  6606                           
  6607                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6608  001740  0E00               	movlw	0
  6609  001742  6E69               	movwf	3945,c	;volatile
  6610                           
  6611                           ; BSR set to: 15
  6612                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6613  001744  9869               	bcf	3945,4,c	;volatile
  6614                           
  6615                           ; BSR set to: 15
  6616                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6617  001746  8A6C               	bsf	3948,5,c	;volatile
  6618  001748  0012               	return	
  6619  00174A                     __end_of_SPISlaveInit:
  6620                           	opt stack 0
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           intcon2	equ	0xFF1
  6629                           intcon3	equ	0xFF0
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           postinc1	equ	0xFE6
  6634                           postdec1	equ	0xFE5
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function _Timer0_ISR *****************
  6645 ;; Defined at:
  6646 ;;		line 227 in file "Current_Sense_Main.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      void 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6660 ;;      Params:         0       0       0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0
  6662 ;;      Temps:         18       0       0       0       0       0       0
  6663 ;;      Totals:        18       0       0       0       0       0       0
  6664 ;;Total ram usage:       18 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		Interrupt level 2
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	intcode
  6674  000008                     __pintcode:
  6675                           	opt stack 0
  6676  000008                     _Timer0_ISR:
  6677                           	opt stack 23
  6678                           
  6679                           ; BSR set to: 15
  6680                           ;incstack = 0
  6681  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6682  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6683  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6684  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6685  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6686  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6687  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6688  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6689  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6690  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6691  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6692  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6693  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6694  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6695  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6696  000042  C04C  F00F         	movff	btemp,??_Timer0_ISR+14
  6697  000046  C04D  F010         	movff	btemp+1,??_Timer0_ISR+15
  6698  00004A  C04E  F011         	movff	btemp+2,??_Timer0_ISR+16
  6699  00004E  C04F  F012         	movff	btemp+3,??_Timer0_ISR+17
  6700                           
  6701                           ;Current_Sense_Main.c: 230: INTCONbits.TMR0IF = 0;
  6702  000052  94F2               	bcf	intcon,2,c	;volatile
  6703                           
  6704                           ;Current_Sense_Main.c: 232: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6705  000054  0EFC               	movlw	252
  6706  000056  6ED7               	movwf	4055,c	;volatile
  6707                           
  6708                           ;Current_Sense_Main.c: 233: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6709  000058  0E18               	movlw	24
  6710  00005A  6ED6               	movwf	4054,c	;volatile
  6711                           
  6712                           ;Current_Sense_Main.c: 235: timerCountHF++;
  6713  00005C  0E01               	movlw	1
  6714  00005E  0100               	movlb	0	; () banked
  6715  000060  2784               	addwf	_timerCountHF& (0+255),f,b	;volatile
  6716  000062  0E00               	movlw	0
  6717  000064  2385               	addwfc	(_timerCountHF+1)& (0+255),f,b	;volatile
  6718  000066  2386               	addwfc	(_timerCountHF+2)& (0+255),f,b	;volatile
  6719  000068  2387               	addwfc	(_timerCountHF+3)& (0+255),f,b	;volatile
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;Current_Sense_Main.c: 236: timerCountLF++;
  6723  00006A  0E01               	movlw	1
  6724  00006C  0100               	movlb	0	; () banked
  6725  00006E  2780               	addwf	_timerCountLF& (0+255),f,b	;volatile
  6726  000070  0E00               	movlw	0
  6727  000072  2381               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  6728  000074  2382               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  6729  000076  2383               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  6730                           
  6731                           ;Current_Sense_Main.c: 237: dataAvailable = 1;
  6732  000078  0E01               	movlw	1
  6733  00007A  6E4A               	movwf	_dataAvailable,c
  6734                           
  6735                           ; BSR set to: 0
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;Current_Sense_Main.c: 239: return;
  6739  00007C  C012  F04F         	movff	??_Timer0_ISR+17,btemp+3
  6740  000080  C011  F04E         	movff	??_Timer0_ISR+16,btemp+2
  6741  000084  C010  F04D         	movff	??_Timer0_ISR+15,btemp+1
  6742  000088  C00F  F04C         	movff	??_Timer0_ISR+14,btemp
  6743  00008C  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6744  000090  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6745  000094  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6746  000098  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6747  00009C  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6748  0000A0  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6749  0000A4  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6750  0000A8  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6751  0000AC  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6752  0000B0  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6753  0000B4  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6754  0000B8  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6755  0000BC  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6756  0000C0  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6757  0000C4  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6758  0000C6  0011               	retfie		f
  6759  0000C8                     __end_of_Timer0_ISR:
  6760                           	opt stack 0
  6761                           pclatu	equ	0xFFB
  6762                           pclath	equ	0xFFA
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           intcon	equ	0xFF2
  6770                           intcon2	equ	0xFF1
  6771                           intcon3	equ	0xFF0
  6772                           postinc0	equ	0xFEE
  6773                           fsr0h	equ	0xFEA
  6774                           fsr0l	equ	0xFE9
  6775                           wreg	equ	0xFE8
  6776                           indf1	equ	0xFE7
  6777                           postinc1	equ	0xFE6
  6778                           postdec1	equ	0xFE5
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           indf2	equ	0xFDF
  6782                           postinc2	equ	0xFDE
  6783                           postdec2	equ	0xFDD
  6784                           fsr2h	equ	0xFDA
  6785                           fsr2l	equ	0xFD9
  6786                           status	equ	0xFD8
  6787                           pclatu	equ	0xFFB
  6788                           pclath	equ	0xFFA
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           prodh	equ	0xFF4
  6794                           prodl	equ	0xFF3
  6795                           intcon	equ	0xFF2
  6796                           intcon2	equ	0xFF1
  6797                           intcon3	equ	0xFF0
  6798                           postinc0	equ	0xFEE
  6799                           fsr0h	equ	0xFEA
  6800                           fsr0l	equ	0xFE9
  6801                           wreg	equ	0xFE8
  6802                           indf1	equ	0xFE7
  6803                           postinc1	equ	0xFE6
  6804                           postdec1	equ	0xFE5
  6805                           fsr1h	equ	0xFE2
  6806                           fsr1l	equ	0xFE1
  6807                           indf2	equ	0xFDF
  6808                           postinc2	equ	0xFDE
  6809                           postdec2	equ	0xFDD
  6810                           fsr2h	equ	0xFDA
  6811                           fsr2l	equ	0xFD9
  6812                           status	equ	0xFD8
  6813                           
  6814                           	psect	rparam
  6815  0000                     pclatu	equ	0xFFB
  6816                           pclath	equ	0xFFA
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           prodh	equ	0xFF4
  6822                           prodl	equ	0xFF3
  6823                           intcon	equ	0xFF2
  6824                           intcon2	equ	0xFF1
  6825                           intcon3	equ	0xFF0
  6826                           postinc0	equ	0xFEE
  6827                           fsr0h	equ	0xFEA
  6828                           fsr0l	equ	0xFE9
  6829                           wreg	equ	0xFE8
  6830                           indf1	equ	0xFE7
  6831                           postinc1	equ	0xFE6
  6832                           postdec1	equ	0xFE5
  6833                           fsr1h	equ	0xFE2
  6834                           fsr1l	equ	0xFE1
  6835                           indf2	equ	0xFDF
  6836                           postinc2	equ	0xFDE
  6837                           postdec2	equ	0xFDD
  6838                           fsr2h	equ	0xFDA
  6839                           fsr2l	equ	0xFD9
  6840                           status	equ	0xFD8
  6841                           
  6842                           	psect	temp
  6843  00004C                     btemp:
  6844                           	opt stack 0
  6845  00004C                     	ds	1
  6846  0000                     int$flags	set	btemp
  6847  0000                     wtemp6	set	btemp+1
  6848                           pclatu	equ	0xFFB
  6849                           pclath	equ	0xFFA
  6850                           tblptru	equ	0xFF8
  6851                           tblptrh	equ	0xFF7
  6852                           tblptrl	equ	0xFF6
  6853                           tablat	equ	0xFF5
  6854                           prodh	equ	0xFF4
  6855                           prodl	equ	0xFF3
  6856                           intcon	equ	0xFF2
  6857                           intcon2	equ	0xFF1
  6858                           intcon3	equ	0xFF0
  6859                           postinc0	equ	0xFEE
  6860                           fsr0h	equ	0xFEA
  6861                           fsr0l	equ	0xFE9
  6862                           wreg	equ	0xFE8
  6863                           indf1	equ	0xFE7
  6864                           postinc1	equ	0xFE6
  6865                           postdec1	equ	0xFE5
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        6
    BSS         154
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      75
    BANK0           160     19     117
    BANK1           256     51      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerCalculation->___awdiv
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   98759
                                             14 BANK0      5     5      0
                     _communications
                          _delayMS10
                   _energyPulseCheck
                               _init
                            _initMCP
                          _initTimer
                   _powerCalculation
                  _pulseFoutPassThru
                     _readSerialData
 ---------------------------------------------------------------------------------
 (1) _readSerialData                                       1     1      0      65
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerCalculation                                     9     9      0    1750
                                             26 COMRAM     9     9      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                _initInterruptsClear
                            _initMCP
                            _initOSC
                            _initSPI
 ---------------------------------------------------------------------------------
 (2) _initSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCP                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _energyPulseCheck                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     428
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   96343
                                             12 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   45863
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15906
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     598
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             51 COMRAM     4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47206
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15996
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2200
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1841
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _energyPulseCheck
   _init
     _initIO
     _initInterruptsClear
     _initMCP
     _initOSC
     _initSPI
   _initMCP
   _initTimer
   _powerCalculation
     ___awdiv
     ___wmul
   _pulseFoutPassThru
   _readSerialData

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      75       4       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4B       1       79.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D       9        0.0%
DATA                 0      0     11D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu May 03 11:49:08 2018

                                       _SPISlaveInit 16FA                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                         __CFG_CP0$OFF 000000  
                                       __CFG_CP1$OFF 000000                                         __CFG_CP2$OFF 000000  
                                       __CFG_CP3$OFF 000000                                                  l210 0C22  
                                                l220 1878                                                  l212 0C3C  
                                                l140 0F64                                                  l221 1866  
                                                l213 0C3E                                                  l214 0C6E  
                                                l215 0C50                                                  l151 197C  
                                                l135 0ECC                                                  l401 0828  
                                                l217 0CBC                                                  l137 0F00  
                                                l411 0902                                                  l403 0854  
                                                l331 10B6                                                  l405 0880  
                                                l333 1082                                                  l149 1980  
                                                l510 1676                                                  l350 11F0  
                                                l166 153A                                                  l190 1266  
                                                l431 1494                                                  l407 08AC  
                                                l327 1072                                                  l432 1456  
                                                l360 1032                                                  l440 1342  
                                                l168 150A                                                  l192 127C  
                                                l409 08D8                                                  l361 1044  
                                                l345 11FC                                                  l337 10D0  
                                                l329 10A2                                                  l169 14EA  
                                                l370 0A2A                                                  l346 11C8  
                                                l194 1290                                                  l451 0AFE  
                                                l339 10E2                                                  l372 09EC  
                                                l356 0F94                                                  l348 11D6  
                                                l188 123C                                                  l509 1662  
                                                l349 11E4                                                  l437 12E2  
                                                l374 0A1C                                                  l358 0FD8  
                                                l375 095C                                                  l447 0B02  
                                                l463 1910                                                  l368 092A  
                                                l448 0A98                                                  l464 1914  
                                                l377 096E                                                  l457 0B70  
                                                l449 0ACC                                                  l385 0684  
                                                l378 09C2                                                  l394 07E2  
                                                l459 0BA8                                                  l387 0708  
                                                l396 079E                                                  l468 19A0  
                                                l663 0DF4                                                  l920 0CCE  
                                                l680 136A                                                  l841 19BE  
                                                l666 0E52                                                  l922 0D26  
                                                l682 1388                                                  l667 0DFE  
                                                l923 0D90                                                  l683 1380  
                                                l669 0E96                                                  l686 13A8  
                                                l871 142C                                                  l687 13B2  
                                                l679 135A                                                  l872 143A  
                                                l688 13C0                                                  l881 1586  
                                                l882 1594                                                  l867 13F8  
                                                l868 13EC                                                  l877 155E  
                                                l878 1552                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                            powerCalculation@counter 0038                                                 l3162 0A2A  
                                               l3632 0EB6                                                 l3538 14EA  
                                               l3650 0F00                                                 l3644 0EF0  
                                               l3670 0F4E                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2210 1562  
                                               u3010 122E                                                 u2140 148A  
                                               u2150 14C0                                                 u2400 18EA  
                                               u2147 1480                                                 u2180 13FC  
                                               u3140 0EF0                                                 u2157 14B6  
                                               u2270 0B3A                                                 u3207 118E  
                                               u3160 0F3A                                                 _IPR1 000F9F  
                                               u2390 18E8                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               u2480 0928                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u3197 186C  
                                               u2860 138C                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                          readSerialData@readingData 0047                                                 _atol 0DB4  
                                               _main 0EA8                                                 _init 19F6  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004C                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C8  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 00C9  
                                        _voltageData 003C                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 1048  
                                       main@inx_1350 00CD                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                    __end_of___awdiv 13CA                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 144C                                      ___awdiv@divisor 0015  
                                    __end_of___llmod 15A6                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                    ___awdiv@counter 0017                                         main@initDone 00CA  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 174A                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0031                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initMCP 1A46  
                                    __end_of_initOSC 19F6                                      __end_of_initSPI 1A34  
                                    __end_of_isdigit 19C6                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0CBE  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004D  
                                    __end_of_strcmp2 0BB2                                       __CFG_HFOFST$ON 000000  
                          __size_of_powerCalculation 010C                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 002D  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001D  
                                    __initialization 16A8                                         __end_of_atol 0EA8  
                                       __end_of_main 0F88                                         __end_of_init 1A0C  
                             __end_of_communications 10E8                               _com_command_setVersion 1918  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 18F0  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 0038                                               ??_init 0013  
                                      _SPI_send_data 1988                                        __activetblptr 000002  
                            _process_data_parameters 0660                         powerCalculation@instantPower 0060  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                   ___awdiv@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 1652  
                                             ___wmul 193E                                            ??___awdiv 0017  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                           __end_of_energyPulseCheck 1540                                               _initIO 182A  
                                             clear_0 16CE                                               clear_1 16DA  
                                             clear_2 16E6                                     ___awdiv@quotient 0019  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 002D  
                                          ??_initMCP 0013                                            ??_initOSC 0013  
                                          ??_initSPI 0013                            _process_data_parameterize 0906  
                               readSerialData@drFlag 0046                                            ??_isdigit 0013  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 00BC  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 18F0                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 16EC  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1A46                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0DB4  
                          ??_process_data_parameters 0033                         communications@receive_buffer 0133  
                              _powerCalculation$2941 001C                                _powerCalculation$2942 001E  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 14C8  
                         _command_builder_add_string 144C                                              ??_ultoa 0028  
                                         __pbssBANK0 0060                                           __pbssBANK1 0133  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                   _powerCalculation 0BB2                                         strcmp2@match 001A  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                    _pulseFoutPassThru 1964  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 0013                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 0033  
         communications@end_of_transmission_received 0041                                       ___lmul@product 001B  
                        __end_of_resetCommunications 1222                                      _meterEnergyUsed 0088  
                                ??_pulseFoutPassThru 0013                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 17E0  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1A0C  
                                            _SSP1BUF 000FC9                                              _SSP2BUF 000F6F  
                            __size_of_readSerialData 0094                             _command_builder_add_char 15FC  
                                  __end_of_delayMS10 188E                      __end_of_process_data_parameters 0906  
                           __end_of_SPI_receive_data 1918                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E                            __end_of_pulseFoutPassThru 1988  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0027  
                                            __Lparam 0000                                              ___awdiv 1346  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 13CA                                      __size_of___wmul 0026  
                                            ___llmod 1540                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0032  
                                            __pcinit 16A8                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0EA8  
                                            __ptext1 1222                                              __ptext2 1964  
                                            __ptext3 0BB2                                              __ptext4 1346  
                                            __ptext5 19C6                                              __ptext6 19F6  
                                            __ptext7 1A22                                              __ptext8 19DE  
                                            __ptext9 1A34                                           _meterWatts 008C  
                                          _T0CONbits 000FD5                                              _initMCP 1A34  
                                            _initOSC 19DE                                    __end_of_initTimer 19DE  
                                            _initSPI 1A22                                              _isdigit 19A8  
                energyPulseCheck@meterEnergyUsedPart 007C                                  __size_of_Timer0_ISR 00C0  
                                            main@inx 00CB                                              _strcmp2 0A86  
                                      _dataAvailable 004A                                 end_of_initialization 16EC  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 1346  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 193E  
                                   ??_communications 0038                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postdec2 000FDD  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                    ?_energyPulseCheck 0001  
                              receive_data@my_status 003E                                 __end_of_receive_data 1048  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                                 ??_energyPulseCheck 0013                      communications@last_state_active 003F  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 0034  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 0034  
                        __end_of_initInterruptsClear 1796                    __end_of_process_data_parameterize 0A86  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 1796  
                communications@receive_current_state 0040                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 16A8                                       __end_of___wmul 1964  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 185C  
                                     ??_process_data 0038                             __end_of_powerCalculation 0CBE  
                        ?_command_builder_add_string 0017                                  start_initialization 16A8  
                                     _readSerialData 1222                         resetCommunications@commState 0090  
                                   _command_builder1 15A6                                     _command_builder3 10E8  
                          _com_command_setEnergyUsed 17E0                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 002D                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    powerCalculation@i 0022  
                                        __pdataBANK0 00CF                                             ??_initIO 0013  
                         ??_send_end_of_transmission 0025                         energyPulseCheck@mcpLFoutLast 0048  
                         ??_command_builder_add_char 0016                               __end_of_readSerialData 12B6  
                                        __pbssCOMRAM 0038                                        __pcstackBANK0 00BC  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C8                                         _isdigit$2583 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 185C                        com_command_setEnergyUsed@temp 00BC  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 002F                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___awdiv 0013                                             ?___lldiv 0013  
                                           ?___llmod 0013                                __end_of_SPI_send_data 19A8  
                      powerCalculation@voltageScalar 00D1                                             ?_initMCP 0001  
                                           ?_initOSC 0001                                             ?_initSPI 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 002F  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                    ?_readSerialData 0001                                    send_data@send_end 0019  
                                          _initTimer 19C6                                             ?_strcmp2 0013  
                       __size_of_resetCommunications 009C                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                  process_data_parameterize@parameters 0019  
                           pulseFoutPassThru@runonce 0049                                         _receive_data 0F88  
                                     ___wmul@product 0017                                             _LATAbits 000F89  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 0013                                 __end_of_process_data 18C0  
                                          _send_data 12B6                               ??_com_command_setPower 002F  
                  process_data_parameters@parameters 002F                                             _PIR1bits 000F9E  
                      powerCalculation@currentScalar 00CF                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                            powerCalculation@realPower 0020  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 174A                            __size_of_energyPulseCheck 0078  
                                          copy_data0 16BC             process_data@end_of_transmission_received 0132  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001F                                    __CFG_P2BMX$PORTB5 000000  
                                 readSerialData@data 0013                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___awdiv 0084                     __end_of_send_end_of_transmission 1A22  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                   __end_of_command_builder_add_char 1652                             __end_of_command_builder1 15FC  
                           __end_of_command_builder3 1186                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                          _currentData 003A  
                                  ?_powerCalculation 0001                                             _dataRead 004B  
                                   __size_of_initMCP 0012                                     __size_of_initOSC 0018  
                                   __size_of_initSPI 0012                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                 ??_powerCalculation 001B                                             __ptext10 174A  
                                           __ptext11 182A                                             __ptext20 0F88  
                                           __ptext12 14C8                                             __ptext21 18F0  
                                           __ptext13 185C                                             __ptext30 1540  
                                           __ptext22 188E                                             __ptext14 1048  
                                           __ptext31 13CA                                             __ptext23 0660  
                                           __ptext15 12B6                                             __ptext40 16FA  
                                           __ptext32 10E8                                             __ptext24 18C0  
                                           __ptext16 1988                                             __ptext33 144C  
                                           __ptext25 0A86                                             __ptext17 1186  
                                           __ptext34 15FC                                             __ptext26 1A0C  
                                           __ptext18 1918                                             __ptext35 0DB4  
                                           __ptext27 15A6                                             __ptext19 1796  
                                           __ptext36 19A8                                             __ptext28 17E0  
                                           __ptext37 1652                                             __ptext29 0CBE  
                                           __ptext38 0906                                             __ptext39 193E  
                                       _SSP1CON1bits 000FC6                              readSerialData@byte1Read 0045  
                            readSerialData@byte2Read 0044                                         _SSP2CON1bits 000F6C  
                            readSerialData@byte3Read 0043                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                      __size_of_atol 00F4                                        __size_of_main 00E0  
                                      strmatch@match 0024                                        __size_of_init 0016  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                       __size_of_initInterruptsClear 004C                                             int$flags 004C  
                                           atol@sign 0027                                         _SSP1STATbits 000FC7  
                               powerCalculation@size 00D3                    __end_of_com_command_setEnergyUsed 182A  
                            __size_of_communications 00A0                                             _strmatch 18C0  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0036  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                        ??_initTimer 0013                                             isdigit@c 0015  
                                          ultoa@base 0026                             ??_com_command_setVersion 0029  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 0100                                         _timerCountHF 0084  
                                       _timerCountLF 0080                                     ___lldiv@dividend 0013  
                      communications@no_more_to_send 00C8                                          ??_send_data 0017  
                                          strmatch@a 001E                                            strmatch@b 0020  
                                         _OSCCONbits 000FD3                                  _resetCommunications 1186  
                                   ??_readSerialData 0013                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 0020                                             ultoa@val 0022  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                   ___lldiv@quotient 001B                                         _process_data 188E  
                                  _SPI_transmit_wait 0042                                __size_of_SPISlaveInit 0050  
                          communications@send_buffer 0092                     __size_of_process_data_parameters 02A6  
                                  __CFG_T3CMX$PORTC0 000000                                     _energyPulseCheck 14C8  
                               ?_resetCommunications 002F                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0023                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0013  
