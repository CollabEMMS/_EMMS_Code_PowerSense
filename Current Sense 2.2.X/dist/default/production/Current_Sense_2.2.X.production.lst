

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Mar 26 14:33:06 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.43
    60                           ; Generated 25/07/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18LF25K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  001A6E                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for powerPulseCheck@timerCountHFCheck
    99  001A6E  0001               	dw	1
   100                           
   101                           ;initializer for powerPulseCheck@firstPulse
   102  001A70  01                 	db	1
   103                           
   104                           	psect	idataBANK0
   105  001A48                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for initMCPFout@F6870
   109  001A48  0001               	dw	1
   110  001A4A  0000               	dw	0
   111  001A4C  0001               	dw	1
   112  001A4E  0000               	dw	0
   113  001A50  0001               	dw	1
   114  001A52  0001               	dw	1
   115  001A54  0000               	dw	0
   116  001A56  0000               	dw	0
   117                           
   118                           ;initializer for powerPulseCheck@timerCountHFLast
   119  001A58  FFFF               	dw	65535
   120  001A5A  7FFF               	dw	32767
   121  0000                     _ANSELBbits	set	3897
   122  0000                     _ANSELAbits	set	3896
   123  0000                     _ANSELC	set	3898
   124  0000                     _ANSELB	set	3897
   125  0000                     _ANSELA	set	3896
   126  0000                     _SSP2CON3bits	set	3945
   127  0000                     _SSP2CON3	set	3945
   128  0000                     _SSP2BUF	set	3951
   129  0000                     _SSP2STATbits	set	3949
   130  0000                     _SSP2CON1bits	set	3948
   131  0000                     _T0CONbits	set	4053
   132  0000                     _IPR5	set	3967
   133  0000                     _IPR4	set	3964
   134  0000                     _IPR3	set	4005
   135  0000                     _IPR2	set	4002
   136  0000                     _IPR1	set	3999
   137  0000                     _PIE5	set	3965
   138  0000                     _PIE4	set	3962
   139  0000                     _PIE3	set	4003
   140  0000                     _PIE2	set	4000
   141  0000                     _PIE1	set	3997
   142  0000                     _PIR5	set	3966
   143  0000                     _PIR4	set	3963
   144  0000                     _PIR3	set	4004
   145  0000                     _PIR2	set	4001
   146  0000                     _PIR1	set	3998
   147  0000                     _RCONbits	set	4048
   148  0000                     _INTCON3	set	4080
   149  0000                     _INTCON2	set	4081
   150  0000                     _INTCON	set	4082
   151  0000                     _TRISAbits	set	3986
   152  0000                     _TRISCbits	set	3988
   153  0000                     _TRISBbits	set	3987
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _OSCTUNEbits	set	3995
   156  0000                     _OSCCON2bits	set	4050
   157  0000                     _OSCCONbits	set	4051
   158  0000                     _LATCbits	set	3979
   159  0000                     _PORTAbits	set	3968
   160  0000                     _TMR0L	set	4054
   161  0000                     _TMR0H	set	4055
   162  0000                     _INTCONbits	set	4082
   163  0000                     _PORTBbits	set	3969
   164  0000                     _LATAbits	set	3977
   165  0000                     _PORTCbits	set	3970
   166  0000                     _LATBbits	set	3978
   167                           
   168                           	psect	smallconst
   169  000600                     __psmallconst:
   170                           	opt stack 0
   171  000600  00                 	db	0
   172  000601                     STR_3:
   173                           
   174                           ; BSR set to: 0
   175  000601  43                 	db	67	;'C'
   176  000602  61                 	db	97	;'a'
   177  000603  6C                 	db	108	;'l'
   178  000604  69                 	db	105	;'i'
   179  000605  62                 	db	98	;'b'
   180  000606  72                 	db	114	;'r'
   181  000607  61                 	db	97	;'a'
   182  000608  74                 	db	116	;'t'
   183  000609  69                 	db	105	;'i'
   184  00060A  6F                 	db	111	;'o'
   185  00060B  6E                 	db	110	;'n'
   186  00060C  00                 	db	0
   187  00060D                     STR_22:
   188                           
   189                           ; BSR set to: 0
   190  00060D  50                 	db	80	;'P'
   191  00060E  53                 	db	83	;'S'
   192  00060F  56                 	db	86	;'V'
   193  000610  65                 	db	101	;'e'
   194  000611  72                 	db	114	;'r'
   195  000612  73                 	db	115	;'s'
   196  000613  69                 	db	105	;'i'
   197  000614  6F                 	db	111	;'o'
   198  000615  6E                 	db	110	;'n'
   199  000616  00                 	db	0
   200  000617                     STR_4:
   201                           
   202                           ; BSR set to: 0
   203  000617  45                 	db	69	;'E'
   204  000618  6E                 	db	110	;'n'
   205  000619  55                 	db	85	;'U'
   206  00061A  73                 	db	115	;'s'
   207  00061B  65                 	db	101	;'e'
   208  00061C  64                 	db	100	;'d'
   209  00061D  00                 	db	0
   210  00061E                     STR_20:
   211                           
   212                           ; BSR set to: 0
   213  00061E  56                 	db	86	;'V'
   214  00061F  6F                 	db	111	;'o'
   215  000620  6C                 	db	108	;'l'
   216  000621  74                 	db	116	;'t'
   217  000622  73                 	db	115	;'s'
   218  000623  00                 	db	0
   219  000624                     STR_18:
   220                           
   221                           ; BSR set to: 0
   222  000624  57                 	db	87	;'W'
   223  000625  61                 	db	97	;'a'
   224  000626  74                 	db	116	;'t'
   225  000627  74                 	db	116	;'t'
   226  000628  73                 	db	115	;'s'
   227  000629  00                 	db	0
   228  00062A                     STR_7:
   229                           
   230                           ; BSR set to: 0
   231  00062A  4C                 	db	76	;'L'
   232  00062B  45                 	db	69	;'E'
   233  00062C  44                 	db	68	;'D'
   234  00062D  42                 	db	66	;'B'
   235  00062E  00                 	db	0
   236  00062F                     STR_6:
   237                           
   238                           ; BSR set to: 0
   239  00062F  44                 	db	68	;'D'
   240  000630  61                 	db	97	;'a'
   241  000631  74                 	db	116	;'t'
   242  000632  61                 	db	97	;'a'
   243  000633  00                 	db	0
   244  000634                     STR_5:
   245                           
   246                           ; BSR set to: 0
   247  000634  52                 	db	82	;'R'
   248  000635  65                 	db	101	;'e'
   249  000636  61                 	db	97	;'a'
   250  000637  64                 	db	100	;'d'
   251  000638  00                 	db	0
   252  000639                     STR_16:
   253                           
   254                           ; BSR set to: 0
   255  000639  43                 	db	67	;'C'
   256  00063A  6F                 	db	111	;'o'
   257  00063B  6E                 	db	110	;'n'
   258  00063C  66                 	db	102	;'f'
   259  00063D  00                 	db	0
   260  00063E                     STR_21:
   261                           
   262                           ; BSR set to: 0
   263  00063E  41                 	db	65	;'A'
   264  00063F  6D                 	db	109	;'m'
   265  000640  70                 	db	112	;'p'
   266  000641  73                 	db	115	;'s'
   267  000642  00                 	db	0
   268  000643                     
   269                           ; BSR set to: 0
   270  000643  32                 	db	50	;'2'
   271  000644  32                 	db	50	;'2'
   272  000645  32                 	db	50	;'2'
   273  000646  00                 	db	0
   274  000647                     
   275                           ; BSR set to: 0
   276  000647  33                 	db	51	;'3'
   277  000648  33                 	db	51	;'3'
   278  000649  33                 	db	51	;'3'
   279  00064A  00                 	db	0
   280  00064B                     STR_40:
   281                           
   282                           ; BSR set to: 0
   283  00064B  34                 	db	52	;'4'
   284  00064C  34                 	db	52	;'4'
   285  00064D  34                 	db	52	;'4'
   286  00064E  00                 	db	0
   287  00064F                     STR_1:
   288                           
   289                           ; BSR set to: 0
   290  00064F  45                 	db	69	;'E'
   291  000650  4E                 	db	78	;'N'
   292  000651  44                 	db	68	;'D'
   293  000652  00                 	db	0
   294  000653                     STR_11:
   295                           
   296                           ; BSR set to: 0
   297  000653  4F                 	db	79	;'O'
   298  000654  66                 	db	102	;'f'
   299  000655  66                 	db	102	;'f'
   300  000656  00                 	db	0
   301  000657                     STR_2:
   302                           
   303                           ; BSR set to: 0
   304  000657  53                 	db	83	;'S'
   305  000658  65                 	db	101	;'e'
   306  000659  74                 	db	116	;'t'
   307  00065A  00                 	db	0
   308  00065B                     STR_8:
   309                           
   310                           ; BSR set to: 0
   311  00065B  4F                 	db	79	;'O'
   312  00065C  6E                 	db	110	;'n'
   313  00065D  00                 	db	0
   314  0000                     
   315                           ; #config settings
   316  00065E  00                 	db	0	; dummy byte at the end
   317  0000                     
   318                           	psect	cinit
   319  00156A                     __pcinit:
   320                           	opt stack 0
   321  00156A                     start_initialization:
   322                           	opt stack 0
   323  00156A                     __initialization:
   324                           	opt stack 0
   325                           
   326                           ; Initialize objects allocated to BANK0 (20 bytes)
   327                           ; load TBLPTR registers with __pidataBANK0
   328  00156A  0E48               	movlw	low __pidataBANK0
   329  00156C  6EF6               	movwf	tblptrl,c
   330  00156E  0E1A               	movlw	high __pidataBANK0
   331  001570  6EF7               	movwf	tblptrh,c
   332  001572  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   333  001574  6EF8               	movwf	tblptru,c
   334  001576  EE00  F0DC         	lfsr	0,__pdataBANK0
   335  00157A  EE10 F014          	lfsr	1,20
   336  00157E                     copy_data0:
   337  00157E  0009               	tblrd		*+
   338  001580  CFF5 FFEE          	movff	tablat,postinc0
   339  001584  50E5               	movf	postdec1,w,c
   340  001586  50E1               	movf	fsr1l,w,c
   341  001588  E1FA               	bnz	copy_data0
   342                           
   343                           ; Initialize objects allocated to COMRAM (3 bytes)
   344                           ; load TBLPTR registers with __pidataCOMRAM
   345  00158A  0E6E               	movlw	low __pidataCOMRAM
   346  00158C  6EF6               	movwf	tblptrl,c
   347  00158E  0E1A               	movlw	high __pidataCOMRAM
   348  001590  6EF7               	movwf	tblptrh,c
   349  001592  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   350  001594  6EF8               	movwf	tblptru,c
   351  001596  0009               	tblrd		*+	;fetch initializer
   352  001598  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   353  00159C  0009               	tblrd		*+	;fetch initializer
   354  00159E  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   355  0015A2  0009               	tblrd		*+	;fetch initializer
   356  0015A4  CFF5 F04C          	movff	tablat,__pdataCOMRAM+2
   357                           
   358                           ; Clear objects allocated to BANK1 (42 bytes)
   359  0015A8  EE01  F000         	lfsr	0,__pbssBANK1
   360  0015AC  0E2A               	movlw	42
   361  0015AE                     clear_0:
   362  0015AE  6AEE               	clrf	postinc0,c
   363  0015B0  06E8               	decf	wreg,f,c
   364  0015B2  E1FD               	bnz	clear_0
   365                           
   366                           ; Clear objects allocated to BANK0 (58 bytes)
   367  0015B4  EE00  F0A2         	lfsr	0,__pbssBANK0
   368  0015B8  0E3A               	movlw	58
   369  0015BA                     clear_1:
   370  0015BA  6AEE               	clrf	postinc0,c
   371  0015BC  06E8               	decf	wreg,f,c
   372  0015BE  E1FD               	bnz	clear_1
   373                           
   374                           ; Clear objects allocated to COMRAM (14 bytes)
   375  0015C0  EE00  F03C         	lfsr	0,__pbssCOMRAM
   376  0015C4  0E0E               	movlw	14
   377  0015C6                     clear_2:
   378  0015C6  6AEE               	clrf	postinc0,c
   379  0015C8  06E8               	decf	wreg,f,c
   380  0015CA  E1FD               	bnz	clear_2
   381  0015CC                     end_of_initialization:
   382                           	opt stack 0
   383  0015CC                     __end_of__initialization:
   384                           	opt stack 0
   385  0015CC  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   386  0015CE  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   387  0015D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   388  0015D2  6EF8               	movwf	tblptru,c
   389  0015D4  0100               	movlb	0
   390  0015D6  EF97  F007         	goto	_main	;jump to C main() function
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	bssCOMRAM
   401  00003C                     __pbssCOMRAM:
   402                           	opt stack 0
   403  00003C                     _timerCountLF:
   404                           	opt stack 0
   405  00003C                     	ds	4
   406  000040                     resetCommunications@commState:
   407                           	opt stack 0
   408  000040                     	ds	2
   409  000042                     receive_data@my_status:
   410                           	opt stack 0
   411  000042                     	ds	1
   412  000043                     communications@last_state_active:
   413                           	opt stack 0
   414  000043                     	ds	1
   415  000044                     communications@receive_current_state:
   416                           	opt stack 0
   417  000044                     	ds	1
   418  000045                     communications@end_of_transmission_received:
   419                           	opt stack 0
   420  000045                     	ds	1
   421  000046                     _SPI_transmit_wait:
   422                           	opt stack 0
   423  000046                     	ds	1
   424  000047                     powerPulseCheck@mcpLFoutLast:
   425                           	opt stack 0
   426  000047                     	ds	1
   427  000048                     	ds	1
   428  000049                     pulseFoutPassThru@runonce:
   429                           	opt stack 0
   430  000049                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	dataCOMRAM
   441  00004A                     __pdataCOMRAM:
   442                           	opt stack 0
   443  00004A                     	ds	2
   444  00004C                     	ds	1
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	bssBANK0
   455  0000A2                     __pbssBANK0:
   456                           	opt stack 0
   457  0000A2                     powerPulseCheck@meterEnergyUsedPart:
   458                           	opt stack 0
   459  0000A2                     	ds	4
   460  0000A6                     _timerCountHF:
   461                           	opt stack 0
   462  0000A6                     	ds	4
   463  0000AA                     _meterEnergyUsed:
   464                           	opt stack 0
   465  0000AA                     	ds	4
   466  0000AE                     _meterWatts:
   467                           	opt stack 0
   468  0000AE                     	ds	4
   469  0000B2                     communications@send_buffer:
   470                           	opt stack 0
   471  0000B2                     	ds	42
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	dataBANK0
   482  0000DC                     __pdataBANK0:
   483                           	opt stack 0
   484  0000DC                     initMCPFout@F6870:
   485                           	opt stack 0
   486  0000DC                     	ds	16
   487  0000EC                     	ds	4
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	bssBANK1
   498  000100                     __pbssBANK1:
   499                           	opt stack 0
   500  000100                     communications@receive_buffer:
   501                           	opt stack 0
   502  000100                     	ds	42
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	cstackBANK0
   513  000060                     __pcstackBANK0:
   514                           	opt stack 0
   515  000060                     resetCommunications@send_buffer:
   516                           	opt stack 0
   517  000060                     process_data_parameters@parameters:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x0
   521  000060                     	ds	2
   522  000062                     ??_resetCommunications:
   523  000062                     process_data_parameters@send_buffer:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527  000062                     	ds	2
   528  000064                     process_data@receive_buffer:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x4
   532  000064                     	ds	2
   533  000066                     process_data@send_buffer:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x6
   537  000066                     	ds	2
   538  000068                     process_data@parameters:
   539                           	opt stack 0
   540                           
   541                           ; 50 bytes @ 0x8
   542  000068                     	ds	50
   543  00009A                     process_data@end_of_transmission_received:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x3A
   547  00009A                     	ds	1
   548  00009B                     communications@no_more_to_send:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x3B
   552  00009B                     	ds	1
   553  00009C                     communications@firstTime:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x3C
   557  00009C                     	ds	1
   558  00009D                     main@initDone:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x3D
   562  00009D                     	ds	1
   563  00009E                     main@inx:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x3E
   567  00009E                     	ds	2
   568  0000A0                     main@inx_1088:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x40
   572  0000A0                     	ds	2
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           postdec1	equ	0xFE5
   580                           fsr1l	equ	0xFE1
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	opt stack 0
   585  000001                     ??_Timer0_ISR:
   586                           
   587                           ; 1 bytes @ 0x0
   588  000001                     	ds	18
   589  000013                     ??_initMCPFout:
   590  000013                     ??_isdigit:
   591  000013                     ?_strcmp2:
   592                           	opt stack 0
   593  000013                     ?___wmul:
   594                           	opt stack 0
   595  000013                     ?___lmul:
   596                           	opt stack 0
   597  000013                     ?___lldiv:
   598                           	opt stack 0
   599  000013                     ?___llmod:
   600                           	opt stack 0
   601  000013                     SPI_send_data@data:
   602                           	opt stack 0
   603  000013                     delayMS10@count:
   604                           	opt stack 0
   605  000013                     command_builder_add_char@send_buffer:
   606                           	opt stack 0
   607  000013                     strcmp2@a:
   608                           	opt stack 0
   609  000013                     SPI_receive_data@data:
   610                           	opt stack 0
   611  000013                     ___wmul@multiplier:
   612                           	opt stack 0
   613  000013                     ___lmul@multiplier:
   614                           	opt stack 0
   615  000013                     ___lldiv@dividend:
   616                           	opt stack 0
   617  000013                     ___llmod@dividend:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x12
   621  000013                     	ds	1
   622  000014                     SPI_send_data@sendGood:
   623                           	opt stack 0
   624  000014                     _isdigit$2298:
   625                           	opt stack 0
   626  000014                     initMCPFout@initSPICommand:
   627                           	opt stack 0
   628                           
   629                           ; 16 bytes @ 0x13
   630  000014                     	ds	1
   631  000015                     ??_delayMS10:
   632  000015                     command_builder_add_char@data:
   633                           	opt stack 0
   634  000015                     SPI_receive_data@recvGood:
   635                           	opt stack 0
   636  000015                     isdigit@c:
   637                           	opt stack 0
   638  000015                     send_data@send_buffer:
   639                           	opt stack 0
   640  000015                     strcmp2@b:
   641                           	opt stack 0
   642  000015                     ___wmul@multiplicand:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x14
   646  000015                     	ds	1
   647  000016                     ??_command_builder_add_char:
   648  000016                     delayMS10@inx:
   649                           	opt stack 0
   650  000016                     receive_data@receive_buffer:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x15
   654  000016                     	ds	1
   655  000017                     ??_send_data:
   656  000017                     ??_strcmp2:
   657  000017                     command_builder_add_string@send_buffer:
   658                           	opt stack 0
   659  000017                     ___wmul@product:
   660                           	opt stack 0
   661  000017                     ___lmul@multiplicand:
   662                           	opt stack 0
   663  000017                     ___lldiv@divisor:
   664                           	opt stack 0
   665  000017                     ___llmod@divisor:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x16
   669  000017                     	ds	1
   670  000018                     ??_receive_data:
   671                           
   672                           ; 1 bytes @ 0x17
   673  000018                     	ds	1
   674  000019                     ?_getSerialData:
   675                           	opt stack 0
   676  000019                     receive_data@data:
   677                           	opt stack 0
   678  000019                     send_data@send_end:
   679                           	opt stack 0
   680  000019                     process_data_parameterize@parameters:
   681                           	opt stack 0
   682  000019                     command_builder_add_string@data_string:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x18
   686  000019                     	ds	1
   687  00001A                     strcmp2@match:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x19
   691  00001A                     	ds	1
   692  00001B                     ??_getSerialData:
   693  00001B                     ??_command_builder_add_string:
   694  00001B                     ___llmod@counter:
   695                           	opt stack 0
   696  00001B                     process_data_parameterize@buffer_to_parameterize:
   697                           	opt stack 0
   698  00001B                     ___lmul@product:
   699                           	opt stack 0
   700  00001B                     ___lldiv@quotient:
   701                           	opt stack 0
   702                           
   703                           ; 4 bytes @ 0x1A
   704  00001B                     	ds	1
   705  00001C                     strcmp2@inx:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x1B
   709  00001C                     	ds	1
   710  00001D                     ??_process_data_parameterize:
   711  00001D                     command_builder_add_string@inx:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1C
   715  00001D                     	ds	1
   716  00001E                     strmatch@a:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x1D
   720  00001E                     	ds	1
   721  00001F                     ?_atol:
   722                           	opt stack 0
   723  00001F                     ___lldiv@counter:
   724                           	opt stack 0
   725  00001F                     command_builder1@send_buffer:
   726                           	opt stack 0
   727  00001F                     command_builder3@send_buffer:
   728                           	opt stack 0
   729  00001F                     atol@s:
   730                           	opt stack 0
   731  00001F                     getSerialData@dataIn:
   732                           	opt stack 0
   733                           
   734                           ; 16 bytes @ 0x1E
   735  00001F                     	ds	1
   736  000020                     process_data_parameterize@inx:
   737                           	opt stack 0
   738  000020                     strmatch@b:
   739                           	opt stack 0
   740  000020                     ultoa@buf:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x1F
   744  000020                     	ds	1
   745  000021                     command_builder1@data1:
   746                           	opt stack 0
   747  000021                     command_builder3@data1:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x20
   751  000021                     	ds	1
   752  000022                     process_data_parameterize@parameter_index:
   753                           	opt stack 0
   754  000022                     strmatch@result:
   755                           	opt stack 0
   756  000022                     ultoa@val:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x21
   760  000022                     	ds	1
   761  000023                     ??_atol:
   762  000023                     process_data_parameterize@parameter_position:
   763                           	opt stack 0
   764  000023                     command_builder3@data2:
   765                           	opt stack 0
   766  000023                     send_end_of_transmission@send_buffer:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x22
   770  000023                     	ds	1
   771  000024                     strmatch@match:
   772                           	opt stack 0
   773  000024                     initMCPFout@i:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x23
   777  000024                     	ds	1
   778  000025                     command_builder3@data3:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x24
   782  000025                     	ds	1
   783  000026                     ultoa@base:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x25
   787  000026                     	ds	1
   788  000027                     atol@sign:
   789                           	opt stack 0
   790  000027                     com_command_setVersion@send_buffer:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x26
   794  000027                     	ds	1
   795  000028                     atol@a:
   796                           	opt stack 0
   797  000028                     ultoa@v:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x27
   801  000028                     	ds	1
   802  000029                     
   803                           ; 1 bytes @ 0x28
   804  000029                     	ds	3
   805  00002C                     atol@c:
   806                           	opt stack 0
   807  00002C                     ultoa@c:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x2B
   811  00002C                     	ds	1
   812  00002D                     com_command_setPower@send_buffer:
   813                           	opt stack 0
   814  00002D                     com_command_setEnergyUsed@send_buffer:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x2C
   818  00002D                     	ds	2
   819  00002F                     getSerialData@data:
   820                           	opt stack 0
   821  00002F                     com_command_setPower@temp:
   822                           	opt stack 0
   823  00002F                     com_command_setEnergyUsed@temp:
   824                           	opt stack 0
   825                           
   826                           ; 12 bytes @ 0x2E
   827  00002F                     	ds	2
   828  000031                     getSerialData@i:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x30
   832  000031                     	ds	2
   833  000033                     powerPulseCheck@voltageData:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x32
   837  000033                     	ds	2
   838  000035                     powerPulseCheck@currentData:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x34
   842  000035                     	ds	6
   843  00003B                     process_data_parameters@end_of_transmission_received:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x3A
   847  00003B                     	ds	1
   848  00003C                     tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1l	equ	0xFE1
   856                           
   857                           ; 1 bytes @ 0x3B
   858 ;;
   859 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   860 ;;
   861 ;; *************** function _main *****************
   862 ;; Defined at:
   863 ;;		line 81 in file "Current_Sense_Main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  inx             2   64[BANK0 ] int 
   868 ;;  inx             2   62[BANK0 ] int 
   869 ;;  initDone        1   61[BANK0 ] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   879 ;;      Params:         0       0       0       0       0       0       0
   880 ;;      Locals:         0       5       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0
   882 ;;      Totals:         0       5       0       0       0       0       0
   883 ;;Total ram usage:        5 bytes
   884 ;; Hardware stack levels required when called:    8
   885 ;; This function calls:
   886 ;;		_communications
   887 ;;		_delayMS10
   888 ;;		_init
   889 ;;		_initMCPFout
   890 ;;		_initTimer
   891 ;;		_powerPulseCheck
   892 ;;		_pulseFoutPassThru
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899  000F2E                     __ptext0:
   900                           	opt stack 0
   901  000F2E                     _main:
   902                           	opt stack 23
   903                           
   904                           ;Current_Sense_Main.c: 83: init();
   905                           
   906                           ;incstack = 0
   907  000F2E  EC2E  F00D         	call	_init	;wreg free
   908                           
   909                           ;Current_Sense_Main.c: 85: for (int inx = 0; inx < 10; inx++)
   910  000F32  0E00               	movlw	0
   911  000F34  0100               	movlb	0	; () banked
   912  000F36  6F9F               	movwf	(main@inx+1)& (0+255),b
   913  000F38  0E00               	movlw	0
   914  000F3A  6F9E               	movwf	main@inx& (0+255),b
   915  000F3C                     l3242:
   916                           
   917                           ; BSR set to: 0
   918  000F3C  0100               	movlb	0	; () banked
   919  000F3E  BF9F               	btfsc	(main@inx+1)& (0+255),7,b
   920  000F40  D008               	goto	l115
   921  000F42  0100               	movlb	0	; () banked
   922  000F44  519F               	movf	(main@inx+1)& (0+255),w,b
   923  000F46  E117               	bnz	l3254
   924  000F48  0E0A               	movlw	10
   925  000F4A  0100               	movlb	0	; () banked
   926  000F4C  5D9E               	subwf	main@inx& (0+255),w,b
   927  000F4E  B0D8               	btfsc	status,0,c
   928  000F50  D012               	goto	u2750
   929  000F52                     l115:
   930                           
   931                           ; BSR set to: 0
   932                           ;Current_Sense_Main.c: 86: {
   933                           ;Current_Sense_Main.c: 87: LATBbits.LATB4 = 1;
   934  000F52  888A               	bsf	3978,4,c	;volatile
   935                           
   936                           ; BSR set to: 0
   937                           ;Current_Sense_Main.c: 88: delayMS10(10);
   938  000F54  0E00               	movlw	0
   939  000F56  6E14               	movwf	delayMS10@count+1,c
   940  000F58  0E0A               	movlw	10
   941  000F5A  6E13               	movwf	delayMS10@count,c
   942  000F5C  EC54  F00C         	call	_delayMS10	;wreg free
   943                           
   944                           ;Current_Sense_Main.c: 89: LATBbits.LATB4 = 0;
   945  000F60  988A               	bcf	3978,4,c	;volatile
   946                           
   947                           ;Current_Sense_Main.c: 90: delayMS10(10);
   948  000F62  0E00               	movlw	0
   949  000F64  6E14               	movwf	delayMS10@count+1,c
   950  000F66  0E0A               	movlw	10
   951  000F68  6E13               	movwf	delayMS10@count,c
   952  000F6A  EC54  F00C         	call	_delayMS10	;wreg free
   953  000F6E  0100               	movlb	0	; () banked
   954  000F70  4B9E               	infsnz	main@inx& (0+255),f,b
   955  000F72  2B9F               	incf	(main@inx+1)& (0+255),f,b
   956  000F74  D7E3               	goto	l3242
   957  000F76                     u2750:
   958  000F76                     l3254:
   959                           
   960                           ; BSR set to: 0
   961                           ;Current_Sense_Main.c: 91: }
   962                           ;Current_Sense_Main.c: 93: initTimer();
   963  000F76  EC01  F00D         	call	_initTimer	;wreg free
   964                           
   965                           ;Current_Sense_Main.c: 121: communications(1);
   966  000F7A  0E01               	movlw	1
   967  000F7C  ECB9  F008         	call	_communications
   968                           
   969                           ;Current_Sense_Main.c: 128: bool initDone = 0;
   970  000F80  0E00               	movlw	0
   971  000F82  0100               	movlb	0	; () banked
   972  000F84  6F9D               	movwf	main@initDone& (0+255),b
   973  000F86                     l3260:
   974                           
   975                           ; BSR set to: 0
   976                           ;Current_Sense_Main.c: 131: {
   977                           ;Current_Sense_Main.c: 132: communications(0);
   978  000F86  0E00               	movlw	0
   979  000F88  ECB9  F008         	call	_communications
   980                           
   981                           ;Current_Sense_Main.c: 133: pulseFoutPassThru();
   982  000F8C  ECBF  F00C         	call	_pulseFoutPassThru	;wreg free
   983                           
   984                           ;Current_Sense_Main.c: 134: powerPulseCheck();
   985  000F90  EC5F  F008         	call	_powerPulseCheck	;wreg free
   986                           
   987                           ;Current_Sense_Main.c: 137: if (initDone == 0)
   988  000F94  0100               	movlb	0	; () banked
   989  000F96  519D               	movf	main@initDone& (0+255),w,b
   990  000F98  0100               	movlb	0	; () banked
   991  000F9A  A4D8               	btfss	status,2,c
   992  000F9C  D7F4               	goto	l117
   993                           
   994                           ; BSR set to: 0
   995                           ;Current_Sense_Main.c: 138: {
   996                           ;Current_Sense_Main.c: 139: if (timerCountLF > 1000)
   997  000F9E  503F               	movf	_timerCountLF+3,w,c	;volatile
   998  000FA0  103E               	iorwf	_timerCountLF+2,w,c	;volatile
   999  000FA2  E106               	bnz	u2770
  1000  000FA4  0EE9               	movlw	233
  1001  000FA6  5C3C               	subwf	_timerCountLF,w,c	;volatile
  1002  000FA8  0E03               	movlw	3
  1003  000FAA  583D               	subwfb	_timerCountLF+1,w,c	;volatile
  1004  000FAC  A0D8               	btfss	status,0,c
  1005  000FAE  D7EB               	goto	l117
  1006  000FB0                     u2770:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;Current_Sense_Main.c: 140: {
  1010                           ;Current_Sense_Main.c: 141: initMCPFout();
  1011  000FB0  EC78  F00A         	call	_initMCPFout	;wreg free
  1012                           
  1013                           ;Current_Sense_Main.c: 142: initDone = 1;
  1014  000FB4  0E01               	movlw	1
  1015  000FB6  0100               	movlb	0	; () banked
  1016  000FB8  6F9D               	movwf	main@initDone& (0+255),b
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;Current_Sense_Main.c: 144: for (int inx = 0; inx < 10; inx++)
  1020  000FBA  0E00               	movlw	0
  1021  000FBC  0100               	movlb	0	; () banked
  1022  000FBE  6FA1               	movwf	(main@inx_1088+1)& (0+255),b
  1023  000FC0  0E00               	movlw	0
  1024  000FC2  6FA0               	movwf	main@inx_1088& (0+255),b
  1025  000FC4                     l3276:
  1026                           
  1027                           ; BSR set to: 0
  1028  000FC4  0100               	movlb	0	; () banked
  1029  000FC6  BFA1               	btfsc	(main@inx_1088+1)& (0+255),7,b
  1030  000FC8  D008               	goto	l120
  1031  000FCA  0100               	movlb	0	; () banked
  1032  000FCC  51A1               	movf	(main@inx_1088+1)& (0+255),w,b
  1033  000FCE  E1DB               	bnz	l3260
  1034  000FD0  0E0A               	movlw	10
  1035  000FD2  0100               	movlb	0	; () banked
  1036  000FD4  5DA0               	subwf	main@inx_1088& (0+255),w,b
  1037  000FD6  B0D8               	btfsc	status,0,c
  1038  000FD8  D7D6               	goto	l117
  1039  000FDA                     l120:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;Current_Sense_Main.c: 145: {
  1043                           ;Current_Sense_Main.c: 146: LATBbits.LATB4 = 1;
  1044  000FDA  888A               	bsf	3978,4,c	;volatile
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;Current_Sense_Main.c: 147: delayMS10(3);
  1048  000FDC  0E00               	movlw	0
  1049  000FDE  6E14               	movwf	delayMS10@count+1,c
  1050  000FE0  0E03               	movlw	3
  1051  000FE2  6E13               	movwf	delayMS10@count,c
  1052  000FE4  EC54  F00C         	call	_delayMS10	;wreg free
  1053                           
  1054                           ;Current_Sense_Main.c: 148: LATBbits.LATB4 = 0;
  1055  000FE8  988A               	bcf	3978,4,c	;volatile
  1056                           
  1057                           ;Current_Sense_Main.c: 149: delayMS10(5);
  1058  000FEA  0E00               	movlw	0
  1059  000FEC  6E14               	movwf	delayMS10@count+1,c
  1060  000FEE  0E05               	movlw	5
  1061  000FF0  6E13               	movwf	delayMS10@count,c
  1062  000FF2  EC54  F00C         	call	_delayMS10	;wreg free
  1063  000FF6  0100               	movlb	0	; () banked
  1064  000FF8  4BA0               	infsnz	main@inx_1088& (0+255),f,b
  1065  000FFA  2BA1               	incf	(main@inx_1088+1)& (0+255),f,b
  1066  000FFC  D7E3               	goto	l3276
  1067  000FFE                     __end_of_main:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _pulseFoutPassThru *****************
  1080 ;; Defined at:
  1081 ;;		line 192 in file "Current_Sense_Main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1095 ;;      Params:         0       0       0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text1
  1110  00197E                     __ptext1:
  1111                           	opt stack 0
  1112  00197E                     _pulseFoutPassThru:
  1113                           	opt stack 29
  1114                           
  1115                           ;Current_Sense_Main.c: 195: static bool runonce = 0;
  1116                           ;Current_Sense_Main.c: 197: if (PORTCbits.RC2 == 0)
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;incstack = 0
  1120  00197E  B482               	btfsc	3970,2,c	;volatile
  1121  001980  D00C               	goto	l129
  1122                           
  1123                           ;Current_Sense_Main.c: 198: {
  1124                           ;Current_Sense_Main.c: 199: LATAbits.LATA0 = 1;
  1125  001982  8089               	bsf	3977,0,c	;volatile
  1126                           
  1127                           ;Current_Sense_Main.c: 200: if (runonce == 0)
  1128  001984  5049               	movf	pulseFoutPassThru@runonce,w,c
  1129  001986  A4D8               	btfss	status,2,c
  1130  001988  0012               	return	
  1131                           
  1132                           ;Current_Sense_Main.c: 201: {
  1133                           ;Current_Sense_Main.c: 202: runonce = 1;
  1134  00198A  0E01               	movlw	1
  1135  00198C  6E49               	movwf	pulseFoutPassThru@runonce,c
  1136                           
  1137                           ;Current_Sense_Main.c: 203: if (PORTBbits.RB4 == 1)
  1138  00198E  A881               	btfss	3969,4,c	;volatile
  1139  001990  D002               	goto	l131
  1140                           
  1141                           ;Current_Sense_Main.c: 204: {
  1142                           ;Current_Sense_Main.c: 205: LATBbits.LATB4 = 0;
  1143  001992  988A               	bcf	3978,4,c	;volatile
  1144                           
  1145                           ;Current_Sense_Main.c: 206: }
  1146  001994  0012               	return	
  1147  001996                     l131:
  1148                           
  1149                           ;Current_Sense_Main.c: 207: else
  1150                           ;Current_Sense_Main.c: 208: {
  1151                           ;Current_Sense_Main.c: 209: LATBbits.LATB4 = 1;
  1152  001996  888A               	bsf	3978,4,c	;volatile
  1153                           
  1154                           ;Current_Sense_Main.c: 210: }
  1155                           ;Current_Sense_Main.c: 211: }
  1156                           ;Current_Sense_Main.c: 212: }
  1157  001998  0012               	return	
  1158  00199A                     l129:
  1159                           
  1160                           ;Current_Sense_Main.c: 213: else
  1161                           ;Current_Sense_Main.c: 214: {
  1162                           ;Current_Sense_Main.c: 215: LATAbits.LATA0 = 0;
  1163  00199A  9089               	bcf	3977,0,c	;volatile
  1164                           
  1165                           ;Current_Sense_Main.c: 216: runonce = 0;
  1166  00199C  0E00               	movlw	0
  1167  00199E  6E49               	movwf	pulseFoutPassThru@runonce,c
  1168  0019A0  0012               	return	
  1169  0019A2                     __end_of_pulseFoutPassThru:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           postdec1	equ	0xFE5
  1178                           fsr1l	equ	0xFE1
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _powerPulseCheck *****************
  1182 ;; Defined at:
  1183 ;;		line 236 in file "Current_Sense_Main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  currentData     2   52[COMRAM] unsigned short 
  1188 ;;  voltageData     2   50[COMRAM] unsigned short 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:         4       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         4       0       0       0       0       0       0
  1202 ;;Total ram usage:        4 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    3
  1205 ;; This function calls:
  1206 ;;		_getSerialData
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text2
  1213  0010BE                     __ptext2:
  1214                           	opt stack 0
  1215  0010BE                     _powerPulseCheck:
  1216                           	opt stack 27
  1217                           
  1218                           ;Current_Sense_Main.c: 248: static unsigned long meterEnergyUsedPart = 0;
  1219                           ;Current_Sense_Main.c: 249: static unsigned long timerCountHFLast = 2147483647;
  1220                           ;Current_Sense_Main.c: 250: static unsigned int timerCountHFCheck = 1;
  1221                           ;Current_Sense_Main.c: 251: static bool firstPulse = 1;
  1222                           ;Current_Sense_Main.c: 254: static bool mcpHFoutLast = 0;
  1223                           ;Current_Sense_Main.c: 255: static bool mcpLFoutLast = 0;
  1224                           ;Current_Sense_Main.c: 260: unsigned short voltageData = 0;
  1225                           
  1226                           ;incstack = 0
  1227  0010BE  0E00               	movlw	0
  1228  0010C0  6E34               	movwf	powerPulseCheck@voltageData+1,c
  1229  0010C2  0E00               	movlw	0
  1230  0010C4  6E33               	movwf	powerPulseCheck@voltageData,c
  1231                           
  1232                           ;Current_Sense_Main.c: 261: unsigned short currentData = 0;
  1233  0010C6  0E00               	movlw	0
  1234  0010C8  6E36               	movwf	powerPulseCheck@currentData+1,c
  1235  0010CA  0E00               	movlw	0
  1236  0010CC  6E35               	movwf	powerPulseCheck@currentData,c
  1237                           
  1238                           ;Current_Sense_Main.c: 263: if (PORTCbits.RC4 == 1){
  1239  0010CE  A882               	btfss	3970,4,c	;volatile
  1240  0010D0  D015               	goto	l154
  1241                           
  1242                           ;Current_Sense_Main.c: 264: voltageData = getSerialData();
  1243  0010D2  EC5B  F005         	call	_getSerialData	;wreg free
  1244  0010D6  C019  F033         	movff	?_getSerialData,powerPulseCheck@voltageData
  1245  0010DA  C01A  F034         	movff	?_getSerialData+1,powerPulseCheck@voltageData+1
  1246                           
  1247                           ;Current_Sense_Main.c: 265: currentData = getSerialData();
  1248  0010DE  EC5B  F005         	call	_getSerialData	;wreg free
  1249  0010E2  C019  F035         	movff	?_getSerialData,powerPulseCheck@currentData
  1250  0010E6  C01A  F036         	movff	?_getSerialData+1,powerPulseCheck@currentData+1
  1251                           
  1252                           ;Current_Sense_Main.c: 267: meterWatts = 100;
  1253  0010EA  0E64               	movlw	100
  1254  0010EC  0100               	movlb	0	; () banked
  1255  0010EE  6FAE               	movwf	_meterWatts& (0+255),b
  1256  0010F0  0E00               	movlw	0
  1257  0010F2  6FAF               	movwf	(_meterWatts+1)& (0+255),b
  1258  0010F4  0E00               	movlw	0
  1259  0010F6  6FB0               	movwf	(_meterWatts+2)& (0+255),b
  1260  0010F8  0E00               	movlw	0
  1261  0010FA  6FB1               	movwf	(_meterWatts+3)& (0+255),b
  1262  0010FC                     l154:
  1263                           
  1264                           ;Current_Sense_Main.c: 268: }
  1265                           ;Current_Sense_Main.c: 272: if (PORTAbits.RA1 == 0)
  1266                           
  1267                           ; BSR set to: 0
  1268  0010FC  B280               	btfsc	3968,1,c	;volatile
  1269  0010FE  D036               	goto	l155
  1270                           
  1271                           ;Current_Sense_Main.c: 273: {
  1272                           ;Current_Sense_Main.c: 274: if (mcpLFoutLast == 0)
  1273  001100  5047               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1274  001102  A4D8               	btfss	status,2,c
  1275  001104  0012               	return	
  1276                           
  1277                           ;Current_Sense_Main.c: 275: {
  1278                           ;Current_Sense_Main.c: 276: mcpLFoutLast = 1;
  1279  001106  0E01               	movlw	1
  1280  001108  6E47               	movwf	powerPulseCheck@mcpLFoutLast,c
  1281                           
  1282                           ;Current_Sense_Main.c: 278: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1283  00110A  0E80               	movlw	128
  1284  00110C  0100               	movlb	0	; () banked
  1285  00110E  27A2               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1286  001110  0E97               	movlw	151
  1287  001112  23A3               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1288  001114  0E06               	movlw	6
  1289  001116  23A4               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1290  001118  0E00               	movlw	0
  1291  00111A  23A5               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1292                           
  1293                           ;Current_Sense_Main.c: 279: while (meterEnergyUsedPart > 100000)
  1294  00111C  D010               	goto	l157
  1295  00111E                     l3220:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;Current_Sense_Main.c: 280: {
  1299                           ;Current_Sense_Main.c: 281: meterEnergyUsed++;
  1300  00111E  0E01               	movlw	1
  1301  001120  0100               	movlb	0	; () banked
  1302  001122  27AA               	addwf	_meterEnergyUsed& (0+255),f,b
  1303  001124  0E00               	movlw	0
  1304  001126  23AB               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1305  001128  23AC               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1306  00112A  23AD               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1307                           
  1308                           ;Current_Sense_Main.c: 282: meterEnergyUsedPart -= 100000;
  1309  00112C  0EA0               	movlw	160
  1310  00112E  0100               	movlb	0	; () banked
  1311  001130  5FA2               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1312  001132  0E86               	movlw	134
  1313  001134  5BA3               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1314  001136  0E01               	movlw	1
  1315  001138  5BA4               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1316  00113A  0E00               	movlw	0
  1317  00113C  5BA5               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1318  00113E                     l157:
  1319                           
  1320                           ; BSR set to: 0
  1321  00113E  0100               	movlb	0	; () banked
  1322  001140  51A5               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1323  001142  E1ED               	bnz	l3220
  1324  001144  0EA1               	movlw	161
  1325  001146  0100               	movlb	0	; () banked
  1326  001148  5DA2               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1327  00114A  0E86               	movlw	134
  1328  00114C  0100               	movlb	0	; () banked
  1329  00114E  59A3               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1330  001150  0E01               	movlw	1
  1331  001152  0100               	movlb	0	; () banked
  1332  001154  59A4               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1333  001156  B0D8               	btfsc	status,0,c
  1334  001158  D7E2               	goto	l158
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;Current_Sense_Main.c: 283: }
  1338                           ;Current_Sense_Main.c: 285: timerCountLF = 0;
  1339                           
  1340                           ; BSR set to: 0
  1341  00115A  0E00               	movlw	0
  1342  00115C  6E3C               	movwf	_timerCountLF,c	;volatile
  1343  00115E  0E00               	movlw	0
  1344  001160  6E3D               	movwf	_timerCountLF+1,c	;volatile
  1345  001162  0E00               	movlw	0
  1346  001164  6E3E               	movwf	_timerCountLF+2,c	;volatile
  1347  001166  0E00               	movlw	0
  1348  001168  6E3F               	movwf	_timerCountLF+3,c	;volatile
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;Current_Sense_Main.c: 286: }
  1352                           ;Current_Sense_Main.c: 287: }
  1353  00116A  0012               	return	
  1354  00116C                     l155:
  1355                           
  1356                           ;Current_Sense_Main.c: 288: else
  1357                           ;Current_Sense_Main.c: 289: {
  1358                           ;Current_Sense_Main.c: 290: mcpLFoutLast = 0;
  1359                           
  1360                           ; BSR set to: 0
  1361  00116C  0E00               	movlw	0
  1362  00116E  6E47               	movwf	powerPulseCheck@mcpLFoutLast,c
  1363  001170  0012               	return	
  1364  001172                     __end_of_powerPulseCheck:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _getSerialData *****************
  1377 ;; Defined at:
  1378 ;;		line 297 in file "Current_Sense_Main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  i               2   48[COMRAM] int 
  1383 ;;  dataIn         16   30[COMRAM] unsigned char [16]
  1384 ;;  data            2   46[COMRAM] short 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2   24[COMRAM] short 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         2       0       0       0       0       0       0
  1395 ;;      Locals:        20       0       0       0       0       0       0
  1396 ;;      Temps:          4       0       0       0       0       0       0
  1397 ;;      Totals:        26       0       0       0       0       0       0
  1398 ;;Total ram usage:       26 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    2
  1401 ;; This function calls:
  1402 ;;		___wmul
  1403 ;; This function is called by:
  1404 ;;		_powerPulseCheck
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409  000AB6                     __ptext3:
  1410                           	opt stack 0
  1411  000AB6                     _getSerialData:
  1412                           	opt stack 27
  1413                           
  1414                           ;Current_Sense_Main.c: 298: char dataIn[16];
  1415                           ;Current_Sense_Main.c: 299: _delay((unsigned long)((1)*(16000000/4000000.0)));
  1416                           
  1417                           ;incstack = 0
  1418  000AB6  D000               	nop2		;2 cycle nop
  1419  000AB8  D000               	nop2		;2 cycle nop
  1420                           
  1421                           ;Current_Sense_Main.c: 300: for (int i = 0; i < 16; i++) {
  1422  000ABA  0E00               	movlw	0
  1423  000ABC  6E32               	movwf	getSerialData@i+1,c
  1424  000ABE  0E00               	movlw	0
  1425  000AC0  6E31               	movwf	getSerialData@i,c
  1426  000AC2                     l2972:
  1427  000AC2  BE32               	btfsc	getSerialData@i+1,7,c
  1428  000AC4  D006               	goto	l164
  1429  000AC6  5032               	movf	getSerialData@i+1,w,c
  1430  000AC8  E11B               	bnz	l2986
  1431  000ACA  0E10               	movlw	16
  1432  000ACC  5C31               	subwf	getSerialData@i,w,c
  1433  000ACE  B0D8               	btfsc	status,0,c
  1434  000AD0  D017               	goto	u2500
  1435  000AD2                     l164:
  1436                           
  1437                           ;Current_Sense_Main.c: 301: LATCbits.LATC3 = 1;
  1438  000AD2  868B               	bsf	3979,3,c	;volatile
  1439                           
  1440                           ;Current_Sense_Main.c: 302: if (PORTCbits.RC4 == 1) {
  1441  000AD4  A882               	btfss	3970,4,c	;volatile
  1442  000AD6  D008               	goto	l166
  1443                           
  1444                           ;Current_Sense_Main.c: 303: dataIn[i] = 1;
  1445  000AD8  0E1F               	movlw	low getSerialData@dataIn
  1446  000ADA  2431               	addwf	getSerialData@i,w,c
  1447  000ADC  6ED9               	movwf	fsr2l,c
  1448  000ADE  0E00               	movlw	high getSerialData@dataIn
  1449  000AE0  2032               	addwfc	getSerialData@i+1,w,c
  1450  000AE2  6EDA               	movwf	fsr2h,c
  1451  000AE4  0E01               	movlw	1
  1452  000AE6  D007               	goto	L1
  1453  000AE8                     l166:
  1454                           
  1455                           ;Current_Sense_Main.c: 305: else {
  1456                           ;Current_Sense_Main.c: 306: dataIn[i] = 0;
  1457  000AE8  0E1F               	movlw	low getSerialData@dataIn
  1458  000AEA  2431               	addwf	getSerialData@i,w,c
  1459  000AEC  6ED9               	movwf	fsr2l,c
  1460  000AEE  0E00               	movlw	high getSerialData@dataIn
  1461  000AF0  2032               	addwfc	getSerialData@i+1,w,c
  1462  000AF2  6EDA               	movwf	fsr2h,c
  1463  000AF4  0E00               	movlw	0
  1464  000AF6                     L1:
  1465  000AF6  6EDF               	movwf	indf2,c
  1466                           
  1467                           ;Current_Sense_Main.c: 307: }
  1468                           ;Current_Sense_Main.c: 308: LATCbits.LATC3 = 0;
  1469  000AF8  968B               	bcf	3979,3,c	;volatile
  1470  000AFA  4A31               	infsnz	getSerialData@i,f,c
  1471  000AFC  2A32               	incf	getSerialData@i+1,f,c
  1472  000AFE  D7E1               	goto	l2972
  1473  000B00                     u2500:
  1474  000B00                     l2986:
  1475                           
  1476                           ;Current_Sense_Main.c: 309: }
  1477                           ;Current_Sense_Main.c: 310: short data = dataIn[1] * 16384
  1478                           ;Current_Sense_Main.c: 311: + dataIn[2] * 8192
  1479                           ;Current_Sense_Main.c: 312: + dataIn[3] * 4096
  1480                           ;Current_Sense_Main.c: 313: + dataIn[4] * 2048
  1481                           ;Current_Sense_Main.c: 314: + dataIn[5] * 1024
  1482                           ;Current_Sense_Main.c: 315: + dataIn[6] * 512
  1483                           ;Current_Sense_Main.c: 316: + dataIn[7] * 256
  1484                           ;Current_Sense_Main.c: 317: + dataIn[8] * 128
  1485                           ;Current_Sense_Main.c: 318: + dataIn[9] * 64
  1486                           ;Current_Sense_Main.c: 319: + dataIn[10] * 32
  1487                           ;Current_Sense_Main.c: 320: + dataIn[11] * 16
  1488  000B00  5026               	movf	getSerialData@dataIn+7,w,c
  1489  000B02  6E1C               	movwf	(??_getSerialData+1)& (0+255),c
  1490  000B04  6A1B               	clrf	??_getSerialData& (0+255),c
  1491  000B06  C020  F013         	movff	getSerialData@dataIn+1,___wmul@multiplier
  1492  000B0A  6A14               	clrf	___wmul@multiplier+1,c
  1493  000B0C  0E40               	movlw	64
  1494  000B0E  6E16               	movwf	___wmul@multiplicand+1,c
  1495  000B10  0E00               	movlw	0
  1496  000B12  6E15               	movwf	___wmul@multiplicand,c
  1497  000B14  ECAC  F00C         	call	___wmul	;wreg free
  1498  000B18  C013  F01D         	movff	?___wmul,??_getSerialData+2
  1499  000B1C  C014  F01E         	movff	?___wmul+1,??_getSerialData+3
  1500  000B20  C021  F013         	movff	getSerialData@dataIn+2,___wmul@multiplier
  1501  000B24  6A14               	clrf	___wmul@multiplier+1,c
  1502  000B26  0E20               	movlw	32
  1503  000B28  6E16               	movwf	___wmul@multiplicand+1,c
  1504  000B2A  0E00               	movlw	0
  1505  000B2C  6E15               	movwf	___wmul@multiplicand,c
  1506  000B2E  ECAC  F00C         	call	___wmul	;wreg free
  1507  000B32  5013               	movf	?___wmul,w,c
  1508  000B34  261D               	addwf	??_getSerialData+2,f,c
  1509  000B36  5014               	movf	?___wmul+1,w,c
  1510  000B38  221E               	addwfc	??_getSerialData+3,f,c
  1511  000B3A  C022  F013         	movff	getSerialData@dataIn+3,___wmul@multiplier
  1512  000B3E  6A14               	clrf	___wmul@multiplier+1,c
  1513  000B40  0E10               	movlw	16
  1514  000B42  6E16               	movwf	___wmul@multiplicand+1,c
  1515  000B44  0E00               	movlw	0
  1516  000B46  6E15               	movwf	___wmul@multiplicand,c
  1517  000B48  ECAC  F00C         	call	___wmul	;wreg free
  1518  000B4C  5013               	movf	?___wmul,w,c
  1519  000B4E  261D               	addwf	??_getSerialData+2,f,c
  1520  000B50  5014               	movf	?___wmul+1,w,c
  1521  000B52  221E               	addwfc	??_getSerialData+3,f,c
  1522  000B54  C023  F013         	movff	getSerialData@dataIn+4,___wmul@multiplier
  1523  000B58  6A14               	clrf	___wmul@multiplier+1,c
  1524  000B5A  0E08               	movlw	8
  1525  000B5C  6E16               	movwf	___wmul@multiplicand+1,c
  1526  000B5E  0E00               	movlw	0
  1527  000B60  6E15               	movwf	___wmul@multiplicand,c
  1528  000B62  ECAC  F00C         	call	___wmul	;wreg free
  1529  000B66  5013               	movf	?___wmul,w,c
  1530  000B68  261D               	addwf	??_getSerialData+2,f,c
  1531  000B6A  5014               	movf	?___wmul+1,w,c
  1532  000B6C  221E               	addwfc	??_getSerialData+3,f,c
  1533  000B6E  C024  F013         	movff	getSerialData@dataIn+5,___wmul@multiplier
  1534  000B72  6A14               	clrf	___wmul@multiplier+1,c
  1535  000B74  0E04               	movlw	4
  1536  000B76  6E16               	movwf	___wmul@multiplicand+1,c
  1537  000B78  0E00               	movlw	0
  1538  000B7A  6E15               	movwf	___wmul@multiplicand,c
  1539  000B7C  ECAC  F00C         	call	___wmul	;wreg free
  1540  000B80  5013               	movf	?___wmul,w,c
  1541  000B82  261D               	addwf	??_getSerialData+2,f,c
  1542  000B84  5014               	movf	?___wmul+1,w,c
  1543  000B86  221E               	addwfc	??_getSerialData+3,f,c
  1544  000B88  C025  F013         	movff	getSerialData@dataIn+6,___wmul@multiplier
  1545  000B8C  6A14               	clrf	___wmul@multiplier+1,c
  1546  000B8E  0E02               	movlw	2
  1547  000B90  6E16               	movwf	___wmul@multiplicand+1,c
  1548  000B92  0E00               	movlw	0
  1549  000B94  6E15               	movwf	___wmul@multiplicand,c
  1550  000B96  ECAC  F00C         	call	___wmul	;wreg free
  1551  000B9A  5013               	movf	?___wmul,w,c
  1552  000B9C  261D               	addwf	??_getSerialData+2,f,c
  1553  000B9E  5014               	movf	?___wmul+1,w,c
  1554  000BA0  221E               	addwfc	??_getSerialData+3,f,c
  1555  000BA2  501B               	movf	??_getSerialData,w,c
  1556  000BA4  261D               	addwf	??_getSerialData+2,f,c
  1557  000BA6  501C               	movf	??_getSerialData+1,w,c
  1558  000BA8  221E               	addwfc	??_getSerialData+3,f,c
  1559  000BAA  5027               	movf	getSerialData@dataIn+8,w,c
  1560  000BAC  0D80               	mullw	128
  1561  000BAE  50F3               	movf	prodl,w,c
  1562  000BB0  261D               	addwf	??_getSerialData+2,f,c
  1563  000BB2  50F4               	movf	prodh,w,c
  1564  000BB4  221E               	addwfc	??_getSerialData+3,f,c
  1565  000BB6  5028               	movf	getSerialData@dataIn+9,w,c
  1566  000BB8  0D40               	mullw	64
  1567  000BBA  50F3               	movf	prodl,w,c
  1568  000BBC  261D               	addwf	??_getSerialData+2,f,c
  1569  000BBE  50F4               	movf	prodh,w,c
  1570  000BC0  221E               	addwfc	??_getSerialData+3,f,c
  1571  000BC2  5029               	movf	getSerialData@dataIn+10,w,c
  1572  000BC4  0D20               	mullw	32
  1573  000BC6  50F3               	movf	prodl,w,c
  1574  000BC8  261D               	addwf	??_getSerialData+2,f,c
  1575  000BCA  50F4               	movf	prodh,w,c
  1576  000BCC  221E               	addwfc	??_getSerialData+3,f,c
  1577  000BCE  502A               	movf	getSerialData@dataIn+11,w,c
  1578  000BD0  0D10               	mullw	16
  1579  000BD2  50F3               	movf	prodl,w,c
  1580  000BD4  261D               	addwf	??_getSerialData+2,f,c
  1581  000BD6  50F4               	movf	prodh,w,c
  1582  000BD8  221E               	addwfc	??_getSerialData+3,f,c
  1583  000BDA  502B               	movf	getSerialData@dataIn+12,w,c
  1584  000BDC  0D08               	mullw	8
  1585  000BDE  50F3               	movf	prodl,w,c
  1586  000BE0  261D               	addwf	??_getSerialData+2,f,c
  1587  000BE2  50F4               	movf	prodh,w,c
  1588  000BE4  221E               	addwfc	??_getSerialData+3,f,c
  1589  000BE6  502C               	movf	getSerialData@dataIn+13,w,c
  1590  000BE8  0D04               	mullw	4
  1591  000BEA  50F3               	movf	prodl,w,c
  1592  000BEC  261D               	addwf	??_getSerialData+2,f,c
  1593  000BEE  50F4               	movf	prodh,w,c
  1594  000BF0  221E               	addwfc	??_getSerialData+3,f,c
  1595  000BF2  502D               	movf	getSerialData@dataIn+14,w,c
  1596  000BF4  0D02               	mullw	2
  1597  000BF6  50F3               	movf	prodl,w,c
  1598  000BF8  261D               	addwf	??_getSerialData+2,f,c
  1599  000BFA  50F4               	movf	prodh,w,c
  1600  000BFC  221E               	addwfc	??_getSerialData+3,f,c
  1601  000BFE  502E               	movf	getSerialData@dataIn+15,w,c
  1602  000C00  0D01               	mullw	1
  1603  000C02  50F3               	movf	prodl,w,c
  1604  000C04  241D               	addwf	??_getSerialData+2,w,c
  1605  000C06  6E2F               	movwf	getSerialData@data,c
  1606  000C08  50F4               	movf	prodh,w,c
  1607  000C0A  201E               	addwfc	??_getSerialData+3,w,c
  1608  000C0C  6E30               	movwf	getSerialData@data+1,c
  1609                           
  1610                           ;Current_Sense_Main.c: 326: return data;
  1611  000C0E  C02F  F019         	movff	getSerialData@data,?_getSerialData
  1612  000C12  C030  F01A         	movff	getSerialData@data+1,?_getSerialData+1
  1613  000C16  0012               	return	
  1614  000C18                     __end_of_getSerialData:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           prodh	equ	0xFF4
  1621                           prodl	equ	0xFF3
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           postdec1	equ	0xFE5
  1625                           fsr1l	equ	0xFE1
  1626                           indf2	equ	0xFDF
  1627                           fsr2h	equ	0xFDA
  1628                           fsr2l	equ	0xFD9
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _initTimer *****************
  1632 ;; Defined at:
  1633 ;;		line 412 in file "Current_Sense_Main.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1647 ;;      Params:         0       0       0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662  001A02                     __ptext4:
  1663                           	opt stack 0
  1664  001A02                     _initTimer:
  1665                           	opt stack 29
  1666                           
  1667                           ;Current_Sense_Main.c: 415: T0CONbits.TMR0ON = 0;
  1668                           
  1669                           ;incstack = 0
  1670  001A02  9ED5               	bcf	4053,7,c	;volatile
  1671                           
  1672                           ;Current_Sense_Main.c: 416: T0CONbits.T08BIT = 0;
  1673  001A04  9CD5               	bcf	4053,6,c	;volatile
  1674                           
  1675                           ;Current_Sense_Main.c: 417: T0CONbits.T0CS = 0;
  1676  001A06  9AD5               	bcf	4053,5,c	;volatile
  1677                           
  1678                           ;Current_Sense_Main.c: 418: T0CONbits.PSA = 0;
  1679  001A08  96D5               	bcf	4053,3,c	;volatile
  1680                           
  1681                           ;Current_Sense_Main.c: 419: T0CONbits.T0PS = 0b001;
  1682  001A0A  50D5               	movf	4053,w,c	;volatile
  1683  001A0C  0BF8               	andlw	-8
  1684  001A0E  0901               	iorlw	1
  1685  001A10  6ED5               	movwf	4053,c	;volatile
  1686                           
  1687                           ;Current_Sense_Main.c: 421: INTCONbits.TMR0IE = 1;
  1688  001A12  8AF2               	bsf	intcon,5,c	;volatile
  1689                           
  1690                           ;Current_Sense_Main.c: 422: INTCONbits.GIE = 1;
  1691  001A14  8EF2               	bsf	intcon,7,c	;volatile
  1692                           
  1693                           ;Current_Sense_Main.c: 423: T0CONbits.TMR0ON = 1;
  1694  001A16  8ED5               	bsf	4053,7,c	;volatile
  1695  001A18  0012               	return		;funcret
  1696  001A1A                     __end_of_initTimer:
  1697                           	opt stack 0
  1698                           tblptru	equ	0xFF8
  1699                           tblptrh	equ	0xFF7
  1700                           tblptrl	equ	0xFF6
  1701                           tablat	equ	0xFF5
  1702                           prodh	equ	0xFF4
  1703                           prodl	equ	0xFF3
  1704                           intcon	equ	0xFF2
  1705                           postinc0	equ	0xFEE
  1706                           wreg	equ	0xFE8
  1707                           postdec1	equ	0xFE5
  1708                           fsr1l	equ	0xFE1
  1709                           indf2	equ	0xFDF
  1710                           fsr2h	equ	0xFDA
  1711                           fsr2l	equ	0xFD9
  1712                           status	equ	0xFD8
  1713                           
  1714 ;; *************** function _init *****************
  1715 ;; Defined at:
  1716 ;;		line 338 in file "Current_Sense_Main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1730 ;;      Params:         0       0       0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    2
  1737 ;; This function calls:
  1738 ;;		_initIO
  1739 ;;		_initInterruptsClear
  1740 ;;		_initMCPFout
  1741 ;;		_initOSC
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text5
  1748  001A5C                     __ptext5:
  1749                           	opt stack 0
  1750  001A5C                     _init:
  1751                           	opt stack 28
  1752                           
  1753                           ;Current_Sense_Main.c: 340: initOSC();
  1754                           
  1755                           ;incstack = 0
  1756  001A5C  EC0D  F00D         	call	_initOSC	;wreg free
  1757                           
  1758                           ;Current_Sense_Main.c: 341: initIO();
  1759  001A60  ECD1  F00C         	call	_initIO	;wreg free
  1760                           
  1761                           ;Current_Sense_Main.c: 342: initInterruptsClear();
  1762  001A64  ECC9  F00B         	call	_initInterruptsClear	;wreg free
  1763                           
  1764                           ;Current_Sense_Main.c: 343: initMCPFout();
  1765  001A68  EC78  F00A         	call	_initMCPFout	;wreg free
  1766  001A6C  0012               	return	
  1767  001A6E                     __end_of_init:
  1768                           	opt stack 0
  1769                           tblptru	equ	0xFF8
  1770                           tblptrh	equ	0xFF7
  1771                           tblptrl	equ	0xFF6
  1772                           tablat	equ	0xFF5
  1773                           prodh	equ	0xFF4
  1774                           prodl	equ	0xFF3
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1l	equ	0xFE1
  1780                           indf2	equ	0xFDF
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _initOSC *****************
  1786 ;; Defined at:
  1787 ;;		line 348 in file "Current_Sense_Main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1801 ;;      Params:         0       0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0
  1804 ;;      Totals:         0       0       0       0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_init
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text6
  1816  001A1A                     __ptext6:
  1817                           	opt stack 0
  1818  001A1A                     _initOSC:
  1819                           	opt stack 28
  1820                           
  1821                           ;Current_Sense_Main.c: 351: OSCCONbits.IDLEN = 0;
  1822                           
  1823                           ;incstack = 0
  1824  001A1A  9ED3               	bcf	4051,7,c	;volatile
  1825                           
  1826                           ;Current_Sense_Main.c: 352: OSCCONbits.IRCF = 0b111;
  1827  001A1C  88D3               	bsf	4051,4,c	;volatile
  1828  001A1E  8AD3               	bsf	4051,5,c	;volatile
  1829  001A20  8CD3               	bsf	4051,6,c	;volatile
  1830                           
  1831                           ;Current_Sense_Main.c: 353: OSCCONbits.SCS = 0b11;
  1832  001A22  0E03               	movlw	3
  1833  001A24  12D3               	iorwf	4051,f,c	;volatile
  1834                           
  1835                           ;Current_Sense_Main.c: 355: OSCCON2bits.MFIOSEL = 0;
  1836  001A26  98D2               	bcf	4050,4,c	;volatile
  1837                           
  1838                           ;Current_Sense_Main.c: 356: OSCCON2bits.SOSCGO = 0;
  1839  001A28  96D2               	bcf	4050,3,c	;volatile
  1840                           
  1841                           ;Current_Sense_Main.c: 357: OSCCON2bits.PRISD = 0;
  1842  001A2A  94D2               	bcf	4050,2,c	;volatile
  1843                           
  1844                           ;Current_Sense_Main.c: 359: OSCTUNEbits.INTSRC = 1;
  1845  001A2C  8E9B               	bsf	3995,7,c	;volatile
  1846                           
  1847                           ;Current_Sense_Main.c: 360: OSCTUNEbits.PLLEN = 0;
  1848  001A2E  9C9B               	bcf	3995,6,c	;volatile
  1849  001A30  0012               	return	
  1850  001A32                     __end_of_initOSC:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           indf2	equ	0xFDF
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _initMCPFout *****************
  1869 ;; Defined at:
  1870 ;;		line 429 in file "Current_Sense_Main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  i               2   35[COMRAM] int 
  1875 ;;  initSPIComma   16   19[COMRAM] int [8]
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1885 ;;      Params:         0       0       0       0       0       0       0
  1886 ;;      Locals:        18       0       0       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0       0       0
  1888 ;;      Totals:        19       0       0       0       0       0       0
  1889 ;;Total ram usage:       19 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;;		_init
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text7
  1901  0014F0                     __ptext7:
  1902                           	opt stack 0
  1903  0014F0                     _initMCPFout:
  1904                           	opt stack 29
  1905                           
  1906                           ;Current_Sense_Main.c: 435: TRISCbits.TRISC6 = 0;
  1907                           
  1908                           ;incstack = 0
  1909  0014F0  9C94               	bcf	3988,6,c	;volatile
  1910                           
  1911                           ;Current_Sense_Main.c: 438: TRISCbits.TRISC7 = 0;
  1912  0014F2  9E94               	bcf	3988,7,c	;volatile
  1913                           
  1914                           ;Current_Sense_Main.c: 439: TRISCbits.TRISC5 = 0;
  1915  0014F4  9A94               	bcf	3988,5,c	;volatile
  1916                           
  1917                           ;Current_Sense_Main.c: 440: TRISCbits.TRISC3 = 0;
  1918  0014F6  9694               	bcf	3988,3,c	;volatile
  1919                           
  1920                           ;Current_Sense_Main.c: 443: TRISCbits.TRISC5 = 0;
  1921  0014F8  9A94               	bcf	3988,5,c	;volatile
  1922                           
  1923                           ;Current_Sense_Main.c: 444: TRISCbits.TRISC7 = 0;
  1924  0014FA  9E94               	bcf	3988,7,c	;volatile
  1925                           
  1926                           ;Current_Sense_Main.c: 445: TRISCbits.TRISC3 = 0;
  1927  0014FC  9694               	bcf	3988,3,c	;volatile
  1928                           
  1929                           ;Current_Sense_Main.c: 446: TRISCbits.TRISC4 = 1;
  1930  0014FE  8894               	bsf	3988,4,c	;volatile
  1931                           
  1932                           ;Current_Sense_Main.c: 449: int initSPICommand[8] = {1, 0, 1, 0, 1, 1, 0, 0};
  1933  001500  EE20  F0DC         	lfsr	2,initMCPFout@F6870
  1934  001504  EE10  F014         	lfsr	1,initMCPFout@initSPICommand
  1935  001508  0E0F               	movlw	15
  1936  00150A                     u2451:
  1937  00150A  CFDB FFE3          	movff	plusw2,plusw1
  1938  00150E  06E8               	decf	wreg,f,c
  1939  001510  E2FC               	bc	u2451
  1940                           
  1941                           ;Current_Sense_Main.c: 450: LATCbits.LATC6 = 0;
  1942  001512  9C8B               	bcf	3979,6,c	;volatile
  1943                           
  1944                           ;Current_Sense_Main.c: 451: LATCbits.LATC7 = 0;
  1945  001514  9E8B               	bcf	3979,7,c	;volatile
  1946                           
  1947                           ;Current_Sense_Main.c: 452: LATCbits.LATC6 = 1;
  1948  001516  8C8B               	bsf	3979,6,c	;volatile
  1949                           
  1950                           ;Current_Sense_Main.c: 457: for (int i = 0; i < 8; i++) {
  1951  001518  0E00               	movlw	0
  1952  00151A  6E25               	movwf	initMCPFout@i+1,c
  1953  00151C  0E00               	movlw	0
  1954  00151E  6E24               	movwf	initMCPFout@i,c
  1955  001520  BE25               	btfsc	initMCPFout@i+1,7,c
  1956  001522  D003               	goto	l194
  1957  001524  5025               	movf	initMCPFout@i+1,w,c
  1958  001526  E11F               	bnz	l195
  1959  001528  D01A               	goto	L2
  1960  00152A                     l194:
  1961                           
  1962                           ;Current_Sense_Main.c: 458: LATCbits.LATC3 = 0;
  1963  00152A  968B               	bcf	3979,3,c	;volatile
  1964                           
  1965                           ;Current_Sense_Main.c: 459: LATCbits.LATC5 = initSPICommand[i];
  1966  00152C  90D8               	bcf	status,0,c
  1967  00152E  3424               	rlcf	initMCPFout@i,w,c
  1968  001530  6ED9               	movwf	fsr2l,c
  1969  001532  3425               	rlcf	initMCPFout@i+1,w,c
  1970  001534  6EDA               	movwf	fsr2h,c
  1971  001536  0E14               	movlw	low initMCPFout@initSPICommand
  1972  001538  26D9               	addwf	fsr2l,f,c
  1973  00153A  0E00               	movlw	high initMCPFout@initSPICommand
  1974  00153C  22DA               	addwfc	fsr2h,f,c
  1975  00153E  50DF               	movf	indf2,w,c
  1976  001540  6E13               	movwf	??_initMCPFout& (0+255),c
  1977  001542  3A13               	swapf	??_initMCPFout,f,c
  1978  001544  4613               	rlncf	??_initMCPFout,f,c
  1979  001546  508B               	movf	3979,w,c	;volatile
  1980  001548  1813               	xorwf	??_initMCPFout,w,c
  1981  00154A  0BDF               	andlw	-33
  1982  00154C  1813               	xorwf	??_initMCPFout,w,c
  1983  00154E  6E8B               	movwf	3979,c	;volatile
  1984                           
  1985                           ;Current_Sense_Main.c: 460: LATCbits.LATC3 = 1;
  1986  001550  868B               	bsf	3979,3,c	;volatile
  1987  001552  4A24               	infsnz	initMCPFout@i,f,c
  1988  001554  2A25               	incf	initMCPFout@i+1,f,c
  1989  001556  BE25               	btfsc	initMCPFout@i+1,7,c
  1990  001558  D7E8               	goto	l194
  1991  00155A  5025               	movf	initMCPFout@i+1,w,c
  1992  00155C  E104               	bnz	u2470
  1993  00155E                     L2:
  1994  00155E  0E08               	movlw	8
  1995  001560  5C24               	subwf	initMCPFout@i,w,c
  1996  001562  A0D8               	btfss	status,0,c
  1997  001564  D7E2               	goto	l194
  1998  001566                     u2470:
  1999  001566                     l195:
  2000                           
  2001                           ;Current_Sense_Main.c: 462: }
  2002                           ;Current_Sense_Main.c: 463: LATCbits.LATC3 = 0;
  2003  001566  968B               	bcf	3979,3,c	;volatile
  2004                           
  2005                           ;Current_Sense_Main.c: 465: return;
  2006  001568  0012               	return		;funcret
  2007  00156A                     __end_of_initMCPFout:
  2008                           	opt stack 0
  2009                           tblptru	equ	0xFF8
  2010                           tblptrh	equ	0xFF7
  2011                           tblptrl	equ	0xFF6
  2012                           tablat	equ	0xFF5
  2013                           prodh	equ	0xFF4
  2014                           prodl	equ	0xFF3
  2015                           intcon	equ	0xFF2
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           plusw1	equ	0xFE3
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           plusw2	equ	0xFDB
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _initInterruptsClear *****************
  2028 ;; Defined at:
  2029 ;;		line 383 in file "Current_Sense_Main.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2043 ;;      Params:         0       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_init
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text8
  2058  001792                     __ptext8:
  2059                           	opt stack 0
  2060  001792                     _initInterruptsClear:
  2061                           	opt stack 28
  2062                           
  2063                           ;Current_Sense_Main.c: 386: INTCON = 0b00000000;
  2064                           
  2065                           ;incstack = 0
  2066  001792  0E00               	movlw	0
  2067  001794  6EF2               	movwf	intcon,c	;volatile
  2068                           
  2069                           ;Current_Sense_Main.c: 387: INTCON2 = 0b00000000;
  2070  001796  0E00               	movlw	0
  2071  001798  6EF1               	movwf	intcon2,c	;volatile
  2072                           
  2073                           ;Current_Sense_Main.c: 388: INTCON3 = 0b00000000;
  2074  00179A  0E00               	movlw	0
  2075  00179C  6EF0               	movwf	intcon3,c	;volatile
  2076                           
  2077                           ;Current_Sense_Main.c: 390: RCONbits.IPEN = 0;
  2078  00179E  9ED0               	bcf	4048,7,c	;volatile
  2079                           
  2080                           ;Current_Sense_Main.c: 392: PIR1 = 0b00000000;
  2081  0017A0  0E00               	movlw	0
  2082  0017A2  6E9E               	movwf	3998,c	;volatile
  2083                           
  2084                           ;Current_Sense_Main.c: 393: PIR2 = 0b00000000;
  2085  0017A4  0E00               	movlw	0
  2086  0017A6  6EA1               	movwf	4001,c	;volatile
  2087                           
  2088                           ;Current_Sense_Main.c: 394: PIR3 = 0b00000000;
  2089  0017A8  0E00               	movlw	0
  2090  0017AA  6EA4               	movwf	4004,c	;volatile
  2091                           
  2092                           ;Current_Sense_Main.c: 395: PIR4 = 0b00000000;
  2093  0017AC  0E00               	movlw	0
  2094  0017AE  6E7B               	movwf	3963,c	;volatile
  2095                           
  2096                           ;Current_Sense_Main.c: 396: PIR5 = 0b00000000;
  2097  0017B0  0E00               	movlw	0
  2098  0017B2  6E7E               	movwf	3966,c	;volatile
  2099                           
  2100                           ;Current_Sense_Main.c: 398: PIE1 = 0b00000000;
  2101  0017B4  0E00               	movlw	0
  2102  0017B6  6E9D               	movwf	3997,c	;volatile
  2103                           
  2104                           ;Current_Sense_Main.c: 399: PIE2 = 0b00000000;
  2105  0017B8  0E00               	movlw	0
  2106  0017BA  6EA0               	movwf	4000,c	;volatile
  2107                           
  2108                           ;Current_Sense_Main.c: 400: PIE3 = 0b00000000;
  2109  0017BC  0E00               	movlw	0
  2110  0017BE  6EA3               	movwf	4003,c	;volatile
  2111                           
  2112                           ;Current_Sense_Main.c: 401: PIE4 = 0b00000000;
  2113  0017C0  0E00               	movlw	0
  2114  0017C2  6E7A               	movwf	3962,c	;volatile
  2115                           
  2116                           ;Current_Sense_Main.c: 402: PIE5 = 0b00000000;
  2117  0017C4  0E00               	movlw	0
  2118  0017C6  6E7D               	movwf	3965,c	;volatile
  2119                           
  2120                           ;Current_Sense_Main.c: 404: IPR1 = 0b00000000;
  2121  0017C8  0E00               	movlw	0
  2122  0017CA  6E9F               	movwf	3999,c	;volatile
  2123                           
  2124                           ;Current_Sense_Main.c: 405: IPR2 = 0b00000000;
  2125  0017CC  0E00               	movlw	0
  2126  0017CE  6EA2               	movwf	4002,c	;volatile
  2127                           
  2128                           ;Current_Sense_Main.c: 406: IPR3 = 0b00000000;
  2129  0017D0  0E00               	movlw	0
  2130  0017D2  6EA5               	movwf	4005,c	;volatile
  2131                           
  2132                           ;Current_Sense_Main.c: 407: IPR4 = 0b00000000;
  2133  0017D4  0E00               	movlw	0
  2134  0017D6  6E7C               	movwf	3964,c	;volatile
  2135                           
  2136                           ;Current_Sense_Main.c: 408: IPR5 = 0b00000000;
  2137  0017D8  0E00               	movlw	0
  2138  0017DA  6E7F               	movwf	3967,c	;volatile
  2139  0017DC  0012               	return		;funcret
  2140  0017DE                     __end_of_initInterruptsClear:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           intcon2	equ	0xFF1
  2150                           intcon3	equ	0xFF0
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           postdec1	equ	0xFE5
  2154                           plusw1	equ	0xFE3
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           plusw2	equ	0xFDB
  2158                           fsr2h	equ	0xFDA
  2159                           fsr2l	equ	0xFD9
  2160                           status	equ	0xFD8
  2161                           
  2162 ;; *************** function _initIO *****************
  2163 ;; Defined at:
  2164 ;;		line 365 in file "Current_Sense_Main.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;		None
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2178 ;;      Params:         0       0       0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0
  2181 ;;      Totals:         0       0       0       0       0       0       0
  2182 ;;Total ram usage:        0 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    1
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_init
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text9
  2193  0019A2                     __ptext9:
  2194                           	opt stack 0
  2195  0019A2                     _initIO:
  2196                           	opt stack 28
  2197                           
  2198                           ;Current_Sense_Main.c: 367: ADCON0bits.ADON = 0;
  2199                           
  2200                           ;incstack = 0
  2201  0019A2  90C2               	bcf	4034,0,c	;volatile
  2202                           
  2203                           ;Current_Sense_Main.c: 368: ANSELA = 0b00000000;
  2204  0019A4  0E00               	movlw	0
  2205  0019A6  010F               	movlb	15	; () banked
  2206  0019A8  6F38               	movwf	56,b	;volatile
  2207                           
  2208                           ;Current_Sense_Main.c: 369: ANSELB = 0b00000000;
  2209  0019AA  0E00               	movlw	0
  2210  0019AC  010F               	movlb	15	; () banked
  2211  0019AE  6F39               	movwf	57,b	;volatile
  2212                           
  2213                           ;Current_Sense_Main.c: 370: ANSELC = 0b00000000;
  2214  0019B0  0E00               	movlw	0
  2215  0019B2  010F               	movlb	15	; () banked
  2216  0019B4  6F3A               	movwf	58,b	;volatile
  2217                           
  2218                           ; BSR set to: 15
  2219                           ;Current_Sense_Main.c: 372: TRISBbits.TRISB4 = 0;
  2220  0019B6  9893               	bcf	3987,4,c	;volatile
  2221                           
  2222                           ; BSR set to: 15
  2223                           ;Current_Sense_Main.c: 373: LATBbits.LATB4 = 0;
  2224  0019B8  988A               	bcf	3978,4,c	;volatile
  2225                           
  2226                           ; BSR set to: 15
  2227                           ;Current_Sense_Main.c: 375: TRISCbits.TRISC2 = 1;
  2228  0019BA  8494               	bsf	3988,2,c	;volatile
  2229                           
  2230                           ; BSR set to: 15
  2231                           ;Current_Sense_Main.c: 376: TRISAbits.TRISA1 = 1;
  2232  0019BC  8292               	bsf	3986,1,c	;volatile
  2233                           
  2234                           ; BSR set to: 15
  2235                           ;Current_Sense_Main.c: 377: TRISAbits.TRISA0 = 0;
  2236  0019BE  9092               	bcf	3986,0,c	;volatile
  2237                           
  2238                           ; BSR set to: 15
  2239                           ;Current_Sense_Main.c: 378: LATAbits.LATA0 = 0;
  2240  0019C0  9089               	bcf	3977,0,c	;volatile
  2241  0019C2  0012               	return	
  2242  0019C4                     __end_of_initIO:
  2243                           	opt stack 0
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           prodh	equ	0xFF4
  2249                           prodl	equ	0xFF3
  2250                           intcon	equ	0xFF2
  2251                           intcon2	equ	0xFF1
  2252                           intcon3	equ	0xFF0
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           plusw1	equ	0xFE3
  2257                           fsr1l	equ	0xFE1
  2258                           indf2	equ	0xFDF
  2259                           plusw2	equ	0xFDB
  2260                           fsr2h	equ	0xFDA
  2261                           fsr2l	equ	0xFD9
  2262                           status	equ	0xFD8
  2263                           
  2264 ;; *************** function _delayMS10 *****************
  2265 ;; Defined at:
  2266 ;;		line 329 in file "Current_Sense_Main.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  count           2   18[COMRAM] int 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  inx             2   21[COMRAM] int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         2       0       0       0       0       0       0
  2281 ;;      Locals:         2       0       0       0       0       0       0
  2282 ;;      Temps:          1       0       0       0       0       0       0
  2283 ;;      Totals:         5       0       0       0       0       0       0
  2284 ;;Total ram usage:        5 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text10
  2295  0018A8                     __ptext10:
  2296                           	opt stack 0
  2297  0018A8                     _delayMS10:
  2298                           	opt stack 29
  2299                           
  2300                           ;Current_Sense_Main.c: 331: for (int inx = 0; inx < count; inx++)
  2301                           
  2302                           ; BSR set to: 15
  2303                           ;incstack = 0
  2304  0018A8  0E00               	movlw	0
  2305  0018AA  6E17               	movwf	delayMS10@inx+1,c
  2306  0018AC  0E00               	movlw	0
  2307  0018AE  6E16               	movwf	delayMS10@inx,c
  2308  0018B0  D009               	goto	l171
  2309  0018B2                     
  2310                           ;Current_Sense_Main.c: 332: {
  2311                           ;Current_Sense_Main.c: 334: _delay((unsigned long)((10)*(16000000/4000.0)));
  2312  0018B2  0E34               	movlw	52
  2313  0018B4  6E15               	movwf	??_delayMS10& (0+255),c
  2314  0018B6  0EF2               	movlw	242
  2315  0018B8                     u2807:
  2316  0018B8  2EE8               	decfsz	wreg,f,c
  2317  0018BA  D7FE               	bra	u2807
  2318  0018BC  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2319  0018BE  D7FC               	bra	u2807
  2320  0018C0  4A16               	infsnz	delayMS10@inx,f,c
  2321  0018C2  2A17               	incf	delayMS10@inx+1,f,c
  2322  0018C4                     l171:
  2323  0018C4  5013               	movf	delayMS10@count,w,c
  2324  0018C6  5C16               	subwf	delayMS10@inx,w,c
  2325  0018C8  5017               	movf	delayMS10@inx+1,w,c
  2326  0018CA  0A80               	xorlw	128
  2327  0018CC  6E15               	movwf	??_delayMS10& (0+255),c
  2328  0018CE  5014               	movf	delayMS10@count+1,w,c
  2329  0018D0  0A80               	xorlw	128
  2330  0018D2  5815               	subwfb	??_delayMS10& (0+255),w,c
  2331  0018D4  B0D8               	btfsc	status,0,c
  2332  0018D6  0012               	return	
  2333  0018D8  D7EC               	goto	l172
  2334  0018DA                     __end_of_delayMS10:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           prodh	equ	0xFF4
  2341                           prodl	equ	0xFF3
  2342                           intcon	equ	0xFF2
  2343                           intcon2	equ	0xFF1
  2344                           intcon3	equ	0xFF0
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           postdec1	equ	0xFE5
  2348                           plusw1	equ	0xFE3
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           plusw2	equ	0xFDB
  2352                           fsr2h	equ	0xFDA
  2353                           fsr2l	equ	0xFD9
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _communications *****************
  2357 ;; Defined at:
  2358 ;;		line 89 in file "SlaveComm_PIC18.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  firstTime       1    wreg     unsigned char 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  firstTime       1   60[BANK0 ] unsigned char 
  2363 ;;  no_more_to_s    1   59[BANK0 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         0       0       0       0       0       0       0
  2374 ;;      Locals:         0       2       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0
  2376 ;;      Totals:         0       2       0       0       0       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    7
  2380 ;; This function calls:
  2381 ;;		_SPISlaveInit
  2382 ;;		_process_data
  2383 ;;		_receive_data
  2384 ;;		_resetCommunications
  2385 ;;		_send_data
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text11
  2392  001172                     __ptext11:
  2393                           	opt stack 0
  2394  001172                     _communications:
  2395                           	opt stack 23
  2396                           
  2397                           ;incstack = 0
  2398                           ;communications@firstTime stored from wreg
  2399  001172  0100               	movlb	0	; () banked
  2400  001174  6F9C               	movwf	communications@firstTime& (0+255),b
  2401                           
  2402                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2403                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2404                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2405                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2406                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2407                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2408  001176  0100               	movlb	0	; () banked
  2409  001178  059C               	decf	communications@firstTime& (0+255),w,b
  2410  00117A  A4D8               	btfss	status,2,c
  2411  00117C  D011               	goto	l279
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;SlaveComm_PIC18.c: 101: {
  2415                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2416  00117E  ECA1  F00B         	call	_SPISlaveInit	;wreg free
  2417                           
  2418                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2419  001182  0E00               	movlw	0
  2420  001184  0100               	movlb	0	; () banked
  2421  001186  6FDA               	movwf	(communications@send_buffer+40)& (0+255),b
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2425  001188  0E00               	movlw	0
  2426  00118A  0100               	movlb	0	; () banked
  2427  00118C  6FDB               	movwf	(communications@send_buffer+41)& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2431  00118E  0EB2               	movlw	low communications@send_buffer
  2432  001190  0100               	movlb	0	; () banked
  2433  001192  6F60               	movwf	resetCommunications@send_buffer& (0+255),b
  2434  001194  0E00               	movlw	high communications@send_buffer
  2435  001196  0100               	movlb	0	; () banked
  2436  001198  6F61               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2437  00119A  EC11  F009         	call	_resetCommunications	;wreg free
  2438                           
  2439                           ;SlaveComm_PIC18.c: 106: }
  2440  00119E  0012               	return	
  2441  0011A0                     l279:
  2442                           
  2443                           ;SlaveComm_PIC18.c: 107: else
  2444                           ;SlaveComm_PIC18.c: 108: {
  2445                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2446  0011A0  0E00               	movlw	low communications@receive_buffer
  2447  0011A2  6E16               	movwf	receive_data@receive_buffer,c
  2448  0011A4  0E01               	movlw	high communications@receive_buffer
  2449  0011A6  6E17               	movwf	receive_data@receive_buffer+1,c
  2450  0011A8  ECFF  F007         	call	_receive_data	;wreg free
  2451  0011AC  6E44               	movwf	communications@receive_current_state,c
  2452                           
  2453                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2454  0011AE  D014               	goto	l281
  2455  0011B0                     
  2456                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2457  0011B0  0E00               	movlw	low communications@receive_buffer
  2458  0011B2  0100               	movlb	0	; () banked
  2459  0011B4  6F64               	movwf	process_data@receive_buffer& (0+255),b
  2460  0011B6  0E01               	movlw	high communications@receive_buffer
  2461  0011B8  0100               	movlb	0	; () banked
  2462  0011BA  6F65               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2463  0011BC  0EB2               	movlw	low communications@send_buffer
  2464  0011BE  0100               	movlb	0	; () banked
  2465  0011C0  6F66               	movwf	process_data@send_buffer& (0+255),b
  2466  0011C2  0E00               	movlw	high communications@send_buffer
  2467  0011C4  0100               	movlb	0	; () banked
  2468  0011C6  6F67               	movwf	(process_data@send_buffer+1)& (0+255),b
  2469  0011C8  EC39  F00C         	call	_process_data	;wreg free
  2470  0011CC  06E8               	decf	wreg,f,c
  2471  0011CE  A4D8               	btfss	status,2,c
  2472  0011D0  D00D               	goto	l283
  2473                           
  2474                           ;SlaveComm_PIC18.c: 122: {
  2475                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2476  0011D2  0E01               	movlw	1
  2477  0011D4  6E45               	movwf	communications@end_of_transmission_received,c
  2478                           
  2479                           ;SlaveComm_PIC18.c: 127: }
  2480                           
  2481                           ;SlaveComm_PIC18.c: 124: }
  2482                           ;SlaveComm_PIC18.c: 126: break;
  2483  0011D6  D00A               	goto	l283
  2484  0011D8                     l281:
  2485  0011D8  5044               	movf	communications@receive_current_state,w,c
  2486                           
  2487                           ; Switch size 1, requested type "space"
  2488                           ; Number of cases is 3, Range of values is 0 to 2
  2489                           ; switch strategies available:
  2490                           ; Name         Instructions Cycles
  2491                           ; simple_byte           10     6 (average)
  2492                           ;	Chosen strategy is simple_byte
  2493  0011DA  0A00               	xorlw	0	; case 0
  2494  0011DC  B4D8               	btfsc	status,2,c
  2495  0011DE  D006               	goto	l283
  2496  0011E0  0A01               	xorlw	1	; case 1
  2497  0011E2  B4D8               	btfsc	status,2,c
  2498  0011E4  D003               	goto	l283
  2499  0011E6  0A03               	xorlw	3	; case 2
  2500  0011E8  B4D8               	btfsc	status,2,c
  2501  0011EA  D7E2               	goto	l285
  2502  0011EC                     l283:
  2503                           
  2504                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2505  0011EC  0EB2               	movlw	low communications@send_buffer
  2506  0011EE  6E15               	movwf	send_data@send_buffer,c
  2507  0011F0  0E00               	movlw	high communications@send_buffer
  2508  0011F2  6E16               	movwf	send_data@send_buffer+1,c
  2509  0011F4  ECB1  F009         	call	_send_data	;wreg free
  2510  0011F8  0100               	movlb	0	; () banked
  2511  0011FA  6F9B               	movwf	communications@no_more_to_send& (0+255),b
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2515                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2516  0011FC  A081               	btfss	3969,0,c	;volatile
  2517  0011FE  D003               	goto	l289
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;SlaveComm_PIC18.c: 134: {
  2521                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2522  001200  0E00               	movlw	0
  2523  001202  6E43               	movwf	communications@last_state_active,c
  2524                           
  2525                           ;SlaveComm_PIC18.c: 136: }
  2526  001204  0012               	return	
  2527  001206                     l289:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;SlaveComm_PIC18.c: 137: else
  2531                           ;SlaveComm_PIC18.c: 138: {
  2532                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2533                           
  2534                           ; BSR set to: 0
  2535  001206  5043               	movf	communications@last_state_active,w,c
  2536  001208  A4D8               	btfss	status,2,c
  2537  00120A  D008               	goto	l291
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;SlaveComm_PIC18.c: 140: {
  2541                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2542  00120C  0EB2               	movlw	low communications@send_buffer
  2543  00120E  0100               	movlb	0	; () banked
  2544  001210  6F60               	movwf	resetCommunications@send_buffer& (0+255),b
  2545  001212  0E00               	movlw	high communications@send_buffer
  2546  001214  0100               	movlb	0	; () banked
  2547  001216  6F61               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2548  001218  EC11  F009         	call	_resetCommunications	;wreg free
  2549  00121C                     l291:
  2550                           
  2551                           ;SlaveComm_PIC18.c: 142: }
  2552                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2553  00121C  0E01               	movlw	1
  2554  00121E  6E43               	movwf	communications@last_state_active,c
  2555  001220  0012               	return	
  2556  001222                     __end_of_communications:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           prodh	equ	0xFF4
  2563                           prodl	equ	0xFF3
  2564                           intcon	equ	0xFF2
  2565                           intcon2	equ	0xFF1
  2566                           intcon3	equ	0xFF0
  2567                           postinc0	equ	0xFEE
  2568                           wreg	equ	0xFE8
  2569                           postdec1	equ	0xFE5
  2570                           plusw1	equ	0xFE3
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           plusw2	equ	0xFDB
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _send_data *****************
  2579 ;; Defined at:
  2580 ;;		line 485 in file "SlaveComm_PIC18.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2583 ;;		 -> communications@send_buffer(42), 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  send_end        1   24[COMRAM] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      unsigned char 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2595 ;;      Params:         2       0       0       0       0       0       0
  2596 ;;      Locals:         1       0       0       0       0       0       0
  2597 ;;      Temps:          2       0       0       0       0       0       0
  2598 ;;      Totals:         5       0       0       0       0       0       0
  2599 ;;Total ram usage:        5 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		_SPI_send_data
  2604 ;; This function is called by:
  2605 ;;		_communications
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text12
  2610  001362                     __ptext12:
  2611                           	opt stack 0
  2612  001362                     _send_data:
  2613                           	opt stack 27
  2614                           
  2615                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2616                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2617                           
  2618                           ;incstack = 0
  2619  001362  EE20 F028          	lfsr	2,40
  2620  001366  5015               	movf	send_data@send_buffer,w,c
  2621  001368  26D9               	addwf	fsr2l,f,c
  2622  00136A  5016               	movf	send_data@send_buffer+1,w,c
  2623  00136C  22DA               	addwfc	fsr2h,f,c
  2624  00136E  EE10 F029          	lfsr	1,41
  2625  001372  5015               	movf	send_data@send_buffer,w,c
  2626  001374  26E1               	addwf	fsr1l,f,c
  2627  001376  5016               	movf	send_data@send_buffer+1,w,c
  2628  001378  22E2               	addwfc	fsr1h,f,c
  2629  00137A  50DE               	movf	postinc2,w,c
  2630  00137C  18E6               	xorwf	postinc1,w,c
  2631  00137E  A4D8               	btfss	status,2,c
  2632  001380  D006               	goto	l389
  2633                           
  2634                           ;SlaveComm_PIC18.c: 490: {
  2635                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2636  001382  0E01               	movlw	1
  2637  001384  6E19               	movwf	send_data@send_end,c
  2638                           
  2639                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2640  001386  0E00               	movlw	0
  2641  001388  ECE2  F00C         	call	_SPI_send_data
  2642                           
  2643                           ;SlaveComm_PIC18.c: 493: }
  2644  00138C  D030               	goto	l392
  2645  00138E                     l389:
  2646                           
  2647                           ;SlaveComm_PIC18.c: 494: else
  2648                           ;SlaveComm_PIC18.c: 495: {
  2649                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2650  00138E  0E00               	movlw	0
  2651  001390  6E19               	movwf	send_data@send_end,c
  2652                           
  2653                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2654  001392  EE20 F029          	lfsr	2,41
  2655  001396  5015               	movf	send_data@send_buffer,w,c
  2656  001398  26D9               	addwf	fsr2l,f,c
  2657  00139A  5016               	movf	send_data@send_buffer+1,w,c
  2658  00139C  22DA               	addwfc	fsr2h,f,c
  2659  00139E  50DF               	movf	indf2,w,c
  2660  0013A0  6E17               	movwf	??_send_data& (0+255),c
  2661  0013A2  5017               	movf	??_send_data,w,c
  2662  0013A4  0D01               	mullw	1
  2663  0013A6  50F3               	movf	prodl,w,c
  2664  0013A8  2415               	addwf	send_data@send_buffer,w,c
  2665  0013AA  6ED9               	movwf	fsr2l,c
  2666  0013AC  50F4               	movf	prodh,w,c
  2667  0013AE  2016               	addwfc	send_data@send_buffer+1,w,c
  2668  0013B0  6EDA               	movwf	fsr2h,c
  2669  0013B2  50DF               	movf	indf2,w,c
  2670  0013B4  ECE2  F00C         	call	_SPI_send_data
  2671  0013B8  06E8               	decf	wreg,f,c
  2672  0013BA  A4D8               	btfss	status,2,c
  2673  0013BC  D018               	goto	l392
  2674                           
  2675                           ;SlaveComm_PIC18.c: 500: {
  2676                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2677  0013BE  EE20 F029          	lfsr	2,41
  2678  0013C2  5015               	movf	send_data@send_buffer,w,c
  2679  0013C4  26D9               	addwf	fsr2l,f,c
  2680  0013C6  5016               	movf	send_data@send_buffer+1,w,c
  2681  0013C8  22DA               	addwfc	fsr2h,f,c
  2682  0013CA  2ADF               	incf	indf2,f,c
  2683                           
  2684                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2685  0013CC  EE20 F029          	lfsr	2,41
  2686  0013D0  5015               	movf	send_data@send_buffer,w,c
  2687  0013D2  26D9               	addwf	fsr2l,f,c
  2688  0013D4  5016               	movf	send_data@send_buffer+1,w,c
  2689  0013D6  22DA               	addwfc	fsr2h,f,c
  2690  0013D8  0E27               	movlw	39
  2691  0013DA  64DF               	cpfsgt	indf2,c
  2692  0013DC  D008               	goto	l392
  2693                           
  2694                           ;SlaveComm_PIC18.c: 504: {
  2695                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2696  0013DE  EE20 F029          	lfsr	2,41
  2697  0013E2  5015               	movf	send_data@send_buffer,w,c
  2698  0013E4  26D9               	addwf	fsr2l,f,c
  2699  0013E6  5016               	movf	send_data@send_buffer+1,w,c
  2700  0013E8  22DA               	addwfc	fsr2h,f,c
  2701  0013EA  0E00               	movlw	0
  2702  0013EC  6EDF               	movwf	indf2,c
  2703  0013EE                     l392:
  2704                           
  2705                           ;SlaveComm_PIC18.c: 506: }
  2706                           ;SlaveComm_PIC18.c: 507: }
  2707                           ;SlaveComm_PIC18.c: 508: }
  2708                           ;SlaveComm_PIC18.c: 510: return send_end;
  2709  0013EE  5019               	movf	send_data@send_end,w,c
  2710  0013F0  0012               	return	
  2711  0013F2                     __end_of_send_data:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           intcon	equ	0xFF2
  2720                           intcon2	equ	0xFF1
  2721                           intcon3	equ	0xFF0
  2722                           postinc0	equ	0xFEE
  2723                           wreg	equ	0xFE8
  2724                           postinc1	equ	0xFE6
  2725                           postdec1	equ	0xFE5
  2726                           plusw1	equ	0xFE3
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           indf2	equ	0xFDF
  2730                           postinc2	equ	0xFDE
  2731                           plusw2	equ	0xFDB
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _SPI_send_data *****************
  2737 ;; Defined at:
  2738 ;;		line 583 in file "SlaveComm_PIC18.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  data            1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  data            1   18[COMRAM] unsigned char 
  2743 ;;  sendGood        1   19[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      unsigned char 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         0       0       0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0
  2756 ;;      Totals:         2       0       0       0       0       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_send_data
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text13
  2768  0019C4                     __ptext13:
  2769                           	opt stack 0
  2770  0019C4                     _SPI_send_data:
  2771                           	opt stack 27
  2772                           
  2773                           ;incstack = 0
  2774                           ;SPI_send_data@data stored from wreg
  2775  0019C4  6E13               	movwf	SPI_send_data@data,c
  2776                           
  2777                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2778  0019C6  0E00               	movlw	0
  2779  0019C8  6E14               	movwf	SPI_send_data@sendGood,c
  2780                           
  2781                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  2782  0019CA  5046               	movf	_SPI_transmit_wait,w,c
  2783  0019CC  A4D8               	btfss	status,2,c
  2784  0019CE  D006               	goto	l420
  2785                           
  2786                           ;SlaveComm_PIC18.c: 588: {
  2787                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  2788  0019D0  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2789                           
  2790                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  2791  0019D4  0E01               	movlw	1
  2792  0019D6  6E46               	movwf	_SPI_transmit_wait,c
  2793                           
  2794                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  2795  0019D8  0E01               	movlw	1
  2796  0019DA  D001               	goto	L3
  2797  0019DC                     l420:
  2798                           
  2799                           ;SlaveComm_PIC18.c: 593: else
  2800                           ;SlaveComm_PIC18.c: 594: {
  2801                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  2802  0019DC  0E00               	movlw	0
  2803  0019DE                     L3:
  2804  0019DE  6E14               	movwf	SPI_send_data@sendGood,c
  2805                           
  2806                           ;SlaveComm_PIC18.c: 596: }
  2807                           ;SlaveComm_PIC18.c: 598: return sendGood;
  2808  0019E0  5014               	movf	SPI_send_data@sendGood,w,c
  2809  0019E2  0012               	return	
  2810  0019E4                     __end_of_SPI_send_data:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           intcon	equ	0xFF2
  2819                           intcon2	equ	0xFF1
  2820                           intcon3	equ	0xFF0
  2821                           postinc0	equ	0xFEE
  2822                           wreg	equ	0xFE8
  2823                           postinc1	equ	0xFE6
  2824                           postdec1	equ	0xFE5
  2825                           plusw1	equ	0xFE3
  2826                           fsr1h	equ	0xFE2
  2827                           fsr1l	equ	0xFE1
  2828                           indf2	equ	0xFDF
  2829                           postinc2	equ	0xFDE
  2830                           plusw2	equ	0xFDB
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _resetCommunications *****************
  2836 ;; Defined at:
  2837 ;;		line 152 in file "SlaveComm_PIC18.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  send_buffer     2    0[BANK0 ] PTR struct buffer
  2840 ;;		 -> communications@send_buffer(42), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       2       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0
  2854 ;;      Temps:          0       2       0       0       0       0       0
  2855 ;;      Totals:         0       4       0       0       0       0       0
  2856 ;;Total ram usage:        4 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    5
  2859 ;; This function calls:
  2860 ;;		_com_command_setEnergyUsed
  2861 ;;		_com_command_setPower
  2862 ;;		_com_command_setVersion
  2863 ;; This function is called by:
  2864 ;;		_communications
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text14
  2869  001222                     __ptext14:
  2870                           	opt stack 0
  2871  001222                     _resetCommunications:
  2872                           	opt stack 24
  2873                           
  2874                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2875                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2876                           
  2877                           ;incstack = 0
  2878  001222  9A6C               	bcf	3948,5,c	;volatile
  2879                           
  2880                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  2881  001224  0E06               	movlw	6
  2882  001226  0100               	movlb	0	; () banked
  2883  001228  6F62               	movwf	??_resetCommunications& (0+255),b
  2884  00122A  0E30               	movlw	48
  2885  00122C                     u2817:
  2886  00122C  2EE8               	decfsz	wreg,f,c
  2887  00122E  D7FE               	bra	u2817
  2888  001230  2F62               	decfsz	??_resetCommunications& (0+255),f,b
  2889  001232  D7FC               	bra	u2817
  2890  001234  F000               	nop	
  2891                           
  2892                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  2893  001236  8A6C               	bsf	3948,5,c	;volatile
  2894                           
  2895                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  2896  001238  9E6C               	bcf	3948,7,c	;volatile
  2897                           
  2898                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  2899  00123A  0E00               	movlw	0
  2900  00123C  6E46               	movwf	_SPI_transmit_wait,c
  2901                           
  2902                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  2903  00123E  0100               	movlb	0	; () banked
  2904  001240  EE20 F029          	lfsr	2,41
  2905  001244  5160               	movf	resetCommunications@send_buffer& (0+255),w,b
  2906  001246  26D9               	addwf	fsr2l,f,c
  2907  001248  5161               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2908  00124A  22DA               	addwfc	fsr2h,f,c
  2909  00124C  0E00               	movlw	0
  2910  00124E  6EDF               	movwf	indf2,c
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  2914  001250  0100               	movlb	0	; () banked
  2915  001252  EE20 F028          	lfsr	2,40
  2916  001256  5160               	movf	resetCommunications@send_buffer& (0+255),w,b
  2917  001258  26D9               	addwf	fsr2l,f,c
  2918  00125A  5161               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  2919  00125C  22DA               	addwfc	fsr2h,f,c
  2920  00125E  0E00               	movlw	0
  2921  001260  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;SlaveComm_PIC18.c: 171: commState++;
  2925  001262  4A40               	infsnz	resetCommunications@commState,f,c
  2926  001264  2A41               	incf	resetCommunications@commState+1,f,c
  2927                           
  2928                           ;SlaveComm_PIC18.c: 172: switch (commState)
  2929  001266  D019               	goto	l297
  2930  001268                     
  2931                           ; BSR set to: 0
  2932                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  2933                           
  2934                           ; BSR set to: 0
  2935  001268  C060  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2936  00126C  C061  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2937  001270  EC99  F00C         	call	_com_command_setVersion	;wreg free
  2938                           
  2939                           ;SlaveComm_PIC18.c: 176: break;
  2940  001274  0012               	return	
  2941  001276                     
  2942                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  2943  001276  C060  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2944  00127A  C061  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2945  00127E  ECEF  F00B         	call	_com_command_setPower	;wreg free
  2946                           
  2947                           ;SlaveComm_PIC18.c: 179: break;
  2948  001282  0012               	return	
  2949  001284                     
  2950                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  2951  001284  C060  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2952  001288  C061  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2953  00128C  EC14  F00C         	call	_com_command_setEnergyUsed	;wreg free
  2954  001290                     
  2955                           ;SlaveComm_PIC18.c: 193: commState = 0;
  2956  001290  0E00               	movlw	0
  2957  001292  6E41               	movwf	resetCommunications@commState+1,c
  2958  001294  0E00               	movlw	0
  2959  001296  6E40               	movwf	resetCommunications@commState,c
  2960                           
  2961                           ;SlaveComm_PIC18.c: 195: }
  2962                           
  2963                           ;SlaveComm_PIC18.c: 194: break;
  2964  001298  0012               	return	
  2965  00129A                     l297:
  2966  00129A  C040  F062         	movff	resetCommunications@commState,??_resetCommunications
  2967  00129E  C041  F063         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2968                           
  2969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2970                           ; Switch size 1, requested type "space"
  2971                           ; Number of cases is 1, Range of values is 0 to 0
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            4     3 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  0012A2  0100               	movlb	0	; () banked
  2977  0012A4  5163               	movf	(??_resetCommunications+1)& (0+255),w,b
  2978  0012A6  0A00               	xorlw	0	; case 0
  2979  0012A8  A4D8               	btfss	status,2,c
  2980  0012AA  D7F2               	goto	l302
  2981                           
  2982                           ; BSR set to: 0
  2983                           ; Switch size 1, requested type "space"
  2984                           ; Number of cases is 3, Range of values is 1 to 3
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte           10     6 (average)
  2988                           ;	Chosen strategy is simple_byte
  2989  0012AC  0100               	movlb	0	; () banked
  2990  0012AE  5162               	movf	??_resetCommunications& (0+255),w,b
  2991  0012B0  0A01               	xorlw	1	; case 1
  2992  0012B2  B4D8               	btfsc	status,2,c
  2993  0012B4  D7D9               	goto	l298
  2994  0012B6  0A03               	xorlw	3	; case 2
  2995  0012B8  B4D8               	btfsc	status,2,c
  2996  0012BA  D7DD               	goto	l300
  2997  0012BC  0A01               	xorlw	1	; case 3
  2998  0012BE  B4D8               	btfsc	status,2,c
  2999  0012C0  D7E1               	goto	l301
  3000  0012C2  D7E6               	goto	l302
  3001  0012C4                     __end_of_resetCommunications:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           intcon	equ	0xFF2
  3010                           intcon2	equ	0xFF1
  3011                           intcon3	equ	0xFF0
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postinc1	equ	0xFE6
  3015                           postdec1	equ	0xFE5
  3016                           plusw1	equ	0xFE3
  3017                           fsr1h	equ	0xFE2
  3018                           fsr1l	equ	0xFE1
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           plusw2	equ	0xFDB
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _com_command_setVersion *****************
  3027 ;; Defined at:
  3028 ;;		line 663 in file "SlaveComm_PIC18.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  3031 ;;		 -> communications@send_buffer(42), 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3043 ;;      Params:         2       0       0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0
  3046 ;;      Totals:         2       0       0       0       0       0       0
  3047 ;;Total ram usage:        2 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    4
  3050 ;; This function calls:
  3051 ;;		_command_builder3
  3052 ;; This function is called by:
  3053 ;;		_resetCommunications
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text15
  3058  001932                     __ptext15:
  3059                           	opt stack 0
  3060  001932                     _com_command_setVersion:
  3061                           	opt stack 24
  3062                           
  3063                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3064                           
  3065                           ;incstack = 0
  3066  001932  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3067  001936  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3068  00193A  0E57               	movlw	low STR_2
  3069  00193C  6E21               	movwf	command_builder3@data1,c
  3070  00193E  0E06               	movlw	high STR_2
  3071  001940  6E22               	movwf	command_builder3@data1+1,c
  3072  001942  0E0D               	movlw	low STR_22
  3073  001944  6E23               	movwf	command_builder3@data2,c
  3074  001946  0E06               	movlw	high STR_22
  3075  001948  6E24               	movwf	command_builder3@data2+1,c
  3076  00194A  0E4B               	movlw	low STR_40
  3077  00194C  6E25               	movwf	command_builder3@data3,c
  3078  00194E  0E06               	movlw	high STR_40
  3079  001950  6E26               	movwf	command_builder3@data3+1,c
  3080  001952  EC62  F009         	call	_command_builder3	;wreg free
  3081  001956  0012               	return		;funcret
  3082  001958                     __end_of_com_command_setVersion:
  3083                           	opt stack 0
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           intcon	equ	0xFF2
  3091                           intcon2	equ	0xFF1
  3092                           intcon3	equ	0xFF0
  3093                           postinc0	equ	0xFEE
  3094                           wreg	equ	0xFE8
  3095                           postinc1	equ	0xFE6
  3096                           postdec1	equ	0xFE5
  3097                           plusw1	equ	0xFE3
  3098                           fsr1h	equ	0xFE2
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           plusw2	equ	0xFDB
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _com_command_setPower *****************
  3108 ;; Defined at:
  3109 ;;		line 618 in file "SlaveComm_PIC18.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3112 ;;		 -> communications@send_buffer(42), 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  temp           12   46[COMRAM] unsigned char [12]
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         2       0       0       0       0       0       0
  3125 ;;      Locals:        12       0       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0
  3127 ;;      Totals:        14       0       0       0       0       0       0
  3128 ;;Total ram usage:       14 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    4
  3131 ;; This function calls:
  3132 ;;		_command_builder3
  3133 ;;		_ultoa
  3134 ;; This function is called by:
  3135 ;;		_resetCommunications
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text16
  3140  0017DE                     __ptext16:
  3141                           	opt stack 0
  3142  0017DE                     _com_command_setPower:
  3143                           	opt stack 24
  3144                           
  3145                           ;SlaveComm_PIC18.c: 621: char temp[12];
  3146                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  3147                           
  3148                           ;incstack = 0
  3149  0017DE  0E2F               	movlw	low com_command_setPower@temp
  3150  0017E0  6E20               	movwf	ultoa@buf,c
  3151  0017E2  0E00               	movlw	high com_command_setPower@temp
  3152  0017E4  6E21               	movwf	ultoa@buf+1,c
  3153  0017E6  C0AE  F022         	movff	_meterWatts,ultoa@val
  3154  0017EA  C0AF  F023         	movff	_meterWatts+1,ultoa@val+1
  3155  0017EE  C0B0  F024         	movff	_meterWatts+2,ultoa@val+2
  3156  0017F2  C0B1  F025         	movff	_meterWatts+3,ultoa@val+3
  3157  0017F6  0E00               	movlw	0
  3158  0017F8  6E27               	movwf	ultoa@base+1,c
  3159  0017FA  0E0A               	movlw	10
  3160  0017FC  6E26               	movwf	ultoa@base,c
  3161  0017FE  ECA2  F006         	call	_ultoa	;wreg free
  3162                           
  3163                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  3164  001802  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3165  001806  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3166  00180A  0E57               	movlw	low STR_2
  3167  00180C  6E21               	movwf	command_builder3@data1,c
  3168  00180E  0E06               	movlw	high STR_2
  3169  001810  6E22               	movwf	command_builder3@data1+1,c
  3170  001812  0E24               	movlw	low STR_18
  3171  001814  6E23               	movwf	command_builder3@data2,c
  3172  001816  0E06               	movlw	high STR_18
  3173  001818  6E24               	movwf	command_builder3@data2+1,c
  3174  00181A  0E2F               	movlw	low com_command_setPower@temp
  3175  00181C  6E25               	movwf	command_builder3@data3,c
  3176  00181E  0E00               	movlw	high com_command_setPower@temp
  3177  001820  6E26               	movwf	command_builder3@data3+1,c
  3178  001822  EC62  F009         	call	_command_builder3	;wreg free
  3179  001826  0012               	return	
  3180  001828                     __end_of_com_command_setPower:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           intcon	equ	0xFF2
  3189                           intcon2	equ	0xFF1
  3190                           intcon3	equ	0xFF0
  3191                           postinc0	equ	0xFEE
  3192                           wreg	equ	0xFE8
  3193                           postinc1	equ	0xFE6
  3194                           postdec1	equ	0xFE5
  3195                           plusw1	equ	0xFE3
  3196                           fsr1h	equ	0xFE2
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           postinc2	equ	0xFDE
  3200                           plusw2	equ	0xFDB
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function _receive_data *****************
  3206 ;; Defined at:
  3207 ;;		line 199 in file "SlaveComm_PIC18.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3210 ;;		 -> communications@receive_buffer(42), 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  data            1   24[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      enum E6751
  3215 ;; Registers used:
  3216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3222 ;;      Params:         2       0       0       0       0       0       0
  3223 ;;      Locals:         1       0       0       0       0       0       0
  3224 ;;      Temps:          1       0       0       0       0       0       0
  3225 ;;      Totals:         4       0       0       0       0       0       0
  3226 ;;Total ram usage:        4 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    2
  3229 ;; This function calls:
  3230 ;;		_SPI_receive_data
  3231 ;; This function is called by:
  3232 ;;		_communications
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text17
  3237  000FFE                     __ptext17:
  3238                           	opt stack 0
  3239  000FFE                     _receive_data:
  3240                           	opt stack 27
  3241                           
  3242                           ;SlaveComm_PIC18.c: 201: char data;
  3243                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  3244                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  3245                           
  3246                           ;incstack = 0
  3247  000FFE  0E02               	movlw	2
  3248  001000  1842               	xorwf	receive_data@my_status,w,c
  3249  001002  A4D8               	btfss	status,2,c
  3250  001004  D002               	goto	l308
  3251                           
  3252                           ;SlaveComm_PIC18.c: 206: {
  3253                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  3254  001006  0E00               	movlw	0
  3255  001008  6E42               	movwf	receive_data@my_status,c
  3256  00100A                     l308:
  3257                           
  3258                           ;SlaveComm_PIC18.c: 208: }
  3259                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3260  00100A  0E19               	movlw	low receive_data@data
  3261  00100C  6E13               	movwf	SPI_receive_data@data,c
  3262  00100E  0E00               	movlw	high receive_data@data
  3263  001010  6E14               	movwf	SPI_receive_data@data+1,c
  3264  001012  EC85  F00C         	call	_SPI_receive_data	;wreg free
  3265  001016  06E8               	decf	wreg,f,c
  3266  001018  A4D8               	btfss	status,2,c
  3267  00101A  D04F               	goto	l313
  3268                           
  3269                           ;SlaveComm_PIC18.c: 211: {
  3270                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3271  00101C  0E21               	movlw	33
  3272  00101E  1819               	xorwf	receive_data@data,w,c
  3273  001020  A4D8               	btfss	status,2,c
  3274  001022  D015               	goto	l310
  3275  001024  0442               	decf	receive_data@my_status,w,c
  3276  001026  B4D8               	btfsc	status,2,c
  3277  001028  D012               	goto	l310
  3278                           
  3279                           ;SlaveComm_PIC18.c: 213: {
  3280                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3281  00102A  0E01               	movlw	1
  3282  00102C  6E42               	movwf	receive_data@my_status,c
  3283                           
  3284                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3285  00102E  EE20 F029          	lfsr	2,41
  3286  001032  5016               	movf	receive_data@receive_buffer,w,c
  3287  001034  26D9               	addwf	fsr2l,f,c
  3288  001036  5017               	movf	receive_data@receive_buffer+1,w,c
  3289  001038  22DA               	addwfc	fsr2h,f,c
  3290  00103A  0E00               	movlw	0
  3291  00103C  6EDF               	movwf	indf2,c
  3292                           
  3293                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3294  00103E  EE20 F028          	lfsr	2,40
  3295  001042  5016               	movf	receive_data@receive_buffer,w,c
  3296  001044  26D9               	addwf	fsr2l,f,c
  3297  001046  5017               	movf	receive_data@receive_buffer+1,w,c
  3298  001048  22DA               	addwfc	fsr2h,f,c
  3299  00104A  0E00               	movlw	0
  3300  00104C  6EDF               	movwf	indf2,c
  3301  00104E                     l310:
  3302                           
  3303                           ;SlaveComm_PIC18.c: 217: }
  3304                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3305  00104E  0442               	decf	receive_data@my_status,w,c
  3306  001050  A4D8               	btfss	status,2,c
  3307  001052  D02A               	goto	l312
  3308                           
  3309                           ;SlaveComm_PIC18.c: 220: {
  3310                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3311  001054  EE20 F028          	lfsr	2,40
  3312  001058  5016               	movf	receive_data@receive_buffer,w,c
  3313  00105A  26D9               	addwf	fsr2l,f,c
  3314  00105C  5017               	movf	receive_data@receive_buffer+1,w,c
  3315  00105E  22DA               	addwfc	fsr2h,f,c
  3316  001060  50DF               	movf	indf2,w,c
  3317  001062  6E18               	movwf	??_receive_data& (0+255),c
  3318  001064  5018               	movf	??_receive_data,w,c
  3319  001066  0D01               	mullw	1
  3320  001068  50F3               	movf	prodl,w,c
  3321  00106A  2416               	addwf	receive_data@receive_buffer,w,c
  3322  00106C  6ED9               	movwf	fsr2l,c
  3323  00106E  50F4               	movf	prodh,w,c
  3324  001070  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3325  001072  6EDA               	movwf	fsr2h,c
  3326  001074  C019  FFDF         	movff	receive_data@data,indf2
  3327                           
  3328                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3329  001078  EE20 F028          	lfsr	2,40
  3330  00107C  5016               	movf	receive_data@receive_buffer,w,c
  3331  00107E  26D9               	addwf	fsr2l,f,c
  3332  001080  5017               	movf	receive_data@receive_buffer+1,w,c
  3333  001082  22DA               	addwfc	fsr2h,f,c
  3334  001084  2ADF               	incf	indf2,f,c
  3335                           
  3336                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3337  001086  EE20 F028          	lfsr	2,40
  3338  00108A  5016               	movf	receive_data@receive_buffer,w,c
  3339  00108C  26D9               	addwf	fsr2l,f,c
  3340  00108E  5017               	movf	receive_data@receive_buffer+1,w,c
  3341  001090  22DA               	addwfc	fsr2h,f,c
  3342  001092  0E27               	movlw	39
  3343  001094  64DF               	cpfsgt	indf2,c
  3344  001096  D008               	goto	l312
  3345                           
  3346                           ;SlaveComm_PIC18.c: 225: {
  3347                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3348  001098  EE20 F028          	lfsr	2,40
  3349  00109C  5016               	movf	receive_data@receive_buffer,w,c
  3350  00109E  26D9               	addwf	fsr2l,f,c
  3351  0010A0  5017               	movf	receive_data@receive_buffer+1,w,c
  3352  0010A2  22DA               	addwfc	fsr2h,f,c
  3353  0010A4  0E27               	movlw	39
  3354  0010A6  6EDF               	movwf	indf2,c
  3355  0010A8                     l312:
  3356                           
  3357                           ;SlaveComm_PIC18.c: 227: }
  3358                           ;SlaveComm_PIC18.c: 228: }
  3359                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3360  0010A8  0442               	decf	receive_data@my_status,w,c
  3361  0010AA  A4D8               	btfss	status,2,c
  3362  0010AC  D006               	goto	l313
  3363  0010AE  0E2A               	movlw	42
  3364  0010B0  1819               	xorwf	receive_data@data,w,c
  3365  0010B2  A4D8               	btfss	status,2,c
  3366  0010B4  D002               	goto	l313
  3367                           
  3368                           ;SlaveComm_PIC18.c: 231: {
  3369                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3370  0010B6  0E02               	movlw	2
  3371  0010B8  6E42               	movwf	receive_data@my_status,c
  3372  0010BA                     l313:
  3373                           
  3374                           ;SlaveComm_PIC18.c: 233: }
  3375                           ;SlaveComm_PIC18.c: 234: }
  3376                           ;SlaveComm_PIC18.c: 236: return my_status;
  3377  0010BA  5042               	movf	receive_data@my_status,w,c
  3378  0010BC  0012               	return	
  3379  0010BE                     __end_of_receive_data:
  3380                           	opt stack 0
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           intcon2	equ	0xFF1
  3389                           intcon3	equ	0xFF0
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           postinc1	equ	0xFE6
  3393                           postdec1	equ	0xFE5
  3394                           plusw1	equ	0xFE3
  3395                           fsr1h	equ	0xFE2
  3396                           fsr1l	equ	0xFE1
  3397                           indf2	equ	0xFDF
  3398                           postinc2	equ	0xFDE
  3399                           plusw2	equ	0xFDB
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           status	equ	0xFD8
  3403                           
  3404 ;; *************** function _SPI_receive_data *****************
  3405 ;; Defined at:
  3406 ;;		line 562 in file "SlaveComm_PIC18.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  data            2   18[COMRAM] PTR unsigned char 
  3409 ;;		 -> receive_data@data(1), 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  recvGood        1   20[COMRAM] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      unsigned char 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3421 ;;      Params:         2       0       0       0       0       0       0
  3422 ;;      Locals:         1       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0
  3424 ;;      Totals:         3       0       0       0       0       0       0
  3425 ;;Total ram usage:        3 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_receive_data
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text18
  3436  00190A                     __ptext18:
  3437                           	opt stack 0
  3438  00190A                     _SPI_receive_data:
  3439                           	opt stack 27
  3440                           
  3441                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3442                           
  3443                           ;incstack = 0
  3444  00190A  0E00               	movlw	0
  3445  00190C  6E15               	movwf	SPI_receive_data@recvGood,c
  3446                           
  3447                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3448  00190E  A06D               	btfss	3949,0,c	;volatile
  3449  001910  D00C               	goto	l415
  3450                           
  3451                           ;SlaveComm_PIC18.c: 568: {
  3452                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3453  001912  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3454  001916  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3455  00191A  CF6F FFDF          	movff	3951,indf2	;volatile
  3456                           
  3457                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3458  00191E  0E01               	movlw	1
  3459  001920  6E15               	movwf	SPI_receive_data@recvGood,c
  3460                           
  3461                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3462  001922  9E6C               	bcf	3948,7,c	;volatile
  3463                           
  3464                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3465  001924  0E00               	movlw	0
  3466  001926  6E46               	movwf	_SPI_transmit_wait,c
  3467                           
  3468                           ;SlaveComm_PIC18.c: 573: }
  3469  001928  D002               	goto	l416
  3470  00192A                     l415:
  3471                           
  3472                           ;SlaveComm_PIC18.c: 574: else
  3473                           ;SlaveComm_PIC18.c: 575: {
  3474                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3475  00192A  0E00               	movlw	0
  3476  00192C  6E15               	movwf	SPI_receive_data@recvGood,c
  3477  00192E                     l416:
  3478                           
  3479                           ;SlaveComm_PIC18.c: 577: }
  3480                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3481  00192E  5015               	movf	SPI_receive_data@recvGood,w,c
  3482  001930  0012               	return	
  3483  001932                     __end_of_SPI_receive_data:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           intcon2	equ	0xFF1
  3493                           intcon3	equ	0xFF0
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postinc1	equ	0xFE6
  3497                           postdec1	equ	0xFE5
  3498                           plusw1	equ	0xFE3
  3499                           fsr1h	equ	0xFE2
  3500                           fsr1l	equ	0xFE1
  3501                           indf2	equ	0xFDF
  3502                           postinc2	equ	0xFDE
  3503                           plusw2	equ	0xFDB
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function _process_data *****************
  3509 ;; Defined at:
  3510 ;;		line 239 in file "SlaveComm_PIC18.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  receive_buff    2    4[BANK0 ] PTR struct buffer
  3513 ;;		 -> communications@receive_buffer(42), 
  3514 ;;  send_buffer     2    6[BANK0 ] PTR struct buffer
  3515 ;;		 -> communications@send_buffer(42), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  parameters     50    8[BANK0 ] unsigned char [10][5]
  3518 ;;  end_of_trans    1   58[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         0       4       0       0       0       0       0
  3529 ;;      Locals:         0      51       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         0      55       0       0       0       0       0
  3532 ;;Total ram usage:       55 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    6
  3535 ;; This function calls:
  3536 ;;		_process_data_parameterize
  3537 ;;		_process_data_parameters
  3538 ;; This function is called by:
  3539 ;;		_communications
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text19
  3544  001872                     __ptext19:
  3545                           	opt stack 0
  3546  001872                     _process_data:
  3547                           	opt stack 23
  3548                           
  3549                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3550                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3551                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3552                           
  3553                           ;incstack = 0
  3554  001872  0E68               	movlw	low process_data@parameters
  3555  001874  6E19               	movwf	process_data_parameterize@parameters,c
  3556  001876  0E00               	movlw	high process_data@parameters
  3557  001878  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3558  00187A  C064  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3559  00187E  C065  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3560  001882  EC9B  F004         	call	_process_data_parameterize	;wreg free
  3561                           
  3562                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3563  001886  0E68               	movlw	low process_data@parameters
  3564  001888  0100               	movlb	0	; () banked
  3565  00188A  6F60               	movwf	process_data_parameters@parameters& (0+255),b
  3566  00188C  0E00               	movlw	high process_data@parameters
  3567  00188E  0100               	movlb	0	; () banked
  3568  001890  6F61               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3569  001892  C066  F062         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3570  001896  C067  F063         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3571  00189A  EC30  F003         	call	_process_data_parameters	;wreg free
  3572  00189E  0100               	movlb	0	; () banked
  3573  0018A0  6F9A               	movwf	process_data@end_of_transmission_received& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3577  0018A2  0100               	movlb	0	; () banked
  3578  0018A4  519A               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3579  0018A6  0012               	return	
  3580  0018A8                     __end_of_process_data:
  3581                           	opt stack 0
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           intcon	equ	0xFF2
  3589                           intcon2	equ	0xFF1
  3590                           intcon3	equ	0xFF0
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postinc1	equ	0xFE6
  3594                           postdec1	equ	0xFE5
  3595                           plusw1	equ	0xFE3
  3596                           fsr1h	equ	0xFE2
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           plusw2	equ	0xFDB
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function _process_data_parameters *****************
  3606 ;; Defined at:
  3607 ;;		line 315 in file "SlaveComm_PIC18.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  parameters      2    0[BANK0 ] PTR unsigned char [10]
  3610 ;;		 -> process_data@parameters(50), 
  3611 ;;  send_buffer     2    2[BANK0 ] PTR struct buffer
  3612 ;;		 -> communications@send_buffer(42), 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  end_of_trans    1   58[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         0       4       0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0
  3627 ;;      Totals:         1       4       0       0       0       0       0
  3628 ;;Total ram usage:        5 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    5
  3631 ;; This function calls:
  3632 ;;		_atol
  3633 ;;		_com_command_setEnergyUsed
  3634 ;;		_command_builder3
  3635 ;;		_send_end_of_transmission
  3636 ;;		_strmatch
  3637 ;; This function is called by:
  3638 ;;		_process_data
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text20
  3643  000660                     __ptext20:
  3644                           	opt stack 0
  3645  000660                     _process_data_parameters:
  3646                           	opt stack 23
  3647                           
  3648                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;incstack = 0
  3652  000660  0E00               	movlw	0
  3653  000662  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  3654                           
  3655                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3656  000664  C060  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3657  000668  C061  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3658  00066C  0E4F               	movlw	low STR_1
  3659  00066E  6E20               	movwf	strmatch@b,c
  3660  000670  0E06               	movlw	high STR_1
  3661  000672  6E21               	movwf	strmatch@b+1,c
  3662  000674  EC6D  F00C         	call	_strmatch	;wreg free
  3663  000678  06E8               	decf	wreg,f,c
  3664  00067A  A4D8               	btfss	status,2,c
  3665  00067C  D003               	goto	l337
  3666                           
  3667                           ;SlaveComm_PIC18.c: 321: {
  3668                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3669  00067E  0E01               	movlw	1
  3670  000680  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  3671                           
  3672                           ;SlaveComm_PIC18.c: 332: }
  3673  000682  D157               	goto	l363
  3674  000684                     l337:
  3675                           
  3676                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3677  000684  C060  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3678  000688  C061  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3679  00068C  0E57               	movlw	low STR_2
  3680  00068E  6E20               	movwf	strmatch@b,c
  3681  000690  0E06               	movlw	high STR_2
  3682  000692  6E21               	movwf	strmatch@b+1,c
  3683  000694  EC6D  F00C         	call	_strmatch	;wreg free
  3684  000698  06E8               	decf	wreg,f,c
  3685  00069A  A4D8               	btfss	status,2,c
  3686  00069C  D03B               	goto	l339
  3687                           
  3688                           ;SlaveComm_PIC18.c: 334: {
  3689                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3690  00069E  0E0A               	movlw	10
  3691  0006A0  0100               	movlb	0	; () banked
  3692  0006A2  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3693  0006A4  6E1E               	movwf	strmatch@a,c
  3694  0006A6  0E00               	movlw	0
  3695  0006A8  0100               	movlb	0	; () banked
  3696  0006AA  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3697  0006AC  6E1F               	movwf	strmatch@a+1,c
  3698  0006AE  0E01               	movlw	low STR_3
  3699  0006B0  6E20               	movwf	strmatch@b,c
  3700  0006B2  0E06               	movlw	high STR_3
  3701  0006B4  6E21               	movwf	strmatch@b+1,c
  3702  0006B6  EC6D  F00C         	call	_strmatch	;wreg free
  3703  0006BA  06E8               	decf	wreg,f,c
  3704  0006BC  B4D8               	btfsc	status,2,c
  3705  0006BE  D139               	goto	l363
  3706                           
  3707                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3708                           
  3709                           ;SlaveComm_PIC18.c: 336: {
  3710                           ;SlaveComm_PIC18.c: 338: }
  3711  0006C0  0E0A               	movlw	10
  3712  0006C2  0100               	movlb	0	; () banked
  3713  0006C4  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3714  0006C6  6E1E               	movwf	strmatch@a,c
  3715  0006C8  0E00               	movlw	0
  3716  0006CA  0100               	movlb	0	; () banked
  3717  0006CC  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3718  0006CE  6E1F               	movwf	strmatch@a+1,c
  3719  0006D0  0E17               	movlw	low STR_4
  3720  0006D2  6E20               	movwf	strmatch@b,c
  3721  0006D4  0E06               	movlw	high STR_4
  3722  0006D6  6E21               	movwf	strmatch@b+1,c
  3723  0006D8  EC6D  F00C         	call	_strmatch	;wreg free
  3724  0006DC  06E8               	decf	wreg,f,c
  3725  0006DE  A4D8               	btfss	status,2,c
  3726  0006E0  D128               	goto	l363
  3727                           
  3728                           ;SlaveComm_PIC18.c: 340: {
  3729                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3730  0006E2  0E14               	movlw	20
  3731  0006E4  0100               	movlb	0	; () banked
  3732  0006E6  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3733  0006E8  6E1F               	movwf	atol@s,c
  3734  0006EA  0E00               	movlw	0
  3735  0006EC  0100               	movlb	0	; () banked
  3736  0006EE  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3737  0006F0  6E20               	movwf	atol@s+1,c
  3738  0006F2  EC1D  F007         	call	_atol	;wreg free
  3739  0006F6  C01F  F0AA         	movff	?_atol,_meterEnergyUsed
  3740  0006FA  C020  F0AB         	movff	?_atol+1,_meterEnergyUsed+1
  3741  0006FE  C021  F0AC         	movff	?_atol+2,_meterEnergyUsed+2
  3742  000702  C022  F0AD         	movff	?_atol+3,_meterEnergyUsed+3
  3743                           
  3744                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  3745  000706  C062  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3746  00070A  C063  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3747  00070E  EC14  F00C         	call	_com_command_setEnergyUsed	;wreg free
  3748                           
  3749                           ;SlaveComm_PIC18.c: 347: }
  3750                           ;SlaveComm_PIC18.c: 352: }
  3751  000712  D10F               	goto	l363
  3752  000714                     l339:
  3753                           
  3754                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  3755  000714  C060  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3756  000718  C061  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3757  00071C  0E34               	movlw	low STR_5
  3758  00071E  6E20               	movwf	strmatch@b,c
  3759  000720  0E06               	movlw	high STR_5
  3760  000722  6E21               	movwf	strmatch@b+1,c
  3761  000724  EC6D  F00C         	call	_strmatch	;wreg free
  3762  000728  06E8               	decf	wreg,f,c
  3763  00072A  B4D8               	btfsc	status,2,c
  3764  00072C  D102               	goto	l363
  3765                           
  3766                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  3767                           
  3768                           ;SlaveComm_PIC18.c: 354: {
  3769                           ;SlaveComm_PIC18.c: 356: }
  3770  00072E  C060  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3771  000732  C061  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3772  000736  0E2F               	movlw	low STR_6
  3773  000738  6E20               	movwf	strmatch@b,c
  3774  00073A  0E06               	movlw	high STR_6
  3775  00073C  6E21               	movwf	strmatch@b+1,c
  3776  00073E  EC6D  F00C         	call	_strmatch	;wreg free
  3777  000742  06E8               	decf	wreg,f,c
  3778  000744  A4D8               	btfss	status,2,c
  3779  000746  D059               	goto	l346
  3780                           
  3781                           ;SlaveComm_PIC18.c: 358: {
  3782                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  3783  000748  0E0A               	movlw	10
  3784  00074A  0100               	movlb	0	; () banked
  3785  00074C  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3786  00074E  6E1E               	movwf	strmatch@a,c
  3787  000750  0E00               	movlw	0
  3788  000752  0100               	movlb	0	; () banked
  3789  000754  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3790  000756  6E1F               	movwf	strmatch@a+1,c
  3791  000758  0E2A               	movlw	low STR_7
  3792  00075A  6E20               	movwf	strmatch@b,c
  3793  00075C  0E06               	movlw	high STR_7
  3794  00075E  6E21               	movwf	strmatch@b+1,c
  3795  000760  EC6D  F00C         	call	_strmatch	;wreg free
  3796  000764  06E8               	decf	wreg,f,c
  3797  000766  A4D8               	btfss	status,2,c
  3798  000768  D0E4               	goto	l363
  3799                           
  3800                           ;SlaveComm_PIC18.c: 360: {
  3801                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  3802  00076A  0E14               	movlw	20
  3803  00076C  0100               	movlb	0	; () banked
  3804  00076E  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3805  000770  6E1E               	movwf	strmatch@a,c
  3806  000772  0E00               	movlw	0
  3807  000774  0100               	movlb	0	; () banked
  3808  000776  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3809  000778  6E1F               	movwf	strmatch@a+1,c
  3810  00077A  0E5B               	movlw	low STR_8
  3811  00077C  6E20               	movwf	strmatch@b,c
  3812  00077E  0E06               	movlw	high STR_8
  3813  000780  6E21               	movwf	strmatch@b+1,c
  3814  000782  EC6D  F00C         	call	_strmatch	;wreg free
  3815  000786  06E8               	decf	wreg,f,c
  3816  000788  A4D8               	btfss	status,2,c
  3817  00078A  D013               	goto	l348
  3818                           
  3819                           ;SlaveComm_PIC18.c: 362: {
  3820                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3821  00078C  C062  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3822  000790  C063  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3823  000794  0E57               	movlw	low STR_2
  3824  000796  6E21               	movwf	command_builder3@data1,c
  3825  000798  0E06               	movlw	high STR_2
  3826  00079A  6E22               	movwf	command_builder3@data1+1,c
  3827  00079C  0E2A               	movlw	low STR_7
  3828  00079E  6E23               	movwf	command_builder3@data2,c
  3829  0007A0  0E06               	movlw	high STR_7
  3830  0007A2  6E24               	movwf	command_builder3@data2+1,c
  3831  0007A4  0E53               	movlw	low STR_11
  3832  0007A6  6E25               	movwf	command_builder3@data3,c
  3833  0007A8  0E06               	movlw	high STR_11
  3834  0007AA  6E26               	movwf	command_builder3@data3+1,c
  3835  0007AC  EC62  F009         	call	_command_builder3	;wreg free
  3836                           
  3837                           ;SlaveComm_PIC18.c: 364: }
  3838  0007B0  D0C0               	goto	l363
  3839  0007B2                     l348:
  3840                           
  3841                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  3842  0007B2  0E14               	movlw	20
  3843  0007B4  0100               	movlb	0	; () banked
  3844  0007B6  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3845  0007B8  6E1E               	movwf	strmatch@a,c
  3846  0007BA  0E00               	movlw	0
  3847  0007BC  0100               	movlb	0	; () banked
  3848  0007BE  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3849  0007C0  6E1F               	movwf	strmatch@a+1,c
  3850  0007C2  0E53               	movlw	low STR_11
  3851  0007C4  6E20               	movwf	strmatch@b,c
  3852  0007C6  0E06               	movlw	high STR_11
  3853  0007C8  6E21               	movwf	strmatch@b+1,c
  3854  0007CA  EC6D  F00C         	call	_strmatch	;wreg free
  3855  0007CE  06E8               	decf	wreg,f,c
  3856  0007D0  A4D8               	btfss	status,2,c
  3857  0007D2  D0AF               	goto	l363
  3858                           
  3859                           ;SlaveComm_PIC18.c: 366: {
  3860                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  3861  0007D4  C062  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3862  0007D8  C063  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3863  0007DC  0E57               	movlw	low STR_2
  3864  0007DE  6E21               	movwf	command_builder3@data1,c
  3865  0007E0  0E06               	movlw	high STR_2
  3866  0007E2  6E22               	movwf	command_builder3@data1+1,c
  3867  0007E4  0E2A               	movlw	low STR_7
  3868  0007E6  6E23               	movwf	command_builder3@data2,c
  3869  0007E8  0E06               	movlw	high STR_7
  3870  0007EA  6E24               	movwf	command_builder3@data2+1,c
  3871  0007EC  0E5B               	movlw	low STR_8
  3872  0007EE  6E25               	movwf	command_builder3@data3,c
  3873  0007F0  0E06               	movlw	high STR_8
  3874  0007F2  6E26               	movwf	command_builder3@data3+1,c
  3875  0007F4  EC62  F009         	call	_command_builder3	;wreg free
  3876                           
  3877                           ;SlaveComm_PIC18.c: 368: }
  3878                           ;SlaveComm_PIC18.c: 369: }
  3879                           ;SlaveComm_PIC18.c: 370: }
  3880  0007F8  D09C               	goto	l363
  3881  0007FA                     l346:
  3882                           
  3883                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  3884  0007FA  C060  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3885  0007FE  C061  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3886  000802  0E39               	movlw	low STR_16
  3887  000804  6E20               	movwf	strmatch@b,c
  3888  000806  0E06               	movlw	high STR_16
  3889  000808  6E21               	movwf	strmatch@b+1,c
  3890  00080A  EC6D  F00C         	call	_strmatch	;wreg free
  3891  00080E  06E8               	decf	wreg,f,c
  3892  000810  A4D8               	btfss	status,2,c
  3893  000812  D08F               	goto	l363
  3894                           
  3895                           ;SlaveComm_PIC18.c: 372: {
  3896                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  3897  000814  0E0A               	movlw	10
  3898  000816  0100               	movlb	0	; () banked
  3899  000818  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3900  00081A  6E1E               	movwf	strmatch@a,c
  3901  00081C  0E00               	movlw	0
  3902  00081E  0100               	movlb	0	; () banked
  3903  000820  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3904  000822  6E1F               	movwf	strmatch@a+1,c
  3905  000824  0E2A               	movlw	low STR_7
  3906  000826  6E20               	movwf	strmatch@b,c
  3907  000828  0E06               	movlw	high STR_7
  3908  00082A  6E21               	movwf	strmatch@b+1,c
  3909  00082C  EC6D  F00C         	call	_strmatch	;wreg free
  3910  000830  06E8               	decf	wreg,f,c
  3911  000832  A4D8               	btfss	status,2,c
  3912  000834  D007               	goto	l353
  3913                           
  3914                           ;SlaveComm_PIC18.c: 374: {
  3915                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  3916  000836  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3917  00083A  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3918  00083E  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  3919                           
  3920                           ;SlaveComm_PIC18.c: 376: }
  3921  000842  D077               	goto	l363
  3922  000844                     l353:
  3923                           
  3924                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  3925  000844  0E0A               	movlw	10
  3926  000846  0100               	movlb	0	; () banked
  3927  000848  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3928  00084A  6E1E               	movwf	strmatch@a,c
  3929  00084C  0E00               	movlw	0
  3930  00084E  0100               	movlb	0	; () banked
  3931  000850  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3932  000852  6E1F               	movwf	strmatch@a+1,c
  3933  000854  0E24               	movlw	low STR_18
  3934  000856  6E20               	movwf	strmatch@b,c
  3935  000858  0E06               	movlw	high STR_18
  3936  00085A  6E21               	movwf	strmatch@b+1,c
  3937  00085C  EC6D  F00C         	call	_strmatch	;wreg free
  3938  000860  06E8               	decf	wreg,f,c
  3939  000862  A4D8               	btfss	status,2,c
  3940  000864  D007               	goto	l355
  3941                           
  3942                           ;SlaveComm_PIC18.c: 378: {
  3943                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  3944  000866  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3945  00086A  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3946  00086E  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  3947                           
  3948                           ;SlaveComm_PIC18.c: 380: }
  3949  000872  D05F               	goto	l363
  3950  000874                     l355:
  3951                           
  3952                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  3953  000874  0E0A               	movlw	10
  3954  000876  0100               	movlb	0	; () banked
  3955  000878  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3956  00087A  6E1E               	movwf	strmatch@a,c
  3957  00087C  0E00               	movlw	0
  3958  00087E  0100               	movlb	0	; () banked
  3959  000880  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3960  000882  6E1F               	movwf	strmatch@a+1,c
  3961  000884  0E17               	movlw	low STR_4
  3962  000886  6E20               	movwf	strmatch@b,c
  3963  000888  0E06               	movlw	high STR_4
  3964  00088A  6E21               	movwf	strmatch@b+1,c
  3965  00088C  EC6D  F00C         	call	_strmatch	;wreg free
  3966  000890  06E8               	decf	wreg,f,c
  3967  000892  A4D8               	btfss	status,2,c
  3968  000894  D007               	goto	l357
  3969                           
  3970                           ;SlaveComm_PIC18.c: 382: {
  3971                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  3972  000896  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3973  00089A  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3974  00089E  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  3975                           
  3976                           ;SlaveComm_PIC18.c: 384: }
  3977  0008A2  D047               	goto	l363
  3978  0008A4                     l357:
  3979                           
  3980                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  3981  0008A4  0E0A               	movlw	10
  3982  0008A6  0100               	movlb	0	; () banked
  3983  0008A8  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  3984  0008AA  6E1E               	movwf	strmatch@a,c
  3985  0008AC  0E00               	movlw	0
  3986  0008AE  0100               	movlb	0	; () banked
  3987  0008B0  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3988  0008B2  6E1F               	movwf	strmatch@a+1,c
  3989  0008B4  0E1E               	movlw	low STR_20
  3990  0008B6  6E20               	movwf	strmatch@b,c
  3991  0008B8  0E06               	movlw	high STR_20
  3992  0008BA  6E21               	movwf	strmatch@b+1,c
  3993  0008BC  EC6D  F00C         	call	_strmatch	;wreg free
  3994  0008C0  06E8               	decf	wreg,f,c
  3995  0008C2  A4D8               	btfss	status,2,c
  3996  0008C4  D007               	goto	l359
  3997                           
  3998                           ;SlaveComm_PIC18.c: 386: {
  3999                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  4000  0008C6  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4001  0008CA  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4002  0008CE  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  4003                           
  4004                           ;SlaveComm_PIC18.c: 388: }
  4005  0008D2  D02F               	goto	l363
  4006  0008D4                     l359:
  4007                           
  4008                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  4009  0008D4  0E0A               	movlw	10
  4010  0008D6  0100               	movlb	0	; () banked
  4011  0008D8  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  4012  0008DA  6E1E               	movwf	strmatch@a,c
  4013  0008DC  0E00               	movlw	0
  4014  0008DE  0100               	movlb	0	; () banked
  4015  0008E0  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4016  0008E2  6E1F               	movwf	strmatch@a+1,c
  4017  0008E4  0E3E               	movlw	low STR_21
  4018  0008E6  6E20               	movwf	strmatch@b,c
  4019  0008E8  0E06               	movlw	high STR_21
  4020  0008EA  6E21               	movwf	strmatch@b+1,c
  4021  0008EC  EC6D  F00C         	call	_strmatch	;wreg free
  4022  0008F0  06E8               	decf	wreg,f,c
  4023  0008F2  A4D8               	btfss	status,2,c
  4024  0008F4  D007               	goto	l361
  4025                           
  4026                           ;SlaveComm_PIC18.c: 390: {
  4027                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  4028  0008F6  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4029  0008FA  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4030  0008FE  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  4031                           
  4032                           ;SlaveComm_PIC18.c: 392: }
  4033  000902  D017               	goto	l363
  4034  000904                     l361:
  4035                           
  4036                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  4037  000904  0E0A               	movlw	10
  4038  000906  0100               	movlb	0	; () banked
  4039  000908  2560               	addwf	process_data_parameters@parameters& (0+255),w,b
  4040  00090A  6E1E               	movwf	strmatch@a,c
  4041  00090C  0E00               	movlw	0
  4042  00090E  0100               	movlb	0	; () banked
  4043  000910  2161               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4044  000912  6E1F               	movwf	strmatch@a+1,c
  4045  000914  0E0D               	movlw	low STR_22
  4046  000916  6E20               	movwf	strmatch@b,c
  4047  000918  0E06               	movlw	high STR_22
  4048  00091A  6E21               	movwf	strmatch@b+1,c
  4049  00091C  EC6D  F00C         	call	_strmatch	;wreg free
  4050  000920  06E8               	decf	wreg,f,c
  4051  000922  A4D8               	btfss	status,2,c
  4052  000924  D006               	goto	l363
  4053                           
  4054                           ;SlaveComm_PIC18.c: 394: {
  4055                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  4056  000926  C062  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4057  00092A  C063  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4058  00092E  EC19  F00D         	call	_send_end_of_transmission	;wreg free
  4059  000932                     l363:
  4060                           
  4061                           ;SlaveComm_PIC18.c: 396: }
  4062                           ;SlaveComm_PIC18.c: 397: }
  4063                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  4064  000932  503B               	movf	process_data_parameters@end_of_transmission_received,w,c
  4065  000934  0012               	return	
  4066  000936                     __end_of_process_data_parameters:
  4067                           	opt stack 0
  4068                           tblptru	equ	0xFF8
  4069                           tblptrh	equ	0xFF7
  4070                           tblptrl	equ	0xFF6
  4071                           tablat	equ	0xFF5
  4072                           prodh	equ	0xFF4
  4073                           prodl	equ	0xFF3
  4074                           intcon	equ	0xFF2
  4075                           intcon2	equ	0xFF1
  4076                           intcon3	equ	0xFF0
  4077                           postinc0	equ	0xFEE
  4078                           wreg	equ	0xFE8
  4079                           postinc1	equ	0xFE6
  4080                           postdec1	equ	0xFE5
  4081                           plusw1	equ	0xFE3
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           postinc2	equ	0xFDE
  4086                           plusw2	equ	0xFDB
  4087                           fsr2h	equ	0xFDA
  4088                           fsr2l	equ	0xFD9
  4089                           status	equ	0xFD8
  4090                           
  4091 ;; *************** function _strmatch *****************
  4092 ;; Defined at:
  4093 ;;		line 513 in file "SlaveComm_PIC18.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  a               2   29[COMRAM] PTR unsigned char 
  4096 ;;		 -> process_data@parameters(50), 
  4097 ;;  b               2   31[COMRAM] PTR unsigned char 
  4098 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4099 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4100 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4101 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  result          2   33[COMRAM] int 
  4104 ;;  match           1   35[COMRAM] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      unsigned char 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4114 ;;      Params:         4       0       0       0       0       0       0
  4115 ;;      Locals:         3       0       0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0
  4117 ;;      Totals:         7       0       0       0       0       0       0
  4118 ;;Total ram usage:        7 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    2
  4121 ;; This function calls:
  4122 ;;		_strcmp2
  4123 ;; This function is called by:
  4124 ;;		_process_data_parameters
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text21
  4129  0018DA                     __ptext21:
  4130                           	opt stack 0
  4131  0018DA                     _strmatch:
  4132                           	opt stack 25
  4133                           
  4134                           ;SlaveComm_PIC18.c: 515: int result;
  4135                           ;SlaveComm_PIC18.c: 516: bool match;
  4136                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  4137                           
  4138                           ;incstack = 0
  4139  0018DA  C01E  F013         	movff	strmatch@a,strcmp2@a
  4140  0018DE  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4141  0018E2  C020  F015         	movff	strmatch@b,strcmp2@b
  4142  0018E6  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4143  0018EA  EC0C  F006         	call	_strcmp2	;wreg free
  4144  0018EE  C013  F022         	movff	?_strcmp2,strmatch@result
  4145  0018F2  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4146                           
  4147                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  4148  0018F6  5022               	movf	strmatch@result,w,c
  4149  0018F8  1023               	iorwf	strmatch@result+1,w,c
  4150  0018FA  A4D8               	btfss	status,2,c
  4151  0018FC  D002               	goto	u2120
  4152  0018FE  0E01               	movlw	1
  4153  001900  D001               	goto	u2130
  4154  001902                     u2120:
  4155  001902  0E00               	movlw	0
  4156  001904                     u2130:
  4157  001904  6E24               	movwf	strmatch@match,c
  4158                           
  4159                           ;SlaveComm_PIC18.c: 522: return match;
  4160  001906  5024               	movf	strmatch@match,w,c
  4161  001908  0012               	return	
  4162  00190A                     __end_of_strmatch:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           prodh	equ	0xFF4
  4169                           prodl	equ	0xFF3
  4170                           intcon	equ	0xFF2
  4171                           intcon2	equ	0xFF1
  4172                           intcon3	equ	0xFF0
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           postinc1	equ	0xFE6
  4176                           postdec1	equ	0xFE5
  4177                           plusw1	equ	0xFE3
  4178                           fsr1h	equ	0xFE2
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           plusw2	equ	0xFDB
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function _strcmp2 *****************
  4188 ;; Defined at:
  4189 ;;		line 525 in file "SlaveComm_PIC18.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  a               2   18[COMRAM] PTR unsigned char 
  4192 ;;		 -> process_data@parameters(50), 
  4193 ;;  b               2   20[COMRAM] PTR unsigned char 
  4194 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4195 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4196 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4197 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  inx             2   27[COMRAM] int 
  4200 ;;  match           2   25[COMRAM] int 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  2   18[COMRAM] int 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4210 ;;      Params:         4       0       0       0       0       0       0
  4211 ;;      Locals:         4       0       0       0       0       0       0
  4212 ;;      Temps:          3       0       0       0       0       0       0
  4213 ;;      Totals:        11       0       0       0       0       0       0
  4214 ;;Total ram usage:       11 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_strmatch
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text22
  4225  000C18                     __ptext22:
  4226                           	opt stack 0
  4227  000C18                     _strcmp2:
  4228                           	opt stack 25
  4229                           
  4230                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  4231                           
  4232                           ;incstack = 0
  4233  000C18  0E00               	movlw	0
  4234  000C1A  6E1D               	movwf	strcmp2@inx+1,c
  4235  000C1C  0E00               	movlw	0
  4236  000C1E  6E1C               	movwf	strcmp2@inx,c
  4237                           
  4238                           ;SlaveComm_PIC18.c: 528: int match = 0;
  4239  000C20  0E00               	movlw	0
  4240  000C22  6E1B               	movwf	strcmp2@match+1,c
  4241  000C24  0E00               	movlw	0
  4242  000C26  6E1A               	movwf	strcmp2@match,c
  4243                           
  4244                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4245  000C28  D035               	goto	l399
  4246  000C2A                     
  4247                           ;SlaveComm_PIC18.c: 531: {
  4248                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  4249  000C2A  501C               	movf	strcmp2@inx,w,c
  4250  000C2C  2413               	addwf	strcmp2@a,w,c
  4251  000C2E  6ED9               	movwf	fsr2l,c
  4252  000C30  501D               	movf	strcmp2@inx+1,w,c
  4253  000C32  2014               	addwfc	strcmp2@a+1,w,c
  4254  000C34  6EDA               	movwf	fsr2h,c
  4255  000C36  501C               	movf	strcmp2@inx,w,c
  4256  000C38  2415               	addwf	strcmp2@b,w,c
  4257  000C3A  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4258  000C3C  501D               	movf	strcmp2@inx+1,w,c
  4259  000C3E  2016               	addwfc	strcmp2@b+1,w,c
  4260  000C40  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4261  000C42  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4262  000C46  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4263  000C4A                     	if	0	;tblptru may be non-zero
  4264  000C4A                     	endif
  4265  000C4A                     	if	0	;tblptru may be non-zero
  4266  000C4A                     	endif
  4267  000C4A  50DE               	movf	postinc2,w,c
  4268  000C4C  0009               	tblrd		*+
  4269  000C4E  5CF5               	subwf	tablat,w,c
  4270  000C50  B0D8               	btfsc	status,0,c
  4271  000C52  D005               	goto	l401
  4272                           
  4273                           ;SlaveComm_PIC18.c: 533: {
  4274                           ;SlaveComm_PIC18.c: 534: match = 1;
  4275  000C54  0E00               	movlw	0
  4276  000C56  6E1B               	movwf	strcmp2@match+1,c
  4277  000C58  0E01               	movlw	1
  4278  000C5A  6E1A               	movwf	strcmp2@match,c
  4279                           
  4280                           ;SlaveComm_PIC18.c: 535: }
  4281  000C5C  D019               	goto	l403
  4282  000C5E                     l401:
  4283                           
  4284                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  4285  000C5E  501C               	movf	strcmp2@inx,w,c
  4286  000C60  2413               	addwf	strcmp2@a,w,c
  4287  000C62  6ED9               	movwf	fsr2l,c
  4288  000C64  501D               	movf	strcmp2@inx+1,w,c
  4289  000C66  2014               	addwfc	strcmp2@a+1,w,c
  4290  000C68  6EDA               	movwf	fsr2h,c
  4291  000C6A  50DF               	movf	indf2,w,c
  4292  000C6C  6E17               	movwf	??_strcmp2& (0+255),c
  4293  000C6E  501C               	movf	strcmp2@inx,w,c
  4294  000C70  2415               	addwf	strcmp2@b,w,c
  4295  000C72  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4296  000C74  501D               	movf	strcmp2@inx+1,w,c
  4297  000C76  2016               	addwfc	strcmp2@b+1,w,c
  4298  000C78  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4299  000C7A  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4300  000C7E  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4301  000C82                     	if	0	;tblptru may be non-zero
  4302  000C82                     	endif
  4303  000C82                     	if	0	;tblptru may be non-zero
  4304  000C82                     	endif
  4305  000C82  0008               	tblrd		*
  4306  000C84  50F5               	movf	tablat,w,c
  4307  000C86  5C17               	subwf	??_strcmp2,w,c
  4308  000C88  B0D8               	btfsc	status,0,c
  4309  000C8A  D002               	goto	l403
  4310                           
  4311                           ;SlaveComm_PIC18.c: 537: {
  4312                           ;SlaveComm_PIC18.c: 538: match = -1;
  4313  000C8C  681A               	setf	strcmp2@match,c
  4314  000C8E  681B               	setf	strcmp2@match+1,c
  4315  000C90                     l403:
  4316                           
  4317                           ;SlaveComm_PIC18.c: 543: }
  4318                           ;SlaveComm_PIC18.c: 545: inx++;
  4319                           
  4320                           ;SlaveComm_PIC18.c: 541: {
  4321  000C90  4A1C               	infsnz	strcmp2@inx,f,c
  4322  000C92  2A1D               	incf	strcmp2@inx+1,f,c
  4323  000C94                     l399:
  4324  000C94  501C               	movf	strcmp2@inx,w,c
  4325  000C96  2413               	addwf	strcmp2@a,w,c
  4326  000C98  6ED9               	movwf	fsr2l,c
  4327  000C9A  501D               	movf	strcmp2@inx+1,w,c
  4328  000C9C  2014               	addwfc	strcmp2@a+1,w,c
  4329  000C9E  6EDA               	movwf	fsr2h,c
  4330  000CA0  50DF               	movf	indf2,w,c
  4331  000CA2  B4D8               	btfsc	status,2,c
  4332  000CA4  D013               	goto	u2000
  4333  000CA6  501C               	movf	strcmp2@inx,w,c
  4334  000CA8  2415               	addwf	strcmp2@b,w,c
  4335  000CAA  6E17               	movwf	??_strcmp2& (0+255),c
  4336  000CAC  501D               	movf	strcmp2@inx+1,w,c
  4337  000CAE  2016               	addwfc	strcmp2@b+1,w,c
  4338  000CB0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4339  000CB2  C017  FFF6         	movff	??_strcmp2,tblptrl
  4340  000CB6  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4341  000CBA                     	if	0	;tblptru may be non-zero
  4342  000CBA                     	endif
  4343  000CBA                     	if	0	;tblptru may be non-zero
  4344  000CBA                     	endif
  4345  000CBA  0008               	tblrd		*
  4346  000CBC  50F5               	movf	tablat,w,c
  4347  000CBE  0900               	iorlw	0
  4348  000CC0  B4D8               	btfsc	status,2,c
  4349  000CC2  D004               	goto	u2000
  4350  000CC4  501A               	movf	strcmp2@match,w,c
  4351  000CC6  101B               	iorwf	strcmp2@match+1,w,c
  4352  000CC8  B4D8               	btfsc	status,2,c
  4353  000CCA  D7AF               	goto	l400
  4354  000CCC                     u2000:
  4355                           
  4356                           ;SlaveComm_PIC18.c: 546: }
  4357                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4358  000CCC  501C               	movf	strcmp2@inx,w,c
  4359  000CCE  2413               	addwf	strcmp2@a,w,c
  4360  000CD0  6ED9               	movwf	fsr2l,c
  4361  000CD2  501D               	movf	strcmp2@inx+1,w,c
  4362  000CD4  2014               	addwfc	strcmp2@a+1,w,c
  4363  000CD6  6EDA               	movwf	fsr2h,c
  4364  000CD8  50DF               	movf	indf2,w,c
  4365  000CDA  A4D8               	btfss	status,2,c
  4366  000CDC  D012               	goto	l409
  4367  000CDE  501C               	movf	strcmp2@inx,w,c
  4368  000CE0  2415               	addwf	strcmp2@b,w,c
  4369  000CE2  6E17               	movwf	??_strcmp2& (0+255),c
  4370  000CE4  501D               	movf	strcmp2@inx+1,w,c
  4371  000CE6  2016               	addwfc	strcmp2@b+1,w,c
  4372  000CE8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4373  000CEA  C017  FFF6         	movff	??_strcmp2,tblptrl
  4374  000CEE  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4375  000CF2                     	if	0	;tblptru may be non-zero
  4376  000CF2                     	endif
  4377  000CF2                     	if	0	;tblptru may be non-zero
  4378  000CF2                     	endif
  4379  000CF2  0008               	tblrd		*
  4380  000CF4  50F5               	movf	tablat,w,c
  4381  000CF6  0900               	iorlw	0
  4382  000CF8  B4D8               	btfsc	status,2,c
  4383  000CFA  D003               	goto	l409
  4384                           
  4385                           ;SlaveComm_PIC18.c: 550: {
  4386                           ;SlaveComm_PIC18.c: 551: match = -1;
  4387  000CFC  681A               	setf	strcmp2@match,c
  4388  000CFE  681B               	setf	strcmp2@match+1,c
  4389                           
  4390                           ;SlaveComm_PIC18.c: 552: }
  4391  000D00  D01C               	goto	l411
  4392  000D02                     l409:
  4393                           
  4394                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4395  000D02  501C               	movf	strcmp2@inx,w,c
  4396  000D04  2413               	addwf	strcmp2@a,w,c
  4397  000D06  6ED9               	movwf	fsr2l,c
  4398  000D08  501D               	movf	strcmp2@inx+1,w,c
  4399  000D0A  2014               	addwfc	strcmp2@a+1,w,c
  4400  000D0C  6EDA               	movwf	fsr2h,c
  4401  000D0E  50DF               	movf	indf2,w,c
  4402  000D10  B4D8               	btfsc	status,2,c
  4403  000D12  D013               	goto	l411
  4404  000D14  501C               	movf	strcmp2@inx,w,c
  4405  000D16  2415               	addwf	strcmp2@b,w,c
  4406  000D18  6E17               	movwf	??_strcmp2& (0+255),c
  4407  000D1A  501D               	movf	strcmp2@inx+1,w,c
  4408  000D1C  2016               	addwfc	strcmp2@b+1,w,c
  4409  000D1E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4410  000D20  C017  FFF6         	movff	??_strcmp2,tblptrl
  4411  000D24  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4412  000D28                     	if	0	;tblptru may be non-zero
  4413  000D28                     	endif
  4414  000D28                     	if	0	;tblptru may be non-zero
  4415  000D28                     	endif
  4416  000D28  0008               	tblrd		*
  4417  000D2A  50F5               	movf	tablat,w,c
  4418  000D2C  0900               	iorlw	0
  4419  000D2E  A4D8               	btfss	status,2,c
  4420  000D30  D004               	goto	l411
  4421                           
  4422                           ;SlaveComm_PIC18.c: 554: {
  4423                           ;SlaveComm_PIC18.c: 555: match = 1;
  4424  000D32  0E00               	movlw	0
  4425  000D34  6E1B               	movwf	strcmp2@match+1,c
  4426  000D36  0E01               	movlw	1
  4427  000D38  6E1A               	movwf	strcmp2@match,c
  4428  000D3A                     l411:
  4429                           
  4430                           ;SlaveComm_PIC18.c: 556: }
  4431                           ;SlaveComm_PIC18.c: 558: return match;
  4432  000D3A  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4433  000D3E  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4434  000D42  0012               	return	
  4435  000D44                     __end_of_strcmp2:
  4436                           	opt stack 0
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           intcon3	equ	0xFF0
  4446                           postinc0	equ	0xFEE
  4447                           wreg	equ	0xFE8
  4448                           postinc1	equ	0xFE6
  4449                           postdec1	equ	0xFE5
  4450                           plusw1	equ	0xFE3
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           postinc2	equ	0xFDE
  4455                           plusw2	equ	0xFDB
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _send_end_of_transmission *****************
  4461 ;; Defined at:
  4462 ;;		line 604 in file "SlaveComm_PIC18.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4465 ;;		 -> communications@send_buffer(42), 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4477 ;;      Params:         2       0       0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0
  4480 ;;      Totals:         2       0       0       0       0       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    4
  4484 ;; This function calls:
  4485 ;;		_command_builder1
  4486 ;; This function is called by:
  4487 ;;		_process_data_parameters
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text23
  4492  001A32                     __ptext23:
  4493                           	opt stack 0
  4494  001A32                     _send_end_of_transmission:
  4495                           	opt stack 23
  4496                           
  4497                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4498                           
  4499                           ;incstack = 0
  4500  001A32  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4501  001A36  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4502  001A3A  0E4F               	movlw	low STR_1
  4503  001A3C  6E21               	movwf	command_builder1@data1,c
  4504  001A3E  0E06               	movlw	high STR_1
  4505  001A40  6E22               	movwf	command_builder1@data1+1,c
  4506  001A42  EC20  F00B         	call	_command_builder1	;wreg free
  4507  001A46  0012               	return	
  4508  001A48                     __end_of_send_end_of_transmission:
  4509                           	opt stack 0
  4510                           tblptru	equ	0xFF8
  4511                           tblptrh	equ	0xFF7
  4512                           tblptrl	equ	0xFF6
  4513                           tablat	equ	0xFF5
  4514                           prodh	equ	0xFF4
  4515                           prodl	equ	0xFF3
  4516                           intcon	equ	0xFF2
  4517                           intcon2	equ	0xFF1
  4518                           intcon3	equ	0xFF0
  4519                           postinc0	equ	0xFEE
  4520                           wreg	equ	0xFE8
  4521                           postinc1	equ	0xFE6
  4522                           postdec1	equ	0xFE5
  4523                           plusw1	equ	0xFE3
  4524                           fsr1h	equ	0xFE2
  4525                           fsr1l	equ	0xFE1
  4526                           indf2	equ	0xFDF
  4527                           postinc2	equ	0xFDE
  4528                           plusw2	equ	0xFDB
  4529                           fsr2h	equ	0xFDA
  4530                           fsr2l	equ	0xFD9
  4531                           status	equ	0xFD8
  4532                           
  4533 ;; *************** function _command_builder1 *****************
  4534 ;; Defined at:
  4535 ;;		line 406 in file "SlaveComm_PIC18.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4538 ;;		 -> communications@send_buffer(42), 
  4539 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4540 ;;		 -> STR_23(4), 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4552 ;;      Params:         4       0       0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0
  4555 ;;      Totals:         4       0       0       0       0       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    3
  4559 ;; This function calls:
  4560 ;;		_command_builder_add_char
  4561 ;;		_command_builder_add_string
  4562 ;; This function is called by:
  4563 ;;		_send_end_of_transmission
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text24
  4568  001640                     __ptext24:
  4569                           	opt stack 0
  4570  001640                     _command_builder1:
  4571                           	opt stack 23
  4572                           
  4573                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4574                           
  4575                           ;incstack = 0
  4576  001640  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4577  001644  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4578  001648  0E23               	movlw	35
  4579  00164A  6E15               	movwf	command_builder_add_char@data,c
  4580  00164C  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  4581                           
  4582                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4583  001650  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4584  001654  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4585  001658  0E23               	movlw	35
  4586  00165A  6E15               	movwf	command_builder_add_char@data,c
  4587  00165C  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  4588                           
  4589                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4590  001660  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4591  001664  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4592  001668  0E21               	movlw	33
  4593  00166A  6E15               	movwf	command_builder_add_char@data,c
  4594  00166C  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  4595                           
  4596                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4597  001670  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4598  001674  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4599  001678  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4600  00167C  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4601  001680  EC3A  F00A         	call	_command_builder_add_string	;wreg free
  4602                           
  4603                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4604  001684  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4605  001688  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4606  00168C  0E2A               	movlw	42
  4607  00168E  6E15               	movwf	command_builder_add_char@data,c
  4608  001690  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  4609  001694  0012               	return	
  4610  001696                     __end_of_command_builder1:
  4611                           	opt stack 0
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           prodh	equ	0xFF4
  4617                           prodl	equ	0xFF3
  4618                           intcon	equ	0xFF2
  4619                           intcon2	equ	0xFF1
  4620                           intcon3	equ	0xFF0
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           postinc1	equ	0xFE6
  4624                           postdec1	equ	0xFE5
  4625                           plusw1	equ	0xFE3
  4626                           fsr1h	equ	0xFE2
  4627                           fsr1l	equ	0xFE1
  4628                           indf2	equ	0xFDF
  4629                           postinc2	equ	0xFDE
  4630                           plusw2	equ	0xFDB
  4631                           fsr2h	equ	0xFDA
  4632                           fsr2l	equ	0xFD9
  4633                           status	equ	0xFD8
  4634                           
  4635 ;; *************** function _com_command_setEnergyUsed *****************
  4636 ;; Defined at:
  4637 ;;		line 629 in file "SlaveComm_PIC18.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4640 ;;		 -> communications@send_buffer(42), 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  temp           12   46[COMRAM] unsigned char [12]
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4652 ;;      Params:         2       0       0       0       0       0       0
  4653 ;;      Locals:        12       0       0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0
  4655 ;;      Totals:        14       0       0       0       0       0       0
  4656 ;;Total ram usage:       14 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    4
  4659 ;; This function calls:
  4660 ;;		_command_builder3
  4661 ;;		_ultoa
  4662 ;; This function is called by:
  4663 ;;		_resetCommunications
  4664 ;;		_process_data_parameters
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text25
  4669  001828                     __ptext25:
  4670                           	opt stack 0
  4671  001828                     _com_command_setEnergyUsed:
  4672                           	opt stack 24
  4673                           
  4674                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4675                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4676                           
  4677                           ;incstack = 0
  4678  001828  0E2F               	movlw	low com_command_setEnergyUsed@temp
  4679  00182A  6E20               	movwf	ultoa@buf,c
  4680  00182C  0E00               	movlw	high com_command_setEnergyUsed@temp
  4681  00182E  6E21               	movwf	ultoa@buf+1,c
  4682  001830  C0AA  F022         	movff	_meterEnergyUsed,ultoa@val
  4683  001834  C0AB  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4684  001838  C0AC  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4685  00183C  C0AD  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4686  001840  0E00               	movlw	0
  4687  001842  6E27               	movwf	ultoa@base+1,c
  4688  001844  0E0A               	movlw	10
  4689  001846  6E26               	movwf	ultoa@base,c
  4690  001848  ECA2  F006         	call	_ultoa	;wreg free
  4691                           
  4692                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4693  00184C  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4694  001850  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4695  001854  0E57               	movlw	low STR_2
  4696  001856  6E21               	movwf	command_builder3@data1,c
  4697  001858  0E06               	movlw	high STR_2
  4698  00185A  6E22               	movwf	command_builder3@data1+1,c
  4699  00185C  0E17               	movlw	low STR_4
  4700  00185E  6E23               	movwf	command_builder3@data2,c
  4701  001860  0E06               	movlw	high STR_4
  4702  001862  6E24               	movwf	command_builder3@data2+1,c
  4703  001864  0E2F               	movlw	low com_command_setEnergyUsed@temp
  4704  001866  6E25               	movwf	command_builder3@data3,c
  4705  001868  0E00               	movlw	high com_command_setEnergyUsed@temp
  4706  00186A  6E26               	movwf	command_builder3@data3+1,c
  4707  00186C  EC62  F009         	call	_command_builder3	;wreg free
  4708  001870  0012               	return	
  4709  001872                     __end_of_com_command_setEnergyUsed:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           intcon2	equ	0xFF1
  4719                           intcon3	equ	0xFF0
  4720                           postinc0	equ	0xFEE
  4721                           wreg	equ	0xFE8
  4722                           postinc1	equ	0xFE6
  4723                           postdec1	equ	0xFE5
  4724                           plusw1	equ	0xFE3
  4725                           fsr1h	equ	0xFE2
  4726                           fsr1l	equ	0xFE1
  4727                           indf2	equ	0xFDF
  4728                           postinc2	equ	0xFDE
  4729                           plusw2	equ	0xFDB
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _ultoa *****************
  4735 ;; Defined at:
  4736 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ltoa.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4739 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4740 ;;  val             4   33[COMRAM] unsigned long 
  4741 ;;  base            2   37[COMRAM] int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  v               4   39[COMRAM] unsigned long 
  4744 ;;  c               1   43[COMRAM] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2   31[COMRAM] PTR unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4754 ;;      Params:         8       0       0       0       0       0       0
  4755 ;;      Locals:         5       0       0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0
  4757 ;;      Totals:        13       0       0       0       0       0       0
  4758 ;;Total ram usage:       13 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    2
  4761 ;; This function calls:
  4762 ;;		___lldiv
  4763 ;;		___llmod
  4764 ;; This function is called by:
  4765 ;;		_com_command_setPower
  4766 ;;		_com_command_setEnergyUsed
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text26
  4771  000D44                     __ptext26:
  4772                           	opt stack 0
  4773  000D44                     _ultoa:
  4774                           	opt stack 25
  4775                           
  4776                           ;incstack = 0
  4777  000D44  C022  F028         	movff	ultoa@val,ultoa@v
  4778  000D48  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4779  000D4C  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4780  000D50  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4781  000D54  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4782  000D58  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4783  000D5C  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4784  000D60  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4785  000D64  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4786  000D68  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4787  000D6C  0E00               	movlw	0
  4788  000D6E  BE18               	btfsc	___lldiv@divisor+1,7,c
  4789  000D70  0EFF               	movlw	-1
  4790  000D72  6E19               	movwf	___lldiv@divisor+2,c
  4791  000D74  6E1A               	movwf	___lldiv@divisor+3,c
  4792  000D76  ECF9  F009         	call	___lldiv	;wreg free
  4793  000D7A  C013  F028         	movff	?___lldiv,ultoa@v
  4794  000D7E  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4795  000D82  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4796  000D86  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4797  000D8A  4A20               	infsnz	ultoa@buf,f,c
  4798  000D8C  2A21               	incf	ultoa@buf+1,f,c
  4799  000D8E  5028               	movf	ultoa@v,w,c
  4800  000D90  1029               	iorwf	ultoa@v+1,w,c
  4801  000D92  102A               	iorwf	ultoa@v+2,w,c
  4802  000D94  102B               	iorwf	ultoa@v+3,w,c
  4803  000D96  A4D8               	btfss	status,2,c
  4804  000D98  D7DD               	goto	l872
  4805  000D9A  C020  FFD9         	movff	ultoa@buf,fsr2l
  4806  000D9E  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4807  000DA2  0E00               	movlw	0
  4808  000DA4  6EDF               	movwf	indf2,c
  4809  000DA6  0620               	decf	ultoa@buf,f,c
  4810  000DA8  A0D8               	btfss	status,0,c
  4811  000DAA  0621               	decf	ultoa@buf+1,f,c
  4812  000DAC  C022  F013         	movff	ultoa@val,___llmod@dividend
  4813  000DB0  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4814  000DB4  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4815  000DB8  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4816  000DBC  C026  F017         	movff	ultoa@base,___llmod@divisor
  4817  000DC0  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4818  000DC4  0E00               	movlw	0
  4819  000DC6  BE18               	btfsc	___llmod@divisor+1,7,c
  4820  000DC8  0EFF               	movlw	-1
  4821  000DCA  6E19               	movwf	___llmod@divisor+2,c
  4822  000DCC  6E1A               	movwf	___llmod@divisor+3,c
  4823  000DCE  ECED  F00A         	call	___llmod	;wreg free
  4824  000DD2  5013               	movf	?___llmod,w,c
  4825  000DD4  6E2C               	movwf	ultoa@c,c
  4826  000DD6  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4827  000DDA  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4828  000DDE  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4829  000DE2  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4830  000DE6  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4831  000DEA  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4832  000DEE  0E00               	movlw	0
  4833  000DF0  BE18               	btfsc	___lldiv@divisor+1,7,c
  4834  000DF2  0EFF               	movlw	-1
  4835  000DF4  6E19               	movwf	___lldiv@divisor+2,c
  4836  000DF6  6E1A               	movwf	___lldiv@divisor+3,c
  4837  000DF8  ECF9  F009         	call	___lldiv	;wreg free
  4838  000DFC  C013  F022         	movff	?___lldiv,ultoa@val
  4839  000E00  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4840  000E04  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4841  000E08  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4842  000E0C  0E09               	movlw	9
  4843  000E0E  642C               	cpfsgt	ultoa@c,c
  4844  000E10  D002               	goto	l875
  4845  000E12  0E07               	movlw	7
  4846  000E14  262C               	addwf	ultoa@c,f,c
  4847  000E16                     l875:
  4848  000E16  0E30               	movlw	48
  4849  000E18  262C               	addwf	ultoa@c,f,c
  4850  000E1A  C020  FFD9         	movff	ultoa@buf,fsr2l
  4851  000E1E  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4852  000E22  C02C  FFDF         	movff	ultoa@c,indf2
  4853  000E26  0620               	decf	ultoa@buf,f,c
  4854  000E28  A0D8               	btfss	status,0,c
  4855  000E2A  0621               	decf	ultoa@buf+1,f,c
  4856  000E2C  5022               	movf	ultoa@val,w,c
  4857  000E2E  1023               	iorwf	ultoa@val+1,w,c
  4858  000E30  1024               	iorwf	ultoa@val+2,w,c
  4859  000E32  1025               	iorwf	ultoa@val+3,w,c
  4860  000E34  B4D8               	btfsc	status,2,c
  4861  000E36  0012               	return	
  4862  000E38  D7B9               	goto	l874
  4863  000E3A                     __end_of_ultoa:
  4864                           	opt stack 0
  4865                           tblptru	equ	0xFF8
  4866                           tblptrh	equ	0xFF7
  4867                           tblptrl	equ	0xFF6
  4868                           tablat	equ	0xFF5
  4869                           prodh	equ	0xFF4
  4870                           prodl	equ	0xFF3
  4871                           intcon	equ	0xFF2
  4872                           intcon2	equ	0xFF1
  4873                           intcon3	equ	0xFF0
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postinc1	equ	0xFE6
  4877                           postdec1	equ	0xFE5
  4878                           plusw1	equ	0xFE3
  4879                           fsr1h	equ	0xFE2
  4880                           fsr1l	equ	0xFE1
  4881                           indf2	equ	0xFDF
  4882                           postinc2	equ	0xFDE
  4883                           plusw2	equ	0xFDB
  4884                           fsr2h	equ	0xFDA
  4885                           fsr2l	equ	0xFD9
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function ___llmod *****************
  4889 ;; Defined at:
  4890 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  dividend        4   18[COMRAM] unsigned long 
  4893 ;;  divisor         4   22[COMRAM] unsigned long 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  counter         1   26[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  4   18[COMRAM] unsigned long 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4905 ;;      Params:         8       0       0       0       0       0       0
  4906 ;;      Locals:         1       0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0
  4908 ;;      Totals:         9       0       0       0       0       0       0
  4909 ;;Total ram usage:        9 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_ultoa
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text27
  4920  0015DA                     __ptext27:
  4921                           	opt stack 0
  4922  0015DA                     ___llmod:
  4923                           	opt stack 25
  4924                           
  4925                           ;incstack = 0
  4926  0015DA  5017               	movf	___llmod@divisor,w,c
  4927  0015DC  1018               	iorwf	___llmod@divisor+1,w,c
  4928  0015DE  1019               	iorwf	___llmod@divisor+2,w,c
  4929  0015E0  101A               	iorwf	___llmod@divisor+3,w,c
  4930  0015E2  B4D8               	btfsc	status,2,c
  4931  0015E4  D024               	goto	l834
  4932  0015E6  0E01               	movlw	1
  4933  0015E8  6E1B               	movwf	___llmod@counter,c
  4934  0015EA  D006               	goto	l829
  4935  0015EC  90D8               	bcf	status,0,c
  4936  0015EE  3617               	rlcf	___llmod@divisor,f,c
  4937  0015F0  3618               	rlcf	___llmod@divisor+1,f,c
  4938  0015F2  3619               	rlcf	___llmod@divisor+2,f,c
  4939  0015F4  361A               	rlcf	___llmod@divisor+3,f,c
  4940  0015F6  2A1B               	incf	___llmod@counter,f,c
  4941  0015F8                     l829:
  4942  0015F8  AE1A               	btfss	___llmod@divisor+3,7,c
  4943  0015FA  D7F8               	goto	l830
  4944  0015FC                     u1940:
  4945  0015FC  5017               	movf	___llmod@divisor,w,c
  4946  0015FE  5C13               	subwf	___llmod@dividend,w,c
  4947  001600  5018               	movf	___llmod@divisor+1,w,c
  4948  001602  5814               	subwfb	___llmod@dividend+1,w,c
  4949  001604  5019               	movf	___llmod@divisor+2,w,c
  4950  001606  5815               	subwfb	___llmod@dividend+2,w,c
  4951  001608  501A               	movf	___llmod@divisor+3,w,c
  4952  00160A  5816               	subwfb	___llmod@dividend+3,w,c
  4953  00160C  A0D8               	btfss	status,0,c
  4954  00160E  D008               	goto	l833
  4955  001610  5017               	movf	___llmod@divisor,w,c
  4956  001612  5E13               	subwf	___llmod@dividend,f,c
  4957  001614  5018               	movf	___llmod@divisor+1,w,c
  4958  001616  5A14               	subwfb	___llmod@dividend+1,f,c
  4959  001618  5019               	movf	___llmod@divisor+2,w,c
  4960  00161A  5A15               	subwfb	___llmod@dividend+2,f,c
  4961  00161C  501A               	movf	___llmod@divisor+3,w,c
  4962  00161E  5A16               	subwfb	___llmod@dividend+3,f,c
  4963  001620                     l833:
  4964  001620  90D8               	bcf	status,0,c
  4965  001622  321A               	rrcf	___llmod@divisor+3,f,c
  4966  001624  3219               	rrcf	___llmod@divisor+2,f,c
  4967  001626  3218               	rrcf	___llmod@divisor+1,f,c
  4968  001628  3217               	rrcf	___llmod@divisor,f,c
  4969  00162A  2E1B               	decfsz	___llmod@counter,f,c
  4970  00162C  D7E7               	goto	u1940
  4971  00162E                     l834:
  4972  00162E  C013  F013         	movff	___llmod@dividend,?___llmod
  4973  001632  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4974  001636  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4975  00163A  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4976  00163E  0012               	return		;funcret
  4977  001640                     __end_of___llmod:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           intcon2	equ	0xFF1
  4987                           intcon3	equ	0xFF0
  4988                           postinc0	equ	0xFEE
  4989                           wreg	equ	0xFE8
  4990                           postinc1	equ	0xFE6
  4991                           postdec1	equ	0xFE5
  4992                           plusw1	equ	0xFE3
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           plusw2	equ	0xFDB
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function ___lldiv *****************
  5003 ;; Defined at:
  5004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  dividend        4   18[COMRAM] unsigned long 
  5007 ;;  divisor         4   22[COMRAM] unsigned long 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  quotient        4   26[COMRAM] unsigned long 
  5010 ;;  counter         1   30[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  4   18[COMRAM] unsigned long 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5020 ;;      Params:         8       0       0       0       0       0       0
  5021 ;;      Locals:         5       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0
  5023 ;;      Totals:        13       0       0       0       0       0       0
  5024 ;;Total ram usage:       13 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_ultoa
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text28
  5035  0013F2                     __ptext28:
  5036                           	opt stack 0
  5037  0013F2                     ___lldiv:
  5038                           	opt stack 25
  5039                           
  5040                           ;incstack = 0
  5041  0013F2  0E00               	movlw	0
  5042  0013F4  6E1B               	movwf	___lldiv@quotient,c
  5043  0013F6  0E00               	movlw	0
  5044  0013F8  6E1C               	movwf	___lldiv@quotient+1,c
  5045  0013FA  0E00               	movlw	0
  5046  0013FC  6E1D               	movwf	___lldiv@quotient+2,c
  5047  0013FE  0E00               	movlw	0
  5048  001400  6E1E               	movwf	___lldiv@quotient+3,c
  5049  001402  5017               	movf	___lldiv@divisor,w,c
  5050  001404  1018               	iorwf	___lldiv@divisor+1,w,c
  5051  001406  1019               	iorwf	___lldiv@divisor+2,w,c
  5052  001408  101A               	iorwf	___lldiv@divisor+3,w,c
  5053  00140A  B4D8               	btfsc	status,2,c
  5054  00140C  D02A               	goto	l824
  5055  00140E  0E01               	movlw	1
  5056  001410  6E1F               	movwf	___lldiv@counter,c
  5057  001412  D006               	goto	l819
  5058  001414  90D8               	bcf	status,0,c
  5059  001416  3617               	rlcf	___lldiv@divisor,f,c
  5060  001418  3618               	rlcf	___lldiv@divisor+1,f,c
  5061  00141A  3619               	rlcf	___lldiv@divisor+2,f,c
  5062  00141C  361A               	rlcf	___lldiv@divisor+3,f,c
  5063  00141E  2A1F               	incf	___lldiv@counter,f,c
  5064  001420                     l819:
  5065  001420  AE1A               	btfss	___lldiv@divisor+3,7,c
  5066  001422  D7F8               	goto	l820
  5067  001424                     u1910:
  5068  001424  90D8               	bcf	status,0,c
  5069  001426  361B               	rlcf	___lldiv@quotient,f,c
  5070  001428  361C               	rlcf	___lldiv@quotient+1,f,c
  5071  00142A  361D               	rlcf	___lldiv@quotient+2,f,c
  5072  00142C  361E               	rlcf	___lldiv@quotient+3,f,c
  5073  00142E  5017               	movf	___lldiv@divisor,w,c
  5074  001430  5C13               	subwf	___lldiv@dividend,w,c
  5075  001432  5018               	movf	___lldiv@divisor+1,w,c
  5076  001434  5814               	subwfb	___lldiv@dividend+1,w,c
  5077  001436  5019               	movf	___lldiv@divisor+2,w,c
  5078  001438  5815               	subwfb	___lldiv@dividend+2,w,c
  5079  00143A  501A               	movf	___lldiv@divisor+3,w,c
  5080  00143C  5816               	subwfb	___lldiv@dividend+3,w,c
  5081  00143E  A0D8               	btfss	status,0,c
  5082  001440  D009               	goto	l823
  5083  001442  5017               	movf	___lldiv@divisor,w,c
  5084  001444  5E13               	subwf	___lldiv@dividend,f,c
  5085  001446  5018               	movf	___lldiv@divisor+1,w,c
  5086  001448  5A14               	subwfb	___lldiv@dividend+1,f,c
  5087  00144A  5019               	movf	___lldiv@divisor+2,w,c
  5088  00144C  5A15               	subwfb	___lldiv@dividend+2,f,c
  5089  00144E  501A               	movf	___lldiv@divisor+3,w,c
  5090  001450  5A16               	subwfb	___lldiv@dividend+3,f,c
  5091  001452  801B               	bsf	___lldiv@quotient,0,c
  5092  001454                     l823:
  5093  001454  90D8               	bcf	status,0,c
  5094  001456  321A               	rrcf	___lldiv@divisor+3,f,c
  5095  001458  3219               	rrcf	___lldiv@divisor+2,f,c
  5096  00145A  3218               	rrcf	___lldiv@divisor+1,f,c
  5097  00145C  3217               	rrcf	___lldiv@divisor,f,c
  5098  00145E  2E1F               	decfsz	___lldiv@counter,f,c
  5099  001460  D7E1               	goto	u1910
  5100  001462                     l824:
  5101  001462  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5102  001466  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5103  00146A  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5104  00146E  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5105  001472  0012               	return		;funcret
  5106  001474                     __end_of___lldiv:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           intcon	equ	0xFF2
  5115                           intcon2	equ	0xFF1
  5116                           intcon3	equ	0xFF0
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           postinc1	equ	0xFE6
  5120                           postdec1	equ	0xFE5
  5121                           plusw1	equ	0xFE3
  5122                           fsr1h	equ	0xFE2
  5123                           fsr1l	equ	0xFE1
  5124                           indf2	equ	0xFDF
  5125                           postinc2	equ	0xFDE
  5126                           plusw2	equ	0xFDB
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _command_builder3 *****************
  5132 ;; Defined at:
  5133 ;;		line 430 in file "SlaveComm_PIC18.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  5136 ;;		 -> communications@send_buffer(42), 
  5137 ;;  data1           2   32[COMRAM] PTR unsigned char 
  5138 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5139 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5140 ;;  data2           2   34[COMRAM] PTR unsigned char 
  5141 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5142 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5143 ;;  data3           2   36[COMRAM] PTR unsigned char 
  5144 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5145 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5157 ;;      Params:         8       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0
  5160 ;;      Totals:         8       0       0       0       0       0       0
  5161 ;;Total ram usage:        8 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    3
  5164 ;; This function calls:
  5165 ;;		_command_builder_add_char
  5166 ;;		_command_builder_add_string
  5167 ;; This function is called by:
  5168 ;;		_process_data_parameters
  5169 ;;		_com_command_setPower
  5170 ;;		_com_command_setEnergyUsed
  5171 ;;		_com_command_setVersion
  5172 ;;		_com_command_setVolts
  5173 ;;		_com_command_setAmps
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text29
  5178  0012C4                     __ptext29:
  5179                           	opt stack 0
  5180  0012C4                     _command_builder3:
  5181                           	opt stack 24
  5182                           
  5183                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  5184                           
  5185                           ;incstack = 0
  5186  0012C4  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5187  0012C8  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5188  0012CC  0E23               	movlw	35
  5189  0012CE  6E15               	movwf	command_builder_add_char@data,c
  5190  0012D0  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5191                           
  5192                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  5193  0012D4  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5194  0012D8  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5195  0012DC  0E23               	movlw	35
  5196  0012DE  6E15               	movwf	command_builder_add_char@data,c
  5197  0012E0  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5198                           
  5199                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  5200  0012E4  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5201  0012E8  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5202  0012EC  0E21               	movlw	33
  5203  0012EE  6E15               	movwf	command_builder_add_char@data,c
  5204  0012F0  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5205                           
  5206                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  5207  0012F4  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5208  0012F8  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5209  0012FC  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5210  001300  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5211  001304  EC3A  F00A         	call	_command_builder_add_string	;wreg free
  5212                           
  5213                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  5214  001308  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5215  00130C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5216  001310  0E3B               	movlw	59
  5217  001312  6E15               	movwf	command_builder_add_char@data,c
  5218  001314  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5219                           
  5220                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  5221  001318  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5222  00131C  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5223  001320  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5224  001324  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5225  001328  EC3A  F00A         	call	_command_builder_add_string	;wreg free
  5226                           
  5227                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  5228  00132C  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5229  001330  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5230  001334  0E3B               	movlw	59
  5231  001336  6E15               	movwf	command_builder_add_char@data,c
  5232  001338  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5233                           
  5234                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  5235  00133C  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5236  001340  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5237  001344  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5238  001348  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5239  00134C  EC3A  F00A         	call	_command_builder_add_string	;wreg free
  5240                           
  5241                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  5242  001350  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5243  001354  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5244  001358  0E2A               	movlw	42
  5245  00135A  6E15               	movwf	command_builder_add_char@data,c
  5246  00135C  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5247  001360  0012               	return	
  5248  001362                     __end_of_command_builder3:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           intcon	equ	0xFF2
  5257                           intcon2	equ	0xFF1
  5258                           intcon3	equ	0xFF0
  5259                           postinc0	equ	0xFEE
  5260                           wreg	equ	0xFE8
  5261                           postinc1	equ	0xFE6
  5262                           postdec1	equ	0xFE5
  5263                           plusw1	equ	0xFE3
  5264                           fsr1h	equ	0xFE2
  5265                           fsr1l	equ	0xFE1
  5266                           indf2	equ	0xFDF
  5267                           postinc2	equ	0xFDE
  5268                           plusw2	equ	0xFDB
  5269                           fsr2h	equ	0xFDA
  5270                           fsr2l	equ	0xFD9
  5271                           status	equ	0xFD8
  5272                           
  5273 ;; *************** function _command_builder_add_string *****************
  5274 ;; Defined at:
  5275 ;;		line 475 in file "SlaveComm_PIC18.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5278 ;;		 -> communications@send_buffer(42), 
  5279 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5280 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5281 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5282 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5283 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5284 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5285 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  5286 ;;		 -> STR_10(5), STR_9(4), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  inx             2   28[COMRAM] int 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5298 ;;      Params:         4       0       0       0       0       0       0
  5299 ;;      Locals:         2       0       0       0       0       0       0
  5300 ;;      Temps:          2       0       0       0       0       0       0
  5301 ;;      Totals:         8       0       0       0       0       0       0
  5302 ;;Total ram usage:        8 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    2
  5305 ;; This function calls:
  5306 ;;		_command_builder_add_char
  5307 ;; This function is called by:
  5308 ;;		_command_builder1
  5309 ;;		_command_builder3
  5310 ;;		_command_builder2
  5311 ;;		_command_builder4
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text30
  5316  001474                     __ptext30:
  5317                           	opt stack 0
  5318  001474                     _command_builder_add_string:
  5319                           	opt stack 24
  5320                           
  5321                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5322                           
  5323                           ;incstack = 0
  5324  001474  0E00               	movlw	0
  5325  001476  6E1E               	movwf	command_builder_add_string@inx+1,c
  5326  001478  0E00               	movlw	0
  5327  00147A  6E1D               	movwf	command_builder_add_string@inx,c
  5328  00147C  D01F               	goto	l383
  5329  00147E                     
  5330                           ;SlaveComm_PIC18.c: 478: {
  5331                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5332  00147E  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5333  001482  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5334  001486  501D               	movf	command_builder_add_string@inx,w,c
  5335  001488  2419               	addwf	command_builder_add_string@data_string,w,c
  5336  00148A  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5337  00148C  501E               	movf	command_builder_add_string@inx+1,w,c
  5338  00148E  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5339  001490  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5340  001492  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5341  001496  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5342  00149A  6AF8               	clrf	tblptru,c
  5343  00149C  0E05               	movlw	(high __ramtop+-1)
  5344  00149E  64F7               	cpfsgt	tblptrh,c
  5345  0014A0  D003               	bra	u1877
  5346  0014A2  0008               	tblrd		*
  5347  0014A4  50F5               	movf	tablat,w,c
  5348  0014A6  D005               	bra	u1870
  5349  0014A8                     u1877:
  5350  0014A8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5351  0014AC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5352  0014B0  50E7               	movf	indf1,w,c
  5353  0014B2                     u1870:
  5354  0014B2  6E15               	movwf	command_builder_add_char@data,c
  5355  0014B4  EC4B  F00B         	call	_command_builder_add_char	;wreg free
  5356  0014B8  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5357  0014BA  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5358  0014BC                     l383:
  5359  0014BC  501D               	movf	command_builder_add_string@inx,w,c
  5360  0014BE  2419               	addwf	command_builder_add_string@data_string,w,c
  5361  0014C0  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5362  0014C2  501E               	movf	command_builder_add_string@inx+1,w,c
  5363  0014C4  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5364  0014C6  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5365  0014C8  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5366  0014CC  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5367  0014D0  6AF8               	clrf	tblptru,c
  5368  0014D2  0E05               	movlw	(high __ramtop+-1)
  5369  0014D4  64F7               	cpfsgt	tblptrh,c
  5370  0014D6  D003               	bra	u1887
  5371  0014D8  0008               	tblrd		*
  5372  0014DA  50F5               	movf	tablat,w,c
  5373  0014DC  D005               	bra	u1880
  5374  0014DE                     u1887:
  5375  0014DE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5376  0014E2  CFF7 FFE2          	movff	tblptrh,fsr1h
  5377  0014E6  50E7               	movf	indf1,w,c
  5378  0014E8                     u1880:
  5379  0014E8  0900               	iorlw	0
  5380  0014EA  B4D8               	btfsc	status,2,c
  5381  0014EC  0012               	return	
  5382  0014EE  D7C7               	goto	l384
  5383  0014F0                     __end_of_command_builder_add_string:
  5384                           	opt stack 0
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           intcon2	equ	0xFF1
  5393                           intcon3	equ	0xFF0
  5394                           postinc0	equ	0xFEE
  5395                           wreg	equ	0xFE8
  5396                           indf1	equ	0xFE7
  5397                           postinc1	equ	0xFE6
  5398                           postdec1	equ	0xFE5
  5399                           plusw1	equ	0xFE3
  5400                           fsr1h	equ	0xFE2
  5401                           fsr1l	equ	0xFE1
  5402                           indf2	equ	0xFDF
  5403                           postinc2	equ	0xFDE
  5404                           plusw2	equ	0xFDB
  5405                           fsr2h	equ	0xFDA
  5406                           fsr2l	equ	0xFD9
  5407                           status	equ	0xFD8
  5408                           
  5409 ;; *************** function _command_builder_add_char *****************
  5410 ;; Defined at:
  5411 ;;		line 462 in file "SlaveComm_PIC18.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5414 ;;		 -> communications@send_buffer(42), 
  5415 ;;  data            1   20[COMRAM] unsigned char 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5427 ;;      Params:         3       0       0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0
  5429 ;;      Temps:          1       0       0       0       0       0       0
  5430 ;;      Totals:         4       0       0       0       0       0       0
  5431 ;;Total ram usage:        4 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_command_builder1
  5438 ;;		_command_builder3
  5439 ;;		_command_builder_add_string
  5440 ;;		_command_builder2
  5441 ;;		_command_builder4
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text31
  5446  001696                     __ptext31:
  5447                           	opt stack 0
  5448  001696                     _command_builder_add_char:
  5449                           	opt stack 24
  5450                           
  5451                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5452                           
  5453                           ;incstack = 0
  5454  001696  EE20 F028          	lfsr	2,40
  5455  00169A  5013               	movf	command_builder_add_char@send_buffer,w,c
  5456  00169C  26D9               	addwf	fsr2l,f,c
  5457  00169E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5458  0016A0  22DA               	addwfc	fsr2h,f,c
  5459  0016A2  50DF               	movf	indf2,w,c
  5460  0016A4  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5461  0016A6  5016               	movf	??_command_builder_add_char,w,c
  5462  0016A8  0D01               	mullw	1
  5463  0016AA  50F3               	movf	prodl,w,c
  5464  0016AC  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5465  0016AE  6ED9               	movwf	fsr2l,c
  5466  0016B0  50F4               	movf	prodh,w,c
  5467  0016B2  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5468  0016B4  6EDA               	movwf	fsr2h,c
  5469  0016B6  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5470                           
  5471                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5472  0016BA  EE20 F028          	lfsr	2,40
  5473  0016BE  5013               	movf	command_builder_add_char@send_buffer,w,c
  5474  0016C0  26D9               	addwf	fsr2l,f,c
  5475  0016C2  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5476  0016C4  22DA               	addwfc	fsr2h,f,c
  5477  0016C6  2ADF               	incf	indf2,f,c
  5478                           
  5479                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5480  0016C8  EE20 F028          	lfsr	2,40
  5481  0016CC  5013               	movf	command_builder_add_char@send_buffer,w,c
  5482  0016CE  26D9               	addwf	fsr2l,f,c
  5483  0016D0  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5484  0016D2  22DA               	addwfc	fsr2h,f,c
  5485  0016D4  0E27               	movlw	39
  5486  0016D6  64DF               	cpfsgt	indf2,c
  5487  0016D8  0012               	return	
  5488                           
  5489                           ;SlaveComm_PIC18.c: 468: {
  5490                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5491  0016DA  EE20 F028          	lfsr	2,40
  5492  0016DE  5013               	movf	command_builder_add_char@send_buffer,w,c
  5493  0016E0  26D9               	addwf	fsr2l,f,c
  5494  0016E2  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5495  0016E4  22DA               	addwfc	fsr2h,f,c
  5496  0016E6  0E00               	movlw	0
  5497  0016E8  6EDF               	movwf	indf2,c
  5498  0016EA  0012               	return	
  5499  0016EC                     __end_of_command_builder_add_char:
  5500                           	opt stack 0
  5501                           tblptru	equ	0xFF8
  5502                           tblptrh	equ	0xFF7
  5503                           tblptrl	equ	0xFF6
  5504                           tablat	equ	0xFF5
  5505                           prodh	equ	0xFF4
  5506                           prodl	equ	0xFF3
  5507                           intcon	equ	0xFF2
  5508                           intcon2	equ	0xFF1
  5509                           intcon3	equ	0xFF0
  5510                           postinc0	equ	0xFEE
  5511                           wreg	equ	0xFE8
  5512                           indf1	equ	0xFE7
  5513                           postinc1	equ	0xFE6
  5514                           postdec1	equ	0xFE5
  5515                           plusw1	equ	0xFE3
  5516                           fsr1h	equ	0xFE2
  5517                           fsr1l	equ	0xFE1
  5518                           indf2	equ	0xFDF
  5519                           postinc2	equ	0xFDE
  5520                           plusw2	equ	0xFDB
  5521                           fsr2h	equ	0xFDA
  5522                           fsr2l	equ	0xFD9
  5523                           status	equ	0xFD8
  5524                           
  5525 ;; *************** function _atol *****************
  5526 ;; Defined at:
  5527 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\atol.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5530 ;;		 -> process_data@parameters(50), 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  a               4   39[COMRAM] long 
  5533 ;;  c               1   43[COMRAM] unsigned char 
  5534 ;;  sign            1   38[COMRAM] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  4   30[COMRAM] long 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5544 ;;      Params:         4       0       0       0       0       0       0
  5545 ;;      Locals:         6       0       0       0       0       0       0
  5546 ;;      Temps:          4       0       0       0       0       0       0
  5547 ;;      Totals:        14       0       0       0       0       0       0
  5548 ;;Total ram usage:       14 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    2
  5551 ;; This function calls:
  5552 ;;		___lmul
  5553 ;;		_isdigit
  5554 ;; This function is called by:
  5555 ;;		_process_data_parameters
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text32
  5560  000E3A                     __ptext32:
  5561                           	opt stack 0
  5562  000E3A                     _atol:
  5563                           	opt stack 25
  5564                           
  5565                           ;incstack = 0
  5566  000E3A  C01F  FFD9         	movff	atol@s,fsr2l
  5567  000E3E  C020  FFDA         	movff	atol@s+1,fsr2h
  5568  000E42  50DF               	movf	indf2,w,c
  5569  000E44  6E2C               	movwf	atol@c,c
  5570  000E46  4A1F               	infsnz	atol@s,f,c
  5571  000E48  2A20               	incf	atol@s+1,f,c
  5572  000E4A  0E20               	movlw	32
  5573  000E4C  182C               	xorwf	atol@c,w,c
  5574  000E4E  B4D8               	btfsc	status,2,c
  5575  000E50  D7F4               	goto	_atol
  5576  000E52  0E09               	movlw	9
  5577  000E54  182C               	xorwf	atol@c,w,c
  5578  000E56  B4D8               	btfsc	status,2,c
  5579  000E58  D7F0               	goto	_atol
  5580  000E5A  0E00               	movlw	0
  5581  000E5C  6E28               	movwf	atol@a,c
  5582  000E5E  0E00               	movlw	0
  5583  000E60  6E29               	movwf	atol@a+1,c
  5584  000E62  0E00               	movlw	0
  5585  000E64  6E2A               	movwf	atol@a+2,c
  5586  000E66  0E00               	movlw	0
  5587  000E68  6E2B               	movwf	atol@a+3,c
  5588  000E6A  0E00               	movlw	0
  5589  000E6C  6E27               	movwf	atol@sign,c
  5590  000E6E  0E2D               	movlw	45
  5591  000E70  182C               	xorwf	atol@c,w,c
  5592  000E72  A4D8               	btfss	status,2,c
  5593  000E74  D002               	goto	l615
  5594  000E76  2A27               	incf	atol@sign,f,c
  5595  000E78  D027               	goto	L5
  5596  000E7A                     l615:
  5597  000E7A  0E2B               	movlw	43
  5598  000E7C  182C               	xorwf	atol@c,w,c
  5599  000E7E  A4D8               	btfss	status,2,c
  5600  000E80  D02B               	goto	l618
  5601  000E82  D022               	goto	L5
  5602  000E84  C028  F013         	movff	atol@a,___lmul@multiplier
  5603  000E88  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5604  000E8C  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5605  000E90  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5606  000E94  0E0A               	movlw	10
  5607  000E96  6E17               	movwf	___lmul@multiplicand,c
  5608  000E98  0E00               	movlw	0
  5609  000E9A  6E18               	movwf	___lmul@multiplicand+1,c
  5610  000E9C  0E00               	movlw	0
  5611  000E9E  6E19               	movwf	___lmul@multiplicand+2,c
  5612  000EA0  0E00               	movlw	0
  5613  000EA2  6E1A               	movwf	___lmul@multiplicand+3,c
  5614  000EA4  EC76  F00B         	call	___lmul	;wreg free
  5615  000EA8  C02C  F023         	movff	atol@c,??_atol
  5616  000EAC  0ED0               	movlw	208
  5617  000EAE  2623               	addwf	??_atol,f,c
  5618  000EB0  5023               	movf	??_atol,w,c
  5619  000EB2  2413               	addwf	?___lmul,w,c
  5620  000EB4  6E28               	movwf	atol@a,c
  5621  000EB6  0E00               	movlw	0
  5622  000EB8  2014               	addwfc	?___lmul+1,w,c
  5623  000EBA  6E29               	movwf	atol@a+1,c
  5624  000EBC  0E00               	movlw	0
  5625  000EBE  2015               	addwfc	?___lmul+2,w,c
  5626  000EC0  6E2A               	movwf	atol@a+2,c
  5627  000EC2  0E00               	movlw	0
  5628  000EC4  2016               	addwfc	?___lmul+3,w,c
  5629  000EC6  6E2B               	movwf	atol@a+3,c
  5630  000EC8                     L5:
  5631  000EC8  C01F  FFD9         	movff	atol@s,fsr2l
  5632  000ECC  C020  FFDA         	movff	atol@s+1,fsr2h
  5633  000ED0  50DF               	movf	indf2,w,c
  5634  000ED2  6E2C               	movwf	atol@c,c
  5635  000ED4  4A1F               	infsnz	atol@s,f,c
  5636  000ED6  2A20               	incf	atol@s+1,f,c
  5637  000ED8                     l618:
  5638  000ED8  502C               	movf	atol@c,w,c
  5639  000EDA  ECF2  F00C         	call	_isdigit
  5640  000EDE  B0D8               	btfsc	status,0,c
  5641  000EE0  D7D1               	goto	l619
  5642  000EE2  5027               	movf	atol@sign,w,c
  5643  000EE4  B4D8               	btfsc	status,2,c
  5644  000EE6  D01A               	goto	l621
  5645  000EE8  C028  F023         	movff	atol@a,??_atol
  5646  000EEC  C029  F024         	movff	atol@a+1,??_atol+1
  5647  000EF0  C02A  F025         	movff	atol@a+2,??_atol+2
  5648  000EF4  C02B  F026         	movff	atol@a+3,??_atol+3
  5649  000EF8  1E23               	comf	??_atol,f,c
  5650  000EFA  1E24               	comf	??_atol+1,f,c
  5651  000EFC  1E25               	comf	??_atol+2,f,c
  5652  000EFE  1E26               	comf	??_atol+3,f,c
  5653  000F00  2A23               	incf	??_atol,f,c
  5654  000F02  0E00               	movlw	0
  5655  000F04  2224               	addwfc	??_atol+1,f,c
  5656  000F06  2225               	addwfc	??_atol+2,f,c
  5657  000F08  2226               	addwfc	??_atol+3,f,c
  5658  000F0A  C023  F01F         	movff	??_atol,?_atol
  5659  000F0E  C024  F020         	movff	??_atol+1,?_atol+1
  5660  000F12  C025  F021         	movff	??_atol+2,?_atol+2
  5661  000F16  C026  F022         	movff	??_atol+3,?_atol+3
  5662  000F1A  0012               	return	
  5663  000F1C                     l621:
  5664  000F1C  C028  F01F         	movff	atol@a,?_atol
  5665  000F20  C029  F020         	movff	atol@a+1,?_atol+1
  5666  000F24  C02A  F021         	movff	atol@a+2,?_atol+2
  5667  000F28  C02B  F022         	movff	atol@a+3,?_atol+3
  5668  000F2C  0012               	return		;funcret
  5669  000F2E                     __end_of_atol:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           prodh	equ	0xFF4
  5676                           prodl	equ	0xFF3
  5677                           intcon	equ	0xFF2
  5678                           intcon2	equ	0xFF1
  5679                           intcon3	equ	0xFF0
  5680                           postinc0	equ	0xFEE
  5681                           wreg	equ	0xFE8
  5682                           indf1	equ	0xFE7
  5683                           postinc1	equ	0xFE6
  5684                           postdec1	equ	0xFE5
  5685                           plusw1	equ	0xFE3
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           plusw2	equ	0xFDB
  5691                           fsr2h	equ	0xFDA
  5692                           fsr2l	equ	0xFD9
  5693                           status	equ	0xFD8
  5694                           
  5695 ;; *************** function _isdigit *****************
  5696 ;; Defined at:
  5697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  c               1    wreg     unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  c               1   20[COMRAM] unsigned char 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;		None               void
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5711 ;;      Params:         0       0       0       0       0       0       0
  5712 ;;      Locals:         2       0       0       0       0       0       0
  5713 ;;      Temps:          1       0       0       0       0       0       0
  5714 ;;      Totals:         3       0       0       0       0       0       0
  5715 ;;Total ram usage:        3 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    1
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_atol
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text33
  5726  0019E4                     __ptext33:
  5727                           	opt stack 0
  5728  0019E4                     _isdigit:
  5729                           	opt stack 25
  5730                           
  5731                           ;incstack = 0
  5732                           ;isdigit@c stored from wreg
  5733  0019E4  6E15               	movwf	isdigit@c,c
  5734  0019E6  0E00               	movlw	0
  5735  0019E8  6E14               	movwf	_isdigit$2298,c
  5736  0019EA  0E3A               	movlw	58
  5737  0019EC  6015               	cpfslt	isdigit@c,c
  5738  0019EE  D005               	goto	l793
  5739  0019F0  0E2F               	movlw	47
  5740  0019F2  6415               	cpfsgt	isdigit@c,c
  5741  0019F4  D002               	goto	l793
  5742  0019F6  0E01               	movlw	1
  5743  0019F8  6E14               	movwf	_isdigit$2298,c
  5744  0019FA                     l793:
  5745  0019FA  C014  F013         	movff	_isdigit$2298,??_isdigit
  5746  0019FE  3013               	rrcf	??_isdigit,w,c
  5747  001A00  0012               	return	
  5748  001A02                     __end_of_isdigit:
  5749                           	opt stack 0
  5750                           tblptru	equ	0xFF8
  5751                           tblptrh	equ	0xFF7
  5752                           tblptrl	equ	0xFF6
  5753                           tablat	equ	0xFF5
  5754                           prodh	equ	0xFF4
  5755                           prodl	equ	0xFF3
  5756                           intcon	equ	0xFF2
  5757                           intcon2	equ	0xFF1
  5758                           intcon3	equ	0xFF0
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           indf1	equ	0xFE7
  5762                           postinc1	equ	0xFE6
  5763                           postdec1	equ	0xFE5
  5764                           plusw1	equ	0xFE3
  5765                           fsr1h	equ	0xFE2
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           plusw2	equ	0xFDB
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function ___lmul *****************
  5775 ;; Defined at:
  5776 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  multiplier      4   18[COMRAM] unsigned long 
  5779 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  product         4   26[COMRAM] unsigned long 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  4   18[COMRAM] unsigned long 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         8       0       0       0       0       0       0
  5792 ;;      Locals:         4       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0
  5794 ;;      Totals:        12       0       0       0       0       0       0
  5795 ;;Total ram usage:       12 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_atol
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text34
  5806  0016EC                     __ptext34:
  5807                           	opt stack 0
  5808  0016EC                     ___lmul:
  5809                           	opt stack 25
  5810                           
  5811                           ;incstack = 0
  5812  0016EC  0E00               	movlw	0
  5813  0016EE  6E1B               	movwf	___lmul@product,c
  5814  0016F0  0E00               	movlw	0
  5815  0016F2  6E1C               	movwf	___lmul@product+1,c
  5816  0016F4  0E00               	movlw	0
  5817  0016F6  6E1D               	movwf	___lmul@product+2,c
  5818  0016F8  0E00               	movlw	0
  5819  0016FA  6E1E               	movwf	___lmul@product+3,c
  5820  0016FC  A013               	btfss	___lmul@multiplier,0,c
  5821  0016FE  D008               	goto	l462
  5822  001700  5017               	movf	___lmul@multiplicand,w,c
  5823  001702  261B               	addwf	___lmul@product,f,c
  5824  001704  5018               	movf	___lmul@multiplicand+1,w,c
  5825  001706  221C               	addwfc	___lmul@product+1,f,c
  5826  001708  5019               	movf	___lmul@multiplicand+2,w,c
  5827  00170A  221D               	addwfc	___lmul@product+2,f,c
  5828  00170C  501A               	movf	___lmul@multiplicand+3,w,c
  5829  00170E  221E               	addwfc	___lmul@product+3,f,c
  5830  001710                     l462:
  5831  001710  90D8               	bcf	status,0,c
  5832  001712  3617               	rlcf	___lmul@multiplicand,f,c
  5833  001714  3618               	rlcf	___lmul@multiplicand+1,f,c
  5834  001716  3619               	rlcf	___lmul@multiplicand+2,f,c
  5835  001718  361A               	rlcf	___lmul@multiplicand+3,f,c
  5836  00171A  90D8               	bcf	status,0,c
  5837  00171C  3216               	rrcf	___lmul@multiplier+3,f,c
  5838  00171E  3215               	rrcf	___lmul@multiplier+2,f,c
  5839  001720  3214               	rrcf	___lmul@multiplier+1,f,c
  5840  001722  3213               	rrcf	___lmul@multiplier,f,c
  5841  001724  5013               	movf	___lmul@multiplier,w,c
  5842  001726  1014               	iorwf	___lmul@multiplier+1,w,c
  5843  001728  1015               	iorwf	___lmul@multiplier+2,w,c
  5844  00172A  1016               	iorwf	___lmul@multiplier+3,w,c
  5845  00172C  A4D8               	btfss	status,2,c
  5846  00172E  D7E6               	goto	l461
  5847  001730  C01B  F013         	movff	___lmul@product,?___lmul
  5848  001734  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5849  001738  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5850  00173C  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5851  001740  0012               	return		;funcret
  5852  001742                     __end_of___lmul:
  5853                           	opt stack 0
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           prodh	equ	0xFF4
  5859                           prodl	equ	0xFF3
  5860                           intcon	equ	0xFF2
  5861                           intcon2	equ	0xFF1
  5862                           intcon3	equ	0xFF0
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           indf1	equ	0xFE7
  5866                           postinc1	equ	0xFE6
  5867                           postdec1	equ	0xFE5
  5868                           plusw1	equ	0xFE3
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           plusw2	equ	0xFDB
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _process_data_parameterize *****************
  5879 ;; Defined at:
  5880 ;;		line 256 in file "SlaveComm_PIC18.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5883 ;;		 -> process_data@parameters(50), 
  5884 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5885 ;;		 -> communications@receive_buffer(42), 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  inx             2   31[COMRAM] int 
  5888 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5889 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5899 ;;      Params:         4       0       0       0       0       0       0
  5900 ;;      Locals:         4       0       0       0       0       0       0
  5901 ;;      Temps:          3       0       0       0       0       0       0
  5902 ;;      Totals:        11       0       0       0       0       0       0
  5903 ;;Total ram usage:       11 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    2
  5906 ;; This function calls:
  5907 ;;		___wmul
  5908 ;; This function is called by:
  5909 ;;		_process_data
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text35
  5914  000936                     __ptext35:
  5915                           	opt stack 0
  5916  000936                     _process_data_parameterize:
  5917                           	opt stack 26
  5918                           
  5919                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  5920                           
  5921                           ;incstack = 0
  5922  000936  0E00               	movlw	0
  5923  000938  6E23               	movwf	process_data_parameterize@parameter_position,c
  5924                           
  5925                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  5926  00093A  0E00               	movlw	0
  5927  00093C  6E22               	movwf	process_data_parameterize@parameter_index,c
  5928                           
  5929                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  5930  00093E  0E00               	movlw	0
  5931  000940  6E21               	movwf	process_data_parameterize@inx+1,c
  5932  000942  0E00               	movlw	0
  5933  000944  6E20               	movwf	process_data_parameterize@inx,c
  5934  000946  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5935  000948  D008               	goto	l320
  5936  00094A  5021               	movf	process_data_parameterize@inx+1,w,c
  5937  00094C  E105               	bnz	u2210
  5938  00094E  0E05               	movlw	5
  5939  000950  5C20               	subwf	process_data_parameterize@inx,w,c
  5940  000952  B0D8               	btfsc	status,0,c
  5941  000954  D082               	goto	l322
  5942  000956  D001               	goto	l320
  5943  000958                     u2210:
  5944  000958  D080               	goto	l322
  5945  00095A                     l320:
  5946                           
  5947                           ;SlaveComm_PIC18.c: 269: {
  5948                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  5949  00095A  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5950  00095E  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5951  000962  0E00               	movlw	0
  5952  000964  6E16               	movwf	___wmul@multiplicand+1,c
  5953  000966  0E0A               	movlw	10
  5954  000968  6E15               	movwf	___wmul@multiplicand,c
  5955  00096A  ECAC  F00C         	call	___wmul	;wreg free
  5956  00096E  5013               	movf	?___wmul,w,c
  5957  000970  2419               	addwf	process_data_parameterize@parameters,w,c
  5958  000972  6ED9               	movwf	fsr2l,c
  5959  000974  5014               	movf	?___wmul+1,w,c
  5960  000976  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5961  000978  6EDA               	movwf	fsr2h,c
  5962  00097A  0E00               	movlw	0
  5963  00097C  6EDF               	movwf	indf2,c
  5964  00097E  4A20               	infsnz	process_data_parameterize@inx,f,c
  5965  000980  2A21               	incf	process_data_parameterize@inx+1,f,c
  5966  000982  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5967  000984  D7EA               	goto	l320
  5968  000986  5021               	movf	process_data_parameterize@inx+1,w,c
  5969  000988  E168               	bnz	l2862
  5970  00098A  D7E1               	goto	L4
  5971  00098C                     
  5972                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  5973  00098C  0E00               	movlw	0
  5974  00098E  6E23               	movwf	process_data_parameterize@parameter_position,c
  5975                           
  5976                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  5977  000990  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5978                           
  5979                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  5980  000992  0E04               	movlw	4
  5981  000994  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5982  000996  D05A               	goto	l326
  5983                           
  5984                           ;SlaveComm_PIC18.c: 286: {
  5985                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  5986  000998  0E04               	movlw	4
  5987  00099A  6E22               	movwf	process_data_parameterize@parameter_index,c
  5988                           
  5989                           ;SlaveComm_PIC18.c: 290: }
  5990                           ;SlaveComm_PIC18.c: 292: break;
  5991  00099C  D057               	goto	l326
  5992  00099E                     
  5993                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5994  00099E  EE20 F029          	lfsr	2,41
  5995  0009A2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5996  0009A4  26D9               	addwf	fsr2l,f,c
  5997  0009A6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5998  0009A8  22DA               	addwfc	fsr2h,f,c
  5999  0009AA  50DF               	movf	indf2,w,c
  6000  0009AC  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6001  0009AE  501D               	movf	??_process_data_parameterize,w,c
  6002  0009B0  0D01               	mullw	1
  6003  0009B2  50F3               	movf	prodl,w,c
  6004  0009B4  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6005  0009B6  6ED9               	movwf	fsr2l,c
  6006  0009B8  50F4               	movf	prodh,w,c
  6007  0009BA  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6008  0009BC  6EDA               	movwf	fsr2h,c
  6009  0009BE  5022               	movf	process_data_parameterize@parameter_index,w,c
  6010  0009C0  0D0A               	mullw	10
  6011  0009C2  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6012  0009C6  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6013  0009CA  50F3               	movf	prodl,w,c
  6014  0009CC  261E               	addwf	??_process_data_parameterize+1,f,c
  6015  0009CE  50F4               	movf	prodh,w,c
  6016  0009D0  221F               	addwfc	??_process_data_parameterize+2,f,c
  6017  0009D2  5023               	movf	process_data_parameterize@parameter_position,w,c
  6018  0009D4  0D01               	mullw	1
  6019  0009D6  50F3               	movf	prodl,w,c
  6020  0009D8  241E               	addwf	??_process_data_parameterize+1,w,c
  6021  0009DA  6EE1               	movwf	fsr1l,c
  6022  0009DC  50F4               	movf	prodh,w,c
  6023  0009DE  201F               	addwfc	??_process_data_parameterize+2,w,c
  6024  0009E0  6EE2               	movwf	fsr1h,c
  6025  0009E2  CFDF FFE7          	movff	indf2,indf1
  6026                           
  6027                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  6028  0009E6  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6029                           
  6030                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  6031  0009E8  0E09               	movlw	9
  6032  0009EA  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6033  0009EC  D002               	goto	l330
  6034                           
  6035                           ;SlaveComm_PIC18.c: 298: {
  6036                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  6037  0009EE  0E09               	movlw	9
  6038  0009F0  6E23               	movwf	process_data_parameterize@parameter_position,c
  6039  0009F2                     l330:
  6040                           
  6041                           ;SlaveComm_PIC18.c: 302: }
  6042                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  6043  0009F2  5022               	movf	process_data_parameterize@parameter_index,w,c
  6044  0009F4  0D0A               	mullw	10
  6045  0009F6  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6046  0009FA  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6047  0009FE  50F3               	movf	prodl,w,c
  6048  000A00  261D               	addwf	??_process_data_parameterize,f,c
  6049  000A02  50F4               	movf	prodh,w,c
  6050  000A04  221E               	addwfc	??_process_data_parameterize+1,f,c
  6051  000A06  5023               	movf	process_data_parameterize@parameter_position,w,c
  6052  000A08  0D01               	mullw	1
  6053  000A0A  50F3               	movf	prodl,w,c
  6054  000A0C  241D               	addwf	??_process_data_parameterize,w,c
  6055  000A0E  6ED9               	movwf	fsr2l,c
  6056  000A10  50F4               	movf	prodh,w,c
  6057  000A12  201E               	addwfc	??_process_data_parameterize+1,w,c
  6058  000A14  6EDA               	movwf	fsr2h,c
  6059  000A16  0E00               	movlw	0
  6060  000A18  6EDF               	movwf	indf2,c
  6061                           
  6062                           ;SlaveComm_PIC18.c: 307: }
  6063                           
  6064                           ;SlaveComm_PIC18.c: 306: break;
  6065  000A1A  D018               	goto	l326
  6066  000A1C  EE20 F029          	lfsr	2,41
  6067  000A20  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6068  000A22  26D9               	addwf	fsr2l,f,c
  6069  000A24  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6070  000A26  22DA               	addwfc	fsr2h,f,c
  6071  000A28  50DF               	movf	indf2,w,c
  6072  000A2A  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6073  000A2C  501D               	movf	??_process_data_parameterize,w,c
  6074  000A2E  0D01               	mullw	1
  6075  000A30  50F3               	movf	prodl,w,c
  6076  000A32  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6077  000A34  6ED9               	movwf	fsr2l,c
  6078  000A36  50F4               	movf	prodh,w,c
  6079  000A38  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6080  000A3A  6EDA               	movwf	fsr2h,c
  6081  000A3C  50DF               	movf	indf2,w,c
  6082                           
  6083                           ; Switch size 1, requested type "space"
  6084                           ; Number of cases is 2, Range of values is 33 to 59
  6085                           ; switch strategies available:
  6086                           ; Name         Instructions Cycles
  6087                           ; simple_byte            7     4 (average)
  6088                           ;	Chosen strategy is simple_byte
  6089  000A3E  0A21               	xorlw	33	; case 33
  6090  000A40  B4D8               	btfsc	status,2,c
  6091  000A42  D004               	goto	l326
  6092  000A44  0A1A               	xorlw	26	; case 59
  6093  000A46  B4D8               	btfsc	status,2,c
  6094  000A48  D7A1               	goto	l327
  6095  000A4A  D7A9               	goto	l329
  6096  000A4C                     l326:
  6097                           
  6098                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  6099  000A4C  EE20 F029          	lfsr	2,41
  6100  000A50  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6101  000A52  26D9               	addwf	fsr2l,f,c
  6102  000A54  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6103  000A56  22DA               	addwfc	fsr2h,f,c
  6104  000A58  2ADF               	incf	indf2,f,c
  6105  000A5A                     l322:
  6106  000A5A                     l2862:
  6107  000A5A  EE20 F029          	lfsr	2,41
  6108  000A5E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6109  000A60  26D9               	addwf	fsr2l,f,c
  6110  000A62  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6111  000A64  22DA               	addwfc	fsr2h,f,c
  6112  000A66  50DF               	movf	indf2,w,c
  6113  000A68  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6114  000A6A  501D               	movf	??_process_data_parameterize,w,c
  6115  000A6C  0D01               	mullw	1
  6116  000A6E  50F3               	movf	prodl,w,c
  6117  000A70  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6118  000A72  6ED9               	movwf	fsr2l,c
  6119  000A74  50F4               	movf	prodh,w,c
  6120  000A76  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6121  000A78  6EDA               	movwf	fsr2h,c
  6122  000A7A  0E2A               	movlw	42
  6123  000A7C  18DE               	xorwf	postinc2,w,c
  6124  000A7E  B4D8               	btfsc	status,2,c
  6125  000A80  0012               	return	
  6126  000A82  EE20 F029          	lfsr	2,41
  6127  000A86  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6128  000A88  26D9               	addwf	fsr2l,f,c
  6129  000A8A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6130  000A8C  22DA               	addwfc	fsr2h,f,c
  6131  000A8E  0E28               	movlw	40
  6132  000A90  60DF               	cpfslt	indf2,c
  6133  000A92  0012               	return	
  6134  000A94  EE20 F028          	lfsr	2,40
  6135  000A98  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6136  000A9A  26D9               	addwf	fsr2l,f,c
  6137  000A9C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6138  000A9E  22DA               	addwfc	fsr2h,f,c
  6139  000AA0  EE10 F029          	lfsr	1,41
  6140  000AA4  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6141  000AA6  26E1               	addwf	fsr1l,f,c
  6142  000AA8  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6143  000AAA  22E2               	addwfc	fsr1h,f,c
  6144  000AAC  50DE               	movf	postinc2,w,c
  6145  000AAE  18E6               	xorwf	postinc1,w,c
  6146  000AB0  B4D8               	btfsc	status,2,c
  6147  000AB2  0012               	return	
  6148  000AB4  D7B3               	goto	l324
  6149  000AB6                     __end_of_process_data_parameterize:
  6150                           	opt stack 0
  6151                           tblptru	equ	0xFF8
  6152                           tblptrh	equ	0xFF7
  6153                           tblptrl	equ	0xFF6
  6154                           tablat	equ	0xFF5
  6155                           prodh	equ	0xFF4
  6156                           prodl	equ	0xFF3
  6157                           intcon	equ	0xFF2
  6158                           intcon2	equ	0xFF1
  6159                           intcon3	equ	0xFF0
  6160                           postinc0	equ	0xFEE
  6161                           wreg	equ	0xFE8
  6162                           indf1	equ	0xFE7
  6163                           postinc1	equ	0xFE6
  6164                           postdec1	equ	0xFE5
  6165                           plusw1	equ	0xFE3
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           plusw2	equ	0xFDB
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function ___wmul *****************
  6176 ;; Defined at:
  6177 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  multiplier      2   18[COMRAM] unsigned int 
  6180 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  product         2   22[COMRAM] unsigned int 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2   18[COMRAM] unsigned int 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, prodl, prodh
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6192 ;;      Params:         4       0       0       0       0       0       0
  6193 ;;      Locals:         2       0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0
  6195 ;;      Totals:         6       0       0       0       0       0       0
  6196 ;;Total ram usage:        6 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_getSerialData
  6203 ;;		_process_data_parameterize
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text36
  6208  001958                     __ptext36:
  6209                           	opt stack 0
  6210  001958                     ___wmul:
  6211                           	opt stack 27
  6212                           
  6213                           ;incstack = 0
  6214  001958  5013               	movf	___wmul@multiplier,w,c
  6215  00195A  0215               	mulwf	___wmul@multiplicand,c
  6216  00195C  CFF3 F017          	movff	prodl,___wmul@product
  6217  001960  CFF4 F018          	movff	prodh,___wmul@product+1
  6218  001964  5013               	movf	___wmul@multiplier,w,c
  6219  001966  0216               	mulwf	___wmul@multiplicand+1,c
  6220  001968  50F3               	movf	prodl,w,c
  6221  00196A  2618               	addwf	___wmul@product+1,f,c
  6222  00196C  5014               	movf	___wmul@multiplier+1,w,c
  6223  00196E  0215               	mulwf	___wmul@multiplicand,c
  6224  001970  50F3               	movf	prodl,w,c
  6225  001972  2618               	addwf	___wmul@product+1,f,c
  6226  001974  C017  F013         	movff	___wmul@product,?___wmul
  6227  001978  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6228  00197C  0012               	return	
  6229  00197E                     __end_of___wmul:
  6230                           	opt stack 0
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           intcon2	equ	0xFF1
  6239                           intcon3	equ	0xFF0
  6240                           postinc0	equ	0xFEE
  6241                           wreg	equ	0xFE8
  6242                           indf1	equ	0xFE7
  6243                           postinc1	equ	0xFE6
  6244                           postdec1	equ	0xFE5
  6245                           plusw1	equ	0xFE3
  6246                           fsr1h	equ	0xFE2
  6247                           fsr1l	equ	0xFE1
  6248                           indf2	equ	0xFDF
  6249                           postinc2	equ	0xFDE
  6250                           plusw2	equ	0xFDB
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function _SPISlaveInit *****************
  6256 ;; Defined at:
  6257 ;;		line 669 in file "SlaveComm_PIC18.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6271 ;;      Params:         0       0       0       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0
  6274 ;;      Totals:         0       0       0       0       0       0       0
  6275 ;;Total ram usage:        0 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    1
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_communications
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text37
  6286  001742                     __ptext37:
  6287                           	opt stack 0
  6288  001742                     _SPISlaveInit:
  6289                           	opt stack 28
  6290                           
  6291                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  6292                           
  6293                           ;incstack = 0
  6294  001742  9092               	bcf	3986,0,c	;volatile
  6295                           
  6296                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  6297  001744  8292               	bsf	3986,1,c	;volatile
  6298                           
  6299                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  6300  001746  9694               	bcf	3988,3,c	;volatile
  6301                           
  6302                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  6303  001748  9A94               	bcf	3988,5,c	;volatile
  6304                           
  6305                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  6306  00174A  9C94               	bcf	3988,6,c	;volatile
  6307                           
  6308                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  6309  00174C  9E94               	bcf	3988,7,c	;volatile
  6310                           
  6311                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  6312  00174E  010F               	movlb	15	; () banked
  6313  001750  9338               	bcf	56,1,b	;volatile
  6314                           
  6315                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6316  001752  8C8B               	bsf	3979,6,c	;volatile
  6317                           
  6318                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6319  001754  868B               	bsf	3979,3,c	;volatile
  6320                           
  6321                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6322  001756  8A8B               	bsf	3979,5,c	;volatile
  6323                           
  6324                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6325  001758  8E8B               	bsf	3979,7,c	;volatile
  6326                           
  6327                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6328  00175A  9A6C               	bcf	3948,5,c	;volatile
  6329                           
  6330                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6331  00175C  010F               	movlb	15	; () banked
  6332  00175E  9139               	bcf	57,0,b	;volatile
  6333                           
  6334                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6335  001760  010F               	movlb	15	; () banked
  6336  001762  9339               	bcf	57,1,b	;volatile
  6337                           
  6338                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6339  001764  010F               	movlb	15	; () banked
  6340  001766  9539               	bcf	57,2,b	;volatile
  6341                           
  6342                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6343  001768  010F               	movlb	15	; () banked
  6344  00176A  9739               	bcf	57,3,b	;volatile
  6345                           
  6346                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6347  00176C  8093               	bsf	3987,0,c	;volatile
  6348                           
  6349                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6350  00176E  8293               	bsf	3987,1,c	;volatile
  6351                           
  6352                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6353  001770  8493               	bsf	3987,2,c	;volatile
  6354                           
  6355                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6356  001772  9693               	bcf	3987,3,c	;volatile
  6357                           
  6358                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6359  001774  9E6D               	bcf	3949,7,c	;volatile
  6360                           
  6361                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6362  001776  8C6D               	bsf	3949,6,c	;volatile
  6363                           
  6364                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6365  001778  9E6C               	bcf	3948,7,c	;volatile
  6366                           
  6367                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6368  00177A  9C6C               	bcf	3948,6,c	;volatile
  6369                           
  6370                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6371  00177C  9A6C               	bcf	3948,5,c	;volatile
  6372                           
  6373                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6374  00177E  886C               	bsf	3948,4,c	;volatile
  6375                           
  6376                           ; BSR set to: 15
  6377                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6378  001780  506C               	movf	3948,w,c	;volatile
  6379  001782  0BF0               	andlw	-16
  6380  001784  0904               	iorlw	4
  6381  001786  6E6C               	movwf	3948,c	;volatile
  6382                           
  6383                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6384  001788  0E00               	movlw	0
  6385  00178A  6E69               	movwf	3945,c	;volatile
  6386                           
  6387                           ; BSR set to: 15
  6388                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6389  00178C  9869               	bcf	3945,4,c	;volatile
  6390                           
  6391                           ; BSR set to: 15
  6392                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6393  00178E  8A6C               	bsf	3948,5,c	;volatile
  6394  001790  0012               	return	
  6395  001792                     __end_of_SPISlaveInit:
  6396                           	opt stack 0
  6397                           tblptru	equ	0xFF8
  6398                           tblptrh	equ	0xFF7
  6399                           tblptrl	equ	0xFF6
  6400                           tablat	equ	0xFF5
  6401                           prodh	equ	0xFF4
  6402                           prodl	equ	0xFF3
  6403                           intcon	equ	0xFF2
  6404                           intcon2	equ	0xFF1
  6405                           intcon3	equ	0xFF0
  6406                           postinc0	equ	0xFEE
  6407                           wreg	equ	0xFE8
  6408                           indf1	equ	0xFE7
  6409                           postinc1	equ	0xFE6
  6410                           postdec1	equ	0xFE5
  6411                           plusw1	equ	0xFE3
  6412                           fsr1h	equ	0xFE2
  6413                           fsr1l	equ	0xFE1
  6414                           indf2	equ	0xFDF
  6415                           postinc2	equ	0xFDE
  6416                           plusw2	equ	0xFDB
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _Timer0_ISR *****************
  6422 ;; Defined at:
  6423 ;;		line 222 in file "Current_Sense_Main.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6437 ;;      Params:         0       0       0       0       0       0       0
  6438 ;;      Locals:         0       0       0       0       0       0       0
  6439 ;;      Temps:         18       0       0       0       0       0       0
  6440 ;;      Totals:        18       0       0       0       0       0       0
  6441 ;;Total ram usage:       18 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		Interrupt level 2
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	intcode
  6451  000008                     __pintcode:
  6452                           	opt stack 0
  6453  000008                     _Timer0_ISR:
  6454                           	opt stack 23
  6455                           
  6456                           ; BSR set to: 15
  6457                           ;incstack = 0
  6458  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6459  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6460  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6461  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6462  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6463  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6464  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6465  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6466  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6467  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6468  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6469  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6470  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6471  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6472  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6473  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6474  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6475  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6476  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6477                           
  6478                           ;Current_Sense_Main.c: 225: INTCONbits.TMR0IF = 0;
  6479  000052  94F2               	bcf	intcon,2,c	;volatile
  6480                           
  6481                           ;Current_Sense_Main.c: 227: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6482  000054  0EFC               	movlw	252
  6483  000056  6ED7               	movwf	4055,c	;volatile
  6484                           
  6485                           ;Current_Sense_Main.c: 228: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6486  000058  0E18               	movlw	24
  6487  00005A  6ED6               	movwf	4054,c	;volatile
  6488                           
  6489                           ;Current_Sense_Main.c: 230: timerCountHF++;
  6490  00005C  0E01               	movlw	1
  6491  00005E  0100               	movlb	0	; () banked
  6492  000060  27A6               	addwf	_timerCountHF& (0+255),f,b	;volatile
  6493  000062  0E00               	movlw	0
  6494  000064  23A7               	addwfc	(_timerCountHF+1)& (0+255),f,b	;volatile
  6495  000066  23A8               	addwfc	(_timerCountHF+2)& (0+255),f,b	;volatile
  6496  000068  23A9               	addwfc	(_timerCountHF+3)& (0+255),f,b	;volatile
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;Current_Sense_Main.c: 231: timerCountLF++;
  6500  00006A  0E01               	movlw	1
  6501  00006C  263C               	addwf	_timerCountLF,f,c	;volatile
  6502  00006E  0E00               	movlw	0
  6503  000070  223D               	addwfc	_timerCountLF+1,f,c	;volatile
  6504  000072  223E               	addwfc	_timerCountLF+2,f,c	;volatile
  6505  000074  223F               	addwfc	_timerCountLF+3,f,c	;volatile
  6506                           
  6507                           ; BSR set to: 0
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;Current_Sense_Main.c: 233: return;
  6511  000076  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6512  00007A  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6513  00007E  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6514  000082  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6515  000086  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6516  00008A  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6517  00008E  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6518  000092  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6519  000096  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6520  00009A  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6521  00009E  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6522  0000A2  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6523  0000A6  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6524  0000AA  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6525  0000AE  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6526  0000B2  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6527  0000B6  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6528  0000BA  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6529  0000BE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6530  0000C0  0011               	retfie		f
  6531  0000C2                     __end_of_Timer0_ISR:
  6532                           	opt stack 0
  6533                           pclatu	equ	0xFFB
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           intcon2	equ	0xFF1
  6543                           intcon3	equ	0xFF0
  6544                           postinc0	equ	0xFEE
  6545                           fsr0h	equ	0xFEA
  6546                           fsr0l	equ	0xFE9
  6547                           wreg	equ	0xFE8
  6548                           indf1	equ	0xFE7
  6549                           postinc1	equ	0xFE6
  6550                           postdec1	equ	0xFE5
  6551                           plusw1	equ	0xFE3
  6552                           fsr1h	equ	0xFE2
  6553                           fsr1l	equ	0xFE1
  6554                           indf2	equ	0xFDF
  6555                           postinc2	equ	0xFDE
  6556                           plusw2	equ	0xFDB
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           pclatu	equ	0xFFB
  6561                           pclath	equ	0xFFA
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           intcon2	equ	0xFF1
  6570                           intcon3	equ	0xFF0
  6571                           postinc0	equ	0xFEE
  6572                           fsr0h	equ	0xFEA
  6573                           fsr0l	equ	0xFE9
  6574                           wreg	equ	0xFE8
  6575                           indf1	equ	0xFE7
  6576                           postinc1	equ	0xFE6
  6577                           postdec1	equ	0xFE5
  6578                           plusw1	equ	0xFE3
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           indf2	equ	0xFDF
  6582                           postinc2	equ	0xFDE
  6583                           plusw2	equ	0xFDB
  6584                           fsr2h	equ	0xFDA
  6585                           fsr2l	equ	0xFD9
  6586                           status	equ	0xFD8
  6587                           
  6588                           	psect	rparam
  6589  0000                     pclatu	equ	0xFFB
  6590                           pclath	equ	0xFFA
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           intcon	equ	0xFF2
  6598                           intcon2	equ	0xFF1
  6599                           intcon3	equ	0xFF0
  6600                           postinc0	equ	0xFEE
  6601                           fsr0h	equ	0xFEA
  6602                           fsr0l	equ	0xFE9
  6603                           wreg	equ	0xFE8
  6604                           indf1	equ	0xFE7
  6605                           postinc1	equ	0xFE6
  6606                           postdec1	equ	0xFE5
  6607                           plusw1	equ	0xFE3
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617                           	psect	temp
  6618  00004D                     btemp:
  6619                           	opt stack 0
  6620  00004D                     	ds	1
  6621  0000                     int$flags	set	btemp
  6622  0000                     wtemp6	set	btemp+1
  6623                           pclatu	equ	0xFFB
  6624                           pclath	equ	0xFFA
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           intcon2	equ	0xFF1
  6633                           intcon3	equ	0xFF0
  6634                           postinc0	equ	0xFEE
  6635                           fsr0h	equ	0xFEA
  6636                           fsr0l	equ	0xFE9
  6637                           wreg	equ	0xFE8
  6638                           indf1	equ	0xFE7
  6639                           postinc1	equ	0xFE6
  6640                           postdec1	equ	0xFE5
  6641                           plusw1	equ	0xFE3
  6642                           fsr1h	equ	0xFE2
  6643                           fsr1l	equ	0xFE1
  6644                           indf2	equ	0xFDF
  6645                           postinc2	equ	0xFDE
  6646                           plusw2	equ	0xFDB
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        23
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     66     144
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), com_command_setPower@temp(COMRAM[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), com_command_setPower@temp(COMRAM[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(COMRAM[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), 
		 -> com_command_setPower@temp(COMRAM[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->_getSerialData
    _getSerialData->___wmul
    _init->_initMCPFout
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _process_data->_process_data_parameters

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  100008
                                             61 BANK0      5     5      0
                     _communications
                          _delayMS10
                               _init
                        _initMCPFout
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      4     4      0    2252
                                             50 COMRAM     4     4      0
                      _getSerialData
 ---------------------------------------------------------------------------------
 (2) _getSerialData                                       26    24      2    2240
                                             24 COMRAM    26    24      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     136
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCPFout                                         19    19      0     136
                                             18 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     428
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   96883
                                             59 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   45863
                                              0 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15906
                                             44 COMRAM    14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     598
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49973
                                              4 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47206
                                             58 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15996
                                             44 COMRAM    14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2200
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    2381
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1492
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
     _initOSC
   _initMCPFout
   _initTimer
   _powerPulseCheck
     _getSerialData
       ___wmul
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     42      90       4       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106       9        0.0%
DATA                 0      0     106      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Mar 26 14:33:06 2018

                                       _SPISlaveInit 1742                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l120 0FDA                                                  l131 1996  
                                                l115 0F52                                                  l300 1276  
                                                l301 1284                                                  l117 0F86  
                                                l310 104E                                                  l302 1290  
                                                l320 095A                                                  l400 0C2A  
                                                l312 10A8                                                  l401 0C5E  
                                                l313 10BA                                                  l129 199A  
                                                l322 0A5A                                                  l330 09F2  
                                                l154 10FC                                                  l411 0D3A  
                                                l403 0C90                                                  l171 18C4  
                                                l155 116C                                                  l324 0A1C  
                                                l308 100A                                                  l420 19DC  
                                                l172 18B2                                                  l164 0AD2  
                                                l157 113E                                                  l326 0A4C  
                                                l166 0AE8                                                  l158 111E  
                                                l327 098C                                                  l415 192A  
                                                l416 192E                                                  l329 099E  
                                                l409 0D02                                                  l361 0904  
                                                l353 0844                                                  l337 0684  
                                                l281 11D8                                                  l346 07FA  
                                                l194 152A                                                  l363 0932  
                                                l355 0874                                                  l339 0714  
                                                l291 121C                                                  l283 11EC  
                                                l195 1566                                                  l348 07B2  
                                                l461 16FC                                                  l621 0F1C  
                                                l357 08A4                                                  l285 11B0  
                                                l462 1710                                                  l615 0E7A  
                                                l383 14BC                                                  l359 08D4  
                                                l279 11A0                                                  l384 147E  
                                                l392 13EE                                                  l297 129A  
                                                l289 1206                                                  l618 0ED8  
                                                l298 1268                                                  l619 0E84  
                                                l820 1414                                                  l389 138E  
                                                l830 15EC                                                  l823 1454  
                                                l399 0C94                                                  l824 1462  
                                                l833 1620                                                  l834 162E  
                                                l819 1420                                                  l829 15F8  
                                                l872 0D54                                                  l793 19FA  
                                                l874 0DAC                                                  l875 0E16  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0062                                         ?_initMCPFout 0001  
                                               l3220 111E                                                 l3242 0F3C  
                                               l3260 0F86                                                 l3254 0F76  
                                               l3276 0FC4                                                 l2862 0A5A  
                                               l2972 0AC2                                                 l2986 0B00  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2000 0CCC                                                 u2120 1902  
                                               u2210 0958                                                 u2130 1904  
                                               u2500 0B00                                                 u2451 150A  
                                               _IPR1 000F9F                                                 u1910 1424  
                                               u2470 1566                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               u1940 15FC                                                 u1870 14B2  
                                               u2750 0F76                                                 u2807 18B8  
                                               u1880 14E8                                                 u2817 122C  
                                               u2770 0FB0                                                 u1877 14A8  
                                               u1887 14DE                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0E3A                                                 _main 0F2E  
                                               _init 1A5C                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C2                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 009C                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 1172  
                                       main@inx_1088 00A0                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 062A                                                STR_11 0653  
                                              STR_12 0653                                                STR_20 061E  
                                              STR_13 0657                                                STR_21 063E  
                                              STR_14 062A                                                STR_22 060D  
                                              STR_23 064F                                                STR_15 065B  
                                              STR_40 064B                                                STR_32 0643  
                                              STR_16 0639                                                STR_17 062A  
                                              STR_26 0657                                                STR_18 0624  
                                              STR_19 0617                                                STR_27 0624  
                                              STR_35 0647                                                STR_28 0657  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 1474  
                                    __end_of___llmod 1640                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                       main@initDone 009D                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 1792  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0023                                   ??_command_builder3 0027  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 0062  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1A32                                     ?_powerPulseCheck 0001  
                                    __end_of_isdigit 1A02                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0D44  
                                              pclath 000FFA                                                tablat 000FF5  
                                              plusw1 000FE3                                                plusw2 000FDB  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0D44                                       __CFG_HFOFST$ON 000000  
                                  getSerialData@data 002F                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 002D  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001D  
                                    __initialization 156A                                         __end_of_atol 0F2E  
                                       __end_of_main 0FFE                                         __end_of_init 1A6E  
                             __end_of_communications 1222                               _com_command_setVersion 1932  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 190A  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 003C                                               ??_init 0026  
                                      _SPI_send_data 19C4                                        __activetblptr 000002  
                            _process_data_parameters 0660                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 16EC  
                                             ___wmul 1958                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 001B  
                                          ??___llmod 001B                                               _initIO 19A2  
                                             clear_0 15AE                                               clear_1 15BA  
                                             clear_2 15C6                                       ?_SPI_send_data 0001  
                         ?_com_command_setEnergyUsed 002D                                            ??_initOSC 0013  
                          _process_data_parameterize 0936                                         __pdataCOMRAM 004A  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 002F                                               ultoa@v 0028  
                                       initMCPFout@i 0024                                            ??_strcmp2 0017  
                                   __end_of_strmatch 190A                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 15CC  
                               __size_of_initMCPFout 007A                      powerPulseCheck@timerCountHFLast 00EC  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1A48                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0E3A  
                          ??_process_data_parameters 003B                   powerPulseCheck@meterEnergyUsedPart 00A2  
                       communications@receive_buffer 0100                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 14F0                           _command_builder_add_string 1474  
                                            ??_ultoa 0028                                           __pbssBANK0 00A2  
                                         __pbssBANK1 0100                                       ??_receive_data 0018  
                                    __CFG_PLLCFG$OFF 000000                                         strcmp2@match 001A  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                    _pulseFoutPassThru 197E  
                              __end_of_getSerialData 0C18                                              ?___lmul 0013  
                                            ?___wmul 0013                                   __CFG_CCP3MX$PORTB5 000000  
                                 ?_pulseFoutPassThru 0001                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 003B           communications@end_of_transmission_received 0045  
                                     ___lmul@product 001B                          __end_of_resetCommunications 12C4  
                                    _meterEnergyUsed 00AA                                  ??_pulseFoutPassThru 0013  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 1828                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1A32                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 1696                                    __end_of_delayMS10 18DA  
                    __end_of_process_data_parameters 0936                             __end_of_SPI_receive_data 1932  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
                          __end_of_pulseFoutPassThru 19A2      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 13F2                                      __size_of___wmul 0026  
                                            ___llmod 15DA                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0022  
                                            __pcinit 156A                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0F2E  
                                            __ptext1 197E                                              __ptext2 10BE  
                                            __ptext3 0AB6                                              __ptext4 1A02  
                                            __ptext5 1A5C                                              __ptext6 1A1A  
                                            __ptext7 14F0                                              __ptext8 1792  
                                            __ptext9 19A2                                           _meterWatts 00AE  
                                          _T0CONbits 000FD5                                              _initOSC 1A1A  
                                  __end_of_initTimer 1A1A                                              _isdigit 19E4  
                                __size_of_Timer0_ISR 00BA                                              main@inx 009E  
                                            _strcmp2 0C18                                 end_of_initialization 15CC  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 13F2  
                          powerPulseCheck@firstPulse 004C                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1958                             __size_of_powerPulseCheck 00B4  
                                   ??_communications 003C                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              receive_data@my_status 0042                                 __end_of_receive_data 10BE  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 0043                          ??_com_command_setEnergyUsed 002F  
                                      ?_process_data 0064                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                                getSerialData@dataIn 001F                     powerPulseCheck@timerCountHFCheck 004A  
                         process_data@receive_buffer 0064                          __end_of_initInterruptsClear 17DE  
                  __end_of_process_data_parameterize 0AB6                           __size_of_pulseFoutPassThru 0024  
                         powerPulseCheck@currentData 0035                                 _com_command_setPower 17DE  
                communications@receive_current_state 0044                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1742                                       __end_of___wmul 197E  
                                      __pidataCOMRAM 1A6E                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 19C4                                       ??_process_data 003C  
                        ?_command_builder_add_string 0017                                  start_initialization 156A  
                                      ??_initMCPFout 0013                         resetCommunications@commState 0040  
                                   _command_builder1 1640                                     _command_builder3 12C4  
                          _com_command_setEnergyUsed 1828                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 002D                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    ??_powerPulseCheck 0033  
                                        __pdataBANK0 00DC                                             ??_initIO 0013  
                         ??_send_end_of_transmission 0025                           ??_command_builder_add_char 0016  
                                        __pbssCOMRAM 003C                                        __pcstackBANK0 0060  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00C2  
                                       _isdigit$2298 0014                            initMCPFout@initSPICommand 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 18A8                                  __end_of_initMCPFout 156A  
                      com_command_setEnergyUsed@temp 002F                                   ??_SPI_receive_data 0015  
                                       delayMS10@inx 0016                                command_builder1@data1 0021  
                        command_builder1@send_buffer 001F                             ?_process_data_parameters 0060  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 0021                                command_builder3@data2 0023  
                              command_builder3@data3 0025                                             ?___lldiv 0013  
                                           ?___llmod 0013                                __end_of_SPI_send_data 19E4  
                                           ?_initOSC 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 0060                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                    send_data@send_end 0019  
                                          _initTimer 1A02                                             ?_strcmp2 0013  
                             __size_of_getSerialData 0162                         __size_of_resetCommunications 00A2  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                             pulseFoutPassThru@runonce 0049  
                                       _receive_data 0FFE                                       ___wmul@product 0017  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 18A8                                            _send_data 1362  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 0060  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                     getSerialData@i 0031                                           ?_initTimer 0001  
                         powerPulseCheck@voltageData 0033                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1792                                            copy_data0 157E  
                                        _initMCPFout 14F0             process_data@end_of_transmission_received 009A  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001F                                    __CFG_P2BMX$PORTB5 000000  
                                      _getSerialData 0AB6                   __size_of_com_command_setEnergyUsed 004A  
                   __end_of_send_end_of_transmission 1A48                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 16EC  
                           __end_of_command_builder1 1696                             __end_of_command_builder3 1362  
                                         _ANSELAbits 000F38                                     initMCPFout@F6870 00DC  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                             __ptext10 18A8  
                                           __ptext11 1172                                             __ptext20 0660  
                                           __ptext12 1362                                             __ptext21 18DA  
                                           __ptext13 19C4                                             __ptext30 1474  
                                           __ptext22 0C18                                             __ptext14 1222  
                                           __ptext31 1696                                             __ptext23 1A32  
                                           __ptext15 1932                                             __ptext32 0E3A  
                                           __ptext24 1640                                             __ptext16 17DE  
                                           __ptext33 19E4                                             __ptext25 1828  
                                           __ptext17 0FFE                                             __ptext34 16EC  
                                           __ptext26 0D44                                             __ptext18 190A  
                                           __ptext35 0936                                             __ptext27 15DA  
                                           __ptext19 1872                                             __ptext36 1958  
                                           __ptext28 13F2                                             __ptext37 1742  
                                           __ptext29 12C4                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                      _powerPulseCheck 10BE  
                                      __size_of_atol 00F4                                        __size_of_main 00D0  
                                      strmatch@match 0024                                        __size_of_init 0012  
                        powerPulseCheck@mcpHFoutLast 0048                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                                     ?_getSerialData 0019                          powerPulseCheck@mcpLFoutLast 0047  
                                           int$flags 004D                                             atol@sign 0027  
                  __end_of_com_command_setEnergyUsed 1872                              __size_of_communications 00B0  
                                           _strmatch 18DA                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 0066                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0036  
                                           intlevel2 0000                               process_data@parameters 0068  
                                       _timerCountHF 00A6                                         _timerCountLF 003C  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 009B  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 1222                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 0020                                             ultoa@val 0022  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                   ___lldiv@quotient 001B                                         _process_data 1872  
                                  _SPI_transmit_wait 0046                                __size_of_SPISlaveInit 0050  
                          communications@send_buffer 00B2                     __size_of_process_data_parameters 02D6  
                                  __CFG_T3CMX$PORTC0 000000                              __end_of_powerPulseCheck 1172  
                               ?_resetCommunications 0060                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0023                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0013  
                                    ??_getSerialData 001B  
