

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 30 23:58:18 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     _ANSELAbits	set	3896
    36  0000                     _ANSELBbits	set	3897
    37  0000                     _LATBbits	set	3978
    38  0000                     _LATCbits	set	3979
    39  0000                     _PORTBbits	set	3969
    40  0000                     _SSP2BUF	set	3951
    41  0000                     _SSP2CON1bits	set	3948
    42  0000                     _SSP2CON3	set	3945
    43  0000                     _SSP2CON3bits	set	3945
    44  0000                     _SSP2STATbits	set	3949
    45  0000                     _TRISAbits	set	3986
    46  0000                     _TRISBbits	set	3987
    47  0000                     _TRISCbits	set	3988
    48                           
    49                           	psect	smallconst
    50  000600                     __psmallconst:
    51                           	opt stack 0
    52  000600  00                 	db	0
    53  000601                     __stringdata:
    54                           	opt stack 0
    55  000601                     STR_5:
    56                           
    57                           ; BSR set to: 15
    58  000601  43                 	db	67	;'C'
    59  000602  75                 	db	117	;'u'
    60  000603  72                 	db	114	;'r'
    61  000604  72                 	db	114	;'r'
    62  000605  65                 	db	101	;'e'
    63  000606  6E                 	db	110	;'n'
    64  000607  74                 	db	116	;'t'
    65  000608  00                 	db	0
    66  000609                     STR_3:
    67                           
    68                           ; BSR set to: 15
    69  000609  50                 	db	80	;'P'
    70  00060A  6F                 	db	111	;'o'
    71  00060B  77                 	db	119	;'w'
    72  00060C  65                 	db	101	;'e'
    73  00060D  72                 	db	114	;'r'
    74  00060E  00                 	db	0
    75  00060F                     STR_4:
    76                           
    77                           ; BSR set to: 15
    78  00060F  56                 	db	86	;'V'
    79  000610  6F                 	db	111	;'o'
    80  000611  6C                 	db	108	;'l'
    81  000612  74                 	db	116	;'t'
    82  000613  73                 	db	115	;'s'
    83  000614  00                 	db	0
    84  000615                     STR_11:
    85                           
    86                           ; BSR set to: 15
    87  000615  4C                 	db	76	;'L'
    88  000616  45                 	db	69	;'E'
    89  000617  44                 	db	68	;'D'
    90  000618  42                 	db	66	;'B'
    91  000619  00                 	db	0
    92  00061A                     STR_10:
    93                           
    94                           ; BSR set to: 15
    95  00061A  44                 	db	68	;'D'
    96  00061B  61                 	db	97	;'a'
    97  00061C  74                 	db	116	;'t'
    98  00061D  61                 	db	97	;'a'
    99  00061E  00                 	db	0
   100  00061F                     STR_6:
   101                           
   102                           ; BSR set to: 15
   103  00061F  52                 	db	82	;'R'
   104  000620  65                 	db	101	;'e'
   105  000621  61                 	db	97	;'a'
   106  000622  64                 	db	100	;'d'
   107  000623  00                 	db	0
   108  000624                     STR_20:
   109                           
   110                           ; BSR set to: 15
   111  000624  43                 	db	67	;'C'
   112  000625  6F                 	db	111	;'o'
   113  000626  6E                 	db	110	;'n'
   114  000627  66                 	db	102	;'f'
   115  000628  00                 	db	0
   116  000629                     STR_1:
   117                           
   118                           ; BSR set to: 15
   119  000629  45                 	db	69	;'E'
   120  00062A  4E                 	db	78	;'N'
   121  00062B  44                 	db	68	;'D'
   122  00062C  00                 	db	0
   123  00062D                     STR_15:
   124                           
   125                           ; BSR set to: 15
   126  00062D  4F                 	db	79	;'O'
   127  00062E  66                 	db	102	;'f'
   128  00062F  66                 	db	102	;'f'
   129  000630  00                 	db	0
   130  000631                     STR_2:
   131                           
   132                           ; BSR set to: 15
   133  000631  53                 	db	83	;'S'
   134  000632  65                 	db	101	;'e'
   135  000633  74                 	db	116	;'t'
   136  000634  00                 	db	0
   137  000635                     STR_12:
   138                           
   139                           ; BSR set to: 15
   140  000635  4F                 	db	79	;'O'
   141  000636  6E                 	db	110	;'n'
   142  000637  00                 	db	0
   143  000638                     __end_of__stringdata:
   144                           	opt stack 0
   145                           
   146                           ; #config settings
   147  000638  00                 	db	0	; dummy byte at the end
   148  0000                     
   149                           	psect	cinit
   150  001156                     __pcinit:
   151                           	opt stack 0
   152  001156                     start_initialization:
   153                           	opt stack 0
   154  001156                     __initialization:
   155                           	opt stack 0
   156                           
   157                           ; Clear objects allocated to BANK0 (84 bytes)
   158  001156  EE00  F060         	lfsr	0,__pbssBANK0
   159  00115A  0E54               	movlw	84
   160  00115C                     clear_0:
   161  00115C  6AEE               	clrf	postinc0,c
   162  00115E  06E8               	decf	wreg,f,c
   163  001160  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to COMRAM (5 bytes)
   166  001162  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   167  001164  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   168  001166  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   169  001168  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   170  00116A  6A57               	clrf	__pbssCOMRAM& (0+255),c
   171  00116C                     end_of_initialization:
   172                           	opt stack 0
   173  00116C                     __end_of__initialization:
   174                           	opt stack 0
   175  00116C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176  00116E  6EF8               	movwf	tblptru,c
   177  001170  0100               	movlb	0
   178  001172  EFBB  F008         	goto	_main	;jump to C main() function
   179                           tblptru	equ	0xFF8
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	bssCOMRAM
   184  000057                     __pbssCOMRAM:
   185                           	opt stack 0
   186  000057                     _SPI_transmit_wait:
   187                           	opt stack 0
   188  000057                     	ds	1
   189  000058                     communications@end_of_transmission_received:
   190                           	opt stack 0
   191  000058                     	ds	1
   192  000059                     communications@last_state_active:
   193                           	opt stack 0
   194  000059                     	ds	1
   195  00005A                     communications@receive_current_state:
   196                           	opt stack 0
   197  00005A                     	ds	1
   198  00005B                     receive_data@my_status:
   199                           	opt stack 0
   200  00005B                     	ds	1
   201                           tblptru	equ	0xFF8
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	bssBANK0
   206  000060                     __pbssBANK0:
   207                           	opt stack 0
   208  000060                     communications@receive_buffer:
   209                           	opt stack 0
   210  000060                     	ds	42
   211  00008A                     communications@send_buffer:
   212                           	opt stack 0
   213  00008A                     	ds	42
   214                           tblptru	equ	0xFF8
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	opt stack 0
   221  000001                     ?_strcmp2:
   222                           	opt stack 0
   223  000001                     ?___wmul:
   224                           	opt stack 0
   225  000001                     SPI_send_data@data:
   226                           	opt stack 0
   227  000001                     delayMS@a:
   228                           	opt stack 0
   229  000001                     command_builder_add_char@send_buffer:
   230                           	opt stack 0
   231  000001                     strcmp2@a:
   232                           	opt stack 0
   233  000001                     SPI_receive_data@data:
   234                           	opt stack 0
   235  000001                     ___wmul@multiplier:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000001                     	ds	1
   240  000002                     SPI_send_data@sendGood:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x1
   244  000002                     	ds	1
   245  000003                     command_builder_add_char@data:
   246                           	opt stack 0
   247  000003                     SPI_receive_data@recvGood:
   248                           	opt stack 0
   249  000003                     delayMS@i:
   250                           	opt stack 0
   251  000003                     send_data@send_buffer:
   252                           	opt stack 0
   253  000003                     strcmp2@b:
   254                           	opt stack 0
   255  000003                     ___wmul@multiplicand:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259  000003                     	ds	1
   260  000004                     ??_command_builder_add_char:
   261  000004                     receive_data@receive_buffer:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     ??_send_data:
   267  000005                     ??_strcmp2:
   268  000005                     delayMS@j:
   269                           	opt stack 0
   270  000005                     command_builder_add_string@send_buffer:
   271                           	opt stack 0
   272  000005                     ___wmul@product:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276  000005                     	ds	1
   277  000006                     ??_receive_data:
   278                           
   279                           ; 0 bytes @ 0x5
   280  000006                     	ds	1
   281  000007                     receive_data@data:
   282                           	opt stack 0
   283  000007                     send_data@send_end:
   284                           	opt stack 0
   285  000007                     init@i:
   286                           	opt stack 0
   287  000007                     process_data_parameterize@parameters:
   288                           	opt stack 0
   289  000007                     command_builder_add_string@data_string:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x6
   293  000007                     	ds	1
   294  000008                     strcmp2@match:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x7
   298  000008                     	ds	1
   299  000009                     ??_command_builder_add_string:
   300  000009                     process_data_parameterize@buffer_to_parameterize:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x8
   304  000009                     	ds	1
   305  00000A                     strcmp2@inx:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x9
   309  00000A                     	ds	1
   310  00000B                     ??_process_data_parameterize:
   311  00000B                     command_builder_add_string@inx:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xA
   315  00000B                     	ds	1
   316  00000C                     strmatch@a:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xB
   320  00000C                     	ds	1
   321  00000D                     command_builder1@send_buffer:
   322                           	opt stack 0
   323  00000D                     command_builder2@send_buffer:
   324                           	opt stack 0
   325  00000D                     command_builder3@send_buffer:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0xC
   329  00000D                     	ds	1
   330  00000E                     process_data_parameterize@inx:
   331                           	opt stack 0
   332  00000E                     strmatch@b:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xD
   336  00000E                     	ds	1
   337  00000F                     command_builder1@data1:
   338                           	opt stack 0
   339  00000F                     command_builder2@data1:
   340                           	opt stack 0
   341  00000F                     command_builder3@data1:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0xE
   345  00000F                     	ds	1
   346  000010                     process_data_parameterize@parameter_index:
   347                           	opt stack 0
   348  000010                     strmatch@result:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0xF
   352  000010                     	ds	1
   353  000011                     process_data_parameterize@parameter_position:
   354                           	opt stack 0
   355  000011                     command_builder2@data2:
   356                           	opt stack 0
   357  000011                     command_builder3@data2:
   358                           	opt stack 0
   359  000011                     send_end_of_transmission@send_buffer:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x10
   363  000011                     	ds	1
   364  000012                     strmatch@match:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x11
   368  000012                     	ds	1
   369  000013                     command_builder3@data3:
   370                           	opt stack 0
   371  000013                     com_command_testLED@send_buffer:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x12
   375  000013                     	ds	2
   376  000015                     resetCommunications@send_buffer:
   377                           	opt stack 0
   378  000015                     process_data_parameters@parameters:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x14
   382  000015                     	ds	2
   383  000017                     process_data_parameters@send_buffer:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x16
   387  000017                     	ds	2
   388  000019                     ??_process_data_parameters:
   389                           
   390                           ; 0 bytes @ 0x18
   391  000019                     	ds	1
   392  00001A                     process_data_parameters@end_of_transmission_received:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x19
   396  00001A                     	ds	1
   397  00001B                     process_data@receive_buffer:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x1A
   401  00001B                     	ds	2
   402  00001D                     process_data@send_buffer:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x1C
   406  00001D                     	ds	2
   407  00001F                     process_data@parameters:
   408                           	opt stack 0
   409                           
   410                           ; 50 bytes @ 0x1E
   411  00001F                     	ds	50
   412  000051                     process_data@end_of_transmission_received:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x50
   416  000051                     	ds	1
   417  000052                     ??_communications:
   418                           
   419                           ; 0 bytes @ 0x51
   420  000052                     	ds	1
   421  000053                     communications@no_more_to_send:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x52
   425  000053                     	ds	1
   426  000054                     communications@firstTime:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x53
   430  000054                     	ds	1
   431  000055                     main@togglePulse:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x54
   435  000055                     	ds	2
   436                           tblptru	equ	0xFF8
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 157 in file "Current_Sense_Main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  togglePulse     2   84[COMRAM] unsigned int 
   450 ;; Return value:  Size  Location     Type
   451 ;;		None               void
   452 ;; Registers used:
   453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         0       0       0       0       0       0       0
   460 ;;      Locals:         2       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0
   462 ;;      Totals:         2       0       0       0       0       0       0
   463 ;;Total ram usage:        2 bytes
   464 ;; Hardware stack levels required when called:    7
   465 ;; This function calls:
   466 ;;		_SPISlaveInit
   467 ;;		_communications
   468 ;;		_init
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text0
   475  001176                     __ptext0:
   476                           	opt stack 0
   477  001176                     _main:
   478                           	opt stack 24
   479                           
   480                           ;Current_Sense_Main.c: 158: unsigned int togglePulse = 0;
   481                           
   482                           ; BSR set to: 15
   483                           ;incstack = 0
   484  001176  0E00               	movlw	0
   485  001178  6E56               	movwf	main@togglePulse+1,c
   486  00117A  0E00               	movlw	0
   487  00117C  6E55               	movwf	main@togglePulse,c
   488                           
   489                           ;Current_Sense_Main.c: 159: init();
   490  00117E  ECF6  F007         	call	_init	;wreg free
   491                           
   492                           ;Current_Sense_Main.c: 161: SPISlaveInit( );
   493  001182  ECCD  F007         	call	_SPISlaveInit	;wreg free
   494                           
   495                           ;Current_Sense_Main.c: 185: communications( 1 );
   496  001186  0E01               	movlw	1
   497  001188  EC93  F005         	call	_communications
   498  00118C                     l1601:
   499                           
   500                           ;Current_Sense_Main.c: 189: communications( 0 );
   501  00118C  0E00               	movlw	0
   502  00118E  EC93  F005         	call	_communications
   503  001192  D7FC               	goto	l1601
   504  001194                     __end_of_main:
   505                           	opt stack 0
   506                           tblptru	equ	0xFF8
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           
   510 ;; *************** function _init *****************
   511 ;; Defined at:
   512 ;;		line 213 in file "Current_Sense_Main.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  i               2    6[COMRAM] unsigned int 
   517 ;; Return value:  Size  Location     Type
   518 ;;		None               void
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   526 ;;      Params:         0       0       0       0       0       0       0
   527 ;;      Locals:         2       0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0
   529 ;;      Totals:         2       0       0       0       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    1
   533 ;; This function calls:
   534 ;;		_delayMS
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541  000FEC                     __ptext1:
   542                           	opt stack 0
   543  000FEC                     _init:
   544                           	opt stack 29
   545                           
   546                           ;Current_Sense_Main.c: 214: TRISAbits.TRISA0 = 0;
   547                           
   548                           ;incstack = 0
   549  000FEC  9092               	bcf	3986,0,c	;volatile
   550                           
   551                           ;Current_Sense_Main.c: 215: TRISAbits.TRISA1 = 1;
   552  000FEE  8292               	bsf	3986,1,c	;volatile
   553                           
   554                           ;Current_Sense_Main.c: 216: TRISBbits.RB4 = 0;
   555  000FF0  9893               	bcf	3987,4,c	;volatile
   556                           
   557                           ;Current_Sense_Main.c: 217: TRISCbits.TRISC3 = 0;
   558  000FF2  9694               	bcf	3988,3,c	;volatile
   559                           
   560                           ;Current_Sense_Main.c: 218: TRISCbits.TRISC5 = 0;
   561  000FF4  9A94               	bcf	3988,5,c	;volatile
   562                           
   563                           ;Current_Sense_Main.c: 219: TRISCbits.TRISC6 = 0;
   564  000FF6  9C94               	bcf	3988,6,c	;volatile
   565                           
   566                           ;Current_Sense_Main.c: 220: TRISCbits.TRISC7 = 0;
   567  000FF8  9E94               	bcf	3988,7,c	;volatile
   568                           
   569                           ;Current_Sense_Main.c: 221: ANSELAbits.ANSA1 = 0b0;
   570  000FFA  010F               	movlb	15	; () banked
   571  000FFC  9338               	bcf	56,1,b	;volatile
   572                           
   573                           ;Current_Sense_Main.c: 223: LATCbits.LATC6 = 1;
   574  000FFE  8C8B               	bsf	3979,6,c	;volatile
   575                           
   576                           ;Current_Sense_Main.c: 224: LATCbits.LATC3 = 1;
   577  001000  868B               	bsf	3979,3,c	;volatile
   578                           
   579                           ;Current_Sense_Main.c: 225: LATCbits.LATC5 = 1;
   580  001002  8A8B               	bsf	3979,5,c	;volatile
   581                           
   582                           ;Current_Sense_Main.c: 226: LATCbits.LATC7 = 1;
   583  001004  8E8B               	bsf	3979,7,c	;volatile
   584                           
   585                           ; BSR set to: 15
   586                           ;Current_Sense_Main.c: 230: unsigned int i;
   587                           ;Current_Sense_Main.c: 231: for (i = 0; i < 5; i++) {
   588  001006  0E00               	movlw	0
   589  001008  6E08               	movwf	init@i+1,c
   590  00100A  0E00               	movlw	0
   591  00100C  6E07               	movwf	init@i,c
   592  00100E                     
   593                           ; BSR set to: 15
   594  00100E  0E05               	movlw	5
   595  001010  5C07               	subwf	init@i,w,c
   596  001012  0E00               	movlw	0
   597  001014  5808               	subwfb	init@i+1,w,c
   598  001016  B0D8               	btfsc	status,0,c
   599  001018  0012               	return	
   600                           
   601                           ;Current_Sense_Main.c: 232: LATBbits.LATB4 = 1;
   602                           
   603                           ; BSR set to: 15
   604  00101A  888A               	bsf	3978,4,c	;volatile
   605                           
   606                           ;Current_Sense_Main.c: 233: delayMS(25);
   607  00101C  0E00               	movlw	0
   608  00101E  6E02               	movwf	delayMS@a+1,c
   609  001020  0E19               	movlw	25
   610  001022  6E01               	movwf	delayMS@a,c
   611  001024  EC3A  F008         	call	_delayMS	;wreg free
   612                           
   613                           ;Current_Sense_Main.c: 234: LATBbits.LATB4 = 0;
   614  001028  988A               	bcf	3978,4,c	;volatile
   615                           
   616                           ;Current_Sense_Main.c: 235: delayMS(25);
   617  00102A  0E00               	movlw	0
   618  00102C  6E02               	movwf	delayMS@a+1,c
   619  00102E  0E19               	movlw	25
   620  001030  6E01               	movwf	delayMS@a,c
   621  001032  EC3A  F008         	call	_delayMS	;wreg free
   622  001036  4A07               	infsnz	init@i,f,c
   623  001038  2A08               	incf	init@i+1,f,c
   624  00103A  D7E9               	goto	L1
   625  00103C                     __end_of_init:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           status	equ	0xFD8
   631                           
   632 ;; *************** function _delayMS *****************
   633 ;; Defined at:
   634 ;;		line 240 in file "Current_Sense_Main.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  a               2    0[COMRAM] unsigned int 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  j               2    4[COMRAM] unsigned int 
   639 ;;  i               2    2[COMRAM] unsigned int 
   640 ;; Return value:  Size  Location     Type
   641 ;;		None               void
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         2       0       0       0       0       0       0
   650 ;;      Locals:         4       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0
   652 ;;      Totals:         6       0       0       0       0       0       0
   653 ;;Total ram usage:        6 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_init
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text2
   663  001074                     __ptext2:
   664                           	opt stack 0
   665  001074                     _delayMS:
   666                           	opt stack 29
   667                           
   668                           ;Current_Sense_Main.c: 241: unsigned int i, j;
   669                           ;Current_Sense_Main.c: 243: for (i = 0; i < a; i++)
   670                           
   671                           ;incstack = 0
   672  001074  0E00               	movlw	0
   673  001076  6E04               	movwf	delayMS@i+1,c
   674  001078  0E00               	movlw	0
   675  00107A  6E03               	movwf	delayMS@i,c
   676  00107C  D00F               	goto	l1087
   677  00107E                     l1075:
   678                           
   679                           ;Current_Sense_Main.c: 244: for (j = 0; j < 100; j++);
   680  00107E  0E00               	movlw	0
   681  001080  6E06               	movwf	delayMS@j+1,c
   682  001082  0E00               	movlw	0
   683  001084  6E05               	movwf	delayMS@j,c
   684  001086  0E64               	movlw	100
   685  001088  5C05               	subwf	delayMS@j,w,c
   686  00108A  0E00               	movlw	0
   687  00108C  5806               	subwfb	delayMS@j+1,w,c
   688  00108E  B0D8               	btfsc	status,0,c
   689  001090  D003               	goto	l1085
   690  001092  4A05               	infsnz	delayMS@j,f,c
   691  001094  2A06               	incf	delayMS@j+1,f,c
   692  001096  D7F7               	goto	L2
   693  001098                     l1085:
   694  001098  4A03               	infsnz	delayMS@i,f,c
   695  00109A  2A04               	incf	delayMS@i+1,f,c
   696  00109C                     l1087:
   697  00109C  5001               	movf	delayMS@a,w,c
   698  00109E  5C03               	subwf	delayMS@i,w,c
   699  0010A0  5002               	movf	delayMS@a+1,w,c
   700  0010A2  5804               	subwfb	delayMS@i+1,w,c
   701  0010A4  B0D8               	btfsc	status,0,c
   702  0010A6  0012               	return	
   703  0010A8  D7EA               	goto	l1075
   704  0010AA                     __end_of_delayMS:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           status	equ	0xFD8
   710                           
   711 ;; *************** function _communications *****************
   712 ;; Defined at:
   713 ;;		line 96 in file "SlaveComm_PIC18.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  firstTime       1    wreg     unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  firstTime       1   83[COMRAM] unsigned char 
   718 ;;  no_more_to_s    1   82[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;		None               void
   721 ;; Registers used:
   722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   728 ;;      Params:         0       0       0       0       0       0       0
   729 ;;      Locals:         2       0       0       0       0       0       0
   730 ;;      Temps:          1       0       0       0       0       0       0
   731 ;;      Totals:         3       0       0       0       0       0       0
   732 ;;Total ram usage:        3 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    6
   735 ;; This function calls:
   736 ;;		_process_data
   737 ;;		_receive_data
   738 ;;		_resetCommunications
   739 ;;		_send_data
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  000B26                     __ptext3:
   747                           	opt stack 0
   748  000B26                     _communications:
   749                           	opt stack 24
   750                           
   751                           ;incstack = 0
   752                           ;communications@firstTime stored from wreg
   753  000B26  6E54               	movwf	communications@firstTime,c
   754                           
   755                           ;SlaveComm_PIC18.c: 98: static struct buffer receive_buffer;
   756                           ;SlaveComm_PIC18.c: 99: static struct buffer send_buffer;
   757                           ;SlaveComm_PIC18.c: 101: static bool end_of_transmission_received = 0;
   758                           ;SlaveComm_PIC18.c: 102: bool no_more_to_send;
   759                           ;SlaveComm_PIC18.c: 104: static enum receive_status receive_current_state;
   760                           ;SlaveComm_PIC18.c: 108: if( firstTime == 1 )
   761  000B28  0454               	decf	communications@firstTime,w,c
   762  000B2A  A4D8               	btfss	status,2,c
   763  000B2C  D00F               	goto	l1563
   764                           
   765                           ;SlaveComm_PIC18.c: 109: {
   766                           ;SlaveComm_PIC18.c: 111: send_buffer.write_position = 0;
   767  000B2E  0E00               	movlw	0
   768  000B30  0100               	movlb	0	; () banked
   769  000B32  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
   770                           
   771                           ;SlaveComm_PIC18.c: 112: send_buffer.read_position = 0;
   772  000B34  0E00               	movlw	0
   773  000B36  0100               	movlb	0	; () banked
   774  000B38  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
   775                           
   776                           ; BSR set to: 0
   777                           ;SlaveComm_PIC18.c: 113: resetCommunications( &send_buffer );
   778  000B3A  0100               	movlb	0	; () banked
   779  000B3C  0E00               	movlw	high communications@send_buffer
   780  000B3E  6E16               	movwf	resetCommunications@send_buffer+1,c
   781  000B40  0100               	movlb	0	; () banked
   782  000B42  0E8A               	movlw	low communications@send_buffer
   783  000B44  6E15               	movwf	resetCommunications@send_buffer,c
   784  000B46  EC1E  F008         	call	_resetCommunications	;wreg free
   785                           
   786                           ;SlaveComm_PIC18.c: 114: }
   787  000B4A  0012               	return	
   788  000B4C                     l1563:
   789                           
   790                           ;SlaveComm_PIC18.c: 115: else
   791                           ;SlaveComm_PIC18.c: 116: {
   792                           ;SlaveComm_PIC18.c: 117: receive_current_state = receive_data( &receive_buffer );
   793  000B4C  0100               	movlb	0	; () banked
   794  000B4E  0E00               	movlw	high communications@receive_buffer
   795  000B50  6E05               	movwf	receive_data@receive_buffer+1,c
   796  000B52  0100               	movlb	0	; () banked
   797  000B54  0E60               	movlw	low communications@receive_buffer
   798  000B56  6E04               	movwf	receive_data@receive_buffer,c
   799  000B58  ECF4  F005         	call	_receive_data	;wreg free
   800  000B5C  6E5A               	movwf	communications@receive_current_state,c
   801                           
   802                           ;SlaveComm_PIC18.c: 119: switch( receive_current_state )
   803  000B5E  D015               	goto	l1571
   804  000B60                     l1565:
   805                           
   806                           ;SlaveComm_PIC18.c: 129: if( process_data( &receive_buffer, &send_buffer ) == 1 )
   807  000B60  0100               	movlb	0	; () banked
   808  000B62  0E00               	movlw	high communications@receive_buffer
   809  000B64  6E1C               	movwf	process_data@receive_buffer+1,c
   810  000B66  0100               	movlb	0	; () banked
   811  000B68  0E60               	movlw	low communications@receive_buffer
   812  000B6A  6E1B               	movwf	process_data@receive_buffer,c
   813  000B6C  0100               	movlb	0	; () banked
   814  000B6E  0E00               	movlw	high communications@send_buffer
   815  000B70  6E1E               	movwf	process_data@send_buffer+1,c
   816  000B72  0100               	movlb	0	; () banked
   817  000B74  0E8A               	movlw	low communications@send_buffer
   818  000B76  6E1D               	movwf	process_data@send_buffer,c
   819  000B78  EC6D  F008         	call	_process_data	;wreg free
   820  000B7C  6E52               	movwf	??_communications& (0+255),c
   821  000B7E  0452               	decf	??_communications,w,c
   822  000B80  A4D8               	btfss	status,2,c
   823  000B82  D00D               	goto	l1573
   824                           
   825                           ;SlaveComm_PIC18.c: 130: {
   826                           ;SlaveComm_PIC18.c: 131: end_of_transmission_received = 1;
   827  000B84  0E01               	movlw	1
   828  000B86  6E58               	movwf	communications@end_of_transmission_received,c
   829  000B88  D00A               	goto	l1573
   830  000B8A                     l1571:
   831  000B8A  505A               	movf	communications@receive_current_state,w,c
   832                           
   833                           ; Switch size 1, requested type "space"
   834                           ; Number of cases is 3, Range of values is 0 to 2
   835                           ; switch strategies available:
   836                           ; Name         Instructions Cycles
   837                           ; simple_byte           10     6 (average)
   838                           ;	Chosen strategy is simple_byte
   839  000B8C  0A00               	xorlw	0	; case 0
   840  000B8E  B4D8               	btfsc	status,2,c
   841  000B90  D006               	goto	l1573
   842  000B92  0A01               	xorlw	1	; case 1
   843  000B94  B4D8               	btfsc	status,2,c
   844  000B96  D003               	goto	l1573
   845  000B98  0A03               	xorlw	3	; case 2
   846  000B9A  B4D8               	btfsc	status,2,c
   847  000B9C  D7E1               	goto	l1565
   848  000B9E                     l1573:
   849                           
   850                           ;SlaveComm_PIC18.c: 137: if( end_of_transmission_received == 1 )
   851  000B9E  0458               	decf	communications@end_of_transmission_received,w,c
   852  000BA0  A4D8               	btfss	status,2,c
   853  000BA2  D002               	goto	l1577
   854                           
   855                           ;SlaveComm_PIC18.c: 138: {
   856                           ;SlaveComm_PIC18.c: 143: end_of_transmission_received = 0;
   857  000BA4  0E00               	movlw	0
   858  000BA6  6E58               	movwf	communications@end_of_transmission_received,c
   859  000BA8                     l1577:
   860                           
   861                           ;SlaveComm_PIC18.c: 144: }
   862                           ;SlaveComm_PIC18.c: 146: no_more_to_send = send_data( &send_buffer );
   863  000BA8  0100               	movlb	0	; () banked
   864  000BAA  0E00               	movlw	high communications@send_buffer
   865  000BAC  6E04               	movwf	send_data@send_buffer+1,c
   866  000BAE  0100               	movlb	0	; () banked
   867  000BB0  0E8A               	movlw	low communications@send_buffer
   868  000BB2  6E03               	movwf	send_data@send_buffer,c
   869  000BB4  EC01  F007         	call	_send_data	;wreg free
   870  000BB8  6E53               	movwf	communications@no_more_to_send,c
   871                           
   872                           ;SlaveComm_PIC18.c: 149: static bool last_state_active = 0;
   873                           ;SlaveComm_PIC18.c: 150: if( PORTBbits.SS2 == 0b1 )
   874  000BBA  A081               	btfss	3969,0,c	;volatile
   875  000BBC  D008               	goto	l119
   876                           
   877                           ;SlaveComm_PIC18.c: 151: {
   878                           ;SlaveComm_PIC18.c: 153: last_state_active = 0;
   879  000BBE  0E00               	movlw	0
   880  000BC0  6E59               	movwf	communications@last_state_active,c
   881                           
   882                           ;SlaveComm_PIC18.c: 155: if( last_state_active == 1 )
   883  000BC2  0459               	decf	communications@last_state_active,w,c
   884  000BC4  A4D8               	btfss	status,2,c
   885  000BC6  0012               	return	
   886                           
   887                           ;SlaveComm_PIC18.c: 156: {
   888                           ;SlaveComm_PIC18.c: 158: last_state_active = 0;
   889  000BC8  0E00               	movlw	0
   890  000BCA  6E59               	movwf	communications@last_state_active,c
   891  000BCC  0012               	return	
   892  000BCE                     l119:
   893                           
   894                           ;SlaveComm_PIC18.c: 161: else
   895                           ;SlaveComm_PIC18.c: 162: {
   896                           ;SlaveComm_PIC18.c: 164: if( last_state_active == 0 )
   897  000BCE  6659               	tstfsz	communications@last_state_active,c
   898  000BD0  D008               	goto	l1589
   899                           
   900                           ;SlaveComm_PIC18.c: 165: {
   901                           ;SlaveComm_PIC18.c: 167: resetCommunications( &send_buffer );
   902  000BD2  0100               	movlb	0	; () banked
   903  000BD4  0E00               	movlw	high communications@send_buffer
   904  000BD6  6E16               	movwf	resetCommunications@send_buffer+1,c
   905  000BD8  0100               	movlb	0	; () banked
   906  000BDA  0E8A               	movlw	low communications@send_buffer
   907  000BDC  6E15               	movwf	resetCommunications@send_buffer,c
   908  000BDE  EC1E  F008         	call	_resetCommunications	;wreg free
   909  000BE2                     l1589:
   910                           
   911                           ;SlaveComm_PIC18.c: 169: }
   912                           ;SlaveComm_PIC18.c: 171: last_state_active = 1;
   913  000BE2  0E01               	movlw	1
   914  000BE4  6E59               	movwf	communications@last_state_active,c
   915  000BE6  0012               	return	
   916  000BE8                     __end_of_communications:
   917                           	opt stack 0
   918                           tblptru	equ	0xFF8
   919                           postinc0	equ	0xFEE
   920                           wreg	equ	0xFE8
   921                           status	equ	0xFD8
   922                           
   923 ;; *************** function _send_data *****************
   924 ;; Defined at:
   925 ;;		line 487 in file "SlaveComm_PIC18.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  send_buffer     2    2[COMRAM] PTR struct buffer
   928 ;;		 -> communications@send_buffer(42), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  send_end        1    6[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      unsigned char 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   940 ;;      Params:         2       0       0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0       0       0
   942 ;;      Temps:          2       0       0       0       0       0       0
   943 ;;      Totals:         5       0       0       0       0       0       0
   944 ;;Total ram usage:        5 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		_SPI_send_data
   949 ;; This function is called by:
   950 ;;		_communications
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  000E02                     __ptext4:
   956                           	opt stack 0
   957  000E02                     _send_data:
   958                           	opt stack 28
   959                           
   960                           ;SlaveComm_PIC18.c: 489: bool send_end;
   961                           ;SlaveComm_PIC18.c: 491: if( send_buffer->read_position == send_buffer->write_position )
   962                           
   963                           ;incstack = 0
   964  000E02  EE20 F029          	lfsr	2,41
   965  000E06  5003               	movf	send_data@send_buffer,w,c
   966  000E08  26D9               	addwf	fsr2l,f,c
   967  000E0A  5004               	movf	send_data@send_buffer+1,w,c
   968  000E0C  22DA               	addwfc	fsr2h,f,c
   969  000E0E  EE10 F028          	lfsr	1,40
   970  000E12  5003               	movf	send_data@send_buffer,w,c
   971  000E14  26E1               	addwf	fsr1l,f,c
   972  000E16  5004               	movf	send_data@send_buffer+1,w,c
   973  000E18  22E2               	addwfc	fsr1h,f,c
   974  000E1A  50E7               	movf	indf1,w,c
   975  000E1C  62DF               	cpfseq	indf2,c
   976  000E1E  D006               	goto	l1545
   977                           
   978                           ;SlaveComm_PIC18.c: 492: {
   979                           ;SlaveComm_PIC18.c: 493: send_end = 1;
   980  000E20  0E01               	movlw	1
   981  000E22  6E07               	movwf	send_data@send_end,c
   982                           
   983                           ;SlaveComm_PIC18.c: 494: SPI_send_data( '\0' );
   984  000E24  0E00               	movlw	0
   985  000E26  ECCA  F008         	call	_SPI_send_data
   986                           
   987                           ;SlaveComm_PIC18.c: 495: }
   988  000E2A  D031               	goto	l1553
   989  000E2C                     l1545:
   990                           
   991                           ;SlaveComm_PIC18.c: 496: else
   992                           ;SlaveComm_PIC18.c: 497: {
   993                           ;SlaveComm_PIC18.c: 498: send_end = 0;
   994  000E2C  0E00               	movlw	0
   995  000E2E  6E07               	movwf	send_data@send_end,c
   996                           
   997                           ;SlaveComm_PIC18.c: 501: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
   998  000E30  EE20 F029          	lfsr	2,41
   999  000E34  5003               	movf	send_data@send_buffer,w,c
  1000  000E36  26D9               	addwf	fsr2l,f,c
  1001  000E38  5004               	movf	send_data@send_buffer+1,w,c
  1002  000E3A  22DA               	addwfc	fsr2h,f,c
  1003  000E3C  50DF               	movf	indf2,w,c
  1004  000E3E  6E05               	movwf	??_send_data& (0+255),c
  1005  000E40  5005               	movf	??_send_data,w,c
  1006  000E42  0D01               	mullw	1
  1007  000E44  50F3               	movf	prodl,w,c
  1008  000E46  2403               	addwf	send_data@send_buffer,w,c
  1009  000E48  6ED9               	movwf	fsr2l,c
  1010  000E4A  50F4               	movf	prodh,w,c
  1011  000E4C  2004               	addwfc	send_data@send_buffer+1,w,c
  1012  000E4E  6EDA               	movwf	fsr2h,c
  1013  000E50  50DF               	movf	indf2,w,c
  1014  000E52  ECCA  F008         	call	_SPI_send_data
  1015  000E56  6E06               	movwf	(??_send_data+1)& (0+255),c
  1016  000E58  0406               	decf	??_send_data+1,w,c
  1017  000E5A  A4D8               	btfss	status,2,c
  1018  000E5C  D018               	goto	l1553
  1019                           
  1020                           ;SlaveComm_PIC18.c: 502: {
  1021                           ;SlaveComm_PIC18.c: 504: send_buffer->read_position++;
  1022  000E5E  EE20 F029          	lfsr	2,41
  1023  000E62  5003               	movf	send_data@send_buffer,w,c
  1024  000E64  26D9               	addwf	fsr2l,f,c
  1025  000E66  5004               	movf	send_data@send_buffer+1,w,c
  1026  000E68  22DA               	addwfc	fsr2h,f,c
  1027  000E6A  2ADF               	incf	indf2,f,c
  1028                           
  1029                           ;SlaveComm_PIC18.c: 505: if( send_buffer->read_position >= 40 )
  1030  000E6C  EE20 F029          	lfsr	2,41
  1031  000E70  5003               	movf	send_data@send_buffer,w,c
  1032  000E72  26D9               	addwf	fsr2l,f,c
  1033  000E74  5004               	movf	send_data@send_buffer+1,w,c
  1034  000E76  22DA               	addwfc	fsr2h,f,c
  1035  000E78  0E27               	movlw	39
  1036  000E7A  64DF               	cpfsgt	indf2,c
  1037  000E7C  D008               	goto	l1553
  1038                           
  1039                           ;SlaveComm_PIC18.c: 506: {
  1040                           ;SlaveComm_PIC18.c: 507: send_buffer->read_position = 0;
  1041  000E7E  EE20 F029          	lfsr	2,41
  1042  000E82  5003               	movf	send_data@send_buffer,w,c
  1043  000E84  26D9               	addwf	fsr2l,f,c
  1044  000E86  5004               	movf	send_data@send_buffer+1,w,c
  1045  000E88  22DA               	addwfc	fsr2h,f,c
  1046  000E8A  0E00               	movlw	0
  1047  000E8C  6EDF               	movwf	indf2,c
  1048  000E8E                     l1553:
  1049                           
  1050                           ;SlaveComm_PIC18.c: 508: }
  1051                           ;SlaveComm_PIC18.c: 509: }
  1052                           ;SlaveComm_PIC18.c: 510: }
  1053                           ;SlaveComm_PIC18.c: 512: return send_end;
  1054  000E8E  5007               	movf	send_data@send_end,w,c
  1055  000E90  0012               	return	
  1056  000E92                     __end_of_send_data:
  1057                           	opt stack 0
  1058                           tblptru	equ	0xFF8
  1059                           prodh	equ	0xFF4
  1060                           prodl	equ	0xFF3
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           indf1	equ	0xFE7
  1064                           fsr1h	equ	0xFE2
  1065                           fsr1l	equ	0xFE1
  1066                           indf2	equ	0xFDF
  1067                           fsr2h	equ	0xFDA
  1068                           fsr2l	equ	0xFD9
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _SPI_send_data *****************
  1072 ;; Defined at:
  1073 ;;		line 585 in file "SlaveComm_PIC18.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  data            1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  data            1    0[COMRAM] unsigned char 
  1078 ;;  sendGood        1    1[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         0       0       0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0
  1091 ;;      Totals:         2       0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_send_data
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text5
  1102  001194                     __ptext5:
  1103                           	opt stack 0
  1104  001194                     _SPI_send_data:
  1105                           	opt stack 28
  1106                           
  1107                           ;incstack = 0
  1108                           ;SPI_send_data@data stored from wreg
  1109  001194  6E01               	movwf	SPI_send_data@data,c
  1110                           
  1111                           ;SlaveComm_PIC18.c: 587: bool sendGood = 0;
  1112  001196  0E00               	movlw	0
  1113  001198  6E02               	movwf	SPI_send_data@sendGood,c
  1114                           
  1115                           ;SlaveComm_PIC18.c: 589: if( SPI_transmit_wait == 0 )
  1116  00119A  6657               	tstfsz	_SPI_transmit_wait,c
  1117  00119C  D006               	goto	l1479
  1118                           
  1119                           ;SlaveComm_PIC18.c: 590: {
  1120                           ;SlaveComm_PIC18.c: 591: SSP2BUF = data;
  1121  00119E  C001  FF6F         	movff	SPI_send_data@data,3951	;volatile
  1122                           
  1123                           ;SlaveComm_PIC18.c: 592: SPI_transmit_wait = 1;
  1124  0011A2  0E01               	movlw	1
  1125  0011A4  6E57               	movwf	_SPI_transmit_wait,c
  1126                           
  1127                           ;SlaveComm_PIC18.c: 593: sendGood = 1;
  1128  0011A6  0E01               	movlw	1
  1129  0011A8  D001               	goto	L3
  1130  0011AA                     l1479:
  1131                           
  1132                           ;SlaveComm_PIC18.c: 595: else
  1133                           ;SlaveComm_PIC18.c: 596: {
  1134                           ;SlaveComm_PIC18.c: 597: sendGood = 0;
  1135  0011AA  0E00               	movlw	0
  1136  0011AC                     L3:
  1137  0011AC  6E02               	movwf	SPI_send_data@sendGood,c
  1138                           
  1139                           ;SlaveComm_PIC18.c: 598: }
  1140                           ;SlaveComm_PIC18.c: 600: return sendGood;
  1141  0011AE  5002               	movf	SPI_send_data@sendGood,w,c
  1142  0011B0  0012               	return	
  1143  0011B2                     __end_of_SPI_send_data:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           indf1	equ	0xFE7
  1151                           fsr1h	equ	0xFE2
  1152                           fsr1l	equ	0xFE1
  1153                           indf2	equ	0xFDF
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _resetCommunications *****************
  1159 ;; Defined at:
  1160 ;;		line 179 in file "SlaveComm_PIC18.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1163 ;;		 -> communications@send_buffer(42), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;		None               void
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1175 ;;      Params:         2       0       0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    4
  1182 ;; This function calls:
  1183 ;;		_com_command_testLED
  1184 ;; This function is called by:
  1185 ;;		_communications
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text6
  1190  00103C                     __ptext6:
  1191                           	opt stack 0
  1192  00103C                     _resetCommunications:
  1193                           	opt stack 25
  1194                           
  1195                           ;SlaveComm_PIC18.c: 181: SSP2CON1bits.SSPEN = 0;
  1196                           
  1197                           ;incstack = 0
  1198  00103C  9A6C               	bcf	3948,5,c	;volatile
  1199                           
  1200                           ;SlaveComm_PIC18.c: 182: SSP2CON1bits.SSPEN = 1;
  1201  00103E  8A6C               	bsf	3948,5,c	;volatile
  1202                           
  1203                           ;SlaveComm_PIC18.c: 184: SSP2CON1bits.WCOL = 0;
  1204  001040  9E6C               	bcf	3948,7,c	;volatile
  1205                           
  1206                           ;SlaveComm_PIC18.c: 185: SPI_transmit_wait = 0;
  1207  001042  0E00               	movlw	0
  1208  001044  6E57               	movwf	_SPI_transmit_wait,c
  1209                           
  1210                           ;SlaveComm_PIC18.c: 187: send_buffer->read_position = 0;
  1211  001046  EE20 F029          	lfsr	2,41
  1212  00104A  5015               	movf	resetCommunications@send_buffer,w,c
  1213  00104C  26D9               	addwf	fsr2l,f,c
  1214  00104E  5016               	movf	resetCommunications@send_buffer+1,w,c
  1215  001050  22DA               	addwfc	fsr2h,f,c
  1216  001052  0E00               	movlw	0
  1217  001054  6EDF               	movwf	indf2,c
  1218                           
  1219                           ;SlaveComm_PIC18.c: 188: send_buffer->write_position = 0;
  1220  001056  EE20 F028          	lfsr	2,40
  1221  00105A  5015               	movf	resetCommunications@send_buffer,w,c
  1222  00105C  26D9               	addwf	fsr2l,f,c
  1223  00105E  5016               	movf	resetCommunications@send_buffer+1,w,c
  1224  001060  22DA               	addwfc	fsr2h,f,c
  1225  001062  0E00               	movlw	0
  1226  001064  6EDF               	movwf	indf2,c
  1227                           
  1228                           ;SlaveComm_PIC18.c: 191: com_command_testLED( send_buffer );
  1229  001066  C016  F014         	movff	resetCommunications@send_buffer+1,com_command_testLED@send_buffer+1
  1230  00106A  C015  F013         	movff	resetCommunications@send_buffer,com_command_testLED@send_buffer
  1231  00106E  ECD9  F008         	call	_com_command_testLED	;wreg free
  1232  001072  0012               	return	
  1233  001074                     __end_of_resetCommunications:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           prodh	equ	0xFF4
  1237                           prodl	equ	0xFF3
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           indf1	equ	0xFE7
  1241                           fsr1h	equ	0xFE2
  1242                           fsr1l	equ	0xFE1
  1243                           indf2	equ	0xFDF
  1244                           fsr2h	equ	0xFDA
  1245                           fsr2l	equ	0xFD9
  1246                           status	equ	0xFD8
  1247                           
  1248 ;; *************** function _com_command_testLED *****************
  1249 ;; Defined at:
  1250 ;;		line 613 in file "SlaveComm_PIC18.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1253 ;;		 -> communications@send_buffer(42), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;		None               void
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1265 ;;      Params:         2       0       0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0
  1268 ;;      Totals:         2       0       0       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    3
  1272 ;; This function calls:
  1273 ;;		_command_builder2
  1274 ;; This function is called by:
  1275 ;;		_resetCommunications
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text7
  1280  0011B2                     __ptext7:
  1281                           	opt stack 0
  1282  0011B2                     _com_command_testLED:
  1283                           	opt stack 25
  1284                           
  1285                           ;SlaveComm_PIC18.c: 615: command_builder2( send_buffer, "Read", "LEDB" );
  1286                           
  1287                           ;incstack = 0
  1288  0011B2  C014  F00E         	movff	com_command_testLED@send_buffer+1,command_builder2@send_buffer+1
  1289  0011B6  C013  F00D         	movff	com_command_testLED@send_buffer,command_builder2@send_buffer
  1290  0011BA  0E06               	movlw	high STR_6
  1291  0011BC  6E10               	movwf	command_builder2@data1+1,c
  1292  0011BE  0E1F               	movlw	low STR_6
  1293  0011C0  6E0F               	movwf	command_builder2@data1,c
  1294  0011C2  0E06               	movlw	high STR_11
  1295  0011C4  6E12               	movwf	command_builder2@data2+1,c
  1296  0011C6  0E15               	movlw	low STR_11
  1297  0011C8  6E11               	movwf	command_builder2@data2,c
  1298  0011CA  EC55  F006         	call	_command_builder2	;wreg free
  1299  0011CE  0012               	return	
  1300  0011D0                     __end_of_com_command_testLED:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           prodh	equ	0xFF4
  1304                           prodl	equ	0xFF3
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           indf1	equ	0xFE7
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           indf2	equ	0xFDF
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function _command_builder2 *****************
  1316 ;; Defined at:
  1317 ;;		line 415 in file "SlaveComm_PIC18.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  1320 ;;		 -> communications@send_buffer(42), 
  1321 ;;  data1           2   14[COMRAM] PTR unsigned char 
  1322 ;;		 -> STR_23(5), 
  1323 ;;  data2           2   16[COMRAM] PTR unsigned char 
  1324 ;;		 -> STR_24(5), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;		None               void
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1336 ;;      Params:         6       0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0
  1339 ;;      Totals:         6       0       0       0       0       0       0
  1340 ;;Total ram usage:        6 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    2
  1343 ;; This function calls:
  1344 ;;		_command_builder_add_char
  1345 ;;		_command_builder_add_string
  1346 ;; This function is called by:
  1347 ;;		_com_command_testLED
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text8
  1352  000CAA                     __ptext8:
  1353                           	opt stack 0
  1354  000CAA                     _command_builder2:
  1355                           	opt stack 25
  1356                           
  1357                           ;SlaveComm_PIC18.c: 417: command_builder_add_char( send_buffer, '#' );
  1358                           
  1359                           ;incstack = 0
  1360  000CAA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1361  000CAE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1362  000CB2  0E23               	movlw	35
  1363  000CB4  6E03               	movwf	command_builder_add_char@data,c
  1364  000CB6  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1365                           
  1366                           ;SlaveComm_PIC18.c: 418: command_builder_add_char( send_buffer, '#' );
  1367  000CBA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1368  000CBE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1369  000CC2  0E23               	movlw	35
  1370  000CC4  6E03               	movwf	command_builder_add_char@data,c
  1371  000CC6  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1372                           
  1373                           ;SlaveComm_PIC18.c: 419: command_builder_add_char( send_buffer, '#' );
  1374  000CCA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1375  000CCE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1376  000CD2  0E23               	movlw	35
  1377  000CD4  6E03               	movwf	command_builder_add_char@data,c
  1378  000CD6  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1379                           
  1380                           ;SlaveComm_PIC18.c: 420: command_builder_add_char( send_buffer, '#' );
  1381  000CDA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1382  000CDE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1383  000CE2  0E23               	movlw	35
  1384  000CE4  6E03               	movwf	command_builder_add_char@data,c
  1385  000CE6  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1386                           
  1387                           ;SlaveComm_PIC18.c: 421: command_builder_add_char( send_buffer, '#' );
  1388  000CEA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1389  000CEE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1390  000CF2  0E23               	movlw	35
  1391  000CF4  6E03               	movwf	command_builder_add_char@data,c
  1392  000CF6  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1393                           
  1394                           ;SlaveComm_PIC18.c: 422: command_builder_add_char( send_buffer, '#' );
  1395  000CFA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1396  000CFE  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1397  000D02  0E23               	movlw	35
  1398  000D04  6E03               	movwf	command_builder_add_char@data,c
  1399  000D06  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1400                           
  1401                           ;SlaveComm_PIC18.c: 423: command_builder_add_char( send_buffer, '!' );
  1402  000D0A  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1403  000D0E  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1404  000D12  0E21               	movlw	33
  1405  000D14  6E03               	movwf	command_builder_add_char@data,c
  1406  000D16  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1407                           
  1408                           ;SlaveComm_PIC18.c: 424: command_builder_add_string( send_buffer, data1 );
  1409  000D1A  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1410  000D1E  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1411  000D22  C010  F008         	movff	command_builder2@data1+1,command_builder_add_string@data_string+1
  1412  000D26  C00F  F007         	movff	command_builder2@data1,command_builder_add_string@data_string
  1413  000D2A  EC49  F007         	call	_command_builder_add_string	;wreg free
  1414                           
  1415                           ;SlaveComm_PIC18.c: 425: command_builder_add_char( send_buffer, ';' );
  1416  000D2E  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1417  000D32  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1418  000D36  0E3B               	movlw	59
  1419  000D38  6E03               	movwf	command_builder_add_char@data,c
  1420  000D3A  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1421                           
  1422                           ;SlaveComm_PIC18.c: 426: command_builder_add_string( send_buffer, data2 );
  1423  000D3E  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1424  000D42  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1425  000D46  C012  F008         	movff	command_builder2@data2+1,command_builder_add_string@data_string+1
  1426  000D4A  C011  F007         	movff	command_builder2@data2,command_builder_add_string@data_string
  1427  000D4E  EC49  F007         	call	_command_builder_add_string	;wreg free
  1428                           
  1429                           ;SlaveComm_PIC18.c: 427: command_builder_add_char( send_buffer, '*' );
  1430  000D52  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1431  000D56  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1432  000D5A  0E2A               	movlw	42
  1433  000D5C  6E03               	movwf	command_builder_add_char@data,c
  1434  000D5E  ECA2  F007         	call	_command_builder_add_char	;wreg free
  1435  000D62  0012               	return	
  1436  000D64                     __end_of_command_builder2:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           prodh	equ	0xFF4
  1440                           prodl	equ	0xFF3
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           indf1	equ	0xFE7
  1444                           fsr1h	equ	0xFE2
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _receive_data *****************
  1452 ;; Defined at:
  1453 ;;		line 196 in file "SlaveComm_PIC18.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  receive_buff    2    3[COMRAM] PTR struct buffer
  1456 ;;		 -> communications@receive_buffer(42), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  data            1    6[COMRAM] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      enum E7493
  1461 ;; Registers used:
  1462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         2       0       0       0       0       0       0
  1469 ;;      Locals:         1       0       0       0       0       0       0
  1470 ;;      Temps:          1       0       0       0       0       0       0
  1471 ;;      Totals:         4       0       0       0       0       0       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		_SPI_receive_data
  1477 ;; This function is called by:
  1478 ;;		_communications
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text9
  1483  000BE8                     __ptext9:
  1484                           	opt stack 0
  1485  000BE8                     _receive_data:
  1486                           	opt stack 28
  1487                           
  1488                           ;SlaveComm_PIC18.c: 198: char data;
  1489                           ;SlaveComm_PIC18.c: 200: static enum receive_status my_status = receive_waiting;
  1490                           ;SlaveComm_PIC18.c: 202: if( my_status == receive_end_command )
  1491                           
  1492                           ;incstack = 0
  1493  000BE8  505B               	movf	receive_data@my_status,w,c
  1494  000BEA  0A02               	xorlw	2
  1495  000BEC  A4D8               	btfss	status,2,c
  1496  000BEE  D002               	goto	l1501
  1497                           
  1498                           ;SlaveComm_PIC18.c: 203: {
  1499                           ;SlaveComm_PIC18.c: 204: my_status = receive_waiting;
  1500  000BF0  0E00               	movlw	0
  1501  000BF2  6E5B               	movwf	receive_data@my_status,c
  1502  000BF4                     l1501:
  1503                           
  1504                           ;SlaveComm_PIC18.c: 205: }
  1505                           ;SlaveComm_PIC18.c: 207: if( SPI_receive_data( &data ) == 1 )
  1506  000BF4  0E00               	movlw	high receive_data@data
  1507  000BF6  6E02               	movwf	SPI_receive_data@data+1,c
  1508  000BF8  0E07               	movlw	low receive_data@data
  1509  000BFA  6E01               	movwf	SPI_receive_data@data,c
  1510  000BFC  EC84  F008         	call	_SPI_receive_data	;wreg free
  1511  000C00  6E06               	movwf	??_receive_data& (0+255),c
  1512  000C02  0406               	decf	??_receive_data,w,c
  1513  000C04  A4D8               	btfss	status,2,c
  1514  000C06  D04F               	goto	l132
  1515                           
  1516                           ;SlaveComm_PIC18.c: 208: {
  1517                           ;SlaveComm_PIC18.c: 209: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  1518  000C08  5007               	movf	receive_data@data,w,c
  1519  000C0A  0A21               	xorlw	33
  1520  000C0C  A4D8               	btfss	status,2,c
  1521  000C0E  D015               	goto	l1513
  1522  000C10  045B               	decf	receive_data@my_status,w,c
  1523  000C12  B4D8               	btfsc	status,2,c
  1524  000C14  D012               	goto	l1513
  1525                           
  1526                           ;SlaveComm_PIC18.c: 210: {
  1527                           ;SlaveComm_PIC18.c: 211: my_status = receive_in_command;
  1528  000C16  0E01               	movlw	1
  1529  000C18  6E5B               	movwf	receive_data@my_status,c
  1530                           
  1531                           ;SlaveComm_PIC18.c: 212: receive_buffer->read_position = 0;
  1532  000C1A  EE20 F029          	lfsr	2,41
  1533  000C1E  5004               	movf	receive_data@receive_buffer,w,c
  1534  000C20  26D9               	addwf	fsr2l,f,c
  1535  000C22  5005               	movf	receive_data@receive_buffer+1,w,c
  1536  000C24  22DA               	addwfc	fsr2h,f,c
  1537  000C26  0E00               	movlw	0
  1538  000C28  6EDF               	movwf	indf2,c
  1539                           
  1540                           ;SlaveComm_PIC18.c: 213: receive_buffer->write_position = 0;
  1541  000C2A  EE20 F028          	lfsr	2,40
  1542  000C2E  5004               	movf	receive_data@receive_buffer,w,c
  1543  000C30  26D9               	addwf	fsr2l,f,c
  1544  000C32  5005               	movf	receive_data@receive_buffer+1,w,c
  1545  000C34  22DA               	addwfc	fsr2h,f,c
  1546  000C36  0E00               	movlw	0
  1547  000C38  6EDF               	movwf	indf2,c
  1548  000C3A                     l1513:
  1549                           
  1550                           ;SlaveComm_PIC18.c: 214: }
  1551                           ;SlaveComm_PIC18.c: 216: if( my_status == receive_in_command )
  1552  000C3A  045B               	decf	receive_data@my_status,w,c
  1553  000C3C  A4D8               	btfss	status,2,c
  1554  000C3E  D02A               	goto	l1523
  1555                           
  1556                           ;SlaveComm_PIC18.c: 217: {
  1557                           ;SlaveComm_PIC18.c: 218: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  1558  000C40  EE20 F028          	lfsr	2,40
  1559  000C44  5004               	movf	receive_data@receive_buffer,w,c
  1560  000C46  26D9               	addwf	fsr2l,f,c
  1561  000C48  5005               	movf	receive_data@receive_buffer+1,w,c
  1562  000C4A  22DA               	addwfc	fsr2h,f,c
  1563  000C4C  50DF               	movf	indf2,w,c
  1564  000C4E  6E06               	movwf	??_receive_data& (0+255),c
  1565  000C50  5006               	movf	??_receive_data,w,c
  1566  000C52  0D01               	mullw	1
  1567  000C54  50F3               	movf	prodl,w,c
  1568  000C56  2404               	addwf	receive_data@receive_buffer,w,c
  1569  000C58  6ED9               	movwf	fsr2l,c
  1570  000C5A  50F4               	movf	prodh,w,c
  1571  000C5C  2005               	addwfc	receive_data@receive_buffer+1,w,c
  1572  000C5E  6EDA               	movwf	fsr2h,c
  1573  000C60  C007  FFDF         	movff	receive_data@data,indf2
  1574                           
  1575                           ;SlaveComm_PIC18.c: 220: receive_buffer->write_position++;
  1576  000C64  EE20 F028          	lfsr	2,40
  1577  000C68  5004               	movf	receive_data@receive_buffer,w,c
  1578  000C6A  26D9               	addwf	fsr2l,f,c
  1579  000C6C  5005               	movf	receive_data@receive_buffer+1,w,c
  1580  000C6E  22DA               	addwfc	fsr2h,f,c
  1581  000C70  2ADF               	incf	indf2,f,c
  1582                           
  1583                           ;SlaveComm_PIC18.c: 221: if( receive_buffer->write_position >= 40 )
  1584  000C72  EE20 F028          	lfsr	2,40
  1585  000C76  5004               	movf	receive_data@receive_buffer,w,c
  1586  000C78  26D9               	addwf	fsr2l,f,c
  1587  000C7A  5005               	movf	receive_data@receive_buffer+1,w,c
  1588  000C7C  22DA               	addwfc	fsr2h,f,c
  1589  000C7E  0E27               	movlw	39
  1590  000C80  64DF               	cpfsgt	indf2,c
  1591  000C82  D008               	goto	l1523
  1592                           
  1593                           ;SlaveComm_PIC18.c: 222: {
  1594                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position = ( 40 - 1 );
  1595  000C84  EE20 F028          	lfsr	2,40
  1596  000C88  5004               	movf	receive_data@receive_buffer,w,c
  1597  000C8A  26D9               	addwf	fsr2l,f,c
  1598  000C8C  5005               	movf	receive_data@receive_buffer+1,w,c
  1599  000C8E  22DA               	addwfc	fsr2h,f,c
  1600  000C90  0E27               	movlw	39
  1601  000C92  6EDF               	movwf	indf2,c
  1602  000C94                     l1523:
  1603                           
  1604                           ;SlaveComm_PIC18.c: 224: }
  1605                           ;SlaveComm_PIC18.c: 225: }
  1606                           ;SlaveComm_PIC18.c: 227: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  1607  000C94  045B               	decf	receive_data@my_status,w,c
  1608  000C96  A4D8               	btfss	status,2,c
  1609  000C98  D006               	goto	l132
  1610  000C9A  5007               	movf	receive_data@data,w,c
  1611  000C9C  0A2A               	xorlw	42
  1612  000C9E  A4D8               	btfss	status,2,c
  1613  000CA0  D002               	goto	l132
  1614                           
  1615                           ;SlaveComm_PIC18.c: 228: {
  1616                           ;SlaveComm_PIC18.c: 229: my_status = receive_end_command;
  1617  000CA2  0E02               	movlw	2
  1618  000CA4  6E5B               	movwf	receive_data@my_status,c
  1619  000CA6                     l132:
  1620                           
  1621                           ;SlaveComm_PIC18.c: 230: }
  1622                           ;SlaveComm_PIC18.c: 231: }
  1623                           ;SlaveComm_PIC18.c: 233: return my_status;
  1624  000CA6  505B               	movf	receive_data@my_status,w,c
  1625  000CA8  0012               	return	
  1626  000CAA                     __end_of_receive_data:
  1627                           	opt stack 0
  1628                           tblptru	equ	0xFF8
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           indf1	equ	0xFE7
  1634                           fsr1h	equ	0xFE2
  1635                           fsr1l	equ	0xFE1
  1636                           indf2	equ	0xFDF
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _SPI_receive_data *****************
  1642 ;; Defined at:
  1643 ;;		line 564 in file "SlaveComm_PIC18.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  data            2    0[COMRAM] PTR unsigned char 
  1646 ;;		 -> receive_data@data(1), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  recvGood        1    2[COMRAM] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      unsigned char 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr2l, fsr2h, status,2
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         2       0       0       0       0       0       0
  1659 ;;      Locals:         1       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0
  1661 ;;      Totals:         3       0       0       0       0       0       0
  1662 ;;Total ram usage:        3 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_receive_data
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text10
  1672  001108                     __ptext10:
  1673                           	opt stack 0
  1674  001108                     _SPI_receive_data:
  1675                           	opt stack 28
  1676                           
  1677                           ;SlaveComm_PIC18.c: 567: bool recvGood = 0;
  1678                           
  1679                           ;incstack = 0
  1680  001108  0E00               	movlw	0
  1681  00110A  6E03               	movwf	SPI_receive_data@recvGood,c
  1682                           
  1683                           ;SlaveComm_PIC18.c: 569: if( SSP2STATbits.BF == 1 )
  1684  00110C  A06D               	btfss	3949,0,c	;volatile
  1685  00110E  D00C               	goto	l1367
  1686                           
  1687                           ;SlaveComm_PIC18.c: 570: {
  1688                           ;SlaveComm_PIC18.c: 571: *data = SSP2BUF;
  1689  001110  C001  FFD9         	movff	SPI_receive_data@data,fsr2l
  1690  001114  C002  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  1691  001118  CF6F FFDF          	movff	3951,indf2	;volatile
  1692                           
  1693                           ;SlaveComm_PIC18.c: 572: recvGood = 1;
  1694  00111C  0E01               	movlw	1
  1695  00111E  6E03               	movwf	SPI_receive_data@recvGood,c
  1696                           
  1697                           ;SlaveComm_PIC18.c: 573: SSP2CON1bits.WCOL = 0;
  1698  001120  9E6C               	bcf	3948,7,c	;volatile
  1699                           
  1700                           ;SlaveComm_PIC18.c: 574: SPI_transmit_wait = 0;
  1701  001122  0E00               	movlw	0
  1702  001124  6E57               	movwf	_SPI_transmit_wait,c
  1703                           
  1704                           ;SlaveComm_PIC18.c: 575: }
  1705  001126  D002               	goto	l238
  1706  001128                     l1367:
  1707                           
  1708                           ;SlaveComm_PIC18.c: 576: else
  1709                           ;SlaveComm_PIC18.c: 577: {
  1710                           ;SlaveComm_PIC18.c: 578: recvGood = 0;
  1711  001128  0E00               	movlw	0
  1712  00112A  6E03               	movwf	SPI_receive_data@recvGood,c
  1713  00112C                     l238:
  1714                           
  1715                           ;SlaveComm_PIC18.c: 579: }
  1716                           ;SlaveComm_PIC18.c: 581: return recvGood;
  1717  00112C  5003               	movf	SPI_receive_data@recvGood,w,c
  1718  00112E  0012               	return	
  1719  001130                     __end_of_SPI_receive_data:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           prodh	equ	0xFF4
  1723                           prodl	equ	0xFF3
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           indf1	equ	0xFE7
  1727                           fsr1h	equ	0xFE2
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           fsr2h	equ	0xFDA
  1731                           fsr2l	equ	0xFD9
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _process_data *****************
  1735 ;; Defined at:
  1736 ;;		line 236 in file "SlaveComm_PIC18.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  receive_buff    2   26[COMRAM] PTR struct buffer
  1739 ;;		 -> communications@receive_buffer(42), 
  1740 ;;  send_buffer     2   28[COMRAM] PTR struct buffer
  1741 ;;		 -> communications@send_buffer(42), 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  parameters     50   30[COMRAM] unsigned char [10][5]
  1744 ;;  end_of_trans    1   80[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      unsigned char 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1754 ;;      Params:         4       0       0       0       0       0       0
  1755 ;;      Locals:        51       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0
  1757 ;;      Totals:        55       0       0       0       0       0       0
  1758 ;;Total ram usage:       55 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    5
  1761 ;; This function calls:
  1762 ;;		_process_data_parameterize
  1763 ;;		_process_data_parameters
  1764 ;; This function is called by:
  1765 ;;		_communications
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text11
  1770  0010DA                     __ptext11:
  1771                           	opt stack 0
  1772  0010DA                     _process_data:
  1773                           	opt stack 24
  1774                           
  1775                           ;SlaveComm_PIC18.c: 238: bool end_of_transmission_received;
  1776                           ;SlaveComm_PIC18.c: 243: char parameters[5][10];
  1777                           ;SlaveComm_PIC18.c: 245: process_data_parameterize( parameters, receive_buffer );
  1778                           
  1779                           ;incstack = 0
  1780  0010DA  0E00               	movlw	high process_data@parameters
  1781  0010DC  6E08               	movwf	process_data_parameterize@parameters+1,c
  1782  0010DE  0E1F               	movlw	low process_data@parameters
  1783  0010E0  6E07               	movwf	process_data_parameterize@parameters,c
  1784  0010E2  C01C  F00A         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  1785  0010E6  C01B  F009         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  1786  0010EA  EC35  F004         	call	_process_data_parameterize	;wreg free
  1787                           
  1788                           ;SlaveComm_PIC18.c: 247: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  1789  0010EE  0E00               	movlw	high process_data@parameters
  1790  0010F0  6E16               	movwf	process_data_parameters@parameters+1,c
  1791  0010F2  0E1F               	movlw	low process_data@parameters
  1792  0010F4  6E15               	movwf	process_data_parameters@parameters,c
  1793  0010F6  C01E  F018         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  1794  0010FA  C01D  F017         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  1795  0010FE  EC1D  F003         	call	_process_data_parameters	;wreg free
  1796  001102  6E51               	movwf	process_data@end_of_transmission_received,c
  1797                           
  1798                           ;SlaveComm_PIC18.c: 249: return end_of_transmission_received;
  1799  001104  5051               	movf	process_data@end_of_transmission_received,w,c
  1800  001106  0012               	return	
  1801  001108                     __end_of_process_data:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           postinc0	equ	0xFEE
  1807                           wreg	equ	0xFE8
  1808                           indf1	equ	0xFE7
  1809                           fsr1h	equ	0xFE2
  1810                           fsr1l	equ	0xFE1
  1811                           indf2	equ	0xFDF
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           
  1816 ;; *************** function _process_data_parameters *****************
  1817 ;; Defined at:
  1818 ;;		line 312 in file "SlaveComm_PIC18.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  1821 ;;		 -> process_data@parameters(50), 
  1822 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  1823 ;;		 -> communications@send_buffer(42), 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  end_of_trans    1   25[COMRAM] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      unsigned char 
  1828 ;; Registers used:
  1829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1835 ;;      Params:         4       0       0       0       0       0       0
  1836 ;;      Locals:         1       0       0       0       0       0       0
  1837 ;;      Temps:          1       0       0       0       0       0       0
  1838 ;;      Totals:         6       0       0       0       0       0       0
  1839 ;;Total ram usage:        6 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    4
  1842 ;; This function calls:
  1843 ;;		_command_builder3
  1844 ;;		_send_end_of_transmission
  1845 ;;		_strmatch
  1846 ;; This function is called by:
  1847 ;;		_process_data
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text12
  1852  00063A                     __ptext12:
  1853                           	opt stack 0
  1854  00063A                     _process_data_parameters:
  1855                           	opt stack 24
  1856                           
  1857                           ;SlaveComm_PIC18.c: 314: bool end_of_transmission_received = 0;
  1858                           
  1859                           ;incstack = 0
  1860  00063A  0E00               	movlw	0
  1861  00063C  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  1862                           
  1863                           ;SlaveComm_PIC18.c: 324: if( strmatch( parameters[0], "END" ) == 1 )
  1864  00063E  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1865  000642  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1866  000646  0E06               	movlw	high STR_1
  1867  000648  6E0F               	movwf	strmatch@b+1,c
  1868  00064A  0E29               	movlw	low STR_1
  1869  00064C  6E0E               	movwf	strmatch@b,c
  1870  00064E  EC55  F008         	call	_strmatch	;wreg free
  1871  000652  6E19               	movwf	??_process_data_parameters& (0+255),c
  1872  000654  0419               	decf	??_process_data_parameters,w,c
  1873  000656  A4D8               	btfss	status,2,c
  1874  000658  D008               	goto	l1423
  1875                           
  1876                           ;SlaveComm_PIC18.c: 325: {
  1877                           ;SlaveComm_PIC18.c: 327: if( LATBbits.LATB4 == 1 )
  1878  00065A  A88A               	btfss	3978,4,c	;volatile
  1879  00065C  D002               	goto	l161
  1880                           
  1881                           ;SlaveComm_PIC18.c: 328: {
  1882                           ;SlaveComm_PIC18.c: 329: LATBbits.LATB4 = 0;
  1883  00065E  988A               	bcf	3978,4,c	;volatile
  1884                           
  1885                           ;SlaveComm_PIC18.c: 330: }
  1886  000660  D001               	goto	l1421
  1887  000662                     l161:
  1888                           
  1889                           ;SlaveComm_PIC18.c: 331: else
  1890                           ;SlaveComm_PIC18.c: 332: {
  1891                           ;SlaveComm_PIC18.c: 333: LATBbits.LATB4 = 1;
  1892  000662  888A               	bsf	3978,4,c	;volatile
  1893  000664                     l1421:
  1894                           
  1895                           ;SlaveComm_PIC18.c: 334: }
  1896                           ;SlaveComm_PIC18.c: 335: end_of_transmission_received = 1;
  1897  000664  0E01               	movlw	1
  1898  000666  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  1899                           
  1900                           ;SlaveComm_PIC18.c: 336: }
  1901  000668  D0FE               	goto	l1465
  1902  00066A                     l1423:
  1903                           
  1904                           ;SlaveComm_PIC18.c: 337: else if( strmatch( parameters[0], "Set" ) == 1 )
  1905  00066A  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1906  00066E  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1907  000672  0E06               	movlw	high STR_2
  1908  000674  6E0F               	movwf	strmatch@b+1,c
  1909  000676  0E31               	movlw	low STR_2
  1910  000678  6E0E               	movwf	strmatch@b,c
  1911  00067A  EC55  F008         	call	_strmatch	;wreg free
  1912  00067E  6E19               	movwf	??_process_data_parameters& (0+255),c
  1913  000680  0419               	decf	??_process_data_parameters,w,c
  1914  000682  A4D8               	btfss	status,2,c
  1915  000684  D02D               	goto	l1435
  1916                           
  1917                           ;SlaveComm_PIC18.c: 338: {
  1918                           ;SlaveComm_PIC18.c: 339: if( strmatch( parameters[1], "Power" ) == 1 )
  1919  000686  0E0A               	movlw	10
  1920  000688  2415               	addwf	process_data_parameters@parameters,w,c
  1921  00068A  6E0C               	movwf	strmatch@a,c
  1922  00068C  0E00               	movlw	0
  1923  00068E  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1924  000690  6E0D               	movwf	strmatch@a+1,c
  1925  000692  0E06               	movlw	high STR_3
  1926  000694  6E0F               	movwf	strmatch@b+1,c
  1927  000696  0E09               	movlw	low STR_3
  1928  000698  6E0E               	movwf	strmatch@b,c
  1929  00069A  EC55  F008         	call	_strmatch	;wreg free
  1930  00069E  6E19               	movwf	??_process_data_parameters& (0+255),c
  1931  0006A0  0419               	decf	??_process_data_parameters,w,c
  1932  0006A2  B4D8               	btfsc	status,2,c
  1933  0006A4  D0E0               	goto	l1465
  1934                           
  1935                           ;SlaveComm_PIC18.c: 344: else if( strmatch( parameters[1], "Volts" ) == 1 )
  1936                           
  1937                           ;SlaveComm_PIC18.c: 340: {
  1938                           ;SlaveComm_PIC18.c: 343: }
  1939  0006A6  0E0A               	movlw	10
  1940  0006A8  2415               	addwf	process_data_parameters@parameters,w,c
  1941  0006AA  6E0C               	movwf	strmatch@a,c
  1942  0006AC  0E00               	movlw	0
  1943  0006AE  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1944  0006B0  6E0D               	movwf	strmatch@a+1,c
  1945  0006B2  0E06               	movlw	high STR_4
  1946  0006B4  6E0F               	movwf	strmatch@b+1,c
  1947  0006B6  0E0F               	movlw	low STR_4
  1948  0006B8  6E0E               	movwf	strmatch@b,c
  1949  0006BA  EC55  F008         	call	_strmatch	;wreg free
  1950  0006BE  6E19               	movwf	??_process_data_parameters& (0+255),c
  1951  0006C0  0419               	decf	??_process_data_parameters,w,c
  1952  0006C2  B4D8               	btfsc	status,2,c
  1953  0006C4  D0D0               	goto	l1465
  1954                           
  1955                           ;SlaveComm_PIC18.c: 349: else if( strmatch( parameters[1], "Current" ) == 1 )
  1956                           
  1957                           ;SlaveComm_PIC18.c: 345: {
  1958                           ;SlaveComm_PIC18.c: 348: }
  1959  0006C6  0E0A               	movlw	10
  1960  0006C8  2415               	addwf	process_data_parameters@parameters,w,c
  1961  0006CA  6E0C               	movwf	strmatch@a,c
  1962  0006CC  0E00               	movlw	0
  1963  0006CE  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1964  0006D0  6E0D               	movwf	strmatch@a+1,c
  1965  0006D2  0E06               	movlw	high STR_5
  1966  0006D4  6E0F               	movwf	strmatch@b+1,c
  1967  0006D6  0E01               	movlw	low STR_5
  1968  0006D8  6E0E               	movwf	strmatch@b,c
  1969  0006DA  EC55  F008         	call	_strmatch	;wreg free
  1970  0006DE  D0C3               	goto	l1465
  1971  0006E0                     l1435:
  1972                           
  1973                           ;SlaveComm_PIC18.c: 356: else if( strmatch( parameters[0], "Read" ) == 1 )
  1974  0006E0  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1975  0006E4  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1976  0006E8  0E06               	movlw	high STR_6
  1977  0006EA  6E0F               	movwf	strmatch@b+1,c
  1978  0006EC  0E1F               	movlw	low STR_6
  1979  0006EE  6E0E               	movwf	strmatch@b,c
  1980  0006F0  EC55  F008         	call	_strmatch	;wreg free
  1981  0006F4  6E19               	movwf	??_process_data_parameters& (0+255),c
  1982  0006F6  0419               	decf	??_process_data_parameters,w,c
  1983  0006F8  A4D8               	btfss	status,2,c
  1984  0006FA  D02D               	goto	l1447
  1985                           
  1986                           ;SlaveComm_PIC18.c: 357: {
  1987                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "Power" ) == 1 )
  1988  0006FC  0E0A               	movlw	10
  1989  0006FE  2415               	addwf	process_data_parameters@parameters,w,c
  1990  000700  6E0C               	movwf	strmatch@a,c
  1991  000702  0E00               	movlw	0
  1992  000704  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1993  000706  6E0D               	movwf	strmatch@a+1,c
  1994  000708  0E06               	movlw	high STR_3
  1995  00070A  6E0F               	movwf	strmatch@b+1,c
  1996  00070C  0E09               	movlw	low STR_3
  1997  00070E  6E0E               	movwf	strmatch@b,c
  1998  000710  EC55  F008         	call	_strmatch	;wreg free
  1999  000714  6E19               	movwf	??_process_data_parameters& (0+255),c
  2000  000716  0419               	decf	??_process_data_parameters,w,c
  2001  000718  B4D8               	btfsc	status,2,c
  2002  00071A  D0A5               	goto	l1465
  2003                           
  2004                           ;SlaveComm_PIC18.c: 363: else if( strmatch( parameters[1], "Volts" ) == 1 )
  2005                           
  2006                           ;SlaveComm_PIC18.c: 360: {
  2007                           ;SlaveComm_PIC18.c: 362: }
  2008  00071C  0E0A               	movlw	10
  2009  00071E  2415               	addwf	process_data_parameters@parameters,w,c
  2010  000720  6E0C               	movwf	strmatch@a,c
  2011  000722  0E00               	movlw	0
  2012  000724  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2013  000726  6E0D               	movwf	strmatch@a+1,c
  2014  000728  0E06               	movlw	high STR_4
  2015  00072A  6E0F               	movwf	strmatch@b+1,c
  2016  00072C  0E0F               	movlw	low STR_4
  2017  00072E  6E0E               	movwf	strmatch@b,c
  2018  000730  EC55  F008         	call	_strmatch	;wreg free
  2019  000734  6E19               	movwf	??_process_data_parameters& (0+255),c
  2020  000736  0419               	decf	??_process_data_parameters,w,c
  2021  000738  B4D8               	btfsc	status,2,c
  2022  00073A  D095               	goto	l1465
  2023                           
  2024                           ;SlaveComm_PIC18.c: 367: else if( strmatch( parameters[1], "Current" ) == 1 )
  2025                           
  2026                           ;SlaveComm_PIC18.c: 364: {
  2027                           ;SlaveComm_PIC18.c: 366: }
  2028  00073C  0E0A               	movlw	10
  2029  00073E  2415               	addwf	process_data_parameters@parameters,w,c
  2030  000740  6E0C               	movwf	strmatch@a,c
  2031  000742  0E00               	movlw	0
  2032  000744  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2033  000746  6E0D               	movwf	strmatch@a+1,c
  2034  000748  0E06               	movlw	high STR_5
  2035  00074A  6E0F               	movwf	strmatch@b+1,c
  2036  00074C  0E01               	movlw	low STR_5
  2037  00074E  6E0E               	movwf	strmatch@b,c
  2038  000750  EC55  F008         	call	_strmatch	;wreg free
  2039  000754  D088               	goto	l1465
  2040  000756                     l1447:
  2041                           
  2042                           ;SlaveComm_PIC18.c: 373: else if( strmatch( parameters[0], "Data" ) == 1 )
  2043  000756  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2044  00075A  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2045  00075E  0E06               	movlw	high STR_10
  2046  000760  6E0F               	movwf	strmatch@b+1,c
  2047  000762  0E1A               	movlw	low STR_10
  2048  000764  6E0E               	movwf	strmatch@b,c
  2049  000766  EC55  F008         	call	_strmatch	;wreg free
  2050  00076A  6E19               	movwf	??_process_data_parameters& (0+255),c
  2051  00076C  0419               	decf	??_process_data_parameters,w,c
  2052  00076E  A4D8               	btfss	status,2,c
  2053  000770  D056               	goto	l1459
  2054                           
  2055                           ;SlaveComm_PIC18.c: 374: {
  2056                           ;SlaveComm_PIC18.c: 375: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2057  000772  0E0A               	movlw	10
  2058  000774  2415               	addwf	process_data_parameters@parameters,w,c
  2059  000776  6E0C               	movwf	strmatch@a,c
  2060  000778  0E00               	movlw	0
  2061  00077A  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2062  00077C  6E0D               	movwf	strmatch@a+1,c
  2063  00077E  0E06               	movlw	high STR_11
  2064  000780  6E0F               	movwf	strmatch@b+1,c
  2065  000782  0E15               	movlw	low STR_11
  2066  000784  6E0E               	movwf	strmatch@b,c
  2067  000786  EC55  F008         	call	_strmatch	;wreg free
  2068  00078A  6E19               	movwf	??_process_data_parameters& (0+255),c
  2069  00078C  0419               	decf	??_process_data_parameters,w,c
  2070  00078E  A4D8               	btfss	status,2,c
  2071  000790  D06A               	goto	l1465
  2072                           
  2073                           ;SlaveComm_PIC18.c: 376: {
  2074                           ;SlaveComm_PIC18.c: 377: if( strmatch( parameters[2], "On" ) == 1 )
  2075  000792  0E14               	movlw	20
  2076  000794  2415               	addwf	process_data_parameters@parameters,w,c
  2077  000796  6E0C               	movwf	strmatch@a,c
  2078  000798  0E00               	movlw	0
  2079  00079A  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2080  00079C  6E0D               	movwf	strmatch@a+1,c
  2081  00079E  0E06               	movlw	high STR_12
  2082  0007A0  6E0F               	movwf	strmatch@b+1,c
  2083  0007A2  0E35               	movlw	low STR_12
  2084  0007A4  6E0E               	movwf	strmatch@b,c
  2085  0007A6  EC55  F008         	call	_strmatch	;wreg free
  2086  0007AA  6E19               	movwf	??_process_data_parameters& (0+255),c
  2087  0007AC  0419               	decf	??_process_data_parameters,w,c
  2088  0007AE  A4D8               	btfss	status,2,c
  2089  0007B0  D013               	goto	l1455
  2090                           
  2091                           ;SlaveComm_PIC18.c: 378: {
  2092                           ;SlaveComm_PIC18.c: 379: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  2093  0007B2  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2094  0007B6  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2095  0007BA  0E06               	movlw	high STR_2
  2096  0007BC  6E10               	movwf	command_builder3@data1+1,c
  2097  0007BE  0E31               	movlw	low STR_2
  2098  0007C0  6E0F               	movwf	command_builder3@data1,c
  2099  0007C2  0E06               	movlw	high STR_11
  2100  0007C4  6E12               	movwf	command_builder3@data2+1,c
  2101  0007C6  0E15               	movlw	low STR_11
  2102  0007C8  6E11               	movwf	command_builder3@data2,c
  2103  0007CA  0E06               	movlw	high STR_15
  2104  0007CC  6E14               	movwf	command_builder3@data3+1,c
  2105  0007CE  0E2D               	movlw	low STR_15
  2106  0007D0  6E13               	movwf	command_builder3@data3,c
  2107  0007D2  ECB2  F006         	call	_command_builder3	;wreg free
  2108                           
  2109                           ;SlaveComm_PIC18.c: 380: }
  2110  0007D6  D047               	goto	l1465
  2111  0007D8                     l1455:
  2112                           
  2113                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[2], "Off" ) == 1 )
  2114  0007D8  0E14               	movlw	20
  2115  0007DA  2415               	addwf	process_data_parameters@parameters,w,c
  2116  0007DC  6E0C               	movwf	strmatch@a,c
  2117  0007DE  0E00               	movlw	0
  2118  0007E0  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2119  0007E2  6E0D               	movwf	strmatch@a+1,c
  2120  0007E4  0E06               	movlw	high STR_15
  2121  0007E6  6E0F               	movwf	strmatch@b+1,c
  2122  0007E8  0E2D               	movlw	low STR_15
  2123  0007EA  6E0E               	movwf	strmatch@b,c
  2124  0007EC  EC55  F008         	call	_strmatch	;wreg free
  2125  0007F0  6E19               	movwf	??_process_data_parameters& (0+255),c
  2126  0007F2  0419               	decf	??_process_data_parameters,w,c
  2127  0007F4  A4D8               	btfss	status,2,c
  2128  0007F6  D037               	goto	l1465
  2129                           
  2130                           ;SlaveComm_PIC18.c: 382: {
  2131                           ;SlaveComm_PIC18.c: 383: command_builder3( send_buffer, "Set", "LEDB", "On" );
  2132  0007F8  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2133  0007FC  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2134  000800  0E06               	movlw	high STR_2
  2135  000802  6E10               	movwf	command_builder3@data1+1,c
  2136  000804  0E31               	movlw	low STR_2
  2137  000806  6E0F               	movwf	command_builder3@data1,c
  2138  000808  0E06               	movlw	high STR_11
  2139  00080A  6E12               	movwf	command_builder3@data2+1,c
  2140  00080C  0E15               	movlw	low STR_11
  2141  00080E  6E11               	movwf	command_builder3@data2,c
  2142  000810  0E06               	movlw	high STR_12
  2143  000812  6E14               	movwf	command_builder3@data3+1,c
  2144  000814  0E35               	movlw	low STR_12
  2145  000816  6E13               	movwf	command_builder3@data3,c
  2146  000818  ECB2  F006         	call	_command_builder3	;wreg free
  2147  00081C  D024               	goto	l1465
  2148  00081E                     l1459:
  2149                           
  2150                           ;SlaveComm_PIC18.c: 387: else if( strmatch( parameters[0], "Conf" ) == 1 )
  2151  00081E  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2152  000822  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2153  000826  0E06               	movlw	high STR_20
  2154  000828  6E0F               	movwf	strmatch@b+1,c
  2155  00082A  0E24               	movlw	low STR_20
  2156  00082C  6E0E               	movwf	strmatch@b,c
  2157  00082E  EC55  F008         	call	_strmatch	;wreg free
  2158  000832  6E19               	movwf	??_process_data_parameters& (0+255),c
  2159  000834  0419               	decf	??_process_data_parameters,w,c
  2160  000836  A4D8               	btfss	status,2,c
  2161  000838  D016               	goto	l1465
  2162                           
  2163                           ;SlaveComm_PIC18.c: 388: {
  2164                           ;SlaveComm_PIC18.c: 390: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2165  00083A  0E0A               	movlw	10
  2166  00083C  2415               	addwf	process_data_parameters@parameters,w,c
  2167  00083E  6E0C               	movwf	strmatch@a,c
  2168  000840  0E00               	movlw	0
  2169  000842  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2170  000844  6E0D               	movwf	strmatch@a+1,c
  2171  000846  0E06               	movlw	high STR_11
  2172  000848  6E0F               	movwf	strmatch@b+1,c
  2173  00084A  0E15               	movlw	low STR_11
  2174  00084C  6E0E               	movwf	strmatch@b,c
  2175  00084E  EC55  F008         	call	_strmatch	;wreg free
  2176  000852  6E19               	movwf	??_process_data_parameters& (0+255),c
  2177  000854  0419               	decf	??_process_data_parameters,w,c
  2178  000856  A4D8               	btfss	status,2,c
  2179  000858  D006               	goto	l1465
  2180                           
  2181                           ;SlaveComm_PIC18.c: 391: {
  2182                           ;SlaveComm_PIC18.c: 393: send_end_of_transmission( send_buffer );
  2183  00085A  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2184  00085E  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2185  000862  ECE8  F008         	call	_send_end_of_transmission	;wreg free
  2186  000866                     l1465:
  2187                           
  2188                           ;SlaveComm_PIC18.c: 394: }
  2189                           ;SlaveComm_PIC18.c: 395: }
  2190                           ;SlaveComm_PIC18.c: 401: return end_of_transmission_received;
  2191  000866  501A               	movf	process_data_parameters@end_of_transmission_received,w,c
  2192  000868  0012               	return	
  2193  00086A                     __end_of_process_data_parameters:
  2194                           	opt stack 0
  2195                           tblptru	equ	0xFF8
  2196                           prodh	equ	0xFF4
  2197                           prodl	equ	0xFF3
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           indf1	equ	0xFE7
  2201                           fsr1h	equ	0xFE2
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function _strmatch *****************
  2209 ;; Defined at:
  2210 ;;		line 515 in file "SlaveComm_PIC18.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  a               2   11[COMRAM] PTR unsigned char 
  2213 ;;		 -> process_data@parameters(50), 
  2214 ;;  b               2   13[COMRAM] PTR unsigned char 
  2215 ;;		 -> STR_21(5), STR_20(5), STR_16(4), STR_12(3), 
  2216 ;;		 -> STR_11(5), STR_10(5), STR_9(8), STR_8(6), 
  2217 ;;		 -> STR_7(6), STR_6(5), STR_5(8), STR_4(6), 
  2218 ;;		 -> STR_3(6), STR_2(4), STR_1(4), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  result          2   15[COMRAM] int 
  2221 ;;  match           1   17[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         4       0       0       0       0       0       0
  2232 ;;      Locals:         3       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0
  2234 ;;      Totals:         7       0       0       0       0       0       0
  2235 ;;Total ram usage:        7 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    1
  2238 ;; This function calls:
  2239 ;;		_strcmp2
  2240 ;; This function is called by:
  2241 ;;		_process_data_parameters
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text13
  2246  0010AA                     __ptext13:
  2247                           	opt stack 0
  2248  0010AA                     _strmatch:
  2249                           	opt stack 26
  2250                           
  2251                           ;SlaveComm_PIC18.c: 517: int result;
  2252                           ;SlaveComm_PIC18.c: 518: bool match;
  2253                           ;SlaveComm_PIC18.c: 520: result = strcmp2( a, b );
  2254                           
  2255                           ;incstack = 0
  2256  0010AA  C00D  F002         	movff	strmatch@a+1,strcmp2@a+1
  2257  0010AE  C00C  F001         	movff	strmatch@a,strcmp2@a
  2258  0010B2  C00F  F004         	movff	strmatch@b+1,strcmp2@b+1
  2259  0010B6  C00E  F003         	movff	strmatch@b,strcmp2@b
  2260  0010BA  ECF1  F004         	call	_strcmp2	;wreg free
  2261  0010BE  C001  F010         	movff	?_strcmp2,strmatch@result
  2262  0010C2  C002  F011         	movff	?_strcmp2+1,strmatch@result+1
  2263                           
  2264                           ;SlaveComm_PIC18.c: 522: match = ( result == 0 ) ? 1 : 0;
  2265  0010C6  5011               	movf	strmatch@result+1,w,c
  2266  0010C8  1010               	iorwf	strmatch@result,w,c
  2267  0010CA  A4D8               	btfss	status,2,c
  2268  0010CC  D002               	goto	u690
  2269  0010CE  0E01               	movlw	1
  2270  0010D0  D001               	goto	u696
  2271  0010D2                     u690:
  2272  0010D2  0E00               	movlw	0
  2273  0010D4                     u696:
  2274  0010D4  6E12               	movwf	strmatch@match,c
  2275                           
  2276                           ;SlaveComm_PIC18.c: 524: return match;
  2277  0010D6  5012               	movf	strmatch@match,w,c
  2278  0010D8  0012               	return	
  2279  0010DA                     __end_of_strmatch:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           prodh	equ	0xFF4
  2283                           prodl	equ	0xFF3
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf1	equ	0xFE7
  2287                           fsr1h	equ	0xFE2
  2288                           fsr1l	equ	0xFE1
  2289                           indf2	equ	0xFDF
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294 ;; *************** function _strcmp2 *****************
  2295 ;; Defined at:
  2296 ;;		line 527 in file "SlaveComm_PIC18.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  a               2    0[COMRAM] PTR unsigned char 
  2299 ;;		 -> process_data@parameters(50), 
  2300 ;;  b               2    2[COMRAM] PTR unsigned char 
  2301 ;;		 -> STR_21(5), STR_20(5), STR_16(4), STR_12(3), 
  2302 ;;		 -> STR_11(5), STR_10(5), STR_9(8), STR_8(6), 
  2303 ;;		 -> STR_7(6), STR_6(5), STR_5(8), STR_4(6), 
  2304 ;;		 -> STR_3(6), STR_2(4), STR_1(4), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  inx             2    9[COMRAM] int 
  2307 ;;  match           2    7[COMRAM] int 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2    0[COMRAM] int 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         4       0       0       0       0       0       0
  2318 ;;      Locals:         4       0       0       0       0       0       0
  2319 ;;      Temps:          3       0       0       0       0       0       0
  2320 ;;      Totals:        11       0       0       0       0       0       0
  2321 ;;Total ram usage:       11 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_strmatch
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text14
  2331  0009E2                     __ptext14:
  2332                           	opt stack 0
  2333  0009E2                     _strcmp2:
  2334                           	opt stack 26
  2335                           
  2336                           ;SlaveComm_PIC18.c: 529: int inx = 0;
  2337                           
  2338                           ;incstack = 0
  2339  0009E2  0E00               	movlw	0
  2340  0009E4  6E0B               	movwf	strcmp2@inx+1,c
  2341  0009E6  0E00               	movlw	0
  2342  0009E8  6E0A               	movwf	strcmp2@inx,c
  2343                           
  2344                           ;SlaveComm_PIC18.c: 530: int match = 0;
  2345  0009EA  0E00               	movlw	0
  2346  0009EC  6E09               	movwf	strcmp2@match+1,c
  2347  0009EE  0E00               	movlw	0
  2348  0009F0  6E08               	movwf	strcmp2@match,c
  2349                           
  2350                           ;SlaveComm_PIC18.c: 532: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  2351  0009F2  D03B               	goto	l1289
  2352  0009F4                     l1277:
  2353                           
  2354                           ;SlaveComm_PIC18.c: 533: {
  2355                           ;SlaveComm_PIC18.c: 534: if( a[inx] > b[inx] )
  2356  0009F4  C003  F005         	movff	strcmp2@b,??_strcmp2
  2357  0009F8  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2358  0009FC  500A               	movf	strcmp2@inx,w,c
  2359  0009FE  2605               	addwf	??_strcmp2,f,c
  2360  000A00  500B               	movf	strcmp2@inx+1,w,c
  2361  000A02  2206               	addwfc	??_strcmp2+1,f,c
  2362  000A04  C005  FFF6         	movff	??_strcmp2,tblptrl
  2363  000A08  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2364  000A0C                     	if	0	;tblptru may be non-zero
  2365  000A0C                     	endif
  2366  000A0C                     	if	0	;tblptru may be non-zero
  2367  000A0C                     	endif
  2368  000A0C  0008               	tblrd		*
  2369  000A0E  CFF5 F007          	movff	tablat,??_strcmp2+2
  2370  000A12  500A               	movf	strcmp2@inx,w,c
  2371  000A14  2401               	addwf	strcmp2@a,w,c
  2372  000A16  6ED9               	movwf	fsr2l,c
  2373  000A18  500B               	movf	strcmp2@inx+1,w,c
  2374  000A1A  2002               	addwfc	strcmp2@a+1,w,c
  2375  000A1C  6EDA               	movwf	fsr2h,c
  2376  000A1E  50DF               	movf	indf2,w,c
  2377  000A20  5C07               	subwf	??_strcmp2+2,w,c
  2378  000A22  B0D8               	btfsc	status,0,c
  2379  000A24  D005               	goto	l1281
  2380                           
  2381                           ;SlaveComm_PIC18.c: 535: {
  2382                           ;SlaveComm_PIC18.c: 536: match = 1;
  2383  000A26  0E00               	movlw	0
  2384  000A28  6E09               	movwf	strcmp2@match+1,c
  2385  000A2A  0E01               	movlw	1
  2386  000A2C  6E08               	movwf	strcmp2@match,c
  2387                           
  2388                           ;SlaveComm_PIC18.c: 537: }
  2389  000A2E  D01B               	goto	l1287
  2390  000A30                     l1281:
  2391                           
  2392                           ;SlaveComm_PIC18.c: 538: else if( a[inx] < b[inx] )
  2393  000A30  500A               	movf	strcmp2@inx,w,c
  2394  000A32  2401               	addwf	strcmp2@a,w,c
  2395  000A34  6ED9               	movwf	fsr2l,c
  2396  000A36  500B               	movf	strcmp2@inx+1,w,c
  2397  000A38  2002               	addwfc	strcmp2@a+1,w,c
  2398  000A3A  6EDA               	movwf	fsr2h,c
  2399  000A3C  50DF               	movf	indf2,w,c
  2400  000A3E  6E05               	movwf	??_strcmp2& (0+255),c
  2401  000A40  C003  F006         	movff	strcmp2@b,??_strcmp2+1
  2402  000A44  C004  F007         	movff	strcmp2@b+1,??_strcmp2+2
  2403  000A48  500A               	movf	strcmp2@inx,w,c
  2404  000A4A  2606               	addwf	??_strcmp2+1,f,c
  2405  000A4C  500B               	movf	strcmp2@inx+1,w,c
  2406  000A4E  2207               	addwfc	??_strcmp2+2,f,c
  2407  000A50  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  2408  000A54  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  2409  000A58                     	if	0	;tblptru may be non-zero
  2410  000A58                     	endif
  2411  000A58                     	if	0	;tblptru may be non-zero
  2412  000A58                     	endif
  2413  000A58  0008               	tblrd		*
  2414  000A5A  50F5               	movf	tablat,w,c
  2415  000A5C  5C05               	subwf	??_strcmp2,w,c
  2416  000A5E  B0D8               	btfsc	status,0,c
  2417  000A60  D002               	goto	l1287
  2418                           
  2419                           ;SlaveComm_PIC18.c: 539: {
  2420                           ;SlaveComm_PIC18.c: 540: match = -1;
  2421  000A62  6808               	setf	strcmp2@match,c
  2422  000A64  6809               	setf	strcmp2@match+1,c
  2423  000A66                     l1287:
  2424                           
  2425                           ;SlaveComm_PIC18.c: 545: }
  2426                           ;SlaveComm_PIC18.c: 547: inx++;
  2427  000A66  4A0A               	infsnz	strcmp2@inx,f,c
  2428  000A68  2A0B               	incf	strcmp2@inx+1,f,c
  2429  000A6A                     l1289:
  2430  000A6A  500A               	movf	strcmp2@inx,w,c
  2431  000A6C  2401               	addwf	strcmp2@a,w,c
  2432  000A6E  6ED9               	movwf	fsr2l,c
  2433  000A70  500B               	movf	strcmp2@inx+1,w,c
  2434  000A72  2002               	addwfc	strcmp2@a+1,w,c
  2435  000A74  6EDA               	movwf	fsr2h,c
  2436  000A76  50DF               	movf	indf2,w,c
  2437  000A78  B4D8               	btfsc	status,2,c
  2438  000A7A  D015               	goto	l1295
  2439  000A7C  C003  F005         	movff	strcmp2@b,??_strcmp2
  2440  000A80  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2441  000A84  500A               	movf	strcmp2@inx,w,c
  2442  000A86  2605               	addwf	??_strcmp2,f,c
  2443  000A88  500B               	movf	strcmp2@inx+1,w,c
  2444  000A8A  2206               	addwfc	??_strcmp2+1,f,c
  2445  000A8C  C005  FFF6         	movff	??_strcmp2,tblptrl
  2446  000A90  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2447  000A94                     	if	0	;tblptru may be non-zero
  2448  000A94                     	endif
  2449  000A94                     	if	0	;tblptru may be non-zero
  2450  000A94                     	endif
  2451  000A94  0008               	tblrd		*
  2452  000A96  50F5               	movf	tablat,w,c
  2453  000A98  0900               	iorlw	0
  2454  000A9A  B4D8               	btfsc	status,2,c
  2455  000A9C  D004               	goto	l1295
  2456  000A9E  5009               	movf	strcmp2@match+1,w,c
  2457  000AA0  1008               	iorwf	strcmp2@match,w,c
  2458  000AA2  B4D8               	btfsc	status,2,c
  2459  000AA4  D7A7               	goto	l1277
  2460  000AA6                     l1295:
  2461                           
  2462                           ;SlaveComm_PIC18.c: 548: }
  2463                           ;SlaveComm_PIC18.c: 551: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  2464  000AA6  500A               	movf	strcmp2@inx,w,c
  2465  000AA8  2401               	addwf	strcmp2@a,w,c
  2466  000AAA  6ED9               	movwf	fsr2l,c
  2467  000AAC  500B               	movf	strcmp2@inx+1,w,c
  2468  000AAE  2002               	addwfc	strcmp2@a+1,w,c
  2469  000AB0  6EDA               	movwf	fsr2h,c
  2470  000AB2  50DF               	movf	indf2,w,c
  2471  000AB4  A4D8               	btfss	status,2,c
  2472  000AB6  D014               	goto	l1301
  2473  000AB8  C003  F005         	movff	strcmp2@b,??_strcmp2
  2474  000ABC  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2475  000AC0  500A               	movf	strcmp2@inx,w,c
  2476  000AC2  2605               	addwf	??_strcmp2,f,c
  2477  000AC4  500B               	movf	strcmp2@inx+1,w,c
  2478  000AC6  2206               	addwfc	??_strcmp2+1,f,c
  2479  000AC8  C005  FFF6         	movff	??_strcmp2,tblptrl
  2480  000ACC  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2481  000AD0                     	if	0	;tblptru may be non-zero
  2482  000AD0                     	endif
  2483  000AD0                     	if	0	;tblptru may be non-zero
  2484  000AD0                     	endif
  2485  000AD0  0008               	tblrd		*
  2486  000AD2  50F5               	movf	tablat,w,c
  2487  000AD4  0900               	iorlw	0
  2488  000AD6  B4D8               	btfsc	status,2,c
  2489  000AD8  D003               	goto	l1301
  2490                           
  2491                           ;SlaveComm_PIC18.c: 552: {
  2492                           ;SlaveComm_PIC18.c: 553: match = -1;
  2493  000ADA  6808               	setf	strcmp2@match,c
  2494  000ADC  6809               	setf	strcmp2@match+1,c
  2495                           
  2496                           ;SlaveComm_PIC18.c: 554: }
  2497  000ADE  D01E               	goto	l1307
  2498  000AE0                     l1301:
  2499                           
  2500                           ;SlaveComm_PIC18.c: 555: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  2501  000AE0  500A               	movf	strcmp2@inx,w,c
  2502  000AE2  2401               	addwf	strcmp2@a,w,c
  2503  000AE4  6ED9               	movwf	fsr2l,c
  2504  000AE6  500B               	movf	strcmp2@inx+1,w,c
  2505  000AE8  2002               	addwfc	strcmp2@a+1,w,c
  2506  000AEA  6EDA               	movwf	fsr2h,c
  2507  000AEC  50DF               	movf	indf2,w,c
  2508  000AEE  B4D8               	btfsc	status,2,c
  2509  000AF0  D015               	goto	l1307
  2510  000AF2  C003  F005         	movff	strcmp2@b,??_strcmp2
  2511  000AF6  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2512  000AFA  500A               	movf	strcmp2@inx,w,c
  2513  000AFC  2605               	addwf	??_strcmp2,f,c
  2514  000AFE  500B               	movf	strcmp2@inx+1,w,c
  2515  000B00  2206               	addwfc	??_strcmp2+1,f,c
  2516  000B02  C005  FFF6         	movff	??_strcmp2,tblptrl
  2517  000B06  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2518  000B0A                     	if	0	;tblptru may be non-zero
  2519  000B0A                     	endif
  2520  000B0A                     	if	0	;tblptru may be non-zero
  2521  000B0A                     	endif
  2522  000B0A  0008               	tblrd		*
  2523  000B0C  50F5               	movf	tablat,w,c
  2524  000B0E  0900               	iorlw	0
  2525  000B10  A4D8               	btfss	status,2,c
  2526  000B12  D004               	goto	l1307
  2527                           
  2528                           ;SlaveComm_PIC18.c: 556: {
  2529                           ;SlaveComm_PIC18.c: 557: match = 1;
  2530  000B14  0E00               	movlw	0
  2531  000B16  6E09               	movwf	strcmp2@match+1,c
  2532  000B18  0E01               	movlw	1
  2533  000B1A  6E08               	movwf	strcmp2@match,c
  2534  000B1C                     l1307:
  2535                           
  2536                           ;SlaveComm_PIC18.c: 558: }
  2537                           ;SlaveComm_PIC18.c: 560: return match;
  2538  000B1C  C008  F001         	movff	strcmp2@match,?_strcmp2
  2539  000B20  C009  F002         	movff	strcmp2@match+1,?_strcmp2+1
  2540  000B24  0012               	return	
  2541  000B26                     __end_of_strcmp2:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           postinc0	equ	0xFEE
  2550                           wreg	equ	0xFE8
  2551                           indf1	equ	0xFE7
  2552                           fsr1h	equ	0xFE2
  2553                           fsr1l	equ	0xFE1
  2554                           indf2	equ	0xFDF
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function _send_end_of_transmission *****************
  2560 ;; Defined at:
  2561 ;;		line 606 in file "SlaveComm_PIC18.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  2564 ;;		 -> communications@send_buffer(42), 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2576 ;;      Params:         2       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0
  2579 ;;      Totals:         2       0       0       0       0       0       0
  2580 ;;Total ram usage:        2 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    3
  2583 ;; This function calls:
  2584 ;;		_command_builder1
  2585 ;; This function is called by:
  2586 ;;		_process_data_parameters
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text15
  2591  0011D0                     __ptext15:
  2592                           	opt stack 0
  2593  0011D0                     _send_end_of_transmission:
  2594                           	opt stack 24
  2595                           
  2596                           ;SlaveComm_PIC18.c: 608: command_builder1( send_buffer, "END" );
  2597                           
  2598                           ;incstack = 0
  2599  0011D0  C012  F00E         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  2600  0011D4  C011  F00D         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  2601  0011D8  0E06               	movlw	high STR_1
  2602  0011DA  6E10               	movwf	command_builder1@data1+1,c
  2603  0011DC  0E29               	movlw	low STR_1
  2604  0011DE  6E0F               	movwf	command_builder1@data1,c
  2605  0011E0  EC77  F007         	call	_command_builder1	;wreg free
  2606  0011E4  0012               	return	
  2607  0011E6                     __end_of_send_end_of_transmission:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           indf1	equ	0xFE7
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           indf2	equ	0xFDF
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _command_builder1 *****************
  2626 ;; Defined at:
  2627 ;;		line 404 in file "SlaveComm_PIC18.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  2630 ;;		 -> communications@send_buffer(42), 
  2631 ;;  data1           2   14[COMRAM] PTR unsigned char 
  2632 ;;		 -> STR_22(4), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;		None               void
  2637 ;; Registers used:
  2638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2644 ;;      Params:         4       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0
  2647 ;;      Totals:         4       0       0       0       0       0       0
  2648 ;;Total ram usage:        4 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    2
  2651 ;; This function calls:
  2652 ;;		_command_builder_add_char
  2653 ;;		_command_builder_add_string
  2654 ;; This function is called by:
  2655 ;;		_send_end_of_transmission
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text16
  2660  000EEE                     __ptext16:
  2661                           	opt stack 0
  2662  000EEE                     _command_builder1:
  2663                           	opt stack 24
  2664                           
  2665                           ;SlaveComm_PIC18.c: 406: command_builder_add_char( send_buffer, '#' );
  2666                           
  2667                           ;incstack = 0
  2668  000EEE  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2669  000EF2  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2670  000EF6  0E23               	movlw	35
  2671  000EF8  6E03               	movwf	command_builder_add_char@data,c
  2672  000EFA  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2673                           
  2674                           ;SlaveComm_PIC18.c: 407: command_builder_add_char( send_buffer, '#' );
  2675  000EFE  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2676  000F02  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2677  000F06  0E23               	movlw	35
  2678  000F08  6E03               	movwf	command_builder_add_char@data,c
  2679  000F0A  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2680                           
  2681                           ;SlaveComm_PIC18.c: 408: command_builder_add_char( send_buffer, '!' );
  2682  000F0E  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2683  000F12  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2684  000F16  0E21               	movlw	33
  2685  000F18  6E03               	movwf	command_builder_add_char@data,c
  2686  000F1A  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2687                           
  2688                           ;SlaveComm_PIC18.c: 409: command_builder_add_string( send_buffer, data1 );
  2689  000F1E  C00E  F006         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  2690  000F22  C00D  F005         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  2691  000F26  C010  F008         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  2692  000F2A  C00F  F007         	movff	command_builder1@data1,command_builder_add_string@data_string
  2693  000F2E  EC49  F007         	call	_command_builder_add_string	;wreg free
  2694                           
  2695                           ;SlaveComm_PIC18.c: 410: command_builder_add_char( send_buffer, '*' );
  2696  000F32  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2697  000F36  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2698  000F3A  0E2A               	movlw	42
  2699  000F3C  6E03               	movwf	command_builder_add_char@data,c
  2700  000F3E  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2701  000F42  0012               	return	
  2702  000F44                     __end_of_command_builder1:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           prodh	equ	0xFF4
  2709                           prodl	equ	0xFF3
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf1	equ	0xFE7
  2713                           fsr1h	equ	0xFE2
  2714                           fsr1l	equ	0xFE1
  2715                           indf2	equ	0xFDF
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720 ;; *************** function _command_builder3 *****************
  2721 ;; Defined at:
  2722 ;;		line 432 in file "SlaveComm_PIC18.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  2725 ;;		 -> communications@send_buffer(42), 
  2726 ;;  data1           2   14[COMRAM] PTR unsigned char 
  2727 ;;		 -> STR_17(4), STR_13(4), 
  2728 ;;  data2           2   16[COMRAM] PTR unsigned char 
  2729 ;;		 -> STR_18(5), STR_14(5), 
  2730 ;;  data3           2   18[COMRAM] PTR unsigned char 
  2731 ;;		 -> STR_19(3), STR_15(4), 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         8       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0
  2746 ;;      Totals:         8       0       0       0       0       0       0
  2747 ;;Total ram usage:        8 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    2
  2750 ;; This function calls:
  2751 ;;		_command_builder_add_char
  2752 ;;		_command_builder_add_string
  2753 ;; This function is called by:
  2754 ;;		_process_data_parameters
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text17
  2759  000D64                     __ptext17:
  2760                           	opt stack 0
  2761  000D64                     _command_builder3:
  2762                           	opt stack 25
  2763                           
  2764                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '#' );
  2765                           
  2766                           ;incstack = 0
  2767  000D64  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2768  000D68  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2769  000D6C  0E23               	movlw	35
  2770  000D6E  6E03               	movwf	command_builder_add_char@data,c
  2771  000D70  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2772                           
  2773                           ;SlaveComm_PIC18.c: 435: command_builder_add_char( send_buffer, '#' );
  2774  000D74  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2775  000D78  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2776  000D7C  0E23               	movlw	35
  2777  000D7E  6E03               	movwf	command_builder_add_char@data,c
  2778  000D80  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2779                           
  2780                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, '!' );
  2781  000D84  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2782  000D88  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2783  000D8C  0E21               	movlw	33
  2784  000D8E  6E03               	movwf	command_builder_add_char@data,c
  2785  000D90  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2786                           
  2787                           ;SlaveComm_PIC18.c: 437: command_builder_add_string( send_buffer, data1 );
  2788  000D94  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2789  000D98  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2790  000D9C  C010  F008         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  2791  000DA0  C00F  F007         	movff	command_builder3@data1,command_builder_add_string@data_string
  2792  000DA4  EC49  F007         	call	_command_builder_add_string	;wreg free
  2793                           
  2794                           ;SlaveComm_PIC18.c: 438: command_builder_add_char( send_buffer, ';' );
  2795  000DA8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2796  000DAC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2797  000DB0  0E3B               	movlw	59
  2798  000DB2  6E03               	movwf	command_builder_add_char@data,c
  2799  000DB4  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2800                           
  2801                           ;SlaveComm_PIC18.c: 439: command_builder_add_string( send_buffer, data2 );
  2802  000DB8  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2803  000DBC  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2804  000DC0  C012  F008         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  2805  000DC4  C011  F007         	movff	command_builder3@data2,command_builder_add_string@data_string
  2806  000DC8  EC49  F007         	call	_command_builder_add_string	;wreg free
  2807                           
  2808                           ;SlaveComm_PIC18.c: 440: command_builder_add_char( send_buffer, ';' );
  2809  000DCC  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2810  000DD0  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2811  000DD4  0E3B               	movlw	59
  2812  000DD6  6E03               	movwf	command_builder_add_char@data,c
  2813  000DD8  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2814                           
  2815                           ;SlaveComm_PIC18.c: 441: command_builder_add_string( send_buffer, data3 );
  2816  000DDC  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2817  000DE0  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2818  000DE4  C014  F008         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  2819  000DE8  C013  F007         	movff	command_builder3@data3,command_builder_add_string@data_string
  2820  000DEC  EC49  F007         	call	_command_builder_add_string	;wreg free
  2821                           
  2822                           ;SlaveComm_PIC18.c: 442: command_builder_add_char( send_buffer, '*' );
  2823  000DF0  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2824  000DF4  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2825  000DF8  0E2A               	movlw	42
  2826  000DFA  6E03               	movwf	command_builder_add_char@data,c
  2827  000DFC  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2828  000E00  0012               	return	
  2829  000E02                     __end_of_command_builder3:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           indf1	equ	0xFE7
  2840                           fsr1h	equ	0xFE2
  2841                           fsr1l	equ	0xFE1
  2842                           indf2	equ	0xFDF
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847 ;; *************** function _command_builder_add_string *****************
  2848 ;; Defined at:
  2849 ;;		line 477 in file "SlaveComm_PIC18.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  send_buffer     2    4[COMRAM] PTR struct buffer
  2852 ;;		 -> communications@send_buffer(42), 
  2853 ;;  data_string     2    6[COMRAM] PTR unsigned char 
  2854 ;;		 -> STR_24(5), STR_23(5), STR_22(4), STR_19(3), 
  2855 ;;		 -> STR_18(5), STR_17(4), STR_15(4), STR_14(5), 
  2856 ;;		 -> STR_13(4), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  inx             2   10[COMRAM] int 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2868 ;;      Params:         4       0       0       0       0       0       0
  2869 ;;      Locals:         2       0       0       0       0       0       0
  2870 ;;      Temps:          2       0       0       0       0       0       0
  2871 ;;      Totals:         8       0       0       0       0       0       0
  2872 ;;Total ram usage:        8 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    1
  2875 ;; This function calls:
  2876 ;;		_command_builder_add_char
  2877 ;; This function is called by:
  2878 ;;		_command_builder1
  2879 ;;		_command_builder2
  2880 ;;		_command_builder3
  2881 ;;		_command_builder4
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text18
  2886  000E92                     __ptext18:
  2887                           	opt stack 0
  2888  000E92                     _command_builder_add_string:
  2889                           	opt stack 25
  2890                           
  2891                           ;SlaveComm_PIC18.c: 479: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  2892                           
  2893                           ;incstack = 0
  2894  000E92  0E00               	movlw	0
  2895  000E94  6E0C               	movwf	command_builder_add_string@inx+1,c
  2896  000E96  0E00               	movlw	0
  2897  000E98  6E0B               	movwf	command_builder_add_string@inx,c
  2898  000E9A  D017               	goto	l1265
  2899  000E9C                     l1261:
  2900                           
  2901                           ;SlaveComm_PIC18.c: 480: {
  2902                           ;SlaveComm_PIC18.c: 481: command_builder_add_char( send_buffer, data_string[inx] );
  2903  000E9C  C006  F002         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  2904  000EA0  C005  F001         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  2905  000EA4  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  2906  000EA8  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  2907  000EAC  500B               	movf	command_builder_add_string@inx,w,c
  2908  000EAE  2609               	addwf	??_command_builder_add_string,f,c
  2909  000EB0  500C               	movf	command_builder_add_string@inx+1,w,c
  2910  000EB2  220A               	addwfc	??_command_builder_add_string+1,f,c
  2911  000EB4  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  2912  000EB8  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  2913  000EBC                     	if	0	;tblptru may be non-zero
  2914  000EBC                     	endif
  2915  000EBC                     	if	0	;tblptru may be non-zero
  2916  000EBC                     	endif
  2917  000EBC  0008               	tblrd		*
  2918  000EBE  CFF5 F003          	movff	tablat,command_builder_add_char@data
  2919  000EC2  ECA2  F007         	call	_command_builder_add_char	;wreg free
  2920  000EC6  4A0B               	infsnz	command_builder_add_string@inx,f,c
  2921  000EC8  2A0C               	incf	command_builder_add_string@inx+1,f,c
  2922  000ECA                     l1265:
  2923  000ECA  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  2924  000ECE  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  2925  000ED2  500B               	movf	command_builder_add_string@inx,w,c
  2926  000ED4  2609               	addwf	??_command_builder_add_string,f,c
  2927  000ED6  500C               	movf	command_builder_add_string@inx+1,w,c
  2928  000ED8  220A               	addwfc	??_command_builder_add_string+1,f,c
  2929  000EDA  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  2930  000EDE  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  2931  000EE2                     	if	0	;tblptru may be non-zero
  2932  000EE2                     	endif
  2933  000EE2                     	if	0	;tblptru may be non-zero
  2934  000EE2                     	endif
  2935  000EE2  0008               	tblrd		*
  2936  000EE4  50F5               	movf	tablat,w,c
  2937  000EE6  0900               	iorlw	0
  2938  000EE8  B4D8               	btfsc	status,2,c
  2939                           
  2940                           ;SlaveComm_PIC18.c: 482: }
  2941                           ;SlaveComm_PIC18.c: 484: return;
  2942  000EEA  0012               	return	
  2943  000EEC  D7D7               	goto	l1261
  2944  000EEE                     __end_of_command_builder_add_string:
  2945                           	opt stack 0
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           prodh	equ	0xFF4
  2951                           prodl	equ	0xFF3
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           indf1	equ	0xFE7
  2955                           fsr1h	equ	0xFE2
  2956                           fsr1l	equ	0xFE1
  2957                           indf2	equ	0xFDF
  2958                           fsr2h	equ	0xFDA
  2959                           fsr2l	equ	0xFD9
  2960                           status	equ	0xFD8
  2961                           
  2962 ;; *************** function _command_builder_add_char *****************
  2963 ;; Defined at:
  2964 ;;		line 464 in file "SlaveComm_PIC18.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  send_buffer     2    0[COMRAM] PTR struct buffer
  2967 ;;		 -> communications@send_buffer(42), 
  2968 ;;  data            1    2[COMRAM] unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2980 ;;      Params:         3       0       0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0       0       0
  2983 ;;      Totals:         4       0       0       0       0       0       0
  2984 ;;Total ram usage:        4 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_command_builder1
  2990 ;;		_command_builder2
  2991 ;;		_command_builder3
  2992 ;;		_command_builder_add_string
  2993 ;;		_command_builder4
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text19
  2998  000F44                     __ptext19:
  2999                           	opt stack 0
  3000  000F44                     _command_builder_add_char:
  3001                           	opt stack 25
  3002                           
  3003                           ;SlaveComm_PIC18.c: 466: send_buffer->data_buffer[send_buffer->write_position] = data;
  3004                           
  3005                           ;incstack = 0
  3006  000F44  EE20 F028          	lfsr	2,40
  3007  000F48  5001               	movf	command_builder_add_char@send_buffer,w,c
  3008  000F4A  26D9               	addwf	fsr2l,f,c
  3009  000F4C  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3010  000F4E  22DA               	addwfc	fsr2h,f,c
  3011  000F50  50DF               	movf	indf2,w,c
  3012  000F52  6E04               	movwf	??_command_builder_add_char& (0+255),c
  3013  000F54  5004               	movf	??_command_builder_add_char,w,c
  3014  000F56  0D01               	mullw	1
  3015  000F58  50F3               	movf	prodl,w,c
  3016  000F5A  2401               	addwf	command_builder_add_char@send_buffer,w,c
  3017  000F5C  6ED9               	movwf	fsr2l,c
  3018  000F5E  50F4               	movf	prodh,w,c
  3019  000F60  2002               	addwfc	command_builder_add_char@send_buffer+1,w,c
  3020  000F62  6EDA               	movwf	fsr2h,c
  3021  000F64  C003  FFDF         	movff	command_builder_add_char@data,indf2
  3022                           
  3023                           ;SlaveComm_PIC18.c: 468: send_buffer->write_position++;
  3024  000F68  EE20 F028          	lfsr	2,40
  3025  000F6C  5001               	movf	command_builder_add_char@send_buffer,w,c
  3026  000F6E  26D9               	addwf	fsr2l,f,c
  3027  000F70  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3028  000F72  22DA               	addwfc	fsr2h,f,c
  3029  000F74  2ADF               	incf	indf2,f,c
  3030                           
  3031                           ;SlaveComm_PIC18.c: 469: if( send_buffer->write_position >= 40 )
  3032  000F76  EE20 F028          	lfsr	2,40
  3033  000F7A  5001               	movf	command_builder_add_char@send_buffer,w,c
  3034  000F7C  26D9               	addwf	fsr2l,f,c
  3035  000F7E  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3036  000F80  22DA               	addwfc	fsr2h,f,c
  3037  000F82  0E27               	movlw	39
  3038  000F84  64DF               	cpfsgt	indf2,c
  3039  000F86  0012               	return	
  3040                           
  3041                           ;SlaveComm_PIC18.c: 470: {
  3042                           ;SlaveComm_PIC18.c: 471: send_buffer->write_position = 0;
  3043  000F88  EE20 F028          	lfsr	2,40
  3044  000F8C  5001               	movf	command_builder_add_char@send_buffer,w,c
  3045  000F8E  26D9               	addwf	fsr2l,f,c
  3046  000F90  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3047  000F92  22DA               	addwfc	fsr2h,f,c
  3048  000F94  0E00               	movlw	0
  3049  000F96  6EDF               	movwf	indf2,c
  3050  000F98  0012               	return	
  3051  000F9A                     __end_of_command_builder_add_char:
  3052                           	opt stack 0
  3053                           tblptru	equ	0xFF8
  3054                           tblptrh	equ	0xFF7
  3055                           tblptrl	equ	0xFF6
  3056                           tablat	equ	0xFF5
  3057                           prodh	equ	0xFF4
  3058                           prodl	equ	0xFF3
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           indf1	equ	0xFE7
  3062                           fsr1h	equ	0xFE2
  3063                           fsr1l	equ	0xFE1
  3064                           indf2	equ	0xFDF
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _process_data_parameterize *****************
  3070 ;; Defined at:
  3071 ;;		line 253 in file "SlaveComm_PIC18.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  parameters      2    6[COMRAM] PTR unsigned char [10]
  3074 ;;		 -> process_data@parameters(50), 
  3075 ;;  buffer_to_pa    2    8[COMRAM] PTR struct buffer
  3076 ;;		 -> communications@receive_buffer(42), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  inx             2   13[COMRAM] int 
  3079 ;;  parameter_po    1   16[COMRAM] unsigned char 
  3080 ;;  parameter_in    1   15[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3090 ;;      Params:         4       0       0       0       0       0       0
  3091 ;;      Locals:         4       0       0       0       0       0       0
  3092 ;;      Temps:          3       0       0       0       0       0       0
  3093 ;;      Totals:        11       0       0       0       0       0       0
  3094 ;;Total ram usage:       11 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		___wmul
  3099 ;; This function is called by:
  3100 ;;		_process_data
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text20
  3105  00086A                     __ptext20:
  3106                           	opt stack 0
  3107  00086A                     _process_data_parameterize:
  3108                           	opt stack 27
  3109                           
  3110                           ;SlaveComm_PIC18.c: 255: unsigned char parameter_position = 0;
  3111                           
  3112                           ;incstack = 0
  3113  00086A  0E00               	movlw	0
  3114  00086C  6E11               	movwf	process_data_parameterize@parameter_position,c
  3115                           
  3116                           ;SlaveComm_PIC18.c: 256: unsigned char parameter_index = 0;
  3117  00086E  0E00               	movlw	0
  3118  000870  6E10               	movwf	process_data_parameterize@parameter_index,c
  3119                           
  3120                           ;SlaveComm_PIC18.c: 265: for( int inx = 0; inx < 5; inx++ )
  3121  000872  0E00               	movlw	0
  3122  000874  6E0F               	movwf	process_data_parameterize@inx+1,c
  3123  000876  0E00               	movlw	0
  3124  000878  6E0E               	movwf	process_data_parameterize@inx,c
  3125  00087A  500F               	movf	process_data_parameterize@inx+1,w,c
  3126  00087C  0A80               	xorlw	128
  3127  00087E  0F80               	addlw	-128
  3128  000880  0E05               	movlw	5
  3129  000882  B4D8               	btfsc	status,2,c
  3130  000884  5C0E               	subwf	process_data_parameterize@inx,w,c
  3131  000886  B0D8               	btfsc	status,0,c
  3132  000888  D07C               	goto	l1407
  3133                           
  3134                           ;SlaveComm_PIC18.c: 266: {
  3135                           ;SlaveComm_PIC18.c: 267: parameters[inx][0] = '\0';
  3136  00088A  C00E  F001         	movff	process_data_parameterize@inx,___wmul@multiplier
  3137  00088E  C00F  F002         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  3138  000892  0E00               	movlw	0
  3139  000894  6E04               	movwf	___wmul@multiplicand+1,c
  3140  000896  0E0A               	movlw	10
  3141  000898  6E03               	movwf	___wmul@multiplicand,c
  3142  00089A  EC98  F008         	call	___wmul	;wreg free
  3143  00089E  5001               	movf	?___wmul,w,c
  3144  0008A0  2407               	addwf	process_data_parameterize@parameters,w,c
  3145  0008A2  6ED9               	movwf	fsr2l,c
  3146  0008A4  5002               	movf	?___wmul+1,w,c
  3147  0008A6  2008               	addwfc	process_data_parameterize@parameters+1,w,c
  3148  0008A8  6EDA               	movwf	fsr2h,c
  3149  0008AA  0E00               	movlw	0
  3150  0008AC  6EDF               	movwf	indf2,c
  3151  0008AE  4A0E               	infsnz	process_data_parameterize@inx,f,c
  3152  0008B0  2A0F               	incf	process_data_parameterize@inx+1,f,c
  3153  0008B2  D7E3               	goto	L4
  3154  0008B4                     l1383:
  3155                           
  3156                           ;SlaveComm_PIC18.c: 279: parameter_position = 0;
  3157  0008B4  0E00               	movlw	0
  3158  0008B6  6E11               	movwf	process_data_parameterize@parameter_position,c
  3159                           
  3160                           ;SlaveComm_PIC18.c: 280: parameter_index++;
  3161  0008B8  2A10               	incf	process_data_parameterize@parameter_index,f,c
  3162                           
  3163                           ;SlaveComm_PIC18.c: 282: if( parameter_index >= 5 )
  3164  0008BA  0E04               	movlw	4
  3165  0008BC  6410               	cpfsgt	process_data_parameterize@parameter_index,c
  3166  0008BE  D05A               	goto	l1405
  3167                           
  3168                           ;SlaveComm_PIC18.c: 283: {
  3169                           ;SlaveComm_PIC18.c: 286: parameter_index = ( 5 - 1 );
  3170  0008C0  0E04               	movlw	4
  3171  0008C2  6E10               	movwf	process_data_parameterize@parameter_index,c
  3172  0008C4  D057               	goto	l1405
  3173  0008C6                     l1391:
  3174                           
  3175                           ;SlaveComm_PIC18.c: 292: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  3176  0008C6  EE20 F029          	lfsr	2,41
  3177  0008CA  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3178  0008CC  26D9               	addwf	fsr2l,f,c
  3179  0008CE  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3180  0008D0  22DA               	addwfc	fsr2h,f,c
  3181  0008D2  50DF               	movf	indf2,w,c
  3182  0008D4  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3183  0008D6  500B               	movf	??_process_data_parameterize,w,c
  3184  0008D8  0D01               	mullw	1
  3185  0008DA  50F3               	movf	prodl,w,c
  3186  0008DC  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3187  0008DE  6ED9               	movwf	fsr2l,c
  3188  0008E0  50F4               	movf	prodh,w,c
  3189  0008E2  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3190  0008E4  6EDA               	movwf	fsr2h,c
  3191  0008E6  5010               	movf	process_data_parameterize@parameter_index,w,c
  3192  0008E8  0D0A               	mullw	10
  3193  0008EA  C007  F00C         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  3194  0008EE  C008  F00D         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  3195  0008F2  50F3               	movf	prodl,w,c
  3196  0008F4  260C               	addwf	??_process_data_parameterize+1,f,c
  3197  0008F6  50F4               	movf	prodh,w,c
  3198  0008F8  220D               	addwfc	??_process_data_parameterize+2,f,c
  3199  0008FA  5011               	movf	process_data_parameterize@parameter_position,w,c
  3200  0008FC  0D01               	mullw	1
  3201  0008FE  50F3               	movf	prodl,w,c
  3202  000900  240C               	addwf	??_process_data_parameterize+1,w,c
  3203  000902  6EE1               	movwf	fsr1l,c
  3204  000904  50F4               	movf	prodh,w,c
  3205  000906  200D               	addwfc	??_process_data_parameterize+2,w,c
  3206  000908  6EE2               	movwf	fsr1h,c
  3207  00090A  CFDF FFE7          	movff	indf2,indf1
  3208                           
  3209                           ;SlaveComm_PIC18.c: 293: parameter_position++;
  3210  00090E  2A11               	incf	process_data_parameterize@parameter_position,f,c
  3211                           
  3212                           ;SlaveComm_PIC18.c: 294: if( parameter_position >= 10 )
  3213  000910  0E09               	movlw	9
  3214  000912  6411               	cpfsgt	process_data_parameterize@parameter_position,c
  3215  000914  D002               	goto	l1399
  3216                           
  3217                           ;SlaveComm_PIC18.c: 295: {
  3218                           ;SlaveComm_PIC18.c: 298: parameter_position = ( 10 - 1 );
  3219  000916  0E09               	movlw	9
  3220  000918  6E11               	movwf	process_data_parameterize@parameter_position,c
  3221  00091A                     l1399:
  3222                           
  3223                           ;SlaveComm_PIC18.c: 299: }
  3224                           ;SlaveComm_PIC18.c: 302: parameters[parameter_index][parameter_position] = '\0';
  3225  00091A  5010               	movf	process_data_parameterize@parameter_index,w,c
  3226  00091C  0D0A               	mullw	10
  3227  00091E  C007  F00B         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  3228  000922  C008  F00C         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  3229  000926  50F3               	movf	prodl,w,c
  3230  000928  260B               	addwf	??_process_data_parameterize,f,c
  3231  00092A  50F4               	movf	prodh,w,c
  3232  00092C  220C               	addwfc	??_process_data_parameterize+1,f,c
  3233  00092E  5011               	movf	process_data_parameterize@parameter_position,w,c
  3234  000930  0D01               	mullw	1
  3235  000932  50F3               	movf	prodl,w,c
  3236  000934  240B               	addwf	??_process_data_parameterize,w,c
  3237  000936  6ED9               	movwf	fsr2l,c
  3238  000938  50F4               	movf	prodh,w,c
  3239  00093A  200C               	addwfc	??_process_data_parameterize+1,w,c
  3240  00093C  6EDA               	movwf	fsr2h,c
  3241  00093E  0E00               	movlw	0
  3242  000940  6EDF               	movwf	indf2,c
  3243                           
  3244                           ;SlaveComm_PIC18.c: 303: break;
  3245  000942  D018               	goto	l1405
  3246  000944                     l1403:
  3247  000944  EE20 F029          	lfsr	2,41
  3248  000948  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3249  00094A  26D9               	addwf	fsr2l,f,c
  3250  00094C  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3251  00094E  22DA               	addwfc	fsr2h,f,c
  3252  000950  50DF               	movf	indf2,w,c
  3253  000952  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3254  000954  500B               	movf	??_process_data_parameterize,w,c
  3255  000956  0D01               	mullw	1
  3256  000958  50F3               	movf	prodl,w,c
  3257  00095A  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3258  00095C  6ED9               	movwf	fsr2l,c
  3259  00095E  50F4               	movf	prodh,w,c
  3260  000960  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3261  000962  6EDA               	movwf	fsr2h,c
  3262  000964  50DF               	movf	indf2,w,c
  3263                           
  3264                           ; Switch size 1, requested type "space"
  3265                           ; Number of cases is 2, Range of values is 33 to 59
  3266                           ; switch strategies available:
  3267                           ; Name         Instructions Cycles
  3268                           ; simple_byte            7     4 (average)
  3269                           ;	Chosen strategy is simple_byte
  3270  000966  0A21               	xorlw	33	; case 33
  3271  000968  B4D8               	btfsc	status,2,c
  3272  00096A  D004               	goto	l1405
  3273  00096C  0A1A               	xorlw	26	; case 59
  3274  00096E  B4D8               	btfsc	status,2,c
  3275  000970  D7A1               	goto	l1383
  3276  000972  D7A9               	goto	l1391
  3277  000974                     l1405:
  3278                           
  3279                           ;SlaveComm_PIC18.c: 306: buffer_to_parameterize->read_position++;
  3280  000974  EE20 F029          	lfsr	2,41
  3281  000978  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3282  00097A  26D9               	addwf	fsr2l,f,c
  3283  00097C  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3284  00097E  22DA               	addwfc	fsr2h,f,c
  3285  000980  2ADF               	incf	indf2,f,c
  3286  000982                     l1407:
  3287  000982  EE20 F029          	lfsr	2,41
  3288  000986  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3289  000988  26D9               	addwf	fsr2l,f,c
  3290  00098A  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3291  00098C  22DA               	addwfc	fsr2h,f,c
  3292  00098E  50DF               	movf	indf2,w,c
  3293  000990  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3294  000992  500B               	movf	??_process_data_parameterize,w,c
  3295  000994  0D01               	mullw	1
  3296  000996  50F3               	movf	prodl,w,c
  3297  000998  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3298  00099A  6ED9               	movwf	fsr2l,c
  3299  00099C  50F4               	movf	prodh,w,c
  3300  00099E  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3301  0009A0  6EDA               	movwf	fsr2h,c
  3302  0009A2  50DF               	movf	indf2,w,c
  3303  0009A4  0A2A               	xorlw	42
  3304  0009A6  B4D8               	btfsc	status,2,c
  3305  0009A8  0012               	return	
  3306  0009AA  EE20 F029          	lfsr	2,41
  3307  0009AE  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3308  0009B0  26D9               	addwf	fsr2l,f,c
  3309  0009B2  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3310  0009B4  22DA               	addwfc	fsr2h,f,c
  3311  0009B6  50DF               	movf	indf2,w,c
  3312  0009B8  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3313  0009BA  0E28               	movlw	40
  3314  0009BC  5C0B               	subwf	??_process_data_parameterize,w,c
  3315  0009BE  B0D8               	btfsc	status,0,c
  3316  0009C0  0012               	return	
  3317  0009C2  EE20 F029          	lfsr	2,41
  3318  0009C6  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3319  0009C8  26D9               	addwf	fsr2l,f,c
  3320  0009CA  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3321  0009CC  22DA               	addwfc	fsr2h,f,c
  3322  0009CE  EE10 F028          	lfsr	1,40
  3323  0009D2  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3324  0009D4  26E1               	addwf	fsr1l,f,c
  3325  0009D6  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3326  0009D8  22E2               	addwfc	fsr1h,f,c
  3327  0009DA  50E7               	movf	indf1,w,c
  3328  0009DC  62DF               	cpfseq	indf2,c
  3329  0009DE  D7B2               	goto	l1403
  3330  0009E0  0012               	return	
  3331  0009E2                     __end_of_process_data_parameterize:
  3332                           	opt stack 0
  3333                           tblptru	equ	0xFF8
  3334                           tblptrh	equ	0xFF7
  3335                           tblptrl	equ	0xFF6
  3336                           tablat	equ	0xFF5
  3337                           prodh	equ	0xFF4
  3338                           prodl	equ	0xFF3
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           indf1	equ	0xFE7
  3342                           fsr1h	equ	0xFE2
  3343                           fsr1l	equ	0xFE1
  3344                           indf2	equ	0xFDF
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function ___wmul *****************
  3350 ;; Defined at:
  3351 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  multiplier      2    0[COMRAM] unsigned int 
  3354 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  product         2    4[COMRAM] unsigned int 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    0[COMRAM] unsigned int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, prodl, prodh
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3366 ;;      Params:         4       0       0       0       0       0       0
  3367 ;;      Locals:         2       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0
  3369 ;;      Totals:         6       0       0       0       0       0       0
  3370 ;;Total ram usage:        6 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_process_data_parameterize
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text21
  3380  001130                     __ptext21:
  3381                           	opt stack 0
  3382  001130                     ___wmul:
  3383                           	opt stack 27
  3384                           
  3385                           ;incstack = 0
  3386  001130  5001               	movf	___wmul@multiplier,w,c
  3387  001132  0203               	mulwf	___wmul@multiplicand,c
  3388  001134  CFF3 F005          	movff	prodl,___wmul@product
  3389  001138  CFF4 F006          	movff	prodh,___wmul@product+1
  3390  00113C  5001               	movf	___wmul@multiplier,w,c
  3391  00113E  0204               	mulwf	___wmul@multiplicand+1,c
  3392  001140  50F3               	movf	prodl,w,c
  3393  001142  2606               	addwf	___wmul@product+1,f,c
  3394  001144  5002               	movf	___wmul@multiplier+1,w,c
  3395  001146  0203               	mulwf	___wmul@multiplicand,c
  3396  001148  50F3               	movf	prodl,w,c
  3397  00114A  2606               	addwf	___wmul@product+1,f,c
  3398  00114C  C005  F001         	movff	___wmul@product,?___wmul
  3399  001150  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3400  001154  0012               	return	
  3401  001156                     __end_of___wmul:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           indf1	equ	0xFE7
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _SPISlaveInit *****************
  3420 ;; Defined at:
  3421 ;;		line 629 in file "SlaveComm_PIC18.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, status,2
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3435 ;;      Params:         0       0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text22
  3449  000F9A                     __ptext22:
  3450                           	opt stack 0
  3451  000F9A                     _SPISlaveInit:
  3452                           	opt stack 30
  3453                           
  3454                           ;SlaveComm_PIC18.c: 632: TRISAbits.TRISA0 = 0;
  3455                           
  3456                           ;incstack = 0
  3457  000F9A  9092               	bcf	3986,0,c	;volatile
  3458                           
  3459                           ;SlaveComm_PIC18.c: 633: TRISAbits.TRISA1 = 1;
  3460  000F9C  8292               	bsf	3986,1,c	;volatile
  3461                           
  3462                           ;SlaveComm_PIC18.c: 634: TRISBbits.RB4 = 0;
  3463  000F9E  9893               	bcf	3987,4,c	;volatile
  3464                           
  3465                           ;SlaveComm_PIC18.c: 635: TRISCbits.TRISC3 = 0;
  3466  000FA0  9694               	bcf	3988,3,c	;volatile
  3467                           
  3468                           ;SlaveComm_PIC18.c: 636: TRISCbits.TRISC5 = 0;
  3469  000FA2  9A94               	bcf	3988,5,c	;volatile
  3470                           
  3471                           ;SlaveComm_PIC18.c: 637: TRISCbits.TRISC6 = 0;
  3472  000FA4  9C94               	bcf	3988,6,c	;volatile
  3473                           
  3474                           ;SlaveComm_PIC18.c: 638: TRISCbits.TRISC7 = 0;
  3475  000FA6  9E94               	bcf	3988,7,c	;volatile
  3476                           
  3477                           ;SlaveComm_PIC18.c: 639: ANSELAbits.ANSA1 = 0b0;
  3478  000FA8  010F               	movlb	15	; () banked
  3479  000FAA  9338               	bcf	56,1,b	;volatile
  3480                           
  3481                           ;SlaveComm_PIC18.c: 641: LATCbits.LATC6 = 1;
  3482  000FAC  8C8B               	bsf	3979,6,c	;volatile
  3483                           
  3484                           ;SlaveComm_PIC18.c: 642: LATCbits.LATC3 = 1;
  3485  000FAE  868B               	bsf	3979,3,c	;volatile
  3486                           
  3487                           ;SlaveComm_PIC18.c: 643: LATCbits.LATC5 = 1;
  3488  000FB0  8A8B               	bsf	3979,5,c	;volatile
  3489                           
  3490                           ;SlaveComm_PIC18.c: 644: LATCbits.LATC7 = 1;
  3491  000FB2  8E8B               	bsf	3979,7,c	;volatile
  3492                           
  3493                           ;SlaveComm_PIC18.c: 659: SSP2CON1bits.SSPEN = 0;
  3494  000FB4  9A6C               	bcf	3948,5,c	;volatile
  3495                           
  3496                           ;SlaveComm_PIC18.c: 661: ANSELBbits.ANSB0 = 0b0;
  3497  000FB6  010F               	movlb	15	; () banked
  3498  000FB8  9139               	bcf	57,0,b	;volatile
  3499                           
  3500                           ;SlaveComm_PIC18.c: 662: ANSELBbits.ANSB1 = 0b0;
  3501  000FBA  010F               	movlb	15	; () banked
  3502  000FBC  9339               	bcf	57,1,b	;volatile
  3503                           
  3504                           ;SlaveComm_PIC18.c: 663: ANSELBbits.ANSB2 = 0b0;
  3505  000FBE  010F               	movlb	15	; () banked
  3506  000FC0  9539               	bcf	57,2,b	;volatile
  3507                           
  3508                           ;SlaveComm_PIC18.c: 664: ANSELBbits.ANSB3 = 0b0;
  3509  000FC2  010F               	movlb	15	; () banked
  3510  000FC4  9739               	bcf	57,3,b	;volatile
  3511                           
  3512                           ;SlaveComm_PIC18.c: 666: TRISBbits.RB0 = 0b1;
  3513  000FC6  8093               	bsf	3987,0,c	;volatile
  3514                           
  3515                           ;SlaveComm_PIC18.c: 667: TRISBbits.RB1 = 0b1;
  3516  000FC8  8293               	bsf	3987,1,c	;volatile
  3517                           
  3518                           ;SlaveComm_PIC18.c: 668: TRISBbits.RB2 = 0b1;
  3519  000FCA  8493               	bsf	3987,2,c	;volatile
  3520                           
  3521                           ;SlaveComm_PIC18.c: 669: TRISBbits.RB3 = 0b0;
  3522  000FCC  9693               	bcf	3987,3,c	;volatile
  3523                           
  3524                           ;SlaveComm_PIC18.c: 671: SSP2STATbits.SMP = 0;
  3525  000FCE  9E6D               	bcf	3949,7,c	;volatile
  3526                           
  3527                           ;SlaveComm_PIC18.c: 672: SSP2STATbits.CKE = 1;
  3528  000FD0  8C6D               	bsf	3949,6,c	;volatile
  3529                           
  3530                           ;SlaveComm_PIC18.c: 674: SSP2CON1bits.WCOL = 0;
  3531  000FD2  9E6C               	bcf	3948,7,c	;volatile
  3532                           
  3533                           ;SlaveComm_PIC18.c: 675: SSP2CON1bits.SSPOV = 0;
  3534  000FD4  9C6C               	bcf	3948,6,c	;volatile
  3535                           
  3536                           ;SlaveComm_PIC18.c: 676: SSP2CON1bits.SSPEN = 0;
  3537  000FD6  9A6C               	bcf	3948,5,c	;volatile
  3538                           
  3539                           ;SlaveComm_PIC18.c: 677: SSP2CON1bits.CKP = 1;
  3540  000FD8  886C               	bsf	3948,4,c	;volatile
  3541                           
  3542                           ; BSR set to: 15
  3543                           ;SlaveComm_PIC18.c: 678: SSP2CON1bits.SSPM = 0b0100;
  3544  000FDA  506C               	movf	3948,w,c	;volatile
  3545  000FDC  0BF0               	andlw	-16
  3546  000FDE  0904               	iorlw	4
  3547  000FE0  6E6C               	movwf	3948,c	;volatile
  3548                           
  3549                           ;SlaveComm_PIC18.c: 681: SSP2CON3 = 0x00;
  3550  000FE2  0E00               	movlw	0
  3551  000FE4  6E69               	movwf	3945,c	;volatile
  3552                           
  3553                           ; BSR set to: 15
  3554                           ;SlaveComm_PIC18.c: 682: SSP2CON3bits.BOEN = 0b0;
  3555  000FE6  9869               	bcf	3945,4,c	;volatile
  3556                           
  3557                           ; BSR set to: 15
  3558                           ;SlaveComm_PIC18.c: 684: SSP2CON1bits.SSPEN = 1;
  3559  000FE8  8A6C               	bsf	3948,5,c	;volatile
  3560  000FEA  0012               	return	
  3561  000FEC                     __end_of_SPISlaveInit:
  3562                           	opt stack 0
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           prodh	equ	0xFF4
  3568                           prodl	equ	0xFF3
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf1	equ	0xFE7
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           indf1	equ	0xFE7
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594                           	psect	rparam
  3595  0000                     tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           indf1	equ	0xFE7
  3604                           fsr1h	equ	0xFE2
  3605                           fsr1l	equ	0xFE1
  3606                           indf2	equ	0xFDF
  3607                           fsr2h	equ	0xFDA
  3608                           fsr2l	equ	0xFD9
  3609                           status	equ	0xFD8


Data Sizes:
    Strings     55
    Constant    0
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      91
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    com_command_testLED@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 8
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_16(CODE[4]), STR_12(CODE[3]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[8]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[8]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 8
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_16(CODE[4]), STR_12(CODE[3]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[8]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[8]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 5
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[4]), STR_19(CODE[3]), 
		 -> STR_18(CODE[5]), STR_17(CODE[4]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[3]), STR_15(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_14(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_17(CODE[4]), STR_13(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder2@data2	PTR unsigned char  size(2) Largest target is 5
		 -> STR_24(CODE[5]), 

    command_builder2@data1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), 

    command_builder2@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_22(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _init->_delayMS
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_testLED
    _com_command_testLED->_command_builder2
    _command_builder2->_command_builder_add_string
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28032
                                             84 COMRAM     2     2      0
                       _SPISlaveInit
                     _communications
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     176
                                              6 COMRAM     2     2      0
                            _delayMS
 ---------------------------------------------------------------------------------
 (2) _delayMS                                              6     4      2     146
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       3     3      0   27855
                                             81 COMRAM     3     3      0
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     278
                                              2 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  2     0      2    7852
                                             20 COMRAM     2     0      2
                _com_command_testLED
 ---------------------------------------------------------------------------------
 (3) _com_command_testLED                                  2     0      2    7680
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (4) _command_builder2                                     6     0      6    7605
                                             12 COMRAM     6     0      6
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     397
                                              3 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     100
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   19305
                                             26 COMRAM    55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              6     2      4   18212
                                             20 COMRAM     6     2      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2365
                                             11 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     685
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    7473
                                             16 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    7398
                                             12 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    7848
                                             12 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    4166
                                              4 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    2994
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     864
                                              6 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPISlaveInit
   _communications
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_testLED
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _init
     _delayMS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      54       4       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5B       1       95.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF       9        0.0%
DATA                 0      0      AF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 30 23:58:18 2017

                                       _SPISlaveInit 0F9A                                  ___wmul@multiplicand 0003  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l132 0CA6                                                  l119 0BCE  
                                                l161 0662                                                  l238 112C  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                u690 10D2                                                  u696 10D4  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0017                                                 l1301 0AE0  
                                               l1403 0944                                                 l1307 0B1C  
                                               l1075 107E                                                 l1405 0974  
                                               l1261 0E9C                                                 l1421 0664  
                                               l1501 0BF4                                                 l1085 1098  
                                               l1407 0982                                                 l1423 066A  
                                               l1087 109C                                                 l1265 0ECA  
                                               l1281 0A30                                                 l1513 0C3A  
                                               l1601 118C                                                 l1435 06E0  
                                               l1523 0C94                                                 l1277 09F4  
                                               l1391 08C6                                                 l1383 08B4  
                                               l1295 0AA6                                                 l1287 0A66  
                                               l1455 07D8                                                 l1447 0756  
                                               l1367 1128                                                 l1289 0A6A  
                                               l1465 0866                                                 l1553 0E8E  
                                               l1545 0E2C                                                 l1459 081E  
                                               l1571 0B8A                                                 l1563 0B4C  
                                               l1565 0B60                                                 l1573 0B9E  
                                               l1399 091A                                                 l1479 11AA  
                                               l1577 0BA8                                                 l1589 0BE2  
                                               STR_1 0629                                                 STR_2 0631  
                                               STR_3 0609                                                 STR_4 060F  
                                               STR_5 0601                                                 STR_6 061F  
                                               STR_7 0609                                                 STR_8 060F  
                                               STR_9 0601                                                 _main 1176  
                                               _init 0FEC                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 indf1 000FE7  
                                               fsr1l 000FE1                                                 indf2 000FDF  
                                               fsr2l 000FD9                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 001E                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 0000  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0054  
                                     _communications 0B26                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 061A  
                                              STR_11 0615                                                STR_12 0635  
                                              STR_20 0624                                                STR_21 0615  
                                              STR_13 0631                                                STR_14 0615  
                                              STR_22 0629                                                STR_23 061F  
                                              STR_15 062D                                                STR_24 0615  
                                              STR_16 062D                                                STR_17 0631  
                                              STR_18 0615                                                STR_19 0635  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 000D  
                                  ?_command_builder2 000D                                    ?_command_builder3 000D  
                                    __end_of_delayMS 10AA                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0009  
                                 ??_command_builder1 0011                                   ??_command_builder2 0013  
                                 ??_command_builder3 0015                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0017                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                   __CFG_MCLRE$EXTMCLR 000000  
                                              init@i 0007                                                tablat 000FF5  
                                              status 000FD8                                      __end_of_strcmp2 0B26  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 000B                        command_builder_add_string@inx 000B  
                                    __initialization 1156                                         __end_of_main 1194  
                                       __end_of_init 103C                               __end_of_communications 0BE8  
                __size_of_command_builder_add_string 005C                                     _SPI_receive_data 1108  
                       command_builder_add_char@data 0003                                               ??_main 0055  
                                             ??_init 0007                                        _SPI_send_data 1194  
                                      __activetblptr 000002                              _process_data_parameters 063A  
                                   receive_data@data 0007                                       __CFG_WDTEN$OFF 000000  
                        __end_of_com_command_testLED 11D0                                SPI_send_data@sendGood 0002  
                                     __CFG_XINST$OFF 000000                                               ___wmul 1130  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                             clear_0 115C                                            ??_delayMS 0003  
                                     ?_SPI_send_data 0001                            _process_data_parameterize 086A  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                          ??_strcmp2 0005                                     __end_of_strmatch 10DA  
                                      ?_receive_data 0004                                           __accesstop 0060  
                            __end_of__initialization 116C                                    SPI_send_data@data 0001  
                                     __pcstackCOMRAM 0001                           receive_data@receive_buffer 0004  
                          ??_process_data_parameters 0019                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0007                   __end_of_command_builder_add_string 0EEE  
                         _command_builder_add_string 0E92                                           __pbssBANK0 0060  
                                     ??_receive_data 0006                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0008                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___wmul 0001                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0001                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 001A           communications@end_of_transmission_received 0058  
                        __end_of_resetCommunications 1074                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 11D0                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 0F44                      __end_of_process_data_parameters 086A  
                           __end_of_SPI_receive_data 1130                            __size_of_command_builder1 0056  
                          __size_of_command_builder2 00BA                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 0009                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                                              __Lparam 0000  
           process_data_parameterize@parameter_index 0010                                      __size_of___wmul 0026  
                                       __psmallconst 0600                                 SPI_receive_data@data 0001  
                                            __pcinit 1156                                              _delayMS 1074  
                                            __ramtop 0600                                            ?_strmatch 000C  
                                            __ptext0 1176                                              __ptext1 0FEC  
                                            __ptext2 1074                                              __ptext3 0B26  
                                            __ptext4 0E02                                              __ptext5 1194  
                                            __ptext6 103C                                              __ptext7 11B2  
                                            __ptext8 0CAA                                              __ptext9 0BE8  
                                            _strcmp2 09E2                                 end_of_initialization 116C  
                 __size_of_process_data_parameterize 0178                                    __end_of_send_data 0E92  
                                      __Lmediumconst 0000                                     ??_communications 0052  
        process_data_parameterize@parameter_position 0011                                              postinc0 000FEE  
                              receive_data@my_status 005B                                 __end_of_receive_data 0CAA  
                                         ??_strmatch 0010                                            _PORTBbits 000F81  
                    communications@last_state_active 0059                                        ?_process_data 001B  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 001B  
                  __end_of_process_data_parameterize 09E2                         __size_of_com_command_testLED 001E  
                communications@receive_current_state 005A                                        ?_SPISlaveInit 0001  
                                     __end_of___wmul 1156                command_builder_add_string@send_buffer 0005  
                                     ??_process_data 001F                          ?_command_builder_add_string 0005  
                                start_initialization 1156                                     _command_builder1 0EEE  
                                   _command_builder2 0CAA                                     _command_builder3 0D64  
                               send_data@send_buffer 0003                                       ??_SPISlaveInit 0001  
                                           ??___wmul 0005                  send_end_of_transmission@send_buffer 0011  
                         ??_send_end_of_transmission 0013                           ??_command_builder_add_char 0004  
                                        __pbssCOMRAM 0057                             SPI_receive_data@recvGood 0003  
                                __end_of__stringdata 0638                                    ?_SPI_receive_data 0001  
                                 ??_SPI_receive_data 0003                       com_command_testLED@send_buffer 0013  
                              command_builder1@data1 000F                          command_builder1@send_buffer 000D  
                           ?_process_data_parameters 0015                                command_builder2@data1 000F  
                              command_builder2@data2 0011                                __size_of_receive_data 00C2  
                              command_builder3@data1 000F                                command_builder3@data2 0011  
                              command_builder3@data3 0013                                             ?_delayMS 0001  
                              __end_of_SPI_send_data 11B2                                          __smallconst 0600  
                     resetCommunications@send_buffer 0015                                    __size_of_strmatch 0030  
                                  send_data@send_end 0007                                             ?_strcmp2 0001  
                       __size_of_resetCommunications 0038                                       strmatch@result 0010  
                process_data_parameterize@parameters 0007                                         _receive_data 0BE8  
                                     ___wmul@product 0005                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                 __end_of_process_data 1108  
                                          _send_data 0E02                    process_data_parameters@parameters 0015  
                                   __CFG_WDTPS$32768 000000                          command_builder2@send_buffer 000D  
                                           _SSP2CON3 000F69                                          __stringdata 0601  
                                  ___wmul@multiplier 0001                  command_builder_add_char@send_buffer 0001  
                                _com_command_testLED 11B2                                 __end_of_SPISlaveInit 0FEC  
           process_data@end_of_transmission_received 0051                                           ?_send_data 0003  
                                           __Hrparam 0000                                 ?_com_command_testLED 0013  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 000D                                    __CFG_P2BMX$PORTB5 000000  
                   __end_of_send_end_of_transmission 11E6                     __end_of_command_builder_add_char 0F9A  
                                   __size_of_delayMS 0036                             __end_of_command_builder1 0F44  
                           __end_of_command_builder2 0D64                             __end_of_command_builder3 0E02  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                         strcmp2@inx 000A                         process_data_parameterize@inx 000E  
                                           __ptext10 1108                                             __ptext11 10DA  
                                           __ptext20 086A                                             __ptext12 063A  
                                           __ptext21 1130                                             __ptext13 10AA  
                                           __ptext22 0F9A                                             __ptext14 09E2  
                                           __ptext15 11D0                                             __ptext16 0EEE  
                                           __ptext17 0D64                                             __ptext18 0E92  
                                           __ptext19 0F44                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 0144  
                                      __size_of_main 001E                                        strmatch@match 0012  
                                      __size_of_init 0050                                             delayMS@a 0001  
                                           delayMS@i 0003                                             delayMS@j 0005  
                         ?_process_data_parameterize 0007                                ??_com_command_testLED 0015  
                            __size_of_communications 00C2                                             _strmatch 10AA  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 001D  
                              __size_of_process_data 002E                               process_data@parameters 001F  
                      communications@no_more_to_send 0053                                      main@togglePulse 0055  
                                        ??_send_data 0005                                            strmatch@a 000C  
                                          strmatch@b 000E                                  _resetCommunications 103C  
                          __size_of_SPI_receive_data 0028                                             strcmp2@a 0001  
                                           strcmp2@b 0003                                         _process_data 10DA  
                                  _SPI_transmit_wait 0057                                __size_of_SPISlaveInit 0052  
                          communications@send_buffer 008A                     __size_of_process_data_parameters 0230  
                                  __CFG_T3CMX$PORTC0 000000                                 ?_resetCommunications 0015  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0011  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0001  
