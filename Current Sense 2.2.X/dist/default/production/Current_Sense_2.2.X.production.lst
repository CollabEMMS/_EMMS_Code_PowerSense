

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue May 01 11:30:14 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.43
    64                           ; Generated 25/07/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18LF25K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001A4E                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for powerCalculation@size
   103  001A4E  000E               	dw	14
   104                           
   105                           	psect	idataBANK0
   106  001A4A                     __pidataBANK0:
   107                           	opt stack 0
   108                           
   109                           ;initializer for powerCalculation@currentScalar
   110  001A4A  0001               	dw	1
   111                           
   112                           ;initializer for powerCalculation@voltageScalar
   113  001A4C  0001               	dw	1
   114  0000                     _ANSELBbits	set	3897
   115  0000                     _ANSELAbits	set	3896
   116  0000                     _ANSELC	set	3898
   117  0000                     _ANSELB	set	3897
   118  0000                     _ANSELA	set	3896
   119  0000                     _SSP2CON3bits	set	3945
   120  0000                     _SSP2CON3	set	3945
   121  0000                     _SSP2BUF	set	3951
   122  0000                     _SSP2STATbits	set	3949
   123  0000                     _SSP2CON1bits	set	3948
   124  0000                     _LATCbits	set	3979
   125  0000                     _T0CONbits	set	4053
   126  0000                     _IPR5	set	3967
   127  0000                     _IPR4	set	3964
   128  0000                     _IPR3	set	4005
   129  0000                     _IPR2	set	4002
   130  0000                     _IPR1	set	3999
   131  0000                     _PIE5	set	3965
   132  0000                     _PIE4	set	3962
   133  0000                     _PIE3	set	4003
   134  0000                     _PIE2	set	4000
   135  0000                     _PIE1	set	3997
   136  0000                     _PIR5	set	3966
   137  0000                     _PIR4	set	3963
   138  0000                     _PIR3	set	4004
   139  0000                     _PIR2	set	4001
   140  0000                     _PIR1	set	3998
   141  0000                     _RCONbits	set	4048
   142  0000                     _INTCON3	set	4080
   143  0000                     _INTCON2	set	4081
   144  0000                     _INTCON	set	4082
   145  0000                     _TRISAbits	set	3986
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISBbits	set	3987
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _OSCTUNEbits	set	3995
   150  0000                     _OSCCON2bits	set	4050
   151  0000                     _OSCCONbits	set	4051
   152  0000                     _SSP1CON1bits	set	4038
   153  0000                     _PIR1bits	set	3998
   154  0000                     _SSP1STATbits	set	4039
   155  0000                     _SSP1BUF	set	4041
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TMR0L	set	4054
   158  0000                     _TMR0H	set	4055
   159  0000                     _INTCONbits	set	4082
   160  0000                     _PORTBbits	set	3969
   161  0000                     _LATAbits	set	3977
   162  0000                     _PORTCbits	set	3970
   163  0000                     _LATBbits	set	3978
   164                           
   165                           	psect	smallconst
   166  000600                     __psmallconst:
   167                           	opt stack 0
   168  000600  00                 	db	0
   169  000601                     STR_3:
   170                           
   171                           ; BSR set to: 0
   172  000601  43                 	db	67	;'C'
   173  000602  61                 	db	97	;'a'
   174  000603  6C                 	db	108	;'l'
   175  000604  69                 	db	105	;'i'
   176  000605  62                 	db	98	;'b'
   177  000606  72                 	db	114	;'r'
   178  000607  61                 	db	97	;'a'
   179  000608  74                 	db	116	;'t'
   180  000609  69                 	db	105	;'i'
   181  00060A  6F                 	db	111	;'o'
   182  00060B  6E                 	db	110	;'n'
   183  00060C  00                 	db	0
   184  00060D                     STR_22:
   185                           
   186                           ; BSR set to: 0
   187  00060D  50                 	db	80	;'P'
   188  00060E  53                 	db	83	;'S'
   189  00060F  56                 	db	86	;'V'
   190  000610  65                 	db	101	;'e'
   191  000611  72                 	db	114	;'r'
   192  000612  73                 	db	115	;'s'
   193  000613  69                 	db	105	;'i'
   194  000614  6F                 	db	111	;'o'
   195  000615  6E                 	db	110	;'n'
   196  000616  00                 	db	0
   197  000617                     STR_4:
   198                           
   199                           ; BSR set to: 0
   200  000617  45                 	db	69	;'E'
   201  000618  6E                 	db	110	;'n'
   202  000619  55                 	db	85	;'U'
   203  00061A  73                 	db	115	;'s'
   204  00061B  65                 	db	101	;'e'
   205  00061C  64                 	db	100	;'d'
   206  00061D  00                 	db	0
   207  00061E                     STR_20:
   208                           
   209                           ; BSR set to: 0
   210  00061E  56                 	db	86	;'V'
   211  00061F  6F                 	db	111	;'o'
   212  000620  6C                 	db	108	;'l'
   213  000621  74                 	db	116	;'t'
   214  000622  73                 	db	115	;'s'
   215  000623  00                 	db	0
   216  000624                     STR_18:
   217                           
   218                           ; BSR set to: 0
   219  000624  57                 	db	87	;'W'
   220  000625  61                 	db	97	;'a'
   221  000626  74                 	db	116	;'t'
   222  000627  74                 	db	116	;'t'
   223  000628  73                 	db	115	;'s'
   224  000629  00                 	db	0
   225  00062A                     STR_7:
   226                           
   227                           ; BSR set to: 0
   228  00062A  4C                 	db	76	;'L'
   229  00062B  45                 	db	69	;'E'
   230  00062C  44                 	db	68	;'D'
   231  00062D  42                 	db	66	;'B'
   232  00062E  00                 	db	0
   233  00062F                     STR_6:
   234                           
   235                           ; BSR set to: 0
   236  00062F  44                 	db	68	;'D'
   237  000630  61                 	db	97	;'a'
   238  000631  74                 	db	116	;'t'
   239  000632  61                 	db	97	;'a'
   240  000633  00                 	db	0
   241  000634                     STR_5:
   242                           
   243                           ; BSR set to: 0
   244  000634  52                 	db	82	;'R'
   245  000635  65                 	db	101	;'e'
   246  000636  61                 	db	97	;'a'
   247  000637  64                 	db	100	;'d'
   248  000638  00                 	db	0
   249  000639                     STR_16:
   250                           
   251                           ; BSR set to: 0
   252  000639  43                 	db	67	;'C'
   253  00063A  6F                 	db	111	;'o'
   254  00063B  6E                 	db	110	;'n'
   255  00063C  66                 	db	102	;'f'
   256  00063D  00                 	db	0
   257  00063E                     STR_21:
   258                           
   259                           ; BSR set to: 0
   260  00063E  41                 	db	65	;'A'
   261  00063F  6D                 	db	109	;'m'
   262  000640  70                 	db	112	;'p'
   263  000641  73                 	db	115	;'s'
   264  000642  00                 	db	0
   265  000643                     
   266                           ; BSR set to: 0
   267  000643  32                 	db	50	;'2'
   268  000644  32                 	db	50	;'2'
   269  000645  32                 	db	50	;'2'
   270  000646  00                 	db	0
   271  000647                     
   272                           ; BSR set to: 0
   273  000647  33                 	db	51	;'3'
   274  000648  33                 	db	51	;'3'
   275  000649  33                 	db	51	;'3'
   276  00064A  00                 	db	0
   277  00064B                     STR_40:
   278                           
   279                           ; BSR set to: 0
   280  00064B  34                 	db	52	;'4'
   281  00064C  34                 	db	52	;'4'
   282  00064D  34                 	db	52	;'4'
   283  00064E  00                 	db	0
   284  00064F                     STR_1:
   285                           
   286                           ; BSR set to: 0
   287  00064F  45                 	db	69	;'E'
   288  000650  4E                 	db	78	;'N'
   289  000651  44                 	db	68	;'D'
   290  000652  00                 	db	0
   291  000653                     STR_11:
   292                           
   293                           ; BSR set to: 0
   294  000653  4F                 	db	79	;'O'
   295  000654  66                 	db	102	;'f'
   296  000655  66                 	db	102	;'f'
   297  000656  00                 	db	0
   298  000657                     STR_2:
   299                           
   300                           ; BSR set to: 0
   301  000657  53                 	db	83	;'S'
   302  000658  65                 	db	101	;'e'
   303  000659  74                 	db	116	;'t'
   304  00065A  00                 	db	0
   305  00065B                     STR_8:
   306                           
   307                           ; BSR set to: 0
   308  00065B  4F                 	db	79	;'O'
   309  00065C  6E                 	db	110	;'n'
   310  00065D  00                 	db	0
   311  0000                     
   312                           ; #config settings
   313  00065E  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	cinit
   316  001534                     __pcinit:
   317                           	opt stack 0
   318  001534                     start_initialization:
   319                           	opt stack 0
   320  001534                     __initialization:
   321                           	opt stack 0
   322                           
   323                           ; Initialize objects allocated to BANK0 (4 bytes)
   324                           ; load TBLPTR registers with __pidataBANK0
   325  001534  0E4A               	movlw	low __pidataBANK0
   326  001536  6EF6               	movwf	tblptrl,c
   327  001538  0E1A               	movlw	high __pidataBANK0
   328  00153A  6EF7               	movwf	tblptrh,c
   329  00153C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   330  00153E  6EF8               	movwf	tblptru,c
   331  001540  EE00  F0CF         	lfsr	0,__pdataBANK0
   332  001544  EE10 F004          	lfsr	1,4
   333  001548                     copy_data0:
   334  001548  0009               	tblrd		*+
   335  00154A  CFF5 FFEE          	movff	tablat,postinc0
   336  00154E  50E5               	movf	postdec1,w,c
   337  001550  50E1               	movf	fsr1l,w,c
   338  001552  E1FA               	bnz	copy_data0
   339                           
   340                           ; Initialize objects allocated to COMRAM (2 bytes)
   341                           ; load TBLPTR registers with __pidataCOMRAM
   342  001554  0E4E               	movlw	low __pidataCOMRAM
   343  001556  6EF6               	movwf	tblptrl,c
   344  001558  0E1A               	movlw	high __pidataCOMRAM
   345  00155A  6EF7               	movwf	tblptrh,c
   346  00155C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   347  00155E  6EF8               	movwf	tblptru,c
   348  001560  0009               	tblrd		*+	;fetch initializer
   349  001562  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   350  001566  0009               	tblrd		*+	;fetch initializer
   351  001568  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   352                           
   353                           ; Clear objects allocated to BANK1 (42 bytes)
   354  00156C  EE01  F033         	lfsr	0,__pbssBANK1
   355  001570  0E2A               	movlw	42
   356  001572                     clear_0:
   357  001572  6AEE               	clrf	postinc0,c
   358  001574  06E8               	decf	wreg,f,c
   359  001576  E1FD               	bnz	clear_0
   360                           
   361                           ; Clear objects allocated to BANK0 (94 bytes)
   362  001578  EE00  F060         	lfsr	0,__pbssBANK0
   363  00157C  0E5E               	movlw	94
   364  00157E                     clear_1:
   365  00157E  6AEE               	clrf	postinc0,c
   366  001580  06E8               	decf	wreg,f,c
   367  001582  E1FD               	bnz	clear_1
   368                           
   369                           ; Clear objects allocated to COMRAM (17 bytes)
   370  001584  EE00  F03A         	lfsr	0,__pbssCOMRAM
   371  001588  0E11               	movlw	17
   372  00158A                     clear_2:
   373  00158A  6AEE               	clrf	postinc0,c
   374  00158C  06E8               	decf	wreg,f,c
   375  00158E  E1FD               	bnz	clear_2
   376  001590                     end_of_initialization:
   377                           	opt stack 0
   378  001590                     __end_of__initialization:
   379                           	opt stack 0
   380  001590  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   381  001592  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   382  001594  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383  001596  6EF8               	movwf	tblptru,c
   384  001598  0100               	movlb	0
   385  00159A  EF4F  F007         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssCOMRAM
   396  00003A                     __pbssCOMRAM:
   397                           	opt stack 0
   398  00003A                     _currentData:
   399                           	opt stack 0
   400  00003A                     	ds	2
   401  00003C                     _voltageData:
   402                           	opt stack 0
   403  00003C                     	ds	2
   404  00003E                     receive_data@my_status:
   405                           	opt stack 0
   406  00003E                     	ds	1
   407  00003F                     communications@last_state_active:
   408                           	opt stack 0
   409  00003F                     	ds	1
   410  000040                     communications@receive_current_state:
   411                           	opt stack 0
   412  000040                     	ds	1
   413  000041                     communications@end_of_transmission_received:
   414                           	opt stack 0
   415  000041                     	ds	1
   416  000042                     _SPI_transmit_wait:
   417                           	opt stack 0
   418  000042                     	ds	1
   419  000043                     readSerialData@byte3Read:
   420                           	opt stack 0
   421  000043                     	ds	1
   422  000044                     readSerialData@byte2Read:
   423                           	opt stack 0
   424  000044                     	ds	1
   425  000045                     readSerialData@byte1Read:
   426                           	opt stack 0
   427  000045                     	ds	1
   428  000046                     readSerialData@readingData:
   429                           	opt stack 0
   430  000046                     	ds	1
   431  000047                     energyPulseCheck@mcpLFoutLast:
   432                           	opt stack 0
   433  000047                     	ds	1
   434  000048                     pulseFoutPassThru@runonce:
   435                           	opt stack 0
   436  000048                     	ds	1
   437  000049                     _dataAvailable:
   438                           	opt stack 0
   439  000049                     	ds	1
   440  00004A                     _dataRead:
   441                           	opt stack 0
   442  00004A                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	dataCOMRAM
   453  00004B                     __pdataCOMRAM:
   454                           	opt stack 0
   455  00004B                     powerCalculation@size:
   456                           	opt stack 0
   457  00004B                     	ds	2
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	bssBANK0
   468  000060                     __pbssBANK0:
   469                           	opt stack 0
   470  000060                     powerCalculation@instantPower:
   471                           	opt stack 0
   472  000060                     	ds	28
   473  00007C                     energyPulseCheck@meterEnergyUsedPart:
   474                           	opt stack 0
   475  00007C                     	ds	4
   476  000080                     _timerCountLF:
   477                           	opt stack 0
   478  000080                     	ds	4
   479  000084                     _timerCountHF:
   480                           	opt stack 0
   481  000084                     	ds	4
   482  000088                     _meterEnergyUsed:
   483                           	opt stack 0
   484  000088                     	ds	4
   485  00008C                     _meterWatts:
   486                           	opt stack 0
   487  00008C                     	ds	4
   488  000090                     resetCommunications@commState:
   489                           	opt stack 0
   490  000090                     	ds	2
   491  000092                     powerCalculation@counter:
   492                           	opt stack 0
   493  000092                     	ds	2
   494  000094                     communications@send_buffer:
   495                           	opt stack 0
   496  000094                     	ds	42
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	dataBANK0
   507  0000CF                     __pdataBANK0:
   508                           	opt stack 0
   509  0000CF                     powerCalculation@currentScalar:
   510                           	opt stack 0
   511  0000CF                     	ds	2
   512  0000D1                     powerCalculation@voltageScalar:
   513                           	opt stack 0
   514  0000D1                     	ds	2
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           postdec1	equ	0xFE5
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	bssBANK1
   525  000133                     __pbssBANK1:
   526                           	opt stack 0
   527  000133                     communications@receive_buffer:
   528                           	opt stack 0
   529  000133                     	ds	42
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	cstackBANK1
   540  000100                     __pcstackBANK1:
   541                           	opt stack 0
   542  000100                     process_data@parameters:
   543                           	opt stack 0
   544                           
   545                           ; 50 bytes @ 0x0
   546  000100                     	ds	50
   547  000132                     process_data@end_of_transmission_received:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x32
   551  000132                     	ds	1
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	cstackBANK0
   562  0000BE                     __pcstackBANK0:
   563                           	opt stack 0
   564  0000BE                     com_command_setPower@temp:
   565                           	opt stack 0
   566  0000BE                     com_command_setEnergyUsed@temp:
   567                           	opt stack 0
   568                           
   569                           ; 12 bytes @ 0x0
   570  0000BE                     	ds	12
   571  0000CA                     main@initDone:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0xC
   575  0000CA                     	ds	1
   576  0000CB                     main@inx:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xD
   580  0000CB                     	ds	2
   581  0000CD                     main@inx_1350:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0xF
   585  0000CD                     	ds	2
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           	psect	cstackCOMRAM
   596  000001                     __pcstackCOMRAM:
   597                           	opt stack 0
   598  000001                     ??_Timer0_ISR:
   599                           
   600                           ; 1 bytes @ 0x0
   601  000001                     	ds	18
   602  000013                     ??_isdigit:
   603  000013                     ?_strcmp2:
   604                           	opt stack 0
   605  000013                     ?___wmul:
   606                           	opt stack 0
   607  000013                     ?___awdiv:
   608                           	opt stack 0
   609  000013                     ?___lmul:
   610                           	opt stack 0
   611  000013                     ?___lldiv:
   612                           	opt stack 0
   613  000013                     ?___llmod:
   614                           	opt stack 0
   615  000013                     readSerialData@data:
   616                           	opt stack 0
   617  000013                     SPI_send_data@data:
   618                           	opt stack 0
   619  000013                     delayMS10@count:
   620                           	opt stack 0
   621  000013                     command_builder_add_char@send_buffer:
   622                           	opt stack 0
   623  000013                     strcmp2@a:
   624                           	opt stack 0
   625  000013                     SPI_receive_data@data:
   626                           	opt stack 0
   627  000013                     ___wmul@multiplier:
   628                           	opt stack 0
   629  000013                     ___awdiv@dividend:
   630                           	opt stack 0
   631  000013                     ___lmul@multiplier:
   632                           	opt stack 0
   633  000013                     ___lldiv@dividend:
   634                           	opt stack 0
   635  000013                     ___llmod@dividend:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x12
   639  000013                     	ds	1
   640  000014                     SPI_send_data@sendGood:
   641                           	opt stack 0
   642  000014                     _isdigit$2582:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x13
   646  000014                     	ds	1
   647  000015                     ??_delayMS10:
   648  000015                     command_builder_add_char@data:
   649                           	opt stack 0
   650  000015                     SPI_receive_data@recvGood:
   651                           	opt stack 0
   652  000015                     isdigit@c:
   653                           	opt stack 0
   654  000015                     send_data@send_buffer:
   655                           	opt stack 0
   656  000015                     strcmp2@b:
   657                           	opt stack 0
   658  000015                     ___wmul@multiplicand:
   659                           	opt stack 0
   660  000015                     ___awdiv@divisor:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x14
   664  000015                     	ds	1
   665  000016                     ??_command_builder_add_char:
   666  000016                     delayMS10@inx:
   667                           	opt stack 0
   668  000016                     receive_data@receive_buffer:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x15
   672  000016                     	ds	1
   673  000017                     ??_send_data:
   674  000017                     ??_strcmp2:
   675  000017                     ___awdiv@counter:
   676                           	opt stack 0
   677  000017                     command_builder_add_string@send_buffer:
   678                           	opt stack 0
   679  000017                     ___wmul@product:
   680                           	opt stack 0
   681  000017                     ___lmul@multiplicand:
   682                           	opt stack 0
   683  000017                     ___lldiv@divisor:
   684                           	opt stack 0
   685  000017                     ___llmod@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x16
   689  000017                     	ds	1
   690  000018                     ??_receive_data:
   691  000018                     ___awdiv@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x17
   695  000018                     	ds	1
   696  000019                     receive_data@data:
   697                           	opt stack 0
   698  000019                     send_data@send_end:
   699                           	opt stack 0
   700  000019                     process_data_parameterize@parameters:
   701                           	opt stack 0
   702  000019                     command_builder_add_string@data_string:
   703                           	opt stack 0
   704  000019                     ___awdiv@quotient:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x18
   708  000019                     	ds	1
   709  00001A                     strcmp2@match:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x19
   713  00001A                     	ds	1
   714  00001B                     ??_powerCalculation:
   715  00001B                     ??_command_builder_add_string:
   716  00001B                     ___llmod@counter:
   717                           	opt stack 0
   718  00001B                     process_data_parameterize@buffer_to_parameterize:
   719                           	opt stack 0
   720  00001B                     ___lmul@product:
   721                           	opt stack 0
   722  00001B                     ___lldiv@quotient:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x1A
   726  00001B                     	ds	1
   727  00001C                     strcmp2@inx:
   728                           	opt stack 0
   729  00001C                     _powerCalculation$2940:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x1B
   733  00001C                     	ds	1
   734  00001D                     ??_process_data_parameterize:
   735  00001D                     command_builder_add_string@inx:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x1C
   739  00001D                     	ds	1
   740  00001E                     strmatch@a:
   741                           	opt stack 0
   742  00001E                     _powerCalculation$2941:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x1D
   746  00001E                     	ds	1
   747  00001F                     ?_atol:
   748                           	opt stack 0
   749  00001F                     ___lldiv@counter:
   750                           	opt stack 0
   751  00001F                     command_builder1@send_buffer:
   752                           	opt stack 0
   753  00001F                     command_builder3@send_buffer:
   754                           	opt stack 0
   755  00001F                     atol@s:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x1E
   759  00001F                     	ds	1
   760  000020                     powerCalculation@realPower:
   761                           	opt stack 0
   762  000020                     process_data_parameterize@inx:
   763                           	opt stack 0
   764  000020                     strmatch@b:
   765                           	opt stack 0
   766  000020                     ultoa@buf:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x1F
   770  000020                     	ds	1
   771  000021                     command_builder1@data1:
   772                           	opt stack 0
   773  000021                     command_builder3@data1:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x20
   777  000021                     	ds	1
   778  000022                     process_data_parameterize@parameter_index:
   779                           	opt stack 0
   780  000022                     powerCalculation@i:
   781                           	opt stack 0
   782  000022                     strmatch@result:
   783                           	opt stack 0
   784  000022                     ultoa@val:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x21
   788  000022                     	ds	1
   789  000023                     ??_atol:
   790  000023                     process_data_parameterize@parameter_position:
   791                           	opt stack 0
   792  000023                     command_builder3@data2:
   793                           	opt stack 0
   794  000023                     send_end_of_transmission@send_buffer:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x22
   798  000023                     	ds	1
   799  000024                     strmatch@match:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x23
   803  000024                     	ds	1
   804  000025                     command_builder3@data3:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x24
   808  000025                     	ds	1
   809  000026                     ultoa@base:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x25
   813  000026                     	ds	1
   814  000027                     atol@sign:
   815                           	opt stack 0
   816  000027                     com_command_setVersion@send_buffer:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x26
   820  000027                     	ds	1
   821  000028                     atol@a:
   822                           	opt stack 0
   823  000028                     ultoa@v:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x27
   827  000028                     	ds	1
   828  000029                     
   829                           ; 1 bytes @ 0x28
   830  000029                     	ds	3
   831  00002C                     atol@c:
   832                           	opt stack 0
   833  00002C                     ultoa@c:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x2B
   837  00002C                     	ds	1
   838  00002D                     com_command_setPower@send_buffer:
   839                           	opt stack 0
   840  00002D                     com_command_setEnergyUsed@send_buffer:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x2C
   844  00002D                     	ds	2
   845  00002F                     resetCommunications@send_buffer:
   846                           	opt stack 0
   847  00002F                     process_data_parameters@parameters:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x2E
   851  00002F                     	ds	2
   852  000031                     ??_resetCommunications:
   853  000031                     process_data_parameters@send_buffer:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x30
   857  000031                     	ds	2
   858  000033                     process_data_parameters@end_of_transmission_received:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x32
   862  000033                     	ds	1
   863  000034                     process_data@receive_buffer:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x33
   867  000034                     	ds	2
   868  000036                     process_data@send_buffer:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x35
   872  000036                     	ds	2
   873  000038                     communications@no_more_to_send:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x37
   877  000038                     	ds	1
   878  000039                     communications@firstTime:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x38
   882  000039                     	ds	1
   883  00003A                     tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892                           ; 1 bytes @ 0x39
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 84 in file "Current_Sense_Main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  inx             2   15[BANK0 ] int 
   903 ;;  inx             2   13[BANK0 ] int 
   904 ;;  initDone        1   12[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       5       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         0       5       0       0       0       0       0
   918 ;;Total ram usage:        5 bytes
   919 ;; Hardware stack levels required when called:    8
   920 ;; This function calls:
   921 ;;		_communications
   922 ;;		_delayMS10
   923 ;;		_energyPulseCheck
   924 ;;		_init
   925 ;;		_initMCP
   926 ;;		_initTimer
   927 ;;		_powerCalculation
   928 ;;		_pulseFoutPassThru
   929 ;;		_readSerialData
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text0
   936  000E9E                     __ptext0:
   937                           	opt stack 0
   938  000E9E                     _main:
   939                           	opt stack 23
   940                           
   941                           ;Current_Sense_Main.c: 86: init();
   942                           
   943                           ;incstack = 0
   944  000E9E  EC06  F00D         	call	_init	;wreg free
   945                           
   946                           ;Current_Sense_Main.c: 88: for (int inx = 0; inx < 10; inx++)
   947  000EA2  0E00               	movlw	0
   948  000EA4  0100               	movlb	0	; () banked
   949  000EA6  6FCC               	movwf	(main@inx+1)& (0+255),b
   950  000EA8  0E00               	movlw	0
   951  000EAA  6FCB               	movwf	main@inx& (0+255),b
   952  000EAC                     l3550:
   953                           
   954                           ; BSR set to: 0
   955  000EAC  0100               	movlb	0	; () banked
   956  000EAE  BFCC               	btfsc	(main@inx+1)& (0+255),7,b
   957  000EB0  D008               	goto	l135
   958  000EB2  0100               	movlb	0	; () banked
   959  000EB4  51CC               	movf	(main@inx+1)& (0+255),w,b
   960  000EB6  E117               	bnz	l3562
   961  000EB8  0E0A               	movlw	10
   962  000EBA  0100               	movlb	0	; () banked
   963  000EBC  5DCB               	subwf	main@inx& (0+255),w,b
   964  000EBE  B0D8               	btfsc	status,0,c
   965  000EC0  D012               	goto	u3110
   966  000EC2                     l135:
   967                           
   968                           ; BSR set to: 0
   969                           ;Current_Sense_Main.c: 89: {
   970                           ;Current_Sense_Main.c: 90: LATBbits.LATB4 = 1;
   971  000EC2  888A               	bsf	3978,4,c	;volatile
   972                           
   973                           ; BSR set to: 0
   974                           ;Current_Sense_Main.c: 91: delayMS10(10);
   975  000EC4  0E00               	movlw	0
   976  000EC6  6E14               	movwf	delayMS10@count+1,c
   977  000EC8  0E0A               	movlw	10
   978  000ECA  6E13               	movwf	delayMS10@count,c
   979  000ECC  EC1B  F00C         	call	_delayMS10	;wreg free
   980                           
   981                           ;Current_Sense_Main.c: 92: LATBbits.LATB4 = 0;
   982  000ED0  988A               	bcf	3978,4,c	;volatile
   983                           
   984                           ;Current_Sense_Main.c: 93: delayMS10(10);
   985  000ED2  0E00               	movlw	0
   986  000ED4  6E14               	movwf	delayMS10@count+1,c
   987  000ED6  0E0A               	movlw	10
   988  000ED8  6E13               	movwf	delayMS10@count,c
   989  000EDA  EC1B  F00C         	call	_delayMS10	;wreg free
   990  000EDE  0100               	movlb	0	; () banked
   991  000EE0  4BCB               	infsnz	main@inx& (0+255),f,b
   992  000EE2  2BCC               	incf	(main@inx+1)& (0+255),f,b
   993  000EE4  D7E3               	goto	l3550
   994  000EE6                     u3110:
   995  000EE6                     l3562:
   996                           
   997                           ; BSR set to: 0
   998                           ;Current_Sense_Main.c: 94: }
   999                           ;Current_Sense_Main.c: 96: initTimer();
  1000  000EE6  ECEE  F00C         	call	_initTimer	;wreg free
  1001                           
  1002                           ;Current_Sense_Main.c: 124: communications(1);
  1003  000EEA  0E01               	movlw	1
  1004  000EEC  ECBC  F008         	call	_communications
  1005                           
  1006                           ;Current_Sense_Main.c: 131: bool initDone = 0;
  1007  000EF0  0E00               	movlw	0
  1008  000EF2  0100               	movlb	0	; () banked
  1009  000EF4  6FCA               	movwf	main@initDone& (0+255),b
  1010  000EF6                     l3568:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;Current_Sense_Main.c: 134: {
  1014                           ;Current_Sense_Main.c: 135: communications(0);
  1015  000EF6  0E00               	movlw	0
  1016  000EF8  ECBC  F008         	call	_communications
  1017                           
  1018                           ;Current_Sense_Main.c: 136: pulseFoutPassThru();
  1019  000EFC  EC9F  F00C         	call	_pulseFoutPassThru	;wreg free
  1020                           
  1021                           ;Current_Sense_Main.c: 137: energyPulseCheck();
  1022  000F00  EC5E  F00A         	call	_energyPulseCheck	;wreg free
  1023                           
  1024                           ;Current_Sense_Main.c: 138: readSerialData();
  1025  000F04  EC09  F009         	call	_readSerialData	;wreg free
  1026                           
  1027                           ;Current_Sense_Main.c: 139: powerCalculation();
  1028  000F08  ECD9  F005         	call	_powerCalculation	;wreg free
  1029                           
  1030                           ;Current_Sense_Main.c: 142: if (initDone == 0)
  1031  000F0C  0100               	movlb	0	; () banked
  1032  000F0E  51CA               	movf	main@initDone& (0+255),w,b
  1033  000F10  0100               	movlb	0	; () banked
  1034  000F12  A4D8               	btfss	status,2,c
  1035  000F14  D7F0               	goto	l137
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;Current_Sense_Main.c: 143: {
  1039                           ;Current_Sense_Main.c: 144: if (timerCountLF > 1000)
  1040  000F16  0100               	movlb	0	; () banked
  1041  000F18  5183               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1042  000F1A  0100               	movlb	0	; () banked
  1043  000F1C  1182               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1044  000F1E  E108               	bnz	u3130
  1045  000F20  0EE9               	movlw	233
  1046  000F22  0100               	movlb	0	; () banked
  1047  000F24  5D80               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1048  000F26  0E03               	movlw	3
  1049  000F28  0100               	movlb	0	; () banked
  1050  000F2A  5981               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1051  000F2C  A0D8               	btfss	status,0,c
  1052  000F2E  D7E3               	goto	l137
  1053  000F30                     u3130:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;Current_Sense_Main.c: 145: {
  1057                           ;Current_Sense_Main.c: 146: initMCP();
  1058  000F30  EC1C  F00D         	call	_initMCP	;wreg free
  1059                           
  1060                           ;Current_Sense_Main.c: 147: initDone = 1;
  1061  000F34  0E01               	movlw	1
  1062  000F36  0100               	movlb	0	; () banked
  1063  000F38  6FCA               	movwf	main@initDone& (0+255),b
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;Current_Sense_Main.c: 149: for (int inx = 0; inx < 10; inx++)
  1067  000F3A  0E00               	movlw	0
  1068  000F3C  0100               	movlb	0	; () banked
  1069  000F3E  6FCE               	movwf	(main@inx_1350+1)& (0+255),b
  1070  000F40  0E00               	movlw	0
  1071  000F42  6FCD               	movwf	main@inx_1350& (0+255),b
  1072  000F44                     l3588:
  1073                           
  1074                           ; BSR set to: 0
  1075  000F44  0100               	movlb	0	; () banked
  1076  000F46  BFCE               	btfsc	(main@inx_1350+1)& (0+255),7,b
  1077  000F48  D008               	goto	l140
  1078  000F4A  0100               	movlb	0	; () banked
  1079  000F4C  51CE               	movf	(main@inx_1350+1)& (0+255),w,b
  1080  000F4E  E1D3               	bnz	l3568
  1081  000F50  0E0A               	movlw	10
  1082  000F52  0100               	movlb	0	; () banked
  1083  000F54  5DCD               	subwf	main@inx_1350& (0+255),w,b
  1084  000F56  B0D8               	btfsc	status,0,c
  1085  000F58  D7CE               	goto	l137
  1086  000F5A                     l140:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;Current_Sense_Main.c: 150: {
  1090                           ;Current_Sense_Main.c: 151: LATBbits.LATB4 = 1;
  1091  000F5A  888A               	bsf	3978,4,c	;volatile
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;Current_Sense_Main.c: 152: delayMS10(3);
  1095  000F5C  0E00               	movlw	0
  1096  000F5E  6E14               	movwf	delayMS10@count+1,c
  1097  000F60  0E03               	movlw	3
  1098  000F62  6E13               	movwf	delayMS10@count,c
  1099  000F64  EC1B  F00C         	call	_delayMS10	;wreg free
  1100                           
  1101                           ;Current_Sense_Main.c: 153: LATBbits.LATB4 = 0;
  1102  000F68  988A               	bcf	3978,4,c	;volatile
  1103                           
  1104                           ;Current_Sense_Main.c: 154: delayMS10(5);
  1105  000F6A  0E00               	movlw	0
  1106  000F6C  6E14               	movwf	delayMS10@count+1,c
  1107  000F6E  0E05               	movlw	5
  1108  000F70  6E13               	movwf	delayMS10@count,c
  1109  000F72  EC1B  F00C         	call	_delayMS10	;wreg free
  1110  000F76  0100               	movlb	0	; () banked
  1111  000F78  4BCD               	infsnz	main@inx_1350& (0+255),f,b
  1112  000F7A  2BCE               	incf	(main@inx_1350+1)& (0+255),f,b
  1113  000F7C  D7E3               	goto	l3588
  1114  000F7E                     __end_of_main:
  1115                           	opt stack 0
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           postdec1	equ	0xFE5
  1123                           fsr1l	equ	0xFE1
  1124                           status	equ	0xFD8
  1125                           
  1126 ;; *************** function _readSerialData *****************
  1127 ;; Defined at:
  1128 ;;		line 285 in file "Current_Sense_Main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  data            1   18[COMRAM] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1142 ;;      Params:         0       0       0       0       0       0       0
  1143 ;;      Locals:         1       0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0
  1145 ;;      Totals:         1       0       0       0       0       0       0
  1146 ;;Total ram usage:        1 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text1
  1157  001212                     __ptext1:
  1158                           	opt stack 0
  1159  001212                     _readSerialData:
  1160                           	opt stack 29
  1161                           
  1162                           ;Current_Sense_Main.c: 287: static bool readingData = 0;
  1163                           ;Current_Sense_Main.c: 288: static bool byte1Read = 0;
  1164                           ;Current_Sense_Main.c: 289: static bool byte2Read = 0;
  1165                           ;Current_Sense_Main.c: 290: static bool byte3Read = 0;
  1166                           ;Current_Sense_Main.c: 292: if (dataAvailable || readingData) {
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;incstack = 0
  1170  001212  5049               	movf	_dataAvailable,w,c
  1171  001214  A4D8               	btfss	status,2,c
  1172  001216  D003               	goto	u2990
  1173  001218  5046               	movf	readSerialData@readingData,w,c
  1174  00121A  B4D8               	btfsc	status,2,c
  1175  00121C  0012               	return	
  1176  00121E                     u2990:
  1177                           
  1178                           ;Current_Sense_Main.c: 294: if (!readingData) {
  1179  00121E  5046               	movf	readSerialData@readingData,w,c
  1180  001220  A4D8               	btfss	status,2,c
  1181  001222  D006               	goto	l186
  1182                           
  1183                           ;Current_Sense_Main.c: 295: SSP1BUF = 0xac;
  1184  001224  0EAC               	movlw	172
  1185  001226  6EC9               	movwf	4041,c	;volatile
  1186                           
  1187                           ;Current_Sense_Main.c: 296: readingData = 1;
  1188  001228  0E01               	movlw	1
  1189  00122A  6E46               	movwf	readSerialData@readingData,c
  1190                           
  1191                           ;Current_Sense_Main.c: 297: dataRead = 0;
  1192  00122C  0E00               	movlw	0
  1193  00122E  6E4A               	movwf	_dataRead,c
  1194  001230                     l186:
  1195                           
  1196                           ;Current_Sense_Main.c: 299: }
  1197                           ;Current_Sense_Main.c: 301: if (readingData && SSP1STATbits.BF) {
  1198  001230  5046               	movf	readSerialData@readingData,w,c
  1199  001232  B4D8               	btfsc	status,2,c
  1200  001234  0012               	return	
  1201  001236  A0C7               	btfss	4039,0,c	;volatile
  1202  001238  0012               	return	
  1203                           
  1204                           ;Current_Sense_Main.c: 302: char data = SSP1BUF;
  1205  00123A  CFC9 F013          	movff	4041,readSerialData@data	;volatile
  1206                           
  1207                           ;Current_Sense_Main.c: 303: PIR1bits.SSP1IF = 0;
  1208  00123E  969E               	bcf	3998,3,c	;volatile
  1209                           
  1210                           ;Current_Sense_Main.c: 304: SSP1CON1bits.WCOL = 0;
  1211  001240  9EC6               	bcf	4038,7,c	;volatile
  1212                           
  1213                           ;Current_Sense_Main.c: 305: readingData = 0;
  1214  001242  0E00               	movlw	0
  1215  001244  6E46               	movwf	readSerialData@readingData,c
  1216                           
  1217                           ;Current_Sense_Main.c: 307: if (!byte1Read) {
  1218  001246  5045               	movf	readSerialData@byte1Read,w,c
  1219  001248  A4D8               	btfss	status,2,c
  1220  00124A  D007               	goto	l188
  1221                           
  1222                           ;Current_Sense_Main.c: 308: voltageData = (data << 8) & 0xFF;
  1223  00124C  0E00               	movlw	0
  1224  00124E  6E3D               	movwf	_voltageData+1,c
  1225  001250  0E00               	movlw	0
  1226  001252  6E3C               	movwf	_voltageData,c
  1227                           
  1228                           ;Current_Sense_Main.c: 309: byte1Read = 1;
  1229  001254  0E01               	movlw	1
  1230  001256  6E45               	movwf	readSerialData@byte1Read,c
  1231                           
  1232                           ;Current_Sense_Main.c: 310: }
  1233  001258  0012               	return	
  1234  00125A                     l188:
  1235                           
  1236                           ;Current_Sense_Main.c: 311: else if (!byte2Read) {
  1237  00125A  5044               	movf	readSerialData@byte2Read,w,c
  1238  00125C  A4D8               	btfss	status,2,c
  1239  00125E  D008               	goto	l190
  1240                           
  1241                           ;Current_Sense_Main.c: 312: voltageData = voltageData | data;
  1242  001260  503C               	movf	_voltageData,w,c
  1243  001262  1013               	iorwf	readSerialData@data,w,c
  1244  001264  6E3C               	movwf	_voltageData,c
  1245  001266  503D               	movf	_voltageData+1,w,c
  1246  001268  6E3D               	movwf	_voltageData+1,c
  1247                           
  1248                           ;Current_Sense_Main.c: 313: byte2Read = 1;
  1249  00126A  0E01               	movlw	1
  1250  00126C  6E44               	movwf	readSerialData@byte2Read,c
  1251                           
  1252                           ;Current_Sense_Main.c: 314: }
  1253  00126E  0012               	return	
  1254  001270                     l190:
  1255                           
  1256                           ;Current_Sense_Main.c: 315: else if (!byte3Read) {
  1257  001270  5043               	movf	readSerialData@byte3Read,w,c
  1258  001272  A4D8               	btfss	status,2,c
  1259  001274  D007               	goto	l192
  1260                           
  1261                           ;Current_Sense_Main.c: 316: currentData = (data << 8) & 0xFF;
  1262  001276  0E00               	movlw	0
  1263  001278  6E3B               	movwf	_currentData+1,c
  1264  00127A  0E00               	movlw	0
  1265  00127C  6E3A               	movwf	_currentData,c
  1266                           
  1267                           ;Current_Sense_Main.c: 317: byte3Read = 1;
  1268  00127E  0E01               	movlw	1
  1269  001280  6E43               	movwf	readSerialData@byte3Read,c
  1270                           
  1271                           ;Current_Sense_Main.c: 318: }
  1272  001282  0012               	return	
  1273  001284                     l192:
  1274                           
  1275                           ;Current_Sense_Main.c: 319: else if (!dataRead) {
  1276  001284  504A               	movf	_dataRead,w,c
  1277  001286  A4D8               	btfss	status,2,c
  1278  001288  0012               	return	
  1279                           
  1280                           ;Current_Sense_Main.c: 320: currentData = currentData | data;
  1281  00128A  503A               	movf	_currentData,w,c
  1282  00128C  1013               	iorwf	readSerialData@data,w,c
  1283  00128E  6E3A               	movwf	_currentData,c
  1284  001290  503B               	movf	_currentData+1,w,c
  1285  001292  6E3B               	movwf	_currentData+1,c
  1286                           
  1287                           ;Current_Sense_Main.c: 322: dataAvailable = 0;
  1288  001294  0E00               	movlw	0
  1289  001296  6E49               	movwf	_dataAvailable,c
  1290                           
  1291                           ;Current_Sense_Main.c: 323: byte1Read = 0;
  1292  001298  0E00               	movlw	0
  1293  00129A  6E45               	movwf	readSerialData@byte1Read,c
  1294                           
  1295                           ;Current_Sense_Main.c: 324: byte2Read = 0;
  1296  00129C  0E00               	movlw	0
  1297  00129E  6E44               	movwf	readSerialData@byte2Read,c
  1298                           
  1299                           ;Current_Sense_Main.c: 325: byte3Read = 0;
  1300  0012A0  0E00               	movlw	0
  1301  0012A2  6E43               	movwf	readSerialData@byte3Read,c
  1302                           
  1303                           ;Current_Sense_Main.c: 326: dataRead = 1;
  1304  0012A4  0E01               	movlw	1
  1305  0012A6  6E4A               	movwf	_dataRead,c
  1306  0012A8  0012               	return	
  1307  0012AA                     __end_of_readSerialData:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           postdec1	equ	0xFE5
  1316                           fsr1l	equ	0xFE1
  1317                           status	equ	0xFD8
  1318                           
  1319 ;; *************** function _pulseFoutPassThru *****************
  1320 ;; Defined at:
  1321 ;;		line 197 in file "Current_Sense_Main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text2
  1350  00193E                     __ptext2:
  1351                           	opt stack 0
  1352  00193E                     _pulseFoutPassThru:
  1353                           	opt stack 29
  1354                           
  1355                           ;Current_Sense_Main.c: 200: static bool runonce = 0;
  1356                           ;Current_Sense_Main.c: 202: if (PORTCbits.RC2 == 0)
  1357                           
  1358                           ;incstack = 0
  1359  00193E  B482               	btfsc	3970,2,c	;volatile
  1360  001940  D00C               	goto	l149
  1361                           
  1362                           ;Current_Sense_Main.c: 203: {
  1363                           ;Current_Sense_Main.c: 204: LATAbits.LATA0 = 1;
  1364  001942  8089               	bsf	3977,0,c	;volatile
  1365                           
  1366                           ;Current_Sense_Main.c: 205: if (runonce == 0)
  1367  001944  5048               	movf	pulseFoutPassThru@runonce,w,c
  1368  001946  A4D8               	btfss	status,2,c
  1369  001948  0012               	return	
  1370                           
  1371                           ;Current_Sense_Main.c: 206: {
  1372                           ;Current_Sense_Main.c: 207: runonce = 1;
  1373  00194A  0E01               	movlw	1
  1374  00194C  6E48               	movwf	pulseFoutPassThru@runonce,c
  1375                           
  1376                           ;Current_Sense_Main.c: 208: if (PORTBbits.RB4 == 1)
  1377  00194E  A881               	btfss	3969,4,c	;volatile
  1378  001950  D002               	goto	l151
  1379                           
  1380                           ;Current_Sense_Main.c: 209: {
  1381                           ;Current_Sense_Main.c: 210: LATBbits.LATB4 = 0;
  1382  001952  988A               	bcf	3978,4,c	;volatile
  1383                           
  1384                           ;Current_Sense_Main.c: 211: }
  1385  001954  0012               	return	
  1386  001956                     l151:
  1387                           
  1388                           ;Current_Sense_Main.c: 212: else
  1389                           ;Current_Sense_Main.c: 213: {
  1390                           ;Current_Sense_Main.c: 214: LATBbits.LATB4 = 1;
  1391  001956  888A               	bsf	3978,4,c	;volatile
  1392                           
  1393                           ;Current_Sense_Main.c: 215: }
  1394                           ;Current_Sense_Main.c: 216: }
  1395                           ;Current_Sense_Main.c: 217: }
  1396  001958  0012               	return	
  1397  00195A                     l149:
  1398                           
  1399                           ;Current_Sense_Main.c: 218: else
  1400                           ;Current_Sense_Main.c: 219: {
  1401                           ;Current_Sense_Main.c: 220: LATAbits.LATA0 = 0;
  1402  00195A  9089               	bcf	3977,0,c	;volatile
  1403                           
  1404                           ;Current_Sense_Main.c: 221: runonce = 0;
  1405  00195C  0E00               	movlw	0
  1406  00195E  6E48               	movwf	pulseFoutPassThru@runonce,c
  1407  001960  0012               	return	
  1408  001962                     __end_of_pulseFoutPassThru:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function _powerCalculation *****************
  1421 ;; Defined at:
  1422 ;;		line 336 in file "Current_Sense_Main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  i               2   33[COMRAM] int 
  1427 ;;  realPower       2   31[COMRAM] int 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         8       0       0       0       0       0       0
  1439 ;;      Temps:          1       0       0       0       0       0       0
  1440 ;;      Totals:         9       0       0       0       0       0       0
  1441 ;;Total ram usage:        9 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    2
  1444 ;; This function calls:
  1445 ;;		___awdiv
  1446 ;;		___wmul
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text3
  1453  000BB2                     __ptext3:
  1454                           	opt stack 0
  1455  000BB2                     _powerCalculation:
  1456                           	opt stack 28
  1457                           
  1458                           ;Current_Sense_Main.c: 337: static int size = 14;
  1459                           ;Current_Sense_Main.c: 338: static int instantPower[14];
  1460                           ;Current_Sense_Main.c: 339: static int counter = 0;
  1461                           ;Current_Sense_Main.c: 343: static int voltageScalar = 1;
  1462                           ;Current_Sense_Main.c: 344: static int currentScalar = 1;
  1463                           ;Current_Sense_Main.c: 347: if (dataRead) {
  1464                           
  1465                           ;incstack = 0
  1466  000BB2  504A               	movf	_dataRead,w,c
  1467  000BB4  B4D8               	btfsc	status,2,c
  1468  000BB6  D038               	goto	l208
  1469                           
  1470                           ;Current_Sense_Main.c: 348: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1471  000BB8  C03A  F013         	movff	_currentData,___wmul@multiplier
  1472  000BBC  C03B  F014         	movff	_currentData+1,___wmul@multiplier+1
  1473  000BC0  C0CF  F015         	movff	powerCalculation@currentScalar,___wmul@multiplicand
  1474  000BC4  C0D0  F016         	movff	powerCalculation@currentScalar+1,___wmul@multiplicand+1
  1475  000BC8  EC8C  F00C         	call	___wmul	;wreg free
  1476  000BCC  C013  F01C         	movff	?___wmul,_powerCalculation$2940
  1477  000BD0  C014  F01D         	movff	?___wmul+1,_powerCalculation$2940+1
  1478                           
  1479                           ;Current_Sense_Main.c: 348: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1480  000BD4  C01C  F013         	movff	_powerCalculation$2940,___wmul@multiplier
  1481  000BD8  C01D  F014         	movff	_powerCalculation$2940+1,___wmul@multiplier+1
  1482  000BDC  C03C  F015         	movff	_voltageData,___wmul@multiplicand
  1483  000BE0  C03D  F016         	movff	_voltageData+1,___wmul@multiplicand+1
  1484  000BE4  EC8C  F00C         	call	___wmul	;wreg free
  1485  000BE8  C013  F01E         	movff	?___wmul,_powerCalculation$2941
  1486  000BEC  C014  F01F         	movff	?___wmul+1,_powerCalculation$2941+1
  1487                           
  1488                           ;Current_Sense_Main.c: 348: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1489  000BF0  C01E  F013         	movff	_powerCalculation$2941,___wmul@multiplier
  1490  000BF4  C01F  F014         	movff	_powerCalculation$2941+1,___wmul@multiplier+1
  1491  000BF8  C0D1  F015         	movff	powerCalculation@voltageScalar,___wmul@multiplicand
  1492  000BFC  C0D2  F016         	movff	powerCalculation@voltageScalar+1,___wmul@multiplicand+1
  1493  000C00  EC8C  F00C         	call	___wmul	;wreg free
  1494  000C04  90D8               	bcf	status,0,c
  1495  000C06  0100               	movlb	0	; () banked
  1496  000C08  3592               	rlcf	powerCalculation@counter& (0+255),w,b
  1497  000C0A  6ED9               	movwf	fsr2l,c
  1498  000C0C  0100               	movlb	0	; () banked
  1499  000C0E  3593               	rlcf	(powerCalculation@counter+1)& (0+255),w,b
  1500  000C10  6EDA               	movwf	fsr2h,c
  1501  000C12  0E60               	movlw	low powerCalculation@instantPower
  1502  000C14  26D9               	addwf	fsr2l,f,c
  1503  000C16  0E00               	movlw	high powerCalculation@instantPower
  1504  000C18  22DA               	addwfc	fsr2h,f,c
  1505  000C1A  C013  FFDE         	movff	?___wmul,postinc2
  1506  000C1E  C014  FFDD         	movff	?___wmul+1,postdec2
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;Current_Sense_Main.c: 349: counter++;
  1510  000C22  0100               	movlb	0	; () banked
  1511  000C24  4B92               	infsnz	powerCalculation@counter& (0+255),f,b
  1512  000C26  2B93               	incf	(powerCalculation@counter+1)& (0+255),f,b
  1513  000C28                     l208:
  1514                           
  1515                           ;Current_Sense_Main.c: 350: }
  1516                           ;Current_Sense_Main.c: 351: if (counter == size) {
  1517                           
  1518                           ; BSR set to: 0
  1519  000C28  504B               	movf	powerCalculation@size,w,c
  1520  000C2A  0100               	movlb	0	; () banked
  1521  000C2C  1992               	xorwf	powerCalculation@counter& (0+255),w,b
  1522  000C2E  E141               	bnz	l213
  1523  000C30  504C               	movf	powerCalculation@size+1,w,c
  1524  000C32  0100               	movlb	0	; () banked
  1525  000C34  1993               	xorwf	(powerCalculation@counter+1)& (0+255),w,b
  1526  000C36  A4D8               	btfss	status,2,c
  1527  000C38  0012               	return	
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;Current_Sense_Main.c: 352: int realPower = 0;
  1531  000C3A  0E00               	movlw	0
  1532  000C3C  6E21               	movwf	powerCalculation@realPower+1,c
  1533  000C3E  0E00               	movlw	0
  1534  000C40  6E20               	movwf	powerCalculation@realPower,c
  1535                           
  1536                           ;Current_Sense_Main.c: 353: for (int i = 0; i < size; i++) {
  1537  000C42  0E00               	movlw	0
  1538  000C44  6E23               	movwf	powerCalculation@i+1,c
  1539  000C46  0E00               	movlw	0
  1540  000C48  6E22               	movwf	powerCalculation@i,c
  1541  000C4A  D00F               	goto	l210
  1542  000C4C                     
  1543                           ;Current_Sense_Main.c: 354: realPower =+ instantPower[i];
  1544                           
  1545                           ; BSR set to: 0
  1546  000C4C  90D8               	bcf	status,0,c
  1547  000C4E  3422               	rlcf	powerCalculation@i,w,c
  1548  000C50  6ED9               	movwf	fsr2l,c
  1549  000C52  3423               	rlcf	powerCalculation@i+1,w,c
  1550  000C54  6EDA               	movwf	fsr2h,c
  1551  000C56  0E60               	movlw	low powerCalculation@instantPower
  1552  000C58  26D9               	addwf	fsr2l,f,c
  1553  000C5A  0E00               	movlw	high powerCalculation@instantPower
  1554  000C5C  22DA               	addwfc	fsr2h,f,c
  1555  000C5E  CFDE F020          	movff	postinc2,powerCalculation@realPower
  1556  000C62  CFDD F021          	movff	postdec2,powerCalculation@realPower+1
  1557  000C66  4A22               	infsnz	powerCalculation@i,f,c
  1558  000C68  2A23               	incf	powerCalculation@i+1,f,c
  1559  000C6A                     l210:
  1560  000C6A  504B               	movf	powerCalculation@size,w,c
  1561  000C6C  5C22               	subwf	powerCalculation@i,w,c
  1562  000C6E  5023               	movf	powerCalculation@i+1,w,c
  1563  000C70  0A80               	xorlw	128
  1564  000C72  6E1B               	movwf	??_powerCalculation& (0+255),c
  1565  000C74  504C               	movf	powerCalculation@size+1,w,c
  1566  000C76  0A80               	xorlw	128
  1567  000C78  581B               	subwfb	??_powerCalculation& (0+255),w,c
  1568  000C7A  A0D8               	btfss	status,0,c
  1569  000C7C  D7E7               	goto	l211
  1570                           
  1571                           ;Current_Sense_Main.c: 355: }
  1572                           ;Current_Sense_Main.c: 356: counter = 0;
  1573  000C7E  0E00               	movlw	0
  1574  000C80  0100               	movlb	0	; () banked
  1575  000C82  6F93               	movwf	(powerCalculation@counter+1)& (0+255),b
  1576  000C84  0E00               	movlw	0
  1577  000C86  6F92               	movwf	powerCalculation@counter& (0+255),b
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;Current_Sense_Main.c: 357: meterWatts = realPower / size;
  1581  000C88  C020  F013         	movff	powerCalculation@realPower,___awdiv@dividend
  1582  000C8C  C021  F014         	movff	powerCalculation@realPower+1,___awdiv@dividend+1
  1583  000C90  C04B  F015         	movff	powerCalculation@size,___awdiv@divisor
  1584  000C94  C04C  F016         	movff	powerCalculation@size+1,___awdiv@divisor+1
  1585  000C98  EC9D  F009         	call	___awdiv	;wreg free
  1586  000C9C  C013  F08C         	movff	?___awdiv,_meterWatts
  1587  000CA0  C014  F08D         	movff	?___awdiv+1,_meterWatts+1
  1588  000CA4  0100               	movlb	0	; () banked
  1589  000CA6  0E00               	movlw	0
  1590  000CA8  BF8D               	btfsc	(_meterWatts+1)& (0+255),7,b
  1591  000CAA  0EFF               	movlw	-1
  1592  000CAC  6F8E               	movwf	(_meterWatts+2)& (0+255),b
  1593  000CAE  6F8F               	movwf	(_meterWatts+3)& (0+255),b
  1594                           
  1595                           ; BSR set to: 0
  1596  000CB0  0012               	return	
  1597  000CB2                     l213:
  1598                           
  1599                           ; BSR set to: 0
  1600  000CB2  0012               	return		;funcret
  1601  000CB4                     __end_of_powerCalculation:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           postdec1	equ	0xFE5
  1610                           fsr1l	equ	0xFE1
  1611                           postinc2	equ	0xFDE
  1612                           postdec2	equ	0xFDD
  1613                           fsr2h	equ	0xFDA
  1614                           fsr2l	equ	0xFD9
  1615                           status	equ	0xFD8
  1616                           
  1617 ;; *************** function ___awdiv *****************
  1618 ;; Defined at:
  1619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  dividend        2   18[COMRAM] int 
  1622 ;;  divisor         2   20[COMRAM] int 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  quotient        2   24[COMRAM] int 
  1625 ;;  sign            1   23[COMRAM] unsigned char 
  1626 ;;  counter         1   22[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   18[COMRAM] int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         4       0       0       0       0       0       0
  1637 ;;      Locals:         4       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         8       0       0       0       0       0       0
  1640 ;;Total ram usage:        8 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_powerCalculation
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text4
  1651  00133A                     __ptext4:
  1652                           	opt stack 0
  1653  00133A                     ___awdiv:
  1654                           	opt stack 28
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;incstack = 0
  1658  00133A  0E00               	movlw	0
  1659  00133C  6E18               	movwf	___awdiv@sign,c
  1660  00133E  AE16               	btfss	___awdiv@divisor+1,7,c
  1661  001340  D006               	goto	l675
  1662  001342  6C15               	negf	___awdiv@divisor,c
  1663  001344  1E16               	comf	___awdiv@divisor+1,f,c
  1664  001346  B0D8               	btfsc	status,0,c
  1665  001348  2A16               	incf	___awdiv@divisor+1,f,c
  1666  00134A  0E01               	movlw	1
  1667  00134C  6E18               	movwf	___awdiv@sign,c
  1668  00134E                     l675:
  1669  00134E  AE14               	btfss	___awdiv@dividend+1,7,c
  1670  001350  D006               	goto	l676
  1671  001352  6C13               	negf	___awdiv@dividend,c
  1672  001354  1E14               	comf	___awdiv@dividend+1,f,c
  1673  001356  B0D8               	btfsc	status,0,c
  1674  001358  2A14               	incf	___awdiv@dividend+1,f,c
  1675  00135A  0E01               	movlw	1
  1676  00135C  1A18               	xorwf	___awdiv@sign,f,c
  1677  00135E                     l676:
  1678  00135E  0E00               	movlw	0
  1679  001360  6E1A               	movwf	___awdiv@quotient+1,c
  1680  001362  0E00               	movlw	0
  1681  001364  6E19               	movwf	___awdiv@quotient,c
  1682  001366  5015               	movf	___awdiv@divisor,w,c
  1683  001368  1016               	iorwf	___awdiv@divisor+1,w,c
  1684  00136A  B4D8               	btfsc	status,2,c
  1685  00136C  D01C               	goto	l683
  1686  00136E  0E01               	movlw	1
  1687  001370  6E17               	movwf	___awdiv@counter,c
  1688  001372  D004               	goto	l678
  1689  001374  90D8               	bcf	status,0,c
  1690  001376  3615               	rlcf	___awdiv@divisor,f,c
  1691  001378  3616               	rlcf	___awdiv@divisor+1,f,c
  1692  00137A  2A17               	incf	___awdiv@counter,f,c
  1693  00137C                     l678:
  1694  00137C  AE16               	btfss	___awdiv@divisor+1,7,c
  1695  00137E  D7FA               	goto	l679
  1696  001380                     u2840:
  1697  001380  90D8               	bcf	status,0,c
  1698  001382  3619               	rlcf	___awdiv@quotient,f,c
  1699  001384  361A               	rlcf	___awdiv@quotient+1,f,c
  1700  001386  5015               	movf	___awdiv@divisor,w,c
  1701  001388  5C13               	subwf	___awdiv@dividend,w,c
  1702  00138A  5016               	movf	___awdiv@divisor+1,w,c
  1703  00138C  5814               	subwfb	___awdiv@dividend+1,w,c
  1704  00138E  A0D8               	btfss	status,0,c
  1705  001390  D005               	goto	l682
  1706  001392  5015               	movf	___awdiv@divisor,w,c
  1707  001394  5E13               	subwf	___awdiv@dividend,f,c
  1708  001396  5016               	movf	___awdiv@divisor+1,w,c
  1709  001398  5A14               	subwfb	___awdiv@dividend+1,f,c
  1710  00139A  8019               	bsf	___awdiv@quotient,0,c
  1711  00139C                     l682:
  1712  00139C  90D8               	bcf	status,0,c
  1713  00139E  3216               	rrcf	___awdiv@divisor+1,f,c
  1714  0013A0  3215               	rrcf	___awdiv@divisor,f,c
  1715  0013A2  2E17               	decfsz	___awdiv@counter,f,c
  1716  0013A4  D7ED               	goto	u2840
  1717  0013A6                     l683:
  1718  0013A6  5018               	movf	___awdiv@sign,w,c
  1719  0013A8  B4D8               	btfsc	status,2,c
  1720  0013AA  D004               	goto	l684
  1721  0013AC  6C19               	negf	___awdiv@quotient,c
  1722  0013AE  1E1A               	comf	___awdiv@quotient+1,f,c
  1723  0013B0  B0D8               	btfsc	status,0,c
  1724  0013B2  2A1A               	incf	___awdiv@quotient+1,f,c
  1725  0013B4                     l684:
  1726  0013B4  C019  F013         	movff	___awdiv@quotient,?___awdiv
  1727  0013B8  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  1728  0013BC  0012               	return	
  1729  0013BE                     __end_of___awdiv:
  1730                           	opt stack 0
  1731                           tblptru	equ	0xFF8
  1732                           tblptrh	equ	0xFF7
  1733                           tblptrl	equ	0xFF6
  1734                           tablat	equ	0xFF5
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           postdec1	equ	0xFE5
  1738                           fsr1l	equ	0xFE1
  1739                           postinc2	equ	0xFDE
  1740                           postdec2	equ	0xFDD
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _initTimer *****************
  1746 ;; Defined at:
  1747 ;;		line 447 in file "Current_Sense_Main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       0       0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text5
  1776  0019DC                     __ptext5:
  1777                           	opt stack 0
  1778  0019DC                     _initTimer:
  1779                           	opt stack 29
  1780                           
  1781                           ;Current_Sense_Main.c: 450: T0CONbits.TMR0ON = 0;
  1782                           
  1783                           ;incstack = 0
  1784  0019DC  9ED5               	bcf	4053,7,c	;volatile
  1785                           
  1786                           ;Current_Sense_Main.c: 451: T0CONbits.T08BIT = 0;
  1787  0019DE  9CD5               	bcf	4053,6,c	;volatile
  1788                           
  1789                           ;Current_Sense_Main.c: 452: T0CONbits.T0CS = 0;
  1790  0019E0  9AD5               	bcf	4053,5,c	;volatile
  1791                           
  1792                           ;Current_Sense_Main.c: 453: T0CONbits.PSA = 0;
  1793  0019E2  96D5               	bcf	4053,3,c	;volatile
  1794                           
  1795                           ;Current_Sense_Main.c: 454: T0CONbits.T0PS = 0b001;
  1796  0019E4  50D5               	movf	4053,w,c	;volatile
  1797  0019E6  0BF8               	andlw	-8
  1798  0019E8  0901               	iorlw	1
  1799  0019EA  6ED5               	movwf	4053,c	;volatile
  1800                           
  1801                           ;Current_Sense_Main.c: 456: INTCONbits.TMR0IE = 1;
  1802  0019EC  8AF2               	bsf	intcon,5,c	;volatile
  1803                           
  1804                           ;Current_Sense_Main.c: 457: INTCONbits.GIE = 1;
  1805  0019EE  8EF2               	bsf	intcon,7,c	;volatile
  1806                           
  1807                           ;Current_Sense_Main.c: 458: T0CONbits.TMR0ON = 1;
  1808  0019F0  8ED5               	bsf	4053,7,c	;volatile
  1809  0019F2  0012               	return		;funcret
  1810  0019F4                     __end_of_initTimer:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           intcon	equ	0xFF2
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           postdec1	equ	0xFE5
  1820                           fsr1l	equ	0xFE1
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _init *****************
  1828 ;; Defined at:
  1829 ;;		line 372 in file "Current_Sense_Main.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1843 ;;      Params:         0       0       0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    2
  1850 ;; This function calls:
  1851 ;;		_initIO
  1852 ;;		_initInterruptsClear
  1853 ;;		_initMCP
  1854 ;;		_initOSC
  1855 ;;		_initSPI
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text6
  1862  001A0C                     __ptext6:
  1863                           	opt stack 0
  1864  001A0C                     _init:
  1865                           	opt stack 28
  1866                           
  1867                           ;Current_Sense_Main.c: 374: initOSC();
  1868                           
  1869                           ;incstack = 0
  1870  001A0C  ECFA  F00C         	call	_initOSC	;wreg free
  1871                           
  1872                           ;Current_Sense_Main.c: 375: initIO();
  1873  001A10  ECB1  F00C         	call	_initIO	;wreg free
  1874                           
  1875                           ;Current_Sense_Main.c: 376: initInterruptsClear();
  1876  001A14  ECAB  F00B         	call	_initInterruptsClear	;wreg free
  1877                           
  1878                           ;Current_Sense_Main.c: 377: initSPI();
  1879  001A18  ECE1  F00C         	call	_initSPI	;wreg free
  1880                           
  1881                           ;Current_Sense_Main.c: 378: initMCP();
  1882  001A1C  EC1C  F00D         	call	_initMCP	;wreg free
  1883  001A20  0012               	return	
  1884  001A22                     __end_of_init:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postdec1	equ	0xFE5
  1894                           fsr1l	equ	0xFE1
  1895                           postinc2	equ	0xFDE
  1896                           postdec2	equ	0xFDD
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _initSPI *****************
  1902 ;; Defined at:
  1903 ;;		line 464 in file "Current_Sense_Main.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		None
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1917 ;;      Params:         0       0       0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_init
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text7
  1932  0019C2                     __ptext7:
  1933                           	opt stack 0
  1934  0019C2                     _initSPI:
  1935                           	opt stack 28
  1936                           
  1937                           ;Current_Sense_Main.c: 475: SSP1CON1bits.SSPEN = 1;
  1938                           
  1939                           ;incstack = 0
  1940  0019C2  8AC6               	bsf	4038,5,c	;volatile
  1941                           
  1942                           ;Current_Sense_Main.c: 476: SSP1CON1bits.CKP = 1;
  1943  0019C4  88C6               	bsf	4038,4,c	;volatile
  1944                           
  1945                           ;Current_Sense_Main.c: 477: SSP1CON1bits.SSPM = 0000;
  1946  0019C6  90C6               	bcf	4038,0,c	;volatile
  1947  0019C8  92C6               	bcf	4038,1,c	;volatile
  1948  0019CA  94C6               	bcf	4038,2,c	;volatile
  1949  0019CC  96C6               	bcf	4038,3,c	;volatile
  1950                           
  1951                           ;Current_Sense_Main.c: 481: SSP1STATbits.SMP = 1;
  1952  0019CE  8EC7               	bsf	4039,7,c	;volatile
  1953                           
  1954                           ;Current_Sense_Main.c: 482: SSP1STATbits.CKE = 0;
  1955  0019D0  9CC7               	bcf	4039,6,c	;volatile
  1956                           
  1957                           ;Current_Sense_Main.c: 485: TRISCbits.TRISC5 = 0;
  1958  0019D2  9A94               	bcf	3988,5,c	;volatile
  1959                           
  1960                           ;Current_Sense_Main.c: 486: TRISCbits.TRISC7 = 0;
  1961  0019D4  9E94               	bcf	3988,7,c	;volatile
  1962                           
  1963                           ;Current_Sense_Main.c: 487: TRISCbits.TRISC3 = 0;
  1964  0019D6  9694               	bcf	3988,3,c	;volatile
  1965                           
  1966                           ;Current_Sense_Main.c: 488: TRISCbits.TRISC4 = 1;
  1967  0019D8  8894               	bsf	3988,4,c	;volatile
  1968  0019DA  0012               	return		;funcret
  1969  0019DC                     __end_of_initSPI:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           fsr1l	equ	0xFE1
  1980                           postinc2	equ	0xFDE
  1981                           postdec2	equ	0xFDD
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function _initOSC *****************
  1987 ;; Defined at:
  1988 ;;		line 383 in file "Current_Sense_Main.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2002 ;;      Params:         0       0       0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_init
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text8
  2017  0019F4                     __ptext8:
  2018                           	opt stack 0
  2019  0019F4                     _initOSC:
  2020                           	opt stack 28
  2021                           
  2022                           ;Current_Sense_Main.c: 386: OSCCONbits.IDLEN = 0;
  2023                           
  2024                           ;incstack = 0
  2025  0019F4  9ED3               	bcf	4051,7,c	;volatile
  2026                           
  2027                           ;Current_Sense_Main.c: 387: OSCCONbits.IRCF = 0b111;
  2028  0019F6  88D3               	bsf	4051,4,c	;volatile
  2029  0019F8  8AD3               	bsf	4051,5,c	;volatile
  2030  0019FA  8CD3               	bsf	4051,6,c	;volatile
  2031                           
  2032                           ;Current_Sense_Main.c: 388: OSCCONbits.SCS = 0b11;
  2033  0019FC  0E03               	movlw	3
  2034  0019FE  12D3               	iorwf	4051,f,c	;volatile
  2035                           
  2036                           ;Current_Sense_Main.c: 390: OSCCON2bits.MFIOSEL = 0;
  2037  001A00  98D2               	bcf	4050,4,c	;volatile
  2038                           
  2039                           ;Current_Sense_Main.c: 391: OSCCON2bits.SOSCGO = 0;
  2040  001A02  96D2               	bcf	4050,3,c	;volatile
  2041                           
  2042                           ;Current_Sense_Main.c: 392: OSCCON2bits.PRISD = 0;
  2043  001A04  94D2               	bcf	4050,2,c	;volatile
  2044                           
  2045                           ;Current_Sense_Main.c: 394: OSCTUNEbits.INTSRC = 1;
  2046  001A06  8E9B               	bsf	3995,7,c	;volatile
  2047                           
  2048                           ;Current_Sense_Main.c: 395: OSCTUNEbits.PLLEN = 0;
  2049  001A08  9C9B               	bcf	3995,6,c	;volatile
  2050  001A0A  0012               	return	
  2051  001A0C                     __end_of_initOSC:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           intcon	equ	0xFF2
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1l	equ	0xFE1
  2062                           postinc2	equ	0xFDE
  2063                           postdec2	equ	0xFDD
  2064                           fsr2h	equ	0xFDA
  2065                           fsr2l	equ	0xFD9
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _initMCP *****************
  2069 ;; Defined at:
  2070 ;;		line 491 in file "Current_Sense_Main.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2084 ;;      Params:         0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;;		_init
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text9
  2100  001A38                     __ptext9:
  2101                           	opt stack 0
  2102  001A38                     _initMCP:
  2103                           	opt stack 29
  2104                           
  2105                           ;Current_Sense_Main.c: 494: TRISCbits.TRISC6 = 0;
  2106                           
  2107                           ;incstack = 0
  2108  001A38  9C94               	bcf	3988,6,c	;volatile
  2109                           
  2110                           ;Current_Sense_Main.c: 497: LATCbits.LATC6 = 0;
  2111  001A3A  9C8B               	bcf	3979,6,c	;volatile
  2112                           
  2113                           ;Current_Sense_Main.c: 498: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2114  001A3C  D000               	nop2		;2 cycle nop
  2115  001A3E  D000               	nop2		;2 cycle nop
  2116                           
  2117                           ;Current_Sense_Main.c: 499: LATCbits.LATC6 = 1;
  2118  001A40  8C8B               	bsf	3979,6,c	;volatile
  2119                           
  2120                           ;Current_Sense_Main.c: 500: LATCbits.LATC7 = 0;
  2121  001A42  9E8B               	bcf	3979,7,c	;volatile
  2122                           
  2123                           ;Current_Sense_Main.c: 503: SSP1BUF = 0b10101100;
  2124  001A44  0EAC               	movlw	172
  2125  001A46  6EC9               	movwf	4041,c	;volatile
  2126  001A48  0012               	return	
  2127  001A4A                     __end_of_initMCP:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           intcon	equ	0xFF2
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           postdec1	equ	0xFE5
  2137                           fsr1l	equ	0xFE1
  2138                           postinc2	equ	0xFDE
  2139                           postdec2	equ	0xFDD
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _initInterruptsClear *****************
  2145 ;; Defined at:
  2146 ;;		line 418 in file "Current_Sense_Main.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2160 ;;      Params:         0       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_init
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text10
  2175  001756                     __ptext10:
  2176                           	opt stack 0
  2177  001756                     _initInterruptsClear:
  2178                           	opt stack 28
  2179                           
  2180                           ;Current_Sense_Main.c: 421: INTCON = 0b00000000;
  2181                           
  2182                           ;incstack = 0
  2183  001756  0E00               	movlw	0
  2184  001758  6EF2               	movwf	intcon,c	;volatile
  2185                           
  2186                           ;Current_Sense_Main.c: 422: INTCON2 = 0b00000000;
  2187  00175A  0E00               	movlw	0
  2188  00175C  6EF1               	movwf	intcon2,c	;volatile
  2189                           
  2190                           ;Current_Sense_Main.c: 423: INTCON3 = 0b00000000;
  2191  00175E  0E00               	movlw	0
  2192  001760  6EF0               	movwf	intcon3,c	;volatile
  2193                           
  2194                           ;Current_Sense_Main.c: 425: RCONbits.IPEN = 0;
  2195  001762  9ED0               	bcf	4048,7,c	;volatile
  2196                           
  2197                           ;Current_Sense_Main.c: 427: PIR1 = 0b00000000;
  2198  001764  0E00               	movlw	0
  2199  001766  6E9E               	movwf	3998,c	;volatile
  2200                           
  2201                           ;Current_Sense_Main.c: 428: PIR2 = 0b00000000;
  2202  001768  0E00               	movlw	0
  2203  00176A  6EA1               	movwf	4001,c	;volatile
  2204                           
  2205                           ;Current_Sense_Main.c: 429: PIR3 = 0b00000000;
  2206  00176C  0E00               	movlw	0
  2207  00176E  6EA4               	movwf	4004,c	;volatile
  2208                           
  2209                           ;Current_Sense_Main.c: 430: PIR4 = 0b00000000;
  2210  001770  0E00               	movlw	0
  2211  001772  6E7B               	movwf	3963,c	;volatile
  2212                           
  2213                           ;Current_Sense_Main.c: 431: PIR5 = 0b00000000;
  2214  001774  0E00               	movlw	0
  2215  001776  6E7E               	movwf	3966,c	;volatile
  2216                           
  2217                           ;Current_Sense_Main.c: 433: PIE1 = 0b00000000;
  2218  001778  0E00               	movlw	0
  2219  00177A  6E9D               	movwf	3997,c	;volatile
  2220                           
  2221                           ;Current_Sense_Main.c: 434: PIE2 = 0b00000000;
  2222  00177C  0E00               	movlw	0
  2223  00177E  6EA0               	movwf	4000,c	;volatile
  2224                           
  2225                           ;Current_Sense_Main.c: 435: PIE3 = 0b00000000;
  2226  001780  0E00               	movlw	0
  2227  001782  6EA3               	movwf	4003,c	;volatile
  2228                           
  2229                           ;Current_Sense_Main.c: 436: PIE4 = 0b00000000;
  2230  001784  0E00               	movlw	0
  2231  001786  6E7A               	movwf	3962,c	;volatile
  2232                           
  2233                           ;Current_Sense_Main.c: 437: PIE5 = 0b00000000;
  2234  001788  0E00               	movlw	0
  2235  00178A  6E7D               	movwf	3965,c	;volatile
  2236                           
  2237                           ;Current_Sense_Main.c: 439: IPR1 = 0b00000000;
  2238  00178C  0E00               	movlw	0
  2239  00178E  6E9F               	movwf	3999,c	;volatile
  2240                           
  2241                           ;Current_Sense_Main.c: 440: IPR2 = 0b00000000;
  2242  001790  0E00               	movlw	0
  2243  001792  6EA2               	movwf	4002,c	;volatile
  2244                           
  2245                           ;Current_Sense_Main.c: 441: IPR3 = 0b00000000;
  2246  001794  0E00               	movlw	0
  2247  001796  6EA5               	movwf	4005,c	;volatile
  2248                           
  2249                           ;Current_Sense_Main.c: 442: IPR4 = 0b00000000;
  2250  001798  0E00               	movlw	0
  2251  00179A  6E7C               	movwf	3964,c	;volatile
  2252                           
  2253                           ;Current_Sense_Main.c: 443: IPR5 = 0b00000000;
  2254  00179C  0E00               	movlw	0
  2255  00179E  6E7F               	movwf	3967,c	;volatile
  2256  0017A0  0012               	return		;funcret
  2257  0017A2                     __end_of_initInterruptsClear:
  2258                           	opt stack 0
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           intcon	equ	0xFF2
  2264                           intcon2	equ	0xFF1
  2265                           intcon3	equ	0xFF0
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           postdec1	equ	0xFE5
  2269                           fsr1l	equ	0xFE1
  2270                           postinc2	equ	0xFDE
  2271                           postdec2	equ	0xFDD
  2272                           fsr2h	equ	0xFDA
  2273                           fsr2l	equ	0xFD9
  2274                           status	equ	0xFD8
  2275                           
  2276 ;; *************** function _initIO *****************
  2277 ;; Defined at:
  2278 ;;		line 400 in file "Current_Sense_Main.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2292 ;;      Params:         0       0       0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_init
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text11
  2307  001962                     __ptext11:
  2308                           	opt stack 0
  2309  001962                     _initIO:
  2310                           	opt stack 28
  2311                           
  2312                           ;Current_Sense_Main.c: 402: ADCON0bits.ADON = 0;
  2313                           
  2314                           ;incstack = 0
  2315  001962  90C2               	bcf	4034,0,c	;volatile
  2316                           
  2317                           ;Current_Sense_Main.c: 403: ANSELA = 0b00000000;
  2318  001964  0E00               	movlw	0
  2319  001966  010F               	movlb	15	; () banked
  2320  001968  6F38               	movwf	56,b	;volatile
  2321                           
  2322                           ;Current_Sense_Main.c: 404: ANSELB = 0b00000000;
  2323  00196A  0E00               	movlw	0
  2324  00196C  010F               	movlb	15	; () banked
  2325  00196E  6F39               	movwf	57,b	;volatile
  2326                           
  2327                           ;Current_Sense_Main.c: 405: ANSELC = 0b00000000;
  2328  001970  0E00               	movlw	0
  2329  001972  010F               	movlb	15	; () banked
  2330  001974  6F3A               	movwf	58,b	;volatile
  2331                           
  2332                           ; BSR set to: 15
  2333                           ;Current_Sense_Main.c: 407: TRISBbits.TRISB4 = 0;
  2334  001976  9893               	bcf	3987,4,c	;volatile
  2335                           
  2336                           ; BSR set to: 15
  2337                           ;Current_Sense_Main.c: 408: LATBbits.LATB4 = 0;
  2338  001978  988A               	bcf	3978,4,c	;volatile
  2339                           
  2340                           ; BSR set to: 15
  2341                           ;Current_Sense_Main.c: 410: TRISCbits.TRISC2 = 1;
  2342  00197A  8494               	bsf	3988,2,c	;volatile
  2343                           
  2344                           ; BSR set to: 15
  2345                           ;Current_Sense_Main.c: 411: TRISAbits.TRISA1 = 1;
  2346  00197C  8292               	bsf	3986,1,c	;volatile
  2347                           
  2348                           ; BSR set to: 15
  2349                           ;Current_Sense_Main.c: 412: TRISAbits.TRISA0 = 0;
  2350  00197E  9092               	bcf	3986,0,c	;volatile
  2351                           
  2352                           ; BSR set to: 15
  2353                           ;Current_Sense_Main.c: 413: LATAbits.LATA0 = 0;
  2354  001980  9089               	bcf	3977,0,c	;volatile
  2355  001982  0012               	return	
  2356  001984                     __end_of_initIO:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           intcon	equ	0xFF2
  2363                           intcon2	equ	0xFF1
  2364                           intcon3	equ	0xFF0
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           postdec1	equ	0xFE5
  2368                           fsr1l	equ	0xFE1
  2369                           postinc2	equ	0xFDE
  2370                           postdec2	equ	0xFDD
  2371                           fsr2h	equ	0xFDA
  2372                           fsr2l	equ	0xFD9
  2373                           status	equ	0xFD8
  2374                           
  2375 ;; *************** function _energyPulseCheck *****************
  2376 ;; Defined at:
  2377 ;;		line 242 in file "Current_Sense_Main.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2391 ;;      Params:         0       0       0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    1
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text12
  2406  0014BC                     __ptext12:
  2407                           	opt stack 0
  2408  0014BC                     _energyPulseCheck:
  2409                           	opt stack 29
  2410                           
  2411                           ;Current_Sense_Main.c: 251: static unsigned long meterEnergyUsedPart = 0;
  2412                           ;Current_Sense_Main.c: 252: static bool mcpLFoutLast = 0;
  2413                           ;Current_Sense_Main.c: 255: if (PORTAbits.RA1 == 0)
  2414                           
  2415                           ; BSR set to: 15
  2416                           ;incstack = 0
  2417  0014BC  B280               	btfsc	3968,1,c	;volatile
  2418  0014BE  D037               	goto	l166
  2419                           
  2420                           ;Current_Sense_Main.c: 256: {
  2421                           ;Current_Sense_Main.c: 257: if (mcpLFoutLast == 0)
  2422  0014C0  5047               	movf	energyPulseCheck@mcpLFoutLast,w,c
  2423  0014C2  A4D8               	btfss	status,2,c
  2424  0014C4  0012               	return	
  2425                           
  2426                           ;Current_Sense_Main.c: 258: {
  2427                           ;Current_Sense_Main.c: 259: mcpLFoutLast = 1;
  2428  0014C6  0E01               	movlw	1
  2429  0014C8  6E47               	movwf	energyPulseCheck@mcpLFoutLast,c
  2430                           
  2431                           ;Current_Sense_Main.c: 261: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  2432  0014CA  0E80               	movlw	128
  2433  0014CC  0100               	movlb	0	; () banked
  2434  0014CE  277C               	addwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2435  0014D0  0E97               	movlw	151
  2436  0014D2  237D               	addwfc	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2437  0014D4  0E06               	movlw	6
  2438  0014D6  237E               	addwfc	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2439  0014D8  0E00               	movlw	0
  2440  0014DA  237F               	addwfc	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2441                           
  2442                           ;Current_Sense_Main.c: 262: while (meterEnergyUsedPart > 100000)
  2443  0014DC  D010               	goto	l168
  2444  0014DE                     l3462:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;Current_Sense_Main.c: 263: {
  2448                           ;Current_Sense_Main.c: 264: meterEnergyUsed++;
  2449  0014DE  0E01               	movlw	1
  2450  0014E0  0100               	movlb	0	; () banked
  2451  0014E2  2788               	addwf	_meterEnergyUsed& (0+255),f,b
  2452  0014E4  0E00               	movlw	0
  2453  0014E6  2389               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  2454  0014E8  238A               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  2455  0014EA  238B               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  2456                           
  2457                           ;Current_Sense_Main.c: 265: meterEnergyUsedPart -= 100000;
  2458  0014EC  0EA0               	movlw	160
  2459  0014EE  0100               	movlb	0	; () banked
  2460  0014F0  5F7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2461  0014F2  0E86               	movlw	134
  2462  0014F4  5B7D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2463  0014F6  0E01               	movlw	1
  2464  0014F8  5B7E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2465  0014FA  0E00               	movlw	0
  2466  0014FC  5B7F               	subwfb	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2467  0014FE                     l168:
  2468                           
  2469                           ; BSR set to: 0
  2470  0014FE  0100               	movlb	0	; () banked
  2471  001500  517F               	movf	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  2472  001502  E1ED               	bnz	l3462
  2473  001504  0EA1               	movlw	161
  2474  001506  0100               	movlb	0	; () banked
  2475  001508  5D7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),w,b
  2476  00150A  0E86               	movlw	134
  2477  00150C  0100               	movlb	0	; () banked
  2478  00150E  597D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  2479  001510  0E01               	movlw	1
  2480  001512  0100               	movlb	0	; () banked
  2481  001514  597E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  2482  001516  B0D8               	btfsc	status,0,c
  2483  001518  D7E2               	goto	l169
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;Current_Sense_Main.c: 266: }
  2487                           ;Current_Sense_Main.c: 268: timerCountLF = 0;
  2488                           
  2489                           ; BSR set to: 0
  2490  00151A  0E00               	movlw	0
  2491  00151C  0100               	movlb	0	; () banked
  2492  00151E  6F80               	movwf	_timerCountLF& (0+255),b	;volatile
  2493  001520  0E00               	movlw	0
  2494  001522  6F81               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  2495  001524  0E00               	movlw	0
  2496  001526  6F82               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  2497  001528  0E00               	movlw	0
  2498  00152A  6F83               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;Current_Sense_Main.c: 269: }
  2502                           ;Current_Sense_Main.c: 270: }
  2503  00152C  0012               	return	
  2504  00152E                     l166:
  2505                           
  2506                           ;Current_Sense_Main.c: 271: else
  2507                           ;Current_Sense_Main.c: 272: {
  2508                           ;Current_Sense_Main.c: 273: mcpLFoutLast = 0;
  2509                           
  2510                           ; BSR set to: 0
  2511  00152E  0E00               	movlw	0
  2512  001530  6E47               	movwf	energyPulseCheck@mcpLFoutLast,c
  2513  001532  0012               	return	
  2514  001534                     __end_of_energyPulseCheck:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           intcon	equ	0xFF2
  2521                           intcon2	equ	0xFF1
  2522                           intcon3	equ	0xFF0
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1l	equ	0xFE1
  2527                           postinc2	equ	0xFDE
  2528                           postdec2	equ	0xFDD
  2529                           fsr2h	equ	0xFDA
  2530                           fsr2l	equ	0xFD9
  2531                           status	equ	0xFD8
  2532                           
  2533 ;; *************** function _delayMS10 *****************
  2534 ;; Defined at:
  2535 ;;		line 363 in file "Current_Sense_Main.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  count           2   18[COMRAM] int 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  inx             2   21[COMRAM] int 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2549 ;;      Params:         2       0       0       0       0       0       0
  2550 ;;      Locals:         2       0       0       0       0       0       0
  2551 ;;      Temps:          1       0       0       0       0       0       0
  2552 ;;      Totals:         5       0       0       0       0       0       0
  2553 ;;Total ram usage:        5 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    1
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text13
  2564  001836                     __ptext13:
  2565                           	opt stack 0
  2566  001836                     _delayMS10:
  2567                           	opt stack 29
  2568                           
  2569                           ;Current_Sense_Main.c: 365: for (int inx = 0; inx < count; inx++)
  2570                           
  2571                           ;incstack = 0
  2572  001836  0E00               	movlw	0
  2573  001838  6E17               	movwf	delayMS10@inx+1,c
  2574  00183A  0E00               	movlw	0
  2575  00183C  6E16               	movwf	delayMS10@inx,c
  2576  00183E  D009               	goto	l216
  2577  001840                     
  2578                           ;Current_Sense_Main.c: 366: {
  2579                           ;Current_Sense_Main.c: 368: _delay((unsigned long)((10)*(16000000/4000.0)));
  2580  001840  0E34               	movlw	52
  2581  001842  6E15               	movwf	??_delayMS10& (0+255),c
  2582  001844  0EF2               	movlw	242
  2583  001846                     u3167:
  2584  001846  2EE8               	decfsz	wreg,f,c
  2585  001848  D7FE               	bra	u3167
  2586  00184A  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2587  00184C  D7FC               	bra	u3167
  2588  00184E  4A16               	infsnz	delayMS10@inx,f,c
  2589  001850  2A17               	incf	delayMS10@inx+1,f,c
  2590  001852                     l216:
  2591  001852  5013               	movf	delayMS10@count,w,c
  2592  001854  5C16               	subwf	delayMS10@inx,w,c
  2593  001856  5017               	movf	delayMS10@inx+1,w,c
  2594  001858  0A80               	xorlw	128
  2595  00185A  6E15               	movwf	??_delayMS10& (0+255),c
  2596  00185C  5014               	movf	delayMS10@count+1,w,c
  2597  00185E  0A80               	xorlw	128
  2598  001860  5815               	subwfb	??_delayMS10& (0+255),w,c
  2599  001862  B0D8               	btfsc	status,0,c
  2600  001864  0012               	return	
  2601  001866  D7EC               	goto	l217
  2602  001868                     __end_of_delayMS10:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           intcon	equ	0xFF2
  2609                           intcon2	equ	0xFF1
  2610                           intcon3	equ	0xFF0
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           postdec1	equ	0xFE5
  2614                           fsr1l	equ	0xFE1
  2615                           postinc2	equ	0xFDE
  2616                           postdec2	equ	0xFDD
  2617                           fsr2h	equ	0xFDA
  2618                           fsr2l	equ	0xFD9
  2619                           status	equ	0xFD8
  2620                           
  2621 ;; *************** function _communications *****************
  2622 ;; Defined at:
  2623 ;;		line 89 in file "SlaveComm_PIC18.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  firstTime       1    wreg     unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  firstTime       1   56[COMRAM] unsigned char 
  2628 ;;  no_more_to_s    1   55[COMRAM] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2638 ;;      Params:         0       0       0       0       0       0       0
  2639 ;;      Locals:         2       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0
  2641 ;;      Totals:         2       0       0       0       0       0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    7
  2645 ;; This function calls:
  2646 ;;		_SPISlaveInit
  2647 ;;		_process_data
  2648 ;;		_receive_data
  2649 ;;		_resetCommunications
  2650 ;;		_send_data
  2651 ;; This function is called by:
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text14
  2657  001178                     __ptext14:
  2658                           	opt stack 0
  2659  001178                     _communications:
  2660                           	opt stack 23
  2661                           
  2662                           ;incstack = 0
  2663                           ;communications@firstTime stored from wreg
  2664  001178  6E39               	movwf	communications@firstTime,c
  2665                           
  2666                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2667                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2668                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2669                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2670                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2671                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2672  00117A  0439               	decf	communications@firstTime,w,c
  2673  00117C  A4D8               	btfss	status,2,c
  2674  00117E  D00F               	goto	l323
  2675                           
  2676                           ;SlaveComm_PIC18.c: 101: {
  2677                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2678  001180  EC83  F00B         	call	_SPISlaveInit	;wreg free
  2679                           
  2680                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2681  001184  0E00               	movlw	0
  2682  001186  0100               	movlb	0	; () banked
  2683  001188  6FBC               	movwf	(communications@send_buffer+40)& (0+255),b
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2687  00118A  0E00               	movlw	0
  2688  00118C  0100               	movlb	0	; () banked
  2689  00118E  6FBD               	movwf	(communications@send_buffer+41)& (0+255),b
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2693  001190  0E94               	movlw	low communications@send_buffer
  2694  001192  6E2F               	movwf	resetCommunications@send_buffer,c
  2695  001194  0E00               	movlw	high communications@send_buffer
  2696  001196  6E30               	movwf	resetCommunications@send_buffer+1,c
  2697  001198  EC6E  F008         	call	_resetCommunications	;wreg free
  2698                           
  2699                           ;SlaveComm_PIC18.c: 106: }
  2700  00119C  0012               	return	
  2701  00119E                     l323:
  2702                           
  2703                           ;SlaveComm_PIC18.c: 107: else
  2704                           ;SlaveComm_PIC18.c: 108: {
  2705                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2706  00119E  0E33               	movlw	low communications@receive_buffer
  2707  0011A0  6E16               	movwf	receive_data@receive_buffer,c
  2708  0011A2  0E01               	movlw	high communications@receive_buffer
  2709  0011A4  6E17               	movwf	receive_data@receive_buffer+1,c
  2710  0011A6  ECBF  F007         	call	_receive_data	;wreg free
  2711  0011AA  6E40               	movwf	communications@receive_current_state,c
  2712                           
  2713                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2714  0011AC  D010               	goto	l325
  2715  0011AE                     
  2716                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2717  0011AE  0E33               	movlw	low communications@receive_buffer
  2718  0011B0  6E34               	movwf	process_data@receive_buffer,c
  2719  0011B2  0E01               	movlw	high communications@receive_buffer
  2720  0011B4  6E35               	movwf	process_data@receive_buffer+1,c
  2721  0011B6  0E94               	movlw	low communications@send_buffer
  2722  0011B8  6E36               	movwf	process_data@send_buffer,c
  2723  0011BA  0E00               	movlw	high communications@send_buffer
  2724  0011BC  6E37               	movwf	process_data@send_buffer+1,c
  2725  0011BE  EC34  F00C         	call	_process_data	;wreg free
  2726  0011C2  06E8               	decf	wreg,f,c
  2727  0011C4  A4D8               	btfss	status,2,c
  2728  0011C6  D00D               	goto	l327
  2729                           
  2730                           ;SlaveComm_PIC18.c: 122: {
  2731                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2732  0011C8  0E01               	movlw	1
  2733  0011CA  6E41               	movwf	communications@end_of_transmission_received,c
  2734                           
  2735                           ;SlaveComm_PIC18.c: 127: }
  2736                           
  2737                           ;SlaveComm_PIC18.c: 124: }
  2738                           ;SlaveComm_PIC18.c: 126: break;
  2739  0011CC  D00A               	goto	l327
  2740  0011CE                     l325:
  2741  0011CE  5040               	movf	communications@receive_current_state,w,c
  2742                           
  2743                           ; Switch size 1, requested type "space"
  2744                           ; Number of cases is 3, Range of values is 0 to 2
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte           10     6 (average)
  2748                           ;	Chosen strategy is simple_byte
  2749  0011D0  0A00               	xorlw	0	; case 0
  2750  0011D2  B4D8               	btfsc	status,2,c
  2751  0011D4  D006               	goto	l327
  2752  0011D6  0A01               	xorlw	1	; case 1
  2753  0011D8  B4D8               	btfsc	status,2,c
  2754  0011DA  D003               	goto	l327
  2755  0011DC  0A03               	xorlw	3	; case 2
  2756  0011DE  B4D8               	btfsc	status,2,c
  2757  0011E0  D7E6               	goto	l329
  2758  0011E2                     l327:
  2759                           
  2760                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2761  0011E2  0E94               	movlw	low communications@send_buffer
  2762  0011E4  6E15               	movwf	send_data@send_buffer,c
  2763  0011E6  0E00               	movlw	high communications@send_buffer
  2764  0011E8  6E16               	movwf	send_data@send_buffer+1,c
  2765  0011EA  EC55  F009         	call	_send_data	;wreg free
  2766  0011EE  6E38               	movwf	communications@no_more_to_send,c
  2767                           
  2768                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2769                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2770  0011F0  A081               	btfss	3969,0,c	;volatile
  2771  0011F2  D003               	goto	l333
  2772                           
  2773                           ;SlaveComm_PIC18.c: 134: {
  2774                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2775  0011F4  0E00               	movlw	0
  2776  0011F6  6E3F               	movwf	communications@last_state_active,c
  2777                           
  2778                           ;SlaveComm_PIC18.c: 136: }
  2779  0011F8  0012               	return	
  2780  0011FA                     l333:
  2781                           
  2782                           ;SlaveComm_PIC18.c: 137: else
  2783                           ;SlaveComm_PIC18.c: 138: {
  2784                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2785  0011FA  503F               	movf	communications@last_state_active,w,c
  2786  0011FC  A4D8               	btfss	status,2,c
  2787  0011FE  D006               	goto	l335
  2788                           
  2789                           ;SlaveComm_PIC18.c: 140: {
  2790                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2791  001200  0E94               	movlw	low communications@send_buffer
  2792  001202  6E2F               	movwf	resetCommunications@send_buffer,c
  2793  001204  0E00               	movlw	high communications@send_buffer
  2794  001206  6E30               	movwf	resetCommunications@send_buffer+1,c
  2795  001208  EC6E  F008         	call	_resetCommunications	;wreg free
  2796  00120C                     l335:
  2797                           
  2798                           ;SlaveComm_PIC18.c: 142: }
  2799                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2800  00120C  0E01               	movlw	1
  2801  00120E  6E3F               	movwf	communications@last_state_active,c
  2802  001210  0012               	return	
  2803  001212                     __end_of_communications:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           intcon	equ	0xFF2
  2810                           intcon2	equ	0xFF1
  2811                           intcon3	equ	0xFF0
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec1	equ	0xFE5
  2815                           fsr1l	equ	0xFE1
  2816                           postinc2	equ	0xFDE
  2817                           postdec2	equ	0xFDD
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _send_data *****************
  2823 ;; Defined at:
  2824 ;;		line 485 in file "SlaveComm_PIC18.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2827 ;;		 -> communications@send_buffer(42), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  send_end        1   24[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2839 ;;      Params:         2       0       0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0
  2841 ;;      Temps:          2       0       0       0       0       0       0
  2842 ;;      Totals:         5       0       0       0       0       0       0
  2843 ;;Total ram usage:        5 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		_SPI_send_data
  2848 ;; This function is called by:
  2849 ;;		_communications
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text15
  2854  0012AA                     __ptext15:
  2855                           	opt stack 0
  2856  0012AA                     _send_data:
  2857                           	opt stack 27
  2858                           
  2859                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2860                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2861                           
  2862                           ;incstack = 0
  2863  0012AA  EE20 F028          	lfsr	2,40
  2864  0012AE  5015               	movf	send_data@send_buffer,w,c
  2865  0012B0  26D9               	addwf	fsr2l,f,c
  2866  0012B2  5016               	movf	send_data@send_buffer+1,w,c
  2867  0012B4  22DA               	addwfc	fsr2h,f,c
  2868  0012B6  EE10 F029          	lfsr	1,41
  2869  0012BA  5015               	movf	send_data@send_buffer,w,c
  2870  0012BC  26E1               	addwf	fsr1l,f,c
  2871  0012BE  5016               	movf	send_data@send_buffer+1,w,c
  2872  0012C0  22E2               	addwfc	fsr1h,f,c
  2873  0012C2  50DE               	movf	postinc2,w,c
  2874  0012C4  18E6               	xorwf	postinc1,w,c
  2875  0012C6  A4D8               	btfss	status,2,c
  2876  0012C8  D006               	goto	l433
  2877                           
  2878                           ;SlaveComm_PIC18.c: 490: {
  2879                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2880  0012CA  0E01               	movlw	1
  2881  0012CC  6E19               	movwf	send_data@send_end,c
  2882                           
  2883                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2884  0012CE  0E00               	movlw	0
  2885  0012D0  ECC2  F00C         	call	_SPI_send_data
  2886                           
  2887                           ;SlaveComm_PIC18.c: 493: }
  2888  0012D4  D030               	goto	l436
  2889  0012D6                     l433:
  2890                           
  2891                           ;SlaveComm_PIC18.c: 494: else
  2892                           ;SlaveComm_PIC18.c: 495: {
  2893                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2894  0012D6  0E00               	movlw	0
  2895  0012D8  6E19               	movwf	send_data@send_end,c
  2896                           
  2897                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2898  0012DA  EE20 F029          	lfsr	2,41
  2899  0012DE  5015               	movf	send_data@send_buffer,w,c
  2900  0012E0  26D9               	addwf	fsr2l,f,c
  2901  0012E2  5016               	movf	send_data@send_buffer+1,w,c
  2902  0012E4  22DA               	addwfc	fsr2h,f,c
  2903  0012E6  50DF               	movf	indf2,w,c
  2904  0012E8  6E17               	movwf	??_send_data& (0+255),c
  2905  0012EA  5017               	movf	??_send_data,w,c
  2906  0012EC  0D01               	mullw	1
  2907  0012EE  50F3               	movf	prodl,w,c
  2908  0012F0  2415               	addwf	send_data@send_buffer,w,c
  2909  0012F2  6ED9               	movwf	fsr2l,c
  2910  0012F4  50F4               	movf	prodh,w,c
  2911  0012F6  2016               	addwfc	send_data@send_buffer+1,w,c
  2912  0012F8  6EDA               	movwf	fsr2h,c
  2913  0012FA  50DF               	movf	indf2,w,c
  2914  0012FC  ECC2  F00C         	call	_SPI_send_data
  2915  001300  06E8               	decf	wreg,f,c
  2916  001302  A4D8               	btfss	status,2,c
  2917  001304  D018               	goto	l436
  2918                           
  2919                           ;SlaveComm_PIC18.c: 500: {
  2920                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2921  001306  EE20 F029          	lfsr	2,41
  2922  00130A  5015               	movf	send_data@send_buffer,w,c
  2923  00130C  26D9               	addwf	fsr2l,f,c
  2924  00130E  5016               	movf	send_data@send_buffer+1,w,c
  2925  001310  22DA               	addwfc	fsr2h,f,c
  2926  001312  2ADF               	incf	indf2,f,c
  2927                           
  2928                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2929  001314  EE20 F029          	lfsr	2,41
  2930  001318  5015               	movf	send_data@send_buffer,w,c
  2931  00131A  26D9               	addwf	fsr2l,f,c
  2932  00131C  5016               	movf	send_data@send_buffer+1,w,c
  2933  00131E  22DA               	addwfc	fsr2h,f,c
  2934  001320  0E27               	movlw	39
  2935  001322  64DF               	cpfsgt	indf2,c
  2936  001324  D008               	goto	l436
  2937                           
  2938                           ;SlaveComm_PIC18.c: 504: {
  2939                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2940  001326  EE20 F029          	lfsr	2,41
  2941  00132A  5015               	movf	send_data@send_buffer,w,c
  2942  00132C  26D9               	addwf	fsr2l,f,c
  2943  00132E  5016               	movf	send_data@send_buffer+1,w,c
  2944  001330  22DA               	addwfc	fsr2h,f,c
  2945  001332  0E00               	movlw	0
  2946  001334  6EDF               	movwf	indf2,c
  2947  001336                     l436:
  2948                           
  2949                           ;SlaveComm_PIC18.c: 506: }
  2950                           ;SlaveComm_PIC18.c: 507: }
  2951                           ;SlaveComm_PIC18.c: 508: }
  2952                           ;SlaveComm_PIC18.c: 510: return send_end;
  2953  001336  5019               	movf	send_data@send_end,w,c
  2954  001338  0012               	return	
  2955  00133A                     __end_of_send_data:
  2956                           	opt stack 0
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           intcon3	equ	0xFF0
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           postinc1	equ	0xFE6
  2969                           postdec1	equ	0xFE5
  2970                           fsr1h	equ	0xFE2
  2971                           fsr1l	equ	0xFE1
  2972                           indf2	equ	0xFDF
  2973                           postinc2	equ	0xFDE
  2974                           postdec2	equ	0xFDD
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _SPI_send_data *****************
  2980 ;; Defined at:
  2981 ;;		line 583 in file "SlaveComm_PIC18.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  data            1    wreg     unsigned char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  data            1   18[COMRAM] unsigned char 
  2986 ;;  sendGood        1   19[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      unsigned char 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2996 ;;      Params:         0       0       0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0
  2999 ;;      Totals:         2       0       0       0       0       0       0
  3000 ;;Total ram usage:        2 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_send_data
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text16
  3011  001984                     __ptext16:
  3012                           	opt stack 0
  3013  001984                     _SPI_send_data:
  3014                           	opt stack 27
  3015                           
  3016                           ;incstack = 0
  3017                           ;SPI_send_data@data stored from wreg
  3018  001984  6E13               	movwf	SPI_send_data@data,c
  3019                           
  3020                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  3021  001986  0E00               	movlw	0
  3022  001988  6E14               	movwf	SPI_send_data@sendGood,c
  3023                           
  3024                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  3025  00198A  5042               	movf	_SPI_transmit_wait,w,c
  3026  00198C  A4D8               	btfss	status,2,c
  3027  00198E  D006               	goto	l464
  3028                           
  3029                           ;SlaveComm_PIC18.c: 588: {
  3030                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  3031  001990  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  3032                           
  3033                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  3034  001994  0E01               	movlw	1
  3035  001996  6E42               	movwf	_SPI_transmit_wait,c
  3036                           
  3037                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  3038  001998  0E01               	movlw	1
  3039  00199A  D001               	goto	L1
  3040  00199C                     l464:
  3041                           
  3042                           ;SlaveComm_PIC18.c: 593: else
  3043                           ;SlaveComm_PIC18.c: 594: {
  3044                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  3045  00199C  0E00               	movlw	0
  3046  00199E                     L1:
  3047  00199E  6E14               	movwf	SPI_send_data@sendGood,c
  3048                           
  3049                           ;SlaveComm_PIC18.c: 596: }
  3050                           ;SlaveComm_PIC18.c: 598: return sendGood;
  3051  0019A0  5014               	movf	SPI_send_data@sendGood,w,c
  3052  0019A2  0012               	return	
  3053  0019A4                     __end_of_SPI_send_data:
  3054                           	opt stack 0
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           intcon3	equ	0xFF0
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           postinc1	equ	0xFE6
  3067                           postdec1	equ	0xFE5
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function _resetCommunications *****************
  3078 ;; Defined at:
  3079 ;;		line 152 in file "SlaveComm_PIC18.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  3082 ;;		 -> communications@send_buffer(42), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3094 ;;      Params:         2       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0
  3097 ;;      Totals:         4       0       0       0       0       0       0
  3098 ;;Total ram usage:        4 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    5
  3101 ;; This function calls:
  3102 ;;		_com_command_setEnergyUsed
  3103 ;;		_com_command_setPower
  3104 ;;		_com_command_setVersion
  3105 ;; This function is called by:
  3106 ;;		_communications
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text17
  3111  0010DC                     __ptext17:
  3112                           	opt stack 0
  3113  0010DC                     _resetCommunications:
  3114                           	opt stack 24
  3115                           
  3116                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  3117                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  3118                           
  3119                           ;incstack = 0
  3120  0010DC  9A6C               	bcf	3948,5,c	;volatile
  3121                           
  3122                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  3123  0010DE  0E06               	movlw	6
  3124  0010E0  6E31               	movwf	??_resetCommunications& (0+255),c
  3125  0010E2  0E30               	movlw	48
  3126  0010E4                     u3177:
  3127  0010E4  2EE8               	decfsz	wreg,f,c
  3128  0010E6  D7FE               	bra	u3177
  3129  0010E8  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  3130  0010EA  D7FC               	bra	u3177
  3131  0010EC  D000               	nop2	
  3132                           
  3133                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  3134  0010EE  8A6C               	bsf	3948,5,c	;volatile
  3135                           
  3136                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  3137  0010F0  9E6C               	bcf	3948,7,c	;volatile
  3138                           
  3139                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  3140  0010F2  0E00               	movlw	0
  3141  0010F4  6E42               	movwf	_SPI_transmit_wait,c
  3142                           
  3143                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  3144  0010F6  EE20 F029          	lfsr	2,41
  3145  0010FA  502F               	movf	resetCommunications@send_buffer,w,c
  3146  0010FC  26D9               	addwf	fsr2l,f,c
  3147  0010FE  5030               	movf	resetCommunications@send_buffer+1,w,c
  3148  001100  22DA               	addwfc	fsr2h,f,c
  3149  001102  0E00               	movlw	0
  3150  001104  6EDF               	movwf	indf2,c
  3151                           
  3152                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  3153  001106  EE20 F028          	lfsr	2,40
  3154  00110A  502F               	movf	resetCommunications@send_buffer,w,c
  3155  00110C  26D9               	addwf	fsr2l,f,c
  3156  00110E  5030               	movf	resetCommunications@send_buffer+1,w,c
  3157  001110  22DA               	addwfc	fsr2h,f,c
  3158  001112  0E00               	movlw	0
  3159  001114  6EDF               	movwf	indf2,c
  3160                           
  3161                           ;SlaveComm_PIC18.c: 171: commState++;
  3162  001116  0100               	movlb	0	; () banked
  3163  001118  4B90               	infsnz	resetCommunications@commState& (0+255),f,b
  3164  00111A  2B91               	incf	(resetCommunications@commState+1)& (0+255),f,b
  3165                           
  3166                           ;SlaveComm_PIC18.c: 172: switch (commState)
  3167  00111C  D01A               	goto	l341
  3168  00111E                     
  3169                           ; BSR set to: 0
  3170                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  3171                           
  3172                           ; BSR set to: 0
  3173  00111E  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  3174  001122  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  3175  001126  EC79  F00C         	call	_com_command_setVersion	;wreg free
  3176                           
  3177                           ;SlaveComm_PIC18.c: 176: break;
  3178  00112A  0012               	return	
  3179  00112C                     
  3180                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  3181  00112C  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  3182  001130  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  3183  001134  ECD1  F00B         	call	_com_command_setPower	;wreg free
  3184                           
  3185                           ;SlaveComm_PIC18.c: 179: break;
  3186  001138  0012               	return	
  3187  00113A                     
  3188                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  3189  00113A  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  3190  00113E  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3191  001142  ECF6  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3192  001146                     
  3193                           ;SlaveComm_PIC18.c: 193: commState = 0;
  3194  001146  0E00               	movlw	0
  3195  001148  0100               	movlb	0	; () banked
  3196  00114A  6F91               	movwf	(resetCommunications@commState+1)& (0+255),b
  3197  00114C  0E00               	movlw	0
  3198  00114E  6F90               	movwf	resetCommunications@commState& (0+255),b
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;SlaveComm_PIC18.c: 195: }
  3202                           
  3203                           ;SlaveComm_PIC18.c: 194: break;
  3204  001150  0012               	return	
  3205  001152                     l341:
  3206                           
  3207                           ; BSR set to: 0
  3208                           
  3209                           ; BSR set to: 0
  3210  001152  C090  F031         	movff	resetCommunications@commState,??_resetCommunications
  3211  001156  C091  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  3212                           
  3213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3214                           ; Switch size 1, requested type "space"
  3215                           ; Number of cases is 1, Range of values is 0 to 0
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte            4     3 (average)
  3219                           ;	Chosen strategy is simple_byte
  3220  00115A  5032               	movf	??_resetCommunications+1,w,c
  3221  00115C  0A00               	xorlw	0	; case 0
  3222  00115E  A4D8               	btfss	status,2,c
  3223  001160  D7F2               	goto	l346
  3224                           
  3225                           ; BSR set to: 0
  3226                           ; Switch size 1, requested type "space"
  3227                           ; Number of cases is 3, Range of values is 1 to 3
  3228                           ; switch strategies available:
  3229                           ; Name         Instructions Cycles
  3230                           ; simple_byte           10     6 (average)
  3231                           ;	Chosen strategy is simple_byte
  3232  001162  5031               	movf	??_resetCommunications,w,c
  3233  001164  0A01               	xorlw	1	; case 1
  3234  001166  B4D8               	btfsc	status,2,c
  3235  001168  D7DA               	goto	l342
  3236  00116A  0A03               	xorlw	3	; case 2
  3237  00116C  B4D8               	btfsc	status,2,c
  3238  00116E  D7DE               	goto	l344
  3239  001170  0A01               	xorlw	1	; case 3
  3240  001172  B4D8               	btfsc	status,2,c
  3241  001174  D7E2               	goto	l345
  3242  001176  D7E7               	goto	l346
  3243  001178                     __end_of_resetCommunications:
  3244                           	opt stack 0
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodh	equ	0xFF4
  3250                           prodl	equ	0xFF3
  3251                           intcon	equ	0xFF2
  3252                           intcon2	equ	0xFF1
  3253                           intcon3	equ	0xFF0
  3254                           postinc0	equ	0xFEE
  3255                           wreg	equ	0xFE8
  3256                           postinc1	equ	0xFE6
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           indf2	equ	0xFDF
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _com_command_setVersion *****************
  3268 ;; Defined at:
  3269 ;;		line 663 in file "SlaveComm_PIC18.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  3272 ;;		 -> communications@send_buffer(42), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3284 ;;      Params:         2       0       0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0
  3287 ;;      Totals:         2       0       0       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    4
  3291 ;; This function calls:
  3292 ;;		_command_builder3
  3293 ;; This function is called by:
  3294 ;;		_resetCommunications
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text18
  3299  0018F2                     __ptext18:
  3300                           	opt stack 0
  3301  0018F2                     _com_command_setVersion:
  3302                           	opt stack 24
  3303                           
  3304                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3305                           
  3306                           ;incstack = 0
  3307  0018F2  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3308  0018F6  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3309  0018FA  0E57               	movlw	low STR_2
  3310  0018FC  6E21               	movwf	command_builder3@data1,c
  3311  0018FE  0E06               	movlw	high STR_2
  3312  001900  6E22               	movwf	command_builder3@data1+1,c
  3313  001902  0E0D               	movlw	low STR_22
  3314  001904  6E23               	movwf	command_builder3@data2,c
  3315  001906  0E06               	movlw	high STR_22
  3316  001908  6E24               	movwf	command_builder3@data2+1,c
  3317  00190A  0E4B               	movlw	low STR_40
  3318  00190C  6E25               	movwf	command_builder3@data3,c
  3319  00190E  0E06               	movlw	high STR_40
  3320  001910  6E26               	movwf	command_builder3@data3+1,c
  3321  001912  EC1F  F008         	call	_command_builder3	;wreg free
  3322  001916  0012               	return		;funcret
  3323  001918                     __end_of_com_command_setVersion:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           intcon2	equ	0xFF1
  3333                           intcon3	equ	0xFF0
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           postinc1	equ	0xFE6
  3337                           postdec1	equ	0xFE5
  3338                           fsr1h	equ	0xFE2
  3339                           fsr1l	equ	0xFE1
  3340                           indf2	equ	0xFDF
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _com_command_setPower *****************
  3348 ;; Defined at:
  3349 ;;		line 618 in file "SlaveComm_PIC18.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3352 ;;		 -> communications@send_buffer(42), 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  temp           12    0[BANK0 ] unsigned char [12]
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         2       0       0       0       0       0       0
  3365 ;;      Locals:         0      12       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0
  3367 ;;      Totals:         2      12       0       0       0       0       0
  3368 ;;Total ram usage:       14 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    4
  3371 ;; This function calls:
  3372 ;;		_command_builder3
  3373 ;;		_ultoa
  3374 ;; This function is called by:
  3375 ;;		_resetCommunications
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text19
  3380  0017A2                     __ptext19:
  3381                           	opt stack 0
  3382  0017A2                     _com_command_setPower:
  3383                           	opt stack 24
  3384                           
  3385                           ;SlaveComm_PIC18.c: 621: char temp[12];
  3386                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  3387                           
  3388                           ;incstack = 0
  3389  0017A2  0EBE               	movlw	low com_command_setPower@temp
  3390  0017A4  6E20               	movwf	ultoa@buf,c
  3391  0017A6  0E00               	movlw	high com_command_setPower@temp
  3392  0017A8  6E21               	movwf	ultoa@buf+1,c
  3393  0017AA  C08C  F022         	movff	_meterWatts,ultoa@val
  3394  0017AE  C08D  F023         	movff	_meterWatts+1,ultoa@val+1
  3395  0017B2  C08E  F024         	movff	_meterWatts+2,ultoa@val+2
  3396  0017B6  C08F  F025         	movff	_meterWatts+3,ultoa@val+3
  3397  0017BA  0E00               	movlw	0
  3398  0017BC  6E27               	movwf	ultoa@base+1,c
  3399  0017BE  0E0A               	movlw	10
  3400  0017C0  6E26               	movwf	ultoa@base,c
  3401  0017C2  EC5A  F006         	call	_ultoa	;wreg free
  3402                           
  3403                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  3404  0017C6  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3405  0017CA  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3406  0017CE  0E57               	movlw	low STR_2
  3407  0017D0  6E21               	movwf	command_builder3@data1,c
  3408  0017D2  0E06               	movlw	high STR_2
  3409  0017D4  6E22               	movwf	command_builder3@data1+1,c
  3410  0017D6  0E24               	movlw	low STR_18
  3411  0017D8  6E23               	movwf	command_builder3@data2,c
  3412  0017DA  0E06               	movlw	high STR_18
  3413  0017DC  6E24               	movwf	command_builder3@data2+1,c
  3414  0017DE  0EBE               	movlw	low com_command_setPower@temp
  3415  0017E0  6E25               	movwf	command_builder3@data3,c
  3416  0017E2  0E00               	movlw	high com_command_setPower@temp
  3417  0017E4  6E26               	movwf	command_builder3@data3+1,c
  3418  0017E6  EC1F  F008         	call	_command_builder3	;wreg free
  3419  0017EA  0012               	return	
  3420  0017EC                     __end_of_com_command_setPower:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           prodh	equ	0xFF4
  3427                           prodl	equ	0xFF3
  3428                           intcon	equ	0xFF2
  3429                           intcon2	equ	0xFF1
  3430                           intcon3	equ	0xFF0
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           postinc1	equ	0xFE6
  3434                           postdec1	equ	0xFE5
  3435                           fsr1h	equ	0xFE2
  3436                           fsr1l	equ	0xFE1
  3437                           indf2	equ	0xFDF
  3438                           postinc2	equ	0xFDE
  3439                           postdec2	equ	0xFDD
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function _receive_data *****************
  3445 ;; Defined at:
  3446 ;;		line 199 in file "SlaveComm_PIC18.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3449 ;;		 -> communications@receive_buffer(42), 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  data            1   24[COMRAM] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      enum E6751
  3454 ;; Registers used:
  3455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3461 ;;      Params:         2       0       0       0       0       0       0
  3462 ;;      Locals:         1       0       0       0       0       0       0
  3463 ;;      Temps:          1       0       0       0       0       0       0
  3464 ;;      Totals:         4       0       0       0       0       0       0
  3465 ;;Total ram usage:        4 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    2
  3468 ;; This function calls:
  3469 ;;		_SPI_receive_data
  3470 ;; This function is called by:
  3471 ;;		_communications
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text20
  3476  000F7E                     __ptext20:
  3477                           	opt stack 0
  3478  000F7E                     _receive_data:
  3479                           	opt stack 27
  3480                           
  3481                           ;SlaveComm_PIC18.c: 201: char data;
  3482                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  3483                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  3484                           
  3485                           ;incstack = 0
  3486  000F7E  0E02               	movlw	2
  3487  000F80  183E               	xorwf	receive_data@my_status,w,c
  3488  000F82  A4D8               	btfss	status,2,c
  3489  000F84  D002               	goto	l352
  3490                           
  3491                           ;SlaveComm_PIC18.c: 206: {
  3492                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  3493  000F86  0E00               	movlw	0
  3494  000F88  6E3E               	movwf	receive_data@my_status,c
  3495  000F8A                     l352:
  3496                           
  3497                           ;SlaveComm_PIC18.c: 208: }
  3498                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3499  000F8A  0E19               	movlw	low receive_data@data
  3500  000F8C  6E13               	movwf	SPI_receive_data@data,c
  3501  000F8E  0E00               	movlw	high receive_data@data
  3502  000F90  6E14               	movwf	SPI_receive_data@data+1,c
  3503  000F92  EC65  F00C         	call	_SPI_receive_data	;wreg free
  3504  000F96  06E8               	decf	wreg,f,c
  3505  000F98  A4D8               	btfss	status,2,c
  3506  000F9A  D04F               	goto	l357
  3507                           
  3508                           ;SlaveComm_PIC18.c: 211: {
  3509                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3510  000F9C  0E21               	movlw	33
  3511  000F9E  1819               	xorwf	receive_data@data,w,c
  3512  000FA0  A4D8               	btfss	status,2,c
  3513  000FA2  D015               	goto	l354
  3514  000FA4  043E               	decf	receive_data@my_status,w,c
  3515  000FA6  B4D8               	btfsc	status,2,c
  3516  000FA8  D012               	goto	l354
  3517                           
  3518                           ;SlaveComm_PIC18.c: 213: {
  3519                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3520  000FAA  0E01               	movlw	1
  3521  000FAC  6E3E               	movwf	receive_data@my_status,c
  3522                           
  3523                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3524  000FAE  EE20 F029          	lfsr	2,41
  3525  000FB2  5016               	movf	receive_data@receive_buffer,w,c
  3526  000FB4  26D9               	addwf	fsr2l,f,c
  3527  000FB6  5017               	movf	receive_data@receive_buffer+1,w,c
  3528  000FB8  22DA               	addwfc	fsr2h,f,c
  3529  000FBA  0E00               	movlw	0
  3530  000FBC  6EDF               	movwf	indf2,c
  3531                           
  3532                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3533  000FBE  EE20 F028          	lfsr	2,40
  3534  000FC2  5016               	movf	receive_data@receive_buffer,w,c
  3535  000FC4  26D9               	addwf	fsr2l,f,c
  3536  000FC6  5017               	movf	receive_data@receive_buffer+1,w,c
  3537  000FC8  22DA               	addwfc	fsr2h,f,c
  3538  000FCA  0E00               	movlw	0
  3539  000FCC  6EDF               	movwf	indf2,c
  3540  000FCE                     l354:
  3541                           
  3542                           ;SlaveComm_PIC18.c: 217: }
  3543                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3544  000FCE  043E               	decf	receive_data@my_status,w,c
  3545  000FD0  A4D8               	btfss	status,2,c
  3546  000FD2  D02A               	goto	l356
  3547                           
  3548                           ;SlaveComm_PIC18.c: 220: {
  3549                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3550  000FD4  EE20 F028          	lfsr	2,40
  3551  000FD8  5016               	movf	receive_data@receive_buffer,w,c
  3552  000FDA  26D9               	addwf	fsr2l,f,c
  3553  000FDC  5017               	movf	receive_data@receive_buffer+1,w,c
  3554  000FDE  22DA               	addwfc	fsr2h,f,c
  3555  000FE0  50DF               	movf	indf2,w,c
  3556  000FE2  6E18               	movwf	??_receive_data& (0+255),c
  3557  000FE4  5018               	movf	??_receive_data,w,c
  3558  000FE6  0D01               	mullw	1
  3559  000FE8  50F3               	movf	prodl,w,c
  3560  000FEA  2416               	addwf	receive_data@receive_buffer,w,c
  3561  000FEC  6ED9               	movwf	fsr2l,c
  3562  000FEE  50F4               	movf	prodh,w,c
  3563  000FF0  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3564  000FF2  6EDA               	movwf	fsr2h,c
  3565  000FF4  C019  FFDF         	movff	receive_data@data,indf2
  3566                           
  3567                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3568  000FF8  EE20 F028          	lfsr	2,40
  3569  000FFC  5016               	movf	receive_data@receive_buffer,w,c
  3570  000FFE  26D9               	addwf	fsr2l,f,c
  3571  001000  5017               	movf	receive_data@receive_buffer+1,w,c
  3572  001002  22DA               	addwfc	fsr2h,f,c
  3573  001004  2ADF               	incf	indf2,f,c
  3574                           
  3575                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3576  001006  EE20 F028          	lfsr	2,40
  3577  00100A  5016               	movf	receive_data@receive_buffer,w,c
  3578  00100C  26D9               	addwf	fsr2l,f,c
  3579  00100E  5017               	movf	receive_data@receive_buffer+1,w,c
  3580  001010  22DA               	addwfc	fsr2h,f,c
  3581  001012  0E27               	movlw	39
  3582  001014  64DF               	cpfsgt	indf2,c
  3583  001016  D008               	goto	l356
  3584                           
  3585                           ;SlaveComm_PIC18.c: 225: {
  3586                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3587  001018  EE20 F028          	lfsr	2,40
  3588  00101C  5016               	movf	receive_data@receive_buffer,w,c
  3589  00101E  26D9               	addwf	fsr2l,f,c
  3590  001020  5017               	movf	receive_data@receive_buffer+1,w,c
  3591  001022  22DA               	addwfc	fsr2h,f,c
  3592  001024  0E27               	movlw	39
  3593  001026  6EDF               	movwf	indf2,c
  3594  001028                     l356:
  3595                           
  3596                           ;SlaveComm_PIC18.c: 227: }
  3597                           ;SlaveComm_PIC18.c: 228: }
  3598                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3599  001028  043E               	decf	receive_data@my_status,w,c
  3600  00102A  A4D8               	btfss	status,2,c
  3601  00102C  D006               	goto	l357
  3602  00102E  0E2A               	movlw	42
  3603  001030  1819               	xorwf	receive_data@data,w,c
  3604  001032  A4D8               	btfss	status,2,c
  3605  001034  D002               	goto	l357
  3606                           
  3607                           ;SlaveComm_PIC18.c: 231: {
  3608                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3609  001036  0E02               	movlw	2
  3610  001038  6E3E               	movwf	receive_data@my_status,c
  3611  00103A                     l357:
  3612                           
  3613                           ;SlaveComm_PIC18.c: 233: }
  3614                           ;SlaveComm_PIC18.c: 234: }
  3615                           ;SlaveComm_PIC18.c: 236: return my_status;
  3616  00103A  503E               	movf	receive_data@my_status,w,c
  3617  00103C  0012               	return	
  3618  00103E                     __end_of_receive_data:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           intcon	equ	0xFF2
  3627                           intcon2	equ	0xFF1
  3628                           intcon3	equ	0xFF0
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           postinc1	equ	0xFE6
  3632                           postdec1	equ	0xFE5
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           indf2	equ	0xFDF
  3636                           postinc2	equ	0xFDE
  3637                           postdec2	equ	0xFDD
  3638                           fsr2h	equ	0xFDA
  3639                           fsr2l	equ	0xFD9
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _SPI_receive_data *****************
  3643 ;; Defined at:
  3644 ;;		line 562 in file "SlaveComm_PIC18.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  data            2   18[COMRAM] PTR unsigned char 
  3647 ;;		 -> receive_data@data(1), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  recvGood        1   20[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      unsigned char 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr2l, fsr2h, status,2
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3659 ;;      Params:         2       0       0       0       0       0       0
  3660 ;;      Locals:         1       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0
  3662 ;;      Totals:         3       0       0       0       0       0       0
  3663 ;;Total ram usage:        3 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_receive_data
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text21
  3674  0018CA                     __ptext21:
  3675                           	opt stack 0
  3676  0018CA                     _SPI_receive_data:
  3677                           	opt stack 27
  3678                           
  3679                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3680                           
  3681                           ;incstack = 0
  3682  0018CA  0E00               	movlw	0
  3683  0018CC  6E15               	movwf	SPI_receive_data@recvGood,c
  3684                           
  3685                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3686  0018CE  A06D               	btfss	3949,0,c	;volatile
  3687  0018D0  D00C               	goto	l459
  3688                           
  3689                           ;SlaveComm_PIC18.c: 568: {
  3690                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3691  0018D2  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3692  0018D6  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3693  0018DA  CF6F FFDF          	movff	3951,indf2	;volatile
  3694                           
  3695                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3696  0018DE  0E01               	movlw	1
  3697  0018E0  6E15               	movwf	SPI_receive_data@recvGood,c
  3698                           
  3699                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3700  0018E2  9E6C               	bcf	3948,7,c	;volatile
  3701                           
  3702                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3703  0018E4  0E00               	movlw	0
  3704  0018E6  6E42               	movwf	_SPI_transmit_wait,c
  3705                           
  3706                           ;SlaveComm_PIC18.c: 573: }
  3707  0018E8  D002               	goto	l460
  3708  0018EA                     l459:
  3709                           
  3710                           ;SlaveComm_PIC18.c: 574: else
  3711                           ;SlaveComm_PIC18.c: 575: {
  3712                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3713  0018EA  0E00               	movlw	0
  3714  0018EC  6E15               	movwf	SPI_receive_data@recvGood,c
  3715  0018EE                     l460:
  3716                           
  3717                           ;SlaveComm_PIC18.c: 577: }
  3718                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3719  0018EE  5015               	movf	SPI_receive_data@recvGood,w,c
  3720  0018F0  0012               	return	
  3721  0018F2                     __end_of_SPI_receive_data:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           prodh	equ	0xFF4
  3728                           prodl	equ	0xFF3
  3729                           intcon	equ	0xFF2
  3730                           intcon2	equ	0xFF1
  3731                           intcon3	equ	0xFF0
  3732                           postinc0	equ	0xFEE
  3733                           wreg	equ	0xFE8
  3734                           postinc1	equ	0xFE6
  3735                           postdec1	equ	0xFE5
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _process_data *****************
  3746 ;; Defined at:
  3747 ;;		line 239 in file "SlaveComm_PIC18.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  receive_buff    2   51[COMRAM] PTR struct buffer
  3750 ;;		 -> communications@receive_buffer(42), 
  3751 ;;  send_buffer     2   53[COMRAM] PTR struct buffer
  3752 ;;		 -> communications@send_buffer(42), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  3755 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      unsigned char 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3765 ;;      Params:         4       0       0       0       0       0       0
  3766 ;;      Locals:         0       0      51       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0
  3768 ;;      Totals:         4       0      51       0       0       0       0
  3769 ;;Total ram usage:       55 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    6
  3772 ;; This function calls:
  3773 ;;		_process_data_parameterize
  3774 ;;		_process_data_parameters
  3775 ;; This function is called by:
  3776 ;;		_communications
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text22
  3781  001868                     __ptext22:
  3782                           	opt stack 0
  3783  001868                     _process_data:
  3784                           	opt stack 23
  3785                           
  3786                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3787                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3788                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3789                           
  3790                           ;incstack = 0
  3791  001868  0E00               	movlw	low process_data@parameters
  3792  00186A  6E19               	movwf	process_data_parameterize@parameters,c
  3793  00186C  0E01               	movlw	high process_data@parameters
  3794  00186E  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3795  001870  C034  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3796  001874  C035  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3797  001878  EC83  F004         	call	_process_data_parameterize	;wreg free
  3798                           
  3799                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3800  00187C  0E00               	movlw	low process_data@parameters
  3801  00187E  6E2F               	movwf	process_data_parameters@parameters,c
  3802  001880  0E01               	movlw	high process_data@parameters
  3803  001882  6E30               	movwf	process_data_parameters@parameters+1,c
  3804  001884  C036  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3805  001888  C037  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3806  00188C  EC30  F003         	call	_process_data_parameters	;wreg free
  3807  001890  0101               	movlb	1	; () banked
  3808  001892  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  3809                           
  3810                           ; BSR set to: 1
  3811                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3812  001894  0101               	movlb	1	; () banked
  3813  001896  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3814  001898  0012               	return	
  3815  00189A                     __end_of_process_data:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           intcon	equ	0xFF2
  3824                           intcon2	equ	0xFF1
  3825                           intcon3	equ	0xFF0
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           postinc1	equ	0xFE6
  3829                           postdec1	equ	0xFE5
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           indf2	equ	0xFDF
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function _process_data_parameters *****************
  3840 ;; Defined at:
  3841 ;;		line 315 in file "SlaveComm_PIC18.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  3844 ;;		 -> process_data@parameters(50), 
  3845 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  3846 ;;		 -> communications@send_buffer(42), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      unsigned char 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3858 ;;      Params:         4       0       0       0       0       0       0
  3859 ;;      Locals:         1       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0
  3861 ;;      Totals:         5       0       0       0       0       0       0
  3862 ;;Total ram usage:        5 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    5
  3865 ;; This function calls:
  3866 ;;		_atol
  3867 ;;		_com_command_setEnergyUsed
  3868 ;;		_command_builder3
  3869 ;;		_send_end_of_transmission
  3870 ;;		_strmatch
  3871 ;; This function is called by:
  3872 ;;		_process_data
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text23
  3877  000660                     __ptext23:
  3878                           	opt stack 0
  3879  000660                     _process_data_parameters:
  3880                           	opt stack 23
  3881                           
  3882                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;incstack = 0
  3886  000660  0E00               	movlw	0
  3887  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3888                           
  3889                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3890  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3891  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3892  00066C  0E4F               	movlw	low STR_1
  3893  00066E  6E20               	movwf	strmatch@b,c
  3894  000670  0E06               	movlw	high STR_1
  3895  000672  6E21               	movwf	strmatch@b+1,c
  3896  000674  EC4D  F00C         	call	_strmatch	;wreg free
  3897  000678  06E8               	decf	wreg,f,c
  3898  00067A  A4D8               	btfss	status,2,c
  3899  00067C  D003               	goto	l381
  3900                           
  3901                           ;SlaveComm_PIC18.c: 321: {
  3902                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3903  00067E  0E01               	movlw	1
  3904  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3905                           
  3906                           ;SlaveComm_PIC18.c: 332: }
  3907  000682  D13F               	goto	l407
  3908  000684                     l381:
  3909                           
  3910                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3911  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3912  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3913  00068C  0E57               	movlw	low STR_2
  3914  00068E  6E20               	movwf	strmatch@b,c
  3915  000690  0E06               	movlw	high STR_2
  3916  000692  6E21               	movwf	strmatch@b+1,c
  3917  000694  EC4D  F00C         	call	_strmatch	;wreg free
  3918  000698  06E8               	decf	wreg,f,c
  3919  00069A  A4D8               	btfss	status,2,c
  3920  00069C  D035               	goto	l383
  3921                           
  3922                           ;SlaveComm_PIC18.c: 334: {
  3923                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3924  00069E  0E0A               	movlw	10
  3925  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3926  0006A2  6E1E               	movwf	strmatch@a,c
  3927  0006A4  0E00               	movlw	0
  3928  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3929  0006A8  6E1F               	movwf	strmatch@a+1,c
  3930  0006AA  0E01               	movlw	low STR_3
  3931  0006AC  6E20               	movwf	strmatch@b,c
  3932  0006AE  0E06               	movlw	high STR_3
  3933  0006B0  6E21               	movwf	strmatch@b+1,c
  3934  0006B2  EC4D  F00C         	call	_strmatch	;wreg free
  3935  0006B6  06E8               	decf	wreg,f,c
  3936  0006B8  B4D8               	btfsc	status,2,c
  3937  0006BA  D123               	goto	l407
  3938                           
  3939                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3940                           
  3941                           ;SlaveComm_PIC18.c: 336: {
  3942                           ;SlaveComm_PIC18.c: 338: }
  3943  0006BC  0E0A               	movlw	10
  3944  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3945  0006C0  6E1E               	movwf	strmatch@a,c
  3946  0006C2  0E00               	movlw	0
  3947  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3948  0006C6  6E1F               	movwf	strmatch@a+1,c
  3949  0006C8  0E17               	movlw	low STR_4
  3950  0006CA  6E20               	movwf	strmatch@b,c
  3951  0006CC  0E06               	movlw	high STR_4
  3952  0006CE  6E21               	movwf	strmatch@b+1,c
  3953  0006D0  EC4D  F00C         	call	_strmatch	;wreg free
  3954  0006D4  06E8               	decf	wreg,f,c
  3955  0006D6  A4D8               	btfss	status,2,c
  3956  0006D8  D114               	goto	l407
  3957                           
  3958                           ;SlaveComm_PIC18.c: 340: {
  3959                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3960  0006DA  0E14               	movlw	20
  3961  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3962  0006DE  6E1F               	movwf	atol@s,c
  3963  0006E0  0E00               	movlw	0
  3964  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3965  0006E4  6E20               	movwf	atol@s+1,c
  3966  0006E6  ECD5  F006         	call	_atol	;wreg free
  3967  0006EA  C01F  F088         	movff	?_atol,_meterEnergyUsed
  3968  0006EE  C020  F089         	movff	?_atol+1,_meterEnergyUsed+1
  3969  0006F2  C021  F08A         	movff	?_atol+2,_meterEnergyUsed+2
  3970  0006F6  C022  F08B         	movff	?_atol+3,_meterEnergyUsed+3
  3971                           
  3972                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  3973  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3974  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3975  000702  ECF6  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3976                           
  3977                           ;SlaveComm_PIC18.c: 347: }
  3978                           ;SlaveComm_PIC18.c: 352: }
  3979  000706  D0FD               	goto	l407
  3980  000708                     l383:
  3981                           
  3982                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  3983  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3984  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3985  000710  0E34               	movlw	low STR_5
  3986  000712  6E20               	movwf	strmatch@b,c
  3987  000714  0E06               	movlw	high STR_5
  3988  000716  6E21               	movwf	strmatch@b+1,c
  3989  000718  EC4D  F00C         	call	_strmatch	;wreg free
  3990  00071C  06E8               	decf	wreg,f,c
  3991  00071E  B4D8               	btfsc	status,2,c
  3992  000720  D0F0               	goto	l407
  3993                           
  3994                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  3995                           
  3996                           ;SlaveComm_PIC18.c: 354: {
  3997                           ;SlaveComm_PIC18.c: 356: }
  3998  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3999  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4000  00072A  0E2F               	movlw	low STR_6
  4001  00072C  6E20               	movwf	strmatch@b,c
  4002  00072E  0E06               	movlw	high STR_6
  4003  000730  6E21               	movwf	strmatch@b+1,c
  4004  000732  EC4D  F00C         	call	_strmatch	;wreg free
  4005  000736  06E8               	decf	wreg,f,c
  4006  000738  A4D8               	btfss	status,2,c
  4007  00073A  D053               	goto	l390
  4008                           
  4009                           ;SlaveComm_PIC18.c: 358: {
  4010                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  4011  00073C  0E0A               	movlw	10
  4012  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  4013  000740  6E1E               	movwf	strmatch@a,c
  4014  000742  0E00               	movlw	0
  4015  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4016  000746  6E1F               	movwf	strmatch@a+1,c
  4017  000748  0E2A               	movlw	low STR_7
  4018  00074A  6E20               	movwf	strmatch@b,c
  4019  00074C  0E06               	movlw	high STR_7
  4020  00074E  6E21               	movwf	strmatch@b+1,c
  4021  000750  EC4D  F00C         	call	_strmatch	;wreg free
  4022  000754  06E8               	decf	wreg,f,c
  4023  000756  A4D8               	btfss	status,2,c
  4024  000758  D0D4               	goto	l407
  4025                           
  4026                           ;SlaveComm_PIC18.c: 360: {
  4027                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  4028  00075A  0E14               	movlw	20
  4029  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  4030  00075E  6E1E               	movwf	strmatch@a,c
  4031  000760  0E00               	movlw	0
  4032  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4033  000764  6E1F               	movwf	strmatch@a+1,c
  4034  000766  0E5B               	movlw	low STR_8
  4035  000768  6E20               	movwf	strmatch@b,c
  4036  00076A  0E06               	movlw	high STR_8
  4037  00076C  6E21               	movwf	strmatch@b+1,c
  4038  00076E  EC4D  F00C         	call	_strmatch	;wreg free
  4039  000772  06E8               	decf	wreg,f,c
  4040  000774  A4D8               	btfss	status,2,c
  4041  000776  D013               	goto	l392
  4042                           
  4043                           ;SlaveComm_PIC18.c: 362: {
  4044                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  4045  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4046  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4047  000780  0E57               	movlw	low STR_2
  4048  000782  6E21               	movwf	command_builder3@data1,c
  4049  000784  0E06               	movlw	high STR_2
  4050  000786  6E22               	movwf	command_builder3@data1+1,c
  4051  000788  0E2A               	movlw	low STR_7
  4052  00078A  6E23               	movwf	command_builder3@data2,c
  4053  00078C  0E06               	movlw	high STR_7
  4054  00078E  6E24               	movwf	command_builder3@data2+1,c
  4055  000790  0E53               	movlw	low STR_11
  4056  000792  6E25               	movwf	command_builder3@data3,c
  4057  000794  0E06               	movlw	high STR_11
  4058  000796  6E26               	movwf	command_builder3@data3+1,c
  4059  000798  EC1F  F008         	call	_command_builder3	;wreg free
  4060                           
  4061                           ;SlaveComm_PIC18.c: 364: }
  4062  00079C  D0B2               	goto	l407
  4063  00079E                     l392:
  4064                           
  4065                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  4066  00079E  0E14               	movlw	20
  4067  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  4068  0007A2  6E1E               	movwf	strmatch@a,c
  4069  0007A4  0E00               	movlw	0
  4070  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4071  0007A8  6E1F               	movwf	strmatch@a+1,c
  4072  0007AA  0E53               	movlw	low STR_11
  4073  0007AC  6E20               	movwf	strmatch@b,c
  4074  0007AE  0E06               	movlw	high STR_11
  4075  0007B0  6E21               	movwf	strmatch@b+1,c
  4076  0007B2  EC4D  F00C         	call	_strmatch	;wreg free
  4077  0007B6  06E8               	decf	wreg,f,c
  4078  0007B8  A4D8               	btfss	status,2,c
  4079  0007BA  D0A3               	goto	l407
  4080                           
  4081                           ;SlaveComm_PIC18.c: 366: {
  4082                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  4083  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4084  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4085  0007C4  0E57               	movlw	low STR_2
  4086  0007C6  6E21               	movwf	command_builder3@data1,c
  4087  0007C8  0E06               	movlw	high STR_2
  4088  0007CA  6E22               	movwf	command_builder3@data1+1,c
  4089  0007CC  0E2A               	movlw	low STR_7
  4090  0007CE  6E23               	movwf	command_builder3@data2,c
  4091  0007D0  0E06               	movlw	high STR_7
  4092  0007D2  6E24               	movwf	command_builder3@data2+1,c
  4093  0007D4  0E5B               	movlw	low STR_8
  4094  0007D6  6E25               	movwf	command_builder3@data3,c
  4095  0007D8  0E06               	movlw	high STR_8
  4096  0007DA  6E26               	movwf	command_builder3@data3+1,c
  4097  0007DC  EC1F  F008         	call	_command_builder3	;wreg free
  4098                           
  4099                           ;SlaveComm_PIC18.c: 368: }
  4100                           ;SlaveComm_PIC18.c: 369: }
  4101                           ;SlaveComm_PIC18.c: 370: }
  4102  0007E0  D090               	goto	l407
  4103  0007E2                     l390:
  4104                           
  4105                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  4106  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4107  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4108  0007EA  0E39               	movlw	low STR_16
  4109  0007EC  6E20               	movwf	strmatch@b,c
  4110  0007EE  0E06               	movlw	high STR_16
  4111  0007F0  6E21               	movwf	strmatch@b+1,c
  4112  0007F2  EC4D  F00C         	call	_strmatch	;wreg free
  4113  0007F6  06E8               	decf	wreg,f,c
  4114  0007F8  A4D8               	btfss	status,2,c
  4115  0007FA  D083               	goto	l407
  4116                           
  4117                           ;SlaveComm_PIC18.c: 372: {
  4118                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  4119  0007FC  0E0A               	movlw	10
  4120  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  4121  000800  6E1E               	movwf	strmatch@a,c
  4122  000802  0E00               	movlw	0
  4123  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4124  000806  6E1F               	movwf	strmatch@a+1,c
  4125  000808  0E2A               	movlw	low STR_7
  4126  00080A  6E20               	movwf	strmatch@b,c
  4127  00080C  0E06               	movlw	high STR_7
  4128  00080E  6E21               	movwf	strmatch@b+1,c
  4129  000810  EC4D  F00C         	call	_strmatch	;wreg free
  4130  000814  06E8               	decf	wreg,f,c
  4131  000816  A4D8               	btfss	status,2,c
  4132  000818  D007               	goto	l397
  4133                           
  4134                           ;SlaveComm_PIC18.c: 374: {
  4135                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  4136  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4137  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4138  000822  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4139                           
  4140                           ;SlaveComm_PIC18.c: 376: }
  4141  000826  D06D               	goto	l407
  4142  000828                     l397:
  4143                           
  4144                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  4145  000828  0E0A               	movlw	10
  4146  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  4147  00082C  6E1E               	movwf	strmatch@a,c
  4148  00082E  0E00               	movlw	0
  4149  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4150  000832  6E1F               	movwf	strmatch@a+1,c
  4151  000834  0E24               	movlw	low STR_18
  4152  000836  6E20               	movwf	strmatch@b,c
  4153  000838  0E06               	movlw	high STR_18
  4154  00083A  6E21               	movwf	strmatch@b+1,c
  4155  00083C  EC4D  F00C         	call	_strmatch	;wreg free
  4156  000840  06E8               	decf	wreg,f,c
  4157  000842  A4D8               	btfss	status,2,c
  4158  000844  D007               	goto	l399
  4159                           
  4160                           ;SlaveComm_PIC18.c: 378: {
  4161                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  4162  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4163  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4164  00084E  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4165                           
  4166                           ;SlaveComm_PIC18.c: 380: }
  4167  000852  D057               	goto	l407
  4168  000854                     l399:
  4169                           
  4170                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  4171  000854  0E0A               	movlw	10
  4172  000856  242F               	addwf	process_data_parameters@parameters,w,c
  4173  000858  6E1E               	movwf	strmatch@a,c
  4174  00085A  0E00               	movlw	0
  4175  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4176  00085E  6E1F               	movwf	strmatch@a+1,c
  4177  000860  0E17               	movlw	low STR_4
  4178  000862  6E20               	movwf	strmatch@b,c
  4179  000864  0E06               	movlw	high STR_4
  4180  000866  6E21               	movwf	strmatch@b+1,c
  4181  000868  EC4D  F00C         	call	_strmatch	;wreg free
  4182  00086C  06E8               	decf	wreg,f,c
  4183  00086E  A4D8               	btfss	status,2,c
  4184  000870  D007               	goto	l401
  4185                           
  4186                           ;SlaveComm_PIC18.c: 382: {
  4187                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  4188  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4189  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4190  00087A  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4191                           
  4192                           ;SlaveComm_PIC18.c: 384: }
  4193  00087E  D041               	goto	l407
  4194  000880                     l401:
  4195                           
  4196                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  4197  000880  0E0A               	movlw	10
  4198  000882  242F               	addwf	process_data_parameters@parameters,w,c
  4199  000884  6E1E               	movwf	strmatch@a,c
  4200  000886  0E00               	movlw	0
  4201  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4202  00088A  6E1F               	movwf	strmatch@a+1,c
  4203  00088C  0E1E               	movlw	low STR_20
  4204  00088E  6E20               	movwf	strmatch@b,c
  4205  000890  0E06               	movlw	high STR_20
  4206  000892  6E21               	movwf	strmatch@b+1,c
  4207  000894  EC4D  F00C         	call	_strmatch	;wreg free
  4208  000898  06E8               	decf	wreg,f,c
  4209  00089A  A4D8               	btfss	status,2,c
  4210  00089C  D007               	goto	l403
  4211                           
  4212                           ;SlaveComm_PIC18.c: 386: {
  4213                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  4214  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4215  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4216  0008A6  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4217                           
  4218                           ;SlaveComm_PIC18.c: 388: }
  4219  0008AA  D02B               	goto	l407
  4220  0008AC                     l403:
  4221                           
  4222                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  4223  0008AC  0E0A               	movlw	10
  4224  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  4225  0008B0  6E1E               	movwf	strmatch@a,c
  4226  0008B2  0E00               	movlw	0
  4227  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4228  0008B6  6E1F               	movwf	strmatch@a+1,c
  4229  0008B8  0E3E               	movlw	low STR_21
  4230  0008BA  6E20               	movwf	strmatch@b,c
  4231  0008BC  0E06               	movlw	high STR_21
  4232  0008BE  6E21               	movwf	strmatch@b+1,c
  4233  0008C0  EC4D  F00C         	call	_strmatch	;wreg free
  4234  0008C4  06E8               	decf	wreg,f,c
  4235  0008C6  A4D8               	btfss	status,2,c
  4236  0008C8  D007               	goto	l405
  4237                           
  4238                           ;SlaveComm_PIC18.c: 390: {
  4239                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  4240  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4241  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4242  0008D2  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4243                           
  4244                           ;SlaveComm_PIC18.c: 392: }
  4245  0008D6  D015               	goto	l407
  4246  0008D8                     l405:
  4247                           
  4248                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  4249  0008D8  0E0A               	movlw	10
  4250  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  4251  0008DC  6E1E               	movwf	strmatch@a,c
  4252  0008DE  0E00               	movlw	0
  4253  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4254  0008E2  6E1F               	movwf	strmatch@a+1,c
  4255  0008E4  0E0D               	movlw	low STR_22
  4256  0008E6  6E20               	movwf	strmatch@b,c
  4257  0008E8  0E06               	movlw	high STR_22
  4258  0008EA  6E21               	movwf	strmatch@b+1,c
  4259  0008EC  EC4D  F00C         	call	_strmatch	;wreg free
  4260  0008F0  06E8               	decf	wreg,f,c
  4261  0008F2  A4D8               	btfss	status,2,c
  4262  0008F4  D006               	goto	l407
  4263                           
  4264                           ;SlaveComm_PIC18.c: 394: {
  4265                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  4266  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4267  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4268  0008FE  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  4269  000902                     l407:
  4270                           
  4271                           ;SlaveComm_PIC18.c: 396: }
  4272                           ;SlaveComm_PIC18.c: 397: }
  4273                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  4274  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  4275  000904  0012               	return	
  4276  000906                     __end_of_process_data_parameters:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           prodh	equ	0xFF4
  4283                           prodl	equ	0xFF3
  4284                           intcon	equ	0xFF2
  4285                           intcon2	equ	0xFF1
  4286                           intcon3	equ	0xFF0
  4287                           postinc0	equ	0xFEE
  4288                           wreg	equ	0xFE8
  4289                           postinc1	equ	0xFE6
  4290                           postdec1	equ	0xFE5
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _strmatch *****************
  4301 ;; Defined at:
  4302 ;;		line 513 in file "SlaveComm_PIC18.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  a               2   29[COMRAM] PTR unsigned char 
  4305 ;;		 -> process_data@parameters(50), 
  4306 ;;  b               2   31[COMRAM] PTR unsigned char 
  4307 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4308 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4309 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4310 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  result          2   33[COMRAM] int 
  4313 ;;  match           1   35[COMRAM] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      unsigned char 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         4       0       0       0       0       0       0
  4324 ;;      Locals:         3       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0
  4326 ;;      Totals:         7       0       0       0       0       0       0
  4327 ;;Total ram usage:        7 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		_strcmp2
  4332 ;; This function is called by:
  4333 ;;		_process_data_parameters
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text24
  4338  00189A                     __ptext24:
  4339                           	opt stack 0
  4340  00189A                     _strmatch:
  4341                           	opt stack 25
  4342                           
  4343                           ;SlaveComm_PIC18.c: 515: int result;
  4344                           ;SlaveComm_PIC18.c: 516: bool match;
  4345                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  4346                           
  4347                           ;incstack = 0
  4348  00189A  C01E  F013         	movff	strmatch@a,strcmp2@a
  4349  00189E  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4350  0018A2  C020  F015         	movff	strmatch@b,strcmp2@b
  4351  0018A6  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4352  0018AA  EC43  F005         	call	_strcmp2	;wreg free
  4353  0018AE  C013  F022         	movff	?_strcmp2,strmatch@result
  4354  0018B2  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4355                           
  4356                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  4357  0018B6  5022               	movf	strmatch@result,w,c
  4358  0018B8  1023               	iorwf	strmatch@result+1,w,c
  4359  0018BA  A4D8               	btfss	status,2,c
  4360  0018BC  D002               	goto	u2370
  4361  0018BE  0E01               	movlw	1
  4362  0018C0  D001               	goto	u2380
  4363  0018C2                     u2370:
  4364  0018C2  0E00               	movlw	0
  4365  0018C4                     u2380:
  4366  0018C4  6E24               	movwf	strmatch@match,c
  4367                           
  4368                           ;SlaveComm_PIC18.c: 522: return match;
  4369  0018C6  5024               	movf	strmatch@match,w,c
  4370  0018C8  0012               	return	
  4371  0018CA                     __end_of_strmatch:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           prodh	equ	0xFF4
  4378                           prodl	equ	0xFF3
  4379                           intcon	equ	0xFF2
  4380                           intcon2	equ	0xFF1
  4381                           intcon3	equ	0xFF0
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postinc1	equ	0xFE6
  4385                           postdec1	equ	0xFE5
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _strcmp2 *****************
  4396 ;; Defined at:
  4397 ;;		line 525 in file "SlaveComm_PIC18.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  a               2   18[COMRAM] PTR unsigned char 
  4400 ;;		 -> process_data@parameters(50), 
  4401 ;;  b               2   20[COMRAM] PTR unsigned char 
  4402 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4403 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4404 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4405 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  inx             2   27[COMRAM] int 
  4408 ;;  match           2   25[COMRAM] int 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2   18[COMRAM] int 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4418 ;;      Params:         4       0       0       0       0       0       0
  4419 ;;      Locals:         4       0       0       0       0       0       0
  4420 ;;      Temps:          3       0       0       0       0       0       0
  4421 ;;      Totals:        11       0       0       0       0       0       0
  4422 ;;Total ram usage:       11 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_strmatch
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text25
  4433  000A86                     __ptext25:
  4434                           	opt stack 0
  4435  000A86                     _strcmp2:
  4436                           	opt stack 25
  4437                           
  4438                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  4439                           
  4440                           ;incstack = 0
  4441  000A86  0E00               	movlw	0
  4442  000A88  6E1D               	movwf	strcmp2@inx+1,c
  4443  000A8A  0E00               	movlw	0
  4444  000A8C  6E1C               	movwf	strcmp2@inx,c
  4445                           
  4446                           ;SlaveComm_PIC18.c: 528: int match = 0;
  4447  000A8E  0E00               	movlw	0
  4448  000A90  6E1B               	movwf	strcmp2@match+1,c
  4449  000A92  0E00               	movlw	0
  4450  000A94  6E1A               	movwf	strcmp2@match,c
  4451                           
  4452                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4453  000A96  D035               	goto	l443
  4454  000A98                     
  4455                           ;SlaveComm_PIC18.c: 531: {
  4456                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  4457  000A98  501C               	movf	strcmp2@inx,w,c
  4458  000A9A  2413               	addwf	strcmp2@a,w,c
  4459  000A9C  6ED9               	movwf	fsr2l,c
  4460  000A9E  501D               	movf	strcmp2@inx+1,w,c
  4461  000AA0  2014               	addwfc	strcmp2@a+1,w,c
  4462  000AA2  6EDA               	movwf	fsr2h,c
  4463  000AA4  501C               	movf	strcmp2@inx,w,c
  4464  000AA6  2415               	addwf	strcmp2@b,w,c
  4465  000AA8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4466  000AAA  501D               	movf	strcmp2@inx+1,w,c
  4467  000AAC  2016               	addwfc	strcmp2@b+1,w,c
  4468  000AAE  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4469  000AB0  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4470  000AB4  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4471  000AB8                     	if	0	;tblptru may be non-zero
  4472  000AB8                     	endif
  4473  000AB8                     	if	0	;tblptru may be non-zero
  4474  000AB8                     	endif
  4475  000AB8  50DE               	movf	postinc2,w,c
  4476  000ABA  0009               	tblrd		*+
  4477  000ABC  5CF5               	subwf	tablat,w,c
  4478  000ABE  B0D8               	btfsc	status,0,c
  4479  000AC0  D005               	goto	l445
  4480                           
  4481                           ;SlaveComm_PIC18.c: 533: {
  4482                           ;SlaveComm_PIC18.c: 534: match = 1;
  4483  000AC2  0E00               	movlw	0
  4484  000AC4  6E1B               	movwf	strcmp2@match+1,c
  4485  000AC6  0E01               	movlw	1
  4486  000AC8  6E1A               	movwf	strcmp2@match,c
  4487                           
  4488                           ;SlaveComm_PIC18.c: 535: }
  4489  000ACA  D019               	goto	l447
  4490  000ACC                     l445:
  4491                           
  4492                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  4493  000ACC  501C               	movf	strcmp2@inx,w,c
  4494  000ACE  2413               	addwf	strcmp2@a,w,c
  4495  000AD0  6ED9               	movwf	fsr2l,c
  4496  000AD2  501D               	movf	strcmp2@inx+1,w,c
  4497  000AD4  2014               	addwfc	strcmp2@a+1,w,c
  4498  000AD6  6EDA               	movwf	fsr2h,c
  4499  000AD8  50DF               	movf	indf2,w,c
  4500  000ADA  6E17               	movwf	??_strcmp2& (0+255),c
  4501  000ADC  501C               	movf	strcmp2@inx,w,c
  4502  000ADE  2415               	addwf	strcmp2@b,w,c
  4503  000AE0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4504  000AE2  501D               	movf	strcmp2@inx+1,w,c
  4505  000AE4  2016               	addwfc	strcmp2@b+1,w,c
  4506  000AE6  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4507  000AE8  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4508  000AEC  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4509  000AF0                     	if	0	;tblptru may be non-zero
  4510  000AF0                     	endif
  4511  000AF0                     	if	0	;tblptru may be non-zero
  4512  000AF0                     	endif
  4513  000AF0  0008               	tblrd		*
  4514  000AF2  50F5               	movf	tablat,w,c
  4515  000AF4  5C17               	subwf	??_strcmp2,w,c
  4516  000AF6  B0D8               	btfsc	status,0,c
  4517  000AF8  D002               	goto	l447
  4518                           
  4519                           ;SlaveComm_PIC18.c: 537: {
  4520                           ;SlaveComm_PIC18.c: 538: match = -1;
  4521  000AFA  681A               	setf	strcmp2@match,c
  4522  000AFC  681B               	setf	strcmp2@match+1,c
  4523  000AFE                     l447:
  4524                           
  4525                           ;SlaveComm_PIC18.c: 543: }
  4526                           ;SlaveComm_PIC18.c: 545: inx++;
  4527                           
  4528                           ;SlaveComm_PIC18.c: 541: {
  4529  000AFE  4A1C               	infsnz	strcmp2@inx,f,c
  4530  000B00  2A1D               	incf	strcmp2@inx+1,f,c
  4531  000B02                     l443:
  4532  000B02  501C               	movf	strcmp2@inx,w,c
  4533  000B04  2413               	addwf	strcmp2@a,w,c
  4534  000B06  6ED9               	movwf	fsr2l,c
  4535  000B08  501D               	movf	strcmp2@inx+1,w,c
  4536  000B0A  2014               	addwfc	strcmp2@a+1,w,c
  4537  000B0C  6EDA               	movwf	fsr2h,c
  4538  000B0E  50DF               	movf	indf2,w,c
  4539  000B10  B4D8               	btfsc	status,2,c
  4540  000B12  D013               	goto	u2250
  4541  000B14  501C               	movf	strcmp2@inx,w,c
  4542  000B16  2415               	addwf	strcmp2@b,w,c
  4543  000B18  6E17               	movwf	??_strcmp2& (0+255),c
  4544  000B1A  501D               	movf	strcmp2@inx+1,w,c
  4545  000B1C  2016               	addwfc	strcmp2@b+1,w,c
  4546  000B1E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4547  000B20  C017  FFF6         	movff	??_strcmp2,tblptrl
  4548  000B24  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4549  000B28                     	if	0	;tblptru may be non-zero
  4550  000B28                     	endif
  4551  000B28                     	if	0	;tblptru may be non-zero
  4552  000B28                     	endif
  4553  000B28  0008               	tblrd		*
  4554  000B2A  50F5               	movf	tablat,w,c
  4555  000B2C  0900               	iorlw	0
  4556  000B2E  B4D8               	btfsc	status,2,c
  4557  000B30  D004               	goto	u2250
  4558  000B32  501A               	movf	strcmp2@match,w,c
  4559  000B34  101B               	iorwf	strcmp2@match+1,w,c
  4560  000B36  B4D8               	btfsc	status,2,c
  4561  000B38  D7AF               	goto	l444
  4562  000B3A                     u2250:
  4563                           
  4564                           ;SlaveComm_PIC18.c: 546: }
  4565                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4566  000B3A  501C               	movf	strcmp2@inx,w,c
  4567  000B3C  2413               	addwf	strcmp2@a,w,c
  4568  000B3E  6ED9               	movwf	fsr2l,c
  4569  000B40  501D               	movf	strcmp2@inx+1,w,c
  4570  000B42  2014               	addwfc	strcmp2@a+1,w,c
  4571  000B44  6EDA               	movwf	fsr2h,c
  4572  000B46  50DF               	movf	indf2,w,c
  4573  000B48  A4D8               	btfss	status,2,c
  4574  000B4A  D012               	goto	l453
  4575  000B4C  501C               	movf	strcmp2@inx,w,c
  4576  000B4E  2415               	addwf	strcmp2@b,w,c
  4577  000B50  6E17               	movwf	??_strcmp2& (0+255),c
  4578  000B52  501D               	movf	strcmp2@inx+1,w,c
  4579  000B54  2016               	addwfc	strcmp2@b+1,w,c
  4580  000B56  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4581  000B58  C017  FFF6         	movff	??_strcmp2,tblptrl
  4582  000B5C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4583  000B60                     	if	0	;tblptru may be non-zero
  4584  000B60                     	endif
  4585  000B60                     	if	0	;tblptru may be non-zero
  4586  000B60                     	endif
  4587  000B60  0008               	tblrd		*
  4588  000B62  50F5               	movf	tablat,w,c
  4589  000B64  0900               	iorlw	0
  4590  000B66  B4D8               	btfsc	status,2,c
  4591  000B68  D003               	goto	l453
  4592                           
  4593                           ;SlaveComm_PIC18.c: 550: {
  4594                           ;SlaveComm_PIC18.c: 551: match = -1;
  4595  000B6A  681A               	setf	strcmp2@match,c
  4596  000B6C  681B               	setf	strcmp2@match+1,c
  4597                           
  4598                           ;SlaveComm_PIC18.c: 552: }
  4599  000B6E  D01C               	goto	l455
  4600  000B70                     l453:
  4601                           
  4602                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4603  000B70  501C               	movf	strcmp2@inx,w,c
  4604  000B72  2413               	addwf	strcmp2@a,w,c
  4605  000B74  6ED9               	movwf	fsr2l,c
  4606  000B76  501D               	movf	strcmp2@inx+1,w,c
  4607  000B78  2014               	addwfc	strcmp2@a+1,w,c
  4608  000B7A  6EDA               	movwf	fsr2h,c
  4609  000B7C  50DF               	movf	indf2,w,c
  4610  000B7E  B4D8               	btfsc	status,2,c
  4611  000B80  D013               	goto	l455
  4612  000B82  501C               	movf	strcmp2@inx,w,c
  4613  000B84  2415               	addwf	strcmp2@b,w,c
  4614  000B86  6E17               	movwf	??_strcmp2& (0+255),c
  4615  000B88  501D               	movf	strcmp2@inx+1,w,c
  4616  000B8A  2016               	addwfc	strcmp2@b+1,w,c
  4617  000B8C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4618  000B8E  C017  FFF6         	movff	??_strcmp2,tblptrl
  4619  000B92  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4620  000B96                     	if	0	;tblptru may be non-zero
  4621  000B96                     	endif
  4622  000B96                     	if	0	;tblptru may be non-zero
  4623  000B96                     	endif
  4624  000B96  0008               	tblrd		*
  4625  000B98  50F5               	movf	tablat,w,c
  4626  000B9A  0900               	iorlw	0
  4627  000B9C  A4D8               	btfss	status,2,c
  4628  000B9E  D004               	goto	l455
  4629                           
  4630                           ;SlaveComm_PIC18.c: 554: {
  4631                           ;SlaveComm_PIC18.c: 555: match = 1;
  4632  000BA0  0E00               	movlw	0
  4633  000BA2  6E1B               	movwf	strcmp2@match+1,c
  4634  000BA4  0E01               	movlw	1
  4635  000BA6  6E1A               	movwf	strcmp2@match,c
  4636  000BA8                     l455:
  4637                           
  4638                           ;SlaveComm_PIC18.c: 556: }
  4639                           ;SlaveComm_PIC18.c: 558: return match;
  4640  000BA8  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4641  000BAC  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4642  000BB0  0012               	return	
  4643  000BB2                     __end_of_strcmp2:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           intcon2	equ	0xFF1
  4653                           intcon3	equ	0xFF0
  4654                           postinc0	equ	0xFEE
  4655                           wreg	equ	0xFE8
  4656                           postinc1	equ	0xFE6
  4657                           postdec1	equ	0xFE5
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           indf2	equ	0xFDF
  4661                           postinc2	equ	0xFDE
  4662                           postdec2	equ	0xFDD
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _send_end_of_transmission *****************
  4668 ;; Defined at:
  4669 ;;		line 604 in file "SlaveComm_PIC18.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4672 ;;		 -> communications@send_buffer(42), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4684 ;;      Params:         2       0       0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0       0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0
  4687 ;;      Totals:         2       0       0       0       0       0       0
  4688 ;;Total ram usage:        2 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    4
  4691 ;; This function calls:
  4692 ;;		_command_builder1
  4693 ;; This function is called by:
  4694 ;;		_process_data_parameters
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text26
  4699  001A22                     __ptext26:
  4700                           	opt stack 0
  4701  001A22                     _send_end_of_transmission:
  4702                           	opt stack 23
  4703                           
  4704                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4705                           
  4706                           ;incstack = 0
  4707  001A22  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4708  001A26  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4709  001A2A  0E4F               	movlw	low STR_1
  4710  001A2C  6E21               	movwf	command_builder1@data1,c
  4711  001A2E  0E06               	movlw	high STR_1
  4712  001A30  6E22               	movwf	command_builder1@data1+1,c
  4713  001A32  EC02  F00B         	call	_command_builder1	;wreg free
  4714  001A36  0012               	return	
  4715  001A38                     __end_of_send_end_of_transmission:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           intcon2	equ	0xFF1
  4725                           intcon3	equ	0xFF0
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           postinc1	equ	0xFE6
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _command_builder1 *****************
  4740 ;; Defined at:
  4741 ;;		line 406 in file "SlaveComm_PIC18.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4744 ;;		 -> communications@send_buffer(42), 
  4745 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4746 ;;		 -> STR_23(4), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4758 ;;      Params:         4       0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0
  4761 ;;      Totals:         4       0       0       0       0       0       0
  4762 ;;Total ram usage:        4 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    3
  4765 ;; This function calls:
  4766 ;;		_command_builder_add_char
  4767 ;;		_command_builder_add_string
  4768 ;; This function is called by:
  4769 ;;		_send_end_of_transmission
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text27
  4774  001604                     __ptext27:
  4775                           	opt stack 0
  4776  001604                     _command_builder1:
  4777                           	opt stack 23
  4778                           
  4779                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4780                           
  4781                           ;incstack = 0
  4782  001604  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4783  001608  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4784  00160C  0E23               	movlw	35
  4785  00160E  6E15               	movwf	command_builder_add_char@data,c
  4786  001610  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  4787                           
  4788                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4789  001614  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4790  001618  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4791  00161C  0E23               	movlw	35
  4792  00161E  6E15               	movwf	command_builder_add_char@data,c
  4793  001620  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  4794                           
  4795                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4796  001624  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4797  001628  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4798  00162C  0E21               	movlw	33
  4799  00162E  6E15               	movwf	command_builder_add_char@data,c
  4800  001630  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  4801                           
  4802                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4803  001634  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4804  001638  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4805  00163C  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4806  001640  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4807  001644  EC20  F00A         	call	_command_builder_add_string	;wreg free
  4808                           
  4809                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4810  001648  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4811  00164C  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4812  001650  0E2A               	movlw	42
  4813  001652  6E15               	movwf	command_builder_add_char@data,c
  4814  001654  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  4815  001658  0012               	return	
  4816  00165A                     __end_of_command_builder1:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           intcon	equ	0xFF2
  4825                           intcon2	equ	0xFF1
  4826                           intcon3	equ	0xFF0
  4827                           postinc0	equ	0xFEE
  4828                           wreg	equ	0xFE8
  4829                           postinc1	equ	0xFE6
  4830                           postdec1	equ	0xFE5
  4831                           fsr1h	equ	0xFE2
  4832                           fsr1l	equ	0xFE1
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8
  4839                           
  4840 ;; *************** function _com_command_setEnergyUsed *****************
  4841 ;; Defined at:
  4842 ;;		line 629 in file "SlaveComm_PIC18.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4845 ;;		 -> communications@send_buffer(42), 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4857 ;;      Params:         2       0       0       0       0       0       0
  4858 ;;      Locals:         0      12       0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0
  4860 ;;      Totals:         2      12       0       0       0       0       0
  4861 ;;Total ram usage:       14 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    4
  4864 ;; This function calls:
  4865 ;;		_command_builder3
  4866 ;;		_ultoa
  4867 ;; This function is called by:
  4868 ;;		_resetCommunications
  4869 ;;		_process_data_parameters
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text28
  4874  0017EC                     __ptext28:
  4875                           	opt stack 0
  4876  0017EC                     _com_command_setEnergyUsed:
  4877                           	opt stack 24
  4878                           
  4879                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4880                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4881                           
  4882                           ;incstack = 0
  4883  0017EC  0EBE               	movlw	low com_command_setEnergyUsed@temp
  4884  0017EE  6E20               	movwf	ultoa@buf,c
  4885  0017F0  0E00               	movlw	high com_command_setEnergyUsed@temp
  4886  0017F2  6E21               	movwf	ultoa@buf+1,c
  4887  0017F4  C088  F022         	movff	_meterEnergyUsed,ultoa@val
  4888  0017F8  C089  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4889  0017FC  C08A  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4890  001800  C08B  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4891  001804  0E00               	movlw	0
  4892  001806  6E27               	movwf	ultoa@base+1,c
  4893  001808  0E0A               	movlw	10
  4894  00180A  6E26               	movwf	ultoa@base,c
  4895  00180C  EC5A  F006         	call	_ultoa	;wreg free
  4896                           
  4897                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4898  001810  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4899  001814  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4900  001818  0E57               	movlw	low STR_2
  4901  00181A  6E21               	movwf	command_builder3@data1,c
  4902  00181C  0E06               	movlw	high STR_2
  4903  00181E  6E22               	movwf	command_builder3@data1+1,c
  4904  001820  0E17               	movlw	low STR_4
  4905  001822  6E23               	movwf	command_builder3@data2,c
  4906  001824  0E06               	movlw	high STR_4
  4907  001826  6E24               	movwf	command_builder3@data2+1,c
  4908  001828  0EBE               	movlw	low com_command_setEnergyUsed@temp
  4909  00182A  6E25               	movwf	command_builder3@data3,c
  4910  00182C  0E00               	movlw	high com_command_setEnergyUsed@temp
  4911  00182E  6E26               	movwf	command_builder3@data3+1,c
  4912  001830  EC1F  F008         	call	_command_builder3	;wreg free
  4913  001834  0012               	return	
  4914  001836                     __end_of_com_command_setEnergyUsed:
  4915                           	opt stack 0
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           prodh	equ	0xFF4
  4921                           prodl	equ	0xFF3
  4922                           intcon	equ	0xFF2
  4923                           intcon2	equ	0xFF1
  4924                           intcon3	equ	0xFF0
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           postinc1	equ	0xFE6
  4928                           postdec1	equ	0xFE5
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function _ultoa *****************
  4939 ;; Defined at:
  4940 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ltoa.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4943 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4944 ;;  val             4   33[COMRAM] unsigned long 
  4945 ;;  base            2   37[COMRAM] int 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  v               4   39[COMRAM] unsigned long 
  4948 ;;  c               1   43[COMRAM] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  2   31[COMRAM] PTR unsigned char 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4958 ;;      Params:         8       0       0       0       0       0       0
  4959 ;;      Locals:         5       0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0
  4961 ;;      Totals:        13       0       0       0       0       0       0
  4962 ;;Total ram usage:       13 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    2
  4965 ;; This function calls:
  4966 ;;		___lldiv
  4967 ;;		___llmod
  4968 ;; This function is called by:
  4969 ;;		_com_command_setPower
  4970 ;;		_com_command_setEnergyUsed
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text29
  4975  000CB4                     __ptext29:
  4976                           	opt stack 0
  4977  000CB4                     _ultoa:
  4978                           	opt stack 25
  4979                           
  4980                           ;incstack = 0
  4981  000CB4  C022  F028         	movff	ultoa@val,ultoa@v
  4982  000CB8  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4983  000CBC  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4984  000CC0  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4985  000CC4  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4986  000CC8  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4987  000CCC  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4988  000CD0  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4989  000CD4  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4990  000CD8  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4991  000CDC  0E00               	movlw	0
  4992  000CDE  BE18               	btfsc	___lldiv@divisor+1,7,c
  4993  000CE0  0EFF               	movlw	-1
  4994  000CE2  6E19               	movwf	___lldiv@divisor+2,c
  4995  000CE4  6E1A               	movwf	___lldiv@divisor+3,c
  4996  000CE6  ECDF  F009         	call	___lldiv	;wreg free
  4997  000CEA  C013  F028         	movff	?___lldiv,ultoa@v
  4998  000CEE  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4999  000CF2  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  5000  000CF6  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  5001  000CFA  4A20               	infsnz	ultoa@buf,f,c
  5002  000CFC  2A21               	incf	ultoa@buf+1,f,c
  5003  000CFE  5028               	movf	ultoa@v,w,c
  5004  000D00  1029               	iorwf	ultoa@v+1,w,c
  5005  000D02  102A               	iorwf	ultoa@v+2,w,c
  5006  000D04  102B               	iorwf	ultoa@v+3,w,c
  5007  000D06  A4D8               	btfss	status,2,c
  5008  000D08  D7DD               	goto	l916
  5009  000D0A  C020  FFD9         	movff	ultoa@buf,fsr2l
  5010  000D0E  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5011  000D12  0E00               	movlw	0
  5012  000D14  6EDF               	movwf	indf2,c
  5013  000D16  0620               	decf	ultoa@buf,f,c
  5014  000D18  A0D8               	btfss	status,0,c
  5015  000D1A  0621               	decf	ultoa@buf+1,f,c
  5016  000D1C  C022  F013         	movff	ultoa@val,___llmod@dividend
  5017  000D20  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  5018  000D24  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  5019  000D28  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  5020  000D2C  C026  F017         	movff	ultoa@base,___llmod@divisor
  5021  000D30  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  5022  000D34  0E00               	movlw	0
  5023  000D36  BE18               	btfsc	___llmod@divisor+1,7,c
  5024  000D38  0EFF               	movlw	-1
  5025  000D3A  6E19               	movwf	___llmod@divisor+2,c
  5026  000D3C  6E1A               	movwf	___llmod@divisor+3,c
  5027  000D3E  ECCF  F00A         	call	___llmod	;wreg free
  5028  000D42  5013               	movf	?___llmod,w,c
  5029  000D44  6E2C               	movwf	ultoa@c,c
  5030  000D46  C022  F013         	movff	ultoa@val,___lldiv@dividend
  5031  000D4A  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  5032  000D4E  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  5033  000D52  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  5034  000D56  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5035  000D5A  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5036  000D5E  0E00               	movlw	0
  5037  000D60  BE18               	btfsc	___lldiv@divisor+1,7,c
  5038  000D62  0EFF               	movlw	-1
  5039  000D64  6E19               	movwf	___lldiv@divisor+2,c
  5040  000D66  6E1A               	movwf	___lldiv@divisor+3,c
  5041  000D68  ECDF  F009         	call	___lldiv	;wreg free
  5042  000D6C  C013  F022         	movff	?___lldiv,ultoa@val
  5043  000D70  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  5044  000D74  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  5045  000D78  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  5046  000D7C  0E09               	movlw	9
  5047  000D7E  642C               	cpfsgt	ultoa@c,c
  5048  000D80  D002               	goto	l919
  5049  000D82  0E07               	movlw	7
  5050  000D84  262C               	addwf	ultoa@c,f,c
  5051  000D86                     l919:
  5052  000D86  0E30               	movlw	48
  5053  000D88  262C               	addwf	ultoa@c,f,c
  5054  000D8A  C020  FFD9         	movff	ultoa@buf,fsr2l
  5055  000D8E  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5056  000D92  C02C  FFDF         	movff	ultoa@c,indf2
  5057  000D96  0620               	decf	ultoa@buf,f,c
  5058  000D98  A0D8               	btfss	status,0,c
  5059  000D9A  0621               	decf	ultoa@buf+1,f,c
  5060  000D9C  5022               	movf	ultoa@val,w,c
  5061  000D9E  1023               	iorwf	ultoa@val+1,w,c
  5062  000DA0  1024               	iorwf	ultoa@val+2,w,c
  5063  000DA2  1025               	iorwf	ultoa@val+3,w,c
  5064  000DA4  B4D8               	btfsc	status,2,c
  5065  000DA6  0012               	return	
  5066  000DA8  D7B9               	goto	l918
  5067  000DAA                     __end_of_ultoa:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           intcon2	equ	0xFF1
  5077                           intcon3	equ	0xFF0
  5078                           postinc0	equ	0xFEE
  5079                           wreg	equ	0xFE8
  5080                           postinc1	equ	0xFE6
  5081                           postdec1	equ	0xFE5
  5082                           fsr1h	equ	0xFE2
  5083                           fsr1l	equ	0xFE1
  5084                           indf2	equ	0xFDF
  5085                           postinc2	equ	0xFDE
  5086                           postdec2	equ	0xFDD
  5087                           fsr2h	equ	0xFDA
  5088                           fsr2l	equ	0xFD9
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function ___llmod *****************
  5092 ;; Defined at:
  5093 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  dividend        4   18[COMRAM] unsigned long 
  5096 ;;  divisor         4   22[COMRAM] unsigned long 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  counter         1   26[COMRAM] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  4   18[COMRAM] unsigned long 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5108 ;;      Params:         8       0       0       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0
  5111 ;;      Totals:         9       0       0       0       0       0       0
  5112 ;;Total ram usage:        9 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_ultoa
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text30
  5123  00159E                     __ptext30:
  5124                           	opt stack 0
  5125  00159E                     ___llmod:
  5126                           	opt stack 25
  5127                           
  5128                           ;incstack = 0
  5129  00159E  5017               	movf	___llmod@divisor,w,c
  5130  0015A0  1018               	iorwf	___llmod@divisor+1,w,c
  5131  0015A2  1019               	iorwf	___llmod@divisor+2,w,c
  5132  0015A4  101A               	iorwf	___llmod@divisor+3,w,c
  5133  0015A6  B4D8               	btfsc	status,2,c
  5134  0015A8  D024               	goto	l878
  5135  0015AA  0E01               	movlw	1
  5136  0015AC  6E1B               	movwf	___llmod@counter,c
  5137  0015AE  D006               	goto	l873
  5138  0015B0  90D8               	bcf	status,0,c
  5139  0015B2  3617               	rlcf	___llmod@divisor,f,c
  5140  0015B4  3618               	rlcf	___llmod@divisor+1,f,c
  5141  0015B6  3619               	rlcf	___llmod@divisor+2,f,c
  5142  0015B8  361A               	rlcf	___llmod@divisor+3,f,c
  5143  0015BA  2A1B               	incf	___llmod@counter,f,c
  5144  0015BC                     l873:
  5145  0015BC  AE1A               	btfss	___llmod@divisor+3,7,c
  5146  0015BE  D7F8               	goto	l874
  5147  0015C0                     u2190:
  5148  0015C0  5017               	movf	___llmod@divisor,w,c
  5149  0015C2  5C13               	subwf	___llmod@dividend,w,c
  5150  0015C4  5018               	movf	___llmod@divisor+1,w,c
  5151  0015C6  5814               	subwfb	___llmod@dividend+1,w,c
  5152  0015C8  5019               	movf	___llmod@divisor+2,w,c
  5153  0015CA  5815               	subwfb	___llmod@dividend+2,w,c
  5154  0015CC  501A               	movf	___llmod@divisor+3,w,c
  5155  0015CE  5816               	subwfb	___llmod@dividend+3,w,c
  5156  0015D0  A0D8               	btfss	status,0,c
  5157  0015D2  D008               	goto	l877
  5158  0015D4  5017               	movf	___llmod@divisor,w,c
  5159  0015D6  5E13               	subwf	___llmod@dividend,f,c
  5160  0015D8  5018               	movf	___llmod@divisor+1,w,c
  5161  0015DA  5A14               	subwfb	___llmod@dividend+1,f,c
  5162  0015DC  5019               	movf	___llmod@divisor+2,w,c
  5163  0015DE  5A15               	subwfb	___llmod@dividend+2,f,c
  5164  0015E0  501A               	movf	___llmod@divisor+3,w,c
  5165  0015E2  5A16               	subwfb	___llmod@dividend+3,f,c
  5166  0015E4                     l877:
  5167  0015E4  90D8               	bcf	status,0,c
  5168  0015E6  321A               	rrcf	___llmod@divisor+3,f,c
  5169  0015E8  3219               	rrcf	___llmod@divisor+2,f,c
  5170  0015EA  3218               	rrcf	___llmod@divisor+1,f,c
  5171  0015EC  3217               	rrcf	___llmod@divisor,f,c
  5172  0015EE  2E1B               	decfsz	___llmod@counter,f,c
  5173  0015F0  D7E7               	goto	u2190
  5174  0015F2                     l878:
  5175  0015F2  C013  F013         	movff	___llmod@dividend,?___llmod
  5176  0015F6  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  5177  0015FA  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  5178  0015FE  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  5179  001602  0012               	return		;funcret
  5180  001604                     __end_of___llmod:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           postinc1	equ	0xFE6
  5194                           postdec1	equ	0xFE5
  5195                           fsr1h	equ	0xFE2
  5196                           fsr1l	equ	0xFE1
  5197                           indf2	equ	0xFDF
  5198                           postinc2	equ	0xFDE
  5199                           postdec2	equ	0xFDD
  5200                           fsr2h	equ	0xFDA
  5201                           fsr2l	equ	0xFD9
  5202                           status	equ	0xFD8
  5203                           
  5204 ;; *************** function ___lldiv *****************
  5205 ;; Defined at:
  5206 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  dividend        4   18[COMRAM] unsigned long 
  5209 ;;  divisor         4   22[COMRAM] unsigned long 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  quotient        4   26[COMRAM] unsigned long 
  5212 ;;  counter         1   30[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  4   18[COMRAM] unsigned long 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5222 ;;      Params:         8       0       0       0       0       0       0
  5223 ;;      Locals:         5       0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0
  5225 ;;      Totals:        13       0       0       0       0       0       0
  5226 ;;Total ram usage:       13 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_ultoa
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text31
  5237  0013BE                     __ptext31:
  5238                           	opt stack 0
  5239  0013BE                     ___lldiv:
  5240                           	opt stack 25
  5241                           
  5242                           ;incstack = 0
  5243  0013BE  0E00               	movlw	0
  5244  0013C0  6E1B               	movwf	___lldiv@quotient,c
  5245  0013C2  0E00               	movlw	0
  5246  0013C4  6E1C               	movwf	___lldiv@quotient+1,c
  5247  0013C6  0E00               	movlw	0
  5248  0013C8  6E1D               	movwf	___lldiv@quotient+2,c
  5249  0013CA  0E00               	movlw	0
  5250  0013CC  6E1E               	movwf	___lldiv@quotient+3,c
  5251  0013CE  5017               	movf	___lldiv@divisor,w,c
  5252  0013D0  1018               	iorwf	___lldiv@divisor+1,w,c
  5253  0013D2  1019               	iorwf	___lldiv@divisor+2,w,c
  5254  0013D4  101A               	iorwf	___lldiv@divisor+3,w,c
  5255  0013D6  B4D8               	btfsc	status,2,c
  5256  0013D8  D02A               	goto	l868
  5257  0013DA  0E01               	movlw	1
  5258  0013DC  6E1F               	movwf	___lldiv@counter,c
  5259  0013DE  D006               	goto	l863
  5260  0013E0  90D8               	bcf	status,0,c
  5261  0013E2  3617               	rlcf	___lldiv@divisor,f,c
  5262  0013E4  3618               	rlcf	___lldiv@divisor+1,f,c
  5263  0013E6  3619               	rlcf	___lldiv@divisor+2,f,c
  5264  0013E8  361A               	rlcf	___lldiv@divisor+3,f,c
  5265  0013EA  2A1F               	incf	___lldiv@counter,f,c
  5266  0013EC                     l863:
  5267  0013EC  AE1A               	btfss	___lldiv@divisor+3,7,c
  5268  0013EE  D7F8               	goto	l864
  5269  0013F0                     u2160:
  5270  0013F0  90D8               	bcf	status,0,c
  5271  0013F2  361B               	rlcf	___lldiv@quotient,f,c
  5272  0013F4  361C               	rlcf	___lldiv@quotient+1,f,c
  5273  0013F6  361D               	rlcf	___lldiv@quotient+2,f,c
  5274  0013F8  361E               	rlcf	___lldiv@quotient+3,f,c
  5275  0013FA  5017               	movf	___lldiv@divisor,w,c
  5276  0013FC  5C13               	subwf	___lldiv@dividend,w,c
  5277  0013FE  5018               	movf	___lldiv@divisor+1,w,c
  5278  001400  5814               	subwfb	___lldiv@dividend+1,w,c
  5279  001402  5019               	movf	___lldiv@divisor+2,w,c
  5280  001404  5815               	subwfb	___lldiv@dividend+2,w,c
  5281  001406  501A               	movf	___lldiv@divisor+3,w,c
  5282  001408  5816               	subwfb	___lldiv@dividend+3,w,c
  5283  00140A  A0D8               	btfss	status,0,c
  5284  00140C  D009               	goto	l867
  5285  00140E  5017               	movf	___lldiv@divisor,w,c
  5286  001410  5E13               	subwf	___lldiv@dividend,f,c
  5287  001412  5018               	movf	___lldiv@divisor+1,w,c
  5288  001414  5A14               	subwfb	___lldiv@dividend+1,f,c
  5289  001416  5019               	movf	___lldiv@divisor+2,w,c
  5290  001418  5A15               	subwfb	___lldiv@dividend+2,f,c
  5291  00141A  501A               	movf	___lldiv@divisor+3,w,c
  5292  00141C  5A16               	subwfb	___lldiv@dividend+3,f,c
  5293  00141E  801B               	bsf	___lldiv@quotient,0,c
  5294  001420                     l867:
  5295  001420  90D8               	bcf	status,0,c
  5296  001422  321A               	rrcf	___lldiv@divisor+3,f,c
  5297  001424  3219               	rrcf	___lldiv@divisor+2,f,c
  5298  001426  3218               	rrcf	___lldiv@divisor+1,f,c
  5299  001428  3217               	rrcf	___lldiv@divisor,f,c
  5300  00142A  2E1F               	decfsz	___lldiv@counter,f,c
  5301  00142C  D7E1               	goto	u2160
  5302  00142E                     l868:
  5303  00142E  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5304  001432  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5305  001436  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5306  00143A  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5307  00143E  0012               	return		;funcret
  5308  001440                     __end_of___lldiv:
  5309                           	opt stack 0
  5310                           tblptru	equ	0xFF8
  5311                           tblptrh	equ	0xFF7
  5312                           tblptrl	equ	0xFF6
  5313                           tablat	equ	0xFF5
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           intcon	equ	0xFF2
  5317                           intcon2	equ	0xFF1
  5318                           intcon3	equ	0xFF0
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           postinc1	equ	0xFE6
  5322                           postdec1	equ	0xFE5
  5323                           fsr1h	equ	0xFE2
  5324                           fsr1l	equ	0xFE1
  5325                           indf2	equ	0xFDF
  5326                           postinc2	equ	0xFDE
  5327                           postdec2	equ	0xFDD
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function _command_builder3 *****************
  5333 ;; Defined at:
  5334 ;;		line 430 in file "SlaveComm_PIC18.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  5337 ;;		 -> communications@send_buffer(42), 
  5338 ;;  data1           2   32[COMRAM] PTR unsigned char 
  5339 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5340 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5341 ;;  data2           2   34[COMRAM] PTR unsigned char 
  5342 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5343 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5344 ;;  data3           2   36[COMRAM] PTR unsigned char 
  5345 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5346 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5358 ;;      Params:         8       0       0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0
  5361 ;;      Totals:         8       0       0       0       0       0       0
  5362 ;;Total ram usage:        8 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    3
  5365 ;; This function calls:
  5366 ;;		_command_builder_add_char
  5367 ;;		_command_builder_add_string
  5368 ;; This function is called by:
  5369 ;;		_process_data_parameters
  5370 ;;		_com_command_setPower
  5371 ;;		_com_command_setEnergyUsed
  5372 ;;		_com_command_setVersion
  5373 ;;		_com_command_setVolts
  5374 ;;		_com_command_setAmps
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text32
  5379  00103E                     __ptext32:
  5380                           	opt stack 0
  5381  00103E                     _command_builder3:
  5382                           	opt stack 24
  5383                           
  5384                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  5385                           
  5386                           ;incstack = 0
  5387  00103E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5388  001042  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5389  001046  0E23               	movlw	35
  5390  001048  6E15               	movwf	command_builder_add_char@data,c
  5391  00104A  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5392                           
  5393                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  5394  00104E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5395  001052  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5396  001056  0E23               	movlw	35
  5397  001058  6E15               	movwf	command_builder_add_char@data,c
  5398  00105A  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5399                           
  5400                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  5401  00105E  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5402  001062  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5403  001066  0E21               	movlw	33
  5404  001068  6E15               	movwf	command_builder_add_char@data,c
  5405  00106A  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5406                           
  5407                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  5408  00106E  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5409  001072  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5410  001076  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5411  00107A  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5412  00107E  EC20  F00A         	call	_command_builder_add_string	;wreg free
  5413                           
  5414                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  5415  001082  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5416  001086  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5417  00108A  0E3B               	movlw	59
  5418  00108C  6E15               	movwf	command_builder_add_char@data,c
  5419  00108E  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5420                           
  5421                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  5422  001092  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5423  001096  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5424  00109A  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5425  00109E  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5426  0010A2  EC20  F00A         	call	_command_builder_add_string	;wreg free
  5427                           
  5428                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  5429  0010A6  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5430  0010AA  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5431  0010AE  0E3B               	movlw	59
  5432  0010B0  6E15               	movwf	command_builder_add_char@data,c
  5433  0010B2  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5434                           
  5435                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  5436  0010B6  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5437  0010BA  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5438  0010BE  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5439  0010C2  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5440  0010C6  EC20  F00A         	call	_command_builder_add_string	;wreg free
  5441                           
  5442                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  5443  0010CA  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5444  0010CE  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5445  0010D2  0E2A               	movlw	42
  5446  0010D4  6E15               	movwf	command_builder_add_char@data,c
  5447  0010D6  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5448  0010DA  0012               	return	
  5449  0010DC                     __end_of_command_builder3:
  5450                           	opt stack 0
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           intcon2	equ	0xFF1
  5459                           intcon3	equ	0xFF0
  5460                           postinc0	equ	0xFEE
  5461                           wreg	equ	0xFE8
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           indf2	equ	0xFDF
  5467                           postinc2	equ	0xFDE
  5468                           postdec2	equ	0xFDD
  5469                           fsr2h	equ	0xFDA
  5470                           fsr2l	equ	0xFD9
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _command_builder_add_string *****************
  5474 ;; Defined at:
  5475 ;;		line 475 in file "SlaveComm_PIC18.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5478 ;;		 -> communications@send_buffer(42), 
  5479 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5480 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5481 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5482 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5483 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5484 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5485 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  5486 ;;		 -> STR_10(5), STR_9(4), 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  inx             2   28[COMRAM] int 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5498 ;;      Params:         4       0       0       0       0       0       0
  5499 ;;      Locals:         2       0       0       0       0       0       0
  5500 ;;      Temps:          2       0       0       0       0       0       0
  5501 ;;      Totals:         8       0       0       0       0       0       0
  5502 ;;Total ram usage:        8 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    2
  5505 ;; This function calls:
  5506 ;;		_command_builder_add_char
  5507 ;; This function is called by:
  5508 ;;		_command_builder1
  5509 ;;		_command_builder3
  5510 ;;		_command_builder2
  5511 ;;		_command_builder4
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text33
  5516  001440                     __ptext33:
  5517                           	opt stack 0
  5518  001440                     _command_builder_add_string:
  5519                           	opt stack 24
  5520                           
  5521                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5522                           
  5523                           ;incstack = 0
  5524  001440  0E00               	movlw	0
  5525  001442  6E1E               	movwf	command_builder_add_string@inx+1,c
  5526  001444  0E00               	movlw	0
  5527  001446  6E1D               	movwf	command_builder_add_string@inx,c
  5528  001448  D01F               	goto	l427
  5529  00144A                     
  5530                           ;SlaveComm_PIC18.c: 478: {
  5531                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5532  00144A  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5533  00144E  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5534  001452  501D               	movf	command_builder_add_string@inx,w,c
  5535  001454  2419               	addwf	command_builder_add_string@data_string,w,c
  5536  001456  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5537  001458  501E               	movf	command_builder_add_string@inx+1,w,c
  5538  00145A  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5539  00145C  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5540  00145E  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5541  001462  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5542  001466  6AF8               	clrf	tblptru,c
  5543  001468  0E05               	movlw	(high __ramtop+-1)
  5544  00146A  64F7               	cpfsgt	tblptrh,c
  5545  00146C  D003               	bra	u2127
  5546  00146E  0008               	tblrd		*
  5547  001470  50F5               	movf	tablat,w,c
  5548  001472  D005               	bra	u2120
  5549  001474                     u2127:
  5550  001474  CFF6 FFE1          	movff	tblptrl,fsr1l
  5551  001478  CFF7 FFE2          	movff	tblptrh,fsr1h
  5552  00147C  50E7               	movf	indf1,w,c
  5553  00147E                     u2120:
  5554  00147E  6E15               	movwf	command_builder_add_char@data,c
  5555  001480  EC2D  F00B         	call	_command_builder_add_char	;wreg free
  5556  001484  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5557  001486  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5558  001488                     l427:
  5559  001488  501D               	movf	command_builder_add_string@inx,w,c
  5560  00148A  2419               	addwf	command_builder_add_string@data_string,w,c
  5561  00148C  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5562  00148E  501E               	movf	command_builder_add_string@inx+1,w,c
  5563  001490  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5564  001492  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5565  001494  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5566  001498  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5567  00149C  6AF8               	clrf	tblptru,c
  5568  00149E  0E05               	movlw	(high __ramtop+-1)
  5569  0014A0  64F7               	cpfsgt	tblptrh,c
  5570  0014A2  D003               	bra	u2137
  5571  0014A4  0008               	tblrd		*
  5572  0014A6  50F5               	movf	tablat,w,c
  5573  0014A8  D005               	bra	u2130
  5574  0014AA                     u2137:
  5575  0014AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5576  0014AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5577  0014B2  50E7               	movf	indf1,w,c
  5578  0014B4                     u2130:
  5579  0014B4  0900               	iorlw	0
  5580  0014B6  B4D8               	btfsc	status,2,c
  5581  0014B8  0012               	return	
  5582  0014BA  D7C7               	goto	l428
  5583  0014BC                     __end_of_command_builder_add_string:
  5584                           	opt stack 0
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           intcon2	equ	0xFF1
  5593                           intcon3	equ	0xFF0
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           postinc1	equ	0xFE6
  5598                           postdec1	equ	0xFE5
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           indf2	equ	0xFDF
  5602                           postinc2	equ	0xFDE
  5603                           postdec2	equ	0xFDD
  5604                           fsr2h	equ	0xFDA
  5605                           fsr2l	equ	0xFD9
  5606                           status	equ	0xFD8
  5607                           
  5608 ;; *************** function _command_builder_add_char *****************
  5609 ;; Defined at:
  5610 ;;		line 462 in file "SlaveComm_PIC18.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5613 ;;		 -> communications@send_buffer(42), 
  5614 ;;  data            1   20[COMRAM] unsigned char 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         3       0       0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0
  5628 ;;      Temps:          1       0       0       0       0       0       0
  5629 ;;      Totals:         4       0       0       0       0       0       0
  5630 ;;Total ram usage:        4 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_command_builder1
  5637 ;;		_command_builder3
  5638 ;;		_command_builder_add_string
  5639 ;;		_command_builder2
  5640 ;;		_command_builder4
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text34
  5645  00165A                     __ptext34:
  5646                           	opt stack 0
  5647  00165A                     _command_builder_add_char:
  5648                           	opt stack 24
  5649                           
  5650                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5651                           
  5652                           ;incstack = 0
  5653  00165A  EE20 F028          	lfsr	2,40
  5654  00165E  5013               	movf	command_builder_add_char@send_buffer,w,c
  5655  001660  26D9               	addwf	fsr2l,f,c
  5656  001662  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5657  001664  22DA               	addwfc	fsr2h,f,c
  5658  001666  50DF               	movf	indf2,w,c
  5659  001668  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5660  00166A  5016               	movf	??_command_builder_add_char,w,c
  5661  00166C  0D01               	mullw	1
  5662  00166E  50F3               	movf	prodl,w,c
  5663  001670  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5664  001672  6ED9               	movwf	fsr2l,c
  5665  001674  50F4               	movf	prodh,w,c
  5666  001676  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5667  001678  6EDA               	movwf	fsr2h,c
  5668  00167A  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5669                           
  5670                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5671  00167E  EE20 F028          	lfsr	2,40
  5672  001682  5013               	movf	command_builder_add_char@send_buffer,w,c
  5673  001684  26D9               	addwf	fsr2l,f,c
  5674  001686  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5675  001688  22DA               	addwfc	fsr2h,f,c
  5676  00168A  2ADF               	incf	indf2,f,c
  5677                           
  5678                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5679  00168C  EE20 F028          	lfsr	2,40
  5680  001690  5013               	movf	command_builder_add_char@send_buffer,w,c
  5681  001692  26D9               	addwf	fsr2l,f,c
  5682  001694  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5683  001696  22DA               	addwfc	fsr2h,f,c
  5684  001698  0E27               	movlw	39
  5685  00169A  64DF               	cpfsgt	indf2,c
  5686  00169C  0012               	return	
  5687                           
  5688                           ;SlaveComm_PIC18.c: 468: {
  5689                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5690  00169E  EE20 F028          	lfsr	2,40
  5691  0016A2  5013               	movf	command_builder_add_char@send_buffer,w,c
  5692  0016A4  26D9               	addwf	fsr2l,f,c
  5693  0016A6  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5694  0016A8  22DA               	addwfc	fsr2h,f,c
  5695  0016AA  0E00               	movlw	0
  5696  0016AC  6EDF               	movwf	indf2,c
  5697  0016AE  0012               	return	
  5698  0016B0                     __end_of_command_builder_add_char:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           intcon	equ	0xFF2
  5707                           intcon2	equ	0xFF1
  5708                           intcon3	equ	0xFF0
  5709                           postinc0	equ	0xFEE
  5710                           wreg	equ	0xFE8
  5711                           indf1	equ	0xFE7
  5712                           postinc1	equ	0xFE6
  5713                           postdec1	equ	0xFE5
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _atol *****************
  5724 ;; Defined at:
  5725 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\atol.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5728 ;;		 -> process_data@parameters(50), 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  a               4   39[COMRAM] long 
  5731 ;;  c               1   43[COMRAM] unsigned char 
  5732 ;;  sign            1   38[COMRAM] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  4   30[COMRAM] long 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5742 ;;      Params:         4       0       0       0       0       0       0
  5743 ;;      Locals:         6       0       0       0       0       0       0
  5744 ;;      Temps:          4       0       0       0       0       0       0
  5745 ;;      Totals:        14       0       0       0       0       0       0
  5746 ;;Total ram usage:       14 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    2
  5749 ;; This function calls:
  5750 ;;		___lmul
  5751 ;;		_isdigit
  5752 ;; This function is called by:
  5753 ;;		_process_data_parameters
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text35
  5758  000DAA                     __ptext35:
  5759                           	opt stack 0
  5760  000DAA                     _atol:
  5761                           	opt stack 25
  5762                           
  5763                           ;incstack = 0
  5764  000DAA  C01F  FFD9         	movff	atol@s,fsr2l
  5765  000DAE  C020  FFDA         	movff	atol@s+1,fsr2h
  5766  000DB2  50DF               	movf	indf2,w,c
  5767  000DB4  6E2C               	movwf	atol@c,c
  5768  000DB6  4A1F               	infsnz	atol@s,f,c
  5769  000DB8  2A20               	incf	atol@s+1,f,c
  5770  000DBA  0E20               	movlw	32
  5771  000DBC  182C               	xorwf	atol@c,w,c
  5772  000DBE  B4D8               	btfsc	status,2,c
  5773  000DC0  D7F4               	goto	_atol
  5774  000DC2  0E09               	movlw	9
  5775  000DC4  182C               	xorwf	atol@c,w,c
  5776  000DC6  B4D8               	btfsc	status,2,c
  5777  000DC8  D7F0               	goto	_atol
  5778  000DCA  0E00               	movlw	0
  5779  000DCC  6E28               	movwf	atol@a,c
  5780  000DCE  0E00               	movlw	0
  5781  000DD0  6E29               	movwf	atol@a+1,c
  5782  000DD2  0E00               	movlw	0
  5783  000DD4  6E2A               	movwf	atol@a+2,c
  5784  000DD6  0E00               	movlw	0
  5785  000DD8  6E2B               	movwf	atol@a+3,c
  5786  000DDA  0E00               	movlw	0
  5787  000DDC  6E27               	movwf	atol@sign,c
  5788  000DDE  0E2D               	movlw	45
  5789  000DE0  182C               	xorwf	atol@c,w,c
  5790  000DE2  A4D8               	btfss	status,2,c
  5791  000DE4  D002               	goto	l659
  5792  000DE6  2A27               	incf	atol@sign,f,c
  5793  000DE8  D027               	goto	L3
  5794  000DEA                     l659:
  5795  000DEA  0E2B               	movlw	43
  5796  000DEC  182C               	xorwf	atol@c,w,c
  5797  000DEE  A4D8               	btfss	status,2,c
  5798  000DF0  D02B               	goto	l662
  5799  000DF2  D022               	goto	L3
  5800  000DF4  C028  F013         	movff	atol@a,___lmul@multiplier
  5801  000DF8  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5802  000DFC  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5803  000E00  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5804  000E04  0E0A               	movlw	10
  5805  000E06  6E17               	movwf	___lmul@multiplicand,c
  5806  000E08  0E00               	movlw	0
  5807  000E0A  6E18               	movwf	___lmul@multiplicand+1,c
  5808  000E0C  0E00               	movlw	0
  5809  000E0E  6E19               	movwf	___lmul@multiplicand+2,c
  5810  000E10  0E00               	movlw	0
  5811  000E12  6E1A               	movwf	___lmul@multiplicand+3,c
  5812  000E14  EC58  F00B         	call	___lmul	;wreg free
  5813  000E18  C02C  F023         	movff	atol@c,??_atol
  5814  000E1C  0ED0               	movlw	208
  5815  000E1E  2623               	addwf	??_atol,f,c
  5816  000E20  5023               	movf	??_atol,w,c
  5817  000E22  2413               	addwf	?___lmul,w,c
  5818  000E24  6E28               	movwf	atol@a,c
  5819  000E26  0E00               	movlw	0
  5820  000E28  2014               	addwfc	?___lmul+1,w,c
  5821  000E2A  6E29               	movwf	atol@a+1,c
  5822  000E2C  0E00               	movlw	0
  5823  000E2E  2015               	addwfc	?___lmul+2,w,c
  5824  000E30  6E2A               	movwf	atol@a+2,c
  5825  000E32  0E00               	movlw	0
  5826  000E34  2016               	addwfc	?___lmul+3,w,c
  5827  000E36  6E2B               	movwf	atol@a+3,c
  5828  000E38                     L3:
  5829  000E38  C01F  FFD9         	movff	atol@s,fsr2l
  5830  000E3C  C020  FFDA         	movff	atol@s+1,fsr2h
  5831  000E40  50DF               	movf	indf2,w,c
  5832  000E42  6E2C               	movwf	atol@c,c
  5833  000E44  4A1F               	infsnz	atol@s,f,c
  5834  000E46  2A20               	incf	atol@s+1,f,c
  5835  000E48                     l662:
  5836  000E48  502C               	movf	atol@c,w,c
  5837  000E4A  ECD2  F00C         	call	_isdigit
  5838  000E4E  B0D8               	btfsc	status,0,c
  5839  000E50  D7D1               	goto	l663
  5840  000E52  5027               	movf	atol@sign,w,c
  5841  000E54  B4D8               	btfsc	status,2,c
  5842  000E56  D01A               	goto	l665
  5843  000E58  C028  F023         	movff	atol@a,??_atol
  5844  000E5C  C029  F024         	movff	atol@a+1,??_atol+1
  5845  000E60  C02A  F025         	movff	atol@a+2,??_atol+2
  5846  000E64  C02B  F026         	movff	atol@a+3,??_atol+3
  5847  000E68  1E23               	comf	??_atol,f,c
  5848  000E6A  1E24               	comf	??_atol+1,f,c
  5849  000E6C  1E25               	comf	??_atol+2,f,c
  5850  000E6E  1E26               	comf	??_atol+3,f,c
  5851  000E70  2A23               	incf	??_atol,f,c
  5852  000E72  0E00               	movlw	0
  5853  000E74  2224               	addwfc	??_atol+1,f,c
  5854  000E76  2225               	addwfc	??_atol+2,f,c
  5855  000E78  2226               	addwfc	??_atol+3,f,c
  5856  000E7A  C023  F01F         	movff	??_atol,?_atol
  5857  000E7E  C024  F020         	movff	??_atol+1,?_atol+1
  5858  000E82  C025  F021         	movff	??_atol+2,?_atol+2
  5859  000E86  C026  F022         	movff	??_atol+3,?_atol+3
  5860  000E8A  0012               	return	
  5861  000E8C                     l665:
  5862  000E8C  C028  F01F         	movff	atol@a,?_atol
  5863  000E90  C029  F020         	movff	atol@a+1,?_atol+1
  5864  000E94  C02A  F021         	movff	atol@a+2,?_atol+2
  5865  000E98  C02B  F022         	movff	atol@a+3,?_atol+3
  5866  000E9C  0012               	return		;funcret
  5867  000E9E                     __end_of_atol:
  5868                           	opt stack 0
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           intcon	equ	0xFF2
  5876                           intcon2	equ	0xFF1
  5877                           intcon3	equ	0xFF0
  5878                           postinc0	equ	0xFEE
  5879                           wreg	equ	0xFE8
  5880                           indf1	equ	0xFE7
  5881                           postinc1	equ	0xFE6
  5882                           postdec1	equ	0xFE5
  5883                           fsr1h	equ	0xFE2
  5884                           fsr1l	equ	0xFE1
  5885                           indf2	equ	0xFDF
  5886                           postinc2	equ	0xFDE
  5887                           postdec2	equ	0xFDD
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function _isdigit *****************
  5893 ;; Defined at:
  5894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  c               1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  c               1   20[COMRAM] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;		None               void
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5908 ;;      Params:         0       0       0       0       0       0       0
  5909 ;;      Locals:         2       0       0       0       0       0       0
  5910 ;;      Temps:          1       0       0       0       0       0       0
  5911 ;;      Totals:         3       0       0       0       0       0       0
  5912 ;;Total ram usage:        3 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    1
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_atol
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text36
  5923  0019A4                     __ptext36:
  5924                           	opt stack 0
  5925  0019A4                     _isdigit:
  5926                           	opt stack 25
  5927                           
  5928                           ;incstack = 0
  5929                           ;isdigit@c stored from wreg
  5930  0019A4  6E15               	movwf	isdigit@c,c
  5931  0019A6  0E00               	movlw	0
  5932  0019A8  6E14               	movwf	_isdigit$2582,c
  5933  0019AA  0E3A               	movlw	58
  5934  0019AC  6015               	cpfslt	isdigit@c,c
  5935  0019AE  D005               	goto	l837
  5936  0019B0  0E2F               	movlw	47
  5937  0019B2  6415               	cpfsgt	isdigit@c,c
  5938  0019B4  D002               	goto	l837
  5939  0019B6  0E01               	movlw	1
  5940  0019B8  6E14               	movwf	_isdigit$2582,c
  5941  0019BA                     l837:
  5942  0019BA  C014  F013         	movff	_isdigit$2582,??_isdigit
  5943  0019BE  3013               	rrcf	??_isdigit,w,c
  5944  0019C0  0012               	return	
  5945  0019C2                     __end_of_isdigit:
  5946                           	opt stack 0
  5947                           tblptru	equ	0xFF8
  5948                           tblptrh	equ	0xFF7
  5949                           tblptrl	equ	0xFF6
  5950                           tablat	equ	0xFF5
  5951                           prodh	equ	0xFF4
  5952                           prodl	equ	0xFF3
  5953                           intcon	equ	0xFF2
  5954                           intcon2	equ	0xFF1
  5955                           intcon3	equ	0xFF0
  5956                           postinc0	equ	0xFEE
  5957                           wreg	equ	0xFE8
  5958                           indf1	equ	0xFE7
  5959                           postinc1	equ	0xFE6
  5960                           postdec1	equ	0xFE5
  5961                           fsr1h	equ	0xFE2
  5962                           fsr1l	equ	0xFE1
  5963                           indf2	equ	0xFDF
  5964                           postinc2	equ	0xFDE
  5965                           postdec2	equ	0xFDD
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function ___lmul *****************
  5971 ;; Defined at:
  5972 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  multiplier      4   18[COMRAM] unsigned long 
  5975 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  product         4   26[COMRAM] unsigned long 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  4   18[COMRAM] unsigned long 
  5980 ;; Registers used:
  5981 ;;		wreg, status,2, status,0
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         8       0       0       0       0       0       0
  5988 ;;      Locals:         4       0       0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0
  5990 ;;      Totals:        12       0       0       0       0       0       0
  5991 ;;Total ram usage:       12 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_atol
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text37
  6002  0016B0                     __ptext37:
  6003                           	opt stack 0
  6004  0016B0                     ___lmul:
  6005                           	opt stack 25
  6006                           
  6007                           ;incstack = 0
  6008  0016B0  0E00               	movlw	0
  6009  0016B2  6E1B               	movwf	___lmul@product,c
  6010  0016B4  0E00               	movlw	0
  6011  0016B6  6E1C               	movwf	___lmul@product+1,c
  6012  0016B8  0E00               	movlw	0
  6013  0016BA  6E1D               	movwf	___lmul@product+2,c
  6014  0016BC  0E00               	movlw	0
  6015  0016BE  6E1E               	movwf	___lmul@product+3,c
  6016  0016C0  A013               	btfss	___lmul@multiplier,0,c
  6017  0016C2  D008               	goto	l506
  6018  0016C4  5017               	movf	___lmul@multiplicand,w,c
  6019  0016C6  261B               	addwf	___lmul@product,f,c
  6020  0016C8  5018               	movf	___lmul@multiplicand+1,w,c
  6021  0016CA  221C               	addwfc	___lmul@product+1,f,c
  6022  0016CC  5019               	movf	___lmul@multiplicand+2,w,c
  6023  0016CE  221D               	addwfc	___lmul@product+2,f,c
  6024  0016D0  501A               	movf	___lmul@multiplicand+3,w,c
  6025  0016D2  221E               	addwfc	___lmul@product+3,f,c
  6026  0016D4                     l506:
  6027  0016D4  90D8               	bcf	status,0,c
  6028  0016D6  3617               	rlcf	___lmul@multiplicand,f,c
  6029  0016D8  3618               	rlcf	___lmul@multiplicand+1,f,c
  6030  0016DA  3619               	rlcf	___lmul@multiplicand+2,f,c
  6031  0016DC  361A               	rlcf	___lmul@multiplicand+3,f,c
  6032  0016DE  90D8               	bcf	status,0,c
  6033  0016E0  3216               	rrcf	___lmul@multiplier+3,f,c
  6034  0016E2  3215               	rrcf	___lmul@multiplier+2,f,c
  6035  0016E4  3214               	rrcf	___lmul@multiplier+1,f,c
  6036  0016E6  3213               	rrcf	___lmul@multiplier,f,c
  6037  0016E8  5013               	movf	___lmul@multiplier,w,c
  6038  0016EA  1014               	iorwf	___lmul@multiplier+1,w,c
  6039  0016EC  1015               	iorwf	___lmul@multiplier+2,w,c
  6040  0016EE  1016               	iorwf	___lmul@multiplier+3,w,c
  6041  0016F0  A4D8               	btfss	status,2,c
  6042  0016F2  D7E6               	goto	l505
  6043  0016F4  C01B  F013         	movff	___lmul@product,?___lmul
  6044  0016F8  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  6045  0016FC  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  6046  001700  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  6047  001704  0012               	return		;funcret
  6048  001706                     __end_of___lmul:
  6049                           	opt stack 0
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           intcon2	equ	0xFF1
  6058                           intcon3	equ	0xFF0
  6059                           postinc0	equ	0xFEE
  6060                           wreg	equ	0xFE8
  6061                           indf1	equ	0xFE7
  6062                           postinc1	equ	0xFE6
  6063                           postdec1	equ	0xFE5
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           postdec2	equ	0xFDD
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function _process_data_parameterize *****************
  6074 ;; Defined at:
  6075 ;;		line 256 in file "SlaveComm_PIC18.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  6078 ;;		 -> process_data@parameters(50), 
  6079 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  6080 ;;		 -> communications@receive_buffer(42), 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  inx             2   31[COMRAM] int 
  6083 ;;  parameter_po    1   34[COMRAM] unsigned char 
  6084 ;;  parameter_in    1   33[COMRAM] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6094 ;;      Params:         4       0       0       0       0       0       0
  6095 ;;      Locals:         4       0       0       0       0       0       0
  6096 ;;      Temps:          3       0       0       0       0       0       0
  6097 ;;      Totals:        11       0       0       0       0       0       0
  6098 ;;Total ram usage:       11 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    2
  6101 ;; This function calls:
  6102 ;;		___wmul
  6103 ;; This function is called by:
  6104 ;;		_process_data
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text38
  6109  000906                     __ptext38:
  6110                           	opt stack 0
  6111  000906                     _process_data_parameterize:
  6112                           	opt stack 26
  6113                           
  6114                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  6115                           
  6116                           ;incstack = 0
  6117  000906  0E00               	movlw	0
  6118  000908  6E23               	movwf	process_data_parameterize@parameter_position,c
  6119                           
  6120                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  6121  00090A  0E00               	movlw	0
  6122  00090C  6E22               	movwf	process_data_parameterize@parameter_index,c
  6123                           
  6124                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  6125  00090E  0E00               	movlw	0
  6126  000910  6E21               	movwf	process_data_parameterize@inx+1,c
  6127  000912  0E00               	movlw	0
  6128  000914  6E20               	movwf	process_data_parameterize@inx,c
  6129  000916  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6130  000918  D008               	goto	l364
  6131  00091A  5021               	movf	process_data_parameterize@inx+1,w,c
  6132  00091C  E105               	bnz	u2460
  6133  00091E  0E05               	movlw	5
  6134  000920  5C20               	subwf	process_data_parameterize@inx,w,c
  6135  000922  B0D8               	btfsc	status,0,c
  6136  000924  D082               	goto	l366
  6137  000926  D001               	goto	l364
  6138  000928                     u2460:
  6139  000928  D080               	goto	l366
  6140  00092A                     l364:
  6141                           
  6142                           ;SlaveComm_PIC18.c: 269: {
  6143                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  6144  00092A  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6145  00092E  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6146  000932  0E00               	movlw	0
  6147  000934  6E16               	movwf	___wmul@multiplicand+1,c
  6148  000936  0E0A               	movlw	10
  6149  000938  6E15               	movwf	___wmul@multiplicand,c
  6150  00093A  EC8C  F00C         	call	___wmul	;wreg free
  6151  00093E  5013               	movf	?___wmul,w,c
  6152  000940  2419               	addwf	process_data_parameterize@parameters,w,c
  6153  000942  6ED9               	movwf	fsr2l,c
  6154  000944  5014               	movf	?___wmul+1,w,c
  6155  000946  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6156  000948  6EDA               	movwf	fsr2h,c
  6157  00094A  0E00               	movlw	0
  6158  00094C  6EDF               	movwf	indf2,c
  6159  00094E  4A20               	infsnz	process_data_parameterize@inx,f,c
  6160  000950  2A21               	incf	process_data_parameterize@inx+1,f,c
  6161  000952  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6162  000954  D7EA               	goto	l364
  6163  000956  5021               	movf	process_data_parameterize@inx+1,w,c
  6164  000958  E168               	bnz	l3106
  6165  00095A  D7E1               	goto	L2
  6166  00095C                     
  6167                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  6168  00095C  0E00               	movlw	0
  6169  00095E  6E23               	movwf	process_data_parameterize@parameter_position,c
  6170                           
  6171                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  6172  000960  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6173                           
  6174                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  6175  000962  0E04               	movlw	4
  6176  000964  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6177  000966  D05A               	goto	l370
  6178                           
  6179                           ;SlaveComm_PIC18.c: 286: {
  6180                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  6181  000968  0E04               	movlw	4
  6182  00096A  6E22               	movwf	process_data_parameterize@parameter_index,c
  6183                           
  6184                           ;SlaveComm_PIC18.c: 290: }
  6185                           ;SlaveComm_PIC18.c: 292: break;
  6186  00096C  D057               	goto	l370
  6187  00096E                     
  6188                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6189  00096E  EE20 F029          	lfsr	2,41
  6190  000972  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6191  000974  26D9               	addwf	fsr2l,f,c
  6192  000976  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6193  000978  22DA               	addwfc	fsr2h,f,c
  6194  00097A  50DF               	movf	indf2,w,c
  6195  00097C  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6196  00097E  501D               	movf	??_process_data_parameterize,w,c
  6197  000980  0D01               	mullw	1
  6198  000982  50F3               	movf	prodl,w,c
  6199  000984  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6200  000986  6ED9               	movwf	fsr2l,c
  6201  000988  50F4               	movf	prodh,w,c
  6202  00098A  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6203  00098C  6EDA               	movwf	fsr2h,c
  6204  00098E  5022               	movf	process_data_parameterize@parameter_index,w,c
  6205  000990  0D0A               	mullw	10
  6206  000992  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6207  000996  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6208  00099A  50F3               	movf	prodl,w,c
  6209  00099C  261E               	addwf	??_process_data_parameterize+1,f,c
  6210  00099E  50F4               	movf	prodh,w,c
  6211  0009A0  221F               	addwfc	??_process_data_parameterize+2,f,c
  6212  0009A2  5023               	movf	process_data_parameterize@parameter_position,w,c
  6213  0009A4  0D01               	mullw	1
  6214  0009A6  50F3               	movf	prodl,w,c
  6215  0009A8  241E               	addwf	??_process_data_parameterize+1,w,c
  6216  0009AA  6EE1               	movwf	fsr1l,c
  6217  0009AC  50F4               	movf	prodh,w,c
  6218  0009AE  201F               	addwfc	??_process_data_parameterize+2,w,c
  6219  0009B0  6EE2               	movwf	fsr1h,c
  6220  0009B2  CFDF FFE7          	movff	indf2,indf1
  6221                           
  6222                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  6223  0009B6  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6224                           
  6225                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  6226  0009B8  0E09               	movlw	9
  6227  0009BA  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6228  0009BC  D002               	goto	l374
  6229                           
  6230                           ;SlaveComm_PIC18.c: 298: {
  6231                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  6232  0009BE  0E09               	movlw	9
  6233  0009C0  6E23               	movwf	process_data_parameterize@parameter_position,c
  6234  0009C2                     l374:
  6235                           
  6236                           ;SlaveComm_PIC18.c: 302: }
  6237                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  6238  0009C2  5022               	movf	process_data_parameterize@parameter_index,w,c
  6239  0009C4  0D0A               	mullw	10
  6240  0009C6  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6241  0009CA  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6242  0009CE  50F3               	movf	prodl,w,c
  6243  0009D0  261D               	addwf	??_process_data_parameterize,f,c
  6244  0009D2  50F4               	movf	prodh,w,c
  6245  0009D4  221E               	addwfc	??_process_data_parameterize+1,f,c
  6246  0009D6  5023               	movf	process_data_parameterize@parameter_position,w,c
  6247  0009D8  0D01               	mullw	1
  6248  0009DA  50F3               	movf	prodl,w,c
  6249  0009DC  241D               	addwf	??_process_data_parameterize,w,c
  6250  0009DE  6ED9               	movwf	fsr2l,c
  6251  0009E0  50F4               	movf	prodh,w,c
  6252  0009E2  201E               	addwfc	??_process_data_parameterize+1,w,c
  6253  0009E4  6EDA               	movwf	fsr2h,c
  6254  0009E6  0E00               	movlw	0
  6255  0009E8  6EDF               	movwf	indf2,c
  6256                           
  6257                           ;SlaveComm_PIC18.c: 307: }
  6258                           
  6259                           ;SlaveComm_PIC18.c: 306: break;
  6260  0009EA  D018               	goto	l370
  6261  0009EC  EE20 F029          	lfsr	2,41
  6262  0009F0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6263  0009F2  26D9               	addwf	fsr2l,f,c
  6264  0009F4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6265  0009F6  22DA               	addwfc	fsr2h,f,c
  6266  0009F8  50DF               	movf	indf2,w,c
  6267  0009FA  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6268  0009FC  501D               	movf	??_process_data_parameterize,w,c
  6269  0009FE  0D01               	mullw	1
  6270  000A00  50F3               	movf	prodl,w,c
  6271  000A02  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6272  000A04  6ED9               	movwf	fsr2l,c
  6273  000A06  50F4               	movf	prodh,w,c
  6274  000A08  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6275  000A0A  6EDA               	movwf	fsr2h,c
  6276  000A0C  50DF               	movf	indf2,w,c
  6277                           
  6278                           ; Switch size 1, requested type "space"
  6279                           ; Number of cases is 2, Range of values is 33 to 59
  6280                           ; switch strategies available:
  6281                           ; Name         Instructions Cycles
  6282                           ; simple_byte            7     4 (average)
  6283                           ;	Chosen strategy is simple_byte
  6284  000A0E  0A21               	xorlw	33	; case 33
  6285  000A10  B4D8               	btfsc	status,2,c
  6286  000A12  D004               	goto	l370
  6287  000A14  0A1A               	xorlw	26	; case 59
  6288  000A16  B4D8               	btfsc	status,2,c
  6289  000A18  D7A1               	goto	l371
  6290  000A1A  D7A9               	goto	l373
  6291  000A1C                     l370:
  6292                           
  6293                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  6294  000A1C  EE20 F029          	lfsr	2,41
  6295  000A20  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6296  000A22  26D9               	addwf	fsr2l,f,c
  6297  000A24  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6298  000A26  22DA               	addwfc	fsr2h,f,c
  6299  000A28  2ADF               	incf	indf2,f,c
  6300  000A2A                     l366:
  6301  000A2A                     l3106:
  6302  000A2A  EE20 F029          	lfsr	2,41
  6303  000A2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6304  000A30  26D9               	addwf	fsr2l,f,c
  6305  000A32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6306  000A34  22DA               	addwfc	fsr2h,f,c
  6307  000A36  50DF               	movf	indf2,w,c
  6308  000A38  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6309  000A3A  501D               	movf	??_process_data_parameterize,w,c
  6310  000A3C  0D01               	mullw	1
  6311  000A3E  50F3               	movf	prodl,w,c
  6312  000A40  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6313  000A42  6ED9               	movwf	fsr2l,c
  6314  000A44  50F4               	movf	prodh,w,c
  6315  000A46  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6316  000A48  6EDA               	movwf	fsr2h,c
  6317  000A4A  0E2A               	movlw	42
  6318  000A4C  18DE               	xorwf	postinc2,w,c
  6319  000A4E  B4D8               	btfsc	status,2,c
  6320  000A50  0012               	return	
  6321  000A52  EE20 F029          	lfsr	2,41
  6322  000A56  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6323  000A58  26D9               	addwf	fsr2l,f,c
  6324  000A5A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6325  000A5C  22DA               	addwfc	fsr2h,f,c
  6326  000A5E  0E28               	movlw	40
  6327  000A60  60DF               	cpfslt	indf2,c
  6328  000A62  0012               	return	
  6329  000A64  EE20 F028          	lfsr	2,40
  6330  000A68  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6331  000A6A  26D9               	addwf	fsr2l,f,c
  6332  000A6C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6333  000A6E  22DA               	addwfc	fsr2h,f,c
  6334  000A70  EE10 F029          	lfsr	1,41
  6335  000A74  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6336  000A76  26E1               	addwf	fsr1l,f,c
  6337  000A78  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6338  000A7A  22E2               	addwfc	fsr1h,f,c
  6339  000A7C  50DE               	movf	postinc2,w,c
  6340  000A7E  18E6               	xorwf	postinc1,w,c
  6341  000A80  B4D8               	btfsc	status,2,c
  6342  000A82  0012               	return	
  6343  000A84  D7B3               	goto	l368
  6344  000A86                     __end_of_process_data_parameterize:
  6345                           	opt stack 0
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           intcon2	equ	0xFF1
  6354                           intcon3	equ	0xFF0
  6355                           postinc0	equ	0xFEE
  6356                           wreg	equ	0xFE8
  6357                           indf1	equ	0xFE7
  6358                           postinc1	equ	0xFE6
  6359                           postdec1	equ	0xFE5
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function ___wmul *****************
  6370 ;; Defined at:
  6371 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  multiplier      2   18[COMRAM] unsigned int 
  6374 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  product         2   22[COMRAM] unsigned int 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  2   18[COMRAM] unsigned int 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0, prodl, prodh
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6386 ;;      Params:         4       0       0       0       0       0       0
  6387 ;;      Locals:         2       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0
  6389 ;;      Totals:         6       0       0       0       0       0       0
  6390 ;;Total ram usage:        6 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_powerCalculation
  6397 ;;		_process_data_parameterize
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text39
  6402  001918                     __ptext39:
  6403                           	opt stack 0
  6404  001918                     ___wmul:
  6405                           	opt stack 28
  6406                           
  6407                           ;incstack = 0
  6408  001918  5013               	movf	___wmul@multiplier,w,c
  6409  00191A  0215               	mulwf	___wmul@multiplicand,c
  6410  00191C  CFF3 F017          	movff	prodl,___wmul@product
  6411  001920  CFF4 F018          	movff	prodh,___wmul@product+1
  6412  001924  5013               	movf	___wmul@multiplier,w,c
  6413  001926  0216               	mulwf	___wmul@multiplicand+1,c
  6414  001928  50F3               	movf	prodl,w,c
  6415  00192A  2618               	addwf	___wmul@product+1,f,c
  6416  00192C  5014               	movf	___wmul@multiplier+1,w,c
  6417  00192E  0215               	mulwf	___wmul@multiplicand,c
  6418  001930  50F3               	movf	prodl,w,c
  6419  001932  2618               	addwf	___wmul@product+1,f,c
  6420  001934  C017  F013         	movff	___wmul@product,?___wmul
  6421  001938  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6422  00193C  0012               	return	
  6423  00193E                     __end_of___wmul:
  6424                           	opt stack 0
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           intcon	equ	0xFF2
  6432                           intcon2	equ	0xFF1
  6433                           intcon3	equ	0xFF0
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           indf1	equ	0xFE7
  6437                           postinc1	equ	0xFE6
  6438                           postdec1	equ	0xFE5
  6439                           fsr1h	equ	0xFE2
  6440                           fsr1l	equ	0xFE1
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           fsr2h	equ	0xFDA
  6445                           fsr2l	equ	0xFD9
  6446                           status	equ	0xFD8
  6447                           
  6448 ;; *************** function _SPISlaveInit *****************
  6449 ;; Defined at:
  6450 ;;		line 669 in file "SlaveComm_PIC18.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6464 ;;      Params:         0       0       0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0
  6467 ;;      Totals:         0       0       0       0       0       0       0
  6468 ;;Total ram usage:        0 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_communications
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text40
  6479  001706                     __ptext40:
  6480                           	opt stack 0
  6481  001706                     _SPISlaveInit:
  6482                           	opt stack 28
  6483                           
  6484                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  6485                           
  6486                           ;incstack = 0
  6487  001706  9092               	bcf	3986,0,c	;volatile
  6488                           
  6489                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  6490  001708  8292               	bsf	3986,1,c	;volatile
  6491                           
  6492                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  6493  00170A  9694               	bcf	3988,3,c	;volatile
  6494                           
  6495                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  6496  00170C  9A94               	bcf	3988,5,c	;volatile
  6497                           
  6498                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  6499  00170E  9C94               	bcf	3988,6,c	;volatile
  6500                           
  6501                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  6502  001710  9E94               	bcf	3988,7,c	;volatile
  6503                           
  6504                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  6505  001712  010F               	movlb	15	; () banked
  6506  001714  9338               	bcf	56,1,b	;volatile
  6507                           
  6508                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6509  001716  8C8B               	bsf	3979,6,c	;volatile
  6510                           
  6511                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6512  001718  868B               	bsf	3979,3,c	;volatile
  6513                           
  6514                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6515  00171A  8A8B               	bsf	3979,5,c	;volatile
  6516                           
  6517                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6518  00171C  8E8B               	bsf	3979,7,c	;volatile
  6519                           
  6520                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6521  00171E  9A6C               	bcf	3948,5,c	;volatile
  6522                           
  6523                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6524  001720  010F               	movlb	15	; () banked
  6525  001722  9139               	bcf	57,0,b	;volatile
  6526                           
  6527                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6528  001724  010F               	movlb	15	; () banked
  6529  001726  9339               	bcf	57,1,b	;volatile
  6530                           
  6531                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6532  001728  010F               	movlb	15	; () banked
  6533  00172A  9539               	bcf	57,2,b	;volatile
  6534                           
  6535                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6536  00172C  010F               	movlb	15	; () banked
  6537  00172E  9739               	bcf	57,3,b	;volatile
  6538                           
  6539                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6540  001730  8093               	bsf	3987,0,c	;volatile
  6541                           
  6542                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6543  001732  8293               	bsf	3987,1,c	;volatile
  6544                           
  6545                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6546  001734  8493               	bsf	3987,2,c	;volatile
  6547                           
  6548                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6549  001736  9693               	bcf	3987,3,c	;volatile
  6550                           
  6551                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6552  001738  9E6D               	bcf	3949,7,c	;volatile
  6553                           
  6554                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6555  00173A  8C6D               	bsf	3949,6,c	;volatile
  6556                           
  6557                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6558  00173C  9E6C               	bcf	3948,7,c	;volatile
  6559                           
  6560                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6561  00173E  9C6C               	bcf	3948,6,c	;volatile
  6562                           
  6563                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6564  001740  9A6C               	bcf	3948,5,c	;volatile
  6565                           
  6566                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6567  001742  886C               	bsf	3948,4,c	;volatile
  6568                           
  6569                           ; BSR set to: 15
  6570                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6571  001744  506C               	movf	3948,w,c	;volatile
  6572  001746  0BF0               	andlw	-16
  6573  001748  0904               	iorlw	4
  6574  00174A  6E6C               	movwf	3948,c	;volatile
  6575                           
  6576                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6577  00174C  0E00               	movlw	0
  6578  00174E  6E69               	movwf	3945,c	;volatile
  6579                           
  6580                           ; BSR set to: 15
  6581                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6582  001750  9869               	bcf	3945,4,c	;volatile
  6583                           
  6584                           ; BSR set to: 15
  6585                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6586  001752  8A6C               	bsf	3948,5,c	;volatile
  6587  001754  0012               	return	
  6588  001756                     __end_of_SPISlaveInit:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           prodh	equ	0xFF4
  6595                           prodl	equ	0xFF3
  6596                           intcon	equ	0xFF2
  6597                           intcon2	equ	0xFF1
  6598                           intcon3	equ	0xFF0
  6599                           postinc0	equ	0xFEE
  6600                           wreg	equ	0xFE8
  6601                           indf1	equ	0xFE7
  6602                           postinc1	equ	0xFE6
  6603                           postdec1	equ	0xFE5
  6604                           fsr1h	equ	0xFE2
  6605                           fsr1l	equ	0xFE1
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _Timer0_ISR *****************
  6614 ;; Defined at:
  6615 ;;		line 227 in file "Current_Sense_Main.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;		None
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6629 ;;      Params:         0       0       0       0       0       0       0
  6630 ;;      Locals:         0       0       0       0       0       0       0
  6631 ;;      Temps:         18       0       0       0       0       0       0
  6632 ;;      Totals:        18       0       0       0       0       0       0
  6633 ;;Total ram usage:       18 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		Interrupt level 2
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	intcode
  6643  000008                     __pintcode:
  6644                           	opt stack 0
  6645  000008                     _Timer0_ISR:
  6646                           	opt stack 23
  6647                           
  6648                           ; BSR set to: 15
  6649                           ;incstack = 0
  6650  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6651  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6652  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6653  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6654  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6655  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6656  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6657  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6658  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6659  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6660  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6661  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6662  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6663  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6664  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6665  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6666  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6667  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6668  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6669                           
  6670                           ;Current_Sense_Main.c: 230: INTCONbits.TMR0IF = 0;
  6671  000052  94F2               	bcf	intcon,2,c	;volatile
  6672                           
  6673                           ;Current_Sense_Main.c: 232: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6674  000054  0EFC               	movlw	252
  6675  000056  6ED7               	movwf	4055,c	;volatile
  6676                           
  6677                           ;Current_Sense_Main.c: 233: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6678  000058  0E18               	movlw	24
  6679  00005A  6ED6               	movwf	4054,c	;volatile
  6680                           
  6681                           ;Current_Sense_Main.c: 235: timerCountHF++;
  6682  00005C  0E01               	movlw	1
  6683  00005E  0100               	movlb	0	; () banked
  6684  000060  2784               	addwf	_timerCountHF& (0+255),f,b	;volatile
  6685  000062  0E00               	movlw	0
  6686  000064  2385               	addwfc	(_timerCountHF+1)& (0+255),f,b	;volatile
  6687  000066  2386               	addwfc	(_timerCountHF+2)& (0+255),f,b	;volatile
  6688  000068  2387               	addwfc	(_timerCountHF+3)& (0+255),f,b	;volatile
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;Current_Sense_Main.c: 236: timerCountLF++;
  6692  00006A  0E01               	movlw	1
  6693  00006C  0100               	movlb	0	; () banked
  6694  00006E  2780               	addwf	_timerCountLF& (0+255),f,b	;volatile
  6695  000070  0E00               	movlw	0
  6696  000072  2381               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  6697  000074  2382               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  6698  000076  2383               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  6699                           
  6700                           ;Current_Sense_Main.c: 237: dataAvailable = 1;
  6701  000078  0E01               	movlw	1
  6702  00007A  6E49               	movwf	_dataAvailable,c
  6703                           
  6704                           ; BSR set to: 0
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;Current_Sense_Main.c: 239: return;
  6708  00007C  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6709  000080  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6710  000084  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6711  000088  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6712  00008C  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6713  000090  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6714  000094  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6715  000098  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6716  00009C  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6717  0000A0  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6718  0000A4  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6719  0000A8  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6720  0000AC  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6721  0000B0  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6722  0000B4  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6723  0000B8  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6724  0000BC  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6725  0000C0  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6726  0000C4  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6727  0000C6  0011               	retfie		f
  6728  0000C8                     __end_of_Timer0_ISR:
  6729                           	opt stack 0
  6730                           pclatu	equ	0xFFB
  6731                           pclath	equ	0xFFA
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           intcon2	equ	0xFF1
  6740                           intcon3	equ	0xFF0
  6741                           postinc0	equ	0xFEE
  6742                           fsr0h	equ	0xFEA
  6743                           fsr0l	equ	0xFE9
  6744                           wreg	equ	0xFE8
  6745                           indf1	equ	0xFE7
  6746                           postinc1	equ	0xFE6
  6747                           postdec1	equ	0xFE5
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           pclatu	equ	0xFFB
  6757                           pclath	equ	0xFFA
  6758                           tblptru	equ	0xFF8
  6759                           tblptrh	equ	0xFF7
  6760                           tblptrl	equ	0xFF6
  6761                           tablat	equ	0xFF5
  6762                           prodh	equ	0xFF4
  6763                           prodl	equ	0xFF3
  6764                           intcon	equ	0xFF2
  6765                           intcon2	equ	0xFF1
  6766                           intcon3	equ	0xFF0
  6767                           postinc0	equ	0xFEE
  6768                           fsr0h	equ	0xFEA
  6769                           fsr0l	equ	0xFE9
  6770                           wreg	equ	0xFE8
  6771                           indf1	equ	0xFE7
  6772                           postinc1	equ	0xFE6
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           postinc2	equ	0xFDE
  6778                           postdec2	equ	0xFDD
  6779                           fsr2h	equ	0xFDA
  6780                           fsr2l	equ	0xFD9
  6781                           status	equ	0xFD8
  6782                           
  6783                           	psect	rparam
  6784  0000                     pclatu	equ	0xFFB
  6785                           pclath	equ	0xFFA
  6786                           tblptru	equ	0xFF8
  6787                           tblptrh	equ	0xFF7
  6788                           tblptrl	equ	0xFF6
  6789                           tablat	equ	0xFF5
  6790                           prodh	equ	0xFF4
  6791                           prodl	equ	0xFF3
  6792                           intcon	equ	0xFF2
  6793                           intcon2	equ	0xFF1
  6794                           intcon3	equ	0xFF0
  6795                           postinc0	equ	0xFEE
  6796                           fsr0h	equ	0xFEA
  6797                           fsr0l	equ	0xFE9
  6798                           wreg	equ	0xFE8
  6799                           indf1	equ	0xFE7
  6800                           postinc1	equ	0xFE6
  6801                           postdec1	equ	0xFE5
  6802                           fsr1h	equ	0xFE2
  6803                           fsr1l	equ	0xFE1
  6804                           indf2	equ	0xFDF
  6805                           postinc2	equ	0xFDE
  6806                           postdec2	equ	0xFDD
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811                           	psect	temp
  6812  00004D                     btemp:
  6813                           	opt stack 0
  6814  00004D                     	ds	1
  6815  0000                     int$flags	set	btemp
  6816  0000                     wtemp6	set	btemp+1
  6817                           pclatu	equ	0xFFB
  6818                           pclath	equ	0xFFA
  6819                           tblptru	equ	0xFF8
  6820                           tblptrh	equ	0xFF7
  6821                           tblptrl	equ	0xFF6
  6822                           tablat	equ	0xFF5
  6823                           prodh	equ	0xFF4
  6824                           prodl	equ	0xFF3
  6825                           intcon	equ	0xFF2
  6826                           intcon2	equ	0xFF1
  6827                           intcon3	equ	0xFF0
  6828                           postinc0	equ	0xFEE
  6829                           fsr0h	equ	0xFEA
  6830                           fsr0l	equ	0xFE9
  6831                           wreg	equ	0xFE8
  6832                           indf1	equ	0xFE7
  6833                           postinc1	equ	0xFE6
  6834                           postdec1	equ	0xFE5
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        6
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     17     115
    BANK1           256     51      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerCalculation->___awdiv
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   98759
                                             12 BANK0      5     5      0
                     _communications
                          _delayMS10
                   _energyPulseCheck
                               _init
                            _initMCP
                          _initTimer
                   _powerCalculation
                  _pulseFoutPassThru
                     _readSerialData
 ---------------------------------------------------------------------------------
 (1) _readSerialData                                       1     1      0      65
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerCalculation                                     9     9      0    1750
                                             26 COMRAM     9     9      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                _initInterruptsClear
                            _initMCP
                            _initOSC
                            _initSPI
 ---------------------------------------------------------------------------------
 (2) _initSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCP                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _energyPulseCheck                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     428
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   96343
                                             55 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   45863
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15906
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     598
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             51 COMRAM     4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47206
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15996
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2200
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1841
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _energyPulseCheck
   _init
     _initIO
     _initInterruptsClear
     _initMCP
     _initOSC
     _initSPI
   _initMCP
   _initTimer
   _powerCalculation
     ___awdiv
     ___wmul
   _pulseFoutPassThru
   _readSerialData

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      73       4       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C       9        0.0%
DATA                 0      0     11C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue May 01 11:30:14 2018

                                       _SPISlaveInit 1706                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                         __CFG_CP0$OFF 000000  
                                       __CFG_CP1$OFF 000000                                         __CFG_CP2$OFF 000000  
                                       __CFG_CP3$OFF 000000                                                  l210 0C6A  
                                                l211 0C4C                                                  l140 0F5A  
                                                l213 0CB2                                                  l151 1956  
                                                l135 0EC2                                                  l216 1852  
                                                l208 0C28                                                  l401 0880  
                                                l217 1840                                                  l137 0EF6  
                                                l403 08AC                                                  l323 119E  
                                                l405 08D8                                                  l341 1152  
                                                l333 11FA                                                  l325 11CE  
                                                l149 195A                                                  l342 111E  
                                                l166 152E                                                  l190 1270  
                                                l407 0902                                                  l335 120C  
                                                l327 11E2                                                  l352 0F8A  
                                                l344 112C                                                  l168 14FE  
                                                l192 1284                                                  l505 16C0  
                                                l345 113A                                                  l433 12D6  
                                                l329 11AE                                                  l169 14DE  
                                                l370 0A1C                                                  l506 16D4  
                                                l354 0FCE                                                  l346 1146  
                                                l186 1230                                                  l371 095C  
                                                l427 1488                                                  l443 0B02  
                                                l364 092A                                                  l428 144A  
                                                l444 0A98                                                  l460 18EE  
                                                l356 1028                                                  l436 1336  
                                                l188 125A                                                  l373 096E  
                                                l453 0B70                                                  l445 0ACC  
                                                l381 0684                                                  l357 103A  
                                                l366 0A2A                                                  l374 09C2  
                                                l390 07E2                                                  l455 0BA8  
                                                l447 0AFE                                                  l383 0708  
                                                l368 09EC                                                  l392 079E  
                                                l464 199C                                                  l459 18EA  
                                                l397 0828                                                  l662 0E48  
                                                l663 0DF4                                                  l399 0854  
                                                l665 0E8C                                                  l682 139C  
                                                l659 0DEA                                                  l683 13A6  
                                                l675 134E                                                  l916 0CC4  
                                                l684 13B4                                                  l676 135E  
                                                l837 19BA                                                  l918 0D1C  
                                                l678 137C                                                  l863 13EC  
                                                l919 0D86                                                  l679 1374  
                                                l864 13E0                                                  l873 15BC  
                                                l874 15B0                                                  l867 1420  
                                                l868 142E                                                  l877 15E4  
                                                l878 15F2                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                            powerCalculation@counter 0092                                                 l3106 0A2A  
                                               l3462 14DE                                                 l3550 0EAC  
                                               l3562 0EE6                                                 l3568 0EF6  
                                               l3588 0F44                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2120 147E  
                                               u2130 14B4                                                 u3110 0EE6  
                                               u2127 1474                                                 u2160 13F0  
                                               u2137 14AA                                                 u2250 0B3A  
                                               u3130 0F30                                                 u2190 15C0  
                                               u2370 18C2                                                 u2460 0928  
                                               u2380 18C4                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 u3167 1846  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               u3177 10E4                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u2840 1380  
                                               u2990 121E                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                          readSerialData@readingData 0046                                                 _atol 0DAA  
                                               _main 0E9E                                                 _init 1A0C  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C8  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0039  
                                        _voltageData 003C                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 1178  
                                       main@inx_1350 00CD                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                    __end_of___awdiv 13BE                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1440                                      ___awdiv@divisor 0015  
                                    __end_of___llmod 1604                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                    ___awdiv@counter 0017                                         main@initDone 00CA  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 1756                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0031                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initMCP 1A4A  
                                    __end_of_initOSC 1A0C                                      __end_of_initSPI 19DC  
                                    __end_of_isdigit 19C2                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0CB4  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0BB2                                       __CFG_HFOFST$ON 000000  
                          __size_of_powerCalculation 0102                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 002D  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001D  
                                    __initialization 1534                                         __end_of_atol 0E9E  
                                       __end_of_main 0F7E                                         __end_of_init 1A22  
                             __end_of_communications 1212                               _com_command_setVersion 18F2  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 18CA  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 003A                                               ??_init 0013  
                                      _SPI_send_data 1984                                        __activetblptr 000002  
                            _process_data_parameters 0660                         powerCalculation@instantPower 0060  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                   ___awdiv@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 16B0  
                                             ___wmul 1918                                            ??___awdiv 0017  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                           __end_of_energyPulseCheck 1534                                               _initIO 1962  
                                             clear_0 1572                                               clear_1 157E  
                                             clear_2 158A                                     ___awdiv@quotient 0019  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 002D  
                                          ??_initMCP 0013                                            ??_initOSC 0013  
                                          ??_initSPI 0013                            _process_data_parameterize 0906  
                                       __pdataCOMRAM 004B                                            ??_isdigit 0013  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 00BE  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 18CA                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 1590  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1A4A                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0DAA  
                          ??_process_data_parameters 0033                         communications@receive_buffer 0133  
                              _powerCalculation$2940 001C                                _powerCalculation$2941 001E  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 14BC  
                         _command_builder_add_string 1440                                              ??_ultoa 0028  
                                         __pbssBANK0 0060                                           __pbssBANK1 0133  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                   _powerCalculation 0BB2                                         strcmp2@match 001A  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                    _pulseFoutPassThru 193E  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 0013                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 0033  
         communications@end_of_transmission_received 0041                                       ___lmul@product 001B  
                        __end_of_resetCommunications 1178                                      _meterEnergyUsed 0088  
                                ??_pulseFoutPassThru 0013                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 17EC  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1A22  
                                            _SSP1BUF 000FC9                                              _SSP2BUF 000F6F  
                            __size_of_readSerialData 0098                             _command_builder_add_char 165A  
                                  __end_of_delayMS10 1868                      __end_of_process_data_parameters 0906  
                           __end_of_SPI_receive_data 18F2                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E                            __end_of_pulseFoutPassThru 1962  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0027  
                                            __Lparam 0000                                              ___awdiv 133A  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 13BE                                      __size_of___wmul 0026  
                                            ___llmod 159E                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0022  
                                            __pcinit 1534                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0E9E  
                                            __ptext1 1212                                              __ptext2 193E  
                                            __ptext3 0BB2                                              __ptext4 133A  
                                            __ptext5 19DC                                              __ptext6 1A0C  
                                            __ptext7 19C2                                              __ptext8 19F4  
                                            __ptext9 1A38                                           _meterWatts 008C  
                                          _T0CONbits 000FD5                                              _initMCP 1A38  
                                            _initOSC 19F4                                    __end_of_initTimer 19F4  
                                            _initSPI 19C2                                              _isdigit 19A4  
                energyPulseCheck@meterEnergyUsedPart 007C                                  __size_of_Timer0_ISR 00C0  
                                            main@inx 00CB                                              _strcmp2 0A86  
                                      _dataAvailable 0049                                 end_of_initialization 1590  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 133A  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 1918  
                                   ??_communications 0038                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postdec2 000FDD  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                    ?_energyPulseCheck 0001  
                              receive_data@my_status 003E                                 __end_of_receive_data 103E  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                                 ??_energyPulseCheck 0013                      communications@last_state_active 003F  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 0034  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 0034  
                        __end_of_initInterruptsClear 17A2                    __end_of_process_data_parameterize 0A86  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 17A2  
                communications@receive_current_state 0040                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1706                                       __end_of___wmul 193E  
                                      __pidataCOMRAM 1A4E                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 1984                                       ??_process_data 0038  
                           __end_of_powerCalculation 0CB4                          ?_command_builder_add_string 0017  
                                start_initialization 1534                                       _readSerialData 1212  
                       resetCommunications@commState 0090                                     _command_builder1 1604  
                                   _command_builder3 103E                            _com_command_setEnergyUsed 17EC  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0027                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 002D  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0023  
                                  powerCalculation@i 0022                                          __pdataBANK0 00CF  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0025  
                       energyPulseCheck@mcpLFoutLast 0047                           ??_command_builder_add_char 0016  
                             __end_of_readSerialData 12AA                                          __pbssCOMRAM 003A  
                                      __pcstackBANK0 00BE                                        __pcstackBANK1 0100  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00C8  
                                       _isdigit$2582 0014                                       delayMS10@count 0013  
                                  ?_SPI_receive_data 0013                                            _delayMS10 1836  
                      com_command_setEnergyUsed@temp 00BE                                   ??_SPI_receive_data 0015  
                                       delayMS10@inx 0016                                command_builder1@data1 0021  
                        command_builder1@send_buffer 001F                             ?_process_data_parameters 002F  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 0021                                command_builder3@data2 0023  
                              command_builder3@data3 0025                                             ?___awdiv 0013  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 19A4                        powerCalculation@voltageScalar 00D1  
                                           ?_initMCP 0001                                             ?_initOSC 0001  
                                           ?_initSPI 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 002F                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                      ?_readSerialData 0001  
                                  send_data@send_end 0019                                            _initTimer 19DC  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009C  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                             pulseFoutPassThru@runonce 0048  
                                       _receive_data 0F7E                                       ___wmul@product 0017  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 189A                                            _send_data 12AA  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 002F  
                                           _PIR1bits 000F9E                        powerCalculation@currentScalar 00CF  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                          powerCalculation@realPower 0020                                           ?_initTimer 0001  
                                  ___lmul@multiplier 0013                                 __end_of_SPISlaveInit 1756  
                          __size_of_energyPulseCheck 0078                                            copy_data0 1548  
           process_data@end_of_transmission_received 0132                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                                   readSerialData@data 0013  
                 __size_of_com_command_setEnergyUsed 004A                                     __size_of___awdiv 0084  
                   __end_of_send_end_of_transmission 1A38                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 16B0  
                           __end_of_command_builder1 165A                             __end_of_command_builder3 10DC  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                        _currentData 003A                                    ?_powerCalculation 0001  
                                           _dataRead 004A                                     __size_of_initMCP 0012  
                                   __size_of_initOSC 0018                                     __size_of_initSPI 001A  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                   ??_powerCalculation 001B  
                                           __ptext10 1756                                             __ptext11 1962  
                                           __ptext20 0F7E                                             __ptext12 14BC  
                                           __ptext21 18CA                                             __ptext13 1836  
                                           __ptext30 159E                                             __ptext22 1868  
                                           __ptext14 1178                                             __ptext31 13BE  
                                           __ptext23 0660                                             __ptext15 12AA  
                                           __ptext40 1706                                             __ptext32 103E  
                                           __ptext24 189A                                             __ptext16 1984  
                                           __ptext33 1440                                             __ptext25 0A86  
                                           __ptext17 10DC                                             __ptext34 165A  
                                           __ptext26 1A22                                             __ptext18 18F2  
                                           __ptext35 0DAA                                             __ptext27 1604  
                                           __ptext19 17A2                                             __ptext36 19A4  
                                           __ptext28 17EC                                             __ptext37 16B0  
                                           __ptext29 0CB4                                             __ptext38 0906  
                                           __ptext39 1918                                         _SSP1CON1bits 000FC6  
                            readSerialData@byte1Read 0045                              readSerialData@byte2Read 0044  
                                       _SSP2CON1bits 000F6C                              readSerialData@byte3Read 0043  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                        __size_of_atol 00F4  
                                      __size_of_main 00E0                                        strmatch@match 0024  
                                      __size_of_init 0016                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                                           int$flags 004D                                             atol@sign 0027  
                                       _SSP1STATbits 000FC7                                 powerCalculation@size 004B  
                  __end_of_com_command_setEnergyUsed 1836                              __size_of_communications 009A  
                                           _strmatch 189A                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 0036                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0032  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0084                                         _timerCountLF 0080  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 0038  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 10DC                                     ??_readSerialData 0013  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 1868                                    _SPI_transmit_wait 0042  
                              __size_of_SPISlaveInit 0050                            communications@send_buffer 0094  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                                   _energyPulseCheck 14BC                                 ?_resetCommunications 002F  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0023  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013  
