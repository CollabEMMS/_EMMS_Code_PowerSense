

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May 15 20:32:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.41
    56                           ; Generated 25/01/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18LF25K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _ANSELBbits	set	3897
    90  0000                     _ANSELAbits	set	3896
    91  0000                     _ANSELC	set	3898
    92  0000                     _ANSELB	set	3897
    93  0000                     _ANSELA	set	3896
    94  0000                     _SSP2CON3bits	set	3945
    95  0000                     _SSP2CON3	set	3945
    96  0000                     _SSP2BUF	set	3951
    97  0000                     _SSP2STATbits	set	3949
    98  0000                     _SSP2CON1bits	set	3948
    99  0000                     _LATCbits	set	3979
   100  0000                     _T0CONbits	set	4053
   101  0000                     _IPR5	set	3967
   102  0000                     _IPR4	set	3964
   103  0000                     _IPR3	set	4005
   104  0000                     _IPR2	set	4002
   105  0000                     _IPR1	set	3999
   106  0000                     _PIE5	set	3965
   107  0000                     _PIE4	set	3962
   108  0000                     _PIE3	set	4003
   109  0000                     _PIE2	set	4000
   110  0000                     _PIE1	set	3997
   111  0000                     _PIR5	set	3966
   112  0000                     _PIR4	set	3963
   113  0000                     _PIR3	set	4004
   114  0000                     _PIR2	set	4001
   115  0000                     _PIR1	set	3998
   116  0000                     _RCONbits	set	4048
   117  0000                     _INTCON3	set	4080
   118  0000                     _INTCON2	set	4081
   119  0000                     _INTCON	set	4082
   120  0000                     _TRISAbits	set	3986
   121  0000                     _TRISCbits	set	3988
   122  0000                     _TRISBbits	set	3987
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _OSCTUNEbits	set	3995
   125  0000                     _OSCCON2bits	set	4050
   126  0000                     _OSCCONbits	set	4051
   127  0000                     _PORTCbits	set	3970
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR0H	set	4055
   130  0000                     _INTCONbits	set	4082
   131  0000                     _PORTBbits	set	3969
   132  0000                     _LATAbits	set	3977
   133  0000                     _PORTAbits	set	3968
   134  0000                     _LATBbits	set	3978
   135                           
   136                           	psect	smallconst
   137  000600                     __psmallconst:
   138                           	opt stack 0
   139  000600  00                 	db	0
   140  000601                     STR_3:
   141  000601  43                 	db	67	;'C'
   142  000602  61                 	db	97	;'a'
   143  000603  6C                 	db	108	;'l'
   144  000604  69                 	db	105	;'i'
   145  000605  62                 	db	98	;'b'
   146  000606  72                 	db	114	;'r'
   147  000607  61                 	db	97	;'a'
   148  000608  74                 	db	116	;'t'
   149  000609  69                 	db	105	;'i'
   150  00060A  6F                 	db	111	;'o'
   151  00060B  6E                 	db	110	;'n'
   152  00060C  00                 	db	0
   153  00060D                     STR_22:
   154  00060D  50                 	db	80	;'P'
   155  00060E  53                 	db	83	;'S'
   156  00060F  56                 	db	86	;'V'
   157  000610  65                 	db	101	;'e'
   158  000611  72                 	db	114	;'r'
   159  000612  73                 	db	115	;'s'
   160  000613  69                 	db	105	;'i'
   161  000614  6F                 	db	111	;'o'
   162  000615  6E                 	db	110	;'n'
   163  000616  00                 	db	0
   164  000617                     STR_4:
   165  000617  45                 	db	69	;'E'
   166  000618  6E                 	db	110	;'n'
   167  000619  55                 	db	85	;'U'
   168  00061A  73                 	db	115	;'s'
   169  00061B  65                 	db	101	;'e'
   170  00061C  64                 	db	100	;'d'
   171  00061D  00                 	db	0
   172  00061E                     STR_20:
   173  00061E  56                 	db	86	;'V'
   174  00061F  6F                 	db	111	;'o'
   175  000620  6C                 	db	108	;'l'
   176  000621  74                 	db	116	;'t'
   177  000622  73                 	db	115	;'s'
   178  000623  00                 	db	0
   179  000624                     STR_18:
   180  000624  57                 	db	87	;'W'
   181  000625  61                 	db	97	;'a'
   182  000626  74                 	db	116	;'t'
   183  000627  74                 	db	116	;'t'
   184  000628  73                 	db	115	;'s'
   185  000629  00                 	db	0
   186  00062A                     STR_7:
   187  00062A  4C                 	db	76	;'L'
   188  00062B  45                 	db	69	;'E'
   189  00062C  44                 	db	68	;'D'
   190  00062D  42                 	db	66	;'B'
   191  00062E  00                 	db	0
   192  00062F                     STR_6:
   193  00062F  44                 	db	68	;'D'
   194  000630  61                 	db	97	;'a'
   195  000631  74                 	db	116	;'t'
   196  000632  61                 	db	97	;'a'
   197  000633  00                 	db	0
   198  000634                     STR_5:
   199  000634  52                 	db	82	;'R'
   200  000635  65                 	db	101	;'e'
   201  000636  61                 	db	97	;'a'
   202  000637  64                 	db	100	;'d'
   203  000638  00                 	db	0
   204  000639                     STR_16:
   205  000639  43                 	db	67	;'C'
   206  00063A  6F                 	db	111	;'o'
   207  00063B  6E                 	db	110	;'n'
   208  00063C  66                 	db	102	;'f'
   209  00063D  00                 	db	0
   210  00063E                     STR_21:
   211  00063E  41                 	db	65	;'A'
   212  00063F  6D                 	db	109	;'m'
   213  000640  70                 	db	112	;'p'
   214  000641  73                 	db	115	;'s'
   215  000642  00                 	db	0
   216  000643  32                 	db	50	;'2'
   217  000644  32                 	db	50	;'2'
   218  000645  32                 	db	50	;'2'
   219  000646  00                 	db	0
   220  000647  33                 	db	51	;'3'
   221  000648  33                 	db	51	;'3'
   222  000649  33                 	db	51	;'3'
   223  00064A  00                 	db	0
   224  00064B                     STR_40:
   225  00064B  34                 	db	52	;'4'
   226  00064C  34                 	db	52	;'4'
   227  00064D  34                 	db	52	;'4'
   228  00064E  00                 	db	0
   229  00064F                     STR_1:
   230  00064F  45                 	db	69	;'E'
   231  000650  4E                 	db	78	;'N'
   232  000651  44                 	db	68	;'D'
   233  000652  00                 	db	0
   234  000653                     STR_11:
   235  000653  4F                 	db	79	;'O'
   236  000654  66                 	db	102	;'f'
   237  000655  66                 	db	102	;'f'
   238  000656  00                 	db	0
   239  000657                     STR_2:
   240  000657  53                 	db	83	;'S'
   241  000658  65                 	db	101	;'e'
   242  000659  74                 	db	116	;'t'
   243  00065A  00                 	db	0
   244  00065B                     STR_8:
   245  00065B  4F                 	db	79	;'O'
   246  00065C  6E                 	db	110	;'n'
   247  00065D  00                 	db	0
   248  0000                     
   249                           ; #config settings
   250  00065E  00                 	db	0	; dummy byte at the end
   251  0000                     
   252                           	psect	cinit
   253  001822                     __pcinit:
   254                           	opt stack 0
   255  001822                     start_initialization:
   256                           	opt stack 0
   257  001822                     __initialization:
   258                           	opt stack 0
   259                           
   260                           ; Clear objects allocated to BANK0 (84 bytes)
   261  001822  EE00  F060         	lfsr	0,__pbssBANK0
   262  001826  0E54               	movlw	84
   263  001828                     clear_0:
   264  001828  6AEE               	clrf	postinc0,c
   265  00182A  06E8               	decf	wreg,f,c
   266  00182C  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to COMRAM (24 bytes)
   269  00182E  EE00  F039         	lfsr	0,__pbssCOMRAM
   270  001832  0E18               	movlw	24
   271  001834                     clear_1:
   272  001834  6AEE               	clrf	postinc0,c
   273  001836  06E8               	decf	wreg,f,c
   274  001838  E1FD               	bnz	clear_1
   275  00183A                     end_of_initialization:
   276                           	opt stack 0
   277  00183A                     __end_of__initialization:
   278                           	opt stack 0
   279  00183A  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  00183C  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  00183E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   282  001840  6EF8               	movwf	tblptru,c
   283  001842  0100               	movlb	0
   284  001844  EF47  F00A         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	bssCOMRAM
   290  000039                     __pbssCOMRAM:
   291                           	opt stack 0
   292  000039                     _meterEnergyUsed:
   293                           	opt stack 0
   294  000039                     	ds	4
   295  00003D                     resetCommunications@commState:
   296                           	opt stack 0
   297  00003D                     	ds	2
   298  00003F                     _meterWatts:
   299                           	opt stack 0
   300  00003F                     	ds	2
   301  000041                     receive_data@my_status:
   302                           	opt stack 0
   303  000041                     	ds	1
   304  000042                     communications@last_state_active:
   305                           	opt stack 0
   306  000042                     	ds	1
   307  000043                     communications@receive_current_state:
   308                           	opt stack 0
   309  000043                     	ds	1
   310  000044                     communications@end_of_transmission_received:
   311                           	opt stack 0
   312  000044                     	ds	1
   313  000045                     _SPI_transmit_wait:
   314                           	opt stack 0
   315  000045                     	ds	1
   316  000046                     powerPulseCheck@mcpLFoutLast:
   317                           	opt stack 0
   318  000046                     	ds	1
   319  000047                     powerPulseCheck@mcpHFoutLast:
   320                           	opt stack 0
   321  000047                     	ds	1
   322  000048                     pulseFoutPassThru@runonce:
   323                           	opt stack 0
   324  000048                     	ds	1
   325  000049                     _timerCountLF:
   326                           	opt stack 0
   327  000049                     	ds	4
   328  00004D                     _timerCountHF:
   329                           	opt stack 0
   330  00004D                     	ds	4
   331                           tblptru	equ	0xFF8
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	bssBANK0
   336  000060                     __pbssBANK0:
   337                           	opt stack 0
   338  000060                     communications@send_buffer:
   339                           	opt stack 0
   340  000060                     	ds	42
   341  00008A                     communications@receive_buffer:
   342                           	opt stack 0
   343  00008A                     	ds	42
   344                           tblptru	equ	0xFF8
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	cstackBANK0
   349  0000B4                     __pcstackBANK0:
   350                           	opt stack 0
   351  0000B4                     ??_resetCommunications:
   352  0000B4                     process_data_parameters@parameters:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x0
   356  0000B4                     	ds	2
   357  0000B6                     process_data_parameters@send_buffer:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  0000B6                     	ds	2
   362  0000B8                     process_data@receive_buffer:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366  0000B8                     	ds	2
   367  0000BA                     process_data@send_buffer:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371  0000BA                     	ds	2
   372  0000BC                     process_data@parameters:
   373                           	opt stack 0
   374                           
   375                           ; 50 bytes @ 0x8
   376  0000BC                     	ds	50
   377  0000EE                     process_data@end_of_transmission_received:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x3A
   381  0000EE                     	ds	1
   382  0000EF                     communications@no_more_to_send:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3B
   386  0000EF                     	ds	1
   387  0000F0                     communications@firstTime:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x3C
   391  0000F0                     	ds	1
   392  0000F1                     main@inx:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x3D
   396  0000F1                     	ds	2
   397                           tblptru	equ	0xFF8
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           
   401                           	psect	cstackCOMRAM
   402  000001                     __pcstackCOMRAM:
   403                           	opt stack 0
   404  000001                     ??_Timer0_ISR:
   405                           
   406                           ; 1 bytes @ 0x0
   407  000001                     	ds	14
   408  00000F                     ??_isdigit:
   409  00000F                     ?_strcmp2:
   410                           	opt stack 0
   411  00000F                     ?___wmul:
   412                           	opt stack 0
   413  00000F                     ?___lwdiv:
   414                           	opt stack 0
   415  00000F                     ?___lwmod:
   416                           	opt stack 0
   417  00000F                     ?___lmul:
   418                           	opt stack 0
   419  00000F                     ?___lldiv:
   420                           	opt stack 0
   421  00000F                     ?___llmod:
   422                           	opt stack 0
   423  00000F                     SPI_send_data@data:
   424                           	opt stack 0
   425  00000F                     delayMS10@count:
   426                           	opt stack 0
   427  00000F                     command_builder_add_char@send_buffer:
   428                           	opt stack 0
   429  00000F                     strcmp2@a:
   430                           	opt stack 0
   431  00000F                     SPI_receive_data@data:
   432                           	opt stack 0
   433  00000F                     ___wmul@multiplier:
   434                           	opt stack 0
   435  00000F                     ___lwdiv@dividend:
   436                           	opt stack 0
   437  00000F                     ___lwmod@dividend:
   438                           	opt stack 0
   439  00000F                     ___lmul@multiplier:
   440                           	opt stack 0
   441  00000F                     ___lldiv@dividend:
   442                           	opt stack 0
   443  00000F                     ___llmod@dividend:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0xE
   447  00000F                     	ds	1
   448  000010                     SPI_send_data@sendGood:
   449                           	opt stack 0
   450  000010                     _isdigit$2277:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0xF
   454  000010                     	ds	1
   455  000011                     ??_delayMS10:
   456  000011                     command_builder_add_char@data:
   457                           	opt stack 0
   458  000011                     SPI_receive_data@recvGood:
   459                           	opt stack 0
   460  000011                     isdigit@c:
   461                           	opt stack 0
   462  000011                     send_data@send_buffer:
   463                           	opt stack 0
   464  000011                     strcmp2@b:
   465                           	opt stack 0
   466  000011                     ___wmul@multiplicand:
   467                           	opt stack 0
   468  000011                     ___lwdiv@divisor:
   469                           	opt stack 0
   470  000011                     ___lwmod@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x10
   474  000011                     	ds	1
   475  000012                     ??_command_builder_add_char:
   476  000012                     delayMS10@inx:
   477                           	opt stack 0
   478  000012                     receive_data@receive_buffer:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x11
   482  000012                     	ds	1
   483  000013                     ??_send_data:
   484  000013                     ??_strcmp2:
   485  000013                     ___lwdiv@counter:
   486                           	opt stack 0
   487  000013                     ___lwmod@counter:
   488                           	opt stack 0
   489  000013                     command_builder_add_string@send_buffer:
   490                           	opt stack 0
   491  000013                     ___wmul@product:
   492                           	opt stack 0
   493  000013                     ___lmul@multiplicand:
   494                           	opt stack 0
   495  000013                     ___lldiv@divisor:
   496                           	opt stack 0
   497  000013                     ___llmod@divisor:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x12
   501  000013                     	ds	1
   502  000014                     ??_initMCPFout:
   503  000014                     ??_receive_data:
   504  000014                     ___lwdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x13
   508  000014                     	ds	1
   509  000015                     receive_data@data:
   510                           	opt stack 0
   511  000015                     send_data@send_end:
   512                           	opt stack 0
   513  000015                     process_data_parameterize@parameters:
   514                           	opt stack 0
   515  000015                     command_builder_add_string@data_string:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x14
   519  000015                     	ds	1
   520  000016                     strcmp2@match:
   521                           	opt stack 0
   522  000016                     utoa@buf:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000016                     	ds	1
   527  000017                     ??_command_builder_add_string:
   528  000017                     ___llmod@counter:
   529                           	opt stack 0
   530  000017                     process_data_parameterize@buffer_to_parameterize:
   531                           	opt stack 0
   532  000017                     ___lmul@product:
   533                           	opt stack 0
   534  000017                     ___lldiv@quotient:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x16
   538  000017                     	ds	1
   539  000018                     strcmp2@inx:
   540                           	opt stack 0
   541  000018                     utoa@val:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x17
   545  000018                     	ds	1
   546  000019                     ??_process_data_parameterize:
   547  000019                     command_builder_add_string@inx:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x18
   551  000019                     	ds	1
   552  00001A                     strmatch@a:
   553                           	opt stack 0
   554  00001A                     utoa@base:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x19
   558  00001A                     	ds	1
   559  00001B                     ?_atol:
   560                           	opt stack 0
   561  00001B                     ___lldiv@counter:
   562                           	opt stack 0
   563  00001B                     command_builder1@send_buffer:
   564                           	opt stack 0
   565  00001B                     command_builder3@send_buffer:
   566                           	opt stack 0
   567  00001B                     atol@s:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x1A
   571  00001B                     	ds	1
   572  00001C                     powerPulseCheck@meterWattsLF:
   573                           	opt stack 0
   574  00001C                     process_data_parameterize@inx:
   575                           	opt stack 0
   576  00001C                     strmatch@b:
   577                           	opt stack 0
   578  00001C                     utoa@v:
   579                           	opt stack 0
   580  00001C                     ultoa@buf:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1B
   584  00001C                     	ds	1
   585  00001D                     command_builder1@data1:
   586                           	opt stack 0
   587  00001D                     command_builder3@data1:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x1C
   591  00001D                     	ds	1
   592  00001E                     powerPulseCheck@checkWattsHFvsLF:
   593                           	opt stack 0
   594  00001E                     process_data_parameterize@parameter_index:
   595                           	opt stack 0
   596  00001E                     utoa@c:
   597                           	opt stack 0
   598  00001E                     strmatch@result:
   599                           	opt stack 0
   600  00001E                     ultoa@val:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0x1D
   604  00001E                     	ds	1
   605  00001F                     ??_atol:
   606  00001F                     process_data_parameterize@parameter_position:
   607                           	opt stack 0
   608  00001F                     powerPulseCheck@meterWattsHF:
   609                           	opt stack 0
   610  00001F                     command_builder3@data2:
   611                           	opt stack 0
   612  00001F                     send_end_of_transmission@send_buffer:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x1E
   616  00001F                     	ds	1
   617  000020                     strmatch@match:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x1F
   621  000020                     	ds	1
   622  000021                     command_builder3@data3:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x20
   626  000021                     	ds	1
   627  000022                     ultoa@base:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x21
   631  000022                     	ds	1
   632  000023                     atol@sign:
   633                           	opt stack 0
   634  000023                     com_command_setPower@send_buffer:
   635                           	opt stack 0
   636  000023                     com_command_setVersion@send_buffer:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x22
   640  000023                     	ds	1
   641  000024                     atol@a:
   642                           	opt stack 0
   643  000024                     ultoa@v:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x23
   647  000024                     	ds	1
   648  000025                     com_command_setPower@temp:
   649                           	opt stack 0
   650                           
   651                           ; 7 bytes @ 0x24
   652  000025                     	ds	3
   653  000028                     atol@c:
   654                           	opt stack 0
   655  000028                     ultoa@c:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x27
   659  000028                     	ds	1
   660  000029                     com_command_setEnergyUsed@send_buffer:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x28
   664  000029                     	ds	2
   665  00002B                     com_command_setEnergyUsed@temp:
   666                           	opt stack 0
   667                           
   668                           ; 12 bytes @ 0x2A
   669  00002B                     	ds	12
   670  000037                     process_data_parameters@end_of_transmission_received:
   671                           	opt stack 0
   672  000037                     resetCommunications@send_buffer:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x36
   676  000037                     	ds	1
   677  000038                     
   678                           ; 1 bytes @ 0x37
   679  000038                     	ds	1
   680  000039                     tblptru	equ	0xFF8
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           
   684                           ; 1 bytes @ 0x38
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 79 in file "Current_Sense_Main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  inx             2   61[BANK0 ] int 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   704 ;;      Params:         0       0       0       0       0       0       0
   705 ;;      Locals:         0       2       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0
   707 ;;      Totals:         0       2       0       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels required when called:    8
   710 ;; This function calls:
   711 ;;		_communications
   712 ;;		_delayMS10
   713 ;;		_init
   714 ;;		_initTimer
   715 ;;		_powerPulseCheck
   716 ;;		_pulseFoutPassThru
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text0
   723  00148E                     __ptext0:
   724                           	opt stack 0
   725  00148E                     _main:
   726                           	opt stack 23
   727                           
   728                           ;Current_Sense_Main.c: 81: init();
   729                           
   730                           ;incstack = 0
   731  00148E  ECAF  F00C         	call	_init	;wreg free
   732                           
   733                           ;Current_Sense_Main.c: 83: for (int inx = 0; inx < 10; inx++)
   734  001492  0E00               	movlw	0
   735  001494  0100               	movlb	0	; () banked
   736  001496  6FF2               	movwf	(main@inx+1)& (0+255),b
   737  001498  0E00               	movlw	0
   738  00149A  6FF1               	movwf	main@inx& (0+255),b
   739  00149C                     l3353:
   740                           
   741                           ; BSR set to: 0
   742  00149C  0100               	movlb	0	; () banked
   743  00149E  BFF2               	btfsc	(main@inx+1)& (0+255),7,b
   744  0014A0  D008               	goto	l109
   745  0014A2  0100               	movlb	0	; () banked
   746  0014A4  51F2               	movf	(main@inx+1)& (0+255),w,b
   747  0014A6  E117               	bnz	l3365
   748  0014A8  0E0A               	movlw	10
   749  0014AA  0100               	movlb	0	; () banked
   750  0014AC  5DF1               	subwf	main@inx& (0+255),w,b
   751  0014AE  B0D8               	btfsc	status,0,c
   752  0014B0  D012               	goto	l3365
   753  0014B2                     l109:
   754                           
   755                           ; BSR set to: 0
   756                           ;Current_Sense_Main.c: 84: {
   757                           ;Current_Sense_Main.c: 85: LATBbits.LATB4 = 1;
   758  0014B2  888A               	bsf	3978,4,c	;volatile
   759                           
   760                           ; BSR set to: 0
   761                           ;Current_Sense_Main.c: 86: delayMS10(10);
   762  0014B4  0E00               	movlw	0
   763  0014B6  6E10               	movwf	delayMS10@count+1,c
   764  0014B8  0E0A               	movlw	10
   765  0014BA  6E0F               	movwf	delayMS10@count,c
   766  0014BC  ECCC  F00B         	call	_delayMS10	;wreg free
   767                           
   768                           ;Current_Sense_Main.c: 87: LATBbits.LATB4 = 0;
   769  0014C0  988A               	bcf	3978,4,c	;volatile
   770                           
   771                           ;Current_Sense_Main.c: 88: delayMS10(10);
   772  0014C2  0E00               	movlw	0
   773  0014C4  6E10               	movwf	delayMS10@count+1,c
   774  0014C6  0E0A               	movlw	10
   775  0014C8  6E0F               	movwf	delayMS10@count,c
   776  0014CA  ECCC  F00B         	call	_delayMS10	;wreg free
   777  0014CE  0100               	movlb	0	; () banked
   778  0014D0  4BF1               	infsnz	main@inx& (0+255),f,b
   779  0014D2  2BF2               	incf	(main@inx+1)& (0+255),f,b
   780  0014D4  D7E3               	goto	l3353
   781  0014D6                     l3365:
   782                           
   783                           ; BSR set to: 0
   784                           ;Current_Sense_Main.c: 89: }
   785                           ;Current_Sense_Main.c: 91: initTimer();
   786  0014D6  EC8C  F00C         	call	_initTimer	;wreg free
   787                           
   788                           ;Current_Sense_Main.c: 119: communications(1);
   789  0014DA  0E01               	movlw	1
   790  0014DC  ECD3  F007         	call	_communications
   791  0014E0                     l3369:
   792                           
   793                           ;Current_Sense_Main.c: 129: {
   794                           ;Current_Sense_Main.c: 130: communications(0);
   795  0014E0  0E00               	movlw	0
   796  0014E2  ECD3  F007         	call	_communications
   797                           
   798                           ;Current_Sense_Main.c: 131: pulseFoutPassThru();
   799  0014E6  EC4A  F00C         	call	_pulseFoutPassThru	;wreg free
   800                           
   801                           ;Current_Sense_Main.c: 132: powerPulseCheck();
   802  0014EA  ECF1  F005         	call	_powerPulseCheck	;wreg free
   803  0014EE  D7F8               	goto	l3369
   804  0014F0                     __end_of_main:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function _pulseFoutPassThru *****************
   812 ;; Defined at:
   813 ;;		line 169 in file "Current_Sense_Main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   827 ;;      Params:         0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text1
   842  001894                     __ptext1:
   843                           	opt stack 0
   844  001894                     _pulseFoutPassThru:
   845                           	opt stack 29
   846                           
   847                           ;Current_Sense_Main.c: 172: static bool runonce = 0;
   848                           ;Current_Sense_Main.c: 174: if (PORTAbits.RA1 == 0)
   849                           
   850                           ;incstack = 0
   851  001894  B280               	btfsc	3968,1,c	;volatile
   852  001896  D00C               	goto	l119
   853                           
   854                           ;Current_Sense_Main.c: 175: {
   855                           ;Current_Sense_Main.c: 176: LATAbits.LATA0 = 1;
   856  001898  8089               	bsf	3977,0,c	;volatile
   857                           
   858                           ;Current_Sense_Main.c: 177: if (runonce == 0)
   859  00189A  5048               	movf	pulseFoutPassThru@runonce,w,c
   860  00189C  A4D8               	btfss	status,2,c
   861  00189E  0012               	return	
   862                           
   863                           ;Current_Sense_Main.c: 178: {
   864                           ;Current_Sense_Main.c: 179: runonce = 1;
   865  0018A0  0E01               	movlw	1
   866  0018A2  6E48               	movwf	pulseFoutPassThru@runonce,c
   867                           
   868                           ;Current_Sense_Main.c: 180: if (PORTBbits.RB4 == 1)
   869  0018A4  A881               	btfss	3969,4,c	;volatile
   870  0018A6  D002               	goto	l121
   871                           
   872                           ;Current_Sense_Main.c: 181: {
   873                           ;Current_Sense_Main.c: 182: LATBbits.LATB4 = 0;
   874  0018A8  988A               	bcf	3978,4,c	;volatile
   875                           
   876                           ;Current_Sense_Main.c: 183: }
   877  0018AA  0012               	return	
   878  0018AC                     l121:
   879                           
   880                           ;Current_Sense_Main.c: 184: else
   881                           ;Current_Sense_Main.c: 185: {
   882                           ;Current_Sense_Main.c: 186: LATBbits.LATB4 = 1;
   883  0018AC  888A               	bsf	3978,4,c	;volatile
   884                           
   885                           ;Current_Sense_Main.c: 187: }
   886                           ;Current_Sense_Main.c: 188: }
   887                           ;Current_Sense_Main.c: 189: }
   888  0018AE  0012               	return	
   889  0018B0                     l119:
   890                           
   891                           ;Current_Sense_Main.c: 190: else
   892                           ;Current_Sense_Main.c: 191: {
   893                           ;Current_Sense_Main.c: 192: LATAbits.LATA0 = 0;
   894  0018B0  9089               	bcf	3977,0,c	;volatile
   895                           
   896                           ;Current_Sense_Main.c: 193: runonce = 0;
   897  0018B2  0E00               	movlw	0
   898  0018B4  6E48               	movwf	pulseFoutPassThru@runonce,c
   899  0018B6  0012               	return	
   900  0018B8                     __end_of_pulseFoutPassThru:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           status	equ	0xFD8
   906                           
   907 ;; *************** function _powerPulseCheck *****************
   908 ;; Defined at:
   909 ;;		line 213 in file "Current_Sense_Main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  meterWattsHF    2   30[COMRAM] int 
   914 ;;  meterWattsLF    2   27[COMRAM] int 
   915 ;;  checkWattsHF    1   29[COMRAM] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   925 ;;      Params:         0       0       0       0       0       0       0
   926 ;;      Locals:         5       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0
   928 ;;      Totals:         5       0       0       0       0       0       0
   929 ;;Total ram usage:        5 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    2
   932 ;; This function calls:
   933 ;;		___lldiv
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text2
   940  000BE2                     __ptext2:
   941                           	opt stack 0
   942  000BE2                     _powerPulseCheck:
   943                           	opt stack 28
   944                           
   945                           ;Current_Sense_Main.c: 228: int meterWattsHF = 0;
   946                           
   947                           ;incstack = 0
   948  000BE2  0E00               	movlw	0
   949  000BE4  6E20               	movwf	powerPulseCheck@meterWattsHF+1,c
   950  000BE6  0E00               	movlw	0
   951  000BE8  6E1F               	movwf	powerPulseCheck@meterWattsHF,c
   952                           
   953                           ;Current_Sense_Main.c: 229: int meterWattsLF = 0;
   954  000BEA  0E00               	movlw	0
   955  000BEC  6E1D               	movwf	powerPulseCheck@meterWattsLF+1,c
   956  000BEE  0E00               	movlw	0
   957  000BF0  6E1C               	movwf	powerPulseCheck@meterWattsLF,c
   958                           
   959                           ;Current_Sense_Main.c: 231: static bool mcpHFoutLast = 0;
   960                           ;Current_Sense_Main.c: 232: static bool mcpLFoutLast = 0;
   961                           ;Current_Sense_Main.c: 233: bool checkWattsHFvsLF = 0;
   962  000BF2  0E00               	movlw	0
   963  000BF4  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   964                           
   965                           ;Current_Sense_Main.c: 235: if (PORTCbits.RC2 == 0)
   966  000BF6  B482               	btfsc	3970,2,c	;volatile
   967  000BF8  D026               	goto	l3307
   968                           
   969                           ;Current_Sense_Main.c: 236: {
   970                           ;Current_Sense_Main.c: 237: if (mcpHFoutLast == 0)
   971  000BFA  5047               	movf	powerPulseCheck@mcpHFoutLast,w,c
   972  000BFC  A4D8               	btfss	status,2,c
   973  000BFE  D025               	goto	l3309
   974                           
   975                           ;Current_Sense_Main.c: 238: {
   976                           ;Current_Sense_Main.c: 239: mcpHFoutLast = 1;
   977  000C00  0E01               	movlw	1
   978  000C02  6E47               	movwf	powerPulseCheck@mcpHFoutLast,c
   979                           
   980                           ;Current_Sense_Main.c: 244: meterWattsHF = 1 / timerCountHF;
   981  000C04  0E01               	movlw	1
   982  000C06  6E0F               	movwf	___lldiv@dividend,c
   983  000C08  0E00               	movlw	0
   984  000C0A  6E10               	movwf	___lldiv@dividend+1,c
   985  000C0C  0E00               	movlw	0
   986  000C0E  6E11               	movwf	___lldiv@dividend+2,c
   987  000C10  0E00               	movlw	0
   988  000C12  6E12               	movwf	___lldiv@dividend+3,c
   989  000C14  C04D  F013         	movff	_timerCountHF,___lldiv@divisor	;volatile
   990  000C18  C04E  F014         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
   991  000C1C  C04F  F015         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
   992  000C20  C050  F016         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
   993  000C24  EC5F  F009         	call	___lldiv	;wreg free
   994  000C28  C00F  F01F         	movff	?___lldiv,powerPulseCheck@meterWattsHF
   995  000C2C  C010  F020         	movff	?___lldiv+1,powerPulseCheck@meterWattsHF+1
   996                           
   997                           ;Current_Sense_Main.c: 245: checkWattsHFvsLF = 1;
   998  000C30  0E01               	movlw	1
   999  000C32  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
  1000                           
  1001                           ;Current_Sense_Main.c: 246: timerCountHF = 0;
  1002  000C34  0E00               	movlw	0
  1003  000C36  6E4D               	movwf	_timerCountHF,c	;volatile
  1004  000C38  0E00               	movlw	0
  1005  000C3A  6E4E               	movwf	_timerCountHF+1,c	;volatile
  1006  000C3C  0E00               	movlw	0
  1007  000C3E  6E4F               	movwf	_timerCountHF+2,c	;volatile
  1008  000C40  0E00               	movlw	0
  1009  000C42  6E50               	movwf	_timerCountHF+3,c	;volatile
  1010                           
  1011                           ;Current_Sense_Main.c: 247: }
  1012                           ;Current_Sense_Main.c: 248: }
  1013  000C44  D002               	goto	l3309
  1014  000C46                     l3307:
  1015                           
  1016                           ;Current_Sense_Main.c: 249: else
  1017                           ;Current_Sense_Main.c: 250: {
  1018                           ;Current_Sense_Main.c: 251: mcpHFoutLast = 0;
  1019  000C46  0E00               	movlw	0
  1020  000C48  6E47               	movwf	powerPulseCheck@mcpHFoutLast,c
  1021  000C4A                     l3309:
  1022                           
  1023                           ;Current_Sense_Main.c: 252: }
  1024                           ;Current_Sense_Main.c: 255: if (PORTAbits.RA1 == 0)
  1025  000C4A  B280               	btfsc	3968,1,c	;volatile
  1026  000C4C  D02B               	goto	l3323
  1027                           
  1028                           ;Current_Sense_Main.c: 256: {
  1029                           ;Current_Sense_Main.c: 257: if (mcpLFoutLast == 0)
  1030  000C4E  5046               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1031  000C50  A4D8               	btfss	status,2,c
  1032  000C52  D028               	goto	l3323
  1033                           
  1034                           ;Current_Sense_Main.c: 258: {
  1035                           ;Current_Sense_Main.c: 259: mcpLFoutLast = 1;
  1036  000C54  0E01               	movlw	1
  1037  000C56  6E46               	movwf	powerPulseCheck@mcpLFoutLast,c
  1038                           
  1039                           ;Current_Sense_Main.c: 264: meterWattsLF = 5 / timerCountLF;
  1040  000C58  0E05               	movlw	5
  1041  000C5A  6E0F               	movwf	___lldiv@dividend,c
  1042  000C5C  0E00               	movlw	0
  1043  000C5E  6E10               	movwf	___lldiv@dividend+1,c
  1044  000C60  0E00               	movlw	0
  1045  000C62  6E11               	movwf	___lldiv@dividend+2,c
  1046  000C64  0E00               	movlw	0
  1047  000C66  6E12               	movwf	___lldiv@dividend+3,c
  1048  000C68  C049  F013         	movff	_timerCountLF,___lldiv@divisor	;volatile
  1049  000C6C  C04A  F014         	movff	_timerCountLF+1,___lldiv@divisor+1	;volatile
  1050  000C70  C04B  F015         	movff	_timerCountLF+2,___lldiv@divisor+2	;volatile
  1051  000C74  C04C  F016         	movff	_timerCountLF+3,___lldiv@divisor+3	;volatile
  1052  000C78  EC5F  F009         	call	___lldiv	;wreg free
  1053  000C7C  C00F  F01C         	movff	?___lldiv,powerPulseCheck@meterWattsLF
  1054  000C80  C010  F01D         	movff	?___lldiv+1,powerPulseCheck@meterWattsLF+1
  1055                           
  1056                           ;Current_Sense_Main.c: 266: meterEnergyUsed += 5;
  1057  000C84  0E05               	movlw	5
  1058  000C86  2639               	addwf	_meterEnergyUsed,f,c
  1059  000C88  0E00               	movlw	0
  1060  000C8A  223A               	addwfc	_meterEnergyUsed+1,f,c
  1061  000C8C  223B               	addwfc	_meterEnergyUsed+2,f,c
  1062  000C8E  223C               	addwfc	_meterEnergyUsed+3,f,c
  1063                           
  1064                           ;Current_Sense_Main.c: 269: checkWattsHFvsLF = 1;
  1065  000C90  0E01               	movlw	1
  1066  000C92  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
  1067                           
  1068                           ;Current_Sense_Main.c: 270: timerCountLF = 0;
  1069  000C94  0E00               	movlw	0
  1070  000C96  6E49               	movwf	_timerCountLF,c	;volatile
  1071  000C98  0E00               	movlw	0
  1072  000C9A  6E4A               	movwf	_timerCountLF+1,c	;volatile
  1073  000C9C  0E00               	movlw	0
  1074  000C9E  6E4B               	movwf	_timerCountLF+2,c	;volatile
  1075  000CA0  0E00               	movlw	0
  1076  000CA2  6E4C               	movwf	_timerCountLF+3,c	;volatile
  1077  000CA4                     l3323:
  1078                           
  1079                           ;Current_Sense_Main.c: 271: }
  1080                           ;Current_Sense_Main.c: 272: }
  1081                           ;Current_Sense_Main.c: 279: if (checkWattsHFvsLF == 1)
  1082  000CA4  041E               	decf	powerPulseCheck@checkWattsHFvsLF,w,c
  1083  000CA6  A4D8               	btfss	status,2,c
  1084  000CA8  D00B               	goto	l3329
  1085                           
  1086                           ;Current_Sense_Main.c: 280: {
  1087                           ;Current_Sense_Main.c: 281: if (meterWattsHF <= -1)
  1088  000CAA  AE20               	btfss	powerPulseCheck@meterWattsHF+1,7,c
  1089  000CAC  D005               	goto	l140
  1090                           
  1091                           ;Current_Sense_Main.c: 282: {
  1092                           ;Current_Sense_Main.c: 283: meterWatts = meterWattsHF;
  1093  000CAE  C01F  F03F         	movff	powerPulseCheck@meterWattsHF,_meterWatts
  1094  000CB2  C020  F040         	movff	powerPulseCheck@meterWattsHF+1,_meterWatts+1
  1095                           
  1096                           ;Current_Sense_Main.c: 284: }
  1097  000CB6  D004               	goto	l3329
  1098  000CB8                     l140:
  1099                           
  1100                           ;Current_Sense_Main.c: 285: else
  1101                           ;Current_Sense_Main.c: 286: {
  1102                           ;Current_Sense_Main.c: 287: meterWatts = meterWattsLF;
  1103  000CB8  C01C  F03F         	movff	powerPulseCheck@meterWattsLF,_meterWatts
  1104  000CBC  C01D  F040         	movff	powerPulseCheck@meterWattsLF+1,_meterWatts+1
  1105  000CC0                     l3329:
  1106                           
  1107                           ;Current_Sense_Main.c: 288: }
  1108                           ;Current_Sense_Main.c: 289: }
  1109                           ;Current_Sense_Main.c: 299: if (timerCountLF > 10000)
  1110  000CC0  504C               	movf	_timerCountLF+3,w,c	;volatile
  1111  000CC2  104B               	iorwf	_timerCountLF+2,w,c	;volatile
  1112  000CC4  E106               	bnz	u2830
  1113  000CC6  0E11               	movlw	17
  1114  000CC8  5C49               	subwf	_timerCountLF,w,c	;volatile
  1115  000CCA  0E27               	movlw	39
  1116  000CCC  584A               	subwfb	_timerCountLF+1,w,c	;volatile
  1117  000CCE  A0D8               	btfss	status,0,c
  1118  000CD0  D00E               	goto	l3335
  1119  000CD2                     u2830:
  1120                           
  1121                           ;Current_Sense_Main.c: 300: {
  1122                           ;Current_Sense_Main.c: 301: meterEnergyUsed++;
  1123  000CD2  0E01               	movlw	1
  1124  000CD4  2639               	addwf	_meterEnergyUsed,f,c
  1125  000CD6  0E00               	movlw	0
  1126  000CD8  223A               	addwfc	_meterEnergyUsed+1,f,c
  1127  000CDA  223B               	addwfc	_meterEnergyUsed+2,f,c
  1128  000CDC  223C               	addwfc	_meterEnergyUsed+3,f,c
  1129                           
  1130                           ;Current_Sense_Main.c: 302: timerCountLF = 0;
  1131  000CDE  0E00               	movlw	0
  1132  000CE0  6E49               	movwf	_timerCountLF,c	;volatile
  1133  000CE2  0E00               	movlw	0
  1134  000CE4  6E4A               	movwf	_timerCountLF+1,c	;volatile
  1135  000CE6  0E00               	movlw	0
  1136  000CE8  6E4B               	movwf	_timerCountLF+2,c	;volatile
  1137  000CEA  0E00               	movlw	0
  1138  000CEC  6E4C               	movwf	_timerCountLF+3,c	;volatile
  1139  000CEE                     l3335:
  1140                           
  1141                           ;Current_Sense_Main.c: 303: }
  1142                           ;Current_Sense_Main.c: 305: meterWatts = 64;
  1143  000CEE  0E00               	movlw	0
  1144  000CF0  6E40               	movwf	_meterWatts+1,c
  1145  000CF2  0E40               	movlw	64
  1146  000CF4  6E3F               	movwf	_meterWatts,c
  1147  000CF6  0012               	return	
  1148  000CF8                     __end_of_powerPulseCheck:
  1149                           	opt stack 0
  1150                           tblptru	equ	0xFF8
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _initTimer *****************
  1156 ;; Defined at:
  1157 ;;		line 393 in file "Current_Sense_Main.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1171 ;;      Params:         0       0       0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text3
  1186  001918                     __ptext3:
  1187                           	opt stack 0
  1188  001918                     _initTimer:
  1189                           	opt stack 29
  1190                           
  1191                           ;Current_Sense_Main.c: 396: T0CONbits.TMR0ON = 0;
  1192                           
  1193                           ;incstack = 0
  1194  001918  9ED5               	bcf	4053,7,c	;volatile
  1195                           
  1196                           ;Current_Sense_Main.c: 397: T0CONbits.T08BIT = 0;
  1197  00191A  9CD5               	bcf	4053,6,c	;volatile
  1198                           
  1199                           ;Current_Sense_Main.c: 398: T0CONbits.T0CS = 0;
  1200  00191C  9AD5               	bcf	4053,5,c	;volatile
  1201                           
  1202                           ;Current_Sense_Main.c: 399: T0CONbits.PSA = 0;
  1203  00191E  96D5               	bcf	4053,3,c	;volatile
  1204                           
  1205                           ;Current_Sense_Main.c: 400: T0CONbits.T0PS = 0b001;
  1206  001920  50D5               	movf	4053,w,c	;volatile
  1207  001922  0BF8               	andlw	-8
  1208  001924  0901               	iorlw	1
  1209  001926  6ED5               	movwf	4053,c	;volatile
  1210                           
  1211                           ;Current_Sense_Main.c: 402: INTCONbits.TMR0IE = 1;
  1212  001928  8AF2               	bsf	intcon,5,c	;volatile
  1213                           
  1214                           ;Current_Sense_Main.c: 403: INTCONbits.GIE = 1;
  1215  00192A  8EF2               	bsf	intcon,7,c	;volatile
  1216                           
  1217                           ;Current_Sense_Main.c: 404: T0CONbits.TMR0ON = 1;
  1218  00192C  8ED5               	bsf	4053,7,c	;volatile
  1219  00192E  0012               	return		;funcret
  1220  001930                     __end_of_initTimer:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           status	equ	0xFD8
  1227                           
  1228 ;; *************** function _init *****************
  1229 ;; Defined at:
  1230 ;;		line 319 in file "Current_Sense_Main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		_initIO
  1253 ;;		_initMCPFout
  1254 ;;		_initOSC
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text4
  1261  00195E                     __ptext4:
  1262                           	opt stack 0
  1263  00195E                     _init:
  1264                           	opt stack 27
  1265                           
  1266                           ;Current_Sense_Main.c: 321: initOSC();
  1267                           
  1268                           ;incstack = 0
  1269  00195E  EC98  F00C         	call	_initOSC	;wreg free
  1270                           
  1271                           ;Current_Sense_Main.c: 322: initIO();
  1272  001962  EC5C  F00C         	call	_initIO	;wreg free
  1273                           
  1274                           ;Current_Sense_Main.c: 324: initMCPFout();
  1275  001966  ECDE  F009         	call	_initMCPFout	;wreg free
  1276  00196A  0012               	return	
  1277  00196C                     __end_of_init:
  1278                           	opt stack 0
  1279                           tblptru	equ	0xFF8
  1280                           intcon	equ	0xFF2
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _initOSC *****************
  1286 ;; Defined at:
  1287 ;;		line 329 in file "Current_Sense_Main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         0       0       0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_init
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text5
  1316  001930                     __ptext5:
  1317                           	opt stack 0
  1318  001930                     _initOSC:
  1319                           	opt stack 28
  1320                           
  1321                           ;Current_Sense_Main.c: 332: OSCCONbits.IDLEN = 0;
  1322                           
  1323                           ;incstack = 0
  1324  001930  9ED3               	bcf	4051,7,c	;volatile
  1325                           
  1326                           ;Current_Sense_Main.c: 333: OSCCONbits.IRCF = 0b111;
  1327  001932  88D3               	bsf	4051,4,c	;volatile
  1328  001934  8AD3               	bsf	4051,5,c	;volatile
  1329  001936  8CD3               	bsf	4051,6,c	;volatile
  1330                           
  1331                           ;Current_Sense_Main.c: 334: OSCCONbits.SCS = 0b11;
  1332  001938  0E03               	movlw	3
  1333  00193A  12D3               	iorwf	4051,f,c	;volatile
  1334                           
  1335                           ;Current_Sense_Main.c: 336: OSCCON2bits.MFIOSEL = 0;
  1336  00193C  98D2               	bcf	4050,4,c	;volatile
  1337                           
  1338                           ;Current_Sense_Main.c: 337: OSCCON2bits.SOSCGO = 0;
  1339  00193E  96D2               	bcf	4050,3,c	;volatile
  1340                           
  1341                           ;Current_Sense_Main.c: 338: OSCCON2bits.PRISD = 0;
  1342  001940  94D2               	bcf	4050,2,c	;volatile
  1343                           
  1344                           ;Current_Sense_Main.c: 340: OSCTUNEbits.INTSRC = 1;
  1345  001942  8E9B               	bsf	3995,7,c	;volatile
  1346                           
  1347                           ;Current_Sense_Main.c: 341: OSCTUNEbits.PLLEN = 0;
  1348  001944  9C9B               	bcf	3995,6,c	;volatile
  1349  001946  0012               	return	
  1350  001948                     __end_of_initOSC:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           intcon	equ	0xFF2
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _initMCPFout *****************
  1359 ;; Defined at:
  1360 ;;		line 410 in file "Current_Sense_Main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1374 ;;      Params:         0       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0
  1376 ;;      Temps:          1       0       0       0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    2
  1381 ;; This function calls:
  1382 ;;		_delayMS10
  1383 ;; This function is called by:
  1384 ;;		_init
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text6
  1389  0013BC                     __ptext6:
  1390                           	opt stack 0
  1391  0013BC                     _initMCPFout:
  1392                           	opt stack 27
  1393                           
  1394                           ;Current_Sense_Main.c: 415: TRISCbits.TRISC6 = 0;
  1395                           
  1396                           ;incstack = 0
  1397  0013BC  9C94               	bcf	3988,6,c	;volatile
  1398                           
  1399                           ;Current_Sense_Main.c: 416: TRISCbits.TRISC7 = 0;
  1400  0013BE  9E94               	bcf	3988,7,c	;volatile
  1401                           
  1402                           ;Current_Sense_Main.c: 417: TRISCbits.TRISC5 = 0;
  1403  0013C0  9A94               	bcf	3988,5,c	;volatile
  1404                           
  1405                           ;Current_Sense_Main.c: 418: TRISCbits.TRISC3 = 0;
  1406  0013C2  9694               	bcf	3988,3,c	;volatile
  1407                           
  1408                           ;Current_Sense_Main.c: 421: LATCbits.LATC7 = 0;
  1409  0013C4  9E8B               	bcf	3979,7,c	;volatile
  1410                           
  1411                           ;Current_Sense_Main.c: 422: LATCbits.LATC5 = 0;
  1412  0013C6  9A8B               	bcf	3979,5,c	;volatile
  1413                           
  1414                           ;Current_Sense_Main.c: 423: LATCbits.LATC3 = 0;
  1415  0013C8  968B               	bcf	3979,3,c	;volatile
  1416                           
  1417                           ;Current_Sense_Main.c: 425: _delay((unsigned long)((5)*(16000000/4000.0)));
  1418  0013CA  0E1A               	movlw	26
  1419  0013CC  6E14               	movwf	??_initMCPFout& (0+255),c
  1420  0013CE  0EF8               	movlw	248
  1421  0013D0                     u2867:
  1422  0013D0  2EE8               	decfsz	wreg,f,c
  1423  0013D2  D7FE               	bra	u2867
  1424  0013D4  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1425  0013D6  D7FC               	bra	u2867
  1426  0013D8  D000               	nop2	
  1427                           
  1428                           ;Current_Sense_Main.c: 426: LATCbits.LATC6 = 0;
  1429  0013DA  9C8B               	bcf	3979,6,c	;volatile
  1430                           
  1431                           ;Current_Sense_Main.c: 427: _delay((unsigned long)((5)*(16000000/4000.0)));
  1432  0013DC  0E1A               	movlw	26
  1433  0013DE  6E14               	movwf	??_initMCPFout& (0+255),c
  1434  0013E0  0EF8               	movlw	248
  1435  0013E2                     u2877:
  1436  0013E2  2EE8               	decfsz	wreg,f,c
  1437  0013E4  D7FE               	bra	u2877
  1438  0013E6  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1439  0013E8  D7FC               	bra	u2877
  1440  0013EA  D000               	nop2	
  1441                           
  1442                           ;Current_Sense_Main.c: 429: LATCbits.LATC7 = 0;
  1443  0013EC  9E8B               	bcf	3979,7,c	;volatile
  1444                           
  1445                           ;Current_Sense_Main.c: 430: LATCbits.LATC5 = 0;
  1446  0013EE  9A8B               	bcf	3979,5,c	;volatile
  1447                           
  1448                           ;Current_Sense_Main.c: 431: LATCbits.LATC3 = 0;
  1449  0013F0  968B               	bcf	3979,3,c	;volatile
  1450                           
  1451                           ;Current_Sense_Main.c: 433: _delay((unsigned long)((5)*(16000000/4000.0)));
  1452  0013F2  0E1A               	movlw	26
  1453  0013F4  6E14               	movwf	??_initMCPFout& (0+255),c
  1454  0013F6  0EF8               	movlw	248
  1455  0013F8                     u2887:
  1456  0013F8  2EE8               	decfsz	wreg,f,c
  1457  0013FA  D7FE               	bra	u2887
  1458  0013FC  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1459  0013FE  D7FC               	bra	u2887
  1460  001400  D000               	nop2	
  1461                           
  1462                           ;Current_Sense_Main.c: 435: LATCbits.LATC7 = 1;
  1463  001402  8E8B               	bsf	3979,7,c	;volatile
  1464                           
  1465                           ;Current_Sense_Main.c: 436: LATCbits.LATC5 = 1;
  1466  001404  8A8B               	bsf	3979,5,c	;volatile
  1467                           
  1468                           ;Current_Sense_Main.c: 437: LATCbits.LATC3 = 1;
  1469  001406  868B               	bsf	3979,3,c	;volatile
  1470                           
  1471                           ;Current_Sense_Main.c: 439: _delay((unsigned long)((5)*(16000000/4000.0)));
  1472  001408  0E1A               	movlw	26
  1473  00140A  6E14               	movwf	??_initMCPFout& (0+255),c
  1474  00140C  0EF8               	movlw	248
  1475  00140E                     u2897:
  1476  00140E  2EE8               	decfsz	wreg,f,c
  1477  001410  D7FE               	bra	u2897
  1478  001412  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1479  001414  D7FC               	bra	u2897
  1480  001416  D000               	nop2	
  1481                           
  1482                           ;Current_Sense_Main.c: 440: LATCbits.LATC6 = 1;
  1483  001418  8C8B               	bsf	3979,6,c	;volatile
  1484                           
  1485                           ;Current_Sense_Main.c: 441: delayMS10(10);
  1486  00141A  0E00               	movlw	0
  1487  00141C  6E10               	movwf	delayMS10@count+1,c
  1488  00141E  0E0A               	movlw	10
  1489  001420  6E0F               	movwf	delayMS10@count,c
  1490  001422  ECCC  F00B         	call	_delayMS10	;wreg free
  1491  001426  0012               	return	
  1492  001428                     __end_of_initMCPFout:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           intcon	equ	0xFF2
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function _delayMS10 *****************
  1501 ;; Defined at:
  1502 ;;		line 310 in file "Current_Sense_Main.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  count           2   14[COMRAM] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  inx             2   17[COMRAM] int 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         2       0       0       0       0       0       0
  1517 ;;      Locals:         2       0       0       0       0       0       0
  1518 ;;      Temps:          1       0       0       0       0       0       0
  1519 ;;      Totals:         5       0       0       0       0       0       0
  1520 ;;Total ram usage:        5 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;;		_initMCPFout
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text7
  1532  001798                     __ptext7:
  1533                           	opt stack 0
  1534  001798                     _delayMS10:
  1535                           	opt stack 27
  1536                           
  1537                           ;Current_Sense_Main.c: 312: for (int inx = 0; inx < count; inx++)
  1538                           
  1539                           ;incstack = 0
  1540  001798  0E00               	movlw	0
  1541  00179A  6E13               	movwf	delayMS10@inx+1,c
  1542  00179C  0E00               	movlw	0
  1543  00179E  6E12               	movwf	delayMS10@inx,c
  1544  0017A0  D009               	goto	l146
  1545  0017A2                     l2921:
  1546                           
  1547                           ;Current_Sense_Main.c: 313: {
  1548                           ;Current_Sense_Main.c: 315: _delay((unsigned long)((10)*(16000000/4000.0)));
  1549  0017A2  0E34               	movlw	52
  1550  0017A4  6E11               	movwf	??_delayMS10& (0+255),c
  1551  0017A6  0EF2               	movlw	242
  1552  0017A8                     u2907:
  1553  0017A8  2EE8               	decfsz	wreg,f,c
  1554  0017AA  D7FE               	bra	u2907
  1555  0017AC  2E11               	decfsz	??_delayMS10& (0+255),f,c
  1556  0017AE  D7FC               	bra	u2907
  1557  0017B0  4A12               	infsnz	delayMS10@inx,f,c
  1558  0017B2  2A13               	incf	delayMS10@inx+1,f,c
  1559  0017B4                     l146:
  1560  0017B4  500F               	movf	delayMS10@count,w,c
  1561  0017B6  5C12               	subwf	delayMS10@inx,w,c
  1562  0017B8  5013               	movf	delayMS10@inx+1,w,c
  1563  0017BA  0A80               	xorlw	128
  1564  0017BC  6E11               	movwf	??_delayMS10& (0+255),c
  1565  0017BE  5010               	movf	delayMS10@count+1,w,c
  1566  0017C0  0A80               	xorlw	128
  1567  0017C2  5811               	subwfb	??_delayMS10& (0+255),w,c
  1568  0017C4  B0D8               	btfsc	status,0,c
  1569  0017C6  0012               	return	
  1570  0017C8  D7EC               	goto	l2921
  1571  0017CA                     __end_of_delayMS10:
  1572                           	opt stack 0
  1573                           tblptru	equ	0xFF8
  1574                           intcon	equ	0xFF2
  1575                           postinc0	equ	0xFEE
  1576                           wreg	equ	0xFE8
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _initIO *****************
  1580 ;; Defined at:
  1581 ;;		line 346 in file "Current_Sense_Main.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1595 ;;      Params:         0       0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_init
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text8
  1610  0018B8                     __ptext8:
  1611                           	opt stack 0
  1612  0018B8                     _initIO:
  1613                           	opt stack 28
  1614                           
  1615                           ;Current_Sense_Main.c: 348: ADCON0bits.ADON = 0;
  1616                           
  1617                           ;incstack = 0
  1618  0018B8  90C2               	bcf	4034,0,c	;volatile
  1619                           
  1620                           ;Current_Sense_Main.c: 349: ANSELA = 0b00000000;
  1621  0018BA  0E00               	movlw	0
  1622  0018BC  010F               	movlb	15	; () banked
  1623  0018BE  6F38               	movwf	56,b	;volatile
  1624                           
  1625                           ;Current_Sense_Main.c: 350: ANSELB = 0b00000000;
  1626  0018C0  0E00               	movlw	0
  1627  0018C2  010F               	movlb	15	; () banked
  1628  0018C4  6F39               	movwf	57,b	;volatile
  1629                           
  1630                           ;Current_Sense_Main.c: 351: ANSELC = 0b00000000;
  1631  0018C6  0E00               	movlw	0
  1632  0018C8  010F               	movlb	15	; () banked
  1633  0018CA  6F3A               	movwf	58,b	;volatile
  1634                           
  1635                           ; BSR set to: 15
  1636                           ;Current_Sense_Main.c: 353: TRISBbits.TRISB4 = 0;
  1637  0018CC  9893               	bcf	3987,4,c	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;Current_Sense_Main.c: 354: LATBbits.LATB4 = 0;
  1641  0018CE  988A               	bcf	3978,4,c	;volatile
  1642                           
  1643                           ; BSR set to: 15
  1644                           ;Current_Sense_Main.c: 356: TRISCbits.TRISC2 = 1;
  1645  0018D0  8494               	bsf	3988,2,c	;volatile
  1646                           
  1647                           ; BSR set to: 15
  1648                           ;Current_Sense_Main.c: 357: TRISAbits.TRISA1 = 1;
  1649  0018D2  8292               	bsf	3986,1,c	;volatile
  1650                           
  1651                           ; BSR set to: 15
  1652                           ;Current_Sense_Main.c: 358: TRISAbits.TRISA0 = 0;
  1653  0018D4  9092               	bcf	3986,0,c	;volatile
  1654                           
  1655                           ; BSR set to: 15
  1656                           ;Current_Sense_Main.c: 359: LATAbits.LATA0 = 0;
  1657  0018D6  9089               	bcf	3977,0,c	;volatile
  1658  0018D8  0012               	return	
  1659  0018DA                     __end_of_initIO:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           intcon	equ	0xFF2
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _communications *****************
  1668 ;; Defined at:
  1669 ;;		line 89 in file "SlaveComm_PIC18.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  firstTime       1    wreg     unsigned char 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  firstTime       1   60[BANK0 ] unsigned char 
  1674 ;;  no_more_to_s    1   59[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1684 ;;      Params:         0       0       0       0       0       0       0
  1685 ;;      Locals:         0       2       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0
  1687 ;;      Totals:         0       2       0       0       0       0       0
  1688 ;;Total ram usage:        2 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    7
  1691 ;; This function calls:
  1692 ;;		_SPISlaveInit
  1693 ;;		_process_data
  1694 ;;		_receive_data
  1695 ;;		_resetCommunications
  1696 ;;		_send_data
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text9
  1703  000FA6                     __ptext9:
  1704                           	opt stack 0
  1705  000FA6                     _communications:
  1706                           	opt stack 23
  1707                           
  1708                           ; BSR set to: 15
  1709                           ;incstack = 0
  1710                           ;communications@firstTime stored from wreg
  1711  000FA6  0100               	movlb	0	; () banked
  1712  000FA8  6FF0               	movwf	communications@firstTime& (0+255),b
  1713                           
  1714                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  1715                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  1716                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  1717                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  1718                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  1719                           ;SlaveComm_PIC18.c: 100: if( firstTime == 1 )
  1720  000FAA  0100               	movlb	0	; () banked
  1721  000FAC  05F0               	decf	communications@firstTime& (0+255),w,b
  1722  000FAE  A4D8               	btfss	status,2,c
  1723  000FB0  D00F               	goto	l3253
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;SlaveComm_PIC18.c: 101: {
  1727                           ;SlaveComm_PIC18.c: 102: SPISlaveInit( );
  1728  000FB2  EC22  F00B         	call	_SPISlaveInit	;wreg free
  1729                           
  1730                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  1731  000FB6  0E00               	movlw	0
  1732  000FB8  0100               	movlb	0	; () banked
  1733  000FBA  6F88               	movwf	(communications@send_buffer+40)& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  1737  000FBC  0E00               	movlw	0
  1738  000FBE  0100               	movlb	0	; () banked
  1739  000FC0  6F89               	movwf	(communications@send_buffer+41)& (0+255),b
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;SlaveComm_PIC18.c: 105: resetCommunications( &send_buffer );
  1743  000FC2  0E60               	movlw	low communications@send_buffer
  1744  000FC4  6E37               	movwf	resetCommunications@send_buffer,c
  1745  000FC6  0E00               	movlw	high communications@send_buffer
  1746  000FC8  6E38               	movwf	resetCommunications@send_buffer+1,c
  1747  000FCA  EC79  F008         	call	_resetCommunications	;wreg free
  1748                           
  1749                           ;SlaveComm_PIC18.c: 106: }
  1750  000FCE  0012               	return	
  1751  000FD0                     l3253:
  1752                           
  1753                           ;SlaveComm_PIC18.c: 107: else
  1754                           ;SlaveComm_PIC18.c: 108: {
  1755                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data( &receive_buffer );
  1756  000FD0  0E8A               	movlw	low communications@receive_buffer
  1757  000FD2  6E12               	movwf	receive_data@receive_buffer,c
  1758  000FD4  0E00               	movlw	high communications@receive_buffer
  1759  000FD6  6E13               	movwf	receive_data@receive_buffer+1,c
  1760  000FD8  EC73  F007         	call	_receive_data	;wreg free
  1761  000FDC  6E43               	movwf	communications@receive_current_state,c
  1762                           
  1763                           ;SlaveComm_PIC18.c: 111: switch( receive_current_state )
  1764  000FDE  D014               	goto	l3261
  1765  000FE0                     l3255:
  1766                           
  1767                           ;SlaveComm_PIC18.c: 121: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  1768  000FE0  0E8A               	movlw	low communications@receive_buffer
  1769  000FE2  0100               	movlb	0	; () banked
  1770  000FE4  6FB8               	movwf	process_data@receive_buffer& (0+255),b
  1771  000FE6  0E00               	movlw	high communications@receive_buffer
  1772  000FE8  0100               	movlb	0	; () banked
  1773  000FEA  6FB9               	movwf	(process_data@receive_buffer+1)& (0+255),b
  1774  000FEC  0E60               	movlw	low communications@send_buffer
  1775  000FEE  0100               	movlb	0	; () banked
  1776  000FF0  6FBA               	movwf	process_data@send_buffer& (0+255),b
  1777  000FF2  0E00               	movlw	high communications@send_buffer
  1778  000FF4  0100               	movlb	0	; () banked
  1779  000FF6  6FBB               	movwf	(process_data@send_buffer+1)& (0+255),b
  1780  000FF8  ECB1  F00B         	call	_process_data	;wreg free
  1781  000FFC  06E8               	decf	wreg,f,c
  1782  000FFE  A4D8               	btfss	status,2,c
  1783  001000  D00D               	goto	l3263
  1784                           
  1785                           ;SlaveComm_PIC18.c: 122: {
  1786                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  1787  001002  0E01               	movlw	1
  1788  001004  6E44               	movwf	communications@end_of_transmission_received,c
  1789                           
  1790                           ;SlaveComm_PIC18.c: 127: }
  1791                           
  1792                           ;SlaveComm_PIC18.c: 124: }
  1793                           ;SlaveComm_PIC18.c: 126: break;
  1794  001006  D00A               	goto	l3263
  1795  001008                     l3261:
  1796  001008  5043               	movf	communications@receive_current_state,w,c
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 3, Range of values is 0 to 2
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           10     6 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804  00100A  0A00               	xorlw	0	; case 0
  1805  00100C  B4D8               	btfsc	status,2,c
  1806  00100E  D006               	goto	l3263
  1807  001010  0A01               	xorlw	1	; case 1
  1808  001012  B4D8               	btfsc	status,2,c
  1809  001014  D003               	goto	l3263
  1810  001016  0A03               	xorlw	3	; case 2
  1811  001018  B4D8               	btfsc	status,2,c
  1812  00101A  D7E2               	goto	l3255
  1813  00101C                     l3263:
  1814                           
  1815                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data( &send_buffer );
  1816  00101C  0E60               	movlw	low communications@send_buffer
  1817  00101E  6E11               	movwf	send_data@send_buffer,c
  1818  001020  0E00               	movlw	high communications@send_buffer
  1819  001022  6E12               	movwf	send_data@send_buffer+1,c
  1820  001024  EC17  F009         	call	_send_data	;wreg free
  1821  001028  0100               	movlb	0	; () banked
  1822  00102A  6FEF               	movwf	communications@no_more_to_send& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  1826                           ;SlaveComm_PIC18.c: 133: if( PORTBbits.SS2 == 0b1 )
  1827  00102C  A081               	btfss	3969,0,c	;volatile
  1828  00102E  D003               	goto	l3269
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;SlaveComm_PIC18.c: 134: {
  1832                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  1833  001030  0E00               	movlw	0
  1834  001032  6E42               	movwf	communications@last_state_active,c
  1835                           
  1836                           ;SlaveComm_PIC18.c: 136: }
  1837  001034  0012               	return	
  1838  001036                     l3269:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;SlaveComm_PIC18.c: 137: else
  1842                           ;SlaveComm_PIC18.c: 138: {
  1843                           ;SlaveComm_PIC18.c: 139: if( last_state_active == 0 )
  1844  001036  5042               	movf	communications@last_state_active,w,c
  1845  001038  A4D8               	btfss	status,2,c
  1846  00103A  D006               	goto	l3273
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;SlaveComm_PIC18.c: 140: {
  1850                           ;SlaveComm_PIC18.c: 141: resetCommunications( &send_buffer );
  1851  00103C  0E60               	movlw	low communications@send_buffer
  1852  00103E  6E37               	movwf	resetCommunications@send_buffer,c
  1853  001040  0E00               	movlw	high communications@send_buffer
  1854  001042  6E38               	movwf	resetCommunications@send_buffer+1,c
  1855  001044  EC79  F008         	call	_resetCommunications	;wreg free
  1856  001048                     l3273:
  1857                           
  1858                           ;SlaveComm_PIC18.c: 142: }
  1859                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  1860  001048  0E01               	movlw	1
  1861  00104A  6E42               	movwf	communications@last_state_active,c
  1862  00104C  0012               	return	
  1863  00104E                     __end_of_communications:
  1864                           	opt stack 0
  1865                           tblptru	equ	0xFF8
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _send_data *****************
  1872 ;; Defined at:
  1873 ;;		line 485 in file "SlaveComm_PIC18.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  1876 ;;		 -> communications@send_buffer(42), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  send_end        1   20[COMRAM] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      unsigned char 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         2       0       0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0       0       0
  1890 ;;      Temps:          2       0       0       0       0       0       0
  1891 ;;      Totals:         5       0       0       0       0       0       0
  1892 ;;Total ram usage:        5 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		_SPI_send_data
  1897 ;; This function is called by:
  1898 ;;		_communications
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  00122E                     __ptext10:
  1904                           	opt stack 0
  1905  00122E                     _send_data:
  1906                           	opt stack 27
  1907                           
  1908                           ;SlaveComm_PIC18.c: 487: bool send_end;
  1909                           ;SlaveComm_PIC18.c: 489: if( send_buffer->read_position == send_buffer->write_position )
  1910                           
  1911                           ;incstack = 0
  1912  00122E  EE20 F028          	lfsr	2,40
  1913  001232  5011               	movf	send_data@send_buffer,w,c
  1914  001234  26D9               	addwf	fsr2l,f,c
  1915  001236  5012               	movf	send_data@send_buffer+1,w,c
  1916  001238  22DA               	addwfc	fsr2h,f,c
  1917  00123A  EE10 F029          	lfsr	1,41
  1918  00123E  5011               	movf	send_data@send_buffer,w,c
  1919  001240  26E1               	addwf	fsr1l,f,c
  1920  001242  5012               	movf	send_data@send_buffer+1,w,c
  1921  001244  22E2               	addwfc	fsr1h,f,c
  1922  001246  50DE               	movf	postinc2,w,c
  1923  001248  18E6               	xorwf	postinc1,w,c
  1924  00124A  A4D8               	btfss	status,2,c
  1925  00124C  D006               	goto	l3215
  1926                           
  1927                           ;SlaveComm_PIC18.c: 490: {
  1928                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  1929  00124E  0E01               	movlw	1
  1930  001250  6E15               	movwf	send_data@send_end,c
  1931                           
  1932                           ;SlaveComm_PIC18.c: 492: SPI_send_data( '\0' );
  1933  001252  0E00               	movlw	0
  1934  001254  EC6D  F00C         	call	_SPI_send_data
  1935                           
  1936                           ;SlaveComm_PIC18.c: 493: }
  1937  001258  D030               	goto	l3223
  1938  00125A                     l3215:
  1939                           
  1940                           ;SlaveComm_PIC18.c: 494: else
  1941                           ;SlaveComm_PIC18.c: 495: {
  1942                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  1943  00125A  0E00               	movlw	0
  1944  00125C  6E15               	movwf	send_data@send_end,c
  1945                           
  1946                           ;SlaveComm_PIC18.c: 499: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  1947  00125E  EE20 F029          	lfsr	2,41
  1948  001262  5011               	movf	send_data@send_buffer,w,c
  1949  001264  26D9               	addwf	fsr2l,f,c
  1950  001266  5012               	movf	send_data@send_buffer+1,w,c
  1951  001268  22DA               	addwfc	fsr2h,f,c
  1952  00126A  50DF               	movf	indf2,w,c
  1953  00126C  6E13               	movwf	??_send_data& (0+255),c
  1954  00126E  5013               	movf	??_send_data,w,c
  1955  001270  0D01               	mullw	1
  1956  001272  50F3               	movf	prodl,w,c
  1957  001274  2411               	addwf	send_data@send_buffer,w,c
  1958  001276  6ED9               	movwf	fsr2l,c
  1959  001278  50F4               	movf	prodh,w,c
  1960  00127A  2012               	addwfc	send_data@send_buffer+1,w,c
  1961  00127C  6EDA               	movwf	fsr2h,c
  1962  00127E  50DF               	movf	indf2,w,c
  1963  001280  EC6D  F00C         	call	_SPI_send_data
  1964  001284  06E8               	decf	wreg,f,c
  1965  001286  A4D8               	btfss	status,2,c
  1966  001288  D018               	goto	l3223
  1967                           
  1968                           ;SlaveComm_PIC18.c: 500: {
  1969                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  1970  00128A  EE20 F029          	lfsr	2,41
  1971  00128E  5011               	movf	send_data@send_buffer,w,c
  1972  001290  26D9               	addwf	fsr2l,f,c
  1973  001292  5012               	movf	send_data@send_buffer+1,w,c
  1974  001294  22DA               	addwfc	fsr2h,f,c
  1975  001296  2ADF               	incf	indf2,f,c
  1976                           
  1977                           ;SlaveComm_PIC18.c: 503: if( send_buffer->read_position >= 40 )
  1978  001298  EE20 F029          	lfsr	2,41
  1979  00129C  5011               	movf	send_data@send_buffer,w,c
  1980  00129E  26D9               	addwf	fsr2l,f,c
  1981  0012A0  5012               	movf	send_data@send_buffer+1,w,c
  1982  0012A2  22DA               	addwfc	fsr2h,f,c
  1983  0012A4  0E27               	movlw	39
  1984  0012A6  64DF               	cpfsgt	indf2,c
  1985  0012A8  D008               	goto	l3223
  1986                           
  1987                           ;SlaveComm_PIC18.c: 504: {
  1988                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  1989  0012AA  EE20 F029          	lfsr	2,41
  1990  0012AE  5011               	movf	send_data@send_buffer,w,c
  1991  0012B0  26D9               	addwf	fsr2l,f,c
  1992  0012B2  5012               	movf	send_data@send_buffer+1,w,c
  1993  0012B4  22DA               	addwfc	fsr2h,f,c
  1994  0012B6  0E00               	movlw	0
  1995  0012B8  6EDF               	movwf	indf2,c
  1996  0012BA                     l3223:
  1997                           
  1998                           ;SlaveComm_PIC18.c: 506: }
  1999                           ;SlaveComm_PIC18.c: 507: }
  2000                           ;SlaveComm_PIC18.c: 508: }
  2001                           ;SlaveComm_PIC18.c: 510: return send_end;
  2002  0012BA  5015               	movf	send_data@send_end,w,c
  2003  0012BC  0012               	return	
  2004  0012BE                     __end_of_send_data:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           prodh	equ	0xFF4
  2008                           prodl	equ	0xFF3
  2009                           intcon	equ	0xFF2
  2010                           postinc0	equ	0xFEE
  2011                           wreg	equ	0xFE8
  2012                           postinc1	equ	0xFE6
  2013                           fsr1h	equ	0xFE2
  2014                           fsr1l	equ	0xFE1
  2015                           indf2	equ	0xFDF
  2016                           postinc2	equ	0xFDE
  2017                           fsr2h	equ	0xFDA
  2018                           fsr2l	equ	0xFD9
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _SPI_send_data *****************
  2022 ;; Defined at:
  2023 ;;		line 583 in file "SlaveComm_PIC18.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  data            1    wreg     unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  data            1   14[COMRAM] unsigned char 
  2028 ;;  sendGood        1   15[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      unsigned char 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2038 ;;      Params:         0       0       0       0       0       0       0
  2039 ;;      Locals:         2       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_send_data
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text11
  2053  0018DA                     __ptext11:
  2054                           	opt stack 0
  2055  0018DA                     _SPI_send_data:
  2056                           	opt stack 27
  2057                           
  2058                           ;incstack = 0
  2059                           ;SPI_send_data@data stored from wreg
  2060  0018DA  6E0F               	movwf	SPI_send_data@data,c
  2061                           
  2062                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2063  0018DC  0E00               	movlw	0
  2064  0018DE  6E10               	movwf	SPI_send_data@sendGood,c
  2065                           
  2066                           ;SlaveComm_PIC18.c: 587: if( SPI_transmit_wait == 0 )
  2067  0018E0  5045               	movf	_SPI_transmit_wait,w,c
  2068  0018E2  A4D8               	btfss	status,2,c
  2069  0018E4  D006               	goto	l3063
  2070                           
  2071                           ;SlaveComm_PIC18.c: 588: {
  2072                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  2073  0018E6  C00F  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2074                           
  2075                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  2076  0018EA  0E01               	movlw	1
  2077  0018EC  6E45               	movwf	_SPI_transmit_wait,c
  2078                           
  2079                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  2080  0018EE  0E01               	movlw	1
  2081  0018F0  D001               	goto	L1
  2082  0018F2                     l3063:
  2083                           
  2084                           ;SlaveComm_PIC18.c: 593: else
  2085                           ;SlaveComm_PIC18.c: 594: {
  2086                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  2087  0018F2  0E00               	movlw	0
  2088  0018F4                     L1:
  2089  0018F4  6E10               	movwf	SPI_send_data@sendGood,c
  2090                           
  2091                           ;SlaveComm_PIC18.c: 596: }
  2092                           ;SlaveComm_PIC18.c: 598: return sendGood;
  2093  0018F6  5010               	movf	SPI_send_data@sendGood,w,c
  2094  0018F8  0012               	return	
  2095  0018FA                     __end_of_SPI_send_data:
  2096                           	opt stack 0
  2097                           tblptru	equ	0xFF8
  2098                           prodh	equ	0xFF4
  2099                           prodl	equ	0xFF3
  2100                           intcon	equ	0xFF2
  2101                           postinc0	equ	0xFEE
  2102                           wreg	equ	0xFE8
  2103                           postinc1	equ	0xFE6
  2104                           fsr1h	equ	0xFE2
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           postinc2	equ	0xFDE
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _resetCommunications *****************
  2113 ;; Defined at:
  2114 ;;		line 152 in file "SlaveComm_PIC18.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  send_buffer     2   54[COMRAM] PTR struct buffer
  2117 ;;		 -> communications@send_buffer(42), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2129 ;;      Params:         2       0       0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0
  2131 ;;      Temps:          0       2       0       0       0       0       0
  2132 ;;      Totals:         2       2       0       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    5
  2136 ;; This function calls:
  2137 ;;		_com_command_setEnergyUsed
  2138 ;;		_com_command_setPower
  2139 ;;		_com_command_setVersion
  2140 ;; This function is called by:
  2141 ;;		_communications
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text12
  2146  0010F2                     __ptext12:
  2147                           	opt stack 0
  2148  0010F2                     _resetCommunications:
  2149                           	opt stack 24
  2150                           
  2151                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2152                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2153                           
  2154                           ;incstack = 0
  2155  0010F2  9A6C               	bcf	3948,5,c	;volatile
  2156                           
  2157                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  2158  0010F4  0E06               	movlw	6
  2159  0010F6  0100               	movlb	0	; () banked
  2160  0010F8  6FB4               	movwf	??_resetCommunications& (0+255),b
  2161  0010FA  0E30               	movlw	48
  2162  0010FC                     u2917:
  2163  0010FC  2EE8               	decfsz	wreg,f,c
  2164  0010FE  D7FE               	bra	u2917
  2165  001100  2FB4               	decfsz	??_resetCommunications& (0+255),f,b
  2166  001102  D7FC               	bra	u2917
  2167  001104  F000               	nop	
  2168                           
  2169                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  2170  001106  8A6C               	bsf	3948,5,c	;volatile
  2171                           
  2172                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  2173  001108  9E6C               	bcf	3948,7,c	;volatile
  2174                           
  2175                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  2176  00110A  0E00               	movlw	0
  2177  00110C  6E45               	movwf	_SPI_transmit_wait,c
  2178                           
  2179                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  2180  00110E  EE20 F029          	lfsr	2,41
  2181  001112  5037               	movf	resetCommunications@send_buffer,w,c
  2182  001114  26D9               	addwf	fsr2l,f,c
  2183  001116  5038               	movf	resetCommunications@send_buffer+1,w,c
  2184  001118  22DA               	addwfc	fsr2h,f,c
  2185  00111A  0E00               	movlw	0
  2186  00111C  6EDF               	movwf	indf2,c
  2187                           
  2188                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  2189  00111E  EE20 F028          	lfsr	2,40
  2190  001122  5037               	movf	resetCommunications@send_buffer,w,c
  2191  001124  26D9               	addwf	fsr2l,f,c
  2192  001126  5038               	movf	resetCommunications@send_buffer+1,w,c
  2193  001128  22DA               	addwfc	fsr2h,f,c
  2194  00112A  0E00               	movlw	0
  2195  00112C  6EDF               	movwf	indf2,c
  2196                           
  2197                           ;SlaveComm_PIC18.c: 171: commState++;
  2198  00112E  4A3D               	infsnz	resetCommunications@commState,f,c
  2199  001130  2A3E               	incf	resetCommunications@commState+1,f,c
  2200                           
  2201                           ;SlaveComm_PIC18.c: 172: switch( commState )
  2202  001132  D019               	goto	l3161
  2203  001134                     l3151:
  2204                           
  2205                           ;SlaveComm_PIC18.c: 175: com_command_setVersion( send_buffer );
  2206  001134  C037  F023         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2207  001138  C038  F024         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2208  00113C  EC24  F00C         	call	_com_command_setVersion	;wreg free
  2209                           
  2210                           ;SlaveComm_PIC18.c: 176: break;
  2211  001140  0012               	return	
  2212  001142                     l3153:
  2213                           
  2214                           ;SlaveComm_PIC18.c: 178: com_command_setPower( send_buffer );
  2215  001142  C037  F023         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2216  001146  C038  F024         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2217  00114A  EC6F  F00B         	call	_com_command_setPower	;wreg free
  2218                           
  2219                           ;SlaveComm_PIC18.c: 179: break;
  2220  00114E  0012               	return	
  2221  001150                     l3155:
  2222                           
  2223                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed( send_buffer );
  2224  001150  C037  F029         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2225  001154  C038  F02A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2226  001158  EC4A  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2227  00115C                     l3157:
  2228                           
  2229                           ;SlaveComm_PIC18.c: 193: commState = 0;
  2230  00115C  0E00               	movlw	0
  2231  00115E  6E3E               	movwf	resetCommunications@commState+1,c
  2232  001160  0E00               	movlw	0
  2233  001162  6E3D               	movwf	resetCommunications@commState,c
  2234                           
  2235                           ;SlaveComm_PIC18.c: 195: }
  2236                           
  2237                           ;SlaveComm_PIC18.c: 194: break;
  2238  001164  0012               	return	
  2239  001166                     l3161:
  2240  001166  C03D  F0B4         	movff	resetCommunications@commState,??_resetCommunications
  2241  00116A  C03E  F0B5         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2242                           
  2243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2244                           ; Switch size 1, requested type "space"
  2245                           ; Number of cases is 1, Range of values is 0 to 0
  2246                           ; switch strategies available:
  2247                           ; Name         Instructions Cycles
  2248                           ; simple_byte            4     3 (average)
  2249                           ;	Chosen strategy is simple_byte
  2250  00116E  0100               	movlb	0	; () banked
  2251  001170  51B5               	movf	(??_resetCommunications+1)& (0+255),w,b
  2252  001172  0A00               	xorlw	0	; case 0
  2253  001174  A4D8               	btfss	status,2,c
  2254  001176  D7F2               	goto	l3157
  2255                           
  2256                           ; BSR set to: 0
  2257                           ; Switch size 1, requested type "space"
  2258                           ; Number of cases is 3, Range of values is 1 to 3
  2259                           ; switch strategies available:
  2260                           ; Name         Instructions Cycles
  2261                           ; simple_byte           10     6 (average)
  2262                           ;	Chosen strategy is simple_byte
  2263  001178  0100               	movlb	0	; () banked
  2264  00117A  51B4               	movf	??_resetCommunications& (0+255),w,b
  2265  00117C  0A01               	xorlw	1	; case 1
  2266  00117E  B4D8               	btfsc	status,2,c
  2267  001180  D7D9               	goto	l3151
  2268  001182  0A03               	xorlw	3	; case 2
  2269  001184  B4D8               	btfsc	status,2,c
  2270  001186  D7DD               	goto	l3153
  2271  001188  0A01               	xorlw	1	; case 3
  2272  00118A  B4D8               	btfsc	status,2,c
  2273  00118C  D7E1               	goto	l3155
  2274  00118E  D7E6               	goto	l3157
  2275  001190                     __end_of_resetCommunications:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon	equ	0xFF2
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           postinc1	equ	0xFE6
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           fsr2h	equ	0xFDA
  2289                           fsr2l	equ	0xFD9
  2290                           status	equ	0xFD8
  2291                           
  2292 ;; *************** function _com_command_setVersion *****************
  2293 ;; Defined at:
  2294 ;;		line 665 in file "SlaveComm_PIC18.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2297 ;;		 -> communications@send_buffer(42), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2309 ;;      Params:         2       0       0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0
  2312 ;;      Totals:         2       0       0       0       0       0       0
  2313 ;;Total ram usage:        2 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    4
  2316 ;; This function calls:
  2317 ;;		_command_builder3
  2318 ;; This function is called by:
  2319 ;;		_resetCommunications
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text13
  2324  001848                     __ptext13:
  2325                           	opt stack 0
  2326  001848                     _com_command_setVersion:
  2327                           	opt stack 24
  2328                           
  2329                           ;SlaveComm_PIC18.c: 667: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2330                           
  2331                           ;incstack = 0
  2332  001848  C023  F01B         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2333  00184C  C024  F01C         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2334  001850  0E57               	movlw	low STR_2
  2335  001852  6E1D               	movwf	command_builder3@data1,c
  2336  001854  0E06               	movlw	high STR_2
  2337  001856  6E1E               	movwf	command_builder3@data1+1,c
  2338  001858  0E0D               	movlw	low STR_22
  2339  00185A  6E1F               	movwf	command_builder3@data2,c
  2340  00185C  0E06               	movlw	high STR_22
  2341  00185E  6E20               	movwf	command_builder3@data2+1,c
  2342  001860  0E4B               	movlw	low STR_40
  2343  001862  6E21               	movwf	command_builder3@data3,c
  2344  001864  0E06               	movlw	high STR_40
  2345  001866  6E22               	movwf	command_builder3@data3+1,c
  2346  001868  ECC8  F008         	call	_command_builder3	;wreg free
  2347  00186C  0012               	return		;funcret
  2348  00186E                     __end_of_com_command_setVersion:
  2349                           	opt stack 0
  2350                           tblptru	equ	0xFF8
  2351                           prodh	equ	0xFF4
  2352                           prodl	equ	0xFF3
  2353                           intcon	equ	0xFF2
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           postinc1	equ	0xFE6
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           indf2	equ	0xFDF
  2360                           postinc2	equ	0xFDE
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _com_command_setPower *****************
  2366 ;; Defined at:
  2367 ;;		line 618 in file "SlaveComm_PIC18.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2370 ;;		 -> communications@send_buffer(42), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  temp            7   36[COMRAM] unsigned char [7]
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2382 ;;      Params:         2       0       0       0       0       0       0
  2383 ;;      Locals:         7       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0
  2385 ;;      Totals:         9       0       0       0       0       0       0
  2386 ;;Total ram usage:        9 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    4
  2389 ;; This function calls:
  2390 ;;		_command_builder3
  2391 ;;		_utoa
  2392 ;; This function is called by:
  2393 ;;		_resetCommunications
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text14
  2398  0016DE                     __ptext14:
  2399                           	opt stack 0
  2400  0016DE                     _com_command_setPower:
  2401                           	opt stack 24
  2402                           
  2403                           ;SlaveComm_PIC18.c: 621: char temp[7];
  2404                           ;SlaveComm_PIC18.c: 623: utoa(temp, meterWatts, 10);
  2405                           
  2406                           ;incstack = 0
  2407  0016DE  0E25               	movlw	low com_command_setPower@temp
  2408  0016E0  6E16               	movwf	utoa@buf,c
  2409  0016E2  0E00               	movlw	high com_command_setPower@temp
  2410  0016E4  6E17               	movwf	utoa@buf+1,c
  2411  0016E6  C03F  F018         	movff	_meterWatts,utoa@val
  2412  0016EA  C040  F019         	movff	_meterWatts+1,utoa@val+1
  2413  0016EE  0E00               	movlw	0
  2414  0016F0  6E1B               	movwf	utoa@base+1,c
  2415  0016F2  0E0A               	movlw	10
  2416  0016F4  6E1A               	movwf	utoa@base,c
  2417  0016F6  EC27  F008         	call	_utoa	;wreg free
  2418                           
  2419                           ;SlaveComm_PIC18.c: 625: command_builder3( send_buffer, "Set", "Watts", temp );
  2420  0016FA  C023  F01B         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2421  0016FE  C024  F01C         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2422  001702  0E57               	movlw	low STR_2
  2423  001704  6E1D               	movwf	command_builder3@data1,c
  2424  001706  0E06               	movlw	high STR_2
  2425  001708  6E1E               	movwf	command_builder3@data1+1,c
  2426  00170A  0E24               	movlw	low STR_18
  2427  00170C  6E1F               	movwf	command_builder3@data2,c
  2428  00170E  0E06               	movlw	high STR_18
  2429  001710  6E20               	movwf	command_builder3@data2+1,c
  2430  001712  0E25               	movlw	low com_command_setPower@temp
  2431  001714  6E21               	movwf	command_builder3@data3,c
  2432  001716  0E00               	movlw	high com_command_setPower@temp
  2433  001718  6E22               	movwf	command_builder3@data3+1,c
  2434  00171A  ECC8  F008         	call	_command_builder3	;wreg free
  2435  00171E  0012               	return	
  2436  001720                     __end_of_com_command_setPower:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postinc1	equ	0xFE6
  2445                           fsr1h	equ	0xFE2
  2446                           fsr1l	equ	0xFE1
  2447                           indf2	equ	0xFDF
  2448                           postinc2	equ	0xFDE
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _utoa *****************
  2454 ;; Defined at:
  2455 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\itoa.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2458 ;;		 -> com_command_setPower@temp(7), 
  2459 ;;  val             2   23[COMRAM] unsigned int 
  2460 ;;  base            2   25[COMRAM] int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  v               2   27[COMRAM] unsigned int 
  2463 ;;  c               1   29[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2   21[COMRAM] PTR unsigned char 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         6       0       0       0       0       0       0
  2474 ;;      Locals:         3       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0
  2476 ;;      Totals:         9       0       0       0       0       0       0
  2477 ;;Total ram usage:        9 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    2
  2480 ;; This function calls:
  2481 ;;		___lwdiv
  2482 ;;		___lwmod
  2483 ;; This function is called by:
  2484 ;;		_com_command_setPower
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text15
  2489  00104E                     __ptext15:
  2490                           	opt stack 0
  2491  00104E                     _utoa:
  2492                           	opt stack 25
  2493                           
  2494                           ;incstack = 0
  2495  00104E  C018  F01C         	movff	utoa@val,utoa@v
  2496  001052  C019  F01D         	movff	utoa@val+1,utoa@v+1
  2497  001056                     l2885:
  2498  001056  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  2499  00105A  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  2500  00105E  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2501  001062  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2502  001066  ECF9  F00A         	call	___lwdiv	;wreg free
  2503  00106A  C00F  F01C         	movff	?___lwdiv,utoa@v
  2504  00106E  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2505  001072  4A16               	infsnz	utoa@buf,f,c
  2506  001074  2A17               	incf	utoa@buf+1,f,c
  2507  001076  501C               	movf	utoa@v,w,c
  2508  001078  101D               	iorwf	utoa@v+1,w,c
  2509  00107A  A4D8               	btfss	status,2,c
  2510  00107C  D7EC               	goto	l2885
  2511  00107E  C016  FFD9         	movff	utoa@buf,fsr2l
  2512  001082  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2513  001086  0E00               	movlw	0
  2514  001088  6EDF               	movwf	indf2,c
  2515  00108A  0616               	decf	utoa@buf,f,c
  2516  00108C  A0D8               	btfss	status,0,c
  2517  00108E  0617               	decf	utoa@buf+1,f,c
  2518  001090                     l2895:
  2519  001090  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2520  001094  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2521  001098  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2522  00109C  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2523  0010A0  EC90  F00B         	call	___lwmod	;wreg free
  2524  0010A4  500F               	movf	?___lwmod,w,c
  2525  0010A6  6E1E               	movwf	utoa@c,c
  2526  0010A8  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2527  0010AC  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2528  0010B0  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2529  0010B4  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2530  0010B8  ECF9  F00A         	call	___lwdiv	;wreg free
  2531  0010BC  C00F  F018         	movff	?___lwdiv,utoa@val
  2532  0010C0  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2533  0010C4  0E09               	movlw	9
  2534  0010C6  641E               	cpfsgt	utoa@c,c
  2535  0010C8  D002               	goto	l779
  2536  0010CA  0E07               	movlw	7
  2537  0010CC  261E               	addwf	utoa@c,f,c
  2538  0010CE                     l779:
  2539  0010CE  0E30               	movlw	48
  2540  0010D0  261E               	addwf	utoa@c,f,c
  2541  0010D2  C016  FFD9         	movff	utoa@buf,fsr2l
  2542  0010D6  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2543  0010DA  C01E  FFDF         	movff	utoa@c,indf2
  2544  0010DE  0616               	decf	utoa@buf,f,c
  2545  0010E0  A0D8               	btfss	status,0,c
  2546  0010E2  0617               	decf	utoa@buf+1,f,c
  2547  0010E4  5018               	movf	utoa@val,w,c
  2548  0010E6  1019               	iorwf	utoa@val+1,w,c
  2549  0010E8  A4D8               	btfss	status,2,c
  2550  0010EA  D7D2               	goto	l2895
  2551                           
  2552                           ;	Return value of _utoa is never used
  2553  0010EC  4A16               	infsnz	utoa@buf,f,c
  2554  0010EE  2A17               	incf	utoa@buf+1,f,c
  2555  0010F0  0012               	return	
  2556  0010F2                     __end_of_utoa:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           prodh	equ	0xFF4
  2560                           prodl	equ	0xFF3
  2561                           intcon	equ	0xFF2
  2562                           postinc0	equ	0xFEE
  2563                           wreg	equ	0xFE8
  2564                           postinc1	equ	0xFE6
  2565                           fsr1h	equ	0xFE2
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function ___lwmod *****************
  2574 ;; Defined at:
  2575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  dividend        2   14[COMRAM] unsigned int 
  2578 ;;  divisor         2   16[COMRAM] unsigned int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  counter         1   18[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2   14[COMRAM] unsigned int 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2590 ;;      Params:         4       0       0       0       0       0       0
  2591 ;;      Locals:         1       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0
  2593 ;;      Totals:         5       0       0       0       0       0       0
  2594 ;;Total ram usage:        5 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_utoa
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text16
  2605  001720                     __ptext16:
  2606                           	opt stack 0
  2607  001720                     ___lwmod:
  2608                           	opt stack 25
  2609                           
  2610                           ;incstack = 0
  2611  001720  5011               	movf	___lwmod@divisor,w,c
  2612  001722  1012               	iorwf	___lwmod@divisor+1,w,c
  2613  001724  B4D8               	btfsc	status,2,c
  2614  001726  D018               	goto	l882
  2615  001728  0E01               	movlw	1
  2616  00172A  6E13               	movwf	___lwmod@counter,c
  2617  00172C  D004               	goto	l2817
  2618  00172E                     l2815:
  2619  00172E  90D8               	bcf	status,0,c
  2620  001730  3611               	rlcf	___lwmod@divisor,f,c
  2621  001732  3612               	rlcf	___lwmod@divisor+1,f,c
  2622  001734  2A13               	incf	___lwmod@counter,f,c
  2623  001736                     l2817:
  2624  001736  AE12               	btfss	___lwmod@divisor+1,7,c
  2625  001738  D7FA               	goto	l2815
  2626  00173A                     l2819:
  2627  00173A  5011               	movf	___lwmod@divisor,w,c
  2628  00173C  5C0F               	subwf	___lwmod@dividend,w,c
  2629  00173E  5012               	movf	___lwmod@divisor+1,w,c
  2630  001740  5810               	subwfb	___lwmod@dividend+1,w,c
  2631  001742  A0D8               	btfss	status,0,c
  2632  001744  D004               	goto	l2823
  2633  001746  5011               	movf	___lwmod@divisor,w,c
  2634  001748  5E0F               	subwf	___lwmod@dividend,f,c
  2635  00174A  5012               	movf	___lwmod@divisor+1,w,c
  2636  00174C  5A10               	subwfb	___lwmod@dividend+1,f,c
  2637  00174E                     l2823:
  2638  00174E  90D8               	bcf	status,0,c
  2639  001750  3212               	rrcf	___lwmod@divisor+1,f,c
  2640  001752  3211               	rrcf	___lwmod@divisor,f,c
  2641  001754  2E13               	decfsz	___lwmod@counter,f,c
  2642  001756  D7F1               	goto	l2819
  2643  001758                     l882:
  2644  001758  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2645  00175C  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2646  001760  0012               	return		;funcret
  2647  001762                     __end_of___lwmod:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postinc1	equ	0xFE6
  2656                           fsr1h	equ	0xFE2
  2657                           fsr1l	equ	0xFE1
  2658                           indf2	equ	0xFDF
  2659                           postinc2	equ	0xFDE
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function ___lwdiv *****************
  2665 ;; Defined at:
  2666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  dividend        2   14[COMRAM] unsigned int 
  2669 ;;  divisor         2   16[COMRAM] unsigned int 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  quotient        2   19[COMRAM] unsigned int 
  2672 ;;  counter         1   18[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2   14[COMRAM] unsigned int 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         4       0       0       0       0       0       0
  2683 ;;      Locals:         3       0       0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0       0       0
  2685 ;;      Totals:         7       0       0       0       0       0       0
  2686 ;;Total ram usage:        7 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_utoa
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text17
  2697  0015F2                     __ptext17:
  2698                           	opt stack 0
  2699  0015F2                     ___lwdiv:
  2700                           	opt stack 25
  2701                           
  2702                           ;incstack = 0
  2703  0015F2  0E00               	movlw	0
  2704  0015F4  6E15               	movwf	___lwdiv@quotient+1,c
  2705  0015F6  0E00               	movlw	0
  2706  0015F8  6E14               	movwf	___lwdiv@quotient,c
  2707  0015FA  5011               	movf	___lwdiv@divisor,w,c
  2708  0015FC  1012               	iorwf	___lwdiv@divisor+1,w,c
  2709  0015FE  B4D8               	btfsc	status,2,c
  2710  001600  D01C               	goto	l872
  2711  001602  0E01               	movlw	1
  2712  001604  6E13               	movwf	___lwdiv@counter,c
  2713  001606  D004               	goto	l2797
  2714  001608                     l2795:
  2715  001608  90D8               	bcf	status,0,c
  2716  00160A  3611               	rlcf	___lwdiv@divisor,f,c
  2717  00160C  3612               	rlcf	___lwdiv@divisor+1,f,c
  2718  00160E  2A13               	incf	___lwdiv@counter,f,c
  2719  001610                     l2797:
  2720  001610  AE12               	btfss	___lwdiv@divisor+1,7,c
  2721  001612  D7FA               	goto	l2795
  2722  001614                     l2799:
  2723  001614  90D8               	bcf	status,0,c
  2724  001616  3614               	rlcf	___lwdiv@quotient,f,c
  2725  001618  3615               	rlcf	___lwdiv@quotient+1,f,c
  2726  00161A  5011               	movf	___lwdiv@divisor,w,c
  2727  00161C  5C0F               	subwf	___lwdiv@dividend,w,c
  2728  00161E  5012               	movf	___lwdiv@divisor+1,w,c
  2729  001620  5810               	subwfb	___lwdiv@dividend+1,w,c
  2730  001622  A0D8               	btfss	status,0,c
  2731  001624  D005               	goto	l2807
  2732  001626  5011               	movf	___lwdiv@divisor,w,c
  2733  001628  5E0F               	subwf	___lwdiv@dividend,f,c
  2734  00162A  5012               	movf	___lwdiv@divisor+1,w,c
  2735  00162C  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2736  00162E  8014               	bsf	___lwdiv@quotient,0,c
  2737  001630                     l2807:
  2738  001630  90D8               	bcf	status,0,c
  2739  001632  3212               	rrcf	___lwdiv@divisor+1,f,c
  2740  001634  3211               	rrcf	___lwdiv@divisor,f,c
  2741  001636  2E13               	decfsz	___lwdiv@counter,f,c
  2742  001638  D7ED               	goto	l2799
  2743  00163A                     l872:
  2744  00163A  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2745  00163E  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2746  001642  0012               	return		;funcret
  2747  001644                     __end_of___lwdiv:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           intcon	equ	0xFF2
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           postinc1	equ	0xFE6
  2756                           fsr1h	equ	0xFE2
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           fsr2h	equ	0xFDA
  2761                           fsr2l	equ	0xFD9
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _receive_data *****************
  2765 ;; Defined at:
  2766 ;;		line 199 in file "SlaveComm_PIC18.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  receive_buff    2   17[COMRAM] PTR struct buffer
  2769 ;;		 -> communications@receive_buffer(42), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  data            1   20[COMRAM] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      enum E6747
  2774 ;; Registers used:
  2775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2781 ;;      Params:         2       0       0       0       0       0       0
  2782 ;;      Locals:         1       0       0       0       0       0       0
  2783 ;;      Temps:          1       0       0       0       0       0       0
  2784 ;;      Totals:         4       0       0       0       0       0       0
  2785 ;;Total ram usage:        4 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    2
  2788 ;; This function calls:
  2789 ;;		_SPI_receive_data
  2790 ;; This function is called by:
  2791 ;;		_communications
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text18
  2796  000EE6                     __ptext18:
  2797                           	opt stack 0
  2798  000EE6                     _receive_data:
  2799                           	opt stack 27
  2800                           
  2801                           ;SlaveComm_PIC18.c: 201: char data;
  2802                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  2803                           ;SlaveComm_PIC18.c: 205: if( my_status == receive_end_command )
  2804                           
  2805                           ;incstack = 0
  2806  000EE6  0E02               	movlw	2
  2807  000EE8  1841               	xorwf	receive_data@my_status,w,c
  2808  000EEA  A4D8               	btfss	status,2,c
  2809  000EEC  D002               	goto	l3171
  2810                           
  2811                           ;SlaveComm_PIC18.c: 206: {
  2812                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  2813  000EEE  0E00               	movlw	0
  2814  000EF0  6E41               	movwf	receive_data@my_status,c
  2815  000EF2                     l3171:
  2816                           
  2817                           ;SlaveComm_PIC18.c: 208: }
  2818                           ;SlaveComm_PIC18.c: 210: if( SPI_receive_data( &data ) == 1 )
  2819  000EF2  0E15               	movlw	low receive_data@data
  2820  000EF4  6E0F               	movwf	SPI_receive_data@data,c
  2821  000EF6  0E00               	movlw	high receive_data@data
  2822  000EF8  6E10               	movwf	SPI_receive_data@data+1,c
  2823  000EFA  ECFD  F00B         	call	_SPI_receive_data	;wreg free
  2824  000EFE  06E8               	decf	wreg,f,c
  2825  000F00  A4D8               	btfss	status,2,c
  2826  000F02  D04F               	goto	l282
  2827                           
  2828                           ;SlaveComm_PIC18.c: 211: {
  2829                           ;SlaveComm_PIC18.c: 212: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2830  000F04  0E21               	movlw	33
  2831  000F06  1815               	xorwf	receive_data@data,w,c
  2832  000F08  A4D8               	btfss	status,2,c
  2833  000F0A  D015               	goto	l3183
  2834  000F0C  0441               	decf	receive_data@my_status,w,c
  2835  000F0E  B4D8               	btfsc	status,2,c
  2836  000F10  D012               	goto	l3183
  2837                           
  2838                           ;SlaveComm_PIC18.c: 213: {
  2839                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  2840  000F12  0E01               	movlw	1
  2841  000F14  6E41               	movwf	receive_data@my_status,c
  2842                           
  2843                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  2844  000F16  EE20 F029          	lfsr	2,41
  2845  000F1A  5012               	movf	receive_data@receive_buffer,w,c
  2846  000F1C  26D9               	addwf	fsr2l,f,c
  2847  000F1E  5013               	movf	receive_data@receive_buffer+1,w,c
  2848  000F20  22DA               	addwfc	fsr2h,f,c
  2849  000F22  0E00               	movlw	0
  2850  000F24  6EDF               	movwf	indf2,c
  2851                           
  2852                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  2853  000F26  EE20 F028          	lfsr	2,40
  2854  000F2A  5012               	movf	receive_data@receive_buffer,w,c
  2855  000F2C  26D9               	addwf	fsr2l,f,c
  2856  000F2E  5013               	movf	receive_data@receive_buffer+1,w,c
  2857  000F30  22DA               	addwfc	fsr2h,f,c
  2858  000F32  0E00               	movlw	0
  2859  000F34  6EDF               	movwf	indf2,c
  2860  000F36                     l3183:
  2861                           
  2862                           ;SlaveComm_PIC18.c: 217: }
  2863                           ;SlaveComm_PIC18.c: 219: if( my_status == receive_in_command )
  2864  000F36  0441               	decf	receive_data@my_status,w,c
  2865  000F38  A4D8               	btfss	status,2,c
  2866  000F3A  D02A               	goto	l3193
  2867                           
  2868                           ;SlaveComm_PIC18.c: 220: {
  2869                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2870  000F3C  EE20 F028          	lfsr	2,40
  2871  000F40  5012               	movf	receive_data@receive_buffer,w,c
  2872  000F42  26D9               	addwf	fsr2l,f,c
  2873  000F44  5013               	movf	receive_data@receive_buffer+1,w,c
  2874  000F46  22DA               	addwfc	fsr2h,f,c
  2875  000F48  50DF               	movf	indf2,w,c
  2876  000F4A  6E14               	movwf	??_receive_data& (0+255),c
  2877  000F4C  5014               	movf	??_receive_data,w,c
  2878  000F4E  0D01               	mullw	1
  2879  000F50  50F3               	movf	prodl,w,c
  2880  000F52  2412               	addwf	receive_data@receive_buffer,w,c
  2881  000F54  6ED9               	movwf	fsr2l,c
  2882  000F56  50F4               	movf	prodh,w,c
  2883  000F58  2013               	addwfc	receive_data@receive_buffer+1,w,c
  2884  000F5A  6EDA               	movwf	fsr2h,c
  2885  000F5C  C015  FFDF         	movff	receive_data@data,indf2
  2886                           
  2887                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  2888  000F60  EE20 F028          	lfsr	2,40
  2889  000F64  5012               	movf	receive_data@receive_buffer,w,c
  2890  000F66  26D9               	addwf	fsr2l,f,c
  2891  000F68  5013               	movf	receive_data@receive_buffer+1,w,c
  2892  000F6A  22DA               	addwfc	fsr2h,f,c
  2893  000F6C  2ADF               	incf	indf2,f,c
  2894                           
  2895                           ;SlaveComm_PIC18.c: 224: if( receive_buffer->write_position >= 40 )
  2896  000F6E  EE20 F028          	lfsr	2,40
  2897  000F72  5012               	movf	receive_data@receive_buffer,w,c
  2898  000F74  26D9               	addwf	fsr2l,f,c
  2899  000F76  5013               	movf	receive_data@receive_buffer+1,w,c
  2900  000F78  22DA               	addwfc	fsr2h,f,c
  2901  000F7A  0E27               	movlw	39
  2902  000F7C  64DF               	cpfsgt	indf2,c
  2903  000F7E  D008               	goto	l3193
  2904                           
  2905                           ;SlaveComm_PIC18.c: 225: {
  2906                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = ( 40 - 1 );
  2907  000F80  EE20 F028          	lfsr	2,40
  2908  000F84  5012               	movf	receive_data@receive_buffer,w,c
  2909  000F86  26D9               	addwf	fsr2l,f,c
  2910  000F88  5013               	movf	receive_data@receive_buffer+1,w,c
  2911  000F8A  22DA               	addwfc	fsr2h,f,c
  2912  000F8C  0E27               	movlw	39
  2913  000F8E  6EDF               	movwf	indf2,c
  2914  000F90                     l3193:
  2915                           
  2916                           ;SlaveComm_PIC18.c: 227: }
  2917                           ;SlaveComm_PIC18.c: 228: }
  2918                           ;SlaveComm_PIC18.c: 230: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  2919  000F90  0441               	decf	receive_data@my_status,w,c
  2920  000F92  A4D8               	btfss	status,2,c
  2921  000F94  D006               	goto	l282
  2922  000F96  0E2A               	movlw	42
  2923  000F98  1815               	xorwf	receive_data@data,w,c
  2924  000F9A  A4D8               	btfss	status,2,c
  2925  000F9C  D002               	goto	l282
  2926                           
  2927                           ;SlaveComm_PIC18.c: 231: {
  2928                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  2929  000F9E  0E02               	movlw	2
  2930  000FA0  6E41               	movwf	receive_data@my_status,c
  2931  000FA2                     l282:
  2932                           
  2933                           ;SlaveComm_PIC18.c: 233: }
  2934                           ;SlaveComm_PIC18.c: 234: }
  2935                           ;SlaveComm_PIC18.c: 236: return my_status;
  2936  000FA2  5041               	movf	receive_data@my_status,w,c
  2937  000FA4  0012               	return	
  2938  000FA6                     __end_of_receive_data:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           prodh	equ	0xFF4
  2942                           prodl	equ	0xFF3
  2943                           intcon	equ	0xFF2
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postinc1	equ	0xFE6
  2947                           fsr1h	equ	0xFE2
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           postinc2	equ	0xFDE
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _SPI_receive_data *****************
  2956 ;; Defined at:
  2957 ;;		line 562 in file "SlaveComm_PIC18.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  data            2   14[COMRAM] PTR unsigned char 
  2960 ;;		 -> receive_data@data(1), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  recvGood        1   16[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2972 ;;      Params:         2       0       0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0
  2975 ;;      Totals:         3       0       0       0       0       0       0
  2976 ;;Total ram usage:        3 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_receive_data
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text19
  2987  0017FA                     __ptext19:
  2988                           	opt stack 0
  2989  0017FA                     _SPI_receive_data:
  2990                           	opt stack 27
  2991                           
  2992                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  2993                           
  2994                           ;incstack = 0
  2995  0017FA  0E00               	movlw	0
  2996  0017FC  6E11               	movwf	SPI_receive_data@recvGood,c
  2997                           
  2998                           ;SlaveComm_PIC18.c: 567: if( SSP2STATbits.BF == 1 )
  2999  0017FE  A06D               	btfss	3949,0,c	;volatile
  3000  001800  D00C               	goto	l2945
  3001                           
  3002                           ;SlaveComm_PIC18.c: 568: {
  3003                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3004  001802  C00F  FFD9         	movff	SPI_receive_data@data,fsr2l
  3005  001806  C010  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3006  00180A  CF6F FFDF          	movff	3951,indf2	;volatile
  3007                           
  3008                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3009  00180E  0E01               	movlw	1
  3010  001810  6E11               	movwf	SPI_receive_data@recvGood,c
  3011                           
  3012                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3013  001812  9E6C               	bcf	3948,7,c	;volatile
  3014                           
  3015                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3016  001814  0E00               	movlw	0
  3017  001816  6E45               	movwf	_SPI_transmit_wait,c
  3018                           
  3019                           ;SlaveComm_PIC18.c: 573: }
  3020  001818  D002               	goto	l389
  3021  00181A                     l2945:
  3022                           
  3023                           ;SlaveComm_PIC18.c: 574: else
  3024                           ;SlaveComm_PIC18.c: 575: {
  3025                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3026  00181A  0E00               	movlw	0
  3027  00181C  6E11               	movwf	SPI_receive_data@recvGood,c
  3028  00181E                     l389:
  3029                           
  3030                           ;SlaveComm_PIC18.c: 577: }
  3031                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3032  00181E  5011               	movf	SPI_receive_data@recvGood,w,c
  3033  001820  0012               	return	
  3034  001822                     __end_of_SPI_receive_data:
  3035                           	opt stack 0
  3036                           tblptru	equ	0xFF8
  3037                           prodh	equ	0xFF4
  3038                           prodl	equ	0xFF3
  3039                           intcon	equ	0xFF2
  3040                           postinc0	equ	0xFEE
  3041                           wreg	equ	0xFE8
  3042                           postinc1	equ	0xFE6
  3043                           fsr1h	equ	0xFE2
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           postinc2	equ	0xFDE
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _process_data *****************
  3052 ;; Defined at:
  3053 ;;		line 239 in file "SlaveComm_PIC18.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  receive_buff    2    4[BANK0 ] PTR struct buffer
  3056 ;;		 -> communications@receive_buffer(42), 
  3057 ;;  send_buffer     2    6[BANK0 ] PTR struct buffer
  3058 ;;		 -> communications@send_buffer(42), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  parameters     50    8[BANK0 ] unsigned char [10][5]
  3061 ;;  end_of_trans    1   58[BANK0 ] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      unsigned char 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3071 ;;      Params:         0       4       0       0       0       0       0
  3072 ;;      Locals:         0      51       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0
  3074 ;;      Totals:         0      55       0       0       0       0       0
  3075 ;;Total ram usage:       55 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; Hardware stack levels required when called:    6
  3078 ;; This function calls:
  3079 ;;		_process_data_parameterize
  3080 ;;		_process_data_parameters
  3081 ;; This function is called by:
  3082 ;;		_communications
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text20
  3087  001762                     __ptext20:
  3088                           	opt stack 0
  3089  001762                     _process_data:
  3090                           	opt stack 23
  3091                           
  3092                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3093                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3094                           ;SlaveComm_PIC18.c: 248: process_data_parameterize( parameters, receive_buffer );
  3095                           
  3096                           ;incstack = 0
  3097  001762  0EBC               	movlw	low process_data@parameters
  3098  001764  6E15               	movwf	process_data_parameterize@parameters,c
  3099  001766  0E00               	movlw	high process_data@parameters
  3100  001768  6E16               	movwf	process_data_parameterize@parameters+1,c
  3101  00176A  C0B8  F017         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3102  00176E  C0B9  F018         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3103  001772  EC9B  F004         	call	_process_data_parameterize	;wreg free
  3104                           
  3105                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3106  001776  0EBC               	movlw	low process_data@parameters
  3107  001778  0100               	movlb	0	; () banked
  3108  00177A  6FB4               	movwf	process_data_parameters@parameters& (0+255),b
  3109  00177C  0E00               	movlw	high process_data@parameters
  3110  00177E  0100               	movlb	0	; () banked
  3111  001780  6FB5               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3112  001782  C0BA  F0B6         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3113  001786  C0BB  F0B7         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3114  00178A  EC30  F003         	call	_process_data_parameters	;wreg free
  3115  00178E  0100               	movlb	0	; () banked
  3116  001790  6FEE               	movwf	process_data@end_of_transmission_received& (0+255),b
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3120  001792  0100               	movlb	0	; () banked
  3121  001794  51EE               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3122  001796  0012               	return	
  3123  001798                     __end_of_process_data:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           postinc0	equ	0xFEE
  3130                           wreg	equ	0xFE8
  3131                           postinc1	equ	0xFE6
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           indf2	equ	0xFDF
  3135                           postinc2	equ	0xFDE
  3136                           fsr2h	equ	0xFDA
  3137                           fsr2l	equ	0xFD9
  3138                           status	equ	0xFD8
  3139                           
  3140 ;; *************** function _process_data_parameters *****************
  3141 ;; Defined at:
  3142 ;;		line 315 in file "SlaveComm_PIC18.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  parameters      2    0[BANK0 ] PTR unsigned char [10]
  3145 ;;		 -> process_data@parameters(50), 
  3146 ;;  send_buffer     2    2[BANK0 ] PTR struct buffer
  3147 ;;		 -> communications@send_buffer(42), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  end_of_trans    1   54[COMRAM] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      unsigned char 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3159 ;;      Params:         0       4       0       0       0       0       0
  3160 ;;      Locals:         1       0       0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0
  3162 ;;      Totals:         1       4       0       0       0       0       0
  3163 ;;Total ram usage:        5 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    5
  3166 ;; This function calls:
  3167 ;;		_atol
  3168 ;;		_com_command_setEnergyUsed
  3169 ;;		_command_builder3
  3170 ;;		_send_end_of_transmission
  3171 ;;		_strmatch
  3172 ;; This function is called by:
  3173 ;;		_process_data
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text21
  3178  000660                     __ptext21:
  3179                           	opt stack 0
  3180  000660                     _process_data_parameters:
  3181                           	opt stack 23
  3182                           
  3183                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;incstack = 0
  3187  000660  0E00               	movlw	0
  3188  000662  6E37               	movwf	process_data_parameters@end_of_transmission_received,c
  3189                           
  3190                           ;SlaveComm_PIC18.c: 320: if( strmatch( parameters[0], "END" ) == 1 )
  3191  000664  C0B4  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3192  000668  C0B5  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3193  00066C  0E4F               	movlw	low STR_1
  3194  00066E  6E1C               	movwf	strmatch@b,c
  3195  000670  0E06               	movlw	high STR_1
  3196  000672  6E1D               	movwf	strmatch@b+1,c
  3197  000674  ECE5  F00B         	call	_strmatch	;wreg free
  3198  000678  06E8               	decf	wreg,f,c
  3199  00067A  A4D8               	btfss	status,2,c
  3200  00067C  D003               	goto	l2997
  3201                           
  3202                           ;SlaveComm_PIC18.c: 321: {
  3203                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3204  00067E  0E01               	movlw	1
  3205  000680  6E37               	movwf	process_data_parameters@end_of_transmission_received,c
  3206                           
  3207                           ;SlaveComm_PIC18.c: 332: }
  3208  000682  D157               	goto	l3051
  3209  000684                     l2997:
  3210                           
  3211                           ;SlaveComm_PIC18.c: 333: else if( strmatch( parameters[0], "Set" ) == 1 )
  3212  000684  C0B4  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3213  000688  C0B5  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3214  00068C  0E57               	movlw	low STR_2
  3215  00068E  6E1C               	movwf	strmatch@b,c
  3216  000690  0E06               	movlw	high STR_2
  3217  000692  6E1D               	movwf	strmatch@b+1,c
  3218  000694  ECE5  F00B         	call	_strmatch	;wreg free
  3219  000698  06E8               	decf	wreg,f,c
  3220  00069A  A4D8               	btfss	status,2,c
  3221  00069C  D03B               	goto	l3009
  3222                           
  3223                           ;SlaveComm_PIC18.c: 334: {
  3224                           ;SlaveComm_PIC18.c: 335: if( strmatch( parameters[1], "Calibration" ) == 1 )
  3225  00069E  0E0A               	movlw	10
  3226  0006A0  0100               	movlb	0	; () banked
  3227  0006A2  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3228  0006A4  6E1A               	movwf	strmatch@a,c
  3229  0006A6  0E00               	movlw	0
  3230  0006A8  0100               	movlb	0	; () banked
  3231  0006AA  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3232  0006AC  6E1B               	movwf	strmatch@a+1,c
  3233  0006AE  0E01               	movlw	low STR_3
  3234  0006B0  6E1C               	movwf	strmatch@b,c
  3235  0006B2  0E06               	movlw	high STR_3
  3236  0006B4  6E1D               	movwf	strmatch@b+1,c
  3237  0006B6  ECE5  F00B         	call	_strmatch	;wreg free
  3238  0006BA  06E8               	decf	wreg,f,c
  3239  0006BC  B4D8               	btfsc	status,2,c
  3240  0006BE  D139               	goto	l3051
  3241                           
  3242                           ;SlaveComm_PIC18.c: 339: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3243                           
  3244                           ;SlaveComm_PIC18.c: 336: {
  3245                           ;SlaveComm_PIC18.c: 338: }
  3246  0006C0  0E0A               	movlw	10
  3247  0006C2  0100               	movlb	0	; () banked
  3248  0006C4  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3249  0006C6  6E1A               	movwf	strmatch@a,c
  3250  0006C8  0E00               	movlw	0
  3251  0006CA  0100               	movlb	0	; () banked
  3252  0006CC  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3253  0006CE  6E1B               	movwf	strmatch@a+1,c
  3254  0006D0  0E17               	movlw	low STR_4
  3255  0006D2  6E1C               	movwf	strmatch@b,c
  3256  0006D4  0E06               	movlw	high STR_4
  3257  0006D6  6E1D               	movwf	strmatch@b+1,c
  3258  0006D8  ECE5  F00B         	call	_strmatch	;wreg free
  3259  0006DC  06E8               	decf	wreg,f,c
  3260  0006DE  A4D8               	btfss	status,2,c
  3261  0006E0  D128               	goto	l3051
  3262                           
  3263                           ;SlaveComm_PIC18.c: 340: {
  3264                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol( parameters[2] );
  3265  0006E2  0E14               	movlw	20
  3266  0006E4  0100               	movlb	0	; () banked
  3267  0006E6  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3268  0006E8  6E1B               	movwf	atol@s,c
  3269  0006EA  0E00               	movlw	0
  3270  0006EC  0100               	movlb	0	; () banked
  3271  0006EE  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3272  0006F0  6E1C               	movwf	atol@s+1,c
  3273  0006F2  EC7C  F006         	call	_atol	;wreg free
  3274  0006F6  C01B  F039         	movff	?_atol,_meterEnergyUsed
  3275  0006FA  C01C  F03A         	movff	?_atol+1,_meterEnergyUsed+1
  3276  0006FE  C01D  F03B         	movff	?_atol+2,_meterEnergyUsed+2
  3277  000702  C01E  F03C         	movff	?_atol+3,_meterEnergyUsed+3
  3278                           
  3279                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed( send_buffer );
  3280  000706  C0B6  F029         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3281  00070A  C0B7  F02A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3282  00070E  EC4A  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3283                           
  3284                           ;SlaveComm_PIC18.c: 347: }
  3285                           ;SlaveComm_PIC18.c: 352: }
  3286  000712  D10F               	goto	l3051
  3287  000714                     l3009:
  3288                           
  3289                           ;SlaveComm_PIC18.c: 353: else if( strmatch( parameters[0], "Read" ) == 1 )
  3290  000714  C0B4  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3291  000718  C0B5  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3292  00071C  0E34               	movlw	low STR_5
  3293  00071E  6E1C               	movwf	strmatch@b,c
  3294  000720  0E06               	movlw	high STR_5
  3295  000722  6E1D               	movwf	strmatch@b+1,c
  3296  000724  ECE5  F00B         	call	_strmatch	;wreg free
  3297  000728  06E8               	decf	wreg,f,c
  3298  00072A  B4D8               	btfsc	status,2,c
  3299  00072C  D102               	goto	l3051
  3300                           
  3301                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[0], "Data" ) == 1 )
  3302                           
  3303                           ;SlaveComm_PIC18.c: 354: {
  3304                           ;SlaveComm_PIC18.c: 356: }
  3305  00072E  C0B4  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3306  000732  C0B5  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3307  000736  0E2F               	movlw	low STR_6
  3308  000738  6E1C               	movwf	strmatch@b,c
  3309  00073A  0E06               	movlw	high STR_6
  3310  00073C  6E1D               	movwf	strmatch@b+1,c
  3311  00073E  ECE5  F00B         	call	_strmatch	;wreg free
  3312  000742  06E8               	decf	wreg,f,c
  3313  000744  A4D8               	btfss	status,2,c
  3314  000746  D059               	goto	l3025
  3315                           
  3316                           ;SlaveComm_PIC18.c: 358: {
  3317                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3318  000748  0E0A               	movlw	10
  3319  00074A  0100               	movlb	0	; () banked
  3320  00074C  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3321  00074E  6E1A               	movwf	strmatch@a,c
  3322  000750  0E00               	movlw	0
  3323  000752  0100               	movlb	0	; () banked
  3324  000754  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3325  000756  6E1B               	movwf	strmatch@a+1,c
  3326  000758  0E2A               	movlw	low STR_7
  3327  00075A  6E1C               	movwf	strmatch@b,c
  3328  00075C  0E06               	movlw	high STR_7
  3329  00075E  6E1D               	movwf	strmatch@b+1,c
  3330  000760  ECE5  F00B         	call	_strmatch	;wreg free
  3331  000764  06E8               	decf	wreg,f,c
  3332  000766  A4D8               	btfss	status,2,c
  3333  000768  D0E4               	goto	l3051
  3334                           
  3335                           ;SlaveComm_PIC18.c: 360: {
  3336                           ;SlaveComm_PIC18.c: 361: if( strmatch( parameters[2], "On" ) == 1 )
  3337  00076A  0E14               	movlw	20
  3338  00076C  0100               	movlb	0	; () banked
  3339  00076E  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3340  000770  6E1A               	movwf	strmatch@a,c
  3341  000772  0E00               	movlw	0
  3342  000774  0100               	movlb	0	; () banked
  3343  000776  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3344  000778  6E1B               	movwf	strmatch@a+1,c
  3345  00077A  0E5B               	movlw	low STR_8
  3346  00077C  6E1C               	movwf	strmatch@b,c
  3347  00077E  0E06               	movlw	high STR_8
  3348  000780  6E1D               	movwf	strmatch@b+1,c
  3349  000782  ECE5  F00B         	call	_strmatch	;wreg free
  3350  000786  06E8               	decf	wreg,f,c
  3351  000788  A4D8               	btfss	status,2,c
  3352  00078A  D013               	goto	l3021
  3353                           
  3354                           ;SlaveComm_PIC18.c: 362: {
  3355                           ;SlaveComm_PIC18.c: 363: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  3356  00078C  C0B6  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3357  000790  C0B7  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3358  000794  0E57               	movlw	low STR_2
  3359  000796  6E1D               	movwf	command_builder3@data1,c
  3360  000798  0E06               	movlw	high STR_2
  3361  00079A  6E1E               	movwf	command_builder3@data1+1,c
  3362  00079C  0E2A               	movlw	low STR_7
  3363  00079E  6E1F               	movwf	command_builder3@data2,c
  3364  0007A0  0E06               	movlw	high STR_7
  3365  0007A2  6E20               	movwf	command_builder3@data2+1,c
  3366  0007A4  0E53               	movlw	low STR_11
  3367  0007A6  6E21               	movwf	command_builder3@data3,c
  3368  0007A8  0E06               	movlw	high STR_11
  3369  0007AA  6E22               	movwf	command_builder3@data3+1,c
  3370  0007AC  ECC8  F008         	call	_command_builder3	;wreg free
  3371                           
  3372                           ;SlaveComm_PIC18.c: 364: }
  3373  0007B0  D0C0               	goto	l3051
  3374  0007B2                     l3021:
  3375                           
  3376                           ;SlaveComm_PIC18.c: 365: else if( strmatch( parameters[2], "Off" ) == 1 )
  3377  0007B2  0E14               	movlw	20
  3378  0007B4  0100               	movlb	0	; () banked
  3379  0007B6  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3380  0007B8  6E1A               	movwf	strmatch@a,c
  3381  0007BA  0E00               	movlw	0
  3382  0007BC  0100               	movlb	0	; () banked
  3383  0007BE  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3384  0007C0  6E1B               	movwf	strmatch@a+1,c
  3385  0007C2  0E53               	movlw	low STR_11
  3386  0007C4  6E1C               	movwf	strmatch@b,c
  3387  0007C6  0E06               	movlw	high STR_11
  3388  0007C8  6E1D               	movwf	strmatch@b+1,c
  3389  0007CA  ECE5  F00B         	call	_strmatch	;wreg free
  3390  0007CE  06E8               	decf	wreg,f,c
  3391  0007D0  A4D8               	btfss	status,2,c
  3392  0007D2  D0AF               	goto	l3051
  3393                           
  3394                           ;SlaveComm_PIC18.c: 366: {
  3395                           ;SlaveComm_PIC18.c: 367: command_builder3( send_buffer, "Set", "LEDB", "On" );
  3396  0007D4  C0B6  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3397  0007D8  C0B7  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3398  0007DC  0E57               	movlw	low STR_2
  3399  0007DE  6E1D               	movwf	command_builder3@data1,c
  3400  0007E0  0E06               	movlw	high STR_2
  3401  0007E2  6E1E               	movwf	command_builder3@data1+1,c
  3402  0007E4  0E2A               	movlw	low STR_7
  3403  0007E6  6E1F               	movwf	command_builder3@data2,c
  3404  0007E8  0E06               	movlw	high STR_7
  3405  0007EA  6E20               	movwf	command_builder3@data2+1,c
  3406  0007EC  0E5B               	movlw	low STR_8
  3407  0007EE  6E21               	movwf	command_builder3@data3,c
  3408  0007F0  0E06               	movlw	high STR_8
  3409  0007F2  6E22               	movwf	command_builder3@data3+1,c
  3410  0007F4  ECC8  F008         	call	_command_builder3	;wreg free
  3411                           
  3412                           ;SlaveComm_PIC18.c: 368: }
  3413                           ;SlaveComm_PIC18.c: 369: }
  3414                           ;SlaveComm_PIC18.c: 370: }
  3415  0007F8  D09C               	goto	l3051
  3416  0007FA                     l3025:
  3417                           
  3418                           ;SlaveComm_PIC18.c: 371: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3419  0007FA  C0B4  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3420  0007FE  C0B5  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3421  000802  0E39               	movlw	low STR_16
  3422  000804  6E1C               	movwf	strmatch@b,c
  3423  000806  0E06               	movlw	high STR_16
  3424  000808  6E1D               	movwf	strmatch@b+1,c
  3425  00080A  ECE5  F00B         	call	_strmatch	;wreg free
  3426  00080E  06E8               	decf	wreg,f,c
  3427  000810  A4D8               	btfss	status,2,c
  3428  000812  D08F               	goto	l3051
  3429                           
  3430                           ;SlaveComm_PIC18.c: 372: {
  3431                           ;SlaveComm_PIC18.c: 373: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3432  000814  0E0A               	movlw	10
  3433  000816  0100               	movlb	0	; () banked
  3434  000818  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3435  00081A  6E1A               	movwf	strmatch@a,c
  3436  00081C  0E00               	movlw	0
  3437  00081E  0100               	movlb	0	; () banked
  3438  000820  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3439  000822  6E1B               	movwf	strmatch@a+1,c
  3440  000824  0E2A               	movlw	low STR_7
  3441  000826  6E1C               	movwf	strmatch@b,c
  3442  000828  0E06               	movlw	high STR_7
  3443  00082A  6E1D               	movwf	strmatch@b+1,c
  3444  00082C  ECE5  F00B         	call	_strmatch	;wreg free
  3445  000830  06E8               	decf	wreg,f,c
  3446  000832  A4D8               	btfss	status,2,c
  3447  000834  D007               	goto	l3031
  3448                           
  3449                           ;SlaveComm_PIC18.c: 374: {
  3450                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission( send_buffer );
  3451  000836  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3452  00083A  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3453  00083E  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3454                           
  3455                           ;SlaveComm_PIC18.c: 376: }
  3456  000842  D077               	goto	l3051
  3457  000844                     l3031:
  3458                           
  3459                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3460  000844  0E0A               	movlw	10
  3461  000846  0100               	movlb	0	; () banked
  3462  000848  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3463  00084A  6E1A               	movwf	strmatch@a,c
  3464  00084C  0E00               	movlw	0
  3465  00084E  0100               	movlb	0	; () banked
  3466  000850  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3467  000852  6E1B               	movwf	strmatch@a+1,c
  3468  000854  0E24               	movlw	low STR_18
  3469  000856  6E1C               	movwf	strmatch@b,c
  3470  000858  0E06               	movlw	high STR_18
  3471  00085A  6E1D               	movwf	strmatch@b+1,c
  3472  00085C  ECE5  F00B         	call	_strmatch	;wreg free
  3473  000860  06E8               	decf	wreg,f,c
  3474  000862  A4D8               	btfss	status,2,c
  3475  000864  D007               	goto	l3035
  3476                           
  3477                           ;SlaveComm_PIC18.c: 378: {
  3478                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission( send_buffer );
  3479  000866  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3480  00086A  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3481  00086E  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3482                           
  3483                           ;SlaveComm_PIC18.c: 380: }
  3484  000872  D05F               	goto	l3051
  3485  000874                     l3035:
  3486                           
  3487                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3488  000874  0E0A               	movlw	10
  3489  000876  0100               	movlb	0	; () banked
  3490  000878  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3491  00087A  6E1A               	movwf	strmatch@a,c
  3492  00087C  0E00               	movlw	0
  3493  00087E  0100               	movlb	0	; () banked
  3494  000880  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3495  000882  6E1B               	movwf	strmatch@a+1,c
  3496  000884  0E17               	movlw	low STR_4
  3497  000886  6E1C               	movwf	strmatch@b,c
  3498  000888  0E06               	movlw	high STR_4
  3499  00088A  6E1D               	movwf	strmatch@b+1,c
  3500  00088C  ECE5  F00B         	call	_strmatch	;wreg free
  3501  000890  06E8               	decf	wreg,f,c
  3502  000892  A4D8               	btfss	status,2,c
  3503  000894  D007               	goto	l3039
  3504                           
  3505                           ;SlaveComm_PIC18.c: 382: {
  3506                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission( send_buffer );
  3507  000896  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3508  00089A  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3509  00089E  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3510                           
  3511                           ;SlaveComm_PIC18.c: 384: }
  3512  0008A2  D047               	goto	l3051
  3513  0008A4                     l3039:
  3514                           
  3515                           ;SlaveComm_PIC18.c: 385: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3516  0008A4  0E0A               	movlw	10
  3517  0008A6  0100               	movlb	0	; () banked
  3518  0008A8  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3519  0008AA  6E1A               	movwf	strmatch@a,c
  3520  0008AC  0E00               	movlw	0
  3521  0008AE  0100               	movlb	0	; () banked
  3522  0008B0  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3523  0008B2  6E1B               	movwf	strmatch@a+1,c
  3524  0008B4  0E1E               	movlw	low STR_20
  3525  0008B6  6E1C               	movwf	strmatch@b,c
  3526  0008B8  0E06               	movlw	high STR_20
  3527  0008BA  6E1D               	movwf	strmatch@b+1,c
  3528  0008BC  ECE5  F00B         	call	_strmatch	;wreg free
  3529  0008C0  06E8               	decf	wreg,f,c
  3530  0008C2  A4D8               	btfss	status,2,c
  3531  0008C4  D007               	goto	l3043
  3532                           
  3533                           ;SlaveComm_PIC18.c: 386: {
  3534                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission( send_buffer );
  3535  0008C6  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3536  0008CA  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3537  0008CE  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3538                           
  3539                           ;SlaveComm_PIC18.c: 388: }
  3540  0008D2  D02F               	goto	l3051
  3541  0008D4                     l3043:
  3542                           
  3543                           ;SlaveComm_PIC18.c: 389: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3544  0008D4  0E0A               	movlw	10
  3545  0008D6  0100               	movlb	0	; () banked
  3546  0008D8  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3547  0008DA  6E1A               	movwf	strmatch@a,c
  3548  0008DC  0E00               	movlw	0
  3549  0008DE  0100               	movlb	0	; () banked
  3550  0008E0  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3551  0008E2  6E1B               	movwf	strmatch@a+1,c
  3552  0008E4  0E3E               	movlw	low STR_21
  3553  0008E6  6E1C               	movwf	strmatch@b,c
  3554  0008E8  0E06               	movlw	high STR_21
  3555  0008EA  6E1D               	movwf	strmatch@b+1,c
  3556  0008EC  ECE5  F00B         	call	_strmatch	;wreg free
  3557  0008F0  06E8               	decf	wreg,f,c
  3558  0008F2  A4D8               	btfss	status,2,c
  3559  0008F4  D007               	goto	l3047
  3560                           
  3561                           ;SlaveComm_PIC18.c: 390: {
  3562                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission( send_buffer );
  3563  0008F6  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3564  0008FA  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3565  0008FE  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3566                           
  3567                           ;SlaveComm_PIC18.c: 392: }
  3568  000902  D017               	goto	l3051
  3569  000904                     l3047:
  3570                           
  3571                           ;SlaveComm_PIC18.c: 393: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3572  000904  0E0A               	movlw	10
  3573  000906  0100               	movlb	0	; () banked
  3574  000908  25B4               	addwf	process_data_parameters@parameters& (0+255),w,b
  3575  00090A  6E1A               	movwf	strmatch@a,c
  3576  00090C  0E00               	movlw	0
  3577  00090E  0100               	movlb	0	; () banked
  3578  000910  21B5               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3579  000912  6E1B               	movwf	strmatch@a+1,c
  3580  000914  0E0D               	movlw	low STR_22
  3581  000916  6E1C               	movwf	strmatch@b,c
  3582  000918  0E06               	movlw	high STR_22
  3583  00091A  6E1D               	movwf	strmatch@b+1,c
  3584  00091C  ECE5  F00B         	call	_strmatch	;wreg free
  3585  000920  06E8               	decf	wreg,f,c
  3586  000922  A4D8               	btfss	status,2,c
  3587  000924  D006               	goto	l3051
  3588                           
  3589                           ;SlaveComm_PIC18.c: 394: {
  3590                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission( send_buffer );
  3591  000926  C0B6  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3592  00092A  C0B7  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3593  00092E  ECA4  F00C         	call	_send_end_of_transmission	;wreg free
  3594  000932                     l3051:
  3595                           
  3596                           ;SlaveComm_PIC18.c: 396: }
  3597                           ;SlaveComm_PIC18.c: 397: }
  3598                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  3599  000932  5037               	movf	process_data_parameters@end_of_transmission_received,w,c
  3600  000934  0012               	return	
  3601  000936                     __end_of_process_data_parameters:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           postinc0	equ	0xFEE
  3608                           wreg	equ	0xFE8
  3609                           postinc1	equ	0xFE6
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           fsr2h	equ	0xFDA
  3615                           fsr2l	equ	0xFD9
  3616                           status	equ	0xFD8
  3617                           
  3618 ;; *************** function _strmatch *****************
  3619 ;; Defined at:
  3620 ;;		line 513 in file "SlaveComm_PIC18.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  a               2   25[COMRAM] PTR unsigned char 
  3623 ;;		 -> process_data@parameters(50), 
  3624 ;;  b               2   27[COMRAM] PTR unsigned char 
  3625 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3626 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3627 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3628 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  result          2   29[COMRAM] int 
  3631 ;;  match           1   31[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      unsigned char 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3641 ;;      Params:         4       0       0       0       0       0       0
  3642 ;;      Locals:         3       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0
  3644 ;;      Totals:         7       0       0       0       0       0       0
  3645 ;;Total ram usage:        7 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    2
  3648 ;; This function calls:
  3649 ;;		_strcmp2
  3650 ;; This function is called by:
  3651 ;;		_process_data_parameters
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text22
  3656  0017CA                     __ptext22:
  3657                           	opt stack 0
  3658  0017CA                     _strmatch:
  3659                           	opt stack 25
  3660                           
  3661                           ;SlaveComm_PIC18.c: 515: int result;
  3662                           ;SlaveComm_PIC18.c: 516: bool match;
  3663                           ;SlaveComm_PIC18.c: 518: result = strcmp2( a, b );
  3664                           
  3665                           ;incstack = 0
  3666  0017CA  C01A  F00F         	movff	strmatch@a,strcmp2@a
  3667  0017CE  C01B  F010         	movff	strmatch@a+1,strcmp2@a+1
  3668  0017D2  C01C  F011         	movff	strmatch@b,strcmp2@b
  3669  0017D6  C01D  F012         	movff	strmatch@b+1,strcmp2@b+1
  3670  0017DA  EC5B  F005         	call	_strcmp2	;wreg free
  3671  0017DE  C00F  F01E         	movff	?_strcmp2,strmatch@result
  3672  0017E2  C010  F01F         	movff	?_strcmp2+1,strmatch@result+1
  3673                           
  3674                           ;SlaveComm_PIC18.c: 520: match = ( result == 0 ) ? 1 : 0;
  3675  0017E6  501E               	movf	strmatch@result,w,c
  3676  0017E8  101F               	iorwf	strmatch@result+1,w,c
  3677  0017EA  A4D8               	btfss	status,2,c
  3678  0017EC  D002               	goto	u2220
  3679  0017EE  0E01               	movlw	1
  3680  0017F0  D001               	goto	u2230
  3681  0017F2                     u2220:
  3682  0017F2  0E00               	movlw	0
  3683  0017F4                     u2230:
  3684  0017F4  6E20               	movwf	strmatch@match,c
  3685                           
  3686                           ;SlaveComm_PIC18.c: 522: return match;
  3687  0017F6  5020               	movf	strmatch@match,w,c
  3688  0017F8  0012               	return	
  3689  0017FA                     __end_of_strmatch:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           postinc1	equ	0xFE6
  3698                           fsr1h	equ	0xFE2
  3699                           fsr1l	equ	0xFE1
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _strcmp2 *****************
  3707 ;; Defined at:
  3708 ;;		line 525 in file "SlaveComm_PIC18.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  a               2   14[COMRAM] PTR unsigned char 
  3711 ;;		 -> process_data@parameters(50), 
  3712 ;;  b               2   16[COMRAM] PTR unsigned char 
  3713 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3714 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3715 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3716 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  inx             2   23[COMRAM] int 
  3719 ;;  match           2   21[COMRAM] int 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2   14[COMRAM] int 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3729 ;;      Params:         4       0       0       0       0       0       0
  3730 ;;      Locals:         4       0       0       0       0       0       0
  3731 ;;      Temps:          3       0       0       0       0       0       0
  3732 ;;      Totals:        11       0       0       0       0       0       0
  3733 ;;Total ram usage:       11 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_strmatch
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text23
  3744  000AB6                     __ptext23:
  3745                           	opt stack 0
  3746  000AB6                     _strcmp2:
  3747                           	opt stack 25
  3748                           
  3749                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  3750                           
  3751                           ;incstack = 0
  3752  000AB6  0E00               	movlw	0
  3753  000AB8  6E19               	movwf	strcmp2@inx+1,c
  3754  000ABA  0E00               	movlw	0
  3755  000ABC  6E18               	movwf	strcmp2@inx,c
  3756                           
  3757                           ;SlaveComm_PIC18.c: 528: int match = 0;
  3758  000ABE  0E00               	movlw	0
  3759  000AC0  6E17               	movwf	strcmp2@match+1,c
  3760  000AC2  0E00               	movlw	0
  3761  000AC4  6E16               	movwf	strcmp2@match,c
  3762                           
  3763                           ;SlaveComm_PIC18.c: 530: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  3764  000AC6  D035               	goto	l2719
  3765  000AC8                     l2707:
  3766                           
  3767                           ;SlaveComm_PIC18.c: 531: {
  3768                           ;SlaveComm_PIC18.c: 532: if( a[inx] > b[inx] )
  3769  000AC8  5018               	movf	strcmp2@inx,w,c
  3770  000ACA  240F               	addwf	strcmp2@a,w,c
  3771  000ACC  6ED9               	movwf	fsr2l,c
  3772  000ACE  5019               	movf	strcmp2@inx+1,w,c
  3773  000AD0  2010               	addwfc	strcmp2@a+1,w,c
  3774  000AD2  6EDA               	movwf	fsr2h,c
  3775  000AD4  5018               	movf	strcmp2@inx,w,c
  3776  000AD6  2411               	addwf	strcmp2@b,w,c
  3777  000AD8  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3778  000ADA  5019               	movf	strcmp2@inx+1,w,c
  3779  000ADC  2012               	addwfc	strcmp2@b+1,w,c
  3780  000ADE  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  3781  000AE0  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3782  000AE4  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3783  000AE8                     	if	0	;tblptru may be non-zero
  3784  000AE8                     	endif
  3785  000AE8                     	if	0	;tblptru may be non-zero
  3786  000AE8                     	endif
  3787  000AE8  50DE               	movf	postinc2,w,c
  3788  000AEA  0009               	tblrd		*+
  3789  000AEC  5CF5               	subwf	tablat,w,c
  3790  000AEE  B0D8               	btfsc	status,0,c
  3791  000AF0  D005               	goto	l2711
  3792                           
  3793                           ;SlaveComm_PIC18.c: 533: {
  3794                           ;SlaveComm_PIC18.c: 534: match = 1;
  3795  000AF2  0E00               	movlw	0
  3796  000AF4  6E17               	movwf	strcmp2@match+1,c
  3797  000AF6  0E01               	movlw	1
  3798  000AF8  6E16               	movwf	strcmp2@match,c
  3799                           
  3800                           ;SlaveComm_PIC18.c: 535: }
  3801  000AFA  D019               	goto	l2717
  3802  000AFC                     l2711:
  3803                           
  3804                           ;SlaveComm_PIC18.c: 536: else if( a[inx] < b[inx] )
  3805  000AFC  5018               	movf	strcmp2@inx,w,c
  3806  000AFE  240F               	addwf	strcmp2@a,w,c
  3807  000B00  6ED9               	movwf	fsr2l,c
  3808  000B02  5019               	movf	strcmp2@inx+1,w,c
  3809  000B04  2010               	addwfc	strcmp2@a+1,w,c
  3810  000B06  6EDA               	movwf	fsr2h,c
  3811  000B08  50DF               	movf	indf2,w,c
  3812  000B0A  6E13               	movwf	??_strcmp2& (0+255),c
  3813  000B0C  5018               	movf	strcmp2@inx,w,c
  3814  000B0E  2411               	addwf	strcmp2@b,w,c
  3815  000B10  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3816  000B12  5019               	movf	strcmp2@inx+1,w,c
  3817  000B14  2012               	addwfc	strcmp2@b+1,w,c
  3818  000B16  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  3819  000B18  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3820  000B1C  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3821  000B20                     	if	0	;tblptru may be non-zero
  3822  000B20                     	endif
  3823  000B20                     	if	0	;tblptru may be non-zero
  3824  000B20                     	endif
  3825  000B20  0008               	tblrd		*
  3826  000B22  50F5               	movf	tablat,w,c
  3827  000B24  5C13               	subwf	??_strcmp2,w,c
  3828  000B26  B0D8               	btfsc	status,0,c
  3829  000B28  D002               	goto	l2717
  3830                           
  3831                           ;SlaveComm_PIC18.c: 537: {
  3832                           ;SlaveComm_PIC18.c: 538: match = -1;
  3833  000B2A  6816               	setf	strcmp2@match,c
  3834  000B2C  6817               	setf	strcmp2@match+1,c
  3835  000B2E                     l2717:
  3836                           
  3837                           ;SlaveComm_PIC18.c: 543: }
  3838                           ;SlaveComm_PIC18.c: 545: inx++;
  3839  000B2E  4A18               	infsnz	strcmp2@inx,f,c
  3840  000B30  2A19               	incf	strcmp2@inx+1,f,c
  3841  000B32                     l2719:
  3842  000B32  5018               	movf	strcmp2@inx,w,c
  3843  000B34  240F               	addwf	strcmp2@a,w,c
  3844  000B36  6ED9               	movwf	fsr2l,c
  3845  000B38  5019               	movf	strcmp2@inx+1,w,c
  3846  000B3A  2010               	addwfc	strcmp2@a+1,w,c
  3847  000B3C  6EDA               	movwf	fsr2h,c
  3848  000B3E  50DF               	movf	indf2,w,c
  3849  000B40  B4D8               	btfsc	status,2,c
  3850  000B42  D013               	goto	l2725
  3851  000B44  5018               	movf	strcmp2@inx,w,c
  3852  000B46  2411               	addwf	strcmp2@b,w,c
  3853  000B48  6E13               	movwf	??_strcmp2& (0+255),c
  3854  000B4A  5019               	movf	strcmp2@inx+1,w,c
  3855  000B4C  2012               	addwfc	strcmp2@b+1,w,c
  3856  000B4E  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3857  000B50  C013  FFF6         	movff	??_strcmp2,tblptrl
  3858  000B54  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3859  000B58                     	if	0	;tblptru may be non-zero
  3860  000B58                     	endif
  3861  000B58                     	if	0	;tblptru may be non-zero
  3862  000B58                     	endif
  3863  000B58  0008               	tblrd		*
  3864  000B5A  50F5               	movf	tablat,w,c
  3865  000B5C  0900               	iorlw	0
  3866  000B5E  B4D8               	btfsc	status,2,c
  3867  000B60  D004               	goto	l2725
  3868  000B62  5016               	movf	strcmp2@match,w,c
  3869  000B64  1017               	iorwf	strcmp2@match+1,w,c
  3870  000B66  B4D8               	btfsc	status,2,c
  3871  000B68  D7AF               	goto	l2707
  3872  000B6A                     l2725:
  3873                           
  3874                           ;SlaveComm_PIC18.c: 546: }
  3875                           ;SlaveComm_PIC18.c: 549: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  3876  000B6A  5018               	movf	strcmp2@inx,w,c
  3877  000B6C  240F               	addwf	strcmp2@a,w,c
  3878  000B6E  6ED9               	movwf	fsr2l,c
  3879  000B70  5019               	movf	strcmp2@inx+1,w,c
  3880  000B72  2010               	addwfc	strcmp2@a+1,w,c
  3881  000B74  6EDA               	movwf	fsr2h,c
  3882  000B76  50DF               	movf	indf2,w,c
  3883  000B78  A4D8               	btfss	status,2,c
  3884  000B7A  D012               	goto	l2731
  3885  000B7C  5018               	movf	strcmp2@inx,w,c
  3886  000B7E  2411               	addwf	strcmp2@b,w,c
  3887  000B80  6E13               	movwf	??_strcmp2& (0+255),c
  3888  000B82  5019               	movf	strcmp2@inx+1,w,c
  3889  000B84  2012               	addwfc	strcmp2@b+1,w,c
  3890  000B86  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3891  000B88  C013  FFF6         	movff	??_strcmp2,tblptrl
  3892  000B8C  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3893  000B90                     	if	0	;tblptru may be non-zero
  3894  000B90                     	endif
  3895  000B90                     	if	0	;tblptru may be non-zero
  3896  000B90                     	endif
  3897  000B90  0008               	tblrd		*
  3898  000B92  50F5               	movf	tablat,w,c
  3899  000B94  0900               	iorlw	0
  3900  000B96  B4D8               	btfsc	status,2,c
  3901  000B98  D003               	goto	l2731
  3902                           
  3903                           ;SlaveComm_PIC18.c: 550: {
  3904                           ;SlaveComm_PIC18.c: 551: match = -1;
  3905  000B9A  6816               	setf	strcmp2@match,c
  3906  000B9C  6817               	setf	strcmp2@match+1,c
  3907                           
  3908                           ;SlaveComm_PIC18.c: 552: }
  3909  000B9E  D01C               	goto	l2737
  3910  000BA0                     l2731:
  3911                           
  3912                           ;SlaveComm_PIC18.c: 553: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  3913  000BA0  5018               	movf	strcmp2@inx,w,c
  3914  000BA2  240F               	addwf	strcmp2@a,w,c
  3915  000BA4  6ED9               	movwf	fsr2l,c
  3916  000BA6  5019               	movf	strcmp2@inx+1,w,c
  3917  000BA8  2010               	addwfc	strcmp2@a+1,w,c
  3918  000BAA  6EDA               	movwf	fsr2h,c
  3919  000BAC  50DF               	movf	indf2,w,c
  3920  000BAE  B4D8               	btfsc	status,2,c
  3921  000BB0  D013               	goto	l2737
  3922  000BB2  5018               	movf	strcmp2@inx,w,c
  3923  000BB4  2411               	addwf	strcmp2@b,w,c
  3924  000BB6  6E13               	movwf	??_strcmp2& (0+255),c
  3925  000BB8  5019               	movf	strcmp2@inx+1,w,c
  3926  000BBA  2012               	addwfc	strcmp2@b+1,w,c
  3927  000BBC  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3928  000BBE  C013  FFF6         	movff	??_strcmp2,tblptrl
  3929  000BC2  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3930  000BC6                     	if	0	;tblptru may be non-zero
  3931  000BC6                     	endif
  3932  000BC6                     	if	0	;tblptru may be non-zero
  3933  000BC6                     	endif
  3934  000BC6  0008               	tblrd		*
  3935  000BC8  50F5               	movf	tablat,w,c
  3936  000BCA  0900               	iorlw	0
  3937  000BCC  A4D8               	btfss	status,2,c
  3938  000BCE  D004               	goto	l2737
  3939                           
  3940                           ;SlaveComm_PIC18.c: 554: {
  3941                           ;SlaveComm_PIC18.c: 555: match = 1;
  3942  000BD0  0E00               	movlw	0
  3943  000BD2  6E17               	movwf	strcmp2@match+1,c
  3944  000BD4  0E01               	movlw	1
  3945  000BD6  6E16               	movwf	strcmp2@match,c
  3946  000BD8                     l2737:
  3947                           
  3948                           ;SlaveComm_PIC18.c: 556: }
  3949                           ;SlaveComm_PIC18.c: 558: return match;
  3950  000BD8  C016  F00F         	movff	strcmp2@match,?_strcmp2
  3951  000BDC  C017  F010         	movff	strcmp2@match+1,?_strcmp2+1
  3952  000BE0  0012               	return	
  3953  000BE2                     __end_of_strcmp2:
  3954                           	opt stack 0
  3955                           tblptru	equ	0xFF8
  3956                           tblptrh	equ	0xFF7
  3957                           tblptrl	equ	0xFF6
  3958                           tablat	equ	0xFF5
  3959                           prodh	equ	0xFF4
  3960                           prodl	equ	0xFF3
  3961                           intcon	equ	0xFF2
  3962                           postinc0	equ	0xFEE
  3963                           wreg	equ	0xFE8
  3964                           postinc1	equ	0xFE6
  3965                           fsr1h	equ	0xFE2
  3966                           fsr1l	equ	0xFE1
  3967                           indf2	equ	0xFDF
  3968                           postinc2	equ	0xFDE
  3969                           fsr2h	equ	0xFDA
  3970                           fsr2l	equ	0xFD9
  3971                           status	equ	0xFD8
  3972                           
  3973 ;; *************** function _send_end_of_transmission *****************
  3974 ;; Defined at:
  3975 ;;		line 604 in file "SlaveComm_PIC18.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  3978 ;;		 -> communications@send_buffer(42), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3990 ;;      Params:         2       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    4
  3997 ;; This function calls:
  3998 ;;		_command_builder1
  3999 ;; This function is called by:
  4000 ;;		_process_data_parameters
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text24
  4005  001948                     __ptext24:
  4006                           	opt stack 0
  4007  001948                     _send_end_of_transmission:
  4008                           	opt stack 23
  4009                           
  4010                           ;SlaveComm_PIC18.c: 606: command_builder1( send_buffer, "END" );
  4011                           
  4012                           ;incstack = 0
  4013  001948  C01F  F01B         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4014  00194C  C020  F01C         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4015  001950  0E4F               	movlw	low STR_1
  4016  001952  6E1D               	movwf	command_builder1@data1,c
  4017  001954  0E06               	movlw	high STR_1
  4018  001956  6E1E               	movwf	command_builder1@data1+1,c
  4019  001958  EC78  F00A         	call	_command_builder1	;wreg free
  4020  00195C  0012               	return	
  4021  00195E                     __end_of_send_end_of_transmission:
  4022                           	opt stack 0
  4023                           tblptru	equ	0xFF8
  4024                           tblptrh	equ	0xFF7
  4025                           tblptrl	equ	0xFF6
  4026                           tablat	equ	0xFF5
  4027                           prodh	equ	0xFF4
  4028                           prodl	equ	0xFF3
  4029                           intcon	equ	0xFF2
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           postinc1	equ	0xFE6
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           fsr2h	equ	0xFDA
  4038                           fsr2l	equ	0xFD9
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _command_builder1 *****************
  4042 ;; Defined at:
  4043 ;;		line 406 in file "SlaveComm_PIC18.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4046 ;;		 -> communications@send_buffer(42), 
  4047 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4048 ;;		 -> STR_23(4), 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4060 ;;      Params:         4       0       0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0
  4063 ;;      Totals:         4       0       0       0       0       0       0
  4064 ;;Total ram usage:        4 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    3
  4067 ;; This function calls:
  4068 ;;		_command_builder_add_char
  4069 ;;		_command_builder_add_string
  4070 ;; This function is called by:
  4071 ;;		_send_end_of_transmission
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text25
  4076  0014F0                     __ptext25:
  4077                           	opt stack 0
  4078  0014F0                     _command_builder1:
  4079                           	opt stack 23
  4080                           
  4081                           ;SlaveComm_PIC18.c: 408: command_builder_add_char( send_buffer, '#' );
  4082                           
  4083                           ;incstack = 0
  4084  0014F0  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4085  0014F4  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4086  0014F8  0E23               	movlw	35
  4087  0014FA  6E11               	movwf	command_builder_add_char@data,c
  4088  0014FC  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4089                           
  4090                           ;SlaveComm_PIC18.c: 409: command_builder_add_char( send_buffer, '#' );
  4091  001500  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4092  001504  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4093  001508  0E23               	movlw	35
  4094  00150A  6E11               	movwf	command_builder_add_char@data,c
  4095  00150C  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4096                           
  4097                           ;SlaveComm_PIC18.c: 410: command_builder_add_char( send_buffer, '!' );
  4098  001510  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4099  001514  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4100  001518  0E21               	movlw	33
  4101  00151A  6E11               	movwf	command_builder_add_char@data,c
  4102  00151C  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4103                           
  4104                           ;SlaveComm_PIC18.c: 411: command_builder_add_string( send_buffer, data1 );
  4105  001520  C01B  F013         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4106  001524  C01C  F014         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4107  001528  C01D  F015         	movff	command_builder1@data1,command_builder_add_string@data_string
  4108  00152C  C01E  F016         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4109  001530  ECA0  F009         	call	_command_builder_add_string	;wreg free
  4110                           
  4111                           ;SlaveComm_PIC18.c: 412: command_builder_add_char( send_buffer, '*' );
  4112  001534  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4113  001538  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4114  00153C  0E2A               	movlw	42
  4115  00153E  6E11               	movwf	command_builder_add_char@data,c
  4116  001540  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4117  001544  0012               	return	
  4118  001546                     __end_of_command_builder1:
  4119                           	opt stack 0
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           postinc0	equ	0xFEE
  4128                           wreg	equ	0xFE8
  4129                           postinc1	equ	0xFE6
  4130                           fsr1h	equ	0xFE2
  4131                           fsr1l	equ	0xFE1
  4132                           indf2	equ	0xFDF
  4133                           postinc2	equ	0xFDE
  4134                           fsr2h	equ	0xFDA
  4135                           fsr2l	equ	0xFD9
  4136                           status	equ	0xFD8
  4137                           
  4138 ;; *************** function _com_command_setEnergyUsed *****************
  4139 ;; Defined at:
  4140 ;;		line 631 in file "SlaveComm_PIC18.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  send_buffer     2   40[COMRAM] PTR struct buffer
  4143 ;;		 -> communications@send_buffer(42), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  temp           12   42[COMRAM] unsigned char [12]
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4155 ;;      Params:         2       0       0       0       0       0       0
  4156 ;;      Locals:        12       0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0
  4158 ;;      Totals:        14       0       0       0       0       0       0
  4159 ;;Total ram usage:       14 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    4
  4162 ;; This function calls:
  4163 ;;		_command_builder3
  4164 ;;		_ultoa
  4165 ;; This function is called by:
  4166 ;;		_resetCommunications
  4167 ;;		_process_data_parameters
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text26
  4172  001694                     __ptext26:
  4173                           	opt stack 0
  4174  001694                     _com_command_setEnergyUsed:
  4175                           	opt stack 24
  4176                           
  4177                           ;SlaveComm_PIC18.c: 633: char temp[12];
  4178                           ;SlaveComm_PIC18.c: 635: ultoa(temp, meterEnergyUsed, 10);
  4179                           
  4180                           ;incstack = 0
  4181  001694  0E2B               	movlw	low com_command_setEnergyUsed@temp
  4182  001696  6E1C               	movwf	ultoa@buf,c
  4183  001698  0E00               	movlw	high com_command_setEnergyUsed@temp
  4184  00169A  6E1D               	movwf	ultoa@buf+1,c
  4185  00169C  C039  F01E         	movff	_meterEnergyUsed,ultoa@val
  4186  0016A0  C03A  F01F         	movff	_meterEnergyUsed+1,ultoa@val+1
  4187  0016A4  C03B  F020         	movff	_meterEnergyUsed+2,ultoa@val+2
  4188  0016A8  C03C  F021         	movff	_meterEnergyUsed+3,ultoa@val+3
  4189  0016AC  0E00               	movlw	0
  4190  0016AE  6E23               	movwf	ultoa@base+1,c
  4191  0016B0  0E0A               	movlw	10
  4192  0016B2  6E22               	movwf	ultoa@base,c
  4193  0016B4  ECF8  F006         	call	_ultoa	;wreg free
  4194                           
  4195                           ;SlaveComm_PIC18.c: 637: command_builder3( send_buffer, "Set", "EnUsed", temp );
  4196  0016B8  C029  F01B         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4197  0016BC  C02A  F01C         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4198  0016C0  0E57               	movlw	low STR_2
  4199  0016C2  6E1D               	movwf	command_builder3@data1,c
  4200  0016C4  0E06               	movlw	high STR_2
  4201  0016C6  6E1E               	movwf	command_builder3@data1+1,c
  4202  0016C8  0E17               	movlw	low STR_4
  4203  0016CA  6E1F               	movwf	command_builder3@data2,c
  4204  0016CC  0E06               	movlw	high STR_4
  4205  0016CE  6E20               	movwf	command_builder3@data2+1,c
  4206  0016D0  0E2B               	movlw	low com_command_setEnergyUsed@temp
  4207  0016D2  6E21               	movwf	command_builder3@data3,c
  4208  0016D4  0E00               	movlw	high com_command_setEnergyUsed@temp
  4209  0016D6  6E22               	movwf	command_builder3@data3+1,c
  4210  0016D8  ECC8  F008         	call	_command_builder3	;wreg free
  4211  0016DC  0012               	return	
  4212  0016DE                     __end_of_com_command_setEnergyUsed:
  4213                           	opt stack 0
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           prodh	equ	0xFF4
  4219                           prodl	equ	0xFF3
  4220                           intcon	equ	0xFF2
  4221                           postinc0	equ	0xFEE
  4222                           wreg	equ	0xFE8
  4223                           postinc1	equ	0xFE6
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _ultoa *****************
  4233 ;; Defined at:
  4234 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ltoa.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  buf             2   27[COMRAM] PTR unsigned char 
  4237 ;;		 -> com_command_setEnergyUsed@temp(12), 
  4238 ;;  val             4   29[COMRAM] unsigned long 
  4239 ;;  base            2   33[COMRAM] int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  v               4   35[COMRAM] unsigned long 
  4242 ;;  c               1   39[COMRAM] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2   27[COMRAM] PTR unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4252 ;;      Params:         8       0       0       0       0       0       0
  4253 ;;      Locals:         5       0       0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0
  4255 ;;      Totals:        13       0       0       0       0       0       0
  4256 ;;Total ram usage:       13 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    2
  4259 ;; This function calls:
  4260 ;;		___lldiv
  4261 ;;		___llmod
  4262 ;; This function is called by:
  4263 ;;		_com_command_setEnergyUsed
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text27
  4268  000DF0                     __ptext27:
  4269                           	opt stack 0
  4270  000DF0                     _ultoa:
  4271                           	opt stack 25
  4272                           
  4273                           ;incstack = 0
  4274  000DF0  C01E  F024         	movff	ultoa@val,ultoa@v
  4275  000DF4  C01F  F025         	movff	ultoa@val+1,ultoa@v+1
  4276  000DF8  C020  F026         	movff	ultoa@val+2,ultoa@v+2
  4277  000DFC  C021  F027         	movff	ultoa@val+3,ultoa@v+3
  4278  000E00                     l2743:
  4279  000E00  C024  F00F         	movff	ultoa@v,___lldiv@dividend
  4280  000E04  C025  F010         	movff	ultoa@v+1,___lldiv@dividend+1
  4281  000E08  C026  F011         	movff	ultoa@v+2,___lldiv@dividend+2
  4282  000E0C  C027  F012         	movff	ultoa@v+3,___lldiv@dividend+3
  4283  000E10  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4284  000E14  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4285  000E18  0E00               	movlw	0
  4286  000E1A  BE14               	btfsc	___lldiv@divisor+1,7,c
  4287  000E1C  0EFF               	movlw	-1
  4288  000E1E  6E15               	movwf	___lldiv@divisor+2,c
  4289  000E20  6E16               	movwf	___lldiv@divisor+3,c
  4290  000E22  EC5F  F009         	call	___lldiv	;wreg free
  4291  000E26  C00F  F024         	movff	?___lldiv,ultoa@v
  4292  000E2A  C010  F025         	movff	?___lldiv+1,ultoa@v+1
  4293  000E2E  C011  F026         	movff	?___lldiv+2,ultoa@v+2
  4294  000E32  C012  F027         	movff	?___lldiv+3,ultoa@v+3
  4295  000E36  4A1C               	infsnz	ultoa@buf,f,c
  4296  000E38  2A1D               	incf	ultoa@buf+1,f,c
  4297  000E3A  5024               	movf	ultoa@v,w,c
  4298  000E3C  1025               	iorwf	ultoa@v+1,w,c
  4299  000E3E  1026               	iorwf	ultoa@v+2,w,c
  4300  000E40  1027               	iorwf	ultoa@v+3,w,c
  4301  000E42  A4D8               	btfss	status,2,c
  4302  000E44  D7DD               	goto	l2743
  4303  000E46  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4304  000E4A  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4305  000E4E  0E00               	movlw	0
  4306  000E50  6EDF               	movwf	indf2,c
  4307  000E52  061C               	decf	ultoa@buf,f,c
  4308  000E54  A0D8               	btfss	status,0,c
  4309  000E56  061D               	decf	ultoa@buf+1,f,c
  4310  000E58                     l2753:
  4311  000E58  C01E  F00F         	movff	ultoa@val,___llmod@dividend
  4312  000E5C  C01F  F010         	movff	ultoa@val+1,___llmod@dividend+1
  4313  000E60  C020  F011         	movff	ultoa@val+2,___llmod@dividend+2
  4314  000E64  C021  F012         	movff	ultoa@val+3,___llmod@dividend+3
  4315  000E68  C022  F013         	movff	ultoa@base,___llmod@divisor
  4316  000E6C  C023  F014         	movff	ultoa@base+1,___llmod@divisor+1
  4317  000E70  0E00               	movlw	0
  4318  000E72  BE14               	btfsc	___llmod@divisor+1,7,c
  4319  000E74  0EFF               	movlw	-1
  4320  000E76  6E15               	movwf	___llmod@divisor+2,c
  4321  000E78  6E16               	movwf	___llmod@divisor+3,c
  4322  000E7A  EC14  F00A         	call	___llmod	;wreg free
  4323  000E7E  500F               	movf	?___llmod,w,c
  4324  000E80  6E28               	movwf	ultoa@c,c
  4325  000E82  C01E  F00F         	movff	ultoa@val,___lldiv@dividend
  4326  000E86  C01F  F010         	movff	ultoa@val+1,___lldiv@dividend+1
  4327  000E8A  C020  F011         	movff	ultoa@val+2,___lldiv@dividend+2
  4328  000E8E  C021  F012         	movff	ultoa@val+3,___lldiv@dividend+3
  4329  000E92  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4330  000E96  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4331  000E9A  0E00               	movlw	0
  4332  000E9C  BE14               	btfsc	___lldiv@divisor+1,7,c
  4333  000E9E  0EFF               	movlw	-1
  4334  000EA0  6E15               	movwf	___lldiv@divisor+2,c
  4335  000EA2  6E16               	movwf	___lldiv@divisor+3,c
  4336  000EA4  EC5F  F009         	call	___lldiv	;wreg free
  4337  000EA8  C00F  F01E         	movff	?___lldiv,ultoa@val
  4338  000EAC  C010  F01F         	movff	?___lldiv+1,ultoa@val+1
  4339  000EB0  C011  F020         	movff	?___lldiv+2,ultoa@val+2
  4340  000EB4  C012  F021         	movff	?___lldiv+3,ultoa@val+3
  4341  000EB8  0E09               	movlw	9
  4342  000EBA  6428               	cpfsgt	ultoa@c,c
  4343  000EBC  D002               	goto	l862
  4344  000EBE  0E07               	movlw	7
  4345  000EC0  2628               	addwf	ultoa@c,f,c
  4346  000EC2                     l862:
  4347  000EC2  0E30               	movlw	48
  4348  000EC4  2628               	addwf	ultoa@c,f,c
  4349  000EC6  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4350  000ECA  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4351  000ECE  C028  FFDF         	movff	ultoa@c,indf2
  4352  000ED2  061C               	decf	ultoa@buf,f,c
  4353  000ED4  A0D8               	btfss	status,0,c
  4354  000ED6  061D               	decf	ultoa@buf+1,f,c
  4355  000ED8  501E               	movf	ultoa@val,w,c
  4356  000EDA  101F               	iorwf	ultoa@val+1,w,c
  4357  000EDC  1020               	iorwf	ultoa@val+2,w,c
  4358  000EDE  1021               	iorwf	ultoa@val+3,w,c
  4359  000EE0  B4D8               	btfsc	status,2,c
  4360  000EE2  0012               	return	
  4361  000EE4  D7B9               	goto	l2753
  4362  000EE6                     __end_of_ultoa:
  4363                           	opt stack 0
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           prodh	equ	0xFF4
  4369                           prodl	equ	0xFF3
  4370                           intcon	equ	0xFF2
  4371                           postinc0	equ	0xFEE
  4372                           wreg	equ	0xFE8
  4373                           postinc1	equ	0xFE6
  4374                           fsr1h	equ	0xFE2
  4375                           fsr1l	equ	0xFE1
  4376                           indf2	equ	0xFDF
  4377                           postinc2	equ	0xFDE
  4378                           fsr2h	equ	0xFDA
  4379                           fsr2l	equ	0xFD9
  4380                           status	equ	0xFD8
  4381                           
  4382 ;; *************** function ___llmod *****************
  4383 ;; Defined at:
  4384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\llmod.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  dividend        4   14[COMRAM] unsigned long 
  4387 ;;  divisor         4   18[COMRAM] unsigned long 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  counter         1   22[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  4   14[COMRAM] unsigned long 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4399 ;;      Params:         8       0       0       0       0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0
  4402 ;;      Totals:         9       0       0       0       0       0       0
  4403 ;;Total ram usage:        9 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_ultoa
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text28
  4414  001428                     __ptext28:
  4415                           	opt stack 0
  4416  001428                     ___llmod:
  4417                           	opt stack 25
  4418                           
  4419                           ;incstack = 0
  4420  001428  5013               	movf	___llmod@divisor,w,c
  4421  00142A  1014               	iorwf	___llmod@divisor+1,w,c
  4422  00142C  1015               	iorwf	___llmod@divisor+2,w,c
  4423  00142E  1016               	iorwf	___llmod@divisor+3,w,c
  4424  001430  B4D8               	btfsc	status,2,c
  4425  001432  D024               	goto	l815
  4426  001434  0E01               	movlw	1
  4427  001436  6E17               	movwf	___llmod@counter,c
  4428  001438  D006               	goto	l2675
  4429  00143A                     l2673:
  4430  00143A  90D8               	bcf	status,0,c
  4431  00143C  3613               	rlcf	___llmod@divisor,f,c
  4432  00143E  3614               	rlcf	___llmod@divisor+1,f,c
  4433  001440  3615               	rlcf	___llmod@divisor+2,f,c
  4434  001442  3616               	rlcf	___llmod@divisor+3,f,c
  4435  001444  2A17               	incf	___llmod@counter,f,c
  4436  001446                     l2675:
  4437  001446  AE16               	btfss	___llmod@divisor+3,7,c
  4438  001448  D7F8               	goto	l2673
  4439  00144A                     l2677:
  4440  00144A  5013               	movf	___llmod@divisor,w,c
  4441  00144C  5C0F               	subwf	___llmod@dividend,w,c
  4442  00144E  5014               	movf	___llmod@divisor+1,w,c
  4443  001450  5810               	subwfb	___llmod@dividend+1,w,c
  4444  001452  5015               	movf	___llmod@divisor+2,w,c
  4445  001454  5811               	subwfb	___llmod@dividend+2,w,c
  4446  001456  5016               	movf	___llmod@divisor+3,w,c
  4447  001458  5812               	subwfb	___llmod@dividend+3,w,c
  4448  00145A  A0D8               	btfss	status,0,c
  4449  00145C  D008               	goto	l2681
  4450  00145E  5013               	movf	___llmod@divisor,w,c
  4451  001460  5E0F               	subwf	___llmod@dividend,f,c
  4452  001462  5014               	movf	___llmod@divisor+1,w,c
  4453  001464  5A10               	subwfb	___llmod@dividend+1,f,c
  4454  001466  5015               	movf	___llmod@divisor+2,w,c
  4455  001468  5A11               	subwfb	___llmod@dividend+2,f,c
  4456  00146A  5016               	movf	___llmod@divisor+3,w,c
  4457  00146C  5A12               	subwfb	___llmod@dividend+3,f,c
  4458  00146E                     l2681:
  4459  00146E  90D8               	bcf	status,0,c
  4460  001470  3216               	rrcf	___llmod@divisor+3,f,c
  4461  001472  3215               	rrcf	___llmod@divisor+2,f,c
  4462  001474  3214               	rrcf	___llmod@divisor+1,f,c
  4463  001476  3213               	rrcf	___llmod@divisor,f,c
  4464  001478  2E17               	decfsz	___llmod@counter,f,c
  4465  00147A  D7E7               	goto	l2677
  4466  00147C                     l815:
  4467  00147C  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4468  001480  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4469  001484  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4470  001488  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4471  00148C  0012               	return		;funcret
  4472  00148E                     __end_of___llmod:
  4473                           	opt stack 0
  4474                           tblptru	equ	0xFF8
  4475                           tblptrh	equ	0xFF7
  4476                           tblptrl	equ	0xFF6
  4477                           tablat	equ	0xFF5
  4478                           prodh	equ	0xFF4
  4479                           prodl	equ	0xFF3
  4480                           intcon	equ	0xFF2
  4481                           postinc0	equ	0xFEE
  4482                           wreg	equ	0xFE8
  4483                           postinc1	equ	0xFE6
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           fsr2h	equ	0xFDA
  4489                           fsr2l	equ	0xFD9
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function ___lldiv *****************
  4493 ;; Defined at:
  4494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  dividend        4   14[COMRAM] unsigned long 
  4497 ;;  divisor         4   18[COMRAM] unsigned long 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  quotient        4   22[COMRAM] unsigned long 
  4500 ;;  counter         1   26[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  4   14[COMRAM] unsigned long 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4510 ;;      Params:         8       0       0       0       0       0       0
  4511 ;;      Locals:         5       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0
  4513 ;;      Totals:        13       0       0       0       0       0       0
  4514 ;;Total ram usage:       13 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_powerPulseCheck
  4521 ;;		_ultoa
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text29
  4526  0012BE                     __ptext29:
  4527                           	opt stack 0
  4528  0012BE                     ___lldiv:
  4529                           	opt stack 28
  4530                           
  4531                           ;incstack = 0
  4532  0012BE  0E00               	movlw	0
  4533  0012C0  6E17               	movwf	___lldiv@quotient,c
  4534  0012C2  0E00               	movlw	0
  4535  0012C4  6E18               	movwf	___lldiv@quotient+1,c
  4536  0012C6  0E00               	movlw	0
  4537  0012C8  6E19               	movwf	___lldiv@quotient+2,c
  4538  0012CA  0E00               	movlw	0
  4539  0012CC  6E1A               	movwf	___lldiv@quotient+3,c
  4540  0012CE  5013               	movf	___lldiv@divisor,w,c
  4541  0012D0  1014               	iorwf	___lldiv@divisor+1,w,c
  4542  0012D2  1015               	iorwf	___lldiv@divisor+2,w,c
  4543  0012D4  1016               	iorwf	___lldiv@divisor+3,w,c
  4544  0012D6  B4D8               	btfsc	status,2,c
  4545  0012D8  D02A               	goto	l805
  4546  0012DA  0E01               	movlw	1
  4547  0012DC  6E1B               	movwf	___lldiv@counter,c
  4548  0012DE  D006               	goto	l2655
  4549  0012E0                     l2653:
  4550  0012E0  90D8               	bcf	status,0,c
  4551  0012E2  3613               	rlcf	___lldiv@divisor,f,c
  4552  0012E4  3614               	rlcf	___lldiv@divisor+1,f,c
  4553  0012E6  3615               	rlcf	___lldiv@divisor+2,f,c
  4554  0012E8  3616               	rlcf	___lldiv@divisor+3,f,c
  4555  0012EA  2A1B               	incf	___lldiv@counter,f,c
  4556  0012EC                     l2655:
  4557  0012EC  AE16               	btfss	___lldiv@divisor+3,7,c
  4558  0012EE  D7F8               	goto	l2653
  4559  0012F0                     l2657:
  4560  0012F0  90D8               	bcf	status,0,c
  4561  0012F2  3617               	rlcf	___lldiv@quotient,f,c
  4562  0012F4  3618               	rlcf	___lldiv@quotient+1,f,c
  4563  0012F6  3619               	rlcf	___lldiv@quotient+2,f,c
  4564  0012F8  361A               	rlcf	___lldiv@quotient+3,f,c
  4565  0012FA  5013               	movf	___lldiv@divisor,w,c
  4566  0012FC  5C0F               	subwf	___lldiv@dividend,w,c
  4567  0012FE  5014               	movf	___lldiv@divisor+1,w,c
  4568  001300  5810               	subwfb	___lldiv@dividend+1,w,c
  4569  001302  5015               	movf	___lldiv@divisor+2,w,c
  4570  001304  5811               	subwfb	___lldiv@dividend+2,w,c
  4571  001306  5016               	movf	___lldiv@divisor+3,w,c
  4572  001308  5812               	subwfb	___lldiv@dividend+3,w,c
  4573  00130A  A0D8               	btfss	status,0,c
  4574  00130C  D009               	goto	l2665
  4575  00130E  5013               	movf	___lldiv@divisor,w,c
  4576  001310  5E0F               	subwf	___lldiv@dividend,f,c
  4577  001312  5014               	movf	___lldiv@divisor+1,w,c
  4578  001314  5A10               	subwfb	___lldiv@dividend+1,f,c
  4579  001316  5015               	movf	___lldiv@divisor+2,w,c
  4580  001318  5A11               	subwfb	___lldiv@dividend+2,f,c
  4581  00131A  5016               	movf	___lldiv@divisor+3,w,c
  4582  00131C  5A12               	subwfb	___lldiv@dividend+3,f,c
  4583  00131E  8017               	bsf	___lldiv@quotient,0,c
  4584  001320                     l2665:
  4585  001320  90D8               	bcf	status,0,c
  4586  001322  3216               	rrcf	___lldiv@divisor+3,f,c
  4587  001324  3215               	rrcf	___lldiv@divisor+2,f,c
  4588  001326  3214               	rrcf	___lldiv@divisor+1,f,c
  4589  001328  3213               	rrcf	___lldiv@divisor,f,c
  4590  00132A  2E1B               	decfsz	___lldiv@counter,f,c
  4591  00132C  D7E1               	goto	l2657
  4592  00132E                     l805:
  4593  00132E  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4594  001332  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4595  001336  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4596  00133A  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4597  00133E  0012               	return		;funcret
  4598  001340                     __end_of___lldiv:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           postinc1	equ	0xFE6
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _command_builder3 *****************
  4619 ;; Defined at:
  4620 ;;		line 430 in file "SlaveComm_PIC18.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4623 ;;		 -> communications@send_buffer(42), 
  4624 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4625 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4626 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4627 ;;  data2           2   30[COMRAM] PTR unsigned char 
  4628 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4629 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4630 ;;  data3           2   32[COMRAM] PTR unsigned char 
  4631 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4632 ;;		 -> com_command_setPower@temp(7), STR_15(3), STR_11(4), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         8       0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0
  4647 ;;      Totals:         8       0       0       0       0       0       0
  4648 ;;Total ram usage:        8 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    3
  4651 ;; This function calls:
  4652 ;;		_command_builder_add_char
  4653 ;;		_command_builder_add_string
  4654 ;; This function is called by:
  4655 ;;		_process_data_parameters
  4656 ;;		_com_command_setPower
  4657 ;;		_com_command_setEnergyUsed
  4658 ;;		_com_command_setVersion
  4659 ;;		_com_command_setVolts
  4660 ;;		_com_command_setAmps
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text30
  4665  001190                     __ptext30:
  4666                           	opt stack 0
  4667  001190                     _command_builder3:
  4668                           	opt stack 24
  4669                           
  4670                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, '#' );
  4671                           
  4672                           ;incstack = 0
  4673  001190  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4674  001194  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4675  001198  0E23               	movlw	35
  4676  00119A  6E11               	movwf	command_builder_add_char@data,c
  4677  00119C  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4678                           
  4679                           ;SlaveComm_PIC18.c: 433: command_builder_add_char( send_buffer, '#' );
  4680  0011A0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4681  0011A4  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4682  0011A8  0E23               	movlw	35
  4683  0011AA  6E11               	movwf	command_builder_add_char@data,c
  4684  0011AC  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4685                           
  4686                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '!' );
  4687  0011B0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4688  0011B4  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4689  0011B8  0E21               	movlw	33
  4690  0011BA  6E11               	movwf	command_builder_add_char@data,c
  4691  0011BC  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4692                           
  4693                           ;SlaveComm_PIC18.c: 435: command_builder_add_string( send_buffer, data1 );
  4694  0011C0  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4695  0011C4  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4696  0011C8  C01D  F015         	movff	command_builder3@data1,command_builder_add_string@data_string
  4697  0011CC  C01E  F016         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4698  0011D0  ECA0  F009         	call	_command_builder_add_string	;wreg free
  4699                           
  4700                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, ';' );
  4701  0011D4  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4702  0011D8  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4703  0011DC  0E3B               	movlw	59
  4704  0011DE  6E11               	movwf	command_builder_add_char@data,c
  4705  0011E0  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4706                           
  4707                           ;SlaveComm_PIC18.c: 437: command_builder_add_string( send_buffer, data2 );
  4708  0011E4  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4709  0011E8  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4710  0011EC  C01F  F015         	movff	command_builder3@data2,command_builder_add_string@data_string
  4711  0011F0  C020  F016         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4712  0011F4  ECA0  F009         	call	_command_builder_add_string	;wreg free
  4713                           
  4714                           ;SlaveComm_PIC18.c: 438: command_builder_add_char( send_buffer, ';' );
  4715  0011F8  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4716  0011FC  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4717  001200  0E3B               	movlw	59
  4718  001202  6E11               	movwf	command_builder_add_char@data,c
  4719  001204  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4720                           
  4721                           ;SlaveComm_PIC18.c: 439: command_builder_add_string( send_buffer, data3 );
  4722  001208  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4723  00120C  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4724  001210  C021  F015         	movff	command_builder3@data3,command_builder_add_string@data_string
  4725  001214  C022  F016         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4726  001218  ECA0  F009         	call	_command_builder_add_string	;wreg free
  4727                           
  4728                           ;SlaveComm_PIC18.c: 440: command_builder_add_char( send_buffer, '*' );
  4729  00121C  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4730  001220  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4731  001224  0E2A               	movlw	42
  4732  001226  6E11               	movwf	command_builder_add_char@data,c
  4733  001228  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4734  00122C  0012               	return	
  4735  00122E                     __end_of_command_builder3:
  4736                           	opt stack 0
  4737                           tblptru	equ	0xFF8
  4738                           tblptrh	equ	0xFF7
  4739                           tblptrl	equ	0xFF6
  4740                           tablat	equ	0xFF5
  4741                           prodh	equ	0xFF4
  4742                           prodl	equ	0xFF3
  4743                           intcon	equ	0xFF2
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           postinc1	equ	0xFE6
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _command_builder_add_string *****************
  4756 ;; Defined at:
  4757 ;;		line 475 in file "SlaveComm_PIC18.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4760 ;;		 -> communications@send_buffer(42), 
  4761 ;;  data_string     2   20[COMRAM] PTR unsigned char 
  4762 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4763 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4764 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4765 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4766 ;;		 -> com_command_setPower@temp(7), STR_25(5), STR_24(5), STR_23(4), 
  4767 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4768 ;;		 -> STR_10(5), STR_9(4), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  inx             2   24[COMRAM] int 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      void 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4780 ;;      Params:         4       0       0       0       0       0       0
  4781 ;;      Locals:         2       0       0       0       0       0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0
  4783 ;;      Totals:         8       0       0       0       0       0       0
  4784 ;;Total ram usage:        8 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    2
  4787 ;; This function calls:
  4788 ;;		_command_builder_add_char
  4789 ;; This function is called by:
  4790 ;;		_command_builder1
  4791 ;;		_command_builder3
  4792 ;;		_command_builder2
  4793 ;;		_command_builder4
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text31
  4798  001340                     __ptext31:
  4799                           	opt stack 0
  4800  001340                     _command_builder_add_string:
  4801                           	opt stack 24
  4802                           
  4803                           ;SlaveComm_PIC18.c: 477: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4804                           
  4805                           ;incstack = 0
  4806  001340  0E00               	movlw	0
  4807  001342  6E1A               	movwf	command_builder_add_string@inx+1,c
  4808  001344  0E00               	movlw	0
  4809  001346  6E19               	movwf	command_builder_add_string@inx,c
  4810  001348  D01F               	goto	l2645
  4811  00134A                     l2641:
  4812                           
  4813                           ;SlaveComm_PIC18.c: 478: {
  4814                           ;SlaveComm_PIC18.c: 479: command_builder_add_char( send_buffer, data_string[inx] );
  4815  00134A  C013  F00F         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4816  00134E  C014  F010         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4817  001352  5019               	movf	command_builder_add_string@inx,w,c
  4818  001354  2415               	addwf	command_builder_add_string@data_string,w,c
  4819  001356  6E17               	movwf	??_command_builder_add_string& (0+255),c
  4820  001358  501A               	movf	command_builder_add_string@inx+1,w,c
  4821  00135A  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  4822  00135C  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4823  00135E  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  4824  001362  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4825  001366  6AF8               	clrf	tblptru,c
  4826  001368  0E05               	movlw	(high __ramtop+-1)
  4827  00136A  64F7               	cpfsgt	tblptrh,c
  4828  00136C  D003               	bra	u1917
  4829  00136E  0008               	tblrd		*
  4830  001370  50F5               	movf	tablat,w,c
  4831  001372  D005               	bra	u1910
  4832  001374                     u1917:
  4833  001374  CFF6 FFE1          	movff	tblptrl,fsr1l
  4834  001378  CFF7 FFE2          	movff	tblptrh,fsr1h
  4835  00137C  50E7               	movf	indf1,w,c
  4836  00137E                     u1910:
  4837  00137E  6E11               	movwf	command_builder_add_char@data,c
  4838  001380  ECA3  F00A         	call	_command_builder_add_char	;wreg free
  4839  001384  4A19               	infsnz	command_builder_add_string@inx,f,c
  4840  001386  2A1A               	incf	command_builder_add_string@inx+1,f,c
  4841  001388                     l2645:
  4842  001388  5019               	movf	command_builder_add_string@inx,w,c
  4843  00138A  2415               	addwf	command_builder_add_string@data_string,w,c
  4844  00138C  6E17               	movwf	??_command_builder_add_string& (0+255),c
  4845  00138E  501A               	movf	command_builder_add_string@inx+1,w,c
  4846  001390  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  4847  001392  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4848  001394  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  4849  001398  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4850  00139C  6AF8               	clrf	tblptru,c
  4851  00139E  0E05               	movlw	(high __ramtop+-1)
  4852  0013A0  64F7               	cpfsgt	tblptrh,c
  4853  0013A2  D003               	bra	u1927
  4854  0013A4  0008               	tblrd		*
  4855  0013A6  50F5               	movf	tablat,w,c
  4856  0013A8  D005               	bra	u1920
  4857  0013AA                     u1927:
  4858  0013AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4859  0013AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4860  0013B2  50E7               	movf	indf1,w,c
  4861  0013B4                     u1920:
  4862  0013B4  0900               	iorlw	0
  4863  0013B6  B4D8               	btfsc	status,2,c
  4864  0013B8  0012               	return	
  4865  0013BA  D7C7               	goto	l2641
  4866  0013BC                     __end_of_command_builder_add_string:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon	equ	0xFF2
  4875                           postinc0	equ	0xFEE
  4876                           wreg	equ	0xFE8
  4877                           indf1	equ	0xFE7
  4878                           postinc1	equ	0xFE6
  4879                           fsr1h	equ	0xFE2
  4880                           fsr1l	equ	0xFE1
  4881                           indf2	equ	0xFDF
  4882                           postinc2	equ	0xFDE
  4883                           fsr2h	equ	0xFDA
  4884                           fsr2l	equ	0xFD9
  4885                           status	equ	0xFD8
  4886                           
  4887 ;; *************** function _command_builder_add_char *****************
  4888 ;; Defined at:
  4889 ;;		line 462 in file "SlaveComm_PIC18.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  send_buffer     2   14[COMRAM] PTR struct buffer
  4892 ;;		 -> communications@send_buffer(42), 
  4893 ;;  data            1   16[COMRAM] unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4905 ;;      Params:         3       0       0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0
  4907 ;;      Temps:          1       0       0       0       0       0       0
  4908 ;;      Totals:         4       0       0       0       0       0       0
  4909 ;;Total ram usage:        4 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_command_builder1
  4916 ;;		_command_builder3
  4917 ;;		_command_builder_add_string
  4918 ;;		_command_builder2
  4919 ;;		_command_builder4
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text32
  4924  001546                     __ptext32:
  4925                           	opt stack 0
  4926  001546                     _command_builder_add_char:
  4927                           	opt stack 24
  4928                           
  4929                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  4930                           
  4931                           ;incstack = 0
  4932  001546  EE20 F028          	lfsr	2,40
  4933  00154A  500F               	movf	command_builder_add_char@send_buffer,w,c
  4934  00154C  26D9               	addwf	fsr2l,f,c
  4935  00154E  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4936  001550  22DA               	addwfc	fsr2h,f,c
  4937  001552  50DF               	movf	indf2,w,c
  4938  001554  6E12               	movwf	??_command_builder_add_char& (0+255),c
  4939  001556  5012               	movf	??_command_builder_add_char,w,c
  4940  001558  0D01               	mullw	1
  4941  00155A  50F3               	movf	prodl,w,c
  4942  00155C  240F               	addwf	command_builder_add_char@send_buffer,w,c
  4943  00155E  6ED9               	movwf	fsr2l,c
  4944  001560  50F4               	movf	prodh,w,c
  4945  001562  2010               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4946  001564  6EDA               	movwf	fsr2h,c
  4947  001566  C011  FFDF         	movff	command_builder_add_char@data,indf2
  4948                           
  4949                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  4950  00156A  EE20 F028          	lfsr	2,40
  4951  00156E  500F               	movf	command_builder_add_char@send_buffer,w,c
  4952  001570  26D9               	addwf	fsr2l,f,c
  4953  001572  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4954  001574  22DA               	addwfc	fsr2h,f,c
  4955  001576  2ADF               	incf	indf2,f,c
  4956                           
  4957                           ;SlaveComm_PIC18.c: 467: if( send_buffer->write_position >= 40 )
  4958  001578  EE20 F028          	lfsr	2,40
  4959  00157C  500F               	movf	command_builder_add_char@send_buffer,w,c
  4960  00157E  26D9               	addwf	fsr2l,f,c
  4961  001580  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4962  001582  22DA               	addwfc	fsr2h,f,c
  4963  001584  0E27               	movlw	39
  4964  001586  64DF               	cpfsgt	indf2,c
  4965  001588  0012               	return	
  4966                           
  4967                           ;SlaveComm_PIC18.c: 468: {
  4968                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  4969  00158A  EE20 F028          	lfsr	2,40
  4970  00158E  500F               	movf	command_builder_add_char@send_buffer,w,c
  4971  001590  26D9               	addwf	fsr2l,f,c
  4972  001592  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4973  001594  22DA               	addwfc	fsr2h,f,c
  4974  001596  0E00               	movlw	0
  4975  001598  6EDF               	movwf	indf2,c
  4976  00159A  0012               	return	
  4977  00159C                     __end_of_command_builder_add_char:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           indf1	equ	0xFE7
  4989                           postinc1	equ	0xFE6
  4990                           fsr1h	equ	0xFE2
  4991                           fsr1l	equ	0xFE1
  4992                           indf2	equ	0xFDF
  4993                           postinc2	equ	0xFDE
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _atol *****************
  4999 ;; Defined at:
  5000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atol.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  s               2   26[COMRAM] PTR const unsigned char 
  5003 ;;		 -> process_data@parameters(50), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  a               4   35[COMRAM] long 
  5006 ;;  c               1   39[COMRAM] unsigned char 
  5007 ;;  sign            1   34[COMRAM] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  4   26[COMRAM] long 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5017 ;;      Params:         4       0       0       0       0       0       0
  5018 ;;      Locals:         6       0       0       0       0       0       0
  5019 ;;      Temps:          4       0       0       0       0       0       0
  5020 ;;      Totals:        14       0       0       0       0       0       0
  5021 ;;Total ram usage:       14 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    2
  5024 ;; This function calls:
  5025 ;;		___lmul
  5026 ;;		_isdigit
  5027 ;; This function is called by:
  5028 ;;		_process_data_parameters
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text33
  5033  000CF8                     __ptext33:
  5034                           	opt stack 0
  5035  000CF8                     _atol:
  5036                           	opt stack 25
  5037  000CF8  C01B  FFD9         	movff	atol@s,fsr2l
  5038  000CFC  C01C  FFDA         	movff	atol@s+1,fsr2h
  5039  000D00  50DF               	movf	indf2,w,c
  5040  000D02  6E28               	movwf	atol@c,c
  5041  000D04  4A1B               	infsnz	atol@s,f,c
  5042  000D06  2A1C               	incf	atol@s+1,f,c
  5043  000D08  0E20               	movlw	32
  5044  000D0A  1828               	xorwf	atol@c,w,c
  5045  000D0C  B4D8               	btfsc	status,2,c
  5046  000D0E  D7F4               	goto	l2841
  5047  000D10  0E09               	movlw	9
  5048  000D12  1828               	xorwf	atol@c,w,c
  5049  000D14  B4D8               	btfsc	status,2,c
  5050  000D16  D7F0               	goto	l2841
  5051  000D18  0E00               	movlw	0
  5052  000D1A  6E24               	movwf	atol@a,c
  5053  000D1C  0E00               	movlw	0
  5054  000D1E  6E25               	movwf	atol@a+1,c
  5055  000D20  0E00               	movlw	0
  5056  000D22  6E26               	movwf	atol@a+2,c
  5057  000D24  0E00               	movlw	0
  5058  000D26  6E27               	movwf	atol@a+3,c
  5059  000D28  0E00               	movlw	0
  5060  000D2A  6E23               	movwf	atol@sign,c
  5061  000D2C  0E2D               	movlw	45
  5062  000D2E  1828               	xorwf	atol@c,w,c
  5063  000D30  A4D8               	btfss	status,2,c
  5064  000D32  D005               	goto	l2859
  5065  000D34  2A23               	incf	atol@sign,f,c
  5066  000D36  D02A               	goto	l2867
  5067  000D38                     l2857:
  5068  000D38  4A1B               	infsnz	atol@s,f,c
  5069  000D3A  2A1C               	incf	atol@s+1,f,c
  5070  000D3C  D02E               	goto	l2871
  5071  000D3E                     l2859:
  5072  000D3E  0E2B               	movlw	43
  5073  000D40  1828               	xorwf	atol@c,w,c
  5074  000D42  A4D8               	btfss	status,2,c
  5075  000D44  D02A               	goto	l2871
  5076  000D46  D022               	goto	l2867
  5077  000D48                     l2865:
  5078  000D48  C024  F00F         	movff	atol@a,___lmul@multiplier
  5079  000D4C  C025  F010         	movff	atol@a+1,___lmul@multiplier+1
  5080  000D50  C026  F011         	movff	atol@a+2,___lmul@multiplier+2
  5081  000D54  C027  F012         	movff	atol@a+3,___lmul@multiplier+3
  5082  000D58  0E0A               	movlw	10
  5083  000D5A  6E13               	movwf	___lmul@multiplicand,c
  5084  000D5C  0E00               	movlw	0
  5085  000D5E  6E14               	movwf	___lmul@multiplicand+1,c
  5086  000D60  0E00               	movlw	0
  5087  000D62  6E15               	movwf	___lmul@multiplicand+2,c
  5088  000D64  0E00               	movlw	0
  5089  000D66  6E16               	movwf	___lmul@multiplicand+3,c
  5090  000D68  ECCE  F00A         	call	___lmul	;wreg free
  5091  000D6C  C028  F01F         	movff	atol@c,??_atol
  5092  000D70  0ED0               	movlw	208
  5093  000D72  261F               	addwf	??_atol,f,c
  5094  000D74  501F               	movf	??_atol,w,c
  5095  000D76  240F               	addwf	?___lmul,w,c
  5096  000D78  6E24               	movwf	atol@a,c
  5097  000D7A  0E00               	movlw	0
  5098  000D7C  2010               	addwfc	?___lmul+1,w,c
  5099  000D7E  6E25               	movwf	atol@a+1,c
  5100  000D80  0E00               	movlw	0
  5101  000D82  2011               	addwfc	?___lmul+2,w,c
  5102  000D84  6E26               	movwf	atol@a+2,c
  5103  000D86  0E00               	movlw	0
  5104  000D88  2012               	addwfc	?___lmul+3,w,c
  5105  000D8A  6E27               	movwf	atol@a+3,c
  5106  000D8C                     l2867:
  5107  000D8C  C01B  FFD9         	movff	atol@s,fsr2l
  5108  000D90  C01C  FFDA         	movff	atol@s+1,fsr2h
  5109  000D94  50DF               	movf	indf2,w,c
  5110  000D96  6E28               	movwf	atol@c,c
  5111  000D98  D7CF               	goto	l2857
  5112  000D9A                     l2871:
  5113  000D9A  5028               	movf	atol@c,w,c
  5114  000D9C  EC7D  F00C         	call	_isdigit
  5115  000DA0  B0D8               	btfsc	status,0,c
  5116  000DA2  D7D2               	goto	l2865
  5117  000DA4  5023               	movf	atol@sign,w,c
  5118  000DA6  B4D8               	btfsc	status,2,c
  5119  000DA8  D01A               	goto	l594
  5120  000DAA  C024  F01F         	movff	atol@a,??_atol
  5121  000DAE  C025  F020         	movff	atol@a+1,??_atol+1
  5122  000DB2  C026  F021         	movff	atol@a+2,??_atol+2
  5123  000DB6  C027  F022         	movff	atol@a+3,??_atol+3
  5124  000DBA  1E1F               	comf	??_atol,f,c
  5125  000DBC  1E20               	comf	??_atol+1,f,c
  5126  000DBE  1E21               	comf	??_atol+2,f,c
  5127  000DC0  1E22               	comf	??_atol+3,f,c
  5128  000DC2  2A1F               	incf	??_atol,f,c
  5129  000DC4  0E00               	movlw	0
  5130  000DC6  2220               	addwfc	??_atol+1,f,c
  5131  000DC8  2221               	addwfc	??_atol+2,f,c
  5132  000DCA  2222               	addwfc	??_atol+3,f,c
  5133  000DCC  C01F  F01B         	movff	??_atol,?_atol
  5134  000DD0  C020  F01C         	movff	??_atol+1,?_atol+1
  5135  000DD4  C021  F01D         	movff	??_atol+2,?_atol+2
  5136  000DD8  C022  F01E         	movff	??_atol+3,?_atol+3
  5137  000DDC  0012               	return	
  5138  000DDE                     l594:
  5139  000DDE  C024  F01B         	movff	atol@a,?_atol
  5140  000DE2  C025  F01C         	movff	atol@a+1,?_atol+1
  5141  000DE6  C026  F01D         	movff	atol@a+2,?_atol+2
  5142  000DEA  C027  F01E         	movff	atol@a+3,?_atol+3
  5143  000DEE  0012               	return		;funcret
  5144  000DF0                     __end_of_atol:
  5145                           	opt stack 0
  5146                           tblptru	equ	0xFF8
  5147                           tblptrh	equ	0xFF7
  5148                           tblptrl	equ	0xFF6
  5149                           tablat	equ	0xFF5
  5150                           prodh	equ	0xFF4
  5151                           prodl	equ	0xFF3
  5152                           intcon	equ	0xFF2
  5153                           postinc0	equ	0xFEE
  5154                           wreg	equ	0xFE8
  5155                           indf1	equ	0xFE7
  5156                           postinc1	equ	0xFE6
  5157                           fsr1h	equ	0xFE2
  5158                           fsr1l	equ	0xFE1
  5159                           indf2	equ	0xFDF
  5160                           postinc2	equ	0xFDE
  5161                           fsr2h	equ	0xFDA
  5162                           fsr2l	equ	0xFD9
  5163                           status	equ	0xFD8
  5164                           
  5165 ;; *************** function _isdigit *****************
  5166 ;; Defined at:
  5167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  c               1    wreg     unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  c               1   16[COMRAM] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;		None               void
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         0       0       0       0       0       0       0
  5182 ;;      Locals:         2       0       0       0       0       0       0
  5183 ;;      Temps:          1       0       0       0       0       0       0
  5184 ;;      Totals:         3       0       0       0       0       0       0
  5185 ;;Total ram usage:        3 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_atol
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text34
  5196  0018FA                     __ptext34:
  5197                           	opt stack 0
  5198  0018FA                     _isdigit:
  5199                           	opt stack 25
  5200                           
  5201                           ;incstack = 0
  5202                           ;isdigit@c stored from wreg
  5203  0018FA  6E11               	movwf	isdigit@c,c
  5204  0018FC  0E00               	movlw	0
  5205  0018FE  6E10               	movwf	_isdigit$2277,c
  5206  001900  0E3A               	movlw	58
  5207  001902  6011               	cpfslt	isdigit@c,c
  5208  001904  D005               	goto	l2785
  5209  001906  0E2F               	movlw	47
  5210  001908  6411               	cpfsgt	isdigit@c,c
  5211  00190A  D002               	goto	l2785
  5212  00190C  0E01               	movlw	1
  5213  00190E  6E10               	movwf	_isdigit$2277,c
  5214  001910                     l2785:
  5215  001910  C010  F00F         	movff	_isdigit$2277,??_isdigit
  5216  001914  300F               	rrcf	??_isdigit,w,c
  5217  001916  0012               	return	
  5218  001918                     __end_of_isdigit:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           postinc0	equ	0xFEE
  5228                           wreg	equ	0xFE8
  5229                           indf1	equ	0xFE7
  5230                           postinc1	equ	0xFE6
  5231                           fsr1h	equ	0xFE2
  5232                           fsr1l	equ	0xFE1
  5233                           indf2	equ	0xFDF
  5234                           postinc2	equ	0xFDE
  5235                           fsr2h	equ	0xFDA
  5236                           fsr2l	equ	0xFD9
  5237                           status	equ	0xFD8
  5238                           
  5239 ;; *************** function ___lmul *****************
  5240 ;; Defined at:
  5241 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  multiplier      4   14[COMRAM] unsigned long 
  5244 ;;  multiplicand    4   18[COMRAM] unsigned long 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  product         4   22[COMRAM] unsigned long 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  4   14[COMRAM] unsigned long 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         8       0       0       0       0       0       0
  5257 ;;      Locals:         4       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0
  5259 ;;      Totals:        12       0       0       0       0       0       0
  5260 ;;Total ram usage:       12 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    1
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_atol
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text35
  5271  00159C                     __ptext35:
  5272                           	opt stack 0
  5273  00159C                     ___lmul:
  5274                           	opt stack 25
  5275                           
  5276                           ;incstack = 0
  5277  00159C  0E00               	movlw	0
  5278  00159E  6E17               	movwf	___lmul@product,c
  5279  0015A0  0E00               	movlw	0
  5280  0015A2  6E18               	movwf	___lmul@product+1,c
  5281  0015A4  0E00               	movlw	0
  5282  0015A6  6E19               	movwf	___lmul@product+2,c
  5283  0015A8  0E00               	movlw	0
  5284  0015AA  6E1A               	movwf	___lmul@product+3,c
  5285  0015AC                     l2769:
  5286  0015AC  A00F               	btfss	___lmul@multiplier,0,c
  5287  0015AE  D008               	goto	l2773
  5288  0015B0  5013               	movf	___lmul@multiplicand,w,c
  5289  0015B2  2617               	addwf	___lmul@product,f,c
  5290  0015B4  5014               	movf	___lmul@multiplicand+1,w,c
  5291  0015B6  2218               	addwfc	___lmul@product+1,f,c
  5292  0015B8  5015               	movf	___lmul@multiplicand+2,w,c
  5293  0015BA  2219               	addwfc	___lmul@product+2,f,c
  5294  0015BC  5016               	movf	___lmul@multiplicand+3,w,c
  5295  0015BE  221A               	addwfc	___lmul@product+3,f,c
  5296  0015C0                     l2773:
  5297  0015C0  90D8               	bcf	status,0,c
  5298  0015C2  3613               	rlcf	___lmul@multiplicand,f,c
  5299  0015C4  3614               	rlcf	___lmul@multiplicand+1,f,c
  5300  0015C6  3615               	rlcf	___lmul@multiplicand+2,f,c
  5301  0015C8  3616               	rlcf	___lmul@multiplicand+3,f,c
  5302  0015CA  90D8               	bcf	status,0,c
  5303  0015CC  3212               	rrcf	___lmul@multiplier+3,f,c
  5304  0015CE  3211               	rrcf	___lmul@multiplier+2,f,c
  5305  0015D0  3210               	rrcf	___lmul@multiplier+1,f,c
  5306  0015D2  320F               	rrcf	___lmul@multiplier,f,c
  5307  0015D4  500F               	movf	___lmul@multiplier,w,c
  5308  0015D6  1010               	iorwf	___lmul@multiplier+1,w,c
  5309  0015D8  1011               	iorwf	___lmul@multiplier+2,w,c
  5310  0015DA  1012               	iorwf	___lmul@multiplier+3,w,c
  5311  0015DC  A4D8               	btfss	status,2,c
  5312  0015DE  D7E6               	goto	l2769
  5313  0015E0  C017  F00F         	movff	___lmul@product,?___lmul
  5314  0015E4  C018  F010         	movff	___lmul@product+1,?___lmul+1
  5315  0015E8  C019  F011         	movff	___lmul@product+2,?___lmul+2
  5316  0015EC  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  5317  0015F0  0012               	return		;funcret
  5318  0015F2                     __end_of___lmul:
  5319                           	opt stack 0
  5320                           tblptru	equ	0xFF8
  5321                           tblptrh	equ	0xFF7
  5322                           tblptrl	equ	0xFF6
  5323                           tablat	equ	0xFF5
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           intcon	equ	0xFF2
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           indf1	equ	0xFE7
  5330                           postinc1	equ	0xFE6
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _process_data_parameterize *****************
  5340 ;; Defined at:
  5341 ;;		line 256 in file "SlaveComm_PIC18.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  5344 ;;		 -> process_data@parameters(50), 
  5345 ;;  buffer_to_pa    2   22[COMRAM] PTR struct buffer
  5346 ;;		 -> communications@receive_buffer(42), 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  inx             2   27[COMRAM] int 
  5349 ;;  parameter_po    1   30[COMRAM] unsigned char 
  5350 ;;  parameter_in    1   29[COMRAM] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5360 ;;      Params:         4       0       0       0       0       0       0
  5361 ;;      Locals:         4       0       0       0       0       0       0
  5362 ;;      Temps:          3       0       0       0       0       0       0
  5363 ;;      Totals:        11       0       0       0       0       0       0
  5364 ;;Total ram usage:       11 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    2
  5367 ;; This function calls:
  5368 ;;		___wmul
  5369 ;; This function is called by:
  5370 ;;		_process_data
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text36
  5375  000936                     __ptext36:
  5376                           	opt stack 0
  5377  000936                     _process_data_parameterize:
  5378                           	opt stack 26
  5379                           
  5380                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  5381                           
  5382                           ;incstack = 0
  5383  000936  0E00               	movlw	0
  5384  000938  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5385                           
  5386                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  5387  00093A  0E00               	movlw	0
  5388  00093C  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5389                           
  5390                           ;SlaveComm_PIC18.c: 268: for( int inx = 0; inx < 5; inx++ )
  5391  00093E  0E00               	movlw	0
  5392  000940  6E1D               	movwf	process_data_parameterize@inx+1,c
  5393  000942  0E00               	movlw	0
  5394  000944  6E1C               	movwf	process_data_parameterize@inx,c
  5395  000946  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  5396  000948  D008               	goto	l2955
  5397  00094A  501D               	movf	process_data_parameterize@inx+1,w,c
  5398  00094C  E105               	bnz	u2350
  5399  00094E  0E05               	movlw	5
  5400  000950  5C1C               	subwf	process_data_parameterize@inx,w,c
  5401  000952  B0D8               	btfsc	status,0,c
  5402  000954  D082               	goto	l2985
  5403  000956  D001               	goto	l2955
  5404  000958                     u2350:
  5405  000958  D080               	goto	l2985
  5406  00095A                     l2955:
  5407                           
  5408                           ;SlaveComm_PIC18.c: 269: {
  5409                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  5410  00095A  C01C  F00F         	movff	process_data_parameterize@inx,___wmul@multiplier
  5411  00095E  C01D  F010         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5412  000962  0E00               	movlw	0
  5413  000964  6E12               	movwf	___wmul@multiplicand+1,c
  5414  000966  0E0A               	movlw	10
  5415  000968  6E11               	movwf	___wmul@multiplicand,c
  5416  00096A  EC37  F00C         	call	___wmul	;wreg free
  5417  00096E  500F               	movf	?___wmul,w,c
  5418  000970  2415               	addwf	process_data_parameterize@parameters,w,c
  5419  000972  6ED9               	movwf	fsr2l,c
  5420  000974  5010               	movf	?___wmul+1,w,c
  5421  000976  2016               	addwfc	process_data_parameterize@parameters+1,w,c
  5422  000978  6EDA               	movwf	fsr2h,c
  5423  00097A  0E00               	movlw	0
  5424  00097C  6EDF               	movwf	indf2,c
  5425  00097E  4A1C               	infsnz	process_data_parameterize@inx,f,c
  5426  000980  2A1D               	incf	process_data_parameterize@inx+1,f,c
  5427  000982  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  5428  000984  D7EA               	goto	l2955
  5429  000986  501D               	movf	process_data_parameterize@inx+1,w,c
  5430  000988  E168               	bnz	l2985
  5431  00098A  D7E1               	goto	L2
  5432  00098C                     l2961:
  5433                           
  5434                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  5435  00098C  0E00               	movlw	0
  5436  00098E  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5437                           
  5438                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  5439  000990  2A1E               	incf	process_data_parameterize@parameter_index,f,c
  5440                           
  5441                           ;SlaveComm_PIC18.c: 285: if( parameter_index >= 5 )
  5442  000992  0E04               	movlw	4
  5443  000994  641E               	cpfsgt	process_data_parameterize@parameter_index,c
  5444  000996  D05A               	goto	l2983
  5445                           
  5446                           ;SlaveComm_PIC18.c: 286: {
  5447                           ;SlaveComm_PIC18.c: 289: parameter_index = ( 5 - 1 );
  5448  000998  0E04               	movlw	4
  5449  00099A  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5450                           
  5451                           ;SlaveComm_PIC18.c: 290: }
  5452                           ;SlaveComm_PIC18.c: 292: break;
  5453  00099C  D057               	goto	l2983
  5454  00099E                     l2969:
  5455                           
  5456                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5457  00099E  EE20 F029          	lfsr	2,41
  5458  0009A2  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5459  0009A4  26D9               	addwf	fsr2l,f,c
  5460  0009A6  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5461  0009A8  22DA               	addwfc	fsr2h,f,c
  5462  0009AA  50DF               	movf	indf2,w,c
  5463  0009AC  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5464  0009AE  5019               	movf	??_process_data_parameterize,w,c
  5465  0009B0  0D01               	mullw	1
  5466  0009B2  50F3               	movf	prodl,w,c
  5467  0009B4  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5468  0009B6  6ED9               	movwf	fsr2l,c
  5469  0009B8  50F4               	movf	prodh,w,c
  5470  0009BA  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5471  0009BC  6EDA               	movwf	fsr2h,c
  5472  0009BE  501E               	movf	process_data_parameterize@parameter_index,w,c
  5473  0009C0  0D0A               	mullw	10
  5474  0009C2  C015  F01A         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5475  0009C6  C016  F01B         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5476  0009CA  50F3               	movf	prodl,w,c
  5477  0009CC  261A               	addwf	??_process_data_parameterize+1,f,c
  5478  0009CE  50F4               	movf	prodh,w,c
  5479  0009D0  221B               	addwfc	??_process_data_parameterize+2,f,c
  5480  0009D2  501F               	movf	process_data_parameterize@parameter_position,w,c
  5481  0009D4  0D01               	mullw	1
  5482  0009D6  50F3               	movf	prodl,w,c
  5483  0009D8  241A               	addwf	??_process_data_parameterize+1,w,c
  5484  0009DA  6EE1               	movwf	fsr1l,c
  5485  0009DC  50F4               	movf	prodh,w,c
  5486  0009DE  201B               	addwfc	??_process_data_parameterize+2,w,c
  5487  0009E0  6EE2               	movwf	fsr1h,c
  5488  0009E2  CFDF FFE7          	movff	indf2,indf1
  5489                           
  5490                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  5491  0009E6  2A1F               	incf	process_data_parameterize@parameter_position,f,c
  5492                           
  5493                           ;SlaveComm_PIC18.c: 297: if( parameter_position >= 10 )
  5494  0009E8  0E09               	movlw	9
  5495  0009EA  641F               	cpfsgt	process_data_parameterize@parameter_position,c
  5496  0009EC  D002               	goto	l2977
  5497                           
  5498                           ;SlaveComm_PIC18.c: 298: {
  5499                           ;SlaveComm_PIC18.c: 301: parameter_position = ( 10 - 1 );
  5500  0009EE  0E09               	movlw	9
  5501  0009F0  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5502  0009F2                     l2977:
  5503                           
  5504                           ;SlaveComm_PIC18.c: 302: }
  5505                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  5506  0009F2  501E               	movf	process_data_parameterize@parameter_index,w,c
  5507  0009F4  0D0A               	mullw	10
  5508  0009F6  C015  F019         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5509  0009FA  C016  F01A         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5510  0009FE  50F3               	movf	prodl,w,c
  5511  000A00  2619               	addwf	??_process_data_parameterize,f,c
  5512  000A02  50F4               	movf	prodh,w,c
  5513  000A04  221A               	addwfc	??_process_data_parameterize+1,f,c
  5514  000A06  501F               	movf	process_data_parameterize@parameter_position,w,c
  5515  000A08  0D01               	mullw	1
  5516  000A0A  50F3               	movf	prodl,w,c
  5517  000A0C  2419               	addwf	??_process_data_parameterize,w,c
  5518  000A0E  6ED9               	movwf	fsr2l,c
  5519  000A10  50F4               	movf	prodh,w,c
  5520  000A12  201A               	addwfc	??_process_data_parameterize+1,w,c
  5521  000A14  6EDA               	movwf	fsr2h,c
  5522  000A16  0E00               	movlw	0
  5523  000A18  6EDF               	movwf	indf2,c
  5524                           
  5525                           ;SlaveComm_PIC18.c: 307: }
  5526                           
  5527                           ;SlaveComm_PIC18.c: 306: break;
  5528  000A1A  D018               	goto	l2983
  5529  000A1C                     l2981:
  5530  000A1C  EE20 F029          	lfsr	2,41
  5531  000A20  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5532  000A22  26D9               	addwf	fsr2l,f,c
  5533  000A24  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5534  000A26  22DA               	addwfc	fsr2h,f,c
  5535  000A28  50DF               	movf	indf2,w,c
  5536  000A2A  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5537  000A2C  5019               	movf	??_process_data_parameterize,w,c
  5538  000A2E  0D01               	mullw	1
  5539  000A30  50F3               	movf	prodl,w,c
  5540  000A32  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5541  000A34  6ED9               	movwf	fsr2l,c
  5542  000A36  50F4               	movf	prodh,w,c
  5543  000A38  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5544  000A3A  6EDA               	movwf	fsr2h,c
  5545  000A3C  50DF               	movf	indf2,w,c
  5546                           
  5547                           ; Switch size 1, requested type "space"
  5548                           ; Number of cases is 2, Range of values is 33 to 59
  5549                           ; switch strategies available:
  5550                           ; Name         Instructions Cycles
  5551                           ; simple_byte            7     4 (average)
  5552                           ;	Chosen strategy is simple_byte
  5553  000A3E  0A21               	xorlw	33	; case 33
  5554  000A40  B4D8               	btfsc	status,2,c
  5555  000A42  D004               	goto	l2983
  5556  000A44  0A1A               	xorlw	26	; case 59
  5557  000A46  B4D8               	btfsc	status,2,c
  5558  000A48  D7A1               	goto	l2961
  5559  000A4A  D7A9               	goto	l2969
  5560  000A4C                     l2983:
  5561                           
  5562                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  5563  000A4C  EE20 F029          	lfsr	2,41
  5564  000A50  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5565  000A52  26D9               	addwf	fsr2l,f,c
  5566  000A54  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5567  000A56  22DA               	addwfc	fsr2h,f,c
  5568  000A58  2ADF               	incf	indf2,f,c
  5569  000A5A                     l2985:
  5570  000A5A  EE20 F029          	lfsr	2,41
  5571  000A5E  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5572  000A60  26D9               	addwf	fsr2l,f,c
  5573  000A62  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5574  000A64  22DA               	addwfc	fsr2h,f,c
  5575  000A66  50DF               	movf	indf2,w,c
  5576  000A68  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5577  000A6A  5019               	movf	??_process_data_parameterize,w,c
  5578  000A6C  0D01               	mullw	1
  5579  000A6E  50F3               	movf	prodl,w,c
  5580  000A70  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5581  000A72  6ED9               	movwf	fsr2l,c
  5582  000A74  50F4               	movf	prodh,w,c
  5583  000A76  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5584  000A78  6EDA               	movwf	fsr2h,c
  5585  000A7A  0E2A               	movlw	42
  5586  000A7C  18DE               	xorwf	postinc2,w,c
  5587  000A7E  B4D8               	btfsc	status,2,c
  5588  000A80  0012               	return	
  5589  000A82  EE20 F029          	lfsr	2,41
  5590  000A86  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5591  000A88  26D9               	addwf	fsr2l,f,c
  5592  000A8A  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5593  000A8C  22DA               	addwfc	fsr2h,f,c
  5594  000A8E  0E28               	movlw	40
  5595  000A90  60DF               	cpfslt	indf2,c
  5596  000A92  0012               	return	
  5597  000A94  EE20 F028          	lfsr	2,40
  5598  000A98  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5599  000A9A  26D9               	addwf	fsr2l,f,c
  5600  000A9C  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5601  000A9E  22DA               	addwfc	fsr2h,f,c
  5602  000AA0  EE10 F029          	lfsr	1,41
  5603  000AA4  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5604  000AA6  26E1               	addwf	fsr1l,f,c
  5605  000AA8  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5606  000AAA  22E2               	addwfc	fsr1h,f,c
  5607  000AAC  50DE               	movf	postinc2,w,c
  5608  000AAE  18E6               	xorwf	postinc1,w,c
  5609  000AB0  B4D8               	btfsc	status,2,c
  5610  000AB2  0012               	return	
  5611  000AB4  D7B3               	goto	l2981
  5612  000AB6                     __end_of_process_data_parameterize:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           intcon	equ	0xFF2
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postinc1	equ	0xFE6
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           fsr2h	equ	0xFDA
  5630                           fsr2l	equ	0xFD9
  5631                           status	equ	0xFD8
  5632                           
  5633 ;; *************** function ___wmul *****************
  5634 ;; Defined at:
  5635 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  multiplier      2   14[COMRAM] unsigned int 
  5638 ;;  multiplicand    2   16[COMRAM] unsigned int 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  product         2   18[COMRAM] unsigned int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2   14[COMRAM] unsigned int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0, prodl, prodh
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5650 ;;      Params:         4       0       0       0       0       0       0
  5651 ;;      Locals:         2       0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_process_data_parameterize
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text37
  5665  00186E                     __ptext37:
  5666                           	opt stack 0
  5667  00186E                     ___wmul:
  5668                           	opt stack 26
  5669                           
  5670                           ;incstack = 0
  5671  00186E  500F               	movf	___wmul@multiplier,w,c
  5672  001870  0211               	mulwf	___wmul@multiplicand,c
  5673  001872  CFF3 F013          	movff	prodl,___wmul@product
  5674  001876  CFF4 F014          	movff	prodh,___wmul@product+1
  5675  00187A  500F               	movf	___wmul@multiplier,w,c
  5676  00187C  0212               	mulwf	___wmul@multiplicand+1,c
  5677  00187E  50F3               	movf	prodl,w,c
  5678  001880  2614               	addwf	___wmul@product+1,f,c
  5679  001882  5010               	movf	___wmul@multiplier+1,w,c
  5680  001884  0211               	mulwf	___wmul@multiplicand,c
  5681  001886  50F3               	movf	prodl,w,c
  5682  001888  2614               	addwf	___wmul@product+1,f,c
  5683  00188A  C013  F00F         	movff	___wmul@product,?___wmul
  5684  00188E  C014  F010         	movff	___wmul@product+1,?___wmul+1
  5685  001892  0012               	return	
  5686  001894                     __end_of___wmul:
  5687                           	opt stack 0
  5688                           tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           intcon	equ	0xFF2
  5695                           postinc0	equ	0xFEE
  5696                           wreg	equ	0xFE8
  5697                           indf1	equ	0xFE7
  5698                           postinc1	equ	0xFE6
  5699                           fsr1h	equ	0xFE2
  5700                           fsr1l	equ	0xFE1
  5701                           indf2	equ	0xFDF
  5702                           postinc2	equ	0xFDE
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8
  5706                           
  5707 ;; *************** function _SPISlaveInit *****************
  5708 ;; Defined at:
  5709 ;;		line 671 in file "SlaveComm_PIC18.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, status,2
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5723 ;;      Params:         0       0       0       0       0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0
  5726 ;;      Totals:         0       0       0       0       0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    1
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_communications
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text38
  5738  001644                     __ptext38:
  5739                           	opt stack 0
  5740  001644                     _SPISlaveInit:
  5741                           	opt stack 28
  5742                           
  5743                           ;SlaveComm_PIC18.c: 674: TRISAbits.TRISA0 = 0;
  5744                           
  5745                           ;incstack = 0
  5746  001644  9092               	bcf	3986,0,c	;volatile
  5747                           
  5748                           ;SlaveComm_PIC18.c: 675: TRISAbits.TRISA1 = 1;
  5749  001646  8292               	bsf	3986,1,c	;volatile
  5750                           
  5751                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC3 = 0;
  5752  001648  9694               	bcf	3988,3,c	;volatile
  5753                           
  5754                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC5 = 0;
  5755  00164A  9A94               	bcf	3988,5,c	;volatile
  5756                           
  5757                           ;SlaveComm_PIC18.c: 679: TRISCbits.TRISC6 = 0;
  5758  00164C  9C94               	bcf	3988,6,c	;volatile
  5759                           
  5760                           ;SlaveComm_PIC18.c: 680: TRISCbits.TRISC7 = 0;
  5761  00164E  9E94               	bcf	3988,7,c	;volatile
  5762                           
  5763                           ;SlaveComm_PIC18.c: 681: ANSELAbits.ANSA1 = 0b0;
  5764  001650  010F               	movlb	15	; () banked
  5765  001652  9338               	bcf	56,1,b	;volatile
  5766                           
  5767                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC6 = 1;
  5768  001654  8C8B               	bsf	3979,6,c	;volatile
  5769                           
  5770                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC3 = 1;
  5771  001656  868B               	bsf	3979,3,c	;volatile
  5772                           
  5773                           ;SlaveComm_PIC18.c: 685: LATCbits.LATC5 = 1;
  5774  001658  8A8B               	bsf	3979,5,c	;volatile
  5775                           
  5776                           ;SlaveComm_PIC18.c: 686: LATCbits.LATC7 = 1;
  5777  00165A  8E8B               	bsf	3979,7,c	;volatile
  5778                           
  5779                           ;SlaveComm_PIC18.c: 689: SSP2CON1bits.SSPEN = 0;
  5780  00165C  9A6C               	bcf	3948,5,c	;volatile
  5781                           
  5782                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB0 = 0b0;
  5783  00165E  010F               	movlb	15	; () banked
  5784  001660  9139               	bcf	57,0,b	;volatile
  5785                           
  5786                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB1 = 0b0;
  5787  001662  010F               	movlb	15	; () banked
  5788  001664  9339               	bcf	57,1,b	;volatile
  5789                           
  5790                           ;SlaveComm_PIC18.c: 693: ANSELBbits.ANSB2 = 0b0;
  5791  001666  010F               	movlb	15	; () banked
  5792  001668  9539               	bcf	57,2,b	;volatile
  5793                           
  5794                           ;SlaveComm_PIC18.c: 694: ANSELBbits.ANSB3 = 0b0;
  5795  00166A  010F               	movlb	15	; () banked
  5796  00166C  9739               	bcf	57,3,b	;volatile
  5797                           
  5798                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB0 = 0b1;
  5799  00166E  8093               	bsf	3987,0,c	;volatile
  5800                           
  5801                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB1 = 0b1;
  5802  001670  8293               	bsf	3987,1,c	;volatile
  5803                           
  5804                           ;SlaveComm_PIC18.c: 698: TRISBbits.RB2 = 0b1;
  5805  001672  8493               	bsf	3987,2,c	;volatile
  5806                           
  5807                           ;SlaveComm_PIC18.c: 699: TRISBbits.RB3 = 0b0;
  5808  001674  9693               	bcf	3987,3,c	;volatile
  5809                           
  5810                           ;SlaveComm_PIC18.c: 701: SSP2STATbits.SMP = 0;
  5811  001676  9E6D               	bcf	3949,7,c	;volatile
  5812                           
  5813                           ;SlaveComm_PIC18.c: 702: SSP2STATbits.CKE = 1;
  5814  001678  8C6D               	bsf	3949,6,c	;volatile
  5815                           
  5816                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.WCOL = 0;
  5817  00167A  9E6C               	bcf	3948,7,c	;volatile
  5818                           
  5819                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.SSPOV = 0;
  5820  00167C  9C6C               	bcf	3948,6,c	;volatile
  5821                           
  5822                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPEN = 0;
  5823  00167E  9A6C               	bcf	3948,5,c	;volatile
  5824                           
  5825                           ;SlaveComm_PIC18.c: 707: SSP2CON1bits.CKP = 1;
  5826  001680  886C               	bsf	3948,4,c	;volatile
  5827                           
  5828                           ; BSR set to: 15
  5829                           ;SlaveComm_PIC18.c: 708: SSP2CON1bits.SSPM = 0b0100;
  5830  001682  506C               	movf	3948,w,c	;volatile
  5831  001684  0BF0               	andlw	-16
  5832  001686  0904               	iorlw	4
  5833  001688  6E6C               	movwf	3948,c	;volatile
  5834                           
  5835                           ;SlaveComm_PIC18.c: 711: SSP2CON3 = 0x00;
  5836  00168A  0E00               	movlw	0
  5837  00168C  6E69               	movwf	3945,c	;volatile
  5838                           
  5839                           ; BSR set to: 15
  5840                           ;SlaveComm_PIC18.c: 712: SSP2CON3bits.BOEN = 0b0;
  5841  00168E  9869               	bcf	3945,4,c	;volatile
  5842                           
  5843                           ; BSR set to: 15
  5844                           ;SlaveComm_PIC18.c: 714: SSP2CON1bits.SSPEN = 1;
  5845  001690  8A6C               	bsf	3948,5,c	;volatile
  5846  001692  0012               	return	
  5847  001694                     __end_of_SPISlaveInit:
  5848                           	opt stack 0
  5849                           tblptru	equ	0xFF8
  5850                           tblptrh	equ	0xFF7
  5851                           tblptrl	equ	0xFF6
  5852                           tablat	equ	0xFF5
  5853                           prodh	equ	0xFF4
  5854                           prodl	equ	0xFF3
  5855                           intcon	equ	0xFF2
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           indf1	equ	0xFE7
  5859                           postinc1	equ	0xFE6
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           indf2	equ	0xFDF
  5863                           postinc2	equ	0xFDE
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8
  5867                           
  5868 ;; *************** function _Timer0_ISR *****************
  5869 ;; Defined at:
  5870 ;;		line 199 in file "Current_Sense_Main.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5884 ;;      Params:         0       0       0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0
  5886 ;;      Temps:         14       0       0       0       0       0       0
  5887 ;;      Totals:        14       0       0       0       0       0       0
  5888 ;;Total ram usage:       14 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		Interrupt level 2
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	intcode
  5898  000008                     __pintcode:
  5899                           	opt stack 0
  5900  000008                     _Timer0_ISR:
  5901                           	opt stack 23
  5902                           
  5903                           ; BSR set to: 15
  5904                           ;incstack = 0
  5905  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5906  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5907  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5908  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5909  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5910  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5911  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5912  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5913  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5914  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5915  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5916  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5917  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5918  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5919  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5920                           
  5921                           ;Current_Sense_Main.c: 202: INTCONbits.TMR0IF = 0;
  5922  000042  94F2               	bcf	intcon,2,c	;volatile
  5923                           
  5924                           ;Current_Sense_Main.c: 204: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5925  000044  0EFC               	movlw	252
  5926  000046  6ED7               	movwf	4055,c	;volatile
  5927                           
  5928                           ;Current_Sense_Main.c: 205: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5929  000048  0E18               	movlw	24
  5930  00004A  6ED6               	movwf	4054,c	;volatile
  5931                           
  5932                           ;Current_Sense_Main.c: 207: timerCountHF++;
  5933  00004C  0E01               	movlw	1
  5934  00004E  264D               	addwf	_timerCountHF,f,c	;volatile
  5935  000050  0E00               	movlw	0
  5936  000052  224E               	addwfc	_timerCountHF+1,f,c	;volatile
  5937  000054  224F               	addwfc	_timerCountHF+2,f,c	;volatile
  5938  000056  2250               	addwfc	_timerCountHF+3,f,c	;volatile
  5939                           
  5940                           ;Current_Sense_Main.c: 208: timerCountLF++;
  5941  000058  0E01               	movlw	1
  5942  00005A  2649               	addwf	_timerCountLF,f,c	;volatile
  5943  00005C  0E00               	movlw	0
  5944  00005E  224A               	addwfc	_timerCountLF+1,f,c	;volatile
  5945  000060  224B               	addwfc	_timerCountLF+2,f,c	;volatile
  5946  000062  224C               	addwfc	_timerCountLF+3,f,c	;volatile
  5947                           
  5948                           ;Current_Sense_Main.c: 210: return;
  5949  000064  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5950  000068  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5951  00006C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5952  000070  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5953  000074  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5954  000078  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5955  00007C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5956  000080  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5957  000084  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5958  000088  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5959  00008C  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5960  000090  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5961  000094  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5962  000098  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5963  00009C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5964  00009E  0011               	retfie		f
  5965  0000A0                     __end_of_Timer0_ISR:
  5966                           	opt stack 0
  5967                           pclatu	equ	0xFFB
  5968                           pclath	equ	0xFFA
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           prodh	equ	0xFF4
  5974                           prodl	equ	0xFF3
  5975                           intcon	equ	0xFF2
  5976                           postinc0	equ	0xFEE
  5977                           fsr0h	equ	0xFEA
  5978                           fsr0l	equ	0xFE9
  5979                           wreg	equ	0xFE8
  5980                           indf1	equ	0xFE7
  5981                           postinc1	equ	0xFE6
  5982                           fsr1h	equ	0xFE2
  5983                           fsr1l	equ	0xFE1
  5984                           indf2	equ	0xFDF
  5985                           postinc2	equ	0xFDE
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           pclatu	equ	0xFFB
  5990                           pclath	equ	0xFFA
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           fsr0h	equ	0xFEA
  6000                           fsr0l	equ	0xFE9
  6001                           wreg	equ	0xFE8
  6002                           indf1	equ	0xFE7
  6003                           postinc1	equ	0xFE6
  6004                           fsr1h	equ	0xFE2
  6005                           fsr1l	equ	0xFE1
  6006                           indf2	equ	0xFDF
  6007                           postinc2	equ	0xFDE
  6008                           fsr2h	equ	0xFDA
  6009                           fsr2l	equ	0xFD9
  6010                           status	equ	0xFD8
  6011                           
  6012                           	psect	rparam
  6013  0000                     pclatu	equ	0xFFB
  6014                           pclath	equ	0xFFA
  6015                           tblptru	equ	0xFF8
  6016                           tblptrh	equ	0xFF7
  6017                           tblptrl	equ	0xFF6
  6018                           tablat	equ	0xFF5
  6019                           prodh	equ	0xFF4
  6020                           prodl	equ	0xFF3
  6021                           intcon	equ	0xFF2
  6022                           postinc0	equ	0xFEE
  6023                           fsr0h	equ	0xFEA
  6024                           fsr0l	equ	0xFE9
  6025                           wreg	equ	0xFE8
  6026                           indf1	equ	0xFE7
  6027                           postinc1	equ	0xFE6
  6028                           fsr1h	equ	0xFE2
  6029                           fsr1l	equ	0xFE1
  6030                           indf2	equ	0xFDF
  6031                           postinc2	equ	0xFDE
  6032                           fsr2h	equ	0xFDA
  6033                           fsr2l	equ	0xFD9
  6034                           status	equ	0xFD8
  6035                           
  6036                           	psect	temp
  6037  000051                     btemp:
  6038                           	opt stack 0
  6039  000051                     	ds	1
  6040  0000                     int$flags	set	btemp
  6041                           pclatu	equ	0xFFB
  6042                           pclath	equ	0xFFA
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           postinc0	equ	0xFEE
  6051                           fsr0h	equ	0xFEA
  6052                           fsr0l	equ	0xFE9
  6053                           wreg	equ	0xFE8
  6054                           indf1	equ	0xFE7
  6055                           postinc1	equ	0xFE6
  6056                           fsr1h	equ	0xFE2
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      80
    BANK0           160     63     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(COMRAM[12]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[12]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _communications->_resetCommunications
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _utoa->___lwdiv
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _process_data->_process_data_parameters

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   85398
                                             61 BANK0      2     2      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      5     5      0    1002
                                             27 COMRAM     5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     299
                             _initIO
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initMCPFout                                          1     1      0     299
                                             19 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     299
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   83730
                                             59 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     402
                                             16 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   39784
                                             54 COMRAM     2     0      2
                                              0 BANK0      2     2      0
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   11793
                                             34 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                 9     7      2   13650
                                             34 COMRAM     9     7      2
                   _command_builder3
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1777
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     572
                                             17 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     148
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   42938
                                              4 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   41329
                                             54 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    3575
                                             25 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     981
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    9990
                                             30 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    9497
                                             26 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   14032
                                             40 COMRAM    14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2082
                                             27 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     386
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   11685
                                             26 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    5429
                                             18 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    3728
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1050
                                             26 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     404
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1249
                                             20 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _utoa
           ___lwdiv
           ___lwmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initMCPFout
       _delayMS10
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3F      93       4       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E3       9        0.0%
DATA                 0      0      E3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May 15 20:32:05 2017

                                       _SPISlaveInit 1644                                  ___wmul@multiplicand 0011  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l121 18AC                                                  l140 0CB8  
                                                l109 14B2                                                  l119 18B0  
                                                l146 17B4                                                  l282 0FA2  
                                                l805 132E                                                  l389 181E  
                                                l815 147C                                                  l594 0DDE  
                                                l862 0EC2                                                  l872 163A  
                                                l882 1758                                                  l779 10CE  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 00B4                                         ?_initMCPFout 0001  
                                               l3021 07B2                                                 l3031 0844  
                                               l3025 07FA                                                 l3009 0714  
                                               l3043 08D4                                                 l3035 0874  
                                               l3051 0932                                                 l3047 0904  
                                               l3039 08A4                                                 l3151 1134  
                                               l3063 18F2                                                 l3223 12BA  
                                               l3215 125A                                                 l3153 1142  
                                               l3161 1166                                                 l3171 0EF2  
                                               l3155 1150                                                 l3323 0CA4  
                                               l3307 0C46                                                 l3157 115C  
                                               l3261 1008                                                 l3253 0FD0  
                                               l3309 0C4A                                                 l2711 0AFC  
                                               l3183 0F36                                                 l3255 0FE0  
                                               l3263 101C                                                 l3335 0CEE  
                                               l2641 134A                                                 l3193 0F90  
                                               l3273 1048                                                 l3329 0CC0  
                                               l3353 149C                                                 l2731 0BA0  
                                               l2707 0AC8                                                 l2645 1388  
                                               l2653 12E0                                                 l2725 0B6A  
                                               l2717 0B2E                                                 l3269 1036  
                                               l3365 14D6                                                 l2655 12EC  
                                               l2743 0E00                                                 l2719 0B32  
                                               l2807 1630                                                 l2823 174E  
                                               l2815 172E                                                 l2841 0CF8  
                                               l2665 1320                                                 l2657 12F0  
                                               l2681 146E                                                 l2673 143A  
                                               l2753 0E58                                                 l2737 0BD8  
                                               l2817 1736                                                 l2921 17A2  
                                               l3369 14E0                                                 l2675 1446  
                                               l2819 173A                                                 l2773 15C0  
                                               l2677 144A                                                 l2871 0D9A  
                                               l2961 098C                                                 l2769 15AC  
                                               l2785 1910                                                 l2865 0D48  
                                               l2857 0D38                                                 l2945 181A  
                                               l2955 095A                                                 l2867 0D8C  
                                               l2859 0D3E                                                 l2795 1608  
                                               l2981 0A1C                                                 l2797 1610  
                                               l2885 1056                                                 l2983 0A4C  
                                               l2799 1614                                                 l2895 1090  
                                               l2977 09F2                                                 l2969 099E  
                                               l2985 0A5A                                                 l2997 0684  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2220 17F2                                                 u2230 17F4  
                                               u2350 0958                                                 _IPR1 000F9F  
                                               u1910 137E                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               u1920 13B4                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1917 1374  
                                               u2830 0CD2                                                 u1927 13AA  
                                               u2907 17A8                                                 u2917 10FC  
                                               u2867 13D0                                                 u2877 13E2  
                                               u2887 13F8                                                 u2897 140E  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atol 0CF8  
                                               _main 148E                                                 _init 195E  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 0051                                                 _utoa 104E  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00A0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00F0                        __size_of_com_command_setPower 0042  
                                       ___param_bank 000000                                       _communications 0FA6  
                                              ?_atol 001B                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1340                                                ?_utoa 0016  
                                    __end_of___llmod 148E                                       __CFG_DEBUG$OFF 000000  
                                    __end_of___lwdiv 1644                                      __end_of___lwmod 1762  
                                  ?_command_builder1 001B                                    ?_command_builder3 001B  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0013  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0017  
                                 ??_command_builder1 001F                                   ??_command_builder3 0023  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 00B6  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1948                                     ?_powerPulseCheck 0001  
                        powerPulseCheck@meterWattsHF 001F                          powerPulseCheck@meterWattsLF 001C  
                                    __end_of_isdigit 1918                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0024                                                atol@c 0028  
                                              atol@s 001B                                                _ultoa 0DF0  
                                              pclath 000FFA                                                tablat 000FF5  
                                              utoa@c 001E                                                utoa@v 001C  
                                              status 000FD8                                      __end_of_strcmp2 0BE2  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 0019                 com_command_setEnergyUsed@send_buffer 0029  
                      command_builder_add_string@inx 0019                                      __initialization 1822  
                                       __end_of_atol 0DF0                                         __end_of_main 14F0  
                                       __end_of_init 196C                               __end_of_communications 104E  
                                       __end_of_utoa 10F2                               _com_command_setVersion 1848  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 17FA  
                       command_builder_add_char@data 0011                                               ??_atol 001F  
                                             ??_main 0039                                               ??_init 0015  
                                      _SPI_send_data 18DA                                               ??_utoa 001C  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0015                                     ___llmod@dividend 000F  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 001C  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0010                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 159C  
                                             ___wmul 186E                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 0017  
                                          ??___llmod 0017                                            ??___lwdiv 0013  
                                          ??___lwmod 0013                                               _initIO 18B8  
                                             clear_0 1828                                               clear_1 1834  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 0029  
                                          ??_initOSC 000F                            _process_data_parameterize 0936  
                                          ??_isdigit 000F                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 0028  
                           com_command_setPower@temp 0025                                               ultoa@v 0024  
                                          ??_strcmp2 0013                                     __end_of_strmatch 17FA  
                                      ?_receive_data 0012                                           __accesstop 0060  
                            __end_of__initialization 183A                                 __size_of_initMCPFout 006C  
                    com_command_setPower@send_buffer 0023                                        ___rparam_used 000001  
                                  SPI_send_data@data 000F                                       __pcstackCOMRAM 0001  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0012  
                                      __end_of_ultoa 0EE6                            ??_process_data_parameters 0037  
                       communications@receive_buffer 008A                command_builder_add_string@data_string 0015  
                 __end_of_command_builder_add_string 13BC                           _command_builder_add_string 1340  
                                            ??_ultoa 0024                                           __pbssBANK0 0060  
                                     ??_receive_data 0014                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0016                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 1894                                              ?___lmul 000F  
                                            ?___wmul 000F                                   __CFG_CCP3MX$PORTB5 000000  
                                 ?_pulseFoutPassThru 0001                                      ??_SPI_send_data 000F  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0037           communications@end_of_transmission_received 0044  
                                     ___lmul@product 0017                          __end_of_resetCommunications 1190  
                                    _meterEnergyUsed 0039                                  ??_pulseFoutPassThru 000F  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 1720                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1948                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 1546                                    __end_of_delayMS10 17CA  
                    __end_of_process_data_parameters 0936                             __end_of_SPI_receive_data 1822  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
                          __end_of_pulseFoutPassThru 18B8      process_data_parameterize@buffer_to_parameterize 0017  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0023                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 001E  
                                            ___lldiv 12BE                                      __size_of___wmul 0026  
                                            ___llmod 1428                                              ___lwdiv 15F2  
                                            ___lwmod 1720                                         __psmallconst 0600  
                               SPI_receive_data@data 000F                                      __size_of_initIO 0022  
                                            __pcinit 1822                                              __ramtop 0600  
                                          ?_strmatch 001A                                              __ptext0 148E  
                                            __ptext1 1894                                              __ptext2 0BE2  
                                            __ptext3 1918                                              __ptext4 195E  
                                            __ptext5 1930                                              __ptext6 13BC  
                                            __ptext7 1798                                              __ptext8 18B8  
                                            __ptext9 0FA6                                           _meterWatts 003F  
                                          _T0CONbits 000FD5                                              _initOSC 1930  
                                  __end_of_initTimer 1930                                              _isdigit 18FA  
                                __size_of_Timer0_ISR 0098                                              main@inx 00F1  
                                            _strcmp2 0AB6                                 end_of_initialization 183A  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 12BE  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 186E  
                           __size_of_powerPulseCheck 0116                                     ??_communications 0039  
                                    ___lldiv@divisor 0013                                      ___lldiv@counter 001B  
        process_data_parameterize@parameter_position 001F                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                                            utoa@buf 0016                                              utoa@val 0018  
                              receive_data@my_status 0041                                 __end_of_receive_data 0FA6  
                                         ??_strmatch 001E                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 0042                          ??_com_command_setEnergyUsed 002B  
                                      ?_process_data 00B8                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                         process_data@receive_buffer 00B8                    __end_of_process_data_parameterize 0AB6  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 16DE  
                communications@receive_current_state 0043                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 15F2                                       __end_of___wmul 1894  
              command_builder_add_string@send_buffer 0013                      powerPulseCheck@checkWattsHFvsLF 001E  
                                     __end_of_initIO 18DA                                       ??_process_data 0038  
                        ?_command_builder_add_string 0013                                  start_initialization 1822  
                                      ??_initMCPFout 0014                         resetCommunications@commState 003D  
                                   _command_builder1 14F0                                     _command_builder3 1190  
                          _com_command_setEnergyUsed 1694                                      ___llmod@divisor 0013  
                                    ___llmod@counter 0017                    com_command_setVersion@send_buffer 0023  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0011  
                              ?_com_command_setPower 0023                                       ??_SPISlaveInit 000F  
                                           ??___lmul 0017                                             ??___wmul 0013  
                send_end_of_transmission@send_buffer 001F                                    ??_powerPulseCheck 001C  
                                           ??_initIO 000F                           ??_send_end_of_transmission 0021  
                         ??_command_builder_add_char 0012                                          __pbssCOMRAM 0039  
                                      __pcstackBANK0 00B4                             SPI_receive_data@recvGood 0011  
                                 __end_of_Timer0_ISR 00A0                                         _isdigit$2277 0010  
                                     delayMS10@count 000F                                    ?_SPI_receive_data 000F  
                                          _delayMS10 1798                                  __end_of_initMCPFout 1428  
                      com_command_setEnergyUsed@temp 002B                                   ??_SPI_receive_data 0011  
                                       delayMS10@inx 0012                                     ___lwdiv@dividend 000F  
                              command_builder1@data1 001D                          command_builder1@send_buffer 001B  
                           ?_process_data_parameters 00B4                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 001D  
                              command_builder3@data2 001F                                command_builder3@data3 0021  
                                           ?___lldiv 000F                                             ?___llmod 000F  
                                           ?___lwdiv 000F                                             ?___lwmod 000F  
                              __end_of_SPI_send_data 18FA                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 0037  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                  send_data@send_end 0015                                            _initTimer 1918  
                                   ___lwdiv@quotient 0014                                             ?_strcmp2 000F  
                       __size_of_resetCommunications 009E                                       __size_of_ultoa 00F6  
                                     strmatch@result 001E                  process_data_parameterize@parameters 0015  
                           pulseFoutPassThru@runonce 0048                                         _receive_data 0EE6  
                                     ___wmul@product 0013                                             _LATAbits 000F89  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 000F                                 __end_of_process_data 1798  
                                          _send_data 122E                               ??_com_command_setPower 0025  
                  process_data_parameters@parameters 00B4                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 000F  
                command_builder_add_char@send_buffer 000F                                           ?_initTimer 0001  
                                  ___lmul@multiplier 000F                                 __end_of_SPISlaveInit 1694  
                                        _initMCPFout 13BC             process_data@end_of_transmission_received 00EE  
                                         ?_send_data 0011                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001B                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                     __end_of_send_end_of_transmission 195E  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 159C                             __end_of_command_builder1 1546  
                           __end_of_command_builder3 122E                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 0018                         process_data_parameterize@inx 001C  
                                   __size_of_isdigit 001E                                      ___lwdiv@divisor 0011  
                                    ___lwdiv@counter 0013                                             __ptext10 122E  
                                           __ptext11 18DA                                             __ptext20 1762  
                                           __ptext12 10F2                                             __ptext21 0660  
                                           __ptext13 1848                                             __ptext30 1190  
                                           __ptext22 17CA                                             __ptext14 16DE  
                                           __ptext31 1340                                             __ptext23 0AB6  
                                           __ptext15 104E                                             __ptext32 1546  
                                           __ptext24 1948                                             __ptext16 1720  
                                           __ptext33 0CF8                                             __ptext25 14F0  
                                           __ptext17 15F2                                             __ptext34 18FA  
                                           __ptext26 1694                                             __ptext18 0EE6  
                                           __ptext35 159C                                             __ptext27 0DF0  
                                           __ptext19 17FA                                             __ptext36 0936  
                                           __ptext28 1428                                             __ptext37 186E  
                                           __ptext29 12BE                                             __ptext38 1644  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0BE2                                        __size_of_atol 00F8  
                                      __size_of_main 0062                                        strmatch@match 0020  
                                      __size_of_init 000E                          powerPulseCheck@mcpHFoutLast 0047  
                                      __size_of_utoa 00A4                                          ??_delayMS10 0011  
                         ?_process_data_parameterize 0015                          powerPulseCheck@mcpLFoutLast 0046  
                                           int$flags 0051                                             atol@sign 0023  
                  __end_of_com_command_setEnergyUsed 16DE                              __size_of_communications 00A8  
                                           _strmatch 17CA                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 00BA                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 000F  
                                           isdigit@c 0011                                            ultoa@base 0022  
                           ??_com_command_setVersion 0025                                __size_of_process_data 0036  
                                           intlevel2 0000                               process_data@parameters 00BC  
                                       _timerCountHF 004D                                         _timerCountLF 0049  
                                   ___lwmod@dividend 000F                                     ___lldiv@dividend 000F  
                      communications@no_more_to_send 00EF                                          ??_send_data 0013  
                                          strmatch@a 001A                                            strmatch@b 001C  
                                         _OSCCONbits 000FD3                                  _resetCommunications 10F2  
                          __size_of_SPI_receive_data 0028                                             utoa@base 001A  
                                           ultoa@buf 001C                                             ultoa@val 001E  
                                           strcmp2@a 000F                                             strcmp2@b 0011  
                                   ___lldiv@quotient 0017                                         _process_data 1762  
                                  _SPI_transmit_wait 0045                                      ___lwmod@divisor 0011  
                              __size_of_SPISlaveInit 0050                            communications@send_buffer 0060  
                                    ___lwmod@counter 0013                     __size_of_process_data_parameters 02D6  
                                  __CFG_T3CMX$PORTC0 000000                              __end_of_powerPulseCheck 0CF8  
                               ?_resetCommunications 0037                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 001F                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 000F  
