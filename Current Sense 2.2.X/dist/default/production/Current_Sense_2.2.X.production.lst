

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 16 02:54:50 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     _ANSELAbits	set	3896
    44  0000                     _ANSELBbits	set	3897
    45  0000                     _ANSELCbits	set	3898
    46  0000                     _LATBbits	set	3978
    47  0000                     _LATCbits	set	3979
    48  0000                     _OSCCON2bits	set	4050
    49  0000                     _OSCCONbits	set	4051
    50  0000                     _OSCTUNEbits	set	3995
    51  0000                     _PORTBbits	set	3969
    52  0000                     _SSP1ADD	set	4040
    53  0000                     _SSP1BUF	set	4041
    54  0000                     _SSP1CON1bits	set	4038
    55  0000                     _SSP1CON2	set	4037
    56  0000                     _SSP1CON3	set	4043
    57  0000                     _SSP1MSK	set	4042
    58  0000                     _SSP1STAT	set	4039
    59  0000                     _SSP1STATbits	set	4039
    60  0000                     _SSP2BUF	set	3951
    61  0000                     _SSP2CON1bits	set	3948
    62  0000                     _SSP2CON3	set	3945
    63  0000                     _SSP2CON3bits	set	3945
    64  0000                     _SSP2STATbits	set	3949
    65  0000                     _TRISAbits	set	3986
    66  0000                     _TRISBbits	set	3987
    67  0000                     _TRISCbits	set	3988
    68                           
    69                           	psect	smallconst
    70  000600                     __psmallconst:
    71                           	opt stack 0
    72  000600  00                 	db	0
    73  000601                     STR_3:
    74                           
    75                           ; BSR set to: 15
    76  000601  43                 	db	67	;'C'
    77  000602  61                 	db	97	;'a'
    78  000603  6C                 	db	108	;'l'
    79  000604  69                 	db	105	;'i'
    80  000605  62                 	db	98	;'b'
    81  000606  72                 	db	114	;'r'
    82  000607  61                 	db	97	;'a'
    83  000608  74                 	db	116	;'t'
    84  000609  69                 	db	105	;'i'
    85  00060A  6F                 	db	111	;'o'
    86  00060B  6E                 	db	110	;'n'
    87  00060C  00                 	db	0
    88  00060D                     STR_20:
    89                           
    90                           ; BSR set to: 15
    91  00060D  50                 	db	80	;'P'
    92  00060E  53                 	db	83	;'S'
    93  00060F  56                 	db	86	;'V'
    94  000610  65                 	db	101	;'e'
    95  000611  72                 	db	114	;'r'
    96  000612  73                 	db	115	;'s'
    97  000613  69                 	db	105	;'i'
    98  000614  6F                 	db	111	;'o'
    99  000615  6E                 	db	110	;'n'
   100  000616  00                 	db	0
   101  000617                     STR_18:
   102                           
   103                           ; BSR set to: 15
   104  000617  56                 	db	86	;'V'
   105  000618  6F                 	db	111	;'o'
   106  000619  6C                 	db	108	;'l'
   107  00061A  74                 	db	116	;'t'
   108  00061B  73                 	db	115	;'s'
   109  00061C  00                 	db	0
   110  00061D                     STR_17:
   111                           
   112                           ; BSR set to: 15
   113  00061D  57                 	db	87	;'W'
   114  00061E  61                 	db	97	;'a'
   115  00061F  74                 	db	116	;'t'
   116  000620  74                 	db	116	;'t'
   117  000621  73                 	db	115	;'s'
   118  000622  00                 	db	0
   119  000623                     STR_6:
   120                           
   121                           ; BSR set to: 15
   122  000623  4C                 	db	76	;'L'
   123  000624  45                 	db	69	;'E'
   124  000625  44                 	db	68	;'D'
   125  000626  42                 	db	66	;'B'
   126  000627  00                 	db	0
   127  000628                     STR_5:
   128                           
   129                           ; BSR set to: 15
   130  000628  44                 	db	68	;'D'
   131  000629  61                 	db	97	;'a'
   132  00062A  74                 	db	116	;'t'
   133  00062B  61                 	db	97	;'a'
   134  00062C  00                 	db	0
   135  00062D                     STR_4:
   136                           
   137                           ; BSR set to: 15
   138  00062D  52                 	db	82	;'R'
   139  00062E  65                 	db	101	;'e'
   140  00062F  61                 	db	97	;'a'
   141  000630  64                 	db	100	;'d'
   142  000631  00                 	db	0
   143  000632                     STR_15:
   144                           
   145                           ; BSR set to: 15
   146  000632  43                 	db	67	;'C'
   147  000633  6F                 	db	111	;'o'
   148  000634  6E                 	db	110	;'n'
   149  000635  66                 	db	102	;'f'
   150  000636  00                 	db	0
   151  000637                     STR_19:
   152                           
   153                           ; BSR set to: 15
   154  000637  41                 	db	65	;'A'
   155  000638  6D                 	db	109	;'m'
   156  000639  70                 	db	112	;'p'
   157  00063A  73                 	db	115	;'s'
   158  00063B  00                 	db	0
   159  00063C                     STR_28:
   160                           
   161                           ; BSR set to: 15
   162  00063C  32                 	db	50	;'2'
   163  00063D  32                 	db	50	;'2'
   164  00063E  32                 	db	50	;'2'
   165  00063F  00                 	db	0
   166  000640                     STR_31:
   167                           
   168                           ; BSR set to: 15
   169  000640  33                 	db	51	;'3'
   170  000641  33                 	db	51	;'3'
   171  000642  33                 	db	51	;'3'
   172  000643  00                 	db	0
   173  000644                     STR_36:
   174                           
   175                           ; BSR set to: 15
   176  000644  34                 	db	52	;'4'
   177  000645  34                 	db	52	;'4'
   178  000646  34                 	db	52	;'4'
   179  000647  00                 	db	0
   180  000648                     STR_1:
   181                           
   182                           ; BSR set to: 15
   183  000648  45                 	db	69	;'E'
   184  000649  4E                 	db	78	;'N'
   185  00064A  44                 	db	68	;'D'
   186  00064B  00                 	db	0
   187  00064C                     STR_10:
   188                           
   189                           ; BSR set to: 15
   190  00064C  4F                 	db	79	;'O'
   191  00064D  66                 	db	102	;'f'
   192  00064E  66                 	db	102	;'f'
   193  00064F  00                 	db	0
   194  000650                     STR_2:
   195                           
   196                           ; BSR set to: 15
   197  000650  53                 	db	83	;'S'
   198  000651  65                 	db	101	;'e'
   199  000652  74                 	db	116	;'t'
   200  000653  00                 	db	0
   201  000654                     STR_7:
   202                           
   203                           ; BSR set to: 15
   204  000654  4F                 	db	79	;'O'
   205  000655  6E                 	db	110	;'n'
   206  000656  00                 	db	0
   207  0000                     
   208                           ; #config settings
   209  000657  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           	psect	cinit
   212  0013D2                     __pcinit:
   213                           	opt stack 0
   214  0013D2                     start_initialization:
   215                           	opt stack 0
   216  0013D2                     __initialization:
   217                           	opt stack 0
   218                           
   219                           ; Clear objects allocated to BANK0 (84 bytes)
   220  0013D2  EE00  F060         	lfsr	0,__pbssBANK0
   221  0013D6  0E54               	movlw	84
   222  0013D8                     clear_0:
   223  0013D8  6AEE               	clrf	postinc0,c
   224  0013DA  06E8               	decf	wreg,f,c
   225  0013DC  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to COMRAM (9 bytes)
   228  0013DE  EE00  F057         	lfsr	0,__pbssCOMRAM
   229  0013E2  0E09               	movlw	9
   230  0013E4                     clear_1:
   231  0013E4  6AEE               	clrf	postinc0,c
   232  0013E6  06E8               	decf	wreg,f,c
   233  0013E8  E1FD               	bnz	clear_1
   234  0013EA                     end_of_initialization:
   235                           	opt stack 0
   236  0013EA                     __end_of__initialization:
   237                           	opt stack 0
   238  0013EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  0013EC  6EF8               	movwf	tblptru,c
   240  0013EE  0100               	movlb	0
   241  0013F0  EF16  F008         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           
   246                           	psect	bssCOMRAM
   247  000057                     __pbssCOMRAM:
   248                           	opt stack 0
   249  000057                     com_command_setPower@power:
   250                           	opt stack 0
   251  000057                     	ds	2
   252  000059                     resetCommunications@commState:
   253                           	opt stack 0
   254  000059                     	ds	2
   255  00005B                     _SPI_transmit_wait:
   256                           	opt stack 0
   257  00005B                     	ds	1
   258  00005C                     communications@end_of_transmission_received:
   259                           	opt stack 0
   260  00005C                     	ds	1
   261  00005D                     communications@last_state_active:
   262                           	opt stack 0
   263  00005D                     	ds	1
   264  00005E                     communications@receive_current_state:
   265                           	opt stack 0
   266  00005E                     	ds	1
   267  00005F                     receive_data@my_status:
   268                           	opt stack 0
   269  00005F                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	bssBANK0
   275  000060                     __pbssBANK0:
   276                           	opt stack 0
   277  000060                     communications@receive_buffer:
   278                           	opt stack 0
   279  000060                     	ds	42
   280  00008A                     communications@send_buffer:
   281                           	opt stack 0
   282  00008A                     	ds	42
   283                           tblptru	equ	0xFF8
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	cstackCOMRAM
   288  000001                     __pcstackCOMRAM:
   289                           	opt stack 0
   290  000001                     ?_strcmp2:
   291                           	opt stack 0
   292  000001                     ?___wmul:
   293                           	opt stack 0
   294  000001                     ?___lwdiv:
   295                           	opt stack 0
   296  000001                     ?___lwmod:
   297                           	opt stack 0
   298  000001                     SPI_send_data@data:
   299                           	opt stack 0
   300  000001                     delayMS10@count:
   301                           	opt stack 0
   302  000001                     command_builder_add_char@send_buffer:
   303                           	opt stack 0
   304  000001                     strcmp2@a:
   305                           	opt stack 0
   306  000001                     SPI_receive_data@data:
   307                           	opt stack 0
   308  000001                     ___wmul@multiplier:
   309                           	opt stack 0
   310  000001                     ___lwdiv@dividend:
   311                           	opt stack 0
   312  000001                     ___lwmod@dividend:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x0
   316  000001                     	ds	1
   317  000002                     SPI_send_data@sendGood:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??_delayMS10:
   323  000003                     command_builder_add_char@data:
   324                           	opt stack 0
   325  000003                     SPI_receive_data@recvGood:
   326                           	opt stack 0
   327  000003                     send_data@send_buffer:
   328                           	opt stack 0
   329  000003                     strcmp2@b:
   330                           	opt stack 0
   331  000003                     ___wmul@multiplicand:
   332                           	opt stack 0
   333  000003                     ___lwdiv@divisor:
   334                           	opt stack 0
   335  000003                     ___lwmod@divisor:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339  000003                     	ds	1
   340  000004                     ??_command_builder_add_char:
   341  000004                     delayMS10@inx:
   342                           	opt stack 0
   343  000004                     receive_data@receive_buffer:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x3
   347  000004                     	ds	1
   348  000005                     ??_send_data:
   349  000005                     ??_strcmp2:
   350  000005                     ___lwmod@counter:
   351                           	opt stack 0
   352  000005                     command_builder_add_string@send_buffer:
   353                           	opt stack 0
   354  000005                     ___wmul@product:
   355                           	opt stack 0
   356  000005                     ___lwdiv@quotient:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360  000005                     	ds	1
   361  000006                     ??_receive_data:
   362                           
   363                           ; 0 bytes @ 0x5
   364  000006                     	ds	1
   365  000007                     receive_data@data:
   366                           	opt stack 0
   367  000007                     send_data@send_end:
   368                           	opt stack 0
   369  000007                     ___lwdiv@counter:
   370                           	opt stack 0
   371  000007                     process_data_parameterize@parameters:
   372                           	opt stack 0
   373  000007                     command_builder_add_string@data_string:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x6
   377  000007                     	ds	1
   378  000008                     strcmp2@match:
   379                           	opt stack 0
   380  000008                     utoa@buf:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x7
   384  000008                     	ds	1
   385  000009                     ??_command_builder_add_string:
   386  000009                     process_data_parameterize@buffer_to_parameterize:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x8
   390  000009                     	ds	1
   391  00000A                     strcmp2@inx:
   392                           	opt stack 0
   393  00000A                     utoa@val:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x9
   397  00000A                     	ds	1
   398  00000B                     ??_process_data_parameterize:
   399  00000B                     command_builder_add_string@inx:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0xA
   403  00000B                     	ds	1
   404  00000C                     strmatch@a:
   405                           	opt stack 0
   406  00000C                     utoa@base:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xB
   410  00000C                     	ds	1
   411  00000D                     command_builder1@send_buffer:
   412                           	opt stack 0
   413  00000D                     command_builder2@send_buffer:
   414                           	opt stack 0
   415  00000D                     command_builder3@send_buffer:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419  00000D                     	ds	1
   420  00000E                     process_data_parameterize@inx:
   421                           	opt stack 0
   422  00000E                     strmatch@b:
   423                           	opt stack 0
   424  00000E                     utoa@v:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0xD
   428  00000E                     	ds	1
   429  00000F                     command_builder1@data1:
   430                           	opt stack 0
   431  00000F                     command_builder2@data1:
   432                           	opt stack 0
   433  00000F                     command_builder3@data1:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437  00000F                     	ds	1
   438  000010                     process_data_parameterize@parameter_index:
   439                           	opt stack 0
   440  000010                     utoa@c:
   441                           	opt stack 0
   442  000010                     strmatch@result:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0xF
   446  000010                     	ds	1
   447  000011                     process_data_parameterize@parameter_position:
   448                           	opt stack 0
   449  000011                     command_builder2@data2:
   450                           	opt stack 0
   451  000011                     command_builder3@data2:
   452                           	opt stack 0
   453  000011                     send_end_of_transmission@send_buffer:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x10
   457  000011                     	ds	1
   458  000012                     strmatch@match:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x11
   462  000012                     	ds	1
   463  000013                     command_builder3@data3:
   464                           	opt stack 0
   465  000013                     com_command_testLED@send_buffer:
   466                           	opt stack 0
   467  000013                     com_command_readCalibration@send_buffer:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x12
   471  000013                     	ds	2
   472  000015                     process_data_parameters@parameters:
   473                           	opt stack 0
   474  000015                     com_command_setPower@send_buffer:
   475                           	opt stack 0
   476  000015                     com_command_setVolts@send_buffer:
   477                           	opt stack 0
   478  000015                     com_command_setAmps@send_buffer:
   479                           	opt stack 0
   480  000015                     com_command_setVersion@send_buffer:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x14
   484  000015                     	ds	2
   485  000017                     process_data_parameters@send_buffer:
   486                           	opt stack 0
   487  000017                     com_command_setPower@temp:
   488                           	opt stack 0
   489                           
   490                           ; 7 bytes @ 0x16
   491  000017                     	ds	2
   492  000019                     process_data_parameters@end_of_transmission_received:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x18
   496  000019                     	ds	1
   497  00001A                     process_data@receive_buffer:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x19
   501  00001A                     	ds	2
   502  00001C                     process_data@send_buffer:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x1B
   506  00001C                     	ds	2
   507  00001E                     resetCommunications@send_buffer:
   508                           	opt stack 0
   509  00001E                     process_data@parameters:
   510                           	opt stack 0
   511                           
   512                           ; 50 bytes @ 0x1D
   513  00001E                     	ds	2
   514  000020                     ??_resetCommunications:
   515                           
   516                           ; 0 bytes @ 0x1F
   517  000020                     	ds	48
   518  000050                     process_data@end_of_transmission_received:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x4F
   522  000050                     	ds	1
   523  000051                     communications@no_more_to_send:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x50
   527  000051                     	ds	1
   528  000052                     communications@firstTime:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x51
   532  000052                     	ds	1
   533  000053                     main@togglePulse:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x52
   537  000053                     	ds	2
   538  000055                     main@inx:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x54
   542  000055                     	ds	2
   543                           tblptru	equ	0xFF8
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 48 in file "Current_Sense_Main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  inx             2   84[COMRAM] int 
   557 ;;  togglePulse     2   82[COMRAM] unsigned int 
   558 ;; Return value:  Size  Location     Type
   559 ;;		None               void
   560 ;; Registers used:
   561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   567 ;;      Params:         0       0       0       0       0       0       0
   568 ;;      Locals:         4       0       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0
   570 ;;      Totals:         4       0       0       0       0       0       0
   571 ;;Total ram usage:        4 bytes
   572 ;; Hardware stack levels required when called:    7
   573 ;; This function calls:
   574 ;;		_SPISlaveInit
   575 ;;		_communications
   576 ;;		_delayMS10
   577 ;;		_init
   578 ;; This function is called by:
   579 ;;		Startup code after reset
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text0
   584  00102C                     __ptext0:
   585                           	opt stack 0
   586  00102C                     _main:
   587                           	opt stack 24
   588                           
   589                           ;Current_Sense_Main.c: 49: unsigned int togglePulse = 0;
   590                           
   591                           ; BSR set to: 15
   592                           ;incstack = 0
   593  00102C  0E00               	movlw	0
   594  00102E  6E54               	movwf	main@togglePulse+1,c
   595  001030  0E00               	movlw	0
   596  001032  6E53               	movwf	main@togglePulse,c
   597                           
   598                           ;Current_Sense_Main.c: 50: init();
   599  001034  EC8A  F009         	call	_init	;wreg free
   600                           
   601                           ;Current_Sense_Main.c: 52: SPISlaveInit( );
   602  001038  ECC1  F008         	call	_SPISlaveInit	;wreg free
   603                           
   604                           ;Current_Sense_Main.c: 54: for( int inx = 0; inx < 10; inx++)
   605  00103C  0E00               	movlw	0
   606  00103E  6E56               	movwf	main@inx+1,c
   607  001040  0E00               	movlw	0
   608  001042  6E55               	movwf	main@inx,c
   609  001044                     l1989:
   610  001044  BE56               	btfsc	main@inx+1,7,c
   611  001046  D006               	goto	l31
   612  001048  5056               	movf	main@inx+1,w,c
   613  00104A  E115               	bnz	l2001
   614  00104C  0E0A               	movlw	10
   615  00104E  5C55               	subwf	main@inx,w,c
   616  001050  B0D8               	btfsc	status,0,c
   617  001052  D011               	goto	l2001
   618  001054                     l31:
   619                           
   620                           ;Current_Sense_Main.c: 55: {
   621                           ;Current_Sense_Main.c: 56: LATBbits.LATB4 = 1;
   622  001054  888A               	bsf	3978,4,c	;volatile
   623                           
   624                           ;Current_Sense_Main.c: 57: delayMS10( 10);
   625  001056  0E00               	movlw	0
   626  001058  6E02               	movwf	delayMS10@count+1,c
   627  00105A  0E0A               	movlw	10
   628  00105C  6E01               	movwf	delayMS10@count,c
   629  00105E  EC2E  F009         	call	_delayMS10	;wreg free
   630                           
   631                           ;Current_Sense_Main.c: 58: LATBbits.LATB4 = 0;
   632  001062  988A               	bcf	3978,4,c	;volatile
   633                           
   634                           ;Current_Sense_Main.c: 59: delayMS10( 10);
   635  001064  0E00               	movlw	0
   636  001066  6E02               	movwf	delayMS10@count+1,c
   637  001068  0E0A               	movlw	10
   638  00106A  6E01               	movwf	delayMS10@count,c
   639  00106C  EC2E  F009         	call	_delayMS10	;wreg free
   640  001070  4A55               	infsnz	main@inx,f,c
   641  001072  2A56               	incf	main@inx+1,f,c
   642  001074  D7E7               	goto	l1989
   643  001076                     l2001:
   644                           
   645                           ;Current_Sense_Main.c: 60: }
   646                           ;Current_Sense_Main.c: 85: communications( 1 );
   647  001076  0E01               	movlw	1
   648  001078  EC08  F007         	call	_communications
   649  00107C                     l33:
   650                           
   651                           ;Current_Sense_Main.c: 89: communications( 0 );
   652  00107C  0E00               	movlw	0
   653  00107E  EC08  F007         	call	_communications
   654  001082  D7FC               	goto	l33
   655  001084                     __end_of_main:
   656                           	opt stack 0
   657                           tblptru	equ	0xFF8
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           status	equ	0xFD8
   661                           
   662 ;; *************** function _init *****************
   663 ;; Defined at:
   664 ;;		line 121 in file "Current_Sense_Main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;		None               void
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   678 ;;      Params:         0       0       0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text1
   692  001314                     __ptext1:
   693                           	opt stack 0
   694  001314                     _init:
   695                           	opt stack 30
   696                           
   697                           ;Current_Sense_Main.c: 123: OSCCONbits.IDLEN = 0;
   698                           
   699                           ;incstack = 0
   700  001314  9ED3               	bcf	4051,7,c	;volatile
   701                           
   702                           ;Current_Sense_Main.c: 124: OSCCONbits.IRCF = 0b111;
   703  001316  88D3               	bsf	4051,4,c	;volatile
   704  001318  8AD3               	bsf	4051,5,c	;volatile
   705  00131A  8CD3               	bsf	4051,6,c	;volatile
   706                           
   707                           ;Current_Sense_Main.c: 125: OSCCONbits.SCS = 0b11;
   708  00131C  0E03               	movlw	3
   709  00131E  12D3               	iorwf	4051,f,c	;volatile
   710                           
   711                           ;Current_Sense_Main.c: 127: OSCCON2bits.MFIOSEL = 0;
   712  001320  98D2               	bcf	4050,4,c	;volatile
   713                           
   714                           ;Current_Sense_Main.c: 128: OSCCON2bits.SOSCGO = 0;
   715  001322  96D2               	bcf	4050,3,c	;volatile
   716                           
   717                           ;Current_Sense_Main.c: 129: OSCCON2bits.PRISD = 0;
   718  001324  94D2               	bcf	4050,2,c	;volatile
   719                           
   720                           ;Current_Sense_Main.c: 131: OSCTUNEbits.INTSRC = 1;
   721  001326  8E9B               	bsf	3995,7,c	;volatile
   722                           
   723                           ;Current_Sense_Main.c: 132: OSCTUNEbits.PLLEN = 0;
   724  001328  9C9B               	bcf	3995,6,c	;volatile
   725                           
   726                           ;Current_Sense_Main.c: 135: TRISAbits.TRISA0 = 0;
   727  00132A  9092               	bcf	3986,0,c	;volatile
   728                           
   729                           ;Current_Sense_Main.c: 136: TRISAbits.TRISA1 = 1;
   730  00132C  8292               	bsf	3986,1,c	;volatile
   731                           
   732                           ;Current_Sense_Main.c: 137: TRISBbits.RB4 = 0;
   733  00132E  9893               	bcf	3987,4,c	;volatile
   734                           
   735                           ;Current_Sense_Main.c: 140: TRISCbits.TRISC6 = 0;
   736  001330  9C94               	bcf	3988,6,c	;volatile
   737                           
   738                           ;Current_Sense_Main.c: 142: ANSELAbits.ANSA1 = 0b0;
   739  001332  010F               	movlb	15	; () banked
   740  001334  9338               	bcf	56,1,b	;volatile
   741                           
   742                           ; BSR set to: 15
   743                           ;Current_Sense_Main.c: 144: LATCbits.LATC6 = 1;
   744  001336  8C8B               	bsf	3979,6,c	;volatile
   745                           
   746                           ; BSR set to: 15
   747  001338  0012               	return		;funcret
   748  00133A                     __end_of_init:
   749                           	opt stack 0
   750                           tblptru	equ	0xFF8
   751                           postinc0	equ	0xFEE
   752                           wreg	equ	0xFE8
   753                           status	equ	0xFD8
   754                           
   755 ;; *************** function _delayMS10 *****************
   756 ;; Defined at:
   757 ;;		line 113 in file "Current_Sense_Main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  count           2    0[COMRAM] int 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  inx             2    3[COMRAM] int 
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         2       0       0       0       0       0       0
   772 ;;      Locals:         2       0       0       0       0       0       0
   773 ;;      Temps:          1       0       0       0       0       0       0
   774 ;;      Totals:         5       0       0       0       0       0       0
   775 ;;Total ram usage:        5 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text2
   785  00125C                     __ptext2:
   786                           	opt stack 0
   787  00125C                     _delayMS10:
   788                           	opt stack 30
   789                           
   790                           ;Current_Sense_Main.c: 115: for( int inx = 0; inx< count; inx++)
   791                           
   792                           ; BSR set to: 15
   793                           ;incstack = 0
   794  00125C  0E00               	movlw	0
   795  00125E  6E05               	movwf	delayMS10@inx+1,c
   796  001260  0E00               	movlw	0
   797  001262  6E04               	movwf	delayMS10@inx,c
   798  001264  D009               	goto	l39
   799  001266                     l1949:
   800                           
   801                           ;Current_Sense_Main.c: 116: {
   802                           ;Current_Sense_Main.c: 117: _delay((unsigned long)((10)*(16000000/4000.0)));
   803  001266  0E34               	movlw	52
   804  001268  6E03               	movwf	??_delayMS10& (0+255),c
   805  00126A  0EF2               	movlw	242
   806  00126C                     u1327:
   807  00126C  2EE8               	decfsz	wreg,f,c
   808  00126E  D7FE               	goto	u1327
   809  001270  2E03               	decfsz	??_delayMS10& (0+255),f,c
   810  001272  D7FC               	goto	u1327
   811  001274  4A04               	infsnz	delayMS10@inx,f,c
   812  001276  2A05               	incf	delayMS10@inx+1,f,c
   813  001278                     l39:
   814  001278  5001               	movf	delayMS10@count,w,c
   815  00127A  5C04               	subwf	delayMS10@inx,w,c
   816  00127C  5005               	movf	delayMS10@inx+1,w,c
   817  00127E  0A80               	xorlw	128
   818  001280  6E03               	movwf	??_delayMS10& (0+255),c
   819  001282  5002               	movf	delayMS10@count+1,w,c
   820  001284  0A80               	xorlw	128
   821  001286  5803               	subwfb	??_delayMS10& (0+255),w,c
   822  001288  B0D8               	btfsc	status,0,c
   823  00128A  0012               	return	
   824  00128C  D7EC               	goto	l1949
   825  00128E                     __end_of_delayMS10:
   826                           	opt stack 0
   827                           tblptru	equ	0xFF8
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           status	equ	0xFD8
   831                           
   832 ;; *************** function _communications *****************
   833 ;; Defined at:
   834 ;;		line 84 in file "SlaveComm_PIC18.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  firstTime       1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  firstTime       1   81[COMRAM] unsigned char 
   839 ;;  no_more_to_s    1   80[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;		None               void
   842 ;; Registers used:
   843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         0       0       0       0       0       0       0
   850 ;;      Locals:         2       0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0
   852 ;;      Totals:         2       0       0       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    6
   856 ;; This function calls:
   857 ;;		_process_data
   858 ;;		_receive_data
   859 ;;		_resetCommunications
   860 ;;		_send_data
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text3
   867  000E10                     __ptext3:
   868                           	opt stack 0
   869  000E10                     _communications:
   870                           	opt stack 24
   871                           
   872                           ;incstack = 0
   873                           ;communications@firstTime stored from wreg
   874  000E10  6E52               	movwf	communications@firstTime,c
   875                           
   876                           ;SlaveComm_PIC18.c: 86: static struct buffer receive_buffer;
   877                           ;SlaveComm_PIC18.c: 87: static struct buffer send_buffer;
   878                           ;SlaveComm_PIC18.c: 89: static bool end_of_transmission_received = 0;
   879                           ;SlaveComm_PIC18.c: 90: bool no_more_to_send;
   880                           ;SlaveComm_PIC18.c: 92: static enum receive_status receive_current_state;
   881                           ;SlaveComm_PIC18.c: 95: if( firstTime == 1 )
   882  000E12  0452               	decf	communications@firstTime,w,c
   883  000E14  A4D8               	btfss	status,2,c
   884  000E16  D00D               	goto	l1959
   885                           
   886                           ;SlaveComm_PIC18.c: 96: {
   887                           ;SlaveComm_PIC18.c: 97: send_buffer.write_position = 0;
   888  000E18  0E00               	movlw	0
   889  000E1A  0100               	movlb	0	; () banked
   890  000E1C  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
   891                           
   892                           ;SlaveComm_PIC18.c: 98: send_buffer.read_position = 0;
   893  000E1E  0E00               	movlw	0
   894  000E20  0100               	movlb	0	; () banked
   895  000E22  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
   896                           
   897                           ; BSR set to: 0
   898                           ;SlaveComm_PIC18.c: 99: resetCommunications( &send_buffer );
   899  000E24  0E8A               	movlw	low communications@send_buffer
   900  000E26  6E1E               	movwf	resetCommunications@send_buffer,c
   901  000E28  0E00               	movlw	high communications@send_buffer
   902  000E2A  6E1F               	movwf	resetCommunications@send_buffer+1,c
   903  000E2C  EC9C  F005         	call	_resetCommunications	;wreg free
   904                           
   905                           ;SlaveComm_PIC18.c: 100: }
   906  000E30  0012               	return	
   907  000E32                     l1959:
   908                           
   909                           ;SlaveComm_PIC18.c: 101: else
   910                           ;SlaveComm_PIC18.c: 102: {
   911                           ;SlaveComm_PIC18.c: 103: receive_current_state = receive_data( &receive_buffer );
   912  000E32  0E60               	movlw	low communications@receive_buffer
   913  000E34  6E04               	movwf	receive_data@receive_buffer,c
   914  000E36  0E00               	movlw	high communications@receive_buffer
   915  000E38  6E05               	movwf	receive_data@receive_buffer+1,c
   916  000E3A  EC07  F006         	call	_receive_data	;wreg free
   917  000E3E  6E5E               	movwf	communications@receive_current_state,c
   918                           
   919                           ;SlaveComm_PIC18.c: 105: switch( receive_current_state )
   920  000E40  D010               	goto	l1967
   921  000E42                     l1961:
   922                           
   923                           ;SlaveComm_PIC18.c: 115: if( process_data( &receive_buffer, &send_buffer ) == 1 )
   924  000E42  0E60               	movlw	low communications@receive_buffer
   925  000E44  6E1A               	movwf	process_data@receive_buffer,c
   926  000E46  0E00               	movlw	high communications@receive_buffer
   927  000E48  6E1B               	movwf	process_data@receive_buffer+1,c
   928  000E4A  0E8A               	movlw	low communications@send_buffer
   929  000E4C  6E1C               	movwf	process_data@send_buffer,c
   930  000E4E  0E00               	movlw	high communications@send_buffer
   931  000E50  6E1D               	movwf	process_data@send_buffer+1,c
   932  000E52  EC5F  F009         	call	_process_data	;wreg free
   933  000E56  06E8               	decf	wreg,f,c
   934  000E58  A4D8               	btfss	status,2,c
   935  000E5A  D00D               	goto	l1969
   936                           
   937                           ;SlaveComm_PIC18.c: 116: {
   938                           ;SlaveComm_PIC18.c: 117: end_of_transmission_received = 1;
   939  000E5C  0E01               	movlw	1
   940  000E5E  6E5C               	movwf	communications@end_of_transmission_received,c
   941                           
   942                           ;SlaveComm_PIC18.c: 121: }
   943                           
   944                           ;SlaveComm_PIC18.c: 118: }
   945                           ;SlaveComm_PIC18.c: 120: break;
   946  000E60  D00A               	goto	l1969
   947  000E62                     l1967:
   948  000E62  505E               	movf	communications@receive_current_state,w,c
   949                           
   950                           ; Switch size 1, requested type "space"
   951                           ; Number of cases is 3, Range of values is 0 to 2
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte           10     6 (average)
   955                           ;	Chosen strategy is simple_byte
   956  000E64  0A00               	xorlw	0	; case 0
   957  000E66  B4D8               	btfsc	status,2,c
   958  000E68  D006               	goto	l1969
   959  000E6A  0A01               	xorlw	1	; case 1
   960  000E6C  B4D8               	btfsc	status,2,c
   961  000E6E  D003               	goto	l1969
   962  000E70  0A03               	xorlw	3	; case 2
   963  000E72  B4D8               	btfsc	status,2,c
   964  000E74  D7E6               	goto	l1961
   965  000E76                     l1969:
   966                           
   967                           ;SlaveComm_PIC18.c: 123: no_more_to_send = send_data( &send_buffer );
   968  000E76  0E8A               	movlw	low communications@send_buffer
   969  000E78  6E03               	movwf	send_data@send_buffer,c
   970  000E7A  0E00               	movlw	high communications@send_buffer
   971  000E7C  6E04               	movwf	send_data@send_buffer+1,c
   972  000E7E  EC53  F007         	call	_send_data	;wreg free
   973  000E82  6E51               	movwf	communications@no_more_to_send,c
   974                           
   975                           ;SlaveComm_PIC18.c: 126: static bool last_state_active = 0;
   976                           ;SlaveComm_PIC18.c: 127: if( PORTBbits.SS2 == 0b1 )
   977  000E84  A081               	btfss	3969,0,c	;volatile
   978  000E86  D003               	goto	l1975
   979                           
   980                           ;SlaveComm_PIC18.c: 128: {
   981                           ;SlaveComm_PIC18.c: 129: last_state_active = 0;
   982  000E88  0E00               	movlw	0
   983  000E8A  6E5D               	movwf	communications@last_state_active,c
   984                           
   985                           ;SlaveComm_PIC18.c: 130: }
   986  000E8C  0012               	return	
   987  000E8E                     l1975:
   988                           
   989                           ;SlaveComm_PIC18.c: 131: else
   990                           ;SlaveComm_PIC18.c: 132: {
   991                           ;SlaveComm_PIC18.c: 133: if( last_state_active == 0 )
   992  000E8E  505D               	movf	communications@last_state_active,w,c
   993  000E90  A4D8               	btfss	status,2,c
   994  000E92  D006               	goto	l1979
   995                           
   996                           ;SlaveComm_PIC18.c: 134: {
   997                           ;SlaveComm_PIC18.c: 135: resetCommunications( &send_buffer );
   998  000E94  0E8A               	movlw	low communications@send_buffer
   999  000E96  6E1E               	movwf	resetCommunications@send_buffer,c
  1000  000E98  0E00               	movlw	high communications@send_buffer
  1001  000E9A  6E1F               	movwf	resetCommunications@send_buffer+1,c
  1002  000E9C  EC9C  F005         	call	_resetCommunications	;wreg free
  1003  000EA0                     l1979:
  1004                           
  1005                           ;SlaveComm_PIC18.c: 136: }
  1006                           ;SlaveComm_PIC18.c: 138: last_state_active = 1;
  1007  000EA0  0E01               	movlw	1
  1008  000EA2  6E5D               	movwf	communications@last_state_active,c
  1009  000EA4  0012               	return	
  1010  000EA6                     __end_of_communications:
  1011                           	opt stack 0
  1012                           tblptru	equ	0xFF8
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function _send_data *****************
  1018 ;; Defined at:
  1019 ;;		line 463 in file "SlaveComm_PIC18.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  send_buffer     2    2[COMRAM] PTR struct buffer
  1022 ;;		 -> communications@send_buffer(42), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  send_end        1    6[COMRAM] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      unsigned char 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1034 ;;      Params:         2       0       0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0       0       0
  1037 ;;      Totals:         5       0       0       0       0       0       0
  1038 ;;Total ram usage:        5 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    1
  1041 ;; This function calls:
  1042 ;;		_SPI_send_data
  1043 ;; This function is called by:
  1044 ;;		_communications
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text4
  1049  000EA6                     __ptext4:
  1050                           	opt stack 0
  1051  000EA6                     _send_data:
  1052                           	opt stack 28
  1053                           
  1054                           ;SlaveComm_PIC18.c: 465: bool send_end;
  1055                           ;SlaveComm_PIC18.c: 467: if( send_buffer->read_position == send_buffer->write_position )
  1056                           
  1057                           ;incstack = 0
  1058  000EA6  EE20 F028          	lfsr	2,40
  1059  000EAA  5003               	movf	send_data@send_buffer,w,c
  1060  000EAC  26D9               	addwf	fsr2l,f,c
  1061  000EAE  5004               	movf	send_data@send_buffer+1,w,c
  1062  000EB0  22DA               	addwfc	fsr2h,f,c
  1063  000EB2  EE10 F029          	lfsr	1,41
  1064  000EB6  5003               	movf	send_data@send_buffer,w,c
  1065  000EB8  26E1               	addwf	fsr1l,f,c
  1066  000EBA  5004               	movf	send_data@send_buffer+1,w,c
  1067  000EBC  22E2               	addwfc	fsr1h,f,c
  1068  000EBE  50DE               	movf	postinc2,w,c
  1069  000EC0  18E6               	xorwf	postinc1,w,c
  1070  000EC2  A4D8               	btfss	status,2,c
  1071  000EC4  D006               	goto	l1935
  1072                           
  1073                           ;SlaveComm_PIC18.c: 468: {
  1074                           ;SlaveComm_PIC18.c: 469: send_end = 1;
  1075  000EC6  0E01               	movlw	1
  1076  000EC8  6E07               	movwf	send_data@send_end,c
  1077                           
  1078                           ;SlaveComm_PIC18.c: 470: SPI_send_data( '\0' );
  1079  000ECA  0E00               	movlw	0
  1080  000ECC  ECFA  F009         	call	_SPI_send_data
  1081                           
  1082                           ;SlaveComm_PIC18.c: 471: }
  1083  000ED0  D030               	goto	l1943
  1084  000ED2                     l1935:
  1085                           
  1086                           ;SlaveComm_PIC18.c: 472: else
  1087                           ;SlaveComm_PIC18.c: 473: {
  1088                           ;SlaveComm_PIC18.c: 474: send_end = 0;
  1089  000ED2  0E00               	movlw	0
  1090  000ED4  6E07               	movwf	send_data@send_end,c
  1091                           
  1092                           ;SlaveComm_PIC18.c: 477: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  1093  000ED6  EE20 F029          	lfsr	2,41
  1094  000EDA  5003               	movf	send_data@send_buffer,w,c
  1095  000EDC  26D9               	addwf	fsr2l,f,c
  1096  000EDE  5004               	movf	send_data@send_buffer+1,w,c
  1097  000EE0  22DA               	addwfc	fsr2h,f,c
  1098  000EE2  50DF               	movf	indf2,w,c
  1099  000EE4  6E05               	movwf	??_send_data& (0+255),c
  1100  000EE6  5005               	movf	??_send_data,w,c
  1101  000EE8  0D01               	mullw	1
  1102  000EEA  50F3               	movf	prodl,w,c
  1103  000EEC  2403               	addwf	send_data@send_buffer,w,c
  1104  000EEE  6ED9               	movwf	fsr2l,c
  1105  000EF0  50F4               	movf	prodh,w,c
  1106  000EF2  2004               	addwfc	send_data@send_buffer+1,w,c
  1107  000EF4  6EDA               	movwf	fsr2h,c
  1108  000EF6  50DF               	movf	indf2,w,c
  1109  000EF8  ECFA  F009         	call	_SPI_send_data
  1110  000EFC  06E8               	decf	wreg,f,c
  1111  000EFE  A4D8               	btfss	status,2,c
  1112  000F00  D018               	goto	l1943
  1113                           
  1114                           ;SlaveComm_PIC18.c: 478: {
  1115                           ;SlaveComm_PIC18.c: 480: send_buffer->read_position++;
  1116  000F02  EE20 F029          	lfsr	2,41
  1117  000F06  5003               	movf	send_data@send_buffer,w,c
  1118  000F08  26D9               	addwf	fsr2l,f,c
  1119  000F0A  5004               	movf	send_data@send_buffer+1,w,c
  1120  000F0C  22DA               	addwfc	fsr2h,f,c
  1121  000F0E  2ADF               	incf	indf2,f,c
  1122                           
  1123                           ;SlaveComm_PIC18.c: 481: if( send_buffer->read_position >= 40 )
  1124  000F10  EE20 F029          	lfsr	2,41
  1125  000F14  5003               	movf	send_data@send_buffer,w,c
  1126  000F16  26D9               	addwf	fsr2l,f,c
  1127  000F18  5004               	movf	send_data@send_buffer+1,w,c
  1128  000F1A  22DA               	addwfc	fsr2h,f,c
  1129  000F1C  0E27               	movlw	39
  1130  000F1E  64DF               	cpfsgt	indf2,c
  1131  000F20  D008               	goto	l1943
  1132                           
  1133                           ;SlaveComm_PIC18.c: 482: {
  1134                           ;SlaveComm_PIC18.c: 483: send_buffer->read_position = 0;
  1135  000F22  EE20 F029          	lfsr	2,41
  1136  000F26  5003               	movf	send_data@send_buffer,w,c
  1137  000F28  26D9               	addwf	fsr2l,f,c
  1138  000F2A  5004               	movf	send_data@send_buffer+1,w,c
  1139  000F2C  22DA               	addwfc	fsr2h,f,c
  1140  000F2E  0E00               	movlw	0
  1141  000F30  6EDF               	movwf	indf2,c
  1142  000F32                     l1943:
  1143                           
  1144                           ;SlaveComm_PIC18.c: 484: }
  1145                           ;SlaveComm_PIC18.c: 485: }
  1146                           ;SlaveComm_PIC18.c: 486: }
  1147                           ;SlaveComm_PIC18.c: 488: return send_end;
  1148  000F32  5007               	movf	send_data@send_end,w,c
  1149  000F34  0012               	return	
  1150  000F36                     __end_of_send_data:
  1151                           	opt stack 0
  1152                           tblptru	equ	0xFF8
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postinc1	equ	0xFE6
  1158                           fsr1h	equ	0xFE2
  1159                           fsr1l	equ	0xFE1
  1160                           indf2	equ	0xFDF
  1161                           postinc2	equ	0xFDE
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _SPI_send_data *****************
  1167 ;; Defined at:
  1168 ;;		line 561 in file "SlaveComm_PIC18.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  data            1    wreg     unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  data            1    0[COMRAM] unsigned char 
  1173 ;;  sendGood        1    1[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      unsigned char 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1183 ;;      Params:         0       0       0       0       0       0       0
  1184 ;;      Locals:         2       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_send_data
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text5
  1197  0013F4                     __ptext5:
  1198                           	opt stack 0
  1199  0013F4                     _SPI_send_data:
  1200                           	opt stack 28
  1201                           
  1202                           ;incstack = 0
  1203                           ;SPI_send_data@data stored from wreg
  1204  0013F4  6E01               	movwf	SPI_send_data@data,c
  1205                           
  1206                           ;SlaveComm_PIC18.c: 563: bool sendGood = 0;
  1207  0013F6  0E00               	movlw	0
  1208  0013F8  6E02               	movwf	SPI_send_data@sendGood,c
  1209                           
  1210                           ;SlaveComm_PIC18.c: 565: if( SPI_transmit_wait == 0 )
  1211  0013FA  505B               	movf	_SPI_transmit_wait,w,c
  1212  0013FC  A4D8               	btfss	status,2,c
  1213  0013FE  D006               	goto	l1845
  1214                           
  1215                           ;SlaveComm_PIC18.c: 566: {
  1216                           ;SlaveComm_PIC18.c: 567: SSP2BUF = data;
  1217  001400  C001  FF6F         	movff	SPI_send_data@data,3951	;volatile
  1218                           
  1219                           ;SlaveComm_PIC18.c: 568: SPI_transmit_wait = 1;
  1220  001404  0E01               	movlw	1
  1221  001406  6E5B               	movwf	_SPI_transmit_wait,c
  1222                           
  1223                           ;SlaveComm_PIC18.c: 569: sendGood = 1;
  1224  001408  0E01               	movlw	1
  1225  00140A  D001               	goto	L1
  1226  00140C                     l1845:
  1227                           
  1228                           ;SlaveComm_PIC18.c: 571: else
  1229                           ;SlaveComm_PIC18.c: 572: {
  1230                           ;SlaveComm_PIC18.c: 573: sendGood = 0;
  1231  00140C  0E00               	movlw	0
  1232  00140E                     L1:
  1233  00140E  6E02               	movwf	SPI_send_data@sendGood,c
  1234                           
  1235                           ;SlaveComm_PIC18.c: 574: }
  1236                           ;SlaveComm_PIC18.c: 576: return sendGood;
  1237  001410  5002               	movf	SPI_send_data@sendGood,w,c
  1238  001412  0012               	return	
  1239  001414                     __end_of_SPI_send_data:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           prodh	equ	0xFF4
  1243                           prodl	equ	0xFF3
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postinc1	equ	0xFE6
  1247                           fsr1h	equ	0xFE2
  1248                           fsr1l	equ	0xFE1
  1249                           indf2	equ	0xFDF
  1250                           postinc2	equ	0xFDE
  1251                           fsr2h	equ	0xFDA
  1252                           fsr2l	equ	0xFD9
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _resetCommunications *****************
  1256 ;; Defined at:
  1257 ;;		line 146 in file "SlaveComm_PIC18.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  send_buffer     2   29[COMRAM] PTR struct buffer
  1260 ;;		 -> communications@send_buffer(42), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;		None               void
  1265 ;; Registers used:
  1266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         2       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0       0       0
  1275 ;;      Totals:         4       0       0       0       0       0       0
  1276 ;;Total ram usage:        4 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    4
  1279 ;; This function calls:
  1280 ;;		_com_command_readCalibration
  1281 ;;		_com_command_setAmps
  1282 ;;		_com_command_setPower
  1283 ;;		_com_command_setVersion
  1284 ;;		_com_command_setVolts
  1285 ;;		_com_command_testLED
  1286 ;; This function is called by:
  1287 ;;		_communications
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292  000B38                     __ptext6:
  1293                           	opt stack 0
  1294  000B38                     _resetCommunications:
  1295                           	opt stack 25
  1296                           
  1297                           ;SlaveComm_PIC18.c: 149: static int commState = 0;
  1298                           ;SlaveComm_PIC18.c: 152: SSP2CON1bits.SSPEN = 0;
  1299                           
  1300                           ;incstack = 0
  1301  000B38  9A6C               	bcf	3948,5,c	;volatile
  1302                           
  1303                           ;SlaveComm_PIC18.c: 153: _delay((unsigned long)((1)*(16000000/4000.0)));
  1304  000B3A  0E06               	movlw	6
  1305  000B3C  6E20               	movwf	??_resetCommunications& (0+255),c
  1306  000B3E  0E30               	movlw	48
  1307  000B40                     u1337:
  1308  000B40  2EE8               	decfsz	wreg,f,c
  1309  000B42  D7FE               	goto	u1337
  1310  000B44  2E20               	decfsz	??_resetCommunications& (0+255),f,c
  1311  000B46  D7FC               	goto	u1337
  1312  000B48  D000               	nop2	
  1313                           
  1314                           ;SlaveComm_PIC18.c: 154: SSP2CON1bits.SSPEN = 1;
  1315  000B4A  8A6C               	bsf	3948,5,c	;volatile
  1316                           
  1317                           ;SlaveComm_PIC18.c: 156: SSP2CON1bits.WCOL = 0;
  1318  000B4C  9E6C               	bcf	3948,7,c	;volatile
  1319                           
  1320                           ;SlaveComm_PIC18.c: 157: SPI_transmit_wait = 0;
  1321  000B4E  0E00               	movlw	0
  1322  000B50  6E5B               	movwf	_SPI_transmit_wait,c
  1323                           
  1324                           ;SlaveComm_PIC18.c: 159: send_buffer->read_position = 0;
  1325  000B52  EE20 F029          	lfsr	2,41
  1326  000B56  501E               	movf	resetCommunications@send_buffer,w,c
  1327  000B58  26D9               	addwf	fsr2l,f,c
  1328  000B5A  501F               	movf	resetCommunications@send_buffer+1,w,c
  1329  000B5C  22DA               	addwfc	fsr2h,f,c
  1330  000B5E  0E00               	movlw	0
  1331  000B60  6EDF               	movwf	indf2,c
  1332                           
  1333                           ;SlaveComm_PIC18.c: 160: send_buffer->write_position = 0;
  1334  000B62  EE20 F028          	lfsr	2,40
  1335  000B66  501E               	movf	resetCommunications@send_buffer,w,c
  1336  000B68  26D9               	addwf	fsr2l,f,c
  1337  000B6A  501F               	movf	resetCommunications@send_buffer+1,w,c
  1338  000B6C  22DA               	addwfc	fsr2h,f,c
  1339  000B6E  0E00               	movlw	0
  1340  000B70  6EDF               	movwf	indf2,c
  1341                           
  1342                           ;SlaveComm_PIC18.c: 165: commState++;
  1343  000B72  4A59               	infsnz	resetCommunications@commState,f,c
  1344  000B74  2A5A               	incf	resetCommunications@commState+1,f,c
  1345                           
  1346                           ;SlaveComm_PIC18.c: 166: switch( commState )
  1347  000B76  D02F               	goto	l1881
  1348  000B78                     l1865:
  1349                           
  1350                           ;SlaveComm_PIC18.c: 169: com_command_setVersion( send_buffer );
  1351  000B78  C01E  F015         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  1352  000B7C  C01F  F016         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  1353  000B80  ECB0  F009         	call	_com_command_setVersion	;wreg free
  1354                           
  1355                           ;SlaveComm_PIC18.c: 170: break;
  1356  000B84  0012               	return	
  1357  000B86                     l1867:
  1358                           
  1359                           ;SlaveComm_PIC18.c: 172: com_command_setPower( send_buffer );
  1360  000B86  C01E  F015         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  1361  000B8A  C01F  F016         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  1362  000B8E  ECEA  F008         	call	_com_command_setPower	;wreg free
  1363                           
  1364                           ;SlaveComm_PIC18.c: 173: break;
  1365  000B92  0012               	return	
  1366  000B94                     l1869:
  1367                           
  1368                           ;SlaveComm_PIC18.c: 175: com_command_setVolts( send_buffer );
  1369  000B94  C01E  F015         	movff	resetCommunications@send_buffer,com_command_setVolts@send_buffer
  1370  000B98  C01F  F016         	movff	resetCommunications@send_buffer+1,com_command_setVolts@send_buffer+1
  1371  000B9C  EC9D  F009         	call	_com_command_setVolts	;wreg free
  1372                           
  1373                           ;SlaveComm_PIC18.c: 176: break;
  1374  000BA0  0012               	return	
  1375  000BA2                     l1871:
  1376                           
  1377                           ;SlaveComm_PIC18.c: 178: com_command_setAmps( send_buffer );
  1378  000BA2  C01E  F015         	movff	resetCommunications@send_buffer,com_command_setAmps@send_buffer
  1379  000BA6  C01F  F016         	movff	resetCommunications@send_buffer+1,com_command_setAmps@send_buffer+1
  1380  000BAA  ECC3  F009         	call	_com_command_setAmps	;wreg free
  1381                           
  1382                           ;SlaveComm_PIC18.c: 179: break;
  1383  000BAE  0012               	return	
  1384  000BB0                     l1873:
  1385                           
  1386                           ;SlaveComm_PIC18.c: 181: com_command_readCalibration( send_buffer );
  1387  000BB0  C01E  F013         	movff	resetCommunications@send_buffer,com_command_readCalibration@send_buffer
  1388  000BB4  C01F  F014         	movff	resetCommunications@send_buffer+1,com_command_readCalibration@send_buffer+1
  1389  000BB8  EC19  F00A         	call	_com_command_readCalibration	;wreg free
  1390                           
  1391                           ;SlaveComm_PIC18.c: 182: break;
  1392  000BBC  0012               	return	
  1393  000BBE                     l1875:
  1394                           
  1395                           ;SlaveComm_PIC18.c: 184: com_command_testLED( send_buffer );
  1396  000BBE  C01E  F013         	movff	resetCommunications@send_buffer,com_command_testLED@send_buffer
  1397  000BC2  C01F  F014         	movff	resetCommunications@send_buffer+1,com_command_testLED@send_buffer+1
  1398  000BC6  EC0A  F00A         	call	_com_command_testLED	;wreg free
  1399                           
  1400                           ;SlaveComm_PIC18.c: 185: break;
  1401  000BCA  0012               	return	
  1402  000BCC                     l1877:
  1403                           
  1404                           ;SlaveComm_PIC18.c: 187: commState = 0;
  1405  000BCC  0E00               	movlw	0
  1406  000BCE  6E5A               	movwf	resetCommunications@commState+1,c
  1407  000BD0  0E00               	movlw	0
  1408  000BD2  6E59               	movwf	resetCommunications@commState,c
  1409                           
  1410                           ;SlaveComm_PIC18.c: 189: }
  1411                           
  1412                           ;SlaveComm_PIC18.c: 188: break;
  1413  000BD4  0012               	return	
  1414  000BD6                     l1881:
  1415  000BD6  C059  F020         	movff	resetCommunications@commState,??_resetCommunications
  1416  000BDA  C05A  F021         	movff	resetCommunications@commState+1,??_resetCommunications+1
  1417                           
  1418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 1, Range of values is 0 to 0
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte            4     3 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  000BDE  5021               	movf	??_resetCommunications+1,w,c
  1426  000BE0  0A00               	xorlw	0	; case 0
  1427  000BE2  A4D8               	btfss	status,2,c
  1428  000BE4  D7F3               	goto	l1877
  1429                           
  1430                           ; Switch size 1, requested type "space"
  1431                           ; Number of cases is 6, Range of values is 1 to 6
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           19    10 (average)
  1435                           ;	Chosen strategy is simple_byte
  1436  000BE6  5020               	movf	??_resetCommunications,w,c
  1437  000BE8  0A01               	xorlw	1	; case 1
  1438  000BEA  B4D8               	btfsc	status,2,c
  1439  000BEC  D7C5               	goto	l1865
  1440  000BEE  0A03               	xorlw	3	; case 2
  1441  000BF0  B4D8               	btfsc	status,2,c
  1442  000BF2  D7C9               	goto	l1867
  1443  000BF4  0A01               	xorlw	1	; case 3
  1444  000BF6  B4D8               	btfsc	status,2,c
  1445  000BF8  D7CD               	goto	l1869
  1446  000BFA  0A07               	xorlw	7	; case 4
  1447  000BFC  B4D8               	btfsc	status,2,c
  1448  000BFE  D7D1               	goto	l1871
  1449  000C00  0A01               	xorlw	1	; case 5
  1450  000C02  B4D8               	btfsc	status,2,c
  1451  000C04  D7D5               	goto	l1873
  1452  000C06  0A03               	xorlw	3	; case 6
  1453  000C08  B4D8               	btfsc	status,2,c
  1454  000C0A  D7D9               	goto	l1875
  1455  000C0C  D7DF               	goto	l1877
  1456  000C0E                     __end_of_resetCommunications:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postinc1	equ	0xFE6
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           indf2	equ	0xFDF
  1467                           postinc2	equ	0xFDE
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _com_command_testLED *****************
  1473 ;; Defined at:
  1474 ;;		line 589 in file "SlaveComm_PIC18.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1477 ;;		 -> communications@send_buffer(42), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;		None               void
  1482 ;; Registers used:
  1483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         2       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0
  1492 ;;      Totals:         2       0       0       0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    3
  1496 ;; This function calls:
  1497 ;;		_command_builder2
  1498 ;; This function is called by:
  1499 ;;		_resetCommunications
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text7
  1504  001414                     __ptext7:
  1505                           	opt stack 0
  1506  001414                     _com_command_testLED:
  1507                           	opt stack 25
  1508                           
  1509                           ;SlaveComm_PIC18.c: 591: command_builder2( send_buffer, "Read", "LEDB" );
  1510                           
  1511                           ;incstack = 0
  1512  001414  C013  F00D         	movff	com_command_testLED@send_buffer,command_builder2@send_buffer
  1513  001418  C014  F00E         	movff	com_command_testLED@send_buffer+1,command_builder2@send_buffer+1
  1514  00141C  0E2D               	movlw	low STR_4
  1515  00141E  6E0F               	movwf	command_builder2@data1,c
  1516  001420  0E06               	movlw	high STR_4
  1517  001422  6E10               	movwf	command_builder2@data1+1,c
  1518  001424  0E23               	movlw	low STR_6
  1519  001426  6E11               	movwf	command_builder2@data2,c
  1520  001428  0E06               	movlw	high STR_6
  1521  00142A  6E12               	movwf	command_builder2@data2+1,c
  1522  00142C  ECD9  F007         	call	_command_builder2	;wreg free
  1523  001430  0012               	return	
  1524  001432                     __end_of_com_command_testLED:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           prodh	equ	0xFF4
  1528                           prodl	equ	0xFF3
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postinc1	equ	0xFE6
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           indf2	equ	0xFDF
  1535                           postinc2	equ	0xFDE
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _com_command_setVolts *****************
  1541 ;; Defined at:
  1542 ;;		line 613 in file "SlaveComm_PIC18.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1545 ;;		 -> communications@send_buffer(42), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1557 ;;      Params:         2       0       0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		_command_builder3
  1566 ;; This function is called by:
  1567 ;;		_resetCommunications
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text8
  1572  00133A                     __ptext8:
  1573                           	opt stack 0
  1574  00133A                     _com_command_setVolts:
  1575                           	opt stack 25
  1576                           
  1577                           ;SlaveComm_PIC18.c: 615: command_builder3( send_buffer, "Set", "Volts", "222" );
  1578                           
  1579                           ;incstack = 0
  1580  00133A  C015  F00D         	movff	com_command_setVolts@send_buffer,command_builder3@send_buffer
  1581  00133E  C016  F00E         	movff	com_command_setVolts@send_buffer+1,command_builder3@send_buffer+1
  1582  001342  0E50               	movlw	low STR_2
  1583  001344  6E0F               	movwf	command_builder3@data1,c
  1584  001346  0E06               	movlw	high STR_2
  1585  001348  6E10               	movwf	command_builder3@data1+1,c
  1586  00134A  0E17               	movlw	low STR_18
  1587  00134C  6E11               	movwf	command_builder3@data2,c
  1588  00134E  0E06               	movlw	high STR_18
  1589  001350  6E12               	movwf	command_builder3@data2+1,c
  1590  001352  0E3C               	movlw	low STR_28
  1591  001354  6E13               	movwf	command_builder3@data3,c
  1592  001356  0E06               	movlw	high STR_28
  1593  001358  6E14               	movwf	command_builder3@data3+1,c
  1594  00135A  ECB9  F006         	call	_command_builder3	;wreg free
  1595  00135E  0012               	return	
  1596  001360                     __end_of_com_command_setVolts:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           prodh	equ	0xFF4
  1600                           prodl	equ	0xFF3
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           postinc1	equ	0xFE6
  1604                           fsr1h	equ	0xFE2
  1605                           fsr1l	equ	0xFE1
  1606                           indf2	equ	0xFDF
  1607                           postinc2	equ	0xFDE
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function _com_command_setVersion *****************
  1613 ;; Defined at:
  1614 ;;		line 634 in file "SlaveComm_PIC18.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1617 ;;		 -> communications@send_buffer(42), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         2       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0
  1632 ;;      Totals:         2       0       0       0       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    3
  1636 ;; This function calls:
  1637 ;;		_command_builder3
  1638 ;; This function is called by:
  1639 ;;		_resetCommunications
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text9
  1644  001360                     __ptext9:
  1645                           	opt stack 0
  1646  001360                     _com_command_setVersion:
  1647                           	opt stack 25
  1648                           
  1649                           ;SlaveComm_PIC18.c: 636: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  1650                           
  1651                           ;incstack = 0
  1652  001360  C015  F00D         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  1653  001364  C016  F00E         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  1654  001368  0E50               	movlw	low STR_2
  1655  00136A  6E0F               	movwf	command_builder3@data1,c
  1656  00136C  0E06               	movlw	high STR_2
  1657  00136E  6E10               	movwf	command_builder3@data1+1,c
  1658  001370  0E0D               	movlw	low STR_20
  1659  001372  6E11               	movwf	command_builder3@data2,c
  1660  001374  0E06               	movlw	high STR_20
  1661  001376  6E12               	movwf	command_builder3@data2+1,c
  1662  001378  0E44               	movlw	low STR_36
  1663  00137A  6E13               	movwf	command_builder3@data3,c
  1664  00137C  0E06               	movlw	high STR_36
  1665  00137E  6E14               	movwf	command_builder3@data3+1,c
  1666  001380  ECB9  F006         	call	_command_builder3	;wreg free
  1667  001384  0012               	return		;funcret
  1668  001386                     __end_of_com_command_setVersion:
  1669                           	opt stack 0
  1670                           tblptru	equ	0xFF8
  1671                           prodh	equ	0xFF4
  1672                           prodl	equ	0xFF3
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           postinc1	equ	0xFE6
  1676                           fsr1h	equ	0xFE2
  1677                           fsr1l	equ	0xFE1
  1678                           indf2	equ	0xFDF
  1679                           postinc2	equ	0xFDE
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _com_command_setPower *****************
  1685 ;; Defined at:
  1686 ;;		line 596 in file "SlaveComm_PIC18.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1689 ;;		 -> communications@send_buffer(42), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  temp            7   22[COMRAM] unsigned char [7]
  1692 ;;  newPowerAllo    7    0        unsigned char [7]
  1693 ;; Return value:  Size  Location     Type
  1694 ;;		None               void
  1695 ;; Registers used:
  1696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1702 ;;      Params:         2       0       0       0       0       0       0
  1703 ;;      Locals:         7       0       0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0
  1705 ;;      Totals:         9       0       0       0       0       0       0
  1706 ;;Total ram usage:        9 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    3
  1709 ;; This function calls:
  1710 ;;		_command_builder3
  1711 ;;		_utoa
  1712 ;; This function is called by:
  1713 ;;		_resetCommunications
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text10
  1718  0011D4                     __ptext10:
  1719                           	opt stack 0
  1720  0011D4                     _com_command_setPower:
  1721                           	opt stack 25
  1722                           
  1723                           ;SlaveComm_PIC18.c: 599: char temp[7];
  1724                           ;SlaveComm_PIC18.c: 601: static unsigned int power = 0;
  1725                           ;SlaveComm_PIC18.c: 603: char newPowerAllocated[7];
  1726                           ;SlaveComm_PIC18.c: 604: utoa(temp, power, 10);
  1727                           
  1728                           ;incstack = 0
  1729  0011D4  0E17               	movlw	low com_command_setPower@temp
  1730  0011D6  6E08               	movwf	utoa@buf,c
  1731  0011D8  0E00               	movlw	high com_command_setPower@temp
  1732  0011DA  6E09               	movwf	utoa@buf+1,c
  1733  0011DC  C057  F00A         	movff	com_command_setPower@power,utoa@val
  1734  0011E0  C058  F00B         	movff	com_command_setPower@power+1,utoa@val+1
  1735  0011E4  0E00               	movlw	0
  1736  0011E6  6E0D               	movwf	utoa@base+1,c
  1737  0011E8  0E0A               	movlw	10
  1738  0011EA  6E0C               	movwf	utoa@base,c
  1739  0011EC  EC67  F006         	call	_utoa	;wreg free
  1740                           
  1741                           ;SlaveComm_PIC18.c: 606: command_builder3( send_buffer, "Set", "Watts", temp );
  1742  0011F0  C015  F00D         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  1743  0011F4  C016  F00E         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  1744  0011F8  0E50               	movlw	low STR_2
  1745  0011FA  6E0F               	movwf	command_builder3@data1,c
  1746  0011FC  0E06               	movlw	high STR_2
  1747  0011FE  6E10               	movwf	command_builder3@data1+1,c
  1748  001200  0E1D               	movlw	low STR_17
  1749  001202  6E11               	movwf	command_builder3@data2,c
  1750  001204  0E06               	movlw	high STR_17
  1751  001206  6E12               	movwf	command_builder3@data2+1,c
  1752  001208  0E17               	movlw	low com_command_setPower@temp
  1753  00120A  6E13               	movwf	command_builder3@data3,c
  1754  00120C  0E00               	movlw	high com_command_setPower@temp
  1755  00120E  6E14               	movwf	command_builder3@data3+1,c
  1756  001210  ECB9  F006         	call	_command_builder3	;wreg free
  1757                           
  1758                           ;SlaveComm_PIC18.c: 608: power++;
  1759  001214  4A57               	infsnz	com_command_setPower@power,f,c
  1760  001216  2A58               	incf	com_command_setPower@power+1,f,c
  1761  001218  0012               	return	
  1762  00121A                     __end_of_com_command_setPower:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           prodh	equ	0xFF4
  1766                           prodl	equ	0xFF3
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           postinc1	equ	0xFE6
  1770                           fsr1h	equ	0xFE2
  1771                           fsr1l	equ	0xFE1
  1772                           indf2	equ	0xFDF
  1773                           postinc2	equ	0xFDE
  1774                           fsr2h	equ	0xFDA
  1775                           fsr2l	equ	0xFD9
  1776                           status	equ	0xFD8
  1777                           
  1778 ;; *************** function _utoa *****************
  1779 ;; Defined at:
  1780 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1783 ;;		 -> com_command_setPower@temp(7), 
  1784 ;;  val             2    9[COMRAM] unsigned int 
  1785 ;;  base            2   11[COMRAM] int 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  v               2   13[COMRAM] unsigned int 
  1788 ;;  c               1   15[COMRAM] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  2    7[COMRAM] PTR unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         6       0       0       0       0       0       0
  1799 ;;      Locals:         3       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         9       0       0       0       0       0       0
  1802 ;;Total ram usage:        9 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		___lwdiv
  1807 ;;		___lwmod
  1808 ;; This function is called by:
  1809 ;;		_com_command_setPower
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text11
  1814  000CCE                     __ptext11:
  1815                           	opt stack 0
  1816  000CCE                     _utoa:
  1817                           	opt stack 26
  1818                           
  1819                           ;incstack = 0
  1820  000CCE  C00A  F00E         	movff	utoa@val,utoa@v
  1821  000CD2  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1822  000CD6                     l1663:
  1823  000CD6  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1824  000CDA  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1825  000CDE  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1826  000CE2  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1827  000CE6  EC98  F008         	call	___lwdiv	;wreg free
  1828  000CEA  C001  F00E         	movff	?___lwdiv,utoa@v
  1829  000CEE  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1830  000CF2  4A08               	infsnz	utoa@buf,f,c
  1831  000CF4  2A09               	incf	utoa@buf+1,f,c
  1832  000CF6  500E               	movf	utoa@v,w,c
  1833  000CF8  100F               	iorwf	utoa@v+1,w,c
  1834  000CFA  A4D8               	btfss	status,2,c
  1835  000CFC  D7EC               	goto	l1663
  1836  000CFE  C008  FFD9         	movff	utoa@buf,fsr2l
  1837  000D02  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1838  000D06  0E00               	movlw	0
  1839  000D08  6EDF               	movwf	indf2,c
  1840  000D0A  0608               	decf	utoa@buf,f,c
  1841  000D0C  A0D8               	btfss	status,0,c
  1842  000D0E  0609               	decf	utoa@buf+1,f,c
  1843  000D10                     l1673:
  1844  000D10  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1845  000D14  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1846  000D18  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1847  000D1C  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1848  000D20  EC0D  F009         	call	___lwmod	;wreg free
  1849  000D24  5001               	movf	?___lwmod,w,c
  1850  000D26  6E10               	movwf	utoa@c,c
  1851  000D28  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1852  000D2C  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1853  000D30  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1854  000D34  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1855  000D38  EC98  F008         	call	___lwdiv	;wreg free
  1856  000D3C  C001  F00A         	movff	?___lwdiv,utoa@val
  1857  000D40  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1858  000D44  0E09               	movlw	9
  1859  000D46  6410               	cpfsgt	utoa@c,c
  1860  000D48  D002               	goto	l669
  1861  000D4A  0E07               	movlw	7
  1862  000D4C  2610               	addwf	utoa@c,f,c
  1863  000D4E                     l669:
  1864  000D4E  0E30               	movlw	48
  1865  000D50  2610               	addwf	utoa@c,f,c
  1866  000D52  C008  FFD9         	movff	utoa@buf,fsr2l
  1867  000D56  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1868  000D5A  C010  FFDF         	movff	utoa@c,indf2
  1869  000D5E  0608               	decf	utoa@buf,f,c
  1870  000D60  A0D8               	btfss	status,0,c
  1871  000D62  0609               	decf	utoa@buf+1,f,c
  1872  000D64  500A               	movf	utoa@val,w,c
  1873  000D66  100B               	iorwf	utoa@val+1,w,c
  1874  000D68  A4D8               	btfss	status,2,c
  1875  000D6A  D7D2               	goto	l1673
  1876                           
  1877                           ;	Return value of _utoa is never used
  1878  000D6C  4A08               	infsnz	utoa@buf,f,c
  1879  000D6E  2A09               	incf	utoa@buf+1,f,c
  1880  000D70  0012               	return	
  1881  000D72                     __end_of_utoa:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           postinc1	equ	0xFE6
  1889                           fsr1h	equ	0xFE2
  1890                           fsr1l	equ	0xFE1
  1891                           indf2	equ	0xFDF
  1892                           postinc2	equ	0xFDE
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function ___lwmod *****************
  1898 ;; Defined at:
  1899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  dividend        2    0[COMRAM] unsigned int 
  1902 ;;  divisor         2    2[COMRAM] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  counter         1    4[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2    0[COMRAM] unsigned int 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         4       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         5       0       0       0       0       0       0
  1918 ;;Total ram usage:        5 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_utoa
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text12
  1928  00121A                     __ptext12:
  1929                           	opt stack 0
  1930  00121A                     ___lwmod:
  1931                           	opt stack 26
  1932                           
  1933                           ;incstack = 0
  1934  00121A  5003               	movf	___lwmod@divisor,w,c
  1935  00121C  1004               	iorwf	___lwmod@divisor+1,w,c
  1936  00121E  B4D8               	btfsc	status,2,c
  1937  001220  D018               	goto	l758
  1938  001222  0E01               	movlw	1
  1939  001224  6E05               	movwf	___lwmod@counter,c
  1940  001226  D004               	goto	l1617
  1941  001228                     l1615:
  1942  001228  90D8               	bcf	status,0,c
  1943  00122A  3603               	rlcf	___lwmod@divisor,f,c
  1944  00122C  3604               	rlcf	___lwmod@divisor+1,f,c
  1945  00122E  2A05               	incf	___lwmod@counter,f,c
  1946  001230                     l1617:
  1947  001230  AE04               	btfss	___lwmod@divisor+1,7,c
  1948  001232  D7FA               	goto	l1615
  1949  001234                     l1619:
  1950  001234  5003               	movf	___lwmod@divisor,w,c
  1951  001236  5C01               	subwf	___lwmod@dividend,w,c
  1952  001238  5004               	movf	___lwmod@divisor+1,w,c
  1953  00123A  5802               	subwfb	___lwmod@dividend+1,w,c
  1954  00123C  A0D8               	btfss	status,0,c
  1955  00123E  D004               	goto	l1623
  1956  001240  5003               	movf	___lwmod@divisor,w,c
  1957  001242  5E01               	subwf	___lwmod@dividend,f,c
  1958  001244  5004               	movf	___lwmod@divisor+1,w,c
  1959  001246  5A02               	subwfb	___lwmod@dividend+1,f,c
  1960  001248                     l1623:
  1961  001248  90D8               	bcf	status,0,c
  1962  00124A  3204               	rrcf	___lwmod@divisor+1,f,c
  1963  00124C  3203               	rrcf	___lwmod@divisor,f,c
  1964  00124E  2E05               	decfsz	___lwmod@counter,f,c
  1965  001250  D7F1               	goto	l1619
  1966  001252                     l758:
  1967  001252  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1968  001256  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1969  00125A  0012               	return		;funcret
  1970  00125C                     __end_of___lwmod:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           prodh	equ	0xFF4
  1974                           prodl	equ	0xFF3
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postinc1	equ	0xFE6
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           indf2	equ	0xFDF
  1981                           postinc2	equ	0xFDE
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function ___lwdiv *****************
  1987 ;; Defined at:
  1988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  dividend        2    0[COMRAM] unsigned int 
  1991 ;;  divisor         2    2[COMRAM] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        2    4[COMRAM] unsigned int 
  1994 ;;  counter         1    6[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2    0[COMRAM] unsigned int 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         4       0       0       0       0       0       0
  2005 ;;      Locals:         3       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0
  2007 ;;      Totals:         7       0       0       0       0       0       0
  2008 ;;Total ram usage:        7 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_utoa
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text13
  2018  001130                     __ptext13:
  2019                           	opt stack 0
  2020  001130                     ___lwdiv:
  2021                           	opt stack 26
  2022                           
  2023                           ;incstack = 0
  2024  001130  0E00               	movlw	0
  2025  001132  6E06               	movwf	___lwdiv@quotient+1,c
  2026  001134  0E00               	movlw	0
  2027  001136  6E05               	movwf	___lwdiv@quotient,c
  2028  001138  5003               	movf	___lwdiv@divisor,w,c
  2029  00113A  1004               	iorwf	___lwdiv@divisor+1,w,c
  2030  00113C  B4D8               	btfsc	status,2,c
  2031  00113E  D01C               	goto	l748
  2032  001140  0E01               	movlw	1
  2033  001142  6E07               	movwf	___lwdiv@counter,c
  2034  001144  D004               	goto	l1597
  2035  001146                     l1595:
  2036  001146  90D8               	bcf	status,0,c
  2037  001148  3603               	rlcf	___lwdiv@divisor,f,c
  2038  00114A  3604               	rlcf	___lwdiv@divisor+1,f,c
  2039  00114C  2A07               	incf	___lwdiv@counter,f,c
  2040  00114E                     l1597:
  2041  00114E  AE04               	btfss	___lwdiv@divisor+1,7,c
  2042  001150  D7FA               	goto	l1595
  2043  001152                     l1599:
  2044  001152  90D8               	bcf	status,0,c
  2045  001154  3605               	rlcf	___lwdiv@quotient,f,c
  2046  001156  3606               	rlcf	___lwdiv@quotient+1,f,c
  2047  001158  5003               	movf	___lwdiv@divisor,w,c
  2048  00115A  5C01               	subwf	___lwdiv@dividend,w,c
  2049  00115C  5004               	movf	___lwdiv@divisor+1,w,c
  2050  00115E  5802               	subwfb	___lwdiv@dividend+1,w,c
  2051  001160  A0D8               	btfss	status,0,c
  2052  001162  D005               	goto	l1607
  2053  001164  5003               	movf	___lwdiv@divisor,w,c
  2054  001166  5E01               	subwf	___lwdiv@dividend,f,c
  2055  001168  5004               	movf	___lwdiv@divisor+1,w,c
  2056  00116A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2057  00116C  8005               	bsf	___lwdiv@quotient,0,c
  2058  00116E                     l1607:
  2059  00116E  90D8               	bcf	status,0,c
  2060  001170  3204               	rrcf	___lwdiv@divisor+1,f,c
  2061  001172  3203               	rrcf	___lwdiv@divisor,f,c
  2062  001174  2E07               	decfsz	___lwdiv@counter,f,c
  2063  001176  D7ED               	goto	l1599
  2064  001178                     l748:
  2065  001178  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2066  00117C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2067  001180  0012               	return		;funcret
  2068  001182                     __end_of___lwdiv:
  2069                           	opt stack 0
  2070                           tblptru	equ	0xFF8
  2071                           prodh	equ	0xFF4
  2072                           prodl	equ	0xFF3
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           postinc1	equ	0xFE6
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           fsr2h	equ	0xFDA
  2081                           fsr2l	equ	0xFD9
  2082                           status	equ	0xFD8
  2083                           
  2084 ;; *************** function _com_command_setAmps *****************
  2085 ;; Defined at:
  2086 ;;		line 620 in file "SlaveComm_PIC18.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2089 ;;		 -> communications@send_buffer(42), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;		None               void
  2094 ;; Registers used:
  2095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2101 ;;      Params:         2       0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0
  2104 ;;      Totals:         2       0       0       0       0       0       0
  2105 ;;Total ram usage:        2 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    3
  2108 ;; This function calls:
  2109 ;;		_command_builder3
  2110 ;; This function is called by:
  2111 ;;		_resetCommunications
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text14
  2116  001386                     __ptext14:
  2117                           	opt stack 0
  2118  001386                     _com_command_setAmps:
  2119                           	opt stack 25
  2120                           
  2121                           ;SlaveComm_PIC18.c: 622: command_builder3( send_buffer, "Set", "Amps", "333" );
  2122                           
  2123                           ;incstack = 0
  2124  001386  C015  F00D         	movff	com_command_setAmps@send_buffer,command_builder3@send_buffer
  2125  00138A  C016  F00E         	movff	com_command_setAmps@send_buffer+1,command_builder3@send_buffer+1
  2126  00138E  0E50               	movlw	low STR_2
  2127  001390  6E0F               	movwf	command_builder3@data1,c
  2128  001392  0E06               	movlw	high STR_2
  2129  001394  6E10               	movwf	command_builder3@data1+1,c
  2130  001396  0E37               	movlw	low STR_19
  2131  001398  6E11               	movwf	command_builder3@data2,c
  2132  00139A  0E06               	movlw	high STR_19
  2133  00139C  6E12               	movwf	command_builder3@data2+1,c
  2134  00139E  0E40               	movlw	low STR_31
  2135  0013A0  6E13               	movwf	command_builder3@data3,c
  2136  0013A2  0E06               	movlw	high STR_31
  2137  0013A4  6E14               	movwf	command_builder3@data3+1,c
  2138  0013A6  ECB9  F006         	call	_command_builder3	;wreg free
  2139  0013AA  0012               	return	
  2140  0013AC                     __end_of_com_command_setAmps:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           postinc0	equ	0xFEE
  2146                           wreg	equ	0xFE8
  2147                           postinc1	equ	0xFE6
  2148                           fsr1h	equ	0xFE2
  2149                           fsr1l	equ	0xFE1
  2150                           indf2	equ	0xFDF
  2151                           postinc2	equ	0xFDE
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _com_command_readCalibration *****************
  2157 ;; Defined at:
  2158 ;;		line 627 in file "SlaveComm_PIC18.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  2161 ;;		 -> communications@send_buffer(42), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2173 ;;      Params:         2       0       0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0
  2176 ;;      Totals:         2       0       0       0       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    3
  2180 ;; This function calls:
  2181 ;;		_command_builder2
  2182 ;; This function is called by:
  2183 ;;		_resetCommunications
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text15
  2188  001432                     __ptext15:
  2189                           	opt stack 0
  2190  001432                     _com_command_readCalibration:
  2191                           	opt stack 25
  2192                           
  2193                           ;SlaveComm_PIC18.c: 629: command_builder2( send_buffer, "Read", "Calibration" );
  2194                           
  2195                           ;incstack = 0
  2196  001432  C013  F00D         	movff	com_command_readCalibration@send_buffer,command_builder2@send_buffer
  2197  001436  C014  F00E         	movff	com_command_readCalibration@send_buffer+1,command_builder2@send_buffer+1
  2198  00143A  0E2D               	movlw	low STR_4
  2199  00143C  6E0F               	movwf	command_builder2@data1,c
  2200  00143E  0E06               	movlw	high STR_4
  2201  001440  6E10               	movwf	command_builder2@data1+1,c
  2202  001442  0E01               	movlw	low STR_3
  2203  001444  6E11               	movwf	command_builder2@data2,c
  2204  001446  0E06               	movlw	high STR_3
  2205  001448  6E12               	movwf	command_builder2@data2+1,c
  2206  00144A  ECD9  F007         	call	_command_builder2	;wreg free
  2207  00144E  0012               	return	
  2208  001450                     __end_of_com_command_readCalibration:
  2209                           	opt stack 0
  2210                           tblptru	equ	0xFF8
  2211                           prodh	equ	0xFF4
  2212                           prodl	equ	0xFF3
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postinc1	equ	0xFE6
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           fsr2h	equ	0xFDA
  2221                           fsr2l	equ	0xFD9
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function _command_builder2 *****************
  2225 ;; Defined at:
  2226 ;;		line 395 in file "SlaveComm_PIC18.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  2229 ;;		 -> communications@send_buffer(42), 
  2230 ;;  data1           2   14[COMRAM] PTR unsigned char 
  2231 ;;		 -> STR_32(5), STR_22(5), 
  2232 ;;  data2           2   16[COMRAM] PTR unsigned char 
  2233 ;;		 -> STR_33(12), STR_23(5), 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2245 ;;      Params:         6       0       0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0
  2248 ;;      Totals:         6       0       0       0       0       0       0
  2249 ;;Total ram usage:        6 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    2
  2252 ;; This function calls:
  2253 ;;		_command_builder_add_char
  2254 ;;		_command_builder_add_string
  2255 ;; This function is called by:
  2256 ;;		_com_command_testLED
  2257 ;;		_com_command_readCalibration
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text16
  2262  000FB2                     __ptext16:
  2263                           	opt stack 0
  2264  000FB2                     _command_builder2:
  2265                           	opt stack 25
  2266                           
  2267                           ;SlaveComm_PIC18.c: 397: command_builder_add_char( send_buffer, '#' );
  2268                           
  2269                           ;incstack = 0
  2270  000FB2  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  2271  000FB6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  2272  000FBA  0E23               	movlw	35
  2273  000FBC  6E03               	movwf	command_builder_add_char@data,c
  2274  000FBE  EC6D  F008         	call	_command_builder_add_char	;wreg free
  2275                           
  2276                           ;SlaveComm_PIC18.c: 398: command_builder_add_char( send_buffer, '#' );
  2277  000FC2  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  2278  000FC6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  2279  000FCA  0E23               	movlw	35
  2280  000FCC  6E03               	movwf	command_builder_add_char@data,c
  2281  000FCE  EC6D  F008         	call	_command_builder_add_char	;wreg free
  2282                           
  2283                           ;SlaveComm_PIC18.c: 399: command_builder_add_char( send_buffer, '!' );
  2284  000FD2  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  2285  000FD6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  2286  000FDA  0E21               	movlw	33
  2287  000FDC  6E03               	movwf	command_builder_add_char@data,c
  2288  000FDE  EC6D  F008         	call	_command_builder_add_char	;wreg free
  2289                           
  2290                           ;SlaveComm_PIC18.c: 400: command_builder_add_string( send_buffer, data1 );
  2291  000FE2  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  2292  000FE6  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  2293  000FEA  C00F  F007         	movff	command_builder2@data1,command_builder_add_string@data_string
  2294  000FEE  C010  F008         	movff	command_builder2@data1+1,command_builder_add_string@data_string+1
  2295  000FF2  EC9B  F007         	call	_command_builder_add_string	;wreg free
  2296                           
  2297                           ;SlaveComm_PIC18.c: 401: command_builder_add_char( send_buffer, ';' );
  2298  000FF6  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  2299  000FFA  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  2300  000FFE  0E3B               	movlw	59
  2301  001000  6E03               	movwf	command_builder_add_char@data,c
  2302  001002  EC6D  F008         	call	_command_builder_add_char	;wreg free
  2303                           
  2304                           ;SlaveComm_PIC18.c: 402: command_builder_add_string( send_buffer, data2 );
  2305  001006  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  2306  00100A  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  2307  00100E  C011  F007         	movff	command_builder2@data2,command_builder_add_string@data_string
  2308  001012  C012  F008         	movff	command_builder2@data2+1,command_builder_add_string@data_string+1
  2309  001016  EC9B  F007         	call	_command_builder_add_string	;wreg free
  2310                           
  2311                           ;SlaveComm_PIC18.c: 403: command_builder_add_char( send_buffer, '*' );
  2312  00101A  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  2313  00101E  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  2314  001022  0E2A               	movlw	42
  2315  001024  6E03               	movwf	command_builder_add_char@data,c
  2316  001026  EC6D  F008         	call	_command_builder_add_char	;wreg free
  2317  00102A  0012               	return	
  2318  00102C                     __end_of_command_builder2:
  2319                           	opt stack 0
  2320                           tblptru	equ	0xFF8
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postinc1	equ	0xFE6
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           indf2	equ	0xFDF
  2329                           postinc2	equ	0xFDE
  2330                           fsr2h	equ	0xFDA
  2331                           fsr2l	equ	0xFD9
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _receive_data *****************
  2335 ;; Defined at:
  2336 ;;		line 193 in file "SlaveComm_PIC18.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  receive_buff    2    3[COMRAM] PTR struct buffer
  2339 ;;		 -> communications@receive_buffer(42), 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  data            1    6[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      enum E7619
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2351 ;;      Params:         2       0       0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0       0       0
  2353 ;;      Temps:          1       0       0       0       0       0       0
  2354 ;;      Totals:         4       0       0       0       0       0       0
  2355 ;;Total ram usage:        4 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		_SPI_receive_data
  2360 ;; This function is called by:
  2361 ;;		_communications
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text17
  2366  000C0E                     __ptext17:
  2367                           	opt stack 0
  2368  000C0E                     _receive_data:
  2369                           	opt stack 28
  2370                           
  2371                           ;SlaveComm_PIC18.c: 195: char data;
  2372                           ;SlaveComm_PIC18.c: 197: static enum receive_status my_status = receive_waiting;
  2373                           ;SlaveComm_PIC18.c: 199: if( my_status == receive_end_command )
  2374                           
  2375                           ;incstack = 0
  2376  000C0E  0E02               	movlw	2
  2377  000C10  185F               	xorwf	receive_data@my_status,w,c
  2378  000C12  A4D8               	btfss	status,2,c
  2379  000C14  D002               	goto	l1891
  2380                           
  2381                           ;SlaveComm_PIC18.c: 200: {
  2382                           ;SlaveComm_PIC18.c: 201: my_status = receive_waiting;
  2383  000C16  0E00               	movlw	0
  2384  000C18  6E5F               	movwf	receive_data@my_status,c
  2385  000C1A                     l1891:
  2386                           
  2387                           ;SlaveComm_PIC18.c: 202: }
  2388                           ;SlaveComm_PIC18.c: 204: if( SPI_receive_data( &data ) == 1 )
  2389  000C1A  0E07               	movlw	low receive_data@data
  2390  000C1C  6E01               	movwf	SPI_receive_data@data,c
  2391  000C1E  0E00               	movlw	high receive_data@data
  2392  000C20  6E02               	movwf	SPI_receive_data@data+1,c
  2393  000C22  EC76  F009         	call	_SPI_receive_data	;wreg free
  2394  000C26  06E8               	decf	wreg,f,c
  2395  000C28  A4D8               	btfss	status,2,c
  2396  000C2A  D04F               	goto	l161
  2397                           
  2398                           ;SlaveComm_PIC18.c: 205: {
  2399                           ;SlaveComm_PIC18.c: 206: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2400  000C2C  0E21               	movlw	33
  2401  000C2E  1807               	xorwf	receive_data@data,w,c
  2402  000C30  A4D8               	btfss	status,2,c
  2403  000C32  D015               	goto	l1903
  2404  000C34  045F               	decf	receive_data@my_status,w,c
  2405  000C36  B4D8               	btfsc	status,2,c
  2406  000C38  D012               	goto	l1903
  2407                           
  2408                           ;SlaveComm_PIC18.c: 207: {
  2409                           ;SlaveComm_PIC18.c: 208: my_status = receive_in_command;
  2410  000C3A  0E01               	movlw	1
  2411  000C3C  6E5F               	movwf	receive_data@my_status,c
  2412                           
  2413                           ;SlaveComm_PIC18.c: 209: receive_buffer->read_position = 0;
  2414  000C3E  EE20 F029          	lfsr	2,41
  2415  000C42  5004               	movf	receive_data@receive_buffer,w,c
  2416  000C44  26D9               	addwf	fsr2l,f,c
  2417  000C46  5005               	movf	receive_data@receive_buffer+1,w,c
  2418  000C48  22DA               	addwfc	fsr2h,f,c
  2419  000C4A  0E00               	movlw	0
  2420  000C4C  6EDF               	movwf	indf2,c
  2421                           
  2422                           ;SlaveComm_PIC18.c: 210: receive_buffer->write_position = 0;
  2423  000C4E  EE20 F028          	lfsr	2,40
  2424  000C52  5004               	movf	receive_data@receive_buffer,w,c
  2425  000C54  26D9               	addwf	fsr2l,f,c
  2426  000C56  5005               	movf	receive_data@receive_buffer+1,w,c
  2427  000C58  22DA               	addwfc	fsr2h,f,c
  2428  000C5A  0E00               	movlw	0
  2429  000C5C  6EDF               	movwf	indf2,c
  2430  000C5E                     l1903:
  2431                           
  2432                           ;SlaveComm_PIC18.c: 211: }
  2433                           ;SlaveComm_PIC18.c: 213: if( my_status == receive_in_command )
  2434  000C5E  045F               	decf	receive_data@my_status,w,c
  2435  000C60  A4D8               	btfss	status,2,c
  2436  000C62  D02A               	goto	l1913
  2437                           
  2438                           ;SlaveComm_PIC18.c: 214: {
  2439                           ;SlaveComm_PIC18.c: 215: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2440  000C64  EE20 F028          	lfsr	2,40
  2441  000C68  5004               	movf	receive_data@receive_buffer,w,c
  2442  000C6A  26D9               	addwf	fsr2l,f,c
  2443  000C6C  5005               	movf	receive_data@receive_buffer+1,w,c
  2444  000C6E  22DA               	addwfc	fsr2h,f,c
  2445  000C70  50DF               	movf	indf2,w,c
  2446  000C72  6E06               	movwf	??_receive_data& (0+255),c
  2447  000C74  5006               	movf	??_receive_data,w,c
  2448  000C76  0D01               	mullw	1
  2449  000C78  50F3               	movf	prodl,w,c
  2450  000C7A  2404               	addwf	receive_data@receive_buffer,w,c
  2451  000C7C  6ED9               	movwf	fsr2l,c
  2452  000C7E  50F4               	movf	prodh,w,c
  2453  000C80  2005               	addwfc	receive_data@receive_buffer+1,w,c
  2454  000C82  6EDA               	movwf	fsr2h,c
  2455  000C84  C007  FFDF         	movff	receive_data@data,indf2
  2456                           
  2457                           ;SlaveComm_PIC18.c: 217: receive_buffer->write_position++;
  2458  000C88  EE20 F028          	lfsr	2,40
  2459  000C8C  5004               	movf	receive_data@receive_buffer,w,c
  2460  000C8E  26D9               	addwf	fsr2l,f,c
  2461  000C90  5005               	movf	receive_data@receive_buffer+1,w,c
  2462  000C92  22DA               	addwfc	fsr2h,f,c
  2463  000C94  2ADF               	incf	indf2,f,c
  2464                           
  2465                           ;SlaveComm_PIC18.c: 218: if( receive_buffer->write_position >= 40 )
  2466  000C96  EE20 F028          	lfsr	2,40
  2467  000C9A  5004               	movf	receive_data@receive_buffer,w,c
  2468  000C9C  26D9               	addwf	fsr2l,f,c
  2469  000C9E  5005               	movf	receive_data@receive_buffer+1,w,c
  2470  000CA0  22DA               	addwfc	fsr2h,f,c
  2471  000CA2  0E27               	movlw	39
  2472  000CA4  64DF               	cpfsgt	indf2,c
  2473  000CA6  D008               	goto	l1913
  2474                           
  2475                           ;SlaveComm_PIC18.c: 219: {
  2476                           ;SlaveComm_PIC18.c: 220: receive_buffer->write_position = ( 40 - 1 );
  2477  000CA8  EE20 F028          	lfsr	2,40
  2478  000CAC  5004               	movf	receive_data@receive_buffer,w,c
  2479  000CAE  26D9               	addwf	fsr2l,f,c
  2480  000CB0  5005               	movf	receive_data@receive_buffer+1,w,c
  2481  000CB2  22DA               	addwfc	fsr2h,f,c
  2482  000CB4  0E27               	movlw	39
  2483  000CB6  6EDF               	movwf	indf2,c
  2484  000CB8                     l1913:
  2485                           
  2486                           ;SlaveComm_PIC18.c: 221: }
  2487                           ;SlaveComm_PIC18.c: 222: }
  2488                           ;SlaveComm_PIC18.c: 224: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  2489  000CB8  045F               	decf	receive_data@my_status,w,c
  2490  000CBA  A4D8               	btfss	status,2,c
  2491  000CBC  D006               	goto	l161
  2492  000CBE  0E2A               	movlw	42
  2493  000CC0  1807               	xorwf	receive_data@data,w,c
  2494  000CC2  A4D8               	btfss	status,2,c
  2495  000CC4  D002               	goto	l161
  2496                           
  2497                           ;SlaveComm_PIC18.c: 225: {
  2498                           ;SlaveComm_PIC18.c: 226: my_status = receive_end_command;
  2499  000CC6  0E02               	movlw	2
  2500  000CC8  6E5F               	movwf	receive_data@my_status,c
  2501  000CCA                     l161:
  2502                           
  2503                           ;SlaveComm_PIC18.c: 227: }
  2504                           ;SlaveComm_PIC18.c: 228: }
  2505                           ;SlaveComm_PIC18.c: 230: return my_status;
  2506  000CCA  505F               	movf	receive_data@my_status,w,c
  2507  000CCC  0012               	return	
  2508  000CCE                     __end_of_receive_data:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           postinc1	equ	0xFE6
  2516                           fsr1h	equ	0xFE2
  2517                           fsr1l	equ	0xFE1
  2518                           indf2	equ	0xFDF
  2519                           postinc2	equ	0xFDE
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _SPI_receive_data *****************
  2525 ;; Defined at:
  2526 ;;		line 540 in file "SlaveComm_PIC18.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  data            2    0[COMRAM] PTR unsigned char 
  2529 ;;		 -> receive_data@data(1), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  recvGood        1    2[COMRAM] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      unsigned char 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr2l, fsr2h, status,2
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2541 ;;      Params:         2       0       0       0       0       0       0
  2542 ;;      Locals:         1       0       0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0
  2544 ;;      Totals:         3       0       0       0       0       0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_receive_data
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text18
  2555  0012EC                     __ptext18:
  2556                           	opt stack 0
  2557  0012EC                     _SPI_receive_data:
  2558                           	opt stack 28
  2559                           
  2560                           ;SlaveComm_PIC18.c: 543: bool recvGood = 0;
  2561                           
  2562                           ;incstack = 0
  2563  0012EC  0E00               	movlw	0
  2564  0012EE  6E03               	movwf	SPI_receive_data@recvGood,c
  2565                           
  2566                           ;SlaveComm_PIC18.c: 545: if( SSP2STATbits.BF == 1 )
  2567  0012F0  A06D               	btfss	3949,0,c	;volatile
  2568  0012F2  D00C               	goto	l1735
  2569                           
  2570                           ;SlaveComm_PIC18.c: 546: {
  2571                           ;SlaveComm_PIC18.c: 547: *data = SSP2BUF;
  2572  0012F4  C001  FFD9         	movff	SPI_receive_data@data,fsr2l
  2573  0012F8  C002  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2574  0012FC  CF6F FFDF          	movff	3951,indf2	;volatile
  2575                           
  2576                           ;SlaveComm_PIC18.c: 548: recvGood = 1;
  2577  001300  0E01               	movlw	1
  2578  001302  6E03               	movwf	SPI_receive_data@recvGood,c
  2579                           
  2580                           ;SlaveComm_PIC18.c: 549: SSP2CON1bits.WCOL = 0;
  2581  001304  9E6C               	bcf	3948,7,c	;volatile
  2582                           
  2583                           ;SlaveComm_PIC18.c: 550: SPI_transmit_wait = 0;
  2584  001306  0E00               	movlw	0
  2585  001308  6E5B               	movwf	_SPI_transmit_wait,c
  2586                           
  2587                           ;SlaveComm_PIC18.c: 551: }
  2588  00130A  D002               	goto	l266
  2589  00130C                     l1735:
  2590                           
  2591                           ;SlaveComm_PIC18.c: 552: else
  2592                           ;SlaveComm_PIC18.c: 553: {
  2593                           ;SlaveComm_PIC18.c: 554: recvGood = 0;
  2594  00130C  0E00               	movlw	0
  2595  00130E  6E03               	movwf	SPI_receive_data@recvGood,c
  2596  001310                     l266:
  2597                           
  2598                           ;SlaveComm_PIC18.c: 555: }
  2599                           ;SlaveComm_PIC18.c: 557: return recvGood;
  2600  001310  5003               	movf	SPI_receive_data@recvGood,w,c
  2601  001312  0012               	return	
  2602  001314                     __end_of_SPI_receive_data:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           prodh	equ	0xFF4
  2606                           prodl	equ	0xFF3
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           postinc1	equ	0xFE6
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           indf2	equ	0xFDF
  2613                           postinc2	equ	0xFDE
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function _process_data *****************
  2619 ;; Defined at:
  2620 ;;		line 233 in file "SlaveComm_PIC18.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  receive_buff    2   25[COMRAM] PTR struct buffer
  2623 ;;		 -> communications@receive_buffer(42), 
  2624 ;;  send_buffer     2   27[COMRAM] PTR struct buffer
  2625 ;;		 -> communications@send_buffer(42), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  parameters     50   29[COMRAM] unsigned char [10][5]
  2628 ;;  end_of_trans    1   79[COMRAM] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2638 ;;      Params:         4       0       0       0       0       0       0
  2639 ;;      Locals:        51       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0
  2641 ;;      Totals:        55       0       0       0       0       0       0
  2642 ;;Total ram usage:       55 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    5
  2645 ;; This function calls:
  2646 ;;		_process_data_parameterize
  2647 ;;		_process_data_parameters
  2648 ;; This function is called by:
  2649 ;;		_communications
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text19
  2654  0012BE                     __ptext19:
  2655                           	opt stack 0
  2656  0012BE                     _process_data:
  2657                           	opt stack 24
  2658                           
  2659                           ;SlaveComm_PIC18.c: 235: bool end_of_transmission_received;
  2660                           ;SlaveComm_PIC18.c: 240: char parameters[5][10];
  2661                           ;SlaveComm_PIC18.c: 242: process_data_parameterize( parameters, receive_buffer );
  2662                           
  2663                           ;incstack = 0
  2664  0012BE  0E1E               	movlw	low process_data@parameters
  2665  0012C0  6E07               	movwf	process_data_parameterize@parameters,c
  2666  0012C2  0E00               	movlw	high process_data@parameters
  2667  0012C4  6E08               	movwf	process_data_parameterize@parameters+1,c
  2668  0012C6  C01A  F009         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  2669  0012CA  C01B  F00A         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  2670  0012CE  EC46  F004         	call	_process_data_parameterize	;wreg free
  2671                           
  2672                           ;SlaveComm_PIC18.c: 244: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  2673  0012D2  0E1E               	movlw	low process_data@parameters
  2674  0012D4  6E15               	movwf	process_data_parameters@parameters,c
  2675  0012D6  0E00               	movlw	high process_data@parameters
  2676  0012D8  6E16               	movwf	process_data_parameters@parameters+1,c
  2677  0012DA  C01C  F017         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  2678  0012DE  C01D  F018         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  2679  0012E2  EC2C  F003         	call	_process_data_parameters	;wreg free
  2680  0012E6  6E50               	movwf	process_data@end_of_transmission_received,c
  2681                           
  2682                           ;SlaveComm_PIC18.c: 246: return end_of_transmission_received;
  2683  0012E8  5050               	movf	process_data@end_of_transmission_received,w,c
  2684  0012EA  0012               	return	
  2685  0012EC                     __end_of_process_data:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postinc1	equ	0xFE6
  2693                           fsr1h	equ	0xFE2
  2694                           fsr1l	equ	0xFE1
  2695                           indf2	equ	0xFDF
  2696                           postinc2	equ	0xFDE
  2697                           fsr2h	equ	0xFDA
  2698                           fsr2l	equ	0xFD9
  2699                           status	equ	0xFD8
  2700                           
  2701 ;; *************** function _process_data_parameters *****************
  2702 ;; Defined at:
  2703 ;;		line 309 in file "SlaveComm_PIC18.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  2706 ;;		 -> process_data@parameters(50), 
  2707 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  2708 ;;		 -> communications@send_buffer(42), 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  end_of_trans    1   24[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      unsigned char 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         4       0       0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0
  2723 ;;      Totals:         5       0       0       0       0       0       0
  2724 ;;Total ram usage:        5 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    4
  2727 ;; This function calls:
  2728 ;;		_command_builder3
  2729 ;;		_send_end_of_transmission
  2730 ;;		_strmatch
  2731 ;; This function is called by:
  2732 ;;		_process_data
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text20
  2737  000658                     __ptext20:
  2738                           	opt stack 0
  2739  000658                     _process_data_parameters:
  2740                           	opt stack 24
  2741                           
  2742                           ;SlaveComm_PIC18.c: 311: bool end_of_transmission_received = 0;
  2743                           
  2744                           ;incstack = 0
  2745  000658  0E00               	movlw	0
  2746  00065A  6E19               	movwf	process_data_parameters@end_of_transmission_received,c
  2747                           
  2748                           ;SlaveComm_PIC18.c: 314: if( strmatch( parameters[0], "END" ) == 1 )
  2749  00065C  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2750  000660  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2751  000664  0E48               	movlw	low STR_1
  2752  000666  6E0E               	movwf	strmatch@b,c
  2753  000668  0E06               	movlw	high STR_1
  2754  00066A  6E0F               	movwf	strmatch@b+1,c
  2755  00066C  EC47  F009         	call	_strmatch	;wreg free
  2756  000670  06E8               	decf	wreg,f,c
  2757  000672  A4D8               	btfss	status,2,c
  2758  000674  D008               	goto	l1791
  2759                           
  2760                           ;SlaveComm_PIC18.c: 315: {
  2761                           ;SlaveComm_PIC18.c: 316: if( LATBbits.LATB4 == 1 )
  2762  000676  A88A               	btfss	3978,4,c	;volatile
  2763  000678  D002               	goto	l190
  2764                           
  2765                           ;SlaveComm_PIC18.c: 317: {
  2766                           ;SlaveComm_PIC18.c: 318: LATBbits.LATB4 = 0;
  2767  00067A  988A               	bcf	3978,4,c	;volatile
  2768                           
  2769                           ;SlaveComm_PIC18.c: 319: }
  2770  00067C  D001               	goto	l1789
  2771  00067E                     l190:
  2772                           
  2773                           ;SlaveComm_PIC18.c: 320: else
  2774                           ;SlaveComm_PIC18.c: 321: {
  2775                           ;SlaveComm_PIC18.c: 322: LATBbits.LATB4 = 1;
  2776  00067E  888A               	bsf	3978,4,c	;volatile
  2777  000680                     l1789:
  2778                           
  2779                           ;SlaveComm_PIC18.c: 323: }
  2780                           ;SlaveComm_PIC18.c: 325: end_of_transmission_received = 1;
  2781  000680  0E01               	movlw	1
  2782  000682  6E19               	movwf	process_data_parameters@end_of_transmission_received,c
  2783                           
  2784                           ;SlaveComm_PIC18.c: 326: }
  2785  000684  D101               	goto	l1833
  2786  000686                     l1791:
  2787                           
  2788                           ;SlaveComm_PIC18.c: 327: else if( strmatch( parameters[0], "Set" ) == 1 )
  2789  000686  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2790  00068A  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2791  00068E  0E50               	movlw	low STR_2
  2792  000690  6E0E               	movwf	strmatch@b,c
  2793  000692  0E06               	movlw	high STR_2
  2794  000694  6E0F               	movwf	strmatch@b+1,c
  2795  000696  EC47  F009         	call	_strmatch	;wreg free
  2796  00069A  06E8               	decf	wreg,f,c
  2797  00069C  A4D8               	btfss	status,2,c
  2798  00069E  D00D               	goto	l1795
  2799                           
  2800                           ;SlaveComm_PIC18.c: 328: {
  2801                           ;SlaveComm_PIC18.c: 329: if( strmatch( parameters[1], "Calibration" ) == 1 )
  2802  0006A0  0E0A               	movlw	10
  2803  0006A2  2415               	addwf	process_data_parameters@parameters,w,c
  2804  0006A4  6E0C               	movwf	strmatch@a,c
  2805  0006A6  0E00               	movlw	0
  2806  0006A8  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2807  0006AA  6E0D               	movwf	strmatch@a+1,c
  2808  0006AC  0E01               	movlw	low STR_3
  2809  0006AE  6E0E               	movwf	strmatch@b,c
  2810  0006B0  0E06               	movlw	high STR_3
  2811  0006B2  6E0F               	movwf	strmatch@b+1,c
  2812  0006B4  EC47  F009         	call	_strmatch	;wreg free
  2813                           
  2814                           ;SlaveComm_PIC18.c: 332: }
  2815                           ;SlaveComm_PIC18.c: 334: }
  2816                           
  2817                           ;SlaveComm_PIC18.c: 330: {
  2818  0006B8  D0E7               	goto	l1833
  2819  0006BA                     l1795:
  2820                           
  2821                           ;SlaveComm_PIC18.c: 335: else if( strmatch( parameters[0], "Read" ) == 1 )
  2822  0006BA  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2823  0006BE  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2824  0006C2  0E2D               	movlw	low STR_4
  2825  0006C4  6E0E               	movwf	strmatch@b,c
  2826  0006C6  0E06               	movlw	high STR_4
  2827  0006C8  6E0F               	movwf	strmatch@b+1,c
  2828  0006CA  EC47  F009         	call	_strmatch	;wreg free
  2829  0006CE  06E8               	decf	wreg,f,c
  2830  0006D0  B4D8               	btfsc	status,2,c
  2831  0006D2  D0DA               	goto	l1833
  2832                           
  2833                           ;SlaveComm_PIC18.c: 339: else if( strmatch( parameters[0], "Data" ) == 1 )
  2834                           
  2835                           ;SlaveComm_PIC18.c: 336: {
  2836                           ;SlaveComm_PIC18.c: 338: }
  2837  0006D4  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2838  0006D8  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2839  0006DC  0E28               	movlw	low STR_5
  2840  0006DE  6E0E               	movwf	strmatch@b,c
  2841  0006E0  0E06               	movlw	high STR_5
  2842  0006E2  6E0F               	movwf	strmatch@b+1,c
  2843  0006E4  EC47  F009         	call	_strmatch	;wreg free
  2844  0006E8  06E8               	decf	wreg,f,c
  2845  0006EA  A4D8               	btfss	status,2,c
  2846  0006EC  D053               	goto	l1811
  2847                           
  2848                           ;SlaveComm_PIC18.c: 340: {
  2849                           ;SlaveComm_PIC18.c: 341: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2850  0006EE  0E0A               	movlw	10
  2851  0006F0  2415               	addwf	process_data_parameters@parameters,w,c
  2852  0006F2  6E0C               	movwf	strmatch@a,c
  2853  0006F4  0E00               	movlw	0
  2854  0006F6  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2855  0006F8  6E0D               	movwf	strmatch@a+1,c
  2856  0006FA  0E23               	movlw	low STR_6
  2857  0006FC  6E0E               	movwf	strmatch@b,c
  2858  0006FE  0E06               	movlw	high STR_6
  2859  000700  6E0F               	movwf	strmatch@b+1,c
  2860  000702  EC47  F009         	call	_strmatch	;wreg free
  2861  000706  06E8               	decf	wreg,f,c
  2862  000708  A4D8               	btfss	status,2,c
  2863  00070A  D0BE               	goto	l1833
  2864                           
  2865                           ;SlaveComm_PIC18.c: 342: {
  2866                           ;SlaveComm_PIC18.c: 343: if( strmatch( parameters[2], "On" ) == 1 )
  2867  00070C  0E14               	movlw	20
  2868  00070E  2415               	addwf	process_data_parameters@parameters,w,c
  2869  000710  6E0C               	movwf	strmatch@a,c
  2870  000712  0E00               	movlw	0
  2871  000714  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2872  000716  6E0D               	movwf	strmatch@a+1,c
  2873  000718  0E54               	movlw	low STR_7
  2874  00071A  6E0E               	movwf	strmatch@b,c
  2875  00071C  0E06               	movlw	high STR_7
  2876  00071E  6E0F               	movwf	strmatch@b+1,c
  2877  000720  EC47  F009         	call	_strmatch	;wreg free
  2878  000724  06E8               	decf	wreg,f,c
  2879  000726  A4D8               	btfss	status,2,c
  2880  000728  D013               	goto	l1807
  2881                           
  2882                           ;SlaveComm_PIC18.c: 344: {
  2883                           ;SlaveComm_PIC18.c: 345: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  2884  00072A  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2885  00072E  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2886  000732  0E50               	movlw	low STR_2
  2887  000734  6E0F               	movwf	command_builder3@data1,c
  2888  000736  0E06               	movlw	high STR_2
  2889  000738  6E10               	movwf	command_builder3@data1+1,c
  2890  00073A  0E23               	movlw	low STR_6
  2891  00073C  6E11               	movwf	command_builder3@data2,c
  2892  00073E  0E06               	movlw	high STR_6
  2893  000740  6E12               	movwf	command_builder3@data2+1,c
  2894  000742  0E4C               	movlw	low STR_10
  2895  000744  6E13               	movwf	command_builder3@data3,c
  2896  000746  0E06               	movlw	high STR_10
  2897  000748  6E14               	movwf	command_builder3@data3+1,c
  2898  00074A  ECB9  F006         	call	_command_builder3	;wreg free
  2899                           
  2900                           ;SlaveComm_PIC18.c: 346: }
  2901  00074E  D09C               	goto	l1833
  2902  000750                     l1807:
  2903                           
  2904                           ;SlaveComm_PIC18.c: 347: else if( strmatch( parameters[2], "Off" ) == 1 )
  2905  000750  0E14               	movlw	20
  2906  000752  2415               	addwf	process_data_parameters@parameters,w,c
  2907  000754  6E0C               	movwf	strmatch@a,c
  2908  000756  0E00               	movlw	0
  2909  000758  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2910  00075A  6E0D               	movwf	strmatch@a+1,c
  2911  00075C  0E4C               	movlw	low STR_10
  2912  00075E  6E0E               	movwf	strmatch@b,c
  2913  000760  0E06               	movlw	high STR_10
  2914  000762  6E0F               	movwf	strmatch@b+1,c
  2915  000764  EC47  F009         	call	_strmatch	;wreg free
  2916  000768  06E8               	decf	wreg,f,c
  2917  00076A  A4D8               	btfss	status,2,c
  2918  00076C  D08D               	goto	l1833
  2919                           
  2920                           ;SlaveComm_PIC18.c: 348: {
  2921                           ;SlaveComm_PIC18.c: 349: command_builder3( send_buffer, "Set", "LEDB", "On" );
  2922  00076E  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2923  000772  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2924  000776  0E50               	movlw	low STR_2
  2925  000778  6E0F               	movwf	command_builder3@data1,c
  2926  00077A  0E06               	movlw	high STR_2
  2927  00077C  6E10               	movwf	command_builder3@data1+1,c
  2928  00077E  0E23               	movlw	low STR_6
  2929  000780  6E11               	movwf	command_builder3@data2,c
  2930  000782  0E06               	movlw	high STR_6
  2931  000784  6E12               	movwf	command_builder3@data2+1,c
  2932  000786  0E54               	movlw	low STR_7
  2933  000788  6E13               	movwf	command_builder3@data3,c
  2934  00078A  0E06               	movlw	high STR_7
  2935  00078C  6E14               	movwf	command_builder3@data3+1,c
  2936  00078E  ECB9  F006         	call	_command_builder3	;wreg free
  2937                           
  2938                           ;SlaveComm_PIC18.c: 350: }
  2939                           ;SlaveComm_PIC18.c: 351: }
  2940                           ;SlaveComm_PIC18.c: 352: }
  2941  000792  D07A               	goto	l1833
  2942  000794                     l1811:
  2943                           
  2944                           ;SlaveComm_PIC18.c: 353: else if( strmatch( parameters[0], "Conf" ) == 1 )
  2945  000794  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2946  000798  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2947  00079C  0E32               	movlw	low STR_15
  2948  00079E  6E0E               	movwf	strmatch@b,c
  2949  0007A0  0E06               	movlw	high STR_15
  2950  0007A2  6E0F               	movwf	strmatch@b+1,c
  2951  0007A4  EC47  F009         	call	_strmatch	;wreg free
  2952  0007A8  06E8               	decf	wreg,f,c
  2953  0007AA  A4D8               	btfss	status,2,c
  2954  0007AC  D06D               	goto	l1833
  2955                           
  2956                           ;SlaveComm_PIC18.c: 354: {
  2957                           ;SlaveComm_PIC18.c: 355: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2958  0007AE  0E0A               	movlw	10
  2959  0007B0  2415               	addwf	process_data_parameters@parameters,w,c
  2960  0007B2  6E0C               	movwf	strmatch@a,c
  2961  0007B4  0E00               	movlw	0
  2962  0007B6  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2963  0007B8  6E0D               	movwf	strmatch@a+1,c
  2964  0007BA  0E23               	movlw	low STR_6
  2965  0007BC  6E0E               	movwf	strmatch@b,c
  2966  0007BE  0E06               	movlw	high STR_6
  2967  0007C0  6E0F               	movwf	strmatch@b+1,c
  2968  0007C2  EC47  F009         	call	_strmatch	;wreg free
  2969  0007C6  06E8               	decf	wreg,f,c
  2970  0007C8  A4D8               	btfss	status,2,c
  2971  0007CA  D007               	goto	l1817
  2972                           
  2973                           ;SlaveComm_PIC18.c: 356: {
  2974                           ;SlaveComm_PIC18.c: 357: send_end_of_transmission( send_buffer );
  2975  0007CC  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2976  0007D0  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2977  0007D4  EC28  F00A         	call	_send_end_of_transmission	;wreg free
  2978                           
  2979                           ;SlaveComm_PIC18.c: 358: }
  2980  0007D8  D057               	goto	l1833
  2981  0007DA                     l1817:
  2982                           
  2983                           ;SlaveComm_PIC18.c: 359: else if( strmatch( parameters[1], "Watts" ) == 1 )
  2984  0007DA  0E0A               	movlw	10
  2985  0007DC  2415               	addwf	process_data_parameters@parameters,w,c
  2986  0007DE  6E0C               	movwf	strmatch@a,c
  2987  0007E0  0E00               	movlw	0
  2988  0007E2  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2989  0007E4  6E0D               	movwf	strmatch@a+1,c
  2990  0007E6  0E1D               	movlw	low STR_17
  2991  0007E8  6E0E               	movwf	strmatch@b,c
  2992  0007EA  0E06               	movlw	high STR_17
  2993  0007EC  6E0F               	movwf	strmatch@b+1,c
  2994  0007EE  EC47  F009         	call	_strmatch	;wreg free
  2995  0007F2  06E8               	decf	wreg,f,c
  2996  0007F4  A4D8               	btfss	status,2,c
  2997  0007F6  D007               	goto	l1821
  2998                           
  2999                           ;SlaveComm_PIC18.c: 360: {
  3000                           ;SlaveComm_PIC18.c: 361: send_end_of_transmission( send_buffer );
  3001  0007F8  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3002  0007FC  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3003  000800  EC28  F00A         	call	_send_end_of_transmission	;wreg free
  3004                           
  3005                           ;SlaveComm_PIC18.c: 362: }
  3006  000804  D041               	goto	l1833
  3007  000806                     l1821:
  3008                           
  3009                           ;SlaveComm_PIC18.c: 363: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3010  000806  0E0A               	movlw	10
  3011  000808  2415               	addwf	process_data_parameters@parameters,w,c
  3012  00080A  6E0C               	movwf	strmatch@a,c
  3013  00080C  0E00               	movlw	0
  3014  00080E  2016               	addwfc	process_data_parameters@parameters+1,w,c
  3015  000810  6E0D               	movwf	strmatch@a+1,c
  3016  000812  0E17               	movlw	low STR_18
  3017  000814  6E0E               	movwf	strmatch@b,c
  3018  000816  0E06               	movlw	high STR_18
  3019  000818  6E0F               	movwf	strmatch@b+1,c
  3020  00081A  EC47  F009         	call	_strmatch	;wreg free
  3021  00081E  06E8               	decf	wreg,f,c
  3022  000820  A4D8               	btfss	status,2,c
  3023  000822  D007               	goto	l1825
  3024                           
  3025                           ;SlaveComm_PIC18.c: 364: {
  3026                           ;SlaveComm_PIC18.c: 365: send_end_of_transmission( send_buffer );
  3027  000824  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3028  000828  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3029  00082C  EC28  F00A         	call	_send_end_of_transmission	;wreg free
  3030                           
  3031                           ;SlaveComm_PIC18.c: 366: }
  3032  000830  D02B               	goto	l1833
  3033  000832                     l1825:
  3034                           
  3035                           ;SlaveComm_PIC18.c: 367: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3036  000832  0E0A               	movlw	10
  3037  000834  2415               	addwf	process_data_parameters@parameters,w,c
  3038  000836  6E0C               	movwf	strmatch@a,c
  3039  000838  0E00               	movlw	0
  3040  00083A  2016               	addwfc	process_data_parameters@parameters+1,w,c
  3041  00083C  6E0D               	movwf	strmatch@a+1,c
  3042  00083E  0E37               	movlw	low STR_19
  3043  000840  6E0E               	movwf	strmatch@b,c
  3044  000842  0E06               	movlw	high STR_19
  3045  000844  6E0F               	movwf	strmatch@b+1,c
  3046  000846  EC47  F009         	call	_strmatch	;wreg free
  3047  00084A  06E8               	decf	wreg,f,c
  3048  00084C  A4D8               	btfss	status,2,c
  3049  00084E  D007               	goto	l1829
  3050                           
  3051                           ;SlaveComm_PIC18.c: 368: {
  3052                           ;SlaveComm_PIC18.c: 369: send_end_of_transmission( send_buffer );
  3053  000850  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3054  000854  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3055  000858  EC28  F00A         	call	_send_end_of_transmission	;wreg free
  3056                           
  3057                           ;SlaveComm_PIC18.c: 370: }
  3058  00085C  D015               	goto	l1833
  3059  00085E                     l1829:
  3060                           
  3061                           ;SlaveComm_PIC18.c: 371: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3062  00085E  0E0A               	movlw	10
  3063  000860  2415               	addwf	process_data_parameters@parameters,w,c
  3064  000862  6E0C               	movwf	strmatch@a,c
  3065  000864  0E00               	movlw	0
  3066  000866  2016               	addwfc	process_data_parameters@parameters+1,w,c
  3067  000868  6E0D               	movwf	strmatch@a+1,c
  3068  00086A  0E0D               	movlw	low STR_20
  3069  00086C  6E0E               	movwf	strmatch@b,c
  3070  00086E  0E06               	movlw	high STR_20
  3071  000870  6E0F               	movwf	strmatch@b+1,c
  3072  000872  EC47  F009         	call	_strmatch	;wreg free
  3073  000876  06E8               	decf	wreg,f,c
  3074  000878  A4D8               	btfss	status,2,c
  3075  00087A  D006               	goto	l1833
  3076                           
  3077                           ;SlaveComm_PIC18.c: 372: {
  3078                           ;SlaveComm_PIC18.c: 373: send_end_of_transmission( send_buffer );
  3079  00087C  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3080  000880  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3081  000884  EC28  F00A         	call	_send_end_of_transmission	;wreg free
  3082  000888                     l1833:
  3083                           
  3084                           ;SlaveComm_PIC18.c: 374: }
  3085                           ;SlaveComm_PIC18.c: 375: }
  3086                           ;SlaveComm_PIC18.c: 381: return end_of_transmission_received;
  3087  000888  5019               	movf	process_data_parameters@end_of_transmission_received,w,c
  3088  00088A  0012               	return	
  3089  00088C                     __end_of_process_data_parameters:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           prodh	equ	0xFF4
  3093                           prodl	equ	0xFF3
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           postinc1	equ	0xFE6
  3097                           fsr1h	equ	0xFE2
  3098                           fsr1l	equ	0xFE1
  3099                           indf2	equ	0xFDF
  3100                           postinc2	equ	0xFDE
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _strmatch *****************
  3106 ;; Defined at:
  3107 ;;		line 491 in file "SlaveComm_PIC18.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  a               2   11[COMRAM] PTR unsigned char 
  3110 ;;		 -> process_data@parameters(50), 
  3111 ;;  b               2   13[COMRAM] PTR unsigned char 
  3112 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  3113 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  3114 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  3115 ;;		 -> STR_2(4), STR_1(4), 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  result          2   15[COMRAM] int 
  3118 ;;  match           1   17[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      unsigned char 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3128 ;;      Params:         4       0       0       0       0       0       0
  3129 ;;      Locals:         3       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0
  3131 ;;      Totals:         7       0       0       0       0       0       0
  3132 ;;Total ram usage:        7 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    1
  3135 ;; This function calls:
  3136 ;;		_strcmp2
  3137 ;; This function is called by:
  3138 ;;		_process_data_parameters
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text21
  3143  00128E                     __ptext21:
  3144                           	opt stack 0
  3145  00128E                     _strmatch:
  3146                           	opt stack 26
  3147                           
  3148                           ;SlaveComm_PIC18.c: 493: int result;
  3149                           ;SlaveComm_PIC18.c: 494: bool match;
  3150                           ;SlaveComm_PIC18.c: 496: result = strcmp2( a, b );
  3151                           
  3152                           ;incstack = 0
  3153  00128E  C00C  F001         	movff	strmatch@a,strcmp2@a
  3154  001292  C00D  F002         	movff	strmatch@a+1,strcmp2@a+1
  3155  001296  C00E  F003         	movff	strmatch@b,strcmp2@b
  3156  00129A  C00F  F004         	movff	strmatch@b+1,strcmp2@b+1
  3157  00129E  EC06  F005         	call	_strcmp2	;wreg free
  3158  0012A2  C001  F010         	movff	?_strcmp2,strmatch@result
  3159  0012A6  C002  F011         	movff	?_strcmp2+1,strmatch@result+1
  3160                           
  3161                           ;SlaveComm_PIC18.c: 498: match = ( result == 0 ) ? 1 : 0;
  3162  0012AA  5010               	movf	strmatch@result,w,c
  3163  0012AC  1011               	iorwf	strmatch@result+1,w,c
  3164  0012AE  A4D8               	btfss	status,2,c
  3165  0012B0  D002               	goto	u860
  3166  0012B2  0E01               	movlw	1
  3167  0012B4  D001               	goto	u870
  3168  0012B6                     u860:
  3169  0012B6  0E00               	movlw	0
  3170  0012B8                     u870:
  3171  0012B8  6E12               	movwf	strmatch@match,c
  3172                           
  3173                           ;SlaveComm_PIC18.c: 500: return match;
  3174  0012BA  5012               	movf	strmatch@match,w,c
  3175  0012BC  0012               	return	
  3176  0012BE                     __end_of_strmatch:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           postinc0	equ	0xFEE
  3182                           wreg	equ	0xFE8
  3183                           postinc1	equ	0xFE6
  3184                           fsr1h	equ	0xFE2
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           postinc2	equ	0xFDE
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _strcmp2 *****************
  3193 ;; Defined at:
  3194 ;;		line 503 in file "SlaveComm_PIC18.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  a               2    0[COMRAM] PTR unsigned char 
  3197 ;;		 -> process_data@parameters(50), 
  3198 ;;  b               2    2[COMRAM] PTR unsigned char 
  3199 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  3200 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  3201 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  3202 ;;		 -> STR_2(4), STR_1(4), 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  inx             2    9[COMRAM] int 
  3205 ;;  match           2    7[COMRAM] int 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[COMRAM] int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3215 ;;      Params:         4       0       0       0       0       0       0
  3216 ;;      Locals:         4       0       0       0       0       0       0
  3217 ;;      Temps:          3       0       0       0       0       0       0
  3218 ;;      Totals:        11       0       0       0       0       0       0
  3219 ;;Total ram usage:       11 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_strmatch
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text22
  3229  000A0C                     __ptext22:
  3230                           	opt stack 0
  3231  000A0C                     _strcmp2:
  3232                           	opt stack 26
  3233                           
  3234                           ;SlaveComm_PIC18.c: 505: int inx = 0;
  3235                           
  3236                           ;incstack = 0
  3237  000A0C  0E00               	movlw	0
  3238  000A0E  6E0B               	movwf	strcmp2@inx+1,c
  3239  000A10  0E00               	movlw	0
  3240  000A12  6E0A               	movwf	strcmp2@inx,c
  3241                           
  3242                           ;SlaveComm_PIC18.c: 506: int match = 0;
  3243  000A14  0E00               	movlw	0
  3244  000A16  6E09               	movwf	strcmp2@match+1,c
  3245  000A18  0E00               	movlw	0
  3246  000A1A  6E08               	movwf	strcmp2@match,c
  3247                           
  3248                           ;SlaveComm_PIC18.c: 508: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  3249  000A1C  D035               	goto	l1567
  3250  000A1E                     l1555:
  3251                           
  3252                           ;SlaveComm_PIC18.c: 509: {
  3253                           ;SlaveComm_PIC18.c: 510: if( a[inx] > b[inx] )
  3254  000A1E  500A               	movf	strcmp2@inx,w,c
  3255  000A20  2401               	addwf	strcmp2@a,w,c
  3256  000A22  6ED9               	movwf	fsr2l,c
  3257  000A24  500B               	movf	strcmp2@inx+1,w,c
  3258  000A26  2002               	addwfc	strcmp2@a+1,w,c
  3259  000A28  6EDA               	movwf	fsr2h,c
  3260  000A2A  500A               	movf	strcmp2@inx,w,c
  3261  000A2C  2403               	addwf	strcmp2@b,w,c
  3262  000A2E  6E06               	movwf	(??_strcmp2+1)& (0+255),c
  3263  000A30  500B               	movf	strcmp2@inx+1,w,c
  3264  000A32  2004               	addwfc	strcmp2@b+1,w,c
  3265  000A34  6E07               	movwf	(??_strcmp2+2)& (0+255),c
  3266  000A36  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  3267  000A3A  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  3268  000A3E                     	if	0	;tblptru may be non-zero
  3269  000A3E                     	endif
  3270  000A3E                     	if	0	;tblptru may be non-zero
  3271  000A3E                     	endif
  3272  000A3E  50DE               	movf	postinc2,w,c
  3273  000A40  0009               	tblrd		*+
  3274  000A42  5CF5               	subwf	tablat,w,c
  3275  000A44  B0D8               	btfsc	status,0,c
  3276  000A46  D005               	goto	l1559
  3277                           
  3278                           ;SlaveComm_PIC18.c: 511: {
  3279                           ;SlaveComm_PIC18.c: 512: match = 1;
  3280  000A48  0E00               	movlw	0
  3281  000A4A  6E09               	movwf	strcmp2@match+1,c
  3282  000A4C  0E01               	movlw	1
  3283  000A4E  6E08               	movwf	strcmp2@match,c
  3284                           
  3285                           ;SlaveComm_PIC18.c: 513: }
  3286  000A50  D019               	goto	l1565
  3287  000A52                     l1559:
  3288                           
  3289                           ;SlaveComm_PIC18.c: 514: else if( a[inx] < b[inx] )
  3290  000A52  500A               	movf	strcmp2@inx,w,c
  3291  000A54  2401               	addwf	strcmp2@a,w,c
  3292  000A56  6ED9               	movwf	fsr2l,c
  3293  000A58  500B               	movf	strcmp2@inx+1,w,c
  3294  000A5A  2002               	addwfc	strcmp2@a+1,w,c
  3295  000A5C  6EDA               	movwf	fsr2h,c
  3296  000A5E  50DF               	movf	indf2,w,c
  3297  000A60  6E05               	movwf	??_strcmp2& (0+255),c
  3298  000A62  500A               	movf	strcmp2@inx,w,c
  3299  000A64  2403               	addwf	strcmp2@b,w,c
  3300  000A66  6E06               	movwf	(??_strcmp2+1)& (0+255),c
  3301  000A68  500B               	movf	strcmp2@inx+1,w,c
  3302  000A6A  2004               	addwfc	strcmp2@b+1,w,c
  3303  000A6C  6E07               	movwf	(??_strcmp2+2)& (0+255),c
  3304  000A6E  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  3305  000A72  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  3306  000A76                     	if	0	;tblptru may be non-zero
  3307  000A76                     	endif
  3308  000A76                     	if	0	;tblptru may be non-zero
  3309  000A76                     	endif
  3310  000A76  0008               	tblrd		*
  3311  000A78  50F5               	movf	tablat,w,c
  3312  000A7A  5C05               	subwf	??_strcmp2,w,c
  3313  000A7C  B0D8               	btfsc	status,0,c
  3314  000A7E  D002               	goto	l1565
  3315                           
  3316                           ;SlaveComm_PIC18.c: 515: {
  3317                           ;SlaveComm_PIC18.c: 516: match = -1;
  3318  000A80  6808               	setf	strcmp2@match,c
  3319  000A82  6809               	setf	strcmp2@match+1,c
  3320  000A84                     l1565:
  3321                           
  3322                           ;SlaveComm_PIC18.c: 521: }
  3323                           ;SlaveComm_PIC18.c: 523: inx++;
  3324  000A84  4A0A               	infsnz	strcmp2@inx,f,c
  3325  000A86  2A0B               	incf	strcmp2@inx+1,f,c
  3326  000A88                     l1567:
  3327  000A88  500A               	movf	strcmp2@inx,w,c
  3328  000A8A  2401               	addwf	strcmp2@a,w,c
  3329  000A8C  6ED9               	movwf	fsr2l,c
  3330  000A8E  500B               	movf	strcmp2@inx+1,w,c
  3331  000A90  2002               	addwfc	strcmp2@a+1,w,c
  3332  000A92  6EDA               	movwf	fsr2h,c
  3333  000A94  50DF               	movf	indf2,w,c
  3334  000A96  B4D8               	btfsc	status,2,c
  3335  000A98  D013               	goto	l1573
  3336  000A9A  500A               	movf	strcmp2@inx,w,c
  3337  000A9C  2403               	addwf	strcmp2@b,w,c
  3338  000A9E  6E05               	movwf	??_strcmp2& (0+255),c
  3339  000AA0  500B               	movf	strcmp2@inx+1,w,c
  3340  000AA2  2004               	addwfc	strcmp2@b+1,w,c
  3341  000AA4  6E06               	movwf	(??_strcmp2+1)& (0+255),c
  3342  000AA6  C005  FFF6         	movff	??_strcmp2,tblptrl
  3343  000AAA  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3344  000AAE                     	if	0	;tblptru may be non-zero
  3345  000AAE                     	endif
  3346  000AAE                     	if	0	;tblptru may be non-zero
  3347  000AAE                     	endif
  3348  000AAE  0008               	tblrd		*
  3349  000AB0  50F5               	movf	tablat,w,c
  3350  000AB2  0900               	iorlw	0
  3351  000AB4  B4D8               	btfsc	status,2,c
  3352  000AB6  D004               	goto	l1573
  3353  000AB8  5008               	movf	strcmp2@match,w,c
  3354  000ABA  1009               	iorwf	strcmp2@match+1,w,c
  3355  000ABC  B4D8               	btfsc	status,2,c
  3356  000ABE  D7AF               	goto	l1555
  3357  000AC0                     l1573:
  3358                           
  3359                           ;SlaveComm_PIC18.c: 524: }
  3360                           ;SlaveComm_PIC18.c: 527: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  3361  000AC0  500A               	movf	strcmp2@inx,w,c
  3362  000AC2  2401               	addwf	strcmp2@a,w,c
  3363  000AC4  6ED9               	movwf	fsr2l,c
  3364  000AC6  500B               	movf	strcmp2@inx+1,w,c
  3365  000AC8  2002               	addwfc	strcmp2@a+1,w,c
  3366  000ACA  6EDA               	movwf	fsr2h,c
  3367  000ACC  50DF               	movf	indf2,w,c
  3368  000ACE  A4D8               	btfss	status,2,c
  3369  000AD0  D012               	goto	l1579
  3370  000AD2  500A               	movf	strcmp2@inx,w,c
  3371  000AD4  2403               	addwf	strcmp2@b,w,c
  3372  000AD6  6E05               	movwf	??_strcmp2& (0+255),c
  3373  000AD8  500B               	movf	strcmp2@inx+1,w,c
  3374  000ADA  2004               	addwfc	strcmp2@b+1,w,c
  3375  000ADC  6E06               	movwf	(??_strcmp2+1)& (0+255),c
  3376  000ADE  C005  FFF6         	movff	??_strcmp2,tblptrl
  3377  000AE2  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3378  000AE6                     	if	0	;tblptru may be non-zero
  3379  000AE6                     	endif
  3380  000AE6                     	if	0	;tblptru may be non-zero
  3381  000AE6                     	endif
  3382  000AE6  0008               	tblrd		*
  3383  000AE8  50F5               	movf	tablat,w,c
  3384  000AEA  0900               	iorlw	0
  3385  000AEC  B4D8               	btfsc	status,2,c
  3386  000AEE  D003               	goto	l1579
  3387                           
  3388                           ;SlaveComm_PIC18.c: 528: {
  3389                           ;SlaveComm_PIC18.c: 529: match = -1;
  3390  000AF0  6808               	setf	strcmp2@match,c
  3391  000AF2  6809               	setf	strcmp2@match+1,c
  3392                           
  3393                           ;SlaveComm_PIC18.c: 530: }
  3394  000AF4  D01C               	goto	l1585
  3395  000AF6                     l1579:
  3396                           
  3397                           ;SlaveComm_PIC18.c: 531: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  3398  000AF6  500A               	movf	strcmp2@inx,w,c
  3399  000AF8  2401               	addwf	strcmp2@a,w,c
  3400  000AFA  6ED9               	movwf	fsr2l,c
  3401  000AFC  500B               	movf	strcmp2@inx+1,w,c
  3402  000AFE  2002               	addwfc	strcmp2@a+1,w,c
  3403  000B00  6EDA               	movwf	fsr2h,c
  3404  000B02  50DF               	movf	indf2,w,c
  3405  000B04  B4D8               	btfsc	status,2,c
  3406  000B06  D013               	goto	l1585
  3407  000B08  500A               	movf	strcmp2@inx,w,c
  3408  000B0A  2403               	addwf	strcmp2@b,w,c
  3409  000B0C  6E05               	movwf	??_strcmp2& (0+255),c
  3410  000B0E  500B               	movf	strcmp2@inx+1,w,c
  3411  000B10  2004               	addwfc	strcmp2@b+1,w,c
  3412  000B12  6E06               	movwf	(??_strcmp2+1)& (0+255),c
  3413  000B14  C005  FFF6         	movff	??_strcmp2,tblptrl
  3414  000B18  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3415  000B1C                     	if	0	;tblptru may be non-zero
  3416  000B1C                     	endif
  3417  000B1C                     	if	0	;tblptru may be non-zero
  3418  000B1C                     	endif
  3419  000B1C  0008               	tblrd		*
  3420  000B1E  50F5               	movf	tablat,w,c
  3421  000B20  0900               	iorlw	0
  3422  000B22  A4D8               	btfss	status,2,c
  3423  000B24  D004               	goto	l1585
  3424                           
  3425                           ;SlaveComm_PIC18.c: 532: {
  3426                           ;SlaveComm_PIC18.c: 533: match = 1;
  3427  000B26  0E00               	movlw	0
  3428  000B28  6E09               	movwf	strcmp2@match+1,c
  3429  000B2A  0E01               	movlw	1
  3430  000B2C  6E08               	movwf	strcmp2@match,c
  3431  000B2E                     l1585:
  3432                           
  3433                           ;SlaveComm_PIC18.c: 534: }
  3434                           ;SlaveComm_PIC18.c: 536: return match;
  3435  000B2E  C008  F001         	movff	strcmp2@match,?_strcmp2
  3436  000B32  C009  F002         	movff	strcmp2@match+1,?_strcmp2+1
  3437  000B36  0012               	return	
  3438  000B38                     __end_of_strcmp2:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           prodh	equ	0xFF4
  3445                           prodl	equ	0xFF3
  3446                           postinc0	equ	0xFEE
  3447                           wreg	equ	0xFE8
  3448                           postinc1	equ	0xFE6
  3449                           fsr1h	equ	0xFE2
  3450                           fsr1l	equ	0xFE1
  3451                           indf2	equ	0xFDF
  3452                           postinc2	equ	0xFDE
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _send_end_of_transmission *****************
  3458 ;; Defined at:
  3459 ;;		line 582 in file "SlaveComm_PIC18.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  3462 ;;		 -> communications@send_buffer(42), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;		None               void
  3467 ;; Registers used:
  3468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         2       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0
  3477 ;;      Totals:         2       0       0       0       0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    3
  3481 ;; This function calls:
  3482 ;;		_command_builder1
  3483 ;; This function is called by:
  3484 ;;		_process_data_parameters
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text23
  3489  001450                     __ptext23:
  3490                           	opt stack 0
  3491  001450                     _send_end_of_transmission:
  3492                           	opt stack 24
  3493                           
  3494                           ;SlaveComm_PIC18.c: 584: command_builder1( send_buffer, "END" );
  3495                           
  3496                           ;incstack = 0
  3497  001450  C011  F00D         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3498  001454  C012  F00E         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3499  001458  0E48               	movlw	low STR_1
  3500  00145A  6E0F               	movwf	command_builder1@data1,c
  3501  00145C  0E06               	movlw	high STR_1
  3502  00145E  6E10               	movwf	command_builder1@data1+1,c
  3503  001460  EC42  F008         	call	_command_builder1	;wreg free
  3504  001464  0012               	return	
  3505  001466                     __end_of_send_end_of_transmission:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postinc1	equ	0xFE6
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           postinc2	equ	0xFDE
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _command_builder1 *****************
  3525 ;; Defined at:
  3526 ;;		line 384 in file "SlaveComm_PIC18.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3529 ;;		 -> communications@send_buffer(42), 
  3530 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3531 ;;		 -> STR_21(4), 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3543 ;;      Params:         4       0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0
  3546 ;;      Totals:         4       0       0       0       0       0       0
  3547 ;;Total ram usage:        4 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    2
  3550 ;; This function calls:
  3551 ;;		_command_builder_add_char
  3552 ;;		_command_builder_add_string
  3553 ;; This function is called by:
  3554 ;;		_send_end_of_transmission
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text24
  3559  001084                     __ptext24:
  3560                           	opt stack 0
  3561  001084                     _command_builder1:
  3562                           	opt stack 24
  3563                           
  3564                           ;SlaveComm_PIC18.c: 386: command_builder_add_char( send_buffer, '#' );
  3565                           
  3566                           ;incstack = 0
  3567  001084  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3568  001088  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3569  00108C  0E23               	movlw	35
  3570  00108E  6E03               	movwf	command_builder_add_char@data,c
  3571  001090  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3572                           
  3573                           ;SlaveComm_PIC18.c: 387: command_builder_add_char( send_buffer, '#' );
  3574  001094  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3575  001098  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3576  00109C  0E23               	movlw	35
  3577  00109E  6E03               	movwf	command_builder_add_char@data,c
  3578  0010A0  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3579                           
  3580                           ;SlaveComm_PIC18.c: 388: command_builder_add_char( send_buffer, '!' );
  3581  0010A4  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3582  0010A8  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3583  0010AC  0E21               	movlw	33
  3584  0010AE  6E03               	movwf	command_builder_add_char@data,c
  3585  0010B0  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3586                           
  3587                           ;SlaveComm_PIC18.c: 389: command_builder_add_string( send_buffer, data1 );
  3588  0010B4  C00D  F005         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  3589  0010B8  C00E  F006         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  3590  0010BC  C00F  F007         	movff	command_builder1@data1,command_builder_add_string@data_string
  3591  0010C0  C010  F008         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  3592  0010C4  EC9B  F007         	call	_command_builder_add_string	;wreg free
  3593                           
  3594                           ;SlaveComm_PIC18.c: 390: command_builder_add_char( send_buffer, '*' );
  3595  0010C8  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3596  0010CC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3597  0010D0  0E2A               	movlw	42
  3598  0010D2  6E03               	movwf	command_builder_add_char@data,c
  3599  0010D4  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3600  0010D8  0012               	return	
  3601  0010DA                     __end_of_command_builder1:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           postinc0	equ	0xFEE
  3610                           wreg	equ	0xFE8
  3611                           postinc1	equ	0xFE6
  3612                           fsr1h	equ	0xFE2
  3613                           fsr1l	equ	0xFE1
  3614                           indf2	equ	0xFDF
  3615                           postinc2	equ	0xFDE
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _command_builder3 *****************
  3621 ;; Defined at:
  3622 ;;		line 408 in file "SlaveComm_PIC18.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3625 ;;		 -> communications@send_buffer(42), 
  3626 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3627 ;;		 -> STR_34(4), STR_29(4), STR_26(4), STR_24(4), 
  3628 ;;		 -> STR_12(4), STR_8(4), 
  3629 ;;  data2           2   16[COMRAM] PTR unsigned char 
  3630 ;;		 -> STR_35(10), STR_30(5), STR_27(6), STR_25(6), 
  3631 ;;		 -> STR_13(5), STR_9(5), 
  3632 ;;  data3           2   18[COMRAM] PTR unsigned char 
  3633 ;;		 -> STR_36(4), STR_31(4), STR_28(4), com_command_setPower@temp(7), 
  3634 ;;		 -> STR_14(3), STR_10(4), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;		None               void
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3646 ;;      Params:         8       0       0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0
  3649 ;;      Totals:         8       0       0       0       0       0       0
  3650 ;;Total ram usage:        8 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    2
  3653 ;; This function calls:
  3654 ;;		_command_builder_add_char
  3655 ;;		_command_builder_add_string
  3656 ;; This function is called by:
  3657 ;;		_process_data_parameters
  3658 ;;		_com_command_setPower
  3659 ;;		_com_command_setVolts
  3660 ;;		_com_command_setAmps
  3661 ;;		_com_command_setVersion
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text25
  3666  000D72                     __ptext25:
  3667                           	opt stack 0
  3668  000D72                     _command_builder3:
  3669                           	opt stack 25
  3670                           
  3671                           ;SlaveComm_PIC18.c: 410: command_builder_add_char( send_buffer, '#' );
  3672                           
  3673                           ;incstack = 0
  3674  000D72  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3675  000D76  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3676  000D7A  0E23               	movlw	35
  3677  000D7C  6E03               	movwf	command_builder_add_char@data,c
  3678  000D7E  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3679                           
  3680                           ;SlaveComm_PIC18.c: 411: command_builder_add_char( send_buffer, '#' );
  3681  000D82  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3682  000D86  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3683  000D8A  0E23               	movlw	35
  3684  000D8C  6E03               	movwf	command_builder_add_char@data,c
  3685  000D8E  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3686                           
  3687                           ;SlaveComm_PIC18.c: 412: command_builder_add_char( send_buffer, '!' );
  3688  000D92  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3689  000D96  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3690  000D9A  0E21               	movlw	33
  3691  000D9C  6E03               	movwf	command_builder_add_char@data,c
  3692  000D9E  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3693                           
  3694                           ;SlaveComm_PIC18.c: 413: command_builder_add_string( send_buffer, data1 );
  3695  000DA2  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3696  000DA6  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3697  000DAA  C00F  F007         	movff	command_builder3@data1,command_builder_add_string@data_string
  3698  000DAE  C010  F008         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  3699  000DB2  EC9B  F007         	call	_command_builder_add_string	;wreg free
  3700                           
  3701                           ;SlaveComm_PIC18.c: 414: command_builder_add_char( send_buffer, ';' );
  3702  000DB6  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3703  000DBA  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3704  000DBE  0E3B               	movlw	59
  3705  000DC0  6E03               	movwf	command_builder_add_char@data,c
  3706  000DC2  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3707                           
  3708                           ;SlaveComm_PIC18.c: 415: command_builder_add_string( send_buffer, data2 );
  3709  000DC6  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3710  000DCA  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3711  000DCE  C011  F007         	movff	command_builder3@data2,command_builder_add_string@data_string
  3712  000DD2  C012  F008         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  3713  000DD6  EC9B  F007         	call	_command_builder_add_string	;wreg free
  3714                           
  3715                           ;SlaveComm_PIC18.c: 416: command_builder_add_char( send_buffer, ';' );
  3716  000DDA  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3717  000DDE  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3718  000DE2  0E3B               	movlw	59
  3719  000DE4  6E03               	movwf	command_builder_add_char@data,c
  3720  000DE6  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3721                           
  3722                           ;SlaveComm_PIC18.c: 417: command_builder_add_string( send_buffer, data3 );
  3723  000DEA  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3724  000DEE  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3725  000DF2  C013  F007         	movff	command_builder3@data3,command_builder_add_string@data_string
  3726  000DF6  C014  F008         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  3727  000DFA  EC9B  F007         	call	_command_builder_add_string	;wreg free
  3728                           
  3729                           ;SlaveComm_PIC18.c: 418: command_builder_add_char( send_buffer, '*' );
  3730  000DFE  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3731  000E02  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3732  000E06  0E2A               	movlw	42
  3733  000E08  6E03               	movwf	command_builder_add_char@data,c
  3734  000E0A  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3735  000E0E  0012               	return	
  3736  000E10                     __end_of_command_builder3:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postinc1	equ	0xFE6
  3747                           fsr1h	equ	0xFE2
  3748                           fsr1l	equ	0xFE1
  3749                           indf2	equ	0xFDF
  3750                           postinc2	equ	0xFDE
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function _command_builder_add_string *****************
  3756 ;; Defined at:
  3757 ;;		line 453 in file "SlaveComm_PIC18.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  send_buffer     2    4[COMRAM] PTR struct buffer
  3760 ;;		 -> communications@send_buffer(42), 
  3761 ;;  data_string     2    6[COMRAM] PTR unsigned char 
  3762 ;;		 -> STR_36(4), STR_35(10), STR_34(4), STR_33(12), 
  3763 ;;		 -> STR_32(5), STR_31(4), STR_30(5), STR_29(4), 
  3764 ;;		 -> STR_28(4), STR_27(6), STR_26(4), STR_25(6), 
  3765 ;;		 -> STR_24(4), com_command_setPower@temp(7), STR_23(5), STR_22(5), 
  3766 ;;		 -> STR_21(4), STR_14(3), STR_13(5), STR_12(4), 
  3767 ;;		 -> STR_10(4), STR_9(5), STR_8(4), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  inx             2   10[COMRAM] int 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;		None               void
  3772 ;; Registers used:
  3773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3779 ;;      Params:         4       0       0       0       0       0       0
  3780 ;;      Locals:         2       0       0       0       0       0       0
  3781 ;;      Temps:          2       0       0       0       0       0       0
  3782 ;;      Totals:         8       0       0       0       0       0       0
  3783 ;;Total ram usage:        8 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    1
  3786 ;; This function calls:
  3787 ;;		_command_builder_add_char
  3788 ;; This function is called by:
  3789 ;;		_command_builder1
  3790 ;;		_command_builder2
  3791 ;;		_command_builder3
  3792 ;;		_command_builder4
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text26
  3797  000F36                     __ptext26:
  3798                           	opt stack 0
  3799  000F36                     _command_builder_add_string:
  3800                           	opt stack 25
  3801                           
  3802                           ;SlaveComm_PIC18.c: 455: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  3803                           
  3804                           ;incstack = 0
  3805  000F36  0E00               	movlw	0
  3806  000F38  6E0C               	movwf	command_builder_add_string@inx+1,c
  3807  000F3A  0E00               	movlw	0
  3808  000F3C  6E0B               	movwf	command_builder_add_string@inx,c
  3809  000F3E  D01F               	goto	l1543
  3810  000F40                     l1539:
  3811                           
  3812                           ;SlaveComm_PIC18.c: 456: {
  3813                           ;SlaveComm_PIC18.c: 457: command_builder_add_char( send_buffer, data_string[inx] );
  3814  000F40  C005  F001         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  3815  000F44  C006  F002         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  3816  000F48  500B               	movf	command_builder_add_string@inx,w,c
  3817  000F4A  2407               	addwf	command_builder_add_string@data_string,w,c
  3818  000F4C  6E09               	movwf	??_command_builder_add_string& (0+255),c
  3819  000F4E  500C               	movf	command_builder_add_string@inx+1,w,c
  3820  000F50  2008               	addwfc	command_builder_add_string@data_string+1,w,c
  3821  000F52  6E0A               	movwf	(??_command_builder_add_string+1)& (0+255),c
  3822  000F54  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3823  000F58  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3824  000F5C  6AF8               	clrf	tblptru,c
  3825  000F5E  0E05               	movlw	(high __ramtop+-1)
  3826  000F60  64F7               	cpfsgt	tblptrh,c
  3827  000F62  D003               	bra	u687
  3828  000F64  0008               	tblrd		*
  3829  000F66  50F5               	movf	tablat,w,c
  3830  000F68  D005               	bra	u680
  3831  000F6A                     u687:
  3832  000F6A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3833  000F6E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3834  000F72  50E7               	movf	indf1,w,c
  3835  000F74                     u680:
  3836  000F74  6E03               	movwf	command_builder_add_char@data,c
  3837  000F76  EC6D  F008         	call	_command_builder_add_char	;wreg free
  3838  000F7A  4A0B               	infsnz	command_builder_add_string@inx,f,c
  3839  000F7C  2A0C               	incf	command_builder_add_string@inx+1,f,c
  3840  000F7E                     l1543:
  3841  000F7E  500B               	movf	command_builder_add_string@inx,w,c
  3842  000F80  2407               	addwf	command_builder_add_string@data_string,w,c
  3843  000F82  6E09               	movwf	??_command_builder_add_string& (0+255),c
  3844  000F84  500C               	movf	command_builder_add_string@inx+1,w,c
  3845  000F86  2008               	addwfc	command_builder_add_string@data_string+1,w,c
  3846  000F88  6E0A               	movwf	(??_command_builder_add_string+1)& (0+255),c
  3847  000F8A  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3848  000F8E  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3849  000F92  6AF8               	clrf	tblptru,c
  3850  000F94  0E05               	movlw	(high __ramtop+-1)
  3851  000F96  64F7               	cpfsgt	tblptrh,c
  3852  000F98  D003               	bra	u697
  3853  000F9A  0008               	tblrd		*
  3854  000F9C  50F5               	movf	tablat,w,c
  3855  000F9E  D005               	bra	u690
  3856  000FA0                     u697:
  3857  000FA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  3858  000FA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  3859  000FA8  50E7               	movf	indf1,w,c
  3860  000FAA                     u690:
  3861  000FAA  0900               	iorlw	0
  3862  000FAC  B4D8               	btfsc	status,2,c
  3863  000FAE  0012               	return	
  3864  000FB0  D7C7               	goto	l1539
  3865  000FB2                     __end_of_command_builder_add_string:
  3866                           	opt stack 0
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           prodh	equ	0xFF4
  3872                           prodl	equ	0xFF3
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           indf1	equ	0xFE7
  3876                           postinc1	equ	0xFE6
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           indf2	equ	0xFDF
  3880                           postinc2	equ	0xFDE
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _command_builder_add_char *****************
  3886 ;; Defined at:
  3887 ;;		line 440 in file "SlaveComm_PIC18.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  send_buffer     2    0[COMRAM] PTR struct buffer
  3890 ;;		 -> communications@send_buffer(42), 
  3891 ;;  data            1    2[COMRAM] unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;		None               void
  3896 ;; Registers used:
  3897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         3       0       0       0       0       0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0
  3905 ;;      Temps:          1       0       0       0       0       0       0
  3906 ;;      Totals:         4       0       0       0       0       0       0
  3907 ;;Total ram usage:        4 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_command_builder1
  3913 ;;		_command_builder2
  3914 ;;		_command_builder3
  3915 ;;		_command_builder_add_string
  3916 ;;		_command_builder4
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text27
  3921  0010DA                     __ptext27:
  3922                           	opt stack 0
  3923  0010DA                     _command_builder_add_char:
  3924                           	opt stack 25
  3925                           
  3926                           ;SlaveComm_PIC18.c: 442: send_buffer->data_buffer[send_buffer->write_position] = data;
  3927                           
  3928                           ;incstack = 0
  3929  0010DA  EE20 F028          	lfsr	2,40
  3930  0010DE  5001               	movf	command_builder_add_char@send_buffer,w,c
  3931  0010E0  26D9               	addwf	fsr2l,f,c
  3932  0010E2  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3933  0010E4  22DA               	addwfc	fsr2h,f,c
  3934  0010E6  50DF               	movf	indf2,w,c
  3935  0010E8  6E04               	movwf	??_command_builder_add_char& (0+255),c
  3936  0010EA  5004               	movf	??_command_builder_add_char,w,c
  3937  0010EC  0D01               	mullw	1
  3938  0010EE  50F3               	movf	prodl,w,c
  3939  0010F0  2401               	addwf	command_builder_add_char@send_buffer,w,c
  3940  0010F2  6ED9               	movwf	fsr2l,c
  3941  0010F4  50F4               	movf	prodh,w,c
  3942  0010F6  2002               	addwfc	command_builder_add_char@send_buffer+1,w,c
  3943  0010F8  6EDA               	movwf	fsr2h,c
  3944  0010FA  C003  FFDF         	movff	command_builder_add_char@data,indf2
  3945                           
  3946                           ;SlaveComm_PIC18.c: 444: send_buffer->write_position++;
  3947  0010FE  EE20 F028          	lfsr	2,40
  3948  001102  5001               	movf	command_builder_add_char@send_buffer,w,c
  3949  001104  26D9               	addwf	fsr2l,f,c
  3950  001106  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3951  001108  22DA               	addwfc	fsr2h,f,c
  3952  00110A  2ADF               	incf	indf2,f,c
  3953                           
  3954                           ;SlaveComm_PIC18.c: 445: if( send_buffer->write_position >= 40 )
  3955  00110C  EE20 F028          	lfsr	2,40
  3956  001110  5001               	movf	command_builder_add_char@send_buffer,w,c
  3957  001112  26D9               	addwf	fsr2l,f,c
  3958  001114  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3959  001116  22DA               	addwfc	fsr2h,f,c
  3960  001118  0E27               	movlw	39
  3961  00111A  64DF               	cpfsgt	indf2,c
  3962  00111C  0012               	return	
  3963                           
  3964                           ;SlaveComm_PIC18.c: 446: {
  3965                           ;SlaveComm_PIC18.c: 447: send_buffer->write_position = 0;
  3966  00111E  EE20 F028          	lfsr	2,40
  3967  001122  5001               	movf	command_builder_add_char@send_buffer,w,c
  3968  001124  26D9               	addwf	fsr2l,f,c
  3969  001126  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3970  001128  22DA               	addwfc	fsr2h,f,c
  3971  00112A  0E00               	movlw	0
  3972  00112C  6EDF               	movwf	indf2,c
  3973  00112E  0012               	return	
  3974  001130                     __end_of_command_builder_add_char:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           indf1	equ	0xFE7
  3985                           postinc1	equ	0xFE6
  3986                           fsr1h	equ	0xFE2
  3987                           fsr1l	equ	0xFE1
  3988                           indf2	equ	0xFDF
  3989                           postinc2	equ	0xFDE
  3990                           fsr2h	equ	0xFDA
  3991                           fsr2l	equ	0xFD9
  3992                           status	equ	0xFD8
  3993                           
  3994 ;; *************** function _process_data_parameterize *****************
  3995 ;; Defined at:
  3996 ;;		line 250 in file "SlaveComm_PIC18.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  parameters      2    6[COMRAM] PTR unsigned char [10]
  3999 ;;		 -> process_data@parameters(50), 
  4000 ;;  buffer_to_pa    2    8[COMRAM] PTR struct buffer
  4001 ;;		 -> communications@receive_buffer(42), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  inx             2   13[COMRAM] int 
  4004 ;;  parameter_po    1   16[COMRAM] unsigned char 
  4005 ;;  parameter_in    1   15[COMRAM] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4015 ;;      Params:         4       0       0       0       0       0       0
  4016 ;;      Locals:         4       0       0       0       0       0       0
  4017 ;;      Temps:          3       0       0       0       0       0       0
  4018 ;;      Totals:        11       0       0       0       0       0       0
  4019 ;;Total ram usage:       11 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    1
  4022 ;; This function calls:
  4023 ;;		___wmul
  4024 ;; This function is called by:
  4025 ;;		_process_data
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text28
  4030  00088C                     __ptext28:
  4031                           	opt stack 0
  4032  00088C                     _process_data_parameterize:
  4033                           	opt stack 27
  4034                           
  4035                           ;SlaveComm_PIC18.c: 252: unsigned char parameter_position = 0;
  4036                           
  4037                           ;incstack = 0
  4038  00088C  0E00               	movlw	0
  4039  00088E  6E11               	movwf	process_data_parameterize@parameter_position,c
  4040                           
  4041                           ;SlaveComm_PIC18.c: 253: unsigned char parameter_index = 0;
  4042  000890  0E00               	movlw	0
  4043  000892  6E10               	movwf	process_data_parameterize@parameter_index,c
  4044                           
  4045                           ;SlaveComm_PIC18.c: 262: for( int inx = 0; inx < 5; inx++ )
  4046  000894  0E00               	movlw	0
  4047  000896  6E0F               	movwf	process_data_parameterize@inx+1,c
  4048  000898  0E00               	movlw	0
  4049  00089A  6E0E               	movwf	process_data_parameterize@inx,c
  4050  00089C  BE0F               	btfsc	process_data_parameterize@inx+1,7,c
  4051  00089E  D008               	goto	l1745
  4052  0008A0  500F               	movf	process_data_parameterize@inx+1,w,c
  4053  0008A2  E105               	bnz	u920
  4054  0008A4  0E05               	movlw	5
  4055  0008A6  5C0E               	subwf	process_data_parameterize@inx,w,c
  4056  0008A8  B0D8               	btfsc	status,0,c
  4057  0008AA  D082               	goto	l1775
  4058  0008AC  D001               	goto	l1745
  4059  0008AE                     u920:
  4060  0008AE  D080               	goto	l1775
  4061  0008B0                     l1745:
  4062                           
  4063                           ;SlaveComm_PIC18.c: 263: {
  4064                           ;SlaveComm_PIC18.c: 264: parameters[inx][0] = '\0';
  4065  0008B0  C00E  F001         	movff	process_data_parameterize@inx,___wmul@multiplier
  4066  0008B4  C00F  F002         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  4067  0008B8  0E00               	movlw	0
  4068  0008BA  6E04               	movwf	___wmul@multiplicand+1,c
  4069  0008BC  0E0A               	movlw	10
  4070  0008BE  6E03               	movwf	___wmul@multiplicand,c
  4071  0008C0  ECD6  F009         	call	___wmul	;wreg free
  4072  0008C4  5001               	movf	?___wmul,w,c
  4073  0008C6  2407               	addwf	process_data_parameterize@parameters,w,c
  4074  0008C8  6ED9               	movwf	fsr2l,c
  4075  0008CA  5002               	movf	?___wmul+1,w,c
  4076  0008CC  2008               	addwfc	process_data_parameterize@parameters+1,w,c
  4077  0008CE  6EDA               	movwf	fsr2h,c
  4078  0008D0  0E00               	movlw	0
  4079  0008D2  6EDF               	movwf	indf2,c
  4080  0008D4  4A0E               	infsnz	process_data_parameterize@inx,f,c
  4081  0008D6  2A0F               	incf	process_data_parameterize@inx+1,f,c
  4082  0008D8  BE0F               	btfsc	process_data_parameterize@inx+1,7,c
  4083  0008DA  D7EA               	goto	l1745
  4084  0008DC  500F               	movf	process_data_parameterize@inx+1,w,c
  4085  0008DE  E168               	bnz	l1775
  4086  0008E0  D7E1               	goto	L2
  4087  0008E2                     l1751:
  4088                           
  4089                           ;SlaveComm_PIC18.c: 276: parameter_position = 0;
  4090  0008E2  0E00               	movlw	0
  4091  0008E4  6E11               	movwf	process_data_parameterize@parameter_position,c
  4092                           
  4093                           ;SlaveComm_PIC18.c: 277: parameter_index++;
  4094  0008E6  2A10               	incf	process_data_parameterize@parameter_index,f,c
  4095                           
  4096                           ;SlaveComm_PIC18.c: 279: if( parameter_index >= 5 )
  4097  0008E8  0E04               	movlw	4
  4098  0008EA  6410               	cpfsgt	process_data_parameterize@parameter_index,c
  4099  0008EC  D05A               	goto	l1773
  4100                           
  4101                           ;SlaveComm_PIC18.c: 280: {
  4102                           ;SlaveComm_PIC18.c: 283: parameter_index = ( 5 - 1 );
  4103  0008EE  0E04               	movlw	4
  4104  0008F0  6E10               	movwf	process_data_parameterize@parameter_index,c
  4105                           
  4106                           ;SlaveComm_PIC18.c: 284: }
  4107                           ;SlaveComm_PIC18.c: 286: break;
  4108  0008F2  D057               	goto	l1773
  4109  0008F4                     l1759:
  4110                           
  4111                           ;SlaveComm_PIC18.c: 289: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  4112  0008F4  EE20 F029          	lfsr	2,41
  4113  0008F8  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4114  0008FA  26D9               	addwf	fsr2l,f,c
  4115  0008FC  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4116  0008FE  22DA               	addwfc	fsr2h,f,c
  4117  000900  50DF               	movf	indf2,w,c
  4118  000902  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  4119  000904  500B               	movf	??_process_data_parameterize,w,c
  4120  000906  0D01               	mullw	1
  4121  000908  50F3               	movf	prodl,w,c
  4122  00090A  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4123  00090C  6ED9               	movwf	fsr2l,c
  4124  00090E  50F4               	movf	prodh,w,c
  4125  000910  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4126  000912  6EDA               	movwf	fsr2h,c
  4127  000914  5010               	movf	process_data_parameterize@parameter_index,w,c
  4128  000916  0D0A               	mullw	10
  4129  000918  C007  F00C         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  4130  00091C  C008  F00D         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  4131  000920  50F3               	movf	prodl,w,c
  4132  000922  260C               	addwf	??_process_data_parameterize+1,f,c
  4133  000924  50F4               	movf	prodh,w,c
  4134  000926  220D               	addwfc	??_process_data_parameterize+2,f,c
  4135  000928  5011               	movf	process_data_parameterize@parameter_position,w,c
  4136  00092A  0D01               	mullw	1
  4137  00092C  50F3               	movf	prodl,w,c
  4138  00092E  240C               	addwf	??_process_data_parameterize+1,w,c
  4139  000930  6EE1               	movwf	fsr1l,c
  4140  000932  50F4               	movf	prodh,w,c
  4141  000934  200D               	addwfc	??_process_data_parameterize+2,w,c
  4142  000936  6EE2               	movwf	fsr1h,c
  4143  000938  CFDF FFE7          	movff	indf2,indf1
  4144                           
  4145                           ;SlaveComm_PIC18.c: 290: parameter_position++;
  4146  00093C  2A11               	incf	process_data_parameterize@parameter_position,f,c
  4147                           
  4148                           ;SlaveComm_PIC18.c: 291: if( parameter_position >= 10 )
  4149  00093E  0E09               	movlw	9
  4150  000940  6411               	cpfsgt	process_data_parameterize@parameter_position,c
  4151  000942  D002               	goto	l1767
  4152                           
  4153                           ;SlaveComm_PIC18.c: 292: {
  4154                           ;SlaveComm_PIC18.c: 295: parameter_position = ( 10 - 1 );
  4155  000944  0E09               	movlw	9
  4156  000946  6E11               	movwf	process_data_parameterize@parameter_position,c
  4157  000948                     l1767:
  4158                           
  4159                           ;SlaveComm_PIC18.c: 296: }
  4160                           ;SlaveComm_PIC18.c: 299: parameters[parameter_index][parameter_position] = '\0';
  4161  000948  5010               	movf	process_data_parameterize@parameter_index,w,c
  4162  00094A  0D0A               	mullw	10
  4163  00094C  C007  F00B         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  4164  000950  C008  F00C         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  4165  000954  50F3               	movf	prodl,w,c
  4166  000956  260B               	addwf	??_process_data_parameterize,f,c
  4167  000958  50F4               	movf	prodh,w,c
  4168  00095A  220C               	addwfc	??_process_data_parameterize+1,f,c
  4169  00095C  5011               	movf	process_data_parameterize@parameter_position,w,c
  4170  00095E  0D01               	mullw	1
  4171  000960  50F3               	movf	prodl,w,c
  4172  000962  240B               	addwf	??_process_data_parameterize,w,c
  4173  000964  6ED9               	movwf	fsr2l,c
  4174  000966  50F4               	movf	prodh,w,c
  4175  000968  200C               	addwfc	??_process_data_parameterize+1,w,c
  4176  00096A  6EDA               	movwf	fsr2h,c
  4177  00096C  0E00               	movlw	0
  4178  00096E  6EDF               	movwf	indf2,c
  4179                           
  4180                           ;SlaveComm_PIC18.c: 301: }
  4181                           
  4182                           ;SlaveComm_PIC18.c: 300: break;
  4183  000970  D018               	goto	l1773
  4184  000972                     l1771:
  4185  000972  EE20 F029          	lfsr	2,41
  4186  000976  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4187  000978  26D9               	addwf	fsr2l,f,c
  4188  00097A  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4189  00097C  22DA               	addwfc	fsr2h,f,c
  4190  00097E  50DF               	movf	indf2,w,c
  4191  000980  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  4192  000982  500B               	movf	??_process_data_parameterize,w,c
  4193  000984  0D01               	mullw	1
  4194  000986  50F3               	movf	prodl,w,c
  4195  000988  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4196  00098A  6ED9               	movwf	fsr2l,c
  4197  00098C  50F4               	movf	prodh,w,c
  4198  00098E  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4199  000990  6EDA               	movwf	fsr2h,c
  4200  000992  50DF               	movf	indf2,w,c
  4201                           
  4202                           ; Switch size 1, requested type "space"
  4203                           ; Number of cases is 2, Range of values is 33 to 59
  4204                           ; switch strategies available:
  4205                           ; Name         Instructions Cycles
  4206                           ; simple_byte            7     4 (average)
  4207                           ;	Chosen strategy is simple_byte
  4208  000994  0A21               	xorlw	33	; case 33
  4209  000996  B4D8               	btfsc	status,2,c
  4210  000998  D004               	goto	l1773
  4211  00099A  0A1A               	xorlw	26	; case 59
  4212  00099C  B4D8               	btfsc	status,2,c
  4213  00099E  D7A1               	goto	l1751
  4214  0009A0  D7A9               	goto	l1759
  4215  0009A2                     l1773:
  4216                           
  4217                           ;SlaveComm_PIC18.c: 303: buffer_to_parameterize->read_position++;
  4218  0009A2  EE20 F029          	lfsr	2,41
  4219  0009A6  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4220  0009A8  26D9               	addwf	fsr2l,f,c
  4221  0009AA  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4222  0009AC  22DA               	addwfc	fsr2h,f,c
  4223  0009AE  2ADF               	incf	indf2,f,c
  4224  0009B0                     l1775:
  4225  0009B0  EE20 F029          	lfsr	2,41
  4226  0009B4  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4227  0009B6  26D9               	addwf	fsr2l,f,c
  4228  0009B8  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4229  0009BA  22DA               	addwfc	fsr2h,f,c
  4230  0009BC  50DF               	movf	indf2,w,c
  4231  0009BE  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  4232  0009C0  500B               	movf	??_process_data_parameterize,w,c
  4233  0009C2  0D01               	mullw	1
  4234  0009C4  50F3               	movf	prodl,w,c
  4235  0009C6  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4236  0009C8  6ED9               	movwf	fsr2l,c
  4237  0009CA  50F4               	movf	prodh,w,c
  4238  0009CC  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4239  0009CE  6EDA               	movwf	fsr2h,c
  4240  0009D0  0E2A               	movlw	42
  4241  0009D2  18DE               	xorwf	postinc2,w,c
  4242  0009D4  B4D8               	btfsc	status,2,c
  4243  0009D6  0012               	return	
  4244  0009D8  EE20 F029          	lfsr	2,41
  4245  0009DC  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4246  0009DE  26D9               	addwf	fsr2l,f,c
  4247  0009E0  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4248  0009E2  22DA               	addwfc	fsr2h,f,c
  4249  0009E4  0E28               	movlw	40
  4250  0009E6  60DF               	cpfslt	indf2,c
  4251  0009E8  0012               	return	
  4252  0009EA  EE20 F028          	lfsr	2,40
  4253  0009EE  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4254  0009F0  26D9               	addwf	fsr2l,f,c
  4255  0009F2  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4256  0009F4  22DA               	addwfc	fsr2h,f,c
  4257  0009F6  EE10 F029          	lfsr	1,41
  4258  0009FA  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4259  0009FC  26E1               	addwf	fsr1l,f,c
  4260  0009FE  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4261  000A00  22E2               	addwfc	fsr1h,f,c
  4262  000A02  50DE               	movf	postinc2,w,c
  4263  000A04  18E6               	xorwf	postinc1,w,c
  4264  000A06  B4D8               	btfsc	status,2,c
  4265  000A08  0012               	return	
  4266  000A0A  D7B3               	goto	l1771
  4267  000A0C                     __end_of_process_data_parameterize:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           indf1	equ	0xFE7
  4278                           postinc1	equ	0xFE6
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           postinc2	equ	0xFDE
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function ___wmul *****************
  4288 ;; Defined at:
  4289 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  multiplier      2    0[COMRAM] unsigned int 
  4292 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  product         2    4[COMRAM] unsigned int 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  2    0[COMRAM] unsigned int 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, prodl, prodh
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         4       0       0       0       0       0       0
  4305 ;;      Locals:         2       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0
  4307 ;;      Totals:         6       0       0       0       0       0       0
  4308 ;;Total ram usage:        6 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_process_data_parameterize
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text29
  4318  0013AC                     __ptext29:
  4319                           	opt stack 0
  4320  0013AC                     ___wmul:
  4321                           	opt stack 27
  4322                           
  4323                           ;incstack = 0
  4324  0013AC  5001               	movf	___wmul@multiplier,w,c
  4325  0013AE  0203               	mulwf	___wmul@multiplicand,c
  4326  0013B0  CFF3 F005          	movff	prodl,___wmul@product
  4327  0013B4  CFF4 F006          	movff	prodh,___wmul@product+1
  4328  0013B8  5001               	movf	___wmul@multiplier,w,c
  4329  0013BA  0204               	mulwf	___wmul@multiplicand+1,c
  4330  0013BC  50F3               	movf	prodl,w,c
  4331  0013BE  2606               	addwf	___wmul@product+1,f,c
  4332  0013C0  5002               	movf	___wmul@multiplier+1,w,c
  4333  0013C2  0203               	mulwf	___wmul@multiplicand,c
  4334  0013C4  50F3               	movf	prodl,w,c
  4335  0013C6  2606               	addwf	___wmul@product+1,f,c
  4336  0013C8  C005  F001         	movff	___wmul@product,?___wmul
  4337  0013CC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4338  0013D0  0012               	return	
  4339  0013D2                     __end_of___wmul:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           indf1	equ	0xFE7
  4350                           postinc1	equ	0xFE6
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _SPISlaveInit *****************
  4360 ;; Defined at:
  4361 ;;		line 640 in file "SlaveComm_PIC18.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4375 ;;      Params:         0       0       0       0       0       0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0
  4378 ;;      Totals:         0       0       0       0       0       0       0
  4379 ;;Total ram usage:        0 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text30
  4389  001182                     __ptext30:
  4390                           	opt stack 0
  4391  001182                     _SPISlaveInit:
  4392                           	opt stack 30
  4393                           
  4394                           ;SlaveComm_PIC18.c: 643: TRISAbits.TRISA0 = 0;
  4395                           
  4396                           ;incstack = 0
  4397  001182  9092               	bcf	3986,0,c	;volatile
  4398                           
  4399                           ;SlaveComm_PIC18.c: 644: TRISAbits.TRISA1 = 1;
  4400  001184  8292               	bsf	3986,1,c	;volatile
  4401                           
  4402                           ;SlaveComm_PIC18.c: 645: TRISBbits.RB4 = 0;
  4403  001186  9893               	bcf	3987,4,c	;volatile
  4404                           
  4405                           ;SlaveComm_PIC18.c: 646: TRISCbits.TRISC3 = 0;
  4406  001188  9694               	bcf	3988,3,c	;volatile
  4407                           
  4408                           ;SlaveComm_PIC18.c: 647: TRISCbits.TRISC5 = 0;
  4409  00118A  9A94               	bcf	3988,5,c	;volatile
  4410                           
  4411                           ;SlaveComm_PIC18.c: 648: TRISCbits.TRISC6 = 0;
  4412  00118C  9C94               	bcf	3988,6,c	;volatile
  4413                           
  4414                           ;SlaveComm_PIC18.c: 649: TRISCbits.TRISC7 = 0;
  4415  00118E  9E94               	bcf	3988,7,c	;volatile
  4416                           
  4417                           ;SlaveComm_PIC18.c: 650: ANSELAbits.ANSA1 = 0b0;
  4418  001190  010F               	movlb	15	; () banked
  4419  001192  9338               	bcf	56,1,b	;volatile
  4420                           
  4421                           ;SlaveComm_PIC18.c: 652: LATCbits.LATC6 = 1;
  4422  001194  8C8B               	bsf	3979,6,c	;volatile
  4423                           
  4424                           ;SlaveComm_PIC18.c: 653: LATCbits.LATC3 = 1;
  4425  001196  868B               	bsf	3979,3,c	;volatile
  4426                           
  4427                           ;SlaveComm_PIC18.c: 654: LATCbits.LATC5 = 1;
  4428  001198  8A8B               	bsf	3979,5,c	;volatile
  4429                           
  4430                           ;SlaveComm_PIC18.c: 655: LATCbits.LATC7 = 1;
  4431  00119A  8E8B               	bsf	3979,7,c	;volatile
  4432                           
  4433                           ;SlaveComm_PIC18.c: 658: SSP2CON1bits.SSPEN = 0;
  4434  00119C  9A6C               	bcf	3948,5,c	;volatile
  4435                           
  4436                           ;SlaveComm_PIC18.c: 660: ANSELBbits.ANSB0 = 0b0;
  4437  00119E  010F               	movlb	15	; () banked
  4438  0011A0  9139               	bcf	57,0,b	;volatile
  4439                           
  4440                           ;SlaveComm_PIC18.c: 661: ANSELBbits.ANSB1 = 0b0;
  4441  0011A2  010F               	movlb	15	; () banked
  4442  0011A4  9339               	bcf	57,1,b	;volatile
  4443                           
  4444                           ;SlaveComm_PIC18.c: 662: ANSELBbits.ANSB2 = 0b0;
  4445  0011A6  010F               	movlb	15	; () banked
  4446  0011A8  9539               	bcf	57,2,b	;volatile
  4447                           
  4448                           ;SlaveComm_PIC18.c: 663: ANSELBbits.ANSB3 = 0b0;
  4449  0011AA  010F               	movlb	15	; () banked
  4450  0011AC  9739               	bcf	57,3,b	;volatile
  4451                           
  4452                           ;SlaveComm_PIC18.c: 665: TRISBbits.RB0 = 0b1;
  4453  0011AE  8093               	bsf	3987,0,c	;volatile
  4454                           
  4455                           ;SlaveComm_PIC18.c: 666: TRISBbits.RB1 = 0b1;
  4456  0011B0  8293               	bsf	3987,1,c	;volatile
  4457                           
  4458                           ;SlaveComm_PIC18.c: 667: TRISBbits.RB2 = 0b1;
  4459  0011B2  8493               	bsf	3987,2,c	;volatile
  4460                           
  4461                           ;SlaveComm_PIC18.c: 668: TRISBbits.RB3 = 0b0;
  4462  0011B4  9693               	bcf	3987,3,c	;volatile
  4463                           
  4464                           ;SlaveComm_PIC18.c: 670: SSP2STATbits.SMP = 0;
  4465  0011B6  9E6D               	bcf	3949,7,c	;volatile
  4466                           
  4467                           ;SlaveComm_PIC18.c: 671: SSP2STATbits.CKE = 1;
  4468  0011B8  8C6D               	bsf	3949,6,c	;volatile
  4469                           
  4470                           ;SlaveComm_PIC18.c: 673: SSP2CON1bits.WCOL = 0;
  4471  0011BA  9E6C               	bcf	3948,7,c	;volatile
  4472                           
  4473                           ;SlaveComm_PIC18.c: 674: SSP2CON1bits.SSPOV = 0;
  4474  0011BC  9C6C               	bcf	3948,6,c	;volatile
  4475                           
  4476                           ;SlaveComm_PIC18.c: 675: SSP2CON1bits.SSPEN = 0;
  4477  0011BE  9A6C               	bcf	3948,5,c	;volatile
  4478                           
  4479                           ;SlaveComm_PIC18.c: 676: SSP2CON1bits.CKP = 1;
  4480  0011C0  886C               	bsf	3948,4,c	;volatile
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;SlaveComm_PIC18.c: 677: SSP2CON1bits.SSPM = 0b0100;
  4484  0011C2  506C               	movf	3948,w,c	;volatile
  4485  0011C4  0BF0               	andlw	-16
  4486  0011C6  0904               	iorlw	4
  4487  0011C8  6E6C               	movwf	3948,c	;volatile
  4488                           
  4489                           ;SlaveComm_PIC18.c: 680: SSP2CON3 = 0x00;
  4490  0011CA  0E00               	movlw	0
  4491  0011CC  6E69               	movwf	3945,c	;volatile
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;SlaveComm_PIC18.c: 681: SSP2CON3bits.BOEN = 0b0;
  4495  0011CE  9869               	bcf	3945,4,c	;volatile
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;SlaveComm_PIC18.c: 683: SSP2CON1bits.SSPEN = 1;
  4499  0011D0  8A6C               	bsf	3948,5,c	;volatile
  4500  0011D2  0012               	return	
  4501  0011D4                     __end_of_SPISlaveInit:
  4502                           	opt stack 0
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           prodh	equ	0xFF4
  4508                           prodl	equ	0xFF3
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           indf1	equ	0xFE7
  4512                           postinc1	equ	0xFE6
  4513                           fsr1h	equ	0xFE2
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           postinc0	equ	0xFEE
  4527                           wreg	equ	0xFE8
  4528                           indf1	equ	0xFE7
  4529                           postinc1	equ	0xFE6
  4530                           fsr1h	equ	0xFE2
  4531                           fsr1l	equ	0xFE1
  4532                           indf2	equ	0xFDF
  4533                           postinc2	equ	0xFDE
  4534                           fsr2h	equ	0xFDA
  4535                           fsr2l	equ	0xFD9
  4536                           status	equ	0xFD8
  4537                           
  4538                           	psect	rparam
  4539  0000                     tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           postinc0	equ	0xFEE
  4546                           wreg	equ	0xFE8
  4547                           indf1	equ	0xFE7
  4548                           postinc1	equ	0xFE6
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           indf2	equ	0xFDF
  4552                           postinc2	equ	0xFDE
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8


Data Sizes:
    Strings     86
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      95
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_readCalibration@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setAmps@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setVolts@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    com_command_testLED@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_36(CODE[4]), STR_35(CODE[10]), STR_34(CODE[4]), STR_33(CODE[12]), 
		 -> STR_32(CODE[5]), STR_31(CODE[4]), STR_30(CODE[5]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_27(CODE[6]), STR_26(CODE[4]), STR_25(CODE[6]), 
		 -> STR_24(CODE[4]), com_command_setPower@temp(COMRAM[7]), STR_23(CODE[5]), STR_22(CODE[5]), 
		 -> STR_21(CODE[4]), STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 7
		 -> STR_36(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), com_command_setPower@temp(COMRAM[7]), 
		 -> STR_14(CODE[3]), STR_10(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_35(CODE[10]), STR_30(CODE[5]), STR_27(CODE[6]), STR_25(CODE[6]), 
		 -> STR_13(CODE[5]), STR_9(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_34(CODE[4]), STR_29(CODE[4]), STR_26(CODE[4]), STR_24(CODE[4]), 
		 -> STR_12(CODE[4]), STR_8(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder2@data2	PTR unsigned char  size(2) Largest target is 12
		 -> STR_33(CODE[12]), STR_23(CODE[5]), 

    command_builder2@data1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_32(CODE[5]), STR_22(CODE[5]), 

    command_builder2@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_21(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setPower
    _com_command_testLED->_command_builder2
    _com_command_setVolts->_command_builder3
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _utoa->___lwdiv
    _com_command_setAmps->_command_builder3
    _com_command_readCalibration->_command_builder2
    _command_builder2->_command_builder_add_string
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   78654
                                             82 COMRAM     4     4      0
                       _SPISlaveInit
                     _communications
                          _delayMS10
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     174
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   78433
                                             80 COMRAM     2     2      0
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     289
                                              2 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   55850
                                             29 COMRAM     4     2      2
        _com_command_readCalibration
                _com_command_setAmps
               _com_command_setPower
             _com_command_setVersion
               _com_command_setVolts
                _com_command_testLED
 ---------------------------------------------------------------------------------
 (3) _com_command_testLED                                  2     0      2    8212
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (3) _com_command_setVolts                                 2     0      2    9430
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2    9430
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                16    14      2   10832
                                             20 COMRAM     9     7      2
                   _command_builder3
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1352
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _com_command_setAmps                                  2     0      2    9430
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_readCalibration                          2     0      2    8212
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (4) _command_builder2                                     6     0      6    8126
                                             12 COMRAM     6     0      6
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     419
                                              3 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     111
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   21852
                                             25 COMRAM    55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   20693
                                             20 COMRAM     5     1      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2589
                                             11 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     707
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    8146
                                             16 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    7804
                                             12 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    9344
                                             12 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    4468
                                              4 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    3076
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     908
                                              6 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPISlaveInit
   _communications
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_readCalibration
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setAmps
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _utoa
           ___lwdiv
           ___lwmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setVolts
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_testLED
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      54       4       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5F       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3       9        0.0%
DATA                 0      0      B3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 16 02:54:50 2017

                                       _SPISlaveInit 1182                                                   l31 1054  
                                                 l33 107C                                                   l39 1278  
                                ___wmul@multiplicand 0003                                         __CFG_CP0$OFF 000000  
                                       __CFG_CP1$OFF 000000                                         __CFG_CP2$OFF 000000  
                                       __CFG_CP3$OFF 000000                                                  l161 0CCA  
                                                l190 067E                                                  l266 1310  
                                                l748 1178                                                  l669 0D4E  
                                                l758 1252                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  u920 08AE  
                                                u680 0F74                                                  u690 0FAA  
                                                u860 12B6                                                  u870 12B8  
                                                u687 0F6A                                                  u697 0FA0  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0020                                                 l2001 1076  
                                               l1543 0F7E                                                 l1607 116E  
                                               l1623 1248                                                 l1615 1228  
                                               l1617 1230                                                 l1539 0F40  
                                               l1555 0A1E                                                 l1811 0794  
                                               l1619 1234                                                 l1573 0AC0  
                                               l1565 0A84                                                 l1821 0806  
                                               l1751 08E2                                                 l1559 0A52  
                                               l1567 0A88                                                 l1807 0750  
                                               l1735 130C                                                 l1903 0C5E  
                                               l1663 0CD6                                                 l1745 08B0  
                                               l1585 0B2E                                                 l1825 0832  
                                               l1817 07DA                                                 l1833 0888  
                                               l1913 0CB8                                                 l1673 0D10  
                                               l1771 0972                                                 l1579 0AF6  
                                               l1595 1146                                                 l1773 09A2  
                                               l1829 085E                                                 l1597 114E  
                                               l1845 140C                                                 l1767 0948  
                                               l1759 08F4                                                 l1775 09B0  
                                               l1791 0686                                                 l1599 1152  
                                               l1871 0BA2                                                 l1943 0F32  
                                               l1935 0ED2                                                 l1873 0BB0  
                                               l1865 0B78                                                 l1881 0BD6  
                                               l1961 0E42                                                 l1795 06BA  
                                               l1891 0C1A                                                 l1875 0BBE  
                                               l1867 0B86                                                 l1789 0680  
                                               l1877 0BCC                                                 l1869 0B94  
                                               l1949 1266                                                 l1975 0E8E  
                                               l1967 0E62                                                 l1959 0E32  
                                               l1969 0E76                                                 l1979 0EA0  
                                               l1989 1044                                                 STR_1 0648  
                                               STR_2 0650                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 062D  
                                               STR_5 0628                                                 STR_6 0623  
                                               STR_7 0654                                                 STR_8 0650  
                                               STR_9 0623                                                 u1327 126C  
                                               u1337 0B40                                                 _main 102C  
                                               _init 1314                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 indf1 000FE7  
                                               fsr1l 000FE1                                                 indf2 000FDF  
                                               fsr2l 000FD9                                                 _utoa 0CCE  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 0000                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 0052                            com_command_setPower@power 0057  
                      __size_of_com_command_setPower 0046                                         ___param_bank 000010  
                      __size_of_com_command_setVolts 0026                                       _communications 0E10  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 064C                                                STR_11 064C  
                                              STR_12 0650                                                STR_20 060D  
                                              STR_13 0623                                                STR_21 0648  
                                              STR_22 062D                                                STR_14 0654  
                                              STR_30 0637                                                STR_23 0623  
                                              STR_31 0640                                                STR_15 0632  
                                              STR_16 0623                                                STR_32 062D  
                                              STR_24 0650                                                STR_33 0601  
                                              STR_25 061D                                                STR_17 061D  
                                              STR_34 0650                                                STR_26 0650  
                                              STR_18 0617                                                STR_35 060D  
                                              STR_27 0617                                                STR_19 0637  
                                              STR_36 0644                                                STR_28 063C  
                                              STR_29 0650                                                ?_utoa 0008  
                                     __CFG_DEBUG$OFF 000000                                      __end_of___lwdiv 1182  
                                    __end_of___lwmod 125C                                    ?_command_builder1 000D  
                                  ?_command_builder2 000D                                    ?_command_builder3 000D  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 0009                                   ??_command_builder1 0011  
                                 ??_command_builder2 0013                                   ??_command_builder3 0015  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 0017  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                 __CFG_MCLRE$EXTMCLR 000000                                                tablat 000FF5  
                                              utoa@c 0010                                                utoa@v 000E  
                                              status 000FD8                                      __end_of_strcmp2 0B38  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 000B                        command_builder_add_string@inx 000B  
                                    __initialization 13D2                                         __end_of_main 1084  
                                       __end_of_init 133A                               __end_of_communications 0EA6  
                                       __end_of_utoa 0D72                               _com_command_setVersion 1360  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 12EC  
                       command_builder_add_char@data 0003                                               ??_main 0053  
                                             ??_init 0001                                        _SPI_send_data 13F4  
                                             ??_utoa 000E                                        __activetblptr 000002  
                            _process_data_parameters 0658                                     receive_data@data 0007  
                        __end_of_com_command_setAmps 13AC                                       __CFG_WDTEN$OFF 000000  
                        __end_of_com_command_testLED 1432                                SPI_send_data@sendGood 0002  
                                     __CFG_XINST$OFF 000000                                               ___wmul 13AC  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lwdiv 0005                                            ??___lwmod 0005  
                                             clear_0 13D8                                               clear_1 13E4  
                                     ?_SPI_send_data 0001                            _process_data_parameterize 088C  
                __end_of_com_command_readCalibration 1450                          _com_command_readCalibration 1432  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                           com_command_setPower@temp 0017                                            ??_strcmp2 0005  
                                   __end_of_strmatch 12BE                                        ?_receive_data 0004  
                                         __accesstop 0060                              __end_of__initialization 13EA  
                    com_command_setPower@send_buffer 0015                                        ___rparam_used 000001  
                                  SPI_send_data@data 0001                                       __pcstackCOMRAM 0001  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0004  
                          ??_process_data_parameters 0019                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0007                   __end_of_command_builder_add_string 0FB2  
                         _command_builder_add_string 0F36                                           __pbssBANK0 0060  
                                     ??_receive_data 0006                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0008                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___wmul 0001                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0001                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 0019           communications@end_of_transmission_received 005C  
                        __end_of_resetCommunications 0C0E                         __end_of_com_command_setPower 121A  
                       __end_of_com_command_setVolts 1360                                    __CFG_PRICLKEN$OFF 000000  
                                            _SSP1ADD 000FC8                             _send_end_of_transmission 1450  
                                            _SSP1BUF 000FC9                                              _SSP2BUF 000F6F  
                                            _SSP1MSK 000FCA                             _command_builder_add_char 10DA  
                                  __end_of_delayMS10 128E                      __end_of_process_data_parameters 088C  
                           __end_of_SPI_receive_data 1314                            __size_of_command_builder1 0056  
                          __size_of_command_builder2 007A                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 0009                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0015  
                                            __Lparam 0000             process_data_parameterize@parameter_index 0010  
                                    __size_of___wmul 0026                                              ___lwdiv 1130  
                                            ___lwmod 121A                                         __psmallconst 0600  
                               SPI_receive_data@data 0001                                              __pcinit 13D2  
                                            __ramtop 0600                                            ?_strmatch 000C  
                                            __ptext0 102C                                              __ptext1 1314  
                                            __ptext2 125C                                              __ptext3 0E10  
                                            __ptext4 0EA6                                              __ptext5 13F4  
                                            __ptext6 0B38                                              __ptext7 1414  
                                            __ptext8 133A                                              __ptext9 1360  
                                            main@inx 0055                                              _strcmp2 0A0C  
                               end_of_initialization 13EA                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 0F36                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1386                                     ??_communications 0051  
        process_data_parameterize@parameter_position 0011                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                                            utoa@buf 0008                                              utoa@val 000A  
                              receive_data@my_status 005F                                 __end_of_receive_data 0CCE  
                                         ??_strmatch 0010                                            _PORTBbits 000F81  
                    communications@last_state_active 005D                                        ?_process_data 001A  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 001A  
                  __end_of_process_data_parameterize 0A0C                         __size_of_com_command_setAmps 0026  
                       __size_of_com_command_testLED 001E                                 _com_command_setPower 11D4  
                               _com_command_setVolts 133A                  communications@receive_current_state 005E  
                                      ?_SPISlaveInit 0001                                       __end_of___wmul 13D2  
              command_builder_add_string@send_buffer 0005                                       ??_process_data 001E  
                        ?_command_builder_add_string 0005                                  start_initialization 13D2  
                       resetCommunications@commState 0059                                     _command_builder1 1084  
                                   _command_builder2 0FB2                                     _command_builder3 0D72  
                  com_command_setVersion@send_buffer 0015                                 send_data@send_buffer 0003  
                              ?_com_command_setPower 0015                                ?_com_command_setVolts 0015  
                                     ??_SPISlaveInit 0001                                             ??___wmul 0005  
                send_end_of_transmission@send_buffer 0011                           ??_send_end_of_transmission 0013  
                         ??_command_builder_add_char 0004                                          __pbssCOMRAM 0057  
                           SPI_receive_data@recvGood 0003                                       delayMS10@count 0001  
                                  ?_SPI_receive_data 0001                                            _delayMS10 125C  
                                 ??_SPI_receive_data 0003                                         delayMS10@inx 0004  
                                   ___lwdiv@dividend 0001                       com_command_testLED@send_buffer 0013  
                              command_builder1@data1 000F                          command_builder1@send_buffer 000D  
                           ?_process_data_parameters 0015                                command_builder2@data1 000F  
                              command_builder2@data2 0011                                __size_of_receive_data 00C0  
                              command_builder3@data1 000F                                command_builder3@data2 0011  
                              command_builder3@data3 0013                                             ?___lwdiv 0001  
                                           ?___lwmod 0001                                __end_of_SPI_send_data 1414  
                                        __smallconst 0600                       resetCommunications@send_buffer 001E  
                                  __size_of_strmatch 0030                                    send_data@send_end 0007  
                                   ___lwdiv@quotient 0005                                             ?_strcmp2 0001  
                       __size_of_resetCommunications 00D6                                       strmatch@result 0010  
                process_data_parameterize@parameters 0007                                         _receive_data 0C0E  
                                     ___wmul@product 0005                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0001  
                               __end_of_process_data 12EC                                            _send_data 0EA6  
                             ??_com_command_setPower 0017                    process_data_parameters@parameters 0015  
                             ??_com_command_setVolts 0017                       com_command_setAmps@send_buffer 0015  
                                   __CFG_WDTPS$32768 000000                          command_builder2@send_buffer 000D  
                                           _SSP1CON2 000FC5                                             _SSP1CON3 000FCB  
                                           _SSP2CON3 000F69                                             _SSP1STAT 000FC7  
             com_command_readCalibration@send_buffer 0013                                    ___wmul@multiplier 0001  
                command_builder_add_char@send_buffer 0001                         ?_com_command_readCalibration 0013  
                                _com_command_setAmps 1386                                  _com_command_testLED 1414  
                               __end_of_SPISlaveInit 11D4             process_data@end_of_transmission_received 0050  
                                         ?_send_data 0003                                             __Hrparam 0000  
                               ?_com_command_setAmps 0015                                 ?_com_command_testLED 0013  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 000D                                    __CFG_P2BMX$PORTB5 000000  
                   __end_of_send_end_of_transmission 1466                                     __size_of___lwdiv 0052  
                                   __size_of___lwmod 0042                     __end_of_command_builder_add_char 1130  
                           __end_of_command_builder1 10DA                             __end_of_command_builder2 102C  
                           __end_of_command_builder3 0E10                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                           _ANSELCbits 000F3A  
                                         strcmp2@inx 000A                         process_data_parameterize@inx 000E  
                                    ___lwdiv@divisor 0003                                      ___lwdiv@counter 0007  
                      ??_com_command_readCalibration 0015                                             __ptext10 11D4  
                                           __ptext11 0CCE                                             __ptext20 0658  
                                           __ptext12 121A                                             __ptext21 128E  
                                           __ptext13 1130                                             __ptext30 1182  
                                           __ptext22 0A0C                                             __ptext14 1386  
                                           __ptext23 1450                                             __ptext15 1432  
                                           __ptext24 1084                                             __ptext16 0FB2  
                                           __ptext25 0D72                                             __ptext17 0C0E  
                                           __ptext26 0F36                                             __ptext18 12EC  
                                           __ptext27 10DA                                             __ptext19 12BE  
                                           __ptext28 088C                                             __ptext29 13AC  
                                       _SSP1CON1bits 000FC6                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                        __size_of_main 0058  
                                      strmatch@match 0012                                        __size_of_init 0026  
                                      __size_of_utoa 00A4                                          ??_delayMS10 0003  
                         ?_process_data_parameterize 0007                                ??_com_command_setAmps 0017  
                              ??_com_command_testLED 0015                      com_command_setVolts@send_buffer 0015  
                                       _SSP1STATbits 000FC7                              __size_of_communications 0096  
                                           _strmatch 128E                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 001C                                          _OSCTUNEbits 000F9B  
                           ??_com_command_setVersion 0017                                __size_of_process_data 002E  
                             process_data@parameters 001E                                     ___lwmod@dividend 0001  
                      communications@no_more_to_send 0051                                      main@togglePulse 0053  
                                        ??_send_data 0005                                            strmatch@a 000C  
                                          strmatch@b 000E                                           _OSCCONbits 000FD3  
               __size_of_com_command_readCalibration 001E                                  _resetCommunications 0B38  
                          __size_of_SPI_receive_data 0028                                             utoa@base 000C  
                                           strcmp2@a 0001                                             strcmp2@b 0003  
                                       _process_data 12BE                                    _SPI_transmit_wait 005B  
                                    ___lwmod@divisor 0003                                __size_of_SPISlaveInit 0052  
                          communications@send_buffer 008A                                      ___lwmod@counter 0005  
                   __size_of_process_data_parameters 0234                                    __CFG_T3CMX$PORTC0 000000  
                               ?_resetCommunications 001E                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0011                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0001  
