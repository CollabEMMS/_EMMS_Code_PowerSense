

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Mar 26 22:28:21 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     _ANSELAbits	set	3896
    36  0000                     _ANSELBbits	set	3897
    37  0000                     _LATBbits	set	3978
    38  0000                     _LATCbits	set	3979
    39  0000                     _PORTBbits	set	3969
    40  0000                     _SSP2BUF	set	3951
    41  0000                     _SSP2CON1bits	set	3948
    42  0000                     _SSP2CON3	set	3945
    43  0000                     _SSP2CON3bits	set	3945
    44  0000                     _SSP2STATbits	set	3949
    45  0000                     _TRISAbits	set	3986
    46  0000                     _TRISBbits	set	3987
    47  0000                     _TRISCbits	set	3988
    48                           
    49                           	psect	smallconst
    50  000600                     __psmallconst:
    51                           	opt stack 0
    52  000600  00                 	db	0
    53  000601                     __stringdata:
    54                           	opt stack 0
    55  000601                     STR_5:
    56                           
    57                           ; BSR set to: 15
    58  000601  43                 	db	67	;'C'
    59  000602  75                 	db	117	;'u'
    60  000603  72                 	db	114	;'r'
    61  000604  72                 	db	114	;'r'
    62  000605  65                 	db	101	;'e'
    63  000606  6E                 	db	110	;'n'
    64  000607  74                 	db	116	;'t'
    65  000608  00                 	db	0
    66  000609                     STR_3:
    67                           
    68                           ; BSR set to: 15
    69  000609  50                 	db	80	;'P'
    70  00060A  6F                 	db	111	;'o'
    71  00060B  77                 	db	119	;'w'
    72  00060C  65                 	db	101	;'e'
    73  00060D  72                 	db	114	;'r'
    74  00060E  00                 	db	0
    75  00060F                     STR_4:
    76                           
    77                           ; BSR set to: 15
    78  00060F  56                 	db	86	;'V'
    79  000610  6F                 	db	111	;'o'
    80  000611  6C                 	db	108	;'l'
    81  000612  74                 	db	116	;'t'
    82  000613  73                 	db	115	;'s'
    83  000614  00                 	db	0
    84  000615                     STR_11:
    85                           
    86                           ; BSR set to: 15
    87  000615  4C                 	db	76	;'L'
    88  000616  45                 	db	69	;'E'
    89  000617  44                 	db	68	;'D'
    90  000618  42                 	db	66	;'B'
    91  000619  00                 	db	0
    92  00061A                     STR_10:
    93                           
    94                           ; BSR set to: 15
    95  00061A  44                 	db	68	;'D'
    96  00061B  61                 	db	97	;'a'
    97  00061C  74                 	db	116	;'t'
    98  00061D  61                 	db	97	;'a'
    99  00061E  00                 	db	0
   100  00061F                     STR_6:
   101                           
   102                           ; BSR set to: 15
   103  00061F  52                 	db	82	;'R'
   104  000620  65                 	db	101	;'e'
   105  000621  61                 	db	97	;'a'
   106  000622  64                 	db	100	;'d'
   107  000623  00                 	db	0
   108  000624                     STR_20:
   109                           
   110                           ; BSR set to: 15
   111  000624  43                 	db	67	;'C'
   112  000625  6F                 	db	111	;'o'
   113  000626  6E                 	db	110	;'n'
   114  000627  66                 	db	102	;'f'
   115  000628  00                 	db	0
   116  000629                     STR_1:
   117                           
   118                           ; BSR set to: 15
   119  000629  45                 	db	69	;'E'
   120  00062A  4E                 	db	78	;'N'
   121  00062B  44                 	db	68	;'D'
   122  00062C  00                 	db	0
   123  00062D                     STR_15:
   124                           
   125                           ; BSR set to: 15
   126  00062D  4F                 	db	79	;'O'
   127  00062E  66                 	db	102	;'f'
   128  00062F  66                 	db	102	;'f'
   129  000630  00                 	db	0
   130  000631                     STR_2:
   131                           
   132                           ; BSR set to: 15
   133  000631  53                 	db	83	;'S'
   134  000632  65                 	db	101	;'e'
   135  000633  74                 	db	116	;'t'
   136  000634  00                 	db	0
   137  000635                     STR_12:
   138                           
   139                           ; BSR set to: 15
   140  000635  4F                 	db	79	;'O'
   141  000636  6E                 	db	110	;'n'
   142  000637  00                 	db	0
   143  000638                     __end_of__stringdata:
   144                           	opt stack 0
   145                           
   146                           ; #config settings
   147  000638  00                 	db	0	; dummy byte at the end
   148  0000                     
   149                           	psect	cinit
   150  00115C                     __pcinit:
   151                           	opt stack 0
   152  00115C                     start_initialization:
   153                           	opt stack 0
   154  00115C                     __initialization:
   155                           	opt stack 0
   156                           
   157                           ; Clear objects allocated to BANK0 (84 bytes)
   158  00115C  EE00  F060         	lfsr	0,__pbssBANK0
   159  001160  0E54               	movlw	84
   160  001162                     clear_0:
   161  001162  6AEE               	clrf	postinc0,c
   162  001164  06E8               	decf	wreg,f,c
   163  001166  E1FD               	bnz	clear_0
   164                           
   165                           ; Clear objects allocated to COMRAM (5 bytes)
   166  001168  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   167  00116A  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   168  00116C  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   169  00116E  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   170  001170  6A57               	clrf	__pbssCOMRAM& (0+255),c
   171  001172                     end_of_initialization:
   172                           	opt stack 0
   173  001172                     __end_of__initialization:
   174                           	opt stack 0
   175  001172  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176  001174  6EF8               	movwf	tblptru,c
   177  001176  0100               	movlb	0
   178  001178  EFBE  F008         	goto	_main	;jump to C main() function
   179                           tblptru	equ	0xFF8
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	bssCOMRAM
   184  000057                     __pbssCOMRAM:
   185                           	opt stack 0
   186  000057                     _SPI_transmit_wait:
   187                           	opt stack 0
   188  000057                     	ds	1
   189  000058                     communications@end_of_transmission_received:
   190                           	opt stack 0
   191  000058                     	ds	1
   192  000059                     communications@last_state_active:
   193                           	opt stack 0
   194  000059                     	ds	1
   195  00005A                     communications@receive_current_state:
   196                           	opt stack 0
   197  00005A                     	ds	1
   198  00005B                     receive_data@my_status:
   199                           	opt stack 0
   200  00005B                     	ds	1
   201                           tblptru	equ	0xFF8
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	bssBANK0
   206  000060                     __pbssBANK0:
   207                           	opt stack 0
   208  000060                     communications@receive_buffer:
   209                           	opt stack 0
   210  000060                     	ds	42
   211  00008A                     communications@send_buffer:
   212                           	opt stack 0
   213  00008A                     	ds	42
   214                           tblptru	equ	0xFF8
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	opt stack 0
   221  000001                     ?_strcmp2:
   222                           	opt stack 0
   223  000001                     ?___wmul:
   224                           	opt stack 0
   225  000001                     SPI_send_data@data:
   226                           	opt stack 0
   227  000001                     delayMS@a:
   228                           	opt stack 0
   229  000001                     command_builder_add_char@send_buffer:
   230                           	opt stack 0
   231  000001                     strcmp2@a:
   232                           	opt stack 0
   233  000001                     SPI_receive_data@data:
   234                           	opt stack 0
   235  000001                     ___wmul@multiplier:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000001                     	ds	1
   240  000002                     SPI_send_data@sendGood:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x1
   244  000002                     	ds	1
   245  000003                     command_builder_add_char@data:
   246                           	opt stack 0
   247  000003                     SPI_receive_data@recvGood:
   248                           	opt stack 0
   249  000003                     delayMS@i:
   250                           	opt stack 0
   251  000003                     send_data@send_buffer:
   252                           	opt stack 0
   253  000003                     strcmp2@b:
   254                           	opt stack 0
   255  000003                     ___wmul@multiplicand:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259  000003                     	ds	1
   260  000004                     ??_command_builder_add_char:
   261  000004                     receive_data@receive_buffer:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     ??_send_data:
   267  000005                     ??_strcmp2:
   268  000005                     delayMS@j:
   269                           	opt stack 0
   270  000005                     command_builder_add_string@send_buffer:
   271                           	opt stack 0
   272  000005                     ___wmul@product:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276  000005                     	ds	1
   277  000006                     ??_receive_data:
   278                           
   279                           ; 0 bytes @ 0x5
   280  000006                     	ds	1
   281  000007                     receive_data@data:
   282                           	opt stack 0
   283  000007                     send_data@send_end:
   284                           	opt stack 0
   285  000007                     init@i:
   286                           	opt stack 0
   287  000007                     process_data_parameterize@parameters:
   288                           	opt stack 0
   289  000007                     command_builder_add_string@data_string:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x6
   293  000007                     	ds	1
   294  000008                     strcmp2@match:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x7
   298  000008                     	ds	1
   299  000009                     ??_command_builder_add_string:
   300  000009                     process_data_parameterize@buffer_to_parameterize:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x8
   304  000009                     	ds	1
   305  00000A                     strcmp2@inx:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x9
   309  00000A                     	ds	1
   310  00000B                     ??_process_data_parameterize:
   311  00000B                     command_builder_add_string@inx:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xA
   315  00000B                     	ds	1
   316  00000C                     strmatch@a:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0xB
   320  00000C                     	ds	1
   321  00000D                     command_builder1@send_buffer:
   322                           	opt stack 0
   323  00000D                     command_builder2@send_buffer:
   324                           	opt stack 0
   325  00000D                     command_builder3@send_buffer:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0xC
   329  00000D                     	ds	1
   330  00000E                     process_data_parameterize@inx:
   331                           	opt stack 0
   332  00000E                     strmatch@b:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xD
   336  00000E                     	ds	1
   337  00000F                     command_builder1@data1:
   338                           	opt stack 0
   339  00000F                     command_builder2@data1:
   340                           	opt stack 0
   341  00000F                     command_builder3@data1:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0xE
   345  00000F                     	ds	1
   346  000010                     process_data_parameterize@parameter_index:
   347                           	opt stack 0
   348  000010                     strmatch@result:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0xF
   352  000010                     	ds	1
   353  000011                     process_data_parameterize@parameter_position:
   354                           	opt stack 0
   355  000011                     command_builder2@data2:
   356                           	opt stack 0
   357  000011                     command_builder3@data2:
   358                           	opt stack 0
   359  000011                     send_end_of_transmission@send_buffer:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x10
   363  000011                     	ds	1
   364  000012                     strmatch@match:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x11
   368  000012                     	ds	1
   369  000013                     command_builder3@data3:
   370                           	opt stack 0
   371  000013                     com_command_testLED@send_buffer:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x12
   375  000013                     	ds	2
   376  000015                     resetCommunications@send_buffer:
   377                           	opt stack 0
   378  000015                     process_data_parameters@parameters:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x14
   382  000015                     	ds	2
   383  000017                     process_data_parameters@send_buffer:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x16
   387  000017                     	ds	2
   388  000019                     ??_process_data_parameters:
   389                           
   390                           ; 0 bytes @ 0x18
   391  000019                     	ds	1
   392  00001A                     process_data_parameters@end_of_transmission_received:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x19
   396  00001A                     	ds	1
   397  00001B                     process_data@receive_buffer:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x1A
   401  00001B                     	ds	2
   402  00001D                     process_data@send_buffer:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x1C
   406  00001D                     	ds	2
   407  00001F                     process_data@parameters:
   408                           	opt stack 0
   409                           
   410                           ; 50 bytes @ 0x1E
   411  00001F                     	ds	50
   412  000051                     process_data@end_of_transmission_received:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x50
   416  000051                     	ds	1
   417  000052                     ??_communications:
   418                           
   419                           ; 0 bytes @ 0x51
   420  000052                     	ds	1
   421  000053                     communications@no_more_to_send:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x52
   425  000053                     	ds	1
   426  000054                     communications@firstTime:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x53
   430  000054                     	ds	1
   431  000055                     main@togglePulse:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x54
   435  000055                     	ds	2
   436                           tblptru	equ	0xFF8
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 157 in file "Current_Sense_Main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  togglePulse     2   84[COMRAM] unsigned int 
   450 ;; Return value:  Size  Location     Type
   451 ;;		None               void
   452 ;; Registers used:
   453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   459 ;;      Params:         0       0       0       0       0       0       0
   460 ;;      Locals:         2       0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0
   462 ;;      Totals:         2       0       0       0       0       0       0
   463 ;;Total ram usage:        2 bytes
   464 ;; Hardware stack levels required when called:    7
   465 ;; This function calls:
   466 ;;		_SPISlaveInit
   467 ;;		_communications
   468 ;;		_init
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text0
   475  00117C                     __ptext0:
   476                           	opt stack 0
   477  00117C                     _main:
   478                           	opt stack 24
   479                           
   480                           ;Current_Sense_Main.c: 158: unsigned int togglePulse = 0;
   481                           
   482                           ; BSR set to: 15
   483                           ;incstack = 0
   484  00117C  0E00               	movlw	0
   485  00117E  6E56               	movwf	main@togglePulse+1,c
   486  001180  0E00               	movlw	0
   487  001182  6E55               	movwf	main@togglePulse,c
   488                           
   489                           ;Current_Sense_Main.c: 159: init();
   490  001184  ECF3  F007         	call	_init	;wreg free
   491                           
   492                           ;Current_Sense_Main.c: 161: SPISlaveInit( );
   493  001188  ECCA  F007         	call	_SPISlaveInit	;wreg free
   494                           
   495                           ;Current_Sense_Main.c: 185: communications( 1 );
   496  00118C  0E01               	movlw	1
   497  00118E  EC8E  F005         	call	_communications
   498  001192                     l1641:
   499                           
   500                           ;Current_Sense_Main.c: 189: communications( 0 );
   501  001192  0E00               	movlw	0
   502  001194  EC8E  F005         	call	_communications
   503  001198  D7FC               	goto	l1641
   504  00119A                     __end_of_main:
   505                           	opt stack 0
   506                           tblptru	equ	0xFF8
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           
   510 ;; *************** function _init *****************
   511 ;; Defined at:
   512 ;;		line 213 in file "Current_Sense_Main.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  i               2    6[COMRAM] unsigned int 
   517 ;; Return value:  Size  Location     Type
   518 ;;		None               void
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   526 ;;      Params:         0       0       0       0       0       0       0
   527 ;;      Locals:         2       0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0
   529 ;;      Totals:         2       0       0       0       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    1
   533 ;; This function calls:
   534 ;;		_delayMS
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541  000FE6                     __ptext1:
   542                           	opt stack 0
   543  000FE6                     _init:
   544                           	opt stack 29
   545                           
   546                           ;Current_Sense_Main.c: 214: TRISAbits.TRISA0 = 0;
   547                           
   548                           ;incstack = 0
   549  000FE6  9092               	bcf	3986,0,c	;volatile
   550                           
   551                           ;Current_Sense_Main.c: 215: TRISAbits.TRISA1 = 1;
   552  000FE8  8292               	bsf	3986,1,c	;volatile
   553                           
   554                           ;Current_Sense_Main.c: 216: TRISBbits.RB4 = 0;
   555  000FEA  9893               	bcf	3987,4,c	;volatile
   556                           
   557                           ;Current_Sense_Main.c: 217: TRISCbits.TRISC3 = 0;
   558  000FEC  9694               	bcf	3988,3,c	;volatile
   559                           
   560                           ;Current_Sense_Main.c: 218: TRISCbits.TRISC5 = 0;
   561  000FEE  9A94               	bcf	3988,5,c	;volatile
   562                           
   563                           ;Current_Sense_Main.c: 219: TRISCbits.TRISC6 = 0;
   564  000FF0  9C94               	bcf	3988,6,c	;volatile
   565                           
   566                           ;Current_Sense_Main.c: 220: TRISCbits.TRISC7 = 0;
   567  000FF2  9E94               	bcf	3988,7,c	;volatile
   568                           
   569                           ;Current_Sense_Main.c: 221: ANSELAbits.ANSA1 = 0b0;
   570  000FF4  010F               	movlb	15	; () banked
   571  000FF6  9338               	bcf	56,1,b	;volatile
   572                           
   573                           ;Current_Sense_Main.c: 223: LATCbits.LATC6 = 1;
   574  000FF8  8C8B               	bsf	3979,6,c	;volatile
   575                           
   576                           ;Current_Sense_Main.c: 224: LATCbits.LATC3 = 1;
   577  000FFA  868B               	bsf	3979,3,c	;volatile
   578                           
   579                           ;Current_Sense_Main.c: 225: LATCbits.LATC5 = 1;
   580  000FFC  8A8B               	bsf	3979,5,c	;volatile
   581                           
   582                           ;Current_Sense_Main.c: 226: LATCbits.LATC7 = 1;
   583  000FFE  8E8B               	bsf	3979,7,c	;volatile
   584                           
   585                           ; BSR set to: 15
   586                           ;Current_Sense_Main.c: 230: unsigned int i;
   587                           ;Current_Sense_Main.c: 231: for (i = 0; i < 5; i++) {
   588  001000  0E00               	movlw	0
   589  001002  6E08               	movwf	init@i+1,c
   590  001004  0E00               	movlw	0
   591  001006  6E07               	movwf	init@i,c
   592  001008                     
   593                           ; BSR set to: 15
   594  001008  0E05               	movlw	5
   595  00100A  5C07               	subwf	init@i,w,c
   596  00100C  0E00               	movlw	0
   597  00100E  5808               	subwfb	init@i+1,w,c
   598  001010  B0D8               	btfsc	status,0,c
   599  001012  0012               	return	
   600                           
   601                           ;Current_Sense_Main.c: 232: LATBbits.LATB4 = 1;
   602                           
   603                           ; BSR set to: 15
   604  001014  888A               	bsf	3978,4,c	;volatile
   605                           
   606                           ;Current_Sense_Main.c: 233: delayMS(25);
   607  001016  0E00               	movlw	0
   608  001018  6E02               	movwf	delayMS@a+1,c
   609  00101A  0E19               	movlw	25
   610  00101C  6E01               	movwf	delayMS@a,c
   611  00101E  EC3D  F008         	call	_delayMS	;wreg free
   612                           
   613                           ;Current_Sense_Main.c: 234: LATBbits.LATB4 = 0;
   614  001022  988A               	bcf	3978,4,c	;volatile
   615                           
   616                           ;Current_Sense_Main.c: 235: delayMS(25);
   617  001024  0E00               	movlw	0
   618  001026  6E02               	movwf	delayMS@a+1,c
   619  001028  0E19               	movlw	25
   620  00102A  6E01               	movwf	delayMS@a,c
   621  00102C  EC3D  F008         	call	_delayMS	;wreg free
   622  001030  4A07               	infsnz	init@i,f,c
   623  001032  2A08               	incf	init@i+1,f,c
   624  001034  D7E9               	goto	L1
   625  001036                     __end_of_init:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           status	equ	0xFD8
   631                           
   632 ;; *************** function _communications *****************
   633 ;; Defined at:
   634 ;;		line 97 in file "SlaveComm_PIC18.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  firstTime       1    wreg     unsigned char 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  firstTime       1   83[COMRAM] unsigned char 
   639 ;;  no_more_to_s    1   82[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;		None               void
   642 ;; Registers used:
   643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         0       0       0       0       0       0       0
   650 ;;      Locals:         2       0       0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0       0       0
   652 ;;      Totals:         3       0       0       0       0       0       0
   653 ;;Total ram usage:        3 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		_process_data
   658 ;;		_receive_data
   659 ;;		_resetCommunications
   660 ;;		_send_data
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text2
   667  000B1C                     __ptext2:
   668                           	opt stack 0
   669  000B1C                     _communications:
   670                           	opt stack 24
   671                           
   672                           ;incstack = 0
   673                           ;communications@firstTime stored from wreg
   674  000B1C  6E54               	movwf	communications@firstTime,c
   675                           
   676                           ;SlaveComm_PIC18.c: 99: static struct buffer receive_buffer;
   677                           ;SlaveComm_PIC18.c: 100: static struct buffer send_buffer;
   678                           ;SlaveComm_PIC18.c: 102: static bool end_of_transmission_received = 0;
   679                           ;SlaveComm_PIC18.c: 103: bool no_more_to_send;
   680                           ;SlaveComm_PIC18.c: 105: static enum receive_status receive_current_state;
   681                           ;SlaveComm_PIC18.c: 109: if( firstTime == 1 )
   682  000B1E  0454               	decf	communications@firstTime,w,c
   683  000B20  A4D8               	btfss	status,2,c
   684  000B22  D00F               	goto	l1601
   685                           
   686                           ;SlaveComm_PIC18.c: 110: {
   687                           ;SlaveComm_PIC18.c: 112: send_buffer.write_position = 0;
   688  000B24  0E00               	movlw	0
   689  000B26  0100               	movlb	0	; () banked
   690  000B28  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
   691                           
   692                           ;SlaveComm_PIC18.c: 113: send_buffer.read_position = 0;
   693  000B2A  0E00               	movlw	0
   694  000B2C  0100               	movlb	0	; () banked
   695  000B2E  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
   696                           
   697                           ; BSR set to: 0
   698                           ;SlaveComm_PIC18.c: 114: resetCommunications( &send_buffer );
   699  000B30  0100               	movlb	0	; () banked
   700  000B32  0E00               	movlw	high communications@send_buffer
   701  000B34  6E16               	movwf	resetCommunications@send_buffer+1,c
   702  000B36  0100               	movlb	0	; () banked
   703  000B38  0E8A               	movlw	low communications@send_buffer
   704  000B3A  6E15               	movwf	resetCommunications@send_buffer,c
   705  000B3C  EC1B  F008         	call	_resetCommunications	;wreg free
   706                           
   707                           ;SlaveComm_PIC18.c: 115: }
   708  000B40  0012               	return	
   709  000B42                     l1601:
   710                           
   711                           ;SlaveComm_PIC18.c: 116: else
   712                           ;SlaveComm_PIC18.c: 117: {
   713                           ;SlaveComm_PIC18.c: 118: receive_current_state = receive_data( &receive_buffer );
   714  000B42  0100               	movlb	0	; () banked
   715  000B44  0E00               	movlw	high communications@receive_buffer
   716  000B46  6E05               	movwf	receive_data@receive_buffer+1,c
   717  000B48  0100               	movlb	0	; () banked
   718  000B4A  0E60               	movlw	low communications@receive_buffer
   719  000B4C  6E04               	movwf	receive_data@receive_buffer,c
   720  000B4E  ECF1  F005         	call	_receive_data	;wreg free
   721  000B52  6E5A               	movwf	communications@receive_current_state,c
   722                           
   723                           ;SlaveComm_PIC18.c: 120: switch( receive_current_state )
   724  000B54  D015               	goto	l1609
   725  000B56                     l1603:
   726                           
   727                           ;SlaveComm_PIC18.c: 130: if( process_data( &receive_buffer, &send_buffer ) == 1 )
   728  000B56  0100               	movlb	0	; () banked
   729  000B58  0E00               	movlw	high communications@receive_buffer
   730  000B5A  6E1C               	movwf	process_data@receive_buffer+1,c
   731  000B5C  0100               	movlb	0	; () banked
   732  000B5E  0E60               	movlw	low communications@receive_buffer
   733  000B60  6E1B               	movwf	process_data@receive_buffer,c
   734  000B62  0100               	movlb	0	; () banked
   735  000B64  0E00               	movlw	high communications@send_buffer
   736  000B66  6E1E               	movwf	process_data@send_buffer+1,c
   737  000B68  0100               	movlb	0	; () banked
   738  000B6A  0E8A               	movlw	low communications@send_buffer
   739  000B6C  6E1D               	movwf	process_data@send_buffer,c
   740  000B6E  EC70  F008         	call	_process_data	;wreg free
   741  000B72  6E52               	movwf	??_communications& (0+255),c
   742  000B74  0452               	decf	??_communications,w,c
   743  000B76  A4D8               	btfss	status,2,c
   744  000B78  D00D               	goto	l1611
   745                           
   746                           ;SlaveComm_PIC18.c: 131: {
   747                           ;SlaveComm_PIC18.c: 132: end_of_transmission_received = 1;
   748  000B7A  0E01               	movlw	1
   749  000B7C  6E58               	movwf	communications@end_of_transmission_received,c
   750  000B7E  D00A               	goto	l1611
   751  000B80                     l1609:
   752  000B80  505A               	movf	communications@receive_current_state,w,c
   753                           
   754                           ; Switch size 1, requested type "space"
   755                           ; Number of cases is 3, Range of values is 0 to 2
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte           10     6 (average)
   759                           ;	Chosen strategy is simple_byte
   760  000B82  0A00               	xorlw	0	; case 0
   761  000B84  B4D8               	btfsc	status,2,c
   762  000B86  D006               	goto	l1611
   763  000B88  0A01               	xorlw	1	; case 1
   764  000B8A  B4D8               	btfsc	status,2,c
   765  000B8C  D003               	goto	l1611
   766  000B8E  0A03               	xorlw	3	; case 2
   767  000B90  B4D8               	btfsc	status,2,c
   768  000B92  D7E1               	goto	l1603
   769  000B94                     l1611:
   770                           
   771                           ;SlaveComm_PIC18.c: 138: if( end_of_transmission_received == 1 )
   772  000B94  0458               	decf	communications@end_of_transmission_received,w,c
   773  000B96  A4D8               	btfss	status,2,c
   774  000B98  D002               	goto	l1615
   775                           
   776                           ;SlaveComm_PIC18.c: 139: {
   777                           ;SlaveComm_PIC18.c: 144: end_of_transmission_received = 0;
   778  000B9A  0E00               	movlw	0
   779  000B9C  6E58               	movwf	communications@end_of_transmission_received,c
   780  000B9E                     l1615:
   781                           
   782                           ;SlaveComm_PIC18.c: 145: }
   783                           ;SlaveComm_PIC18.c: 147: no_more_to_send = send_data( &send_buffer );
   784  000B9E  0100               	movlb	0	; () banked
   785  000BA0  0E00               	movlw	high communications@send_buffer
   786  000BA2  6E04               	movwf	send_data@send_buffer+1,c
   787  000BA4  0100               	movlb	0	; () banked
   788  000BA6  0E8A               	movlw	low communications@send_buffer
   789  000BA8  6E03               	movwf	send_data@send_buffer,c
   790  000BAA  ECFE  F006         	call	_send_data	;wreg free
   791  000BAE  6E53               	movwf	communications@no_more_to_send,c
   792                           
   793                           ;SlaveComm_PIC18.c: 150: static bool last_state_active = 0;
   794                           ;SlaveComm_PIC18.c: 151: if( PORTBbits.SS2 == 0b1 )
   795  000BB0  A081               	btfss	3969,0,c	;volatile
   796  000BB2  D009               	goto	l121
   797                           
   798                           ;SlaveComm_PIC18.c: 152: {
   799                           ;SlaveComm_PIC18.c: 153: LATBbits.LATB4 = 0;
   800  000BB4  988A               	bcf	3978,4,c	;volatile
   801                           
   802                           ;SlaveComm_PIC18.c: 154: last_state_active = 0;
   803  000BB6  0E00               	movlw	0
   804  000BB8  6E59               	movwf	communications@last_state_active,c
   805                           
   806                           ;SlaveComm_PIC18.c: 156: if ( last_state_active == 1)
   807  000BBA  0459               	decf	communications@last_state_active,w,c
   808  000BBC  A4D8               	btfss	status,2,c
   809  000BBE  0012               	return	
   810                           
   811                           ;SlaveComm_PIC18.c: 157: {
   812                           ;SlaveComm_PIC18.c: 159: last_state_active = 0;
   813  000BC0  0E00               	movlw	0
   814  000BC2  6E59               	movwf	communications@last_state_active,c
   815  000BC4  0012               	return	
   816  000BC6                     l121:
   817                           
   818                           ;SlaveComm_PIC18.c: 162: else
   819                           ;SlaveComm_PIC18.c: 163: {
   820                           ;SlaveComm_PIC18.c: 164: LATBbits.LATB4 = 1;
   821  000BC6  888A               	bsf	3978,4,c	;volatile
   822                           
   823                           ;SlaveComm_PIC18.c: 165: if( last_state_active == 0)
   824  000BC8  6659               	tstfsz	communications@last_state_active,c
   825  000BCA  D008               	goto	l1629
   826                           
   827                           ;SlaveComm_PIC18.c: 166: {
   828                           ;SlaveComm_PIC18.c: 168: resetCommunications( &send_buffer );
   829  000BCC  0100               	movlb	0	; () banked
   830  000BCE  0E00               	movlw	high communications@send_buffer
   831  000BD0  6E16               	movwf	resetCommunications@send_buffer+1,c
   832  000BD2  0100               	movlb	0	; () banked
   833  000BD4  0E8A               	movlw	low communications@send_buffer
   834  000BD6  6E15               	movwf	resetCommunications@send_buffer,c
   835  000BD8  EC1B  F008         	call	_resetCommunications	;wreg free
   836  000BDC                     l1629:
   837                           
   838                           ;SlaveComm_PIC18.c: 170: }
   839                           ;SlaveComm_PIC18.c: 172: last_state_active = 1;
   840  000BDC  0E01               	movlw	1
   841  000BDE  6E59               	movwf	communications@last_state_active,c
   842  000BE0  0012               	return	
   843  000BE2                     __end_of_communications:
   844                           	opt stack 0
   845                           tblptru	equ	0xFF8
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           status	equ	0xFD8
   849                           
   850 ;; *************** function _send_data *****************
   851 ;; Defined at:
   852 ;;		line 479 in file "SlaveComm_PIC18.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  send_buffer     2    2[COMRAM] PTR struct buffer
   855 ;;		 -> communications@send_buffer(42), 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  send_end        1    6[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      unsigned char 
   860 ;; Registers used:
   861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   867 ;;      Params:         2       0       0       0       0       0       0
   868 ;;      Locals:         1       0       0       0       0       0       0
   869 ;;      Temps:          2       0       0       0       0       0       0
   870 ;;      Totals:         5       0       0       0       0       0       0
   871 ;;Total ram usage:        5 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		_SPI_send_data
   876 ;; This function is called by:
   877 ;;		_communications
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text3
   882  000DFC                     __ptext3:
   883                           	opt stack 0
   884  000DFC                     _send_data:
   885                           	opt stack 28
   886                           
   887                           ;SlaveComm_PIC18.c: 481: bool send_end;
   888                           ;SlaveComm_PIC18.c: 483: if( send_buffer->read_position == send_buffer->write_position )
   889                           
   890                           ;incstack = 0
   891  000DFC  EE20 F029          	lfsr	2,41
   892  000E00  5003               	movf	send_data@send_buffer,w,c
   893  000E02  26D9               	addwf	fsr2l,f,c
   894  000E04  5004               	movf	send_data@send_buffer+1,w,c
   895  000E06  22DA               	addwfc	fsr2h,f,c
   896  000E08  EE10 F028          	lfsr	1,40
   897  000E0C  5003               	movf	send_data@send_buffer,w,c
   898  000E0E  26E1               	addwf	fsr1l,f,c
   899  000E10  5004               	movf	send_data@send_buffer+1,w,c
   900  000E12  22E2               	addwfc	fsr1h,f,c
   901  000E14  50E7               	movf	indf1,w,c
   902  000E16  62DF               	cpfseq	indf2,c
   903  000E18  D006               	goto	l1567
   904                           
   905                           ;SlaveComm_PIC18.c: 484: {
   906                           ;SlaveComm_PIC18.c: 485: send_end = 1;
   907  000E1A  0E01               	movlw	1
   908  000E1C  6E07               	movwf	send_data@send_end,c
   909                           
   910                           ;SlaveComm_PIC18.c: 486: SPI_send_data( '\0' );
   911  000E1E  0E00               	movlw	0
   912  000E20  ECCD  F008         	call	_SPI_send_data
   913                           
   914                           ;SlaveComm_PIC18.c: 487: }
   915  000E24  D031               	goto	l1575
   916  000E26                     l1567:
   917                           
   918                           ;SlaveComm_PIC18.c: 488: else
   919                           ;SlaveComm_PIC18.c: 489: {
   920                           ;SlaveComm_PIC18.c: 490: send_end = 0;
   921  000E26  0E00               	movlw	0
   922  000E28  6E07               	movwf	send_data@send_end,c
   923                           
   924                           ;SlaveComm_PIC18.c: 493: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
   925  000E2A  EE20 F029          	lfsr	2,41
   926  000E2E  5003               	movf	send_data@send_buffer,w,c
   927  000E30  26D9               	addwf	fsr2l,f,c
   928  000E32  5004               	movf	send_data@send_buffer+1,w,c
   929  000E34  22DA               	addwfc	fsr2h,f,c
   930  000E36  50DF               	movf	indf2,w,c
   931  000E38  6E05               	movwf	??_send_data& (0+255),c
   932  000E3A  5005               	movf	??_send_data,w,c
   933  000E3C  0D01               	mullw	1
   934  000E3E  50F3               	movf	prodl,w,c
   935  000E40  2403               	addwf	send_data@send_buffer,w,c
   936  000E42  6ED9               	movwf	fsr2l,c
   937  000E44  50F4               	movf	prodh,w,c
   938  000E46  2004               	addwfc	send_data@send_buffer+1,w,c
   939  000E48  6EDA               	movwf	fsr2h,c
   940  000E4A  50DF               	movf	indf2,w,c
   941  000E4C  ECCD  F008         	call	_SPI_send_data
   942  000E50  6E06               	movwf	(??_send_data+1)& (0+255),c
   943  000E52  0406               	decf	??_send_data+1,w,c
   944  000E54  A4D8               	btfss	status,2,c
   945  000E56  D018               	goto	l1575
   946                           
   947                           ;SlaveComm_PIC18.c: 494: {
   948                           ;SlaveComm_PIC18.c: 496: send_buffer->read_position++;
   949  000E58  EE20 F029          	lfsr	2,41
   950  000E5C  5003               	movf	send_data@send_buffer,w,c
   951  000E5E  26D9               	addwf	fsr2l,f,c
   952  000E60  5004               	movf	send_data@send_buffer+1,w,c
   953  000E62  22DA               	addwfc	fsr2h,f,c
   954  000E64  2ADF               	incf	indf2,f,c
   955                           
   956                           ;SlaveComm_PIC18.c: 497: if( send_buffer->read_position >= 40 )
   957  000E66  EE20 F029          	lfsr	2,41
   958  000E6A  5003               	movf	send_data@send_buffer,w,c
   959  000E6C  26D9               	addwf	fsr2l,f,c
   960  000E6E  5004               	movf	send_data@send_buffer+1,w,c
   961  000E70  22DA               	addwfc	fsr2h,f,c
   962  000E72  0E27               	movlw	39
   963  000E74  64DF               	cpfsgt	indf2,c
   964  000E76  D008               	goto	l1575
   965                           
   966                           ;SlaveComm_PIC18.c: 498: {
   967                           ;SlaveComm_PIC18.c: 499: send_buffer->read_position = 0;
   968  000E78  EE20 F029          	lfsr	2,41
   969  000E7C  5003               	movf	send_data@send_buffer,w,c
   970  000E7E  26D9               	addwf	fsr2l,f,c
   971  000E80  5004               	movf	send_data@send_buffer+1,w,c
   972  000E82  22DA               	addwfc	fsr2h,f,c
   973  000E84  0E00               	movlw	0
   974  000E86  6EDF               	movwf	indf2,c
   975  000E88                     l1575:
   976                           
   977                           ;SlaveComm_PIC18.c: 500: }
   978                           ;SlaveComm_PIC18.c: 501: }
   979                           ;SlaveComm_PIC18.c: 502: }
   980                           ;SlaveComm_PIC18.c: 504: return send_end;
   981  000E88  5007               	movf	send_data@send_end,w,c
   982  000E8A  0012               	return	
   983  000E8C                     __end_of_send_data:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           indf1	equ	0xFE7
   991                           fsr1h	equ	0xFE2
   992                           fsr1l	equ	0xFE1
   993                           indf2	equ	0xFDF
   994                           fsr2h	equ	0xFDA
   995                           fsr2l	equ	0xFD9
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _SPI_send_data *****************
   999 ;; Defined at:
  1000 ;;		line 577 in file "SlaveComm_PIC18.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  data            1    wreg     unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  data            1    0[COMRAM] unsigned char 
  1005 ;;  sendGood        1    1[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      unsigned char 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         0       0       0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0
  1018 ;;      Totals:         2       0       0       0       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_send_data
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text4
  1029  00119A                     __ptext4:
  1030                           	opt stack 0
  1031  00119A                     _SPI_send_data:
  1032                           	opt stack 28
  1033                           
  1034                           ;incstack = 0
  1035                           ;SPI_send_data@data stored from wreg
  1036  00119A  6E01               	movwf	SPI_send_data@data,c
  1037                           
  1038                           ;SlaveComm_PIC18.c: 579: bool sendGood = 0;
  1039  00119C  0E00               	movlw	0
  1040  00119E  6E02               	movwf	SPI_send_data@sendGood,c
  1041                           
  1042                           ;SlaveComm_PIC18.c: 581: if( SPI_transmit_wait == 0 )
  1043  0011A0  6657               	tstfsz	_SPI_transmit_wait,c
  1044  0011A2  D006               	goto	l1495
  1045                           
  1046                           ;SlaveComm_PIC18.c: 582: {
  1047                           ;SlaveComm_PIC18.c: 583: SSP2BUF = data;
  1048  0011A4  C001  FF6F         	movff	SPI_send_data@data,3951	;volatile
  1049                           
  1050                           ;SlaveComm_PIC18.c: 584: SPI_transmit_wait = 1;
  1051  0011A8  0E01               	movlw	1
  1052  0011AA  6E57               	movwf	_SPI_transmit_wait,c
  1053                           
  1054                           ;SlaveComm_PIC18.c: 585: sendGood = 1;
  1055  0011AC  0E01               	movlw	1
  1056  0011AE  D001               	goto	L2
  1057  0011B0                     l1495:
  1058                           
  1059                           ;SlaveComm_PIC18.c: 587: else
  1060                           ;SlaveComm_PIC18.c: 588: {
  1061                           ;SlaveComm_PIC18.c: 589: sendGood = 0;
  1062  0011B0  0E00               	movlw	0
  1063  0011B2                     L2:
  1064  0011B2  6E02               	movwf	SPI_send_data@sendGood,c
  1065                           
  1066                           ;SlaveComm_PIC18.c: 590: }
  1067                           ;SlaveComm_PIC18.c: 592: return sendGood;
  1068  0011B4  5002               	movf	SPI_send_data@sendGood,w,c
  1069  0011B6  0012               	return	
  1070  0011B8                     __end_of_SPI_send_data:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           prodh	equ	0xFF4
  1074                           prodl	equ	0xFF3
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           indf1	equ	0xFE7
  1078                           fsr1h	equ	0xFE2
  1079                           fsr1l	equ	0xFE1
  1080                           indf2	equ	0xFDF
  1081                           fsr2h	equ	0xFDA
  1082                           fsr2l	equ	0xFD9
  1083                           status	equ	0xFD8
  1084                           
  1085 ;; *************** function _resetCommunications *****************
  1086 ;; Defined at:
  1087 ;;		line 180 in file "SlaveComm_PIC18.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1090 ;;		 -> communications@send_buffer(42), 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1102 ;;      Params:         2       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0
  1105 ;;      Totals:         2       0       0       0       0       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    4
  1109 ;; This function calls:
  1110 ;;		_com_command_testLED
  1111 ;;		_delayMS
  1112 ;; This function is called by:
  1113 ;;		_communications
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text5
  1118  001036                     __ptext5:
  1119                           	opt stack 0
  1120  001036                     _resetCommunications:
  1121                           	opt stack 25
  1122                           
  1123                           ;SlaveComm_PIC18.c: 182: SSP2CON1bits.SSPEN = 0;
  1124                           
  1125                           ;incstack = 0
  1126  001036  9A6C               	bcf	3948,5,c	;volatile
  1127                           
  1128                           ;SlaveComm_PIC18.c: 183: delayMS(10);
  1129  001038  0E00               	movlw	0
  1130  00103A  6E02               	movwf	delayMS@a+1,c
  1131  00103C  0E0A               	movlw	10
  1132  00103E  6E01               	movwf	delayMS@a,c
  1133  001040  EC3D  F008         	call	_delayMS	;wreg free
  1134                           
  1135                           ;SlaveComm_PIC18.c: 184: SSP2CON1bits.SSPEN = 1;
  1136  001044  8A6C               	bsf	3948,5,c	;volatile
  1137                           
  1138                           ;SlaveComm_PIC18.c: 187: SSP2CON1bits.WCOL = 0;
  1139  001046  9E6C               	bcf	3948,7,c	;volatile
  1140                           
  1141                           ;SlaveComm_PIC18.c: 188: SPI_transmit_wait = 0;
  1142  001048  0E00               	movlw	0
  1143  00104A  6E57               	movwf	_SPI_transmit_wait,c
  1144                           
  1145                           ;SlaveComm_PIC18.c: 190: send_buffer->read_position = 0;
  1146  00104C  EE20 F029          	lfsr	2,41
  1147  001050  5015               	movf	resetCommunications@send_buffer,w,c
  1148  001052  26D9               	addwf	fsr2l,f,c
  1149  001054  5016               	movf	resetCommunications@send_buffer+1,w,c
  1150  001056  22DA               	addwfc	fsr2h,f,c
  1151  001058  0E00               	movlw	0
  1152  00105A  6EDF               	movwf	indf2,c
  1153                           
  1154                           ;SlaveComm_PIC18.c: 191: send_buffer->write_position = 0;
  1155  00105C  EE20 F028          	lfsr	2,40
  1156  001060  5015               	movf	resetCommunications@send_buffer,w,c
  1157  001062  26D9               	addwf	fsr2l,f,c
  1158  001064  5016               	movf	resetCommunications@send_buffer+1,w,c
  1159  001066  22DA               	addwfc	fsr2h,f,c
  1160  001068  0E00               	movlw	0
  1161  00106A  6EDF               	movwf	indf2,c
  1162                           
  1163                           ;SlaveComm_PIC18.c: 194: com_command_testLED( send_buffer );
  1164  00106C  C016  F014         	movff	resetCommunications@send_buffer+1,com_command_testLED@send_buffer+1
  1165  001070  C015  F013         	movff	resetCommunications@send_buffer,com_command_testLED@send_buffer
  1166  001074  ECDC  F008         	call	_com_command_testLED	;wreg free
  1167  001078  0012               	return	
  1168  00107A                     __end_of_resetCommunications:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           prodh	equ	0xFF4
  1172                           prodl	equ	0xFF3
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           indf1	equ	0xFE7
  1176                           fsr1h	equ	0xFE2
  1177                           fsr1l	equ	0xFE1
  1178                           indf2	equ	0xFDF
  1179                           fsr2h	equ	0xFDA
  1180                           fsr2l	equ	0xFD9
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _delayMS *****************
  1184 ;; Defined at:
  1185 ;;		line 240 in file "Current_Sense_Main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  a               2    0[COMRAM] unsigned int 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  j               2    4[COMRAM] unsigned int 
  1190 ;;  i               2    2[COMRAM] unsigned int 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;		None               void
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         2       0       0       0       0       0       0
  1201 ;;      Locals:         4       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         6       0       0       0       0       0       0
  1204 ;;Total ram usage:        6 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_init
  1210 ;;		_resetCommunications
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text6
  1215  00107A                     __ptext6:
  1216                           	opt stack 0
  1217  00107A                     _delayMS:
  1218                           	opt stack 29
  1219                           
  1220                           ;Current_Sense_Main.c: 241: unsigned int i, j;
  1221                           ;Current_Sense_Main.c: 243: for (i = 0; i < a; i++)
  1222                           
  1223                           ;incstack = 0
  1224  00107A  0E00               	movlw	0
  1225  00107C  6E04               	movwf	delayMS@i+1,c
  1226  00107E  0E00               	movlw	0
  1227  001080  6E03               	movwf	delayMS@i,c
  1228  001082  D00F               	goto	l1369
  1229  001084                     l1357:
  1230                           
  1231                           ;Current_Sense_Main.c: 244: for (j = 0; j < 100; j++);
  1232  001084  0E00               	movlw	0
  1233  001086  6E06               	movwf	delayMS@j+1,c
  1234  001088  0E00               	movlw	0
  1235  00108A  6E05               	movwf	delayMS@j,c
  1236  00108C  0E64               	movlw	100
  1237  00108E  5C05               	subwf	delayMS@j,w,c
  1238  001090  0E00               	movlw	0
  1239  001092  5806               	subwfb	delayMS@j+1,w,c
  1240  001094  B0D8               	btfsc	status,0,c
  1241  001096  D003               	goto	l1367
  1242  001098  4A05               	infsnz	delayMS@j,f,c
  1243  00109A  2A06               	incf	delayMS@j+1,f,c
  1244  00109C  D7F7               	goto	L3
  1245  00109E                     l1367:
  1246  00109E  4A03               	infsnz	delayMS@i,f,c
  1247  0010A0  2A04               	incf	delayMS@i+1,f,c
  1248  0010A2                     l1369:
  1249  0010A2  5001               	movf	delayMS@a,w,c
  1250  0010A4  5C03               	subwf	delayMS@i,w,c
  1251  0010A6  5002               	movf	delayMS@a+1,w,c
  1252  0010A8  5804               	subwfb	delayMS@i+1,w,c
  1253  0010AA  B0D8               	btfsc	status,0,c
  1254  0010AC  0012               	return	
  1255  0010AE  D7EA               	goto	l1357
  1256  0010B0                     __end_of_delayMS:
  1257                           	opt stack 0
  1258                           tblptru	equ	0xFF8
  1259                           prodh	equ	0xFF4
  1260                           prodl	equ	0xFF3
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           indf1	equ	0xFE7
  1264                           fsr1h	equ	0xFE2
  1265                           fsr1l	equ	0xFE1
  1266                           indf2	equ	0xFDF
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           status	equ	0xFD8
  1270                           
  1271 ;; *************** function _com_command_testLED *****************
  1272 ;; Defined at:
  1273 ;;		line 605 in file "SlaveComm_PIC18.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1276 ;;		 -> communications@send_buffer(42), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;		None               void
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1288 ;;      Params:         2       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0
  1291 ;;      Totals:         2       0       0       0       0       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		_command_builder2
  1297 ;; This function is called by:
  1298 ;;		_resetCommunications
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text7
  1303  0011B8                     __ptext7:
  1304                           	opt stack 0
  1305  0011B8                     _com_command_testLED:
  1306                           	opt stack 25
  1307                           
  1308                           ;SlaveComm_PIC18.c: 607: command_builder2( send_buffer, "Read", "LEDB" );
  1309                           
  1310                           ;incstack = 0
  1311  0011B8  C014  F00E         	movff	com_command_testLED@send_buffer+1,command_builder2@send_buffer+1
  1312  0011BC  C013  F00D         	movff	com_command_testLED@send_buffer,command_builder2@send_buffer
  1313  0011C0  0E06               	movlw	high STR_6
  1314  0011C2  6E10               	movwf	command_builder2@data1+1,c
  1315  0011C4  0E1F               	movlw	low STR_6
  1316  0011C6  6E0F               	movwf	command_builder2@data1,c
  1317  0011C8  0E06               	movlw	high STR_11
  1318  0011CA  6E12               	movwf	command_builder2@data2+1,c
  1319  0011CC  0E15               	movlw	low STR_11
  1320  0011CE  6E11               	movwf	command_builder2@data2,c
  1321  0011D0  EC52  F006         	call	_command_builder2	;wreg free
  1322  0011D4  0012               	return	
  1323  0011D6                     __end_of_com_command_testLED:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           prodh	equ	0xFF4
  1327                           prodl	equ	0xFF3
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           indf1	equ	0xFE7
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           indf2	equ	0xFDF
  1334                           fsr2h	equ	0xFDA
  1335                           fsr2l	equ	0xFD9
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _command_builder2 *****************
  1339 ;; Defined at:
  1340 ;;		line 407 in file "SlaveComm_PIC18.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  1343 ;;		 -> communications@send_buffer(42), 
  1344 ;;  data1           2   14[COMRAM] PTR unsigned char 
  1345 ;;		 -> STR_23(5), 
  1346 ;;  data2           2   16[COMRAM] PTR unsigned char 
  1347 ;;		 -> STR_24(5), 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1359 ;;      Params:         6       0       0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0
  1362 ;;      Totals:         6       0       0       0       0       0       0
  1363 ;;Total ram usage:        6 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    2
  1366 ;; This function calls:
  1367 ;;		_command_builder_add_char
  1368 ;;		_command_builder_add_string
  1369 ;; This function is called by:
  1370 ;;		_com_command_testLED
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text8
  1375  000CA4                     __ptext8:
  1376                           	opt stack 0
  1377  000CA4                     _command_builder2:
  1378                           	opt stack 25
  1379                           
  1380                           ;SlaveComm_PIC18.c: 409: command_builder_add_char( send_buffer,'#' );
  1381                           
  1382                           ;incstack = 0
  1383  000CA4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1384  000CA8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1385  000CAC  0E23               	movlw	35
  1386  000CAE  6E03               	movwf	command_builder_add_char@data,c
  1387  000CB0  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1388                           
  1389                           ;SlaveComm_PIC18.c: 410: command_builder_add_char( send_buffer,'#' );
  1390  000CB4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1391  000CB8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1392  000CBC  0E23               	movlw	35
  1393  000CBE  6E03               	movwf	command_builder_add_char@data,c
  1394  000CC0  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1395                           
  1396                           ;SlaveComm_PIC18.c: 411: command_builder_add_char( send_buffer,'#' );
  1397  000CC4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1398  000CC8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1399  000CCC  0E23               	movlw	35
  1400  000CCE  6E03               	movwf	command_builder_add_char@data,c
  1401  000CD0  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1402                           
  1403                           ;SlaveComm_PIC18.c: 412: command_builder_add_char( send_buffer,'#' );
  1404  000CD4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1405  000CD8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1406  000CDC  0E23               	movlw	35
  1407  000CDE  6E03               	movwf	command_builder_add_char@data,c
  1408  000CE0  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1409                           
  1410                           ;SlaveComm_PIC18.c: 413: command_builder_add_char( send_buffer,'#' );
  1411  000CE4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1412  000CE8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1413  000CEC  0E23               	movlw	35
  1414  000CEE  6E03               	movwf	command_builder_add_char@data,c
  1415  000CF0  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1416                           
  1417                           ;SlaveComm_PIC18.c: 414: command_builder_add_char( send_buffer,'#' );
  1418  000CF4  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1419  000CF8  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1420  000CFC  0E23               	movlw	35
  1421  000CFE  6E03               	movwf	command_builder_add_char@data,c
  1422  000D00  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1423                           
  1424                           ;SlaveComm_PIC18.c: 415: command_builder_add_char( send_buffer, '!' );
  1425  000D04  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1426  000D08  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1427  000D0C  0E21               	movlw	33
  1428  000D0E  6E03               	movwf	command_builder_add_char@data,c
  1429  000D10  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1430                           
  1431                           ;SlaveComm_PIC18.c: 416: command_builder_add_string( send_buffer, data1 );
  1432  000D14  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1433  000D18  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1434  000D1C  C010  F008         	movff	command_builder2@data1+1,command_builder_add_string@data_string+1
  1435  000D20  C00F  F007         	movff	command_builder2@data1,command_builder_add_string@data_string
  1436  000D24  EC46  F007         	call	_command_builder_add_string	;wreg free
  1437                           
  1438                           ;SlaveComm_PIC18.c: 417: command_builder_add_char( send_buffer, ';' );
  1439  000D28  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1440  000D2C  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1441  000D30  0E3B               	movlw	59
  1442  000D32  6E03               	movwf	command_builder_add_char@data,c
  1443  000D34  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1444                           
  1445                           ;SlaveComm_PIC18.c: 418: command_builder_add_string( send_buffer, data2 );
  1446  000D38  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1447  000D3C  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1448  000D40  C012  F008         	movff	command_builder2@data2+1,command_builder_add_string@data_string+1
  1449  000D44  C011  F007         	movff	command_builder2@data2,command_builder_add_string@data_string
  1450  000D48  EC46  F007         	call	_command_builder_add_string	;wreg free
  1451                           
  1452                           ;SlaveComm_PIC18.c: 419: command_builder_add_char( send_buffer, '*' );
  1453  000D4C  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1454  000D50  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1455  000D54  0E2A               	movlw	42
  1456  000D56  6E03               	movwf	command_builder_add_char@data,c
  1457  000D58  EC9F  F007         	call	_command_builder_add_char	;wreg free
  1458  000D5C  0012               	return	
  1459  000D5E                     __end_of_command_builder2:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           indf1	equ	0xFE7
  1467                           fsr1h	equ	0xFE2
  1468                           fsr1l	equ	0xFE1
  1469                           indf2	equ	0xFDF
  1470                           fsr2h	equ	0xFDA
  1471                           fsr2l	equ	0xFD9
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _receive_data *****************
  1475 ;; Defined at:
  1476 ;;		line 199 in file "SlaveComm_PIC18.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  receive_buff    2    3[COMRAM] PTR struct buffer
  1479 ;;		 -> communications@receive_buffer(42), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  data            1    6[COMRAM] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      enum E7493
  1484 ;; Registers used:
  1485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1491 ;;      Params:         2       0       0       0       0       0       0
  1492 ;;      Locals:         1       0       0       0       0       0       0
  1493 ;;      Temps:          1       0       0       0       0       0       0
  1494 ;;      Totals:         4       0       0       0       0       0       0
  1495 ;;Total ram usage:        4 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    1
  1498 ;; This function calls:
  1499 ;;		_SPI_receive_data
  1500 ;; This function is called by:
  1501 ;;		_communications
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text9
  1506  000BE2                     __ptext9:
  1507                           	opt stack 0
  1508  000BE2                     _receive_data:
  1509                           	opt stack 28
  1510                           
  1511                           ;SlaveComm_PIC18.c: 201: char data;
  1512                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  1513                           ;SlaveComm_PIC18.c: 205: if( my_status == receive_end_command )
  1514                           
  1515                           ;incstack = 0
  1516  000BE2  505B               	movf	receive_data@my_status,w,c
  1517  000BE4  0A02               	xorlw	2
  1518  000BE6  A4D8               	btfss	status,2,c
  1519  000BE8  D002               	goto	l1523
  1520                           
  1521                           ;SlaveComm_PIC18.c: 206: {
  1522                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  1523  000BEA  0E00               	movlw	0
  1524  000BEC  6E5B               	movwf	receive_data@my_status,c
  1525  000BEE                     l1523:
  1526                           
  1527                           ;SlaveComm_PIC18.c: 208: }
  1528                           ;SlaveComm_PIC18.c: 210: if( SPI_receive_data( &data ) == 1 )
  1529  000BEE  0E00               	movlw	high receive_data@data
  1530  000BF0  6E02               	movwf	SPI_receive_data@data+1,c
  1531  000BF2  0E07               	movlw	low receive_data@data
  1532  000BF4  6E01               	movwf	SPI_receive_data@data,c
  1533  000BF6  EC87  F008         	call	_SPI_receive_data	;wreg free
  1534  000BFA  6E06               	movwf	??_receive_data& (0+255),c
  1535  000BFC  0406               	decf	??_receive_data,w,c
  1536  000BFE  A4D8               	btfss	status,2,c
  1537  000C00  D04F               	goto	l134
  1538                           
  1539                           ;SlaveComm_PIC18.c: 211: {
  1540                           ;SlaveComm_PIC18.c: 212: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  1541  000C02  5007               	movf	receive_data@data,w,c
  1542  000C04  0A21               	xorlw	33
  1543  000C06  A4D8               	btfss	status,2,c
  1544  000C08  D015               	goto	l1535
  1545  000C0A  045B               	decf	receive_data@my_status,w,c
  1546  000C0C  B4D8               	btfsc	status,2,c
  1547  000C0E  D012               	goto	l1535
  1548                           
  1549                           ;SlaveComm_PIC18.c: 213: {
  1550                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  1551  000C10  0E01               	movlw	1
  1552  000C12  6E5B               	movwf	receive_data@my_status,c
  1553                           
  1554                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  1555  000C14  EE20 F029          	lfsr	2,41
  1556  000C18  5004               	movf	receive_data@receive_buffer,w,c
  1557  000C1A  26D9               	addwf	fsr2l,f,c
  1558  000C1C  5005               	movf	receive_data@receive_buffer+1,w,c
  1559  000C1E  22DA               	addwfc	fsr2h,f,c
  1560  000C20  0E00               	movlw	0
  1561  000C22  6EDF               	movwf	indf2,c
  1562                           
  1563                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  1564  000C24  EE20 F028          	lfsr	2,40
  1565  000C28  5004               	movf	receive_data@receive_buffer,w,c
  1566  000C2A  26D9               	addwf	fsr2l,f,c
  1567  000C2C  5005               	movf	receive_data@receive_buffer+1,w,c
  1568  000C2E  22DA               	addwfc	fsr2h,f,c
  1569  000C30  0E00               	movlw	0
  1570  000C32  6EDF               	movwf	indf2,c
  1571  000C34                     l1535:
  1572                           
  1573                           ;SlaveComm_PIC18.c: 217: }
  1574                           ;SlaveComm_PIC18.c: 219: if( my_status == receive_in_command )
  1575  000C34  045B               	decf	receive_data@my_status,w,c
  1576  000C36  A4D8               	btfss	status,2,c
  1577  000C38  D02A               	goto	l1545
  1578                           
  1579                           ;SlaveComm_PIC18.c: 220: {
  1580                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  1581  000C3A  EE20 F028          	lfsr	2,40
  1582  000C3E  5004               	movf	receive_data@receive_buffer,w,c
  1583  000C40  26D9               	addwf	fsr2l,f,c
  1584  000C42  5005               	movf	receive_data@receive_buffer+1,w,c
  1585  000C44  22DA               	addwfc	fsr2h,f,c
  1586  000C46  50DF               	movf	indf2,w,c
  1587  000C48  6E06               	movwf	??_receive_data& (0+255),c
  1588  000C4A  5006               	movf	??_receive_data,w,c
  1589  000C4C  0D01               	mullw	1
  1590  000C4E  50F3               	movf	prodl,w,c
  1591  000C50  2404               	addwf	receive_data@receive_buffer,w,c
  1592  000C52  6ED9               	movwf	fsr2l,c
  1593  000C54  50F4               	movf	prodh,w,c
  1594  000C56  2005               	addwfc	receive_data@receive_buffer+1,w,c
  1595  000C58  6EDA               	movwf	fsr2h,c
  1596  000C5A  C007  FFDF         	movff	receive_data@data,indf2
  1597                           
  1598                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  1599  000C5E  EE20 F028          	lfsr	2,40
  1600  000C62  5004               	movf	receive_data@receive_buffer,w,c
  1601  000C64  26D9               	addwf	fsr2l,f,c
  1602  000C66  5005               	movf	receive_data@receive_buffer+1,w,c
  1603  000C68  22DA               	addwfc	fsr2h,f,c
  1604  000C6A  2ADF               	incf	indf2,f,c
  1605                           
  1606                           ;SlaveComm_PIC18.c: 224: if( receive_buffer->write_position >= 40 )
  1607  000C6C  EE20 F028          	lfsr	2,40
  1608  000C70  5004               	movf	receive_data@receive_buffer,w,c
  1609  000C72  26D9               	addwf	fsr2l,f,c
  1610  000C74  5005               	movf	receive_data@receive_buffer+1,w,c
  1611  000C76  22DA               	addwfc	fsr2h,f,c
  1612  000C78  0E27               	movlw	39
  1613  000C7A  64DF               	cpfsgt	indf2,c
  1614  000C7C  D008               	goto	l1545
  1615                           
  1616                           ;SlaveComm_PIC18.c: 225: {
  1617                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = ( 40 - 1 );
  1618  000C7E  EE20 F028          	lfsr	2,40
  1619  000C82  5004               	movf	receive_data@receive_buffer,w,c
  1620  000C84  26D9               	addwf	fsr2l,f,c
  1621  000C86  5005               	movf	receive_data@receive_buffer+1,w,c
  1622  000C88  22DA               	addwfc	fsr2h,f,c
  1623  000C8A  0E27               	movlw	39
  1624  000C8C  6EDF               	movwf	indf2,c
  1625  000C8E                     l1545:
  1626                           
  1627                           ;SlaveComm_PIC18.c: 227: }
  1628                           ;SlaveComm_PIC18.c: 228: }
  1629                           ;SlaveComm_PIC18.c: 230: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  1630  000C8E  045B               	decf	receive_data@my_status,w,c
  1631  000C90  A4D8               	btfss	status,2,c
  1632  000C92  D006               	goto	l134
  1633  000C94  5007               	movf	receive_data@data,w,c
  1634  000C96  0A2A               	xorlw	42
  1635  000C98  A4D8               	btfss	status,2,c
  1636  000C9A  D002               	goto	l134
  1637                           
  1638                           ;SlaveComm_PIC18.c: 231: {
  1639                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  1640  000C9C  0E02               	movlw	2
  1641  000C9E  6E5B               	movwf	receive_data@my_status,c
  1642  000CA0                     l134:
  1643                           
  1644                           ;SlaveComm_PIC18.c: 233: }
  1645                           ;SlaveComm_PIC18.c: 234: }
  1646                           ;SlaveComm_PIC18.c: 236: return my_status;
  1647  000CA0  505B               	movf	receive_data@my_status,w,c
  1648  000CA2  0012               	return	
  1649  000CA4                     __end_of_receive_data:
  1650                           	opt stack 0
  1651                           tblptru	equ	0xFF8
  1652                           prodh	equ	0xFF4
  1653                           prodl	equ	0xFF3
  1654                           postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           indf1	equ	0xFE7
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           indf2	equ	0xFDF
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _SPI_receive_data *****************
  1665 ;; Defined at:
  1666 ;;		line 556 in file "SlaveComm_PIC18.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  data            2    0[COMRAM] PTR unsigned char 
  1669 ;;		 -> receive_data@data(1), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  recvGood        1    2[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      unsigned char 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr2l, fsr2h, status,2
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1681 ;;      Params:         2       0       0       0       0       0       0
  1682 ;;      Locals:         1       0       0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0       0
  1684 ;;      Totals:         3       0       0       0       0       0       0
  1685 ;;Total ram usage:        3 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_receive_data
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text10
  1695  00110E                     __ptext10:
  1696                           	opt stack 0
  1697  00110E                     _SPI_receive_data:
  1698                           	opt stack 28
  1699                           
  1700                           ;SlaveComm_PIC18.c: 559: bool recvGood = 0;
  1701                           
  1702                           ;incstack = 0
  1703  00110E  0E00               	movlw	0
  1704  001110  6E03               	movwf	SPI_receive_data@recvGood,c
  1705                           
  1706                           ;SlaveComm_PIC18.c: 561: if( SSP2STATbits.BF == 1 )
  1707  001112  A06D               	btfss	3949,0,c	;volatile
  1708  001114  D00C               	goto	l1387
  1709                           
  1710                           ;SlaveComm_PIC18.c: 562: {
  1711                           ;SlaveComm_PIC18.c: 563: *data = SSP2BUF;
  1712  001116  C001  FFD9         	movff	SPI_receive_data@data,fsr2l
  1713  00111A  C002  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  1714  00111E  CF6F FFDF          	movff	3951,indf2	;volatile
  1715                           
  1716                           ;SlaveComm_PIC18.c: 564: recvGood = 1;
  1717  001122  0E01               	movlw	1
  1718  001124  6E03               	movwf	SPI_receive_data@recvGood,c
  1719                           
  1720                           ;SlaveComm_PIC18.c: 565: SSP2CON1bits.WCOL = 0;
  1721  001126  9E6C               	bcf	3948,7,c	;volatile
  1722                           
  1723                           ;SlaveComm_PIC18.c: 566: SPI_transmit_wait = 0;
  1724  001128  0E00               	movlw	0
  1725  00112A  6E57               	movwf	_SPI_transmit_wait,c
  1726                           
  1727                           ;SlaveComm_PIC18.c: 567: }
  1728  00112C  D002               	goto	l238
  1729  00112E                     l1387:
  1730                           
  1731                           ;SlaveComm_PIC18.c: 568: else
  1732                           ;SlaveComm_PIC18.c: 569: {
  1733                           ;SlaveComm_PIC18.c: 570: recvGood = 0;
  1734  00112E  0E00               	movlw	0
  1735  001130  6E03               	movwf	SPI_receive_data@recvGood,c
  1736  001132                     l238:
  1737                           
  1738                           ;SlaveComm_PIC18.c: 571: }
  1739                           ;SlaveComm_PIC18.c: 573: return recvGood;
  1740  001132  5003               	movf	SPI_receive_data@recvGood,w,c
  1741  001134  0012               	return	
  1742  001136                     __end_of_SPI_receive_data:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           indf1	equ	0xFE7
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           indf2	equ	0xFDF
  1753                           fsr2h	equ	0xFDA
  1754                           fsr2l	equ	0xFD9
  1755                           status	equ	0xFD8
  1756                           
  1757 ;; *************** function _process_data *****************
  1758 ;; Defined at:
  1759 ;;		line 239 in file "SlaveComm_PIC18.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  receive_buff    2   26[COMRAM] PTR struct buffer
  1762 ;;		 -> communications@receive_buffer(42), 
  1763 ;;  send_buffer     2   28[COMRAM] PTR struct buffer
  1764 ;;		 -> communications@send_buffer(42), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  parameters     50   30[COMRAM] unsigned char [10][5]
  1767 ;;  end_of_trans    1   80[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         4       0       0       0       0       0       0
  1778 ;;      Locals:        51       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0
  1780 ;;      Totals:        55       0       0       0       0       0       0
  1781 ;;Total ram usage:       55 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    5
  1784 ;; This function calls:
  1785 ;;		_process_data_parameterize
  1786 ;;		_process_data_parameters
  1787 ;; This function is called by:
  1788 ;;		_communications
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text11
  1793  0010E0                     __ptext11:
  1794                           	opt stack 0
  1795  0010E0                     _process_data:
  1796                           	opt stack 24
  1797                           
  1798                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  1799                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  1800                           ;SlaveComm_PIC18.c: 248: process_data_parameterize( parameters, receive_buffer );
  1801                           
  1802                           ;incstack = 0
  1803  0010E0  0E00               	movlw	high process_data@parameters
  1804  0010E2  6E08               	movwf	process_data_parameterize@parameters+1,c
  1805  0010E4  0E1F               	movlw	low process_data@parameters
  1806  0010E6  6E07               	movwf	process_data_parameterize@parameters,c
  1807  0010E8  C01C  F00A         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  1808  0010EC  C01B  F009         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  1809  0010F0  EC30  F004         	call	_process_data_parameterize	;wreg free
  1810                           
  1811                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  1812  0010F4  0E00               	movlw	high process_data@parameters
  1813  0010F6  6E16               	movwf	process_data_parameters@parameters+1,c
  1814  0010F8  0E1F               	movlw	low process_data@parameters
  1815  0010FA  6E15               	movwf	process_data_parameters@parameters,c
  1816  0010FC  C01E  F018         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  1817  001100  C01D  F017         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  1818  001104  EC1D  F003         	call	_process_data_parameters	;wreg free
  1819  001108  6E51               	movwf	process_data@end_of_transmission_received,c
  1820                           
  1821                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  1822  00110A  5051               	movf	process_data@end_of_transmission_received,w,c
  1823  00110C  0012               	return	
  1824  00110E                     __end_of_process_data:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           prodh	equ	0xFF4
  1828                           prodl	equ	0xFF3
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           indf1	equ	0xFE7
  1832                           fsr1h	equ	0xFE2
  1833                           fsr1l	equ	0xFE1
  1834                           indf2	equ	0xFDF
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _process_data_parameters *****************
  1840 ;; Defined at:
  1841 ;;		line 315 in file "SlaveComm_PIC18.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  1844 ;;		 -> process_data@parameters(50), 
  1845 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  1846 ;;		 -> communications@send_buffer(42), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  end_of_trans    1   25[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         4       0       0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0       0       0
  1861 ;;      Totals:         6       0       0       0       0       0       0
  1862 ;;Total ram usage:        6 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    4
  1865 ;; This function calls:
  1866 ;;		_command_builder3
  1867 ;;		_send_end_of_transmission
  1868 ;;		_strmatch
  1869 ;; This function is called by:
  1870 ;;		_process_data
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text12
  1875  00063A                     __ptext12:
  1876                           	opt stack 0
  1877  00063A                     _process_data_parameters:
  1878                           	opt stack 24
  1879                           
  1880                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  1881                           
  1882                           ;incstack = 0
  1883  00063A  0E00               	movlw	0
  1884  00063C  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  1885                           
  1886                           ;SlaveComm_PIC18.c: 327: if( strmatch( parameters[0], "END" ) == 1 )
  1887  00063E  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1888  000642  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1889  000646  0E06               	movlw	high STR_1
  1890  000648  6E0F               	movwf	strmatch@b+1,c
  1891  00064A  0E29               	movlw	low STR_1
  1892  00064C  6E0E               	movwf	strmatch@b,c
  1893  00064E  EC58  F008         	call	_strmatch	;wreg free
  1894  000652  6E19               	movwf	??_process_data_parameters& (0+255),c
  1895  000654  0419               	decf	??_process_data_parameters,w,c
  1896  000656  A4D8               	btfss	status,2,c
  1897  000658  D003               	goto	l1439
  1898                           
  1899                           ;SlaveComm_PIC18.c: 328: {
  1900                           ;SlaveComm_PIC18.c: 329: end_of_transmission_received = 1;
  1901  00065A  0E01               	movlw	1
  1902  00065C  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  1903                           
  1904                           ;SlaveComm_PIC18.c: 330: }
  1905  00065E  D0FE               	goto	l1481
  1906  000660                     l1439:
  1907                           
  1908                           ;SlaveComm_PIC18.c: 331: else if( strmatch( parameters[0], "Set" ) == 1 )
  1909  000660  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1910  000664  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1911  000668  0E06               	movlw	high STR_2
  1912  00066A  6E0F               	movwf	strmatch@b+1,c
  1913  00066C  0E31               	movlw	low STR_2
  1914  00066E  6E0E               	movwf	strmatch@b,c
  1915  000670  EC58  F008         	call	_strmatch	;wreg free
  1916  000674  6E19               	movwf	??_process_data_parameters& (0+255),c
  1917  000676  0419               	decf	??_process_data_parameters,w,c
  1918  000678  A4D8               	btfss	status,2,c
  1919  00067A  D02D               	goto	l1451
  1920                           
  1921                           ;SlaveComm_PIC18.c: 332: {
  1922                           ;SlaveComm_PIC18.c: 333: if( strmatch( parameters[1], "Power" ) == 1 )
  1923  00067C  0E0A               	movlw	10
  1924  00067E  2415               	addwf	process_data_parameters@parameters,w,c
  1925  000680  6E0C               	movwf	strmatch@a,c
  1926  000682  0E00               	movlw	0
  1927  000684  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1928  000686  6E0D               	movwf	strmatch@a+1,c
  1929  000688  0E06               	movlw	high STR_3
  1930  00068A  6E0F               	movwf	strmatch@b+1,c
  1931  00068C  0E09               	movlw	low STR_3
  1932  00068E  6E0E               	movwf	strmatch@b,c
  1933  000690  EC58  F008         	call	_strmatch	;wreg free
  1934  000694  6E19               	movwf	??_process_data_parameters& (0+255),c
  1935  000696  0419               	decf	??_process_data_parameters,w,c
  1936  000698  B4D8               	btfsc	status,2,c
  1937  00069A  D0E0               	goto	l1481
  1938                           
  1939                           ;SlaveComm_PIC18.c: 338: else if( strmatch( parameters[1], "Volts" ) == 1 )
  1940                           
  1941                           ;SlaveComm_PIC18.c: 334: {
  1942                           ;SlaveComm_PIC18.c: 337: }
  1943  00069C  0E0A               	movlw	10
  1944  00069E  2415               	addwf	process_data_parameters@parameters,w,c
  1945  0006A0  6E0C               	movwf	strmatch@a,c
  1946  0006A2  0E00               	movlw	0
  1947  0006A4  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1948  0006A6  6E0D               	movwf	strmatch@a+1,c
  1949  0006A8  0E06               	movlw	high STR_4
  1950  0006AA  6E0F               	movwf	strmatch@b+1,c
  1951  0006AC  0E0F               	movlw	low STR_4
  1952  0006AE  6E0E               	movwf	strmatch@b,c
  1953  0006B0  EC58  F008         	call	_strmatch	;wreg free
  1954  0006B4  6E19               	movwf	??_process_data_parameters& (0+255),c
  1955  0006B6  0419               	decf	??_process_data_parameters,w,c
  1956  0006B8  B4D8               	btfsc	status,2,c
  1957  0006BA  D0D0               	goto	l1481
  1958                           
  1959                           ;SlaveComm_PIC18.c: 343: else if( strmatch( parameters[1], "Current" ) == 1 )
  1960                           
  1961                           ;SlaveComm_PIC18.c: 339: {
  1962                           ;SlaveComm_PIC18.c: 342: }
  1963  0006BC  0E0A               	movlw	10
  1964  0006BE  2415               	addwf	process_data_parameters@parameters,w,c
  1965  0006C0  6E0C               	movwf	strmatch@a,c
  1966  0006C2  0E00               	movlw	0
  1967  0006C4  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1968  0006C6  6E0D               	movwf	strmatch@a+1,c
  1969  0006C8  0E06               	movlw	high STR_5
  1970  0006CA  6E0F               	movwf	strmatch@b+1,c
  1971  0006CC  0E01               	movlw	low STR_5
  1972  0006CE  6E0E               	movwf	strmatch@b,c
  1973  0006D0  EC58  F008         	call	_strmatch	;wreg free
  1974  0006D4  D0C3               	goto	l1481
  1975  0006D6                     l1451:
  1976                           
  1977                           ;SlaveComm_PIC18.c: 350: else if( strmatch( parameters[0], "Read" ) == 1 )
  1978  0006D6  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  1979  0006DA  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  1980  0006DE  0E06               	movlw	high STR_6
  1981  0006E0  6E0F               	movwf	strmatch@b+1,c
  1982  0006E2  0E1F               	movlw	low STR_6
  1983  0006E4  6E0E               	movwf	strmatch@b,c
  1984  0006E6  EC58  F008         	call	_strmatch	;wreg free
  1985  0006EA  6E19               	movwf	??_process_data_parameters& (0+255),c
  1986  0006EC  0419               	decf	??_process_data_parameters,w,c
  1987  0006EE  A4D8               	btfss	status,2,c
  1988  0006F0  D02D               	goto	l1463
  1989                           
  1990                           ;SlaveComm_PIC18.c: 351: {
  1991                           ;SlaveComm_PIC18.c: 353: if( strmatch( parameters[1], "Power" ) == 1 )
  1992  0006F2  0E0A               	movlw	10
  1993  0006F4  2415               	addwf	process_data_parameters@parameters,w,c
  1994  0006F6  6E0C               	movwf	strmatch@a,c
  1995  0006F8  0E00               	movlw	0
  1996  0006FA  2016               	addwfc	process_data_parameters@parameters+1,w,c
  1997  0006FC  6E0D               	movwf	strmatch@a+1,c
  1998  0006FE  0E06               	movlw	high STR_3
  1999  000700  6E0F               	movwf	strmatch@b+1,c
  2000  000702  0E09               	movlw	low STR_3
  2001  000704  6E0E               	movwf	strmatch@b,c
  2002  000706  EC58  F008         	call	_strmatch	;wreg free
  2003  00070A  6E19               	movwf	??_process_data_parameters& (0+255),c
  2004  00070C  0419               	decf	??_process_data_parameters,w,c
  2005  00070E  B4D8               	btfsc	status,2,c
  2006  000710  D0A5               	goto	l1481
  2007                           
  2008                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[1], "Volts" ) == 1 )
  2009                           
  2010                           ;SlaveComm_PIC18.c: 354: {
  2011                           ;SlaveComm_PIC18.c: 356: }
  2012  000712  0E0A               	movlw	10
  2013  000714  2415               	addwf	process_data_parameters@parameters,w,c
  2014  000716  6E0C               	movwf	strmatch@a,c
  2015  000718  0E00               	movlw	0
  2016  00071A  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2017  00071C  6E0D               	movwf	strmatch@a+1,c
  2018  00071E  0E06               	movlw	high STR_4
  2019  000720  6E0F               	movwf	strmatch@b+1,c
  2020  000722  0E0F               	movlw	low STR_4
  2021  000724  6E0E               	movwf	strmatch@b,c
  2022  000726  EC58  F008         	call	_strmatch	;wreg free
  2023  00072A  6E19               	movwf	??_process_data_parameters& (0+255),c
  2024  00072C  0419               	decf	??_process_data_parameters,w,c
  2025  00072E  B4D8               	btfsc	status,2,c
  2026  000730  D095               	goto	l1481
  2027                           
  2028                           ;SlaveComm_PIC18.c: 361: else if( strmatch( parameters[1], "Current" ) == 1 )
  2029                           
  2030                           ;SlaveComm_PIC18.c: 358: {
  2031                           ;SlaveComm_PIC18.c: 360: }
  2032  000732  0E0A               	movlw	10
  2033  000734  2415               	addwf	process_data_parameters@parameters,w,c
  2034  000736  6E0C               	movwf	strmatch@a,c
  2035  000738  0E00               	movlw	0
  2036  00073A  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2037  00073C  6E0D               	movwf	strmatch@a+1,c
  2038  00073E  0E06               	movlw	high STR_5
  2039  000740  6E0F               	movwf	strmatch@b+1,c
  2040  000742  0E01               	movlw	low STR_5
  2041  000744  6E0E               	movwf	strmatch@b,c
  2042  000746  EC58  F008         	call	_strmatch	;wreg free
  2043  00074A  D088               	goto	l1481
  2044  00074C                     l1463:
  2045                           
  2046                           ;SlaveComm_PIC18.c: 367: else if( strmatch( parameters[0], "Data" ) == 1 )
  2047  00074C  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2048  000750  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2049  000754  0E06               	movlw	high STR_10
  2050  000756  6E0F               	movwf	strmatch@b+1,c
  2051  000758  0E1A               	movlw	low STR_10
  2052  00075A  6E0E               	movwf	strmatch@b,c
  2053  00075C  EC58  F008         	call	_strmatch	;wreg free
  2054  000760  6E19               	movwf	??_process_data_parameters& (0+255),c
  2055  000762  0419               	decf	??_process_data_parameters,w,c
  2056  000764  A4D8               	btfss	status,2,c
  2057  000766  D056               	goto	l1475
  2058                           
  2059                           ;SlaveComm_PIC18.c: 368: {
  2060                           ;SlaveComm_PIC18.c: 369: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2061  000768  0E0A               	movlw	10
  2062  00076A  2415               	addwf	process_data_parameters@parameters,w,c
  2063  00076C  6E0C               	movwf	strmatch@a,c
  2064  00076E  0E00               	movlw	0
  2065  000770  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2066  000772  6E0D               	movwf	strmatch@a+1,c
  2067  000774  0E06               	movlw	high STR_11
  2068  000776  6E0F               	movwf	strmatch@b+1,c
  2069  000778  0E15               	movlw	low STR_11
  2070  00077A  6E0E               	movwf	strmatch@b,c
  2071  00077C  EC58  F008         	call	_strmatch	;wreg free
  2072  000780  6E19               	movwf	??_process_data_parameters& (0+255),c
  2073  000782  0419               	decf	??_process_data_parameters,w,c
  2074  000784  A4D8               	btfss	status,2,c
  2075  000786  D06A               	goto	l1481
  2076                           
  2077                           ;SlaveComm_PIC18.c: 370: {
  2078                           ;SlaveComm_PIC18.c: 371: if( strmatch( parameters[2], "On" ) == 1 )
  2079  000788  0E14               	movlw	20
  2080  00078A  2415               	addwf	process_data_parameters@parameters,w,c
  2081  00078C  6E0C               	movwf	strmatch@a,c
  2082  00078E  0E00               	movlw	0
  2083  000790  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2084  000792  6E0D               	movwf	strmatch@a+1,c
  2085  000794  0E06               	movlw	high STR_12
  2086  000796  6E0F               	movwf	strmatch@b+1,c
  2087  000798  0E35               	movlw	low STR_12
  2088  00079A  6E0E               	movwf	strmatch@b,c
  2089  00079C  EC58  F008         	call	_strmatch	;wreg free
  2090  0007A0  6E19               	movwf	??_process_data_parameters& (0+255),c
  2091  0007A2  0419               	decf	??_process_data_parameters,w,c
  2092  0007A4  A4D8               	btfss	status,2,c
  2093  0007A6  D013               	goto	l1471
  2094                           
  2095                           ;SlaveComm_PIC18.c: 372: {
  2096                           ;SlaveComm_PIC18.c: 373: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  2097  0007A8  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2098  0007AC  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2099  0007B0  0E06               	movlw	high STR_2
  2100  0007B2  6E10               	movwf	command_builder3@data1+1,c
  2101  0007B4  0E31               	movlw	low STR_2
  2102  0007B6  6E0F               	movwf	command_builder3@data1,c
  2103  0007B8  0E06               	movlw	high STR_11
  2104  0007BA  6E12               	movwf	command_builder3@data2+1,c
  2105  0007BC  0E15               	movlw	low STR_11
  2106  0007BE  6E11               	movwf	command_builder3@data2,c
  2107  0007C0  0E06               	movlw	high STR_15
  2108  0007C2  6E14               	movwf	command_builder3@data3+1,c
  2109  0007C4  0E2D               	movlw	low STR_15
  2110  0007C6  6E13               	movwf	command_builder3@data3,c
  2111  0007C8  ECAF  F006         	call	_command_builder3	;wreg free
  2112                           
  2113                           ;SlaveComm_PIC18.c: 374: }
  2114  0007CC  D047               	goto	l1481
  2115  0007CE                     l1471:
  2116                           
  2117                           ;SlaveComm_PIC18.c: 375: else if( strmatch( parameters[2], "Off" ) == 1 )
  2118  0007CE  0E14               	movlw	20
  2119  0007D0  2415               	addwf	process_data_parameters@parameters,w,c
  2120  0007D2  6E0C               	movwf	strmatch@a,c
  2121  0007D4  0E00               	movlw	0
  2122  0007D6  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2123  0007D8  6E0D               	movwf	strmatch@a+1,c
  2124  0007DA  0E06               	movlw	high STR_15
  2125  0007DC  6E0F               	movwf	strmatch@b+1,c
  2126  0007DE  0E2D               	movlw	low STR_15
  2127  0007E0  6E0E               	movwf	strmatch@b,c
  2128  0007E2  EC58  F008         	call	_strmatch	;wreg free
  2129  0007E6  6E19               	movwf	??_process_data_parameters& (0+255),c
  2130  0007E8  0419               	decf	??_process_data_parameters,w,c
  2131  0007EA  A4D8               	btfss	status,2,c
  2132  0007EC  D037               	goto	l1481
  2133                           
  2134                           ;SlaveComm_PIC18.c: 376: {
  2135                           ;SlaveComm_PIC18.c: 377: command_builder3( send_buffer, "Set", "LEDB", "On" );
  2136  0007EE  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2137  0007F2  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2138  0007F6  0E06               	movlw	high STR_2
  2139  0007F8  6E10               	movwf	command_builder3@data1+1,c
  2140  0007FA  0E31               	movlw	low STR_2
  2141  0007FC  6E0F               	movwf	command_builder3@data1,c
  2142  0007FE  0E06               	movlw	high STR_11
  2143  000800  6E12               	movwf	command_builder3@data2+1,c
  2144  000802  0E15               	movlw	low STR_11
  2145  000804  6E11               	movwf	command_builder3@data2,c
  2146  000806  0E06               	movlw	high STR_12
  2147  000808  6E14               	movwf	command_builder3@data3+1,c
  2148  00080A  0E35               	movlw	low STR_12
  2149  00080C  6E13               	movwf	command_builder3@data3,c
  2150  00080E  ECAF  F006         	call	_command_builder3	;wreg free
  2151  000812  D024               	goto	l1481
  2152  000814                     l1475:
  2153                           
  2154                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[0], "Conf" ) == 1 )
  2155  000814  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2156  000818  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2157  00081C  0E06               	movlw	high STR_20
  2158  00081E  6E0F               	movwf	strmatch@b+1,c
  2159  000820  0E24               	movlw	low STR_20
  2160  000822  6E0E               	movwf	strmatch@b,c
  2161  000824  EC58  F008         	call	_strmatch	;wreg free
  2162  000828  6E19               	movwf	??_process_data_parameters& (0+255),c
  2163  00082A  0419               	decf	??_process_data_parameters,w,c
  2164  00082C  A4D8               	btfss	status,2,c
  2165  00082E  D016               	goto	l1481
  2166                           
  2167                           ;SlaveComm_PIC18.c: 382: {
  2168                           ;SlaveComm_PIC18.c: 383: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2169  000830  0E0A               	movlw	10
  2170  000832  2415               	addwf	process_data_parameters@parameters,w,c
  2171  000834  6E0C               	movwf	strmatch@a,c
  2172  000836  0E00               	movlw	0
  2173  000838  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2174  00083A  6E0D               	movwf	strmatch@a+1,c
  2175  00083C  0E06               	movlw	high STR_11
  2176  00083E  6E0F               	movwf	strmatch@b+1,c
  2177  000840  0E15               	movlw	low STR_11
  2178  000842  6E0E               	movwf	strmatch@b,c
  2179  000844  EC58  F008         	call	_strmatch	;wreg free
  2180  000848  6E19               	movwf	??_process_data_parameters& (0+255),c
  2181  00084A  0419               	decf	??_process_data_parameters,w,c
  2182  00084C  A4D8               	btfss	status,2,c
  2183  00084E  D006               	goto	l1481
  2184                           
  2185                           ;SlaveComm_PIC18.c: 384: {
  2186                           ;SlaveComm_PIC18.c: 385: send_end_of_transmission( send_buffer );
  2187  000850  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2188  000854  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2189  000858  ECEB  F008         	call	_send_end_of_transmission	;wreg free
  2190  00085C                     l1481:
  2191                           
  2192                           ;SlaveComm_PIC18.c: 386: }
  2193                           ;SlaveComm_PIC18.c: 387: }
  2194                           ;SlaveComm_PIC18.c: 393: return end_of_transmission_received;
  2195  00085C  501A               	movf	process_data_parameters@end_of_transmission_received,w,c
  2196  00085E  0012               	return	
  2197  000860                     __end_of_process_data_parameters:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           postinc0	equ	0xFEE
  2203                           wreg	equ	0xFE8
  2204                           indf1	equ	0xFE7
  2205                           fsr1h	equ	0xFE2
  2206                           fsr1l	equ	0xFE1
  2207                           indf2	equ	0xFDF
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function _strmatch *****************
  2213 ;; Defined at:
  2214 ;;		line 507 in file "SlaveComm_PIC18.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  a               2   11[COMRAM] PTR unsigned char 
  2217 ;;		 -> process_data@parameters(50), 
  2218 ;;  b               2   13[COMRAM] PTR unsigned char 
  2219 ;;		 -> STR_21(5), STR_20(5), STR_16(4), STR_12(3), 
  2220 ;;		 -> STR_11(5), STR_10(5), STR_9(8), STR_8(6), 
  2221 ;;		 -> STR_7(6), STR_6(5), STR_5(8), STR_4(6), 
  2222 ;;		 -> STR_3(6), STR_2(4), STR_1(4), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  result          2   15[COMRAM] int 
  2225 ;;  match           1   17[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2235 ;;      Params:         4       0       0       0       0       0       0
  2236 ;;      Locals:         3       0       0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0
  2238 ;;      Totals:         7       0       0       0       0       0       0
  2239 ;;Total ram usage:        7 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    1
  2242 ;; This function calls:
  2243 ;;		_strcmp2
  2244 ;; This function is called by:
  2245 ;;		_process_data_parameters
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text13
  2250  0010B0                     __ptext13:
  2251                           	opt stack 0
  2252  0010B0                     _strmatch:
  2253                           	opt stack 26
  2254                           
  2255                           ;SlaveComm_PIC18.c: 509: int result;
  2256                           ;SlaveComm_PIC18.c: 510: bool match;
  2257                           ;SlaveComm_PIC18.c: 512: result = strcmp2( a, b );
  2258                           
  2259                           ;incstack = 0
  2260  0010B0  C00D  F002         	movff	strmatch@a+1,strcmp2@a+1
  2261  0010B4  C00C  F001         	movff	strmatch@a,strcmp2@a
  2262  0010B8  C00F  F004         	movff	strmatch@b+1,strcmp2@b+1
  2263  0010BC  C00E  F003         	movff	strmatch@b,strcmp2@b
  2264  0010C0  ECEC  F004         	call	_strcmp2	;wreg free
  2265  0010C4  C001  F010         	movff	?_strcmp2,strmatch@result
  2266  0010C8  C002  F011         	movff	?_strcmp2+1,strmatch@result+1
  2267                           
  2268                           ;SlaveComm_PIC18.c: 514: match = ( result == 0 ) ? 1 : 0;
  2269  0010CC  5011               	movf	strmatch@result+1,w,c
  2270  0010CE  1010               	iorwf	strmatch@result,w,c
  2271  0010D0  A4D8               	btfss	status,2,c
  2272  0010D2  D002               	goto	u680
  2273  0010D4  0E01               	movlw	1
  2274  0010D6  D001               	goto	u686
  2275  0010D8                     u680:
  2276  0010D8  0E00               	movlw	0
  2277  0010DA                     u686:
  2278  0010DA  6E12               	movwf	strmatch@match,c
  2279                           
  2280                           ;SlaveComm_PIC18.c: 516: return match;
  2281  0010DC  5012               	movf	strmatch@match,w,c
  2282  0010DE  0012               	return	
  2283  0010E0                     __end_of_strmatch:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           indf1	equ	0xFE7
  2291                           fsr1h	equ	0xFE2
  2292                           fsr1l	equ	0xFE1
  2293                           indf2	equ	0xFDF
  2294                           fsr2h	equ	0xFDA
  2295                           fsr2l	equ	0xFD9
  2296                           status	equ	0xFD8
  2297                           
  2298 ;; *************** function _strcmp2 *****************
  2299 ;; Defined at:
  2300 ;;		line 519 in file "SlaveComm_PIC18.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  a               2    0[COMRAM] PTR unsigned char 
  2303 ;;		 -> process_data@parameters(50), 
  2304 ;;  b               2    2[COMRAM] PTR unsigned char 
  2305 ;;		 -> STR_21(5), STR_20(5), STR_16(4), STR_12(3), 
  2306 ;;		 -> STR_11(5), STR_10(5), STR_9(8), STR_8(6), 
  2307 ;;		 -> STR_7(6), STR_6(5), STR_5(8), STR_4(6), 
  2308 ;;		 -> STR_3(6), STR_2(4), STR_1(4), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  inx             2    9[COMRAM] int 
  2311 ;;  match           2    7[COMRAM] int 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2    0[COMRAM] int 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2321 ;;      Params:         4       0       0       0       0       0       0
  2322 ;;      Locals:         4       0       0       0       0       0       0
  2323 ;;      Temps:          3       0       0       0       0       0       0
  2324 ;;      Totals:        11       0       0       0       0       0       0
  2325 ;;Total ram usage:       11 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_strmatch
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text14
  2335  0009D8                     __ptext14:
  2336                           	opt stack 0
  2337  0009D8                     _strcmp2:
  2338                           	opt stack 26
  2339                           
  2340                           ;SlaveComm_PIC18.c: 521: int inx = 0;
  2341                           
  2342                           ;incstack = 0
  2343  0009D8  0E00               	movlw	0
  2344  0009DA  6E0B               	movwf	strcmp2@inx+1,c
  2345  0009DC  0E00               	movlw	0
  2346  0009DE  6E0A               	movwf	strcmp2@inx,c
  2347                           
  2348                           ;SlaveComm_PIC18.c: 522: int match = 0;
  2349  0009E0  0E00               	movlw	0
  2350  0009E2  6E09               	movwf	strcmp2@match+1,c
  2351  0009E4  0E00               	movlw	0
  2352  0009E6  6E08               	movwf	strcmp2@match,c
  2353                           
  2354                           ;SlaveComm_PIC18.c: 524: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  2355  0009E8  D03B               	goto	l1293
  2356  0009EA                     l1281:
  2357                           
  2358                           ;SlaveComm_PIC18.c: 525: {
  2359                           ;SlaveComm_PIC18.c: 526: if( a[inx] > b[inx] )
  2360  0009EA  C003  F005         	movff	strcmp2@b,??_strcmp2
  2361  0009EE  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2362  0009F2  500A               	movf	strcmp2@inx,w,c
  2363  0009F4  2605               	addwf	??_strcmp2,f,c
  2364  0009F6  500B               	movf	strcmp2@inx+1,w,c
  2365  0009F8  2206               	addwfc	??_strcmp2+1,f,c
  2366  0009FA  C005  FFF6         	movff	??_strcmp2,tblptrl
  2367  0009FE  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2368  000A02                     	if	0	;tblptru may be non-zero
  2369  000A02                     	endif
  2370  000A02                     	if	0	;tblptru may be non-zero
  2371  000A02                     	endif
  2372  000A02  0008               	tblrd		*
  2373  000A04  CFF5 F007          	movff	tablat,??_strcmp2+2
  2374  000A08  500A               	movf	strcmp2@inx,w,c
  2375  000A0A  2401               	addwf	strcmp2@a,w,c
  2376  000A0C  6ED9               	movwf	fsr2l,c
  2377  000A0E  500B               	movf	strcmp2@inx+1,w,c
  2378  000A10  2002               	addwfc	strcmp2@a+1,w,c
  2379  000A12  6EDA               	movwf	fsr2h,c
  2380  000A14  50DF               	movf	indf2,w,c
  2381  000A16  5C07               	subwf	??_strcmp2+2,w,c
  2382  000A18  B0D8               	btfsc	status,0,c
  2383  000A1A  D005               	goto	l1285
  2384                           
  2385                           ;SlaveComm_PIC18.c: 527: {
  2386                           ;SlaveComm_PIC18.c: 528: match = 1;
  2387  000A1C  0E00               	movlw	0
  2388  000A1E  6E09               	movwf	strcmp2@match+1,c
  2389  000A20  0E01               	movlw	1
  2390  000A22  6E08               	movwf	strcmp2@match,c
  2391                           
  2392                           ;SlaveComm_PIC18.c: 529: }
  2393  000A24  D01B               	goto	l1291
  2394  000A26                     l1285:
  2395                           
  2396                           ;SlaveComm_PIC18.c: 530: else if( a[inx] < b[inx] )
  2397  000A26  500A               	movf	strcmp2@inx,w,c
  2398  000A28  2401               	addwf	strcmp2@a,w,c
  2399  000A2A  6ED9               	movwf	fsr2l,c
  2400  000A2C  500B               	movf	strcmp2@inx+1,w,c
  2401  000A2E  2002               	addwfc	strcmp2@a+1,w,c
  2402  000A30  6EDA               	movwf	fsr2h,c
  2403  000A32  50DF               	movf	indf2,w,c
  2404  000A34  6E05               	movwf	??_strcmp2& (0+255),c
  2405  000A36  C003  F006         	movff	strcmp2@b,??_strcmp2+1
  2406  000A3A  C004  F007         	movff	strcmp2@b+1,??_strcmp2+2
  2407  000A3E  500A               	movf	strcmp2@inx,w,c
  2408  000A40  2606               	addwf	??_strcmp2+1,f,c
  2409  000A42  500B               	movf	strcmp2@inx+1,w,c
  2410  000A44  2207               	addwfc	??_strcmp2+2,f,c
  2411  000A46  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  2412  000A4A  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  2413  000A4E                     	if	0	;tblptru may be non-zero
  2414  000A4E                     	endif
  2415  000A4E                     	if	0	;tblptru may be non-zero
  2416  000A4E                     	endif
  2417  000A4E  0008               	tblrd		*
  2418  000A50  50F5               	movf	tablat,w,c
  2419  000A52  5C05               	subwf	??_strcmp2,w,c
  2420  000A54  B0D8               	btfsc	status,0,c
  2421  000A56  D002               	goto	l1291
  2422                           
  2423                           ;SlaveComm_PIC18.c: 531: {
  2424                           ;SlaveComm_PIC18.c: 532: match = -1;
  2425  000A58  6808               	setf	strcmp2@match,c
  2426  000A5A  6809               	setf	strcmp2@match+1,c
  2427  000A5C                     l1291:
  2428                           
  2429                           ;SlaveComm_PIC18.c: 537: }
  2430                           ;SlaveComm_PIC18.c: 539: inx++;
  2431  000A5C  4A0A               	infsnz	strcmp2@inx,f,c
  2432  000A5E  2A0B               	incf	strcmp2@inx+1,f,c
  2433  000A60                     l1293:
  2434  000A60  500A               	movf	strcmp2@inx,w,c
  2435  000A62  2401               	addwf	strcmp2@a,w,c
  2436  000A64  6ED9               	movwf	fsr2l,c
  2437  000A66  500B               	movf	strcmp2@inx+1,w,c
  2438  000A68  2002               	addwfc	strcmp2@a+1,w,c
  2439  000A6A  6EDA               	movwf	fsr2h,c
  2440  000A6C  50DF               	movf	indf2,w,c
  2441  000A6E  B4D8               	btfsc	status,2,c
  2442  000A70  D015               	goto	l1299
  2443  000A72  C003  F005         	movff	strcmp2@b,??_strcmp2
  2444  000A76  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2445  000A7A  500A               	movf	strcmp2@inx,w,c
  2446  000A7C  2605               	addwf	??_strcmp2,f,c
  2447  000A7E  500B               	movf	strcmp2@inx+1,w,c
  2448  000A80  2206               	addwfc	??_strcmp2+1,f,c
  2449  000A82  C005  FFF6         	movff	??_strcmp2,tblptrl
  2450  000A86  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2451  000A8A                     	if	0	;tblptru may be non-zero
  2452  000A8A                     	endif
  2453  000A8A                     	if	0	;tblptru may be non-zero
  2454  000A8A                     	endif
  2455  000A8A  0008               	tblrd		*
  2456  000A8C  50F5               	movf	tablat,w,c
  2457  000A8E  0900               	iorlw	0
  2458  000A90  B4D8               	btfsc	status,2,c
  2459  000A92  D004               	goto	l1299
  2460  000A94  5009               	movf	strcmp2@match+1,w,c
  2461  000A96  1008               	iorwf	strcmp2@match,w,c
  2462  000A98  B4D8               	btfsc	status,2,c
  2463  000A9A  D7A7               	goto	l1281
  2464  000A9C                     l1299:
  2465                           
  2466                           ;SlaveComm_PIC18.c: 540: }
  2467                           ;SlaveComm_PIC18.c: 543: if (( a[inx] == '\0') && (b[inx] != '\0' ))
  2468  000A9C  500A               	movf	strcmp2@inx,w,c
  2469  000A9E  2401               	addwf	strcmp2@a,w,c
  2470  000AA0  6ED9               	movwf	fsr2l,c
  2471  000AA2  500B               	movf	strcmp2@inx+1,w,c
  2472  000AA4  2002               	addwfc	strcmp2@a+1,w,c
  2473  000AA6  6EDA               	movwf	fsr2h,c
  2474  000AA8  50DF               	movf	indf2,w,c
  2475  000AAA  A4D8               	btfss	status,2,c
  2476  000AAC  D014               	goto	l1305
  2477  000AAE  C003  F005         	movff	strcmp2@b,??_strcmp2
  2478  000AB2  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2479  000AB6  500A               	movf	strcmp2@inx,w,c
  2480  000AB8  2605               	addwf	??_strcmp2,f,c
  2481  000ABA  500B               	movf	strcmp2@inx+1,w,c
  2482  000ABC  2206               	addwfc	??_strcmp2+1,f,c
  2483  000ABE  C005  FFF6         	movff	??_strcmp2,tblptrl
  2484  000AC2  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2485  000AC6                     	if	0	;tblptru may be non-zero
  2486  000AC6                     	endif
  2487  000AC6                     	if	0	;tblptru may be non-zero
  2488  000AC6                     	endif
  2489  000AC6  0008               	tblrd		*
  2490  000AC8  50F5               	movf	tablat,w,c
  2491  000ACA  0900               	iorlw	0
  2492  000ACC  B4D8               	btfsc	status,2,c
  2493  000ACE  D003               	goto	l1305
  2494                           
  2495                           ;SlaveComm_PIC18.c: 544: {
  2496                           ;SlaveComm_PIC18.c: 545: match = -1;
  2497  000AD0  6808               	setf	strcmp2@match,c
  2498  000AD2  6809               	setf	strcmp2@match+1,c
  2499                           
  2500                           ;SlaveComm_PIC18.c: 546: }
  2501  000AD4  D01E               	goto	l1311
  2502  000AD6                     l1305:
  2503                           
  2504                           ;SlaveComm_PIC18.c: 547: else if (( a[inx] != '\0') && (b[inx] == '\0' ))
  2505  000AD6  500A               	movf	strcmp2@inx,w,c
  2506  000AD8  2401               	addwf	strcmp2@a,w,c
  2507  000ADA  6ED9               	movwf	fsr2l,c
  2508  000ADC  500B               	movf	strcmp2@inx+1,w,c
  2509  000ADE  2002               	addwfc	strcmp2@a+1,w,c
  2510  000AE0  6EDA               	movwf	fsr2h,c
  2511  000AE2  50DF               	movf	indf2,w,c
  2512  000AE4  B4D8               	btfsc	status,2,c
  2513  000AE6  D015               	goto	l1311
  2514  000AE8  C003  F005         	movff	strcmp2@b,??_strcmp2
  2515  000AEC  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2516  000AF0  500A               	movf	strcmp2@inx,w,c
  2517  000AF2  2605               	addwf	??_strcmp2,f,c
  2518  000AF4  500B               	movf	strcmp2@inx+1,w,c
  2519  000AF6  2206               	addwfc	??_strcmp2+1,f,c
  2520  000AF8  C005  FFF6         	movff	??_strcmp2,tblptrl
  2521  000AFC  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2522  000B00                     	if	0	;tblptru may be non-zero
  2523  000B00                     	endif
  2524  000B00                     	if	0	;tblptru may be non-zero
  2525  000B00                     	endif
  2526  000B00  0008               	tblrd		*
  2527  000B02  50F5               	movf	tablat,w,c
  2528  000B04  0900               	iorlw	0
  2529  000B06  A4D8               	btfss	status,2,c
  2530  000B08  D004               	goto	l1311
  2531                           
  2532                           ;SlaveComm_PIC18.c: 548: {
  2533                           ;SlaveComm_PIC18.c: 549: match = 1;
  2534  000B0A  0E00               	movlw	0
  2535  000B0C  6E09               	movwf	strcmp2@match+1,c
  2536  000B0E  0E01               	movlw	1
  2537  000B10  6E08               	movwf	strcmp2@match,c
  2538  000B12                     l1311:
  2539                           
  2540                           ;SlaveComm_PIC18.c: 550: }
  2541                           ;SlaveComm_PIC18.c: 552: return match;
  2542  000B12  C008  F001         	movff	strcmp2@match,?_strcmp2
  2543  000B16  C009  F002         	movff	strcmp2@match+1,?_strcmp2+1
  2544  000B1A  0012               	return	
  2545  000B1C                     __end_of_strcmp2:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           postinc0	equ	0xFEE
  2554                           wreg	equ	0xFE8
  2555                           indf1	equ	0xFE7
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           indf2	equ	0xFDF
  2559                           fsr2h	equ	0xFDA
  2560                           fsr2l	equ	0xFD9
  2561                           status	equ	0xFD8
  2562                           
  2563 ;; *************** function _send_end_of_transmission *****************
  2564 ;; Defined at:
  2565 ;;		line 598 in file "SlaveComm_PIC18.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  2568 ;;		 -> communications@send_buffer(42), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         2       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         2       0       0       0       0       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		_command_builder1
  2589 ;; This function is called by:
  2590 ;;		_process_data_parameters
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text15
  2595  0011D6                     __ptext15:
  2596                           	opt stack 0
  2597  0011D6                     _send_end_of_transmission:
  2598                           	opt stack 24
  2599                           
  2600                           ;SlaveComm_PIC18.c: 600: command_builder1( send_buffer, "END" );
  2601                           
  2602                           ;incstack = 0
  2603  0011D6  C012  F00E         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  2604  0011DA  C011  F00D         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  2605  0011DE  0E06               	movlw	high STR_1
  2606  0011E0  6E10               	movwf	command_builder1@data1+1,c
  2607  0011E2  0E29               	movlw	low STR_1
  2608  0011E4  6E0F               	movwf	command_builder1@data1,c
  2609  0011E6  EC74  F007         	call	_command_builder1	;wreg free
  2610  0011EA  0012               	return	
  2611  0011EC                     __end_of_send_end_of_transmission:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           indf1	equ	0xFE7
  2622                           fsr1h	equ	0xFE2
  2623                           fsr1l	equ	0xFE1
  2624                           indf2	equ	0xFDF
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _command_builder1 *****************
  2630 ;; Defined at:
  2631 ;;		line 396 in file "SlaveComm_PIC18.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  2634 ;;		 -> communications@send_buffer(42), 
  2635 ;;  data1           2   14[COMRAM] PTR unsigned char 
  2636 ;;		 -> STR_22(4), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         4       0       0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:         4       0       0       0       0       0       0
  2652 ;;Total ram usage:        4 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		_command_builder_add_char
  2657 ;;		_command_builder_add_string
  2658 ;; This function is called by:
  2659 ;;		_send_end_of_transmission
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text16
  2664  000EE8                     __ptext16:
  2665                           	opt stack 0
  2666  000EE8                     _command_builder1:
  2667                           	opt stack 24
  2668                           
  2669                           ;SlaveComm_PIC18.c: 398: command_builder_add_char( send_buffer,'#' );
  2670                           
  2671                           ;incstack = 0
  2672  000EE8  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2673  000EEC  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2674  000EF0  0E23               	movlw	35
  2675  000EF2  6E03               	movwf	command_builder_add_char@data,c
  2676  000EF4  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2677                           
  2678                           ;SlaveComm_PIC18.c: 399: command_builder_add_char( send_buffer,'#' );
  2679  000EF8  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2680  000EFC  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2681  000F00  0E23               	movlw	35
  2682  000F02  6E03               	movwf	command_builder_add_char@data,c
  2683  000F04  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2684                           
  2685                           ;SlaveComm_PIC18.c: 400: command_builder_add_char( send_buffer, '!' );
  2686  000F08  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2687  000F0C  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2688  000F10  0E21               	movlw	33
  2689  000F12  6E03               	movwf	command_builder_add_char@data,c
  2690  000F14  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2691                           
  2692                           ;SlaveComm_PIC18.c: 401: command_builder_add_string( send_buffer, data1 );
  2693  000F18  C00E  F006         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  2694  000F1C  C00D  F005         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  2695  000F20  C010  F008         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  2696  000F24  C00F  F007         	movff	command_builder1@data1,command_builder_add_string@data_string
  2697  000F28  EC46  F007         	call	_command_builder_add_string	;wreg free
  2698                           
  2699                           ;SlaveComm_PIC18.c: 402: command_builder_add_char( send_buffer, '*' );
  2700  000F2C  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  2701  000F30  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  2702  000F34  0E2A               	movlw	42
  2703  000F36  6E03               	movwf	command_builder_add_char@data,c
  2704  000F38  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2705  000F3C  0012               	return	
  2706  000F3E                     __end_of_command_builder1:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodh	equ	0xFF4
  2713                           prodl	equ	0xFF3
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           indf1	equ	0xFE7
  2717                           fsr1h	equ	0xFE2
  2718                           fsr1l	equ	0xFE1
  2719                           indf2	equ	0xFDF
  2720                           fsr2h	equ	0xFDA
  2721                           fsr2l	equ	0xFD9
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _command_builder3 *****************
  2725 ;; Defined at:
  2726 ;;		line 424 in file "SlaveComm_PIC18.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  2729 ;;		 -> communications@send_buffer(42), 
  2730 ;;  data1           2   14[COMRAM] PTR unsigned char 
  2731 ;;		 -> STR_17(4), STR_13(4), 
  2732 ;;  data2           2   16[COMRAM] PTR unsigned char 
  2733 ;;		 -> STR_18(5), STR_14(5), 
  2734 ;;  data3           2   18[COMRAM] PTR unsigned char 
  2735 ;;		 -> STR_19(3), STR_15(4), 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         8       0       0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0
  2750 ;;      Totals:         8       0       0       0       0       0       0
  2751 ;;Total ram usage:        8 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    2
  2754 ;; This function calls:
  2755 ;;		_command_builder_add_char
  2756 ;;		_command_builder_add_string
  2757 ;; This function is called by:
  2758 ;;		_process_data_parameters
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text17
  2763  000D5E                     __ptext17:
  2764                           	opt stack 0
  2765  000D5E                     _command_builder3:
  2766                           	opt stack 25
  2767                           
  2768                           ;SlaveComm_PIC18.c: 426: command_builder_add_char( send_buffer,'#' );
  2769                           
  2770                           ;incstack = 0
  2771  000D5E  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2772  000D62  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2773  000D66  0E23               	movlw	35
  2774  000D68  6E03               	movwf	command_builder_add_char@data,c
  2775  000D6A  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2776                           
  2777                           ;SlaveComm_PIC18.c: 427: command_builder_add_char( send_buffer,'#' );
  2778  000D6E  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2779  000D72  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2780  000D76  0E23               	movlw	35
  2781  000D78  6E03               	movwf	command_builder_add_char@data,c
  2782  000D7A  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2783                           
  2784                           ;SlaveComm_PIC18.c: 428: command_builder_add_char( send_buffer, '!' );
  2785  000D7E  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2786  000D82  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2787  000D86  0E21               	movlw	33
  2788  000D88  6E03               	movwf	command_builder_add_char@data,c
  2789  000D8A  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2790                           
  2791                           ;SlaveComm_PIC18.c: 429: command_builder_add_string( send_buffer, data1 );
  2792  000D8E  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2793  000D92  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2794  000D96  C010  F008         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  2795  000D9A  C00F  F007         	movff	command_builder3@data1,command_builder_add_string@data_string
  2796  000D9E  EC46  F007         	call	_command_builder_add_string	;wreg free
  2797                           
  2798                           ;SlaveComm_PIC18.c: 430: command_builder_add_char( send_buffer, ';' );
  2799  000DA2  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2800  000DA6  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2801  000DAA  0E3B               	movlw	59
  2802  000DAC  6E03               	movwf	command_builder_add_char@data,c
  2803  000DAE  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2804                           
  2805                           ;SlaveComm_PIC18.c: 431: command_builder_add_string( send_buffer, data2 );
  2806  000DB2  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2807  000DB6  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2808  000DBA  C012  F008         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  2809  000DBE  C011  F007         	movff	command_builder3@data2,command_builder_add_string@data_string
  2810  000DC2  EC46  F007         	call	_command_builder_add_string	;wreg free
  2811                           
  2812                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, ';' );
  2813  000DC6  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2814  000DCA  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2815  000DCE  0E3B               	movlw	59
  2816  000DD0  6E03               	movwf	command_builder_add_char@data,c
  2817  000DD2  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2818                           
  2819                           ;SlaveComm_PIC18.c: 433: command_builder_add_string( send_buffer, data3 );
  2820  000DD6  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  2821  000DDA  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  2822  000DDE  C014  F008         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  2823  000DE2  C013  F007         	movff	command_builder3@data3,command_builder_add_string@data_string
  2824  000DE6  EC46  F007         	call	_command_builder_add_string	;wreg free
  2825                           
  2826                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '*' );
  2827  000DEA  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  2828  000DEE  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  2829  000DF2  0E2A               	movlw	42
  2830  000DF4  6E03               	movwf	command_builder_add_char@data,c
  2831  000DF6  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2832  000DFA  0012               	return	
  2833  000DFC                     __end_of_command_builder3:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           indf1	equ	0xFE7
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _command_builder_add_string *****************
  2852 ;; Defined at:
  2853 ;;		line 469 in file "SlaveComm_PIC18.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  send_buffer     2    4[COMRAM] PTR struct buffer
  2856 ;;		 -> communications@send_buffer(42), 
  2857 ;;  data_string     2    6[COMRAM] PTR unsigned char 
  2858 ;;		 -> STR_24(5), STR_23(5), STR_22(4), STR_19(3), 
  2859 ;;		 -> STR_18(5), STR_17(4), STR_15(4), STR_14(5), 
  2860 ;;		 -> STR_13(4), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  inx             2   10[COMRAM] int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;		None               void
  2865 ;; Registers used:
  2866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2872 ;;      Params:         4       0       0       0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0       0       0
  2874 ;;      Temps:          2       0       0       0       0       0       0
  2875 ;;      Totals:         8       0       0       0       0       0       0
  2876 ;;Total ram usage:        8 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    1
  2879 ;; This function calls:
  2880 ;;		_command_builder_add_char
  2881 ;; This function is called by:
  2882 ;;		_command_builder1
  2883 ;;		_command_builder2
  2884 ;;		_command_builder3
  2885 ;;		_command_builder4
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text18
  2890  000E8C                     __ptext18:
  2891                           	opt stack 0
  2892  000E8C                     _command_builder_add_string:
  2893                           	opt stack 25
  2894                           
  2895                           ;SlaveComm_PIC18.c: 471: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  2896                           
  2897                           ;incstack = 0
  2898  000E8C  0E00               	movlw	0
  2899  000E8E  6E0C               	movwf	command_builder_add_string@inx+1,c
  2900  000E90  0E00               	movlw	0
  2901  000E92  6E0B               	movwf	command_builder_add_string@inx,c
  2902  000E94  D017               	goto	l1269
  2903  000E96                     l1265:
  2904                           
  2905                           ;SlaveComm_PIC18.c: 472: {
  2906                           ;SlaveComm_PIC18.c: 473: command_builder_add_char( send_buffer, data_string[inx] );
  2907  000E96  C006  F002         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  2908  000E9A  C005  F001         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  2909  000E9E  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  2910  000EA2  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  2911  000EA6  500B               	movf	command_builder_add_string@inx,w,c
  2912  000EA8  2609               	addwf	??_command_builder_add_string,f,c
  2913  000EAA  500C               	movf	command_builder_add_string@inx+1,w,c
  2914  000EAC  220A               	addwfc	??_command_builder_add_string+1,f,c
  2915  000EAE  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  2916  000EB2  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  2917  000EB6                     	if	0	;tblptru may be non-zero
  2918  000EB6                     	endif
  2919  000EB6                     	if	0	;tblptru may be non-zero
  2920  000EB6                     	endif
  2921  000EB6  0008               	tblrd		*
  2922  000EB8  CFF5 F003          	movff	tablat,command_builder_add_char@data
  2923  000EBC  EC9F  F007         	call	_command_builder_add_char	;wreg free
  2924  000EC0  4A0B               	infsnz	command_builder_add_string@inx,f,c
  2925  000EC2  2A0C               	incf	command_builder_add_string@inx+1,f,c
  2926  000EC4                     l1269:
  2927  000EC4  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  2928  000EC8  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  2929  000ECC  500B               	movf	command_builder_add_string@inx,w,c
  2930  000ECE  2609               	addwf	??_command_builder_add_string,f,c
  2931  000ED0  500C               	movf	command_builder_add_string@inx+1,w,c
  2932  000ED2  220A               	addwfc	??_command_builder_add_string+1,f,c
  2933  000ED4  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  2934  000ED8  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  2935  000EDC                     	if	0	;tblptru may be non-zero
  2936  000EDC                     	endif
  2937  000EDC                     	if	0	;tblptru may be non-zero
  2938  000EDC                     	endif
  2939  000EDC  0008               	tblrd		*
  2940  000EDE  50F5               	movf	tablat,w,c
  2941  000EE0  0900               	iorlw	0
  2942  000EE2  B4D8               	btfsc	status,2,c
  2943                           
  2944                           ;SlaveComm_PIC18.c: 474: }
  2945                           ;SlaveComm_PIC18.c: 476: return;
  2946  000EE4  0012               	return	
  2947  000EE6  D7D7               	goto	l1265
  2948  000EE8                     __end_of_command_builder_add_string:
  2949                           	opt stack 0
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           prodh	equ	0xFF4
  2955                           prodl	equ	0xFF3
  2956                           postinc0	equ	0xFEE
  2957                           wreg	equ	0xFE8
  2958                           indf1	equ	0xFE7
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _command_builder_add_char *****************
  2967 ;; Defined at:
  2968 ;;		line 456 in file "SlaveComm_PIC18.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  send_buffer     2    0[COMRAM] PTR struct buffer
  2971 ;;		 -> communications@send_buffer(42), 
  2972 ;;  data            1    2[COMRAM] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2984 ;;      Params:         3       0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0
  2986 ;;      Temps:          1       0       0       0       0       0       0
  2987 ;;      Totals:         4       0       0       0       0       0       0
  2988 ;;Total ram usage:        4 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_command_builder1
  2994 ;;		_command_builder2
  2995 ;;		_command_builder3
  2996 ;;		_command_builder_add_string
  2997 ;;		_command_builder4
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text19
  3002  000F3E                     __ptext19:
  3003                           	opt stack 0
  3004  000F3E                     _command_builder_add_char:
  3005                           	opt stack 25
  3006                           
  3007                           ;SlaveComm_PIC18.c: 458: send_buffer->data_buffer[send_buffer->write_position] = data;
  3008                           
  3009                           ;incstack = 0
  3010  000F3E  EE20 F028          	lfsr	2,40
  3011  000F42  5001               	movf	command_builder_add_char@send_buffer,w,c
  3012  000F44  26D9               	addwf	fsr2l,f,c
  3013  000F46  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3014  000F48  22DA               	addwfc	fsr2h,f,c
  3015  000F4A  50DF               	movf	indf2,w,c
  3016  000F4C  6E04               	movwf	??_command_builder_add_char& (0+255),c
  3017  000F4E  5004               	movf	??_command_builder_add_char,w,c
  3018  000F50  0D01               	mullw	1
  3019  000F52  50F3               	movf	prodl,w,c
  3020  000F54  2401               	addwf	command_builder_add_char@send_buffer,w,c
  3021  000F56  6ED9               	movwf	fsr2l,c
  3022  000F58  50F4               	movf	prodh,w,c
  3023  000F5A  2002               	addwfc	command_builder_add_char@send_buffer+1,w,c
  3024  000F5C  6EDA               	movwf	fsr2h,c
  3025  000F5E  C003  FFDF         	movff	command_builder_add_char@data,indf2
  3026                           
  3027                           ;SlaveComm_PIC18.c: 460: send_buffer->write_position++;
  3028  000F62  EE20 F028          	lfsr	2,40
  3029  000F66  5001               	movf	command_builder_add_char@send_buffer,w,c
  3030  000F68  26D9               	addwf	fsr2l,f,c
  3031  000F6A  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3032  000F6C  22DA               	addwfc	fsr2h,f,c
  3033  000F6E  2ADF               	incf	indf2,f,c
  3034                           
  3035                           ;SlaveComm_PIC18.c: 461: if( send_buffer->write_position >= 40 )
  3036  000F70  EE20 F028          	lfsr	2,40
  3037  000F74  5001               	movf	command_builder_add_char@send_buffer,w,c
  3038  000F76  26D9               	addwf	fsr2l,f,c
  3039  000F78  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3040  000F7A  22DA               	addwfc	fsr2h,f,c
  3041  000F7C  0E27               	movlw	39
  3042  000F7E  64DF               	cpfsgt	indf2,c
  3043  000F80  0012               	return	
  3044                           
  3045                           ;SlaveComm_PIC18.c: 462: {
  3046                           ;SlaveComm_PIC18.c: 463: send_buffer->write_position = 0;
  3047  000F82  EE20 F028          	lfsr	2,40
  3048  000F86  5001               	movf	command_builder_add_char@send_buffer,w,c
  3049  000F88  26D9               	addwf	fsr2l,f,c
  3050  000F8A  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3051  000F8C  22DA               	addwfc	fsr2h,f,c
  3052  000F8E  0E00               	movlw	0
  3053  000F90  6EDF               	movwf	indf2,c
  3054  000F92  0012               	return	
  3055  000F94                     __end_of_command_builder_add_char:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           indf1	equ	0xFE7
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           indf2	equ	0xFDF
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _process_data_parameterize *****************
  3074 ;; Defined at:
  3075 ;;		line 256 in file "SlaveComm_PIC18.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  parameters      2    6[COMRAM] PTR unsigned char [10]
  3078 ;;		 -> process_data@parameters(50), 
  3079 ;;  buffer_to_pa    2    8[COMRAM] PTR struct buffer
  3080 ;;		 -> communications@receive_buffer(42), 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  inx             2   13[COMRAM] int 
  3083 ;;  parameter_po    1   16[COMRAM] unsigned char 
  3084 ;;  parameter_in    1   15[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3094 ;;      Params:         4       0       0       0       0       0       0
  3095 ;;      Locals:         4       0       0       0       0       0       0
  3096 ;;      Temps:          3       0       0       0       0       0       0
  3097 ;;      Totals:        11       0       0       0       0       0       0
  3098 ;;Total ram usage:       11 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		___wmul
  3103 ;; This function is called by:
  3104 ;;		_process_data
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text20
  3109  000860                     __ptext20:
  3110                           	opt stack 0
  3111  000860                     _process_data_parameterize:
  3112                           	opt stack 27
  3113                           
  3114                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  3115                           
  3116                           ;incstack = 0
  3117  000860  0E00               	movlw	0
  3118  000862  6E11               	movwf	process_data_parameterize@parameter_position,c
  3119                           
  3120                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  3121  000864  0E00               	movlw	0
  3122  000866  6E10               	movwf	process_data_parameterize@parameter_index,c
  3123                           
  3124                           ;SlaveComm_PIC18.c: 268: for( int inx = 0; inx < 5; inx++ )
  3125  000868  0E00               	movlw	0
  3126  00086A  6E0F               	movwf	process_data_parameterize@inx+1,c
  3127  00086C  0E00               	movlw	0
  3128  00086E  6E0E               	movwf	process_data_parameterize@inx,c
  3129  000870  500F               	movf	process_data_parameterize@inx+1,w,c
  3130  000872  0A80               	xorlw	128
  3131  000874  0F80               	addlw	-128
  3132  000876  0E05               	movlw	5
  3133  000878  B4D8               	btfsc	status,2,c
  3134  00087A  5C0E               	subwf	process_data_parameterize@inx,w,c
  3135  00087C  B0D8               	btfsc	status,0,c
  3136  00087E  D07C               	goto	l1427
  3137                           
  3138                           ;SlaveComm_PIC18.c: 269: {
  3139                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  3140  000880  C00E  F001         	movff	process_data_parameterize@inx,___wmul@multiplier
  3141  000884  C00F  F002         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  3142  000888  0E00               	movlw	0
  3143  00088A  6E04               	movwf	___wmul@multiplicand+1,c
  3144  00088C  0E0A               	movlw	10
  3145  00088E  6E03               	movwf	___wmul@multiplicand,c
  3146  000890  EC9B  F008         	call	___wmul	;wreg free
  3147  000894  5001               	movf	?___wmul,w,c
  3148  000896  2407               	addwf	process_data_parameterize@parameters,w,c
  3149  000898  6ED9               	movwf	fsr2l,c
  3150  00089A  5002               	movf	?___wmul+1,w,c
  3151  00089C  2008               	addwfc	process_data_parameterize@parameters+1,w,c
  3152  00089E  6EDA               	movwf	fsr2h,c
  3153  0008A0  0E00               	movlw	0
  3154  0008A2  6EDF               	movwf	indf2,c
  3155  0008A4  4A0E               	infsnz	process_data_parameterize@inx,f,c
  3156  0008A6  2A0F               	incf	process_data_parameterize@inx+1,f,c
  3157  0008A8  D7E3               	goto	L4
  3158  0008AA                     l1403:
  3159                           
  3160                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  3161  0008AA  0E00               	movlw	0
  3162  0008AC  6E11               	movwf	process_data_parameterize@parameter_position,c
  3163                           
  3164                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  3165  0008AE  2A10               	incf	process_data_parameterize@parameter_index,f,c
  3166                           
  3167                           ;SlaveComm_PIC18.c: 285: if( parameter_index >= 5 )
  3168  0008B0  0E04               	movlw	4
  3169  0008B2  6410               	cpfsgt	process_data_parameterize@parameter_index,c
  3170  0008B4  D05A               	goto	l1425
  3171                           
  3172                           ;SlaveComm_PIC18.c: 286: {
  3173                           ;SlaveComm_PIC18.c: 289: parameter_index = ( 5 - 1 );
  3174  0008B6  0E04               	movlw	4
  3175  0008B8  6E10               	movwf	process_data_parameterize@parameter_index,c
  3176  0008BA  D057               	goto	l1425
  3177  0008BC                     l1411:
  3178                           
  3179                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  3180  0008BC  EE20 F029          	lfsr	2,41
  3181  0008C0  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3182  0008C2  26D9               	addwf	fsr2l,f,c
  3183  0008C4  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3184  0008C6  22DA               	addwfc	fsr2h,f,c
  3185  0008C8  50DF               	movf	indf2,w,c
  3186  0008CA  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3187  0008CC  500B               	movf	??_process_data_parameterize,w,c
  3188  0008CE  0D01               	mullw	1
  3189  0008D0  50F3               	movf	prodl,w,c
  3190  0008D2  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3191  0008D4  6ED9               	movwf	fsr2l,c
  3192  0008D6  50F4               	movf	prodh,w,c
  3193  0008D8  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3194  0008DA  6EDA               	movwf	fsr2h,c
  3195  0008DC  5010               	movf	process_data_parameterize@parameter_index,w,c
  3196  0008DE  0D0A               	mullw	10
  3197  0008E0  C007  F00C         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  3198  0008E4  C008  F00D         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  3199  0008E8  50F3               	movf	prodl,w,c
  3200  0008EA  260C               	addwf	??_process_data_parameterize+1,f,c
  3201  0008EC  50F4               	movf	prodh,w,c
  3202  0008EE  220D               	addwfc	??_process_data_parameterize+2,f,c
  3203  0008F0  5011               	movf	process_data_parameterize@parameter_position,w,c
  3204  0008F2  0D01               	mullw	1
  3205  0008F4  50F3               	movf	prodl,w,c
  3206  0008F6  240C               	addwf	??_process_data_parameterize+1,w,c
  3207  0008F8  6EE1               	movwf	fsr1l,c
  3208  0008FA  50F4               	movf	prodh,w,c
  3209  0008FC  200D               	addwfc	??_process_data_parameterize+2,w,c
  3210  0008FE  6EE2               	movwf	fsr1h,c
  3211  000900  CFDF FFE7          	movff	indf2,indf1
  3212                           
  3213                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  3214  000904  2A11               	incf	process_data_parameterize@parameter_position,f,c
  3215                           
  3216                           ;SlaveComm_PIC18.c: 297: if( parameter_position >= 10 )
  3217  000906  0E09               	movlw	9
  3218  000908  6411               	cpfsgt	process_data_parameterize@parameter_position,c
  3219  00090A  D002               	goto	l1419
  3220                           
  3221                           ;SlaveComm_PIC18.c: 298: {
  3222                           ;SlaveComm_PIC18.c: 301: parameter_position = ( 10 - 1 );
  3223  00090C  0E09               	movlw	9
  3224  00090E  6E11               	movwf	process_data_parameterize@parameter_position,c
  3225  000910                     l1419:
  3226                           
  3227                           ;SlaveComm_PIC18.c: 302: }
  3228                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  3229  000910  5010               	movf	process_data_parameterize@parameter_index,w,c
  3230  000912  0D0A               	mullw	10
  3231  000914  C007  F00B         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  3232  000918  C008  F00C         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  3233  00091C  50F3               	movf	prodl,w,c
  3234  00091E  260B               	addwf	??_process_data_parameterize,f,c
  3235  000920  50F4               	movf	prodh,w,c
  3236  000922  220C               	addwfc	??_process_data_parameterize+1,f,c
  3237  000924  5011               	movf	process_data_parameterize@parameter_position,w,c
  3238  000926  0D01               	mullw	1
  3239  000928  50F3               	movf	prodl,w,c
  3240  00092A  240B               	addwf	??_process_data_parameterize,w,c
  3241  00092C  6ED9               	movwf	fsr2l,c
  3242  00092E  50F4               	movf	prodh,w,c
  3243  000930  200C               	addwfc	??_process_data_parameterize+1,w,c
  3244  000932  6EDA               	movwf	fsr2h,c
  3245  000934  0E00               	movlw	0
  3246  000936  6EDF               	movwf	indf2,c
  3247                           
  3248                           ;SlaveComm_PIC18.c: 306: break;
  3249  000938  D018               	goto	l1425
  3250  00093A                     l1423:
  3251  00093A  EE20 F029          	lfsr	2,41
  3252  00093E  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3253  000940  26D9               	addwf	fsr2l,f,c
  3254  000942  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3255  000944  22DA               	addwfc	fsr2h,f,c
  3256  000946  50DF               	movf	indf2,w,c
  3257  000948  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3258  00094A  500B               	movf	??_process_data_parameterize,w,c
  3259  00094C  0D01               	mullw	1
  3260  00094E  50F3               	movf	prodl,w,c
  3261  000950  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3262  000952  6ED9               	movwf	fsr2l,c
  3263  000954  50F4               	movf	prodh,w,c
  3264  000956  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3265  000958  6EDA               	movwf	fsr2h,c
  3266  00095A  50DF               	movf	indf2,w,c
  3267                           
  3268                           ; Switch size 1, requested type "space"
  3269                           ; Number of cases is 2, Range of values is 33 to 59
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte            7     4 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274  00095C  0A21               	xorlw	33	; case 33
  3275  00095E  B4D8               	btfsc	status,2,c
  3276  000960  D004               	goto	l1425
  3277  000962  0A1A               	xorlw	26	; case 59
  3278  000964  B4D8               	btfsc	status,2,c
  3279  000966  D7A1               	goto	l1403
  3280  000968  D7A9               	goto	l1411
  3281  00096A                     l1425:
  3282                           
  3283                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  3284  00096A  EE20 F029          	lfsr	2,41
  3285  00096E  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3286  000970  26D9               	addwf	fsr2l,f,c
  3287  000972  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3288  000974  22DA               	addwfc	fsr2h,f,c
  3289  000976  2ADF               	incf	indf2,f,c
  3290  000978                     l1427:
  3291  000978  EE20 F029          	lfsr	2,41
  3292  00097C  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3293  00097E  26D9               	addwf	fsr2l,f,c
  3294  000980  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3295  000982  22DA               	addwfc	fsr2h,f,c
  3296  000984  50DF               	movf	indf2,w,c
  3297  000986  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3298  000988  500B               	movf	??_process_data_parameterize,w,c
  3299  00098A  0D01               	mullw	1
  3300  00098C  50F3               	movf	prodl,w,c
  3301  00098E  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3302  000990  6ED9               	movwf	fsr2l,c
  3303  000992  50F4               	movf	prodh,w,c
  3304  000994  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3305  000996  6EDA               	movwf	fsr2h,c
  3306  000998  50DF               	movf	indf2,w,c
  3307  00099A  0A2A               	xorlw	42
  3308  00099C  B4D8               	btfsc	status,2,c
  3309  00099E  0012               	return	
  3310  0009A0  EE20 F029          	lfsr	2,41
  3311  0009A4  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3312  0009A6  26D9               	addwf	fsr2l,f,c
  3313  0009A8  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3314  0009AA  22DA               	addwfc	fsr2h,f,c
  3315  0009AC  50DF               	movf	indf2,w,c
  3316  0009AE  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3317  0009B0  0E28               	movlw	40
  3318  0009B2  5C0B               	subwf	??_process_data_parameterize,w,c
  3319  0009B4  B0D8               	btfsc	status,0,c
  3320  0009B6  0012               	return	
  3321  0009B8  EE20 F029          	lfsr	2,41
  3322  0009BC  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3323  0009BE  26D9               	addwf	fsr2l,f,c
  3324  0009C0  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3325  0009C2  22DA               	addwfc	fsr2h,f,c
  3326  0009C4  EE10 F028          	lfsr	1,40
  3327  0009C8  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3328  0009CA  26E1               	addwf	fsr1l,f,c
  3329  0009CC  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3330  0009CE  22E2               	addwfc	fsr1h,f,c
  3331  0009D0  50E7               	movf	indf1,w,c
  3332  0009D2  62DF               	cpfseq	indf2,c
  3333  0009D4  D7B2               	goto	l1423
  3334  0009D6  0012               	return	
  3335  0009D8                     __end_of_process_data_parameterize:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           indf1	equ	0xFE7
  3346                           fsr1h	equ	0xFE2
  3347                           fsr1l	equ	0xFE1
  3348                           indf2	equ	0xFDF
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function ___wmul *****************
  3354 ;; Defined at:
  3355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  multiplier      2    0[COMRAM] unsigned int 
  3358 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  product         2    4[COMRAM] unsigned int 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  2    0[COMRAM] unsigned int 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, prodl, prodh
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         4       0       0       0       0       0       0
  3371 ;;      Locals:         2       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0
  3373 ;;      Totals:         6       0       0       0       0       0       0
  3374 ;;Total ram usage:        6 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_process_data_parameterize
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text21
  3384  001136                     __ptext21:
  3385                           	opt stack 0
  3386  001136                     ___wmul:
  3387                           	opt stack 27
  3388                           
  3389                           ;incstack = 0
  3390  001136  5001               	movf	___wmul@multiplier,w,c
  3391  001138  0203               	mulwf	___wmul@multiplicand,c
  3392  00113A  CFF3 F005          	movff	prodl,___wmul@product
  3393  00113E  CFF4 F006          	movff	prodh,___wmul@product+1
  3394  001142  5001               	movf	___wmul@multiplier,w,c
  3395  001144  0204               	mulwf	___wmul@multiplicand+1,c
  3396  001146  50F3               	movf	prodl,w,c
  3397  001148  2606               	addwf	___wmul@product+1,f,c
  3398  00114A  5002               	movf	___wmul@multiplier+1,w,c
  3399  00114C  0203               	mulwf	___wmul@multiplicand,c
  3400  00114E  50F3               	movf	prodl,w,c
  3401  001150  2606               	addwf	___wmul@product+1,f,c
  3402  001152  C005  F001         	movff	___wmul@product,?___wmul
  3403  001156  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3404  00115A  0012               	return	
  3405  00115C                     __end_of___wmul:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           prodh	equ	0xFF4
  3412                           prodl	equ	0xFF3
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           indf1	equ	0xFE7
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           indf2	equ	0xFDF
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _SPISlaveInit *****************
  3424 ;; Defined at:
  3425 ;;		line 621 in file "SlaveComm_PIC18.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, status,2
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3439 ;;      Params:         0       0       0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0
  3442 ;;      Totals:         0       0       0       0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text22
  3453  000F94                     __ptext22:
  3454                           	opt stack 0
  3455  000F94                     _SPISlaveInit:
  3456                           	opt stack 30
  3457                           
  3458                           ;SlaveComm_PIC18.c: 624: TRISAbits.TRISA0 = 0;
  3459                           
  3460                           ;incstack = 0
  3461  000F94  9092               	bcf	3986,0,c	;volatile
  3462                           
  3463                           ;SlaveComm_PIC18.c: 625: TRISAbits.TRISA1 = 1;
  3464  000F96  8292               	bsf	3986,1,c	;volatile
  3465                           
  3466                           ;SlaveComm_PIC18.c: 626: TRISBbits.RB4 = 0;
  3467  000F98  9893               	bcf	3987,4,c	;volatile
  3468                           
  3469                           ;SlaveComm_PIC18.c: 627: TRISCbits.TRISC3 = 0;
  3470  000F9A  9694               	bcf	3988,3,c	;volatile
  3471                           
  3472                           ;SlaveComm_PIC18.c: 628: TRISCbits.TRISC5 = 0;
  3473  000F9C  9A94               	bcf	3988,5,c	;volatile
  3474                           
  3475                           ;SlaveComm_PIC18.c: 629: TRISCbits.TRISC6 = 0;
  3476  000F9E  9C94               	bcf	3988,6,c	;volatile
  3477                           
  3478                           ;SlaveComm_PIC18.c: 630: TRISCbits.TRISC7 = 0;
  3479  000FA0  9E94               	bcf	3988,7,c	;volatile
  3480                           
  3481                           ;SlaveComm_PIC18.c: 631: ANSELAbits.ANSA1 = 0b0;
  3482  000FA2  010F               	movlb	15	; () banked
  3483  000FA4  9338               	bcf	56,1,b	;volatile
  3484                           
  3485                           ;SlaveComm_PIC18.c: 633: LATCbits.LATC6 = 1;
  3486  000FA6  8C8B               	bsf	3979,6,c	;volatile
  3487                           
  3488                           ;SlaveComm_PIC18.c: 634: LATCbits.LATC3 = 1;
  3489  000FA8  868B               	bsf	3979,3,c	;volatile
  3490                           
  3491                           ;SlaveComm_PIC18.c: 635: LATCbits.LATC5 = 1;
  3492  000FAA  8A8B               	bsf	3979,5,c	;volatile
  3493                           
  3494                           ;SlaveComm_PIC18.c: 636: LATCbits.LATC7 = 1;
  3495  000FAC  8E8B               	bsf	3979,7,c	;volatile
  3496                           
  3497                           ;SlaveComm_PIC18.c: 651: SSP2CON1bits.SSPEN = 0;
  3498  000FAE  9A6C               	bcf	3948,5,c	;volatile
  3499                           
  3500                           ;SlaveComm_PIC18.c: 653: ANSELBbits.ANSB0 = 0b0;
  3501  000FB0  010F               	movlb	15	; () banked
  3502  000FB2  9139               	bcf	57,0,b	;volatile
  3503                           
  3504                           ;SlaveComm_PIC18.c: 654: ANSELBbits.ANSB1 = 0b0;
  3505  000FB4  010F               	movlb	15	; () banked
  3506  000FB6  9339               	bcf	57,1,b	;volatile
  3507                           
  3508                           ;SlaveComm_PIC18.c: 655: ANSELBbits.ANSB2 = 0b0;
  3509  000FB8  010F               	movlb	15	; () banked
  3510  000FBA  9539               	bcf	57,2,b	;volatile
  3511                           
  3512                           ;SlaveComm_PIC18.c: 656: ANSELBbits.ANSB3 = 0b0;
  3513  000FBC  010F               	movlb	15	; () banked
  3514  000FBE  9739               	bcf	57,3,b	;volatile
  3515                           
  3516                           ;SlaveComm_PIC18.c: 658: TRISBbits.RB0 = 0b1;
  3517  000FC0  8093               	bsf	3987,0,c	;volatile
  3518                           
  3519                           ;SlaveComm_PIC18.c: 659: TRISBbits.RB1 = 0b1;
  3520  000FC2  8293               	bsf	3987,1,c	;volatile
  3521                           
  3522                           ;SlaveComm_PIC18.c: 660: TRISBbits.RB2 = 0b1;
  3523  000FC4  8493               	bsf	3987,2,c	;volatile
  3524                           
  3525                           ;SlaveComm_PIC18.c: 661: TRISBbits.RB3 = 0b0;
  3526  000FC6  9693               	bcf	3987,3,c	;volatile
  3527                           
  3528                           ;SlaveComm_PIC18.c: 663: SSP2STATbits.SMP = 0;
  3529  000FC8  9E6D               	bcf	3949,7,c	;volatile
  3530                           
  3531                           ;SlaveComm_PIC18.c: 664: SSP2STATbits.CKE = 1;
  3532  000FCA  8C6D               	bsf	3949,6,c	;volatile
  3533                           
  3534                           ;SlaveComm_PIC18.c: 666: SSP2CON1bits.WCOL = 0;
  3535  000FCC  9E6C               	bcf	3948,7,c	;volatile
  3536                           
  3537                           ;SlaveComm_PIC18.c: 667: SSP2CON1bits.SSPOV = 0;
  3538  000FCE  9C6C               	bcf	3948,6,c	;volatile
  3539                           
  3540                           ;SlaveComm_PIC18.c: 668: SSP2CON1bits.SSPEN = 0;
  3541  000FD0  9A6C               	bcf	3948,5,c	;volatile
  3542                           
  3543                           ;SlaveComm_PIC18.c: 669: SSP2CON1bits.CKP = 1;
  3544  000FD2  886C               	bsf	3948,4,c	;volatile
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;SlaveComm_PIC18.c: 670: SSP2CON1bits.SSPM = 0b0100;
  3548  000FD4  506C               	movf	3948,w,c	;volatile
  3549  000FD6  0BF0               	andlw	-16
  3550  000FD8  0904               	iorlw	4
  3551  000FDA  6E6C               	movwf	3948,c	;volatile
  3552                           
  3553                           ;SlaveComm_PIC18.c: 673: SSP2CON3 = 0x00;
  3554  000FDC  0E00               	movlw	0
  3555  000FDE  6E69               	movwf	3945,c	;volatile
  3556                           
  3557                           ; BSR set to: 15
  3558                           ;SlaveComm_PIC18.c: 674: SSP2CON3bits.BOEN = 0b0;
  3559  000FE0  9869               	bcf	3945,4,c	;volatile
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;SlaveComm_PIC18.c: 676: SSP2CON1bits.SSPEN = 1;
  3563  000FE2  8A6C               	bsf	3948,5,c	;volatile
  3564  000FE4  0012               	return	
  3565  000FE6                     __end_of_SPISlaveInit:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           prodh	equ	0xFF4
  3572                           prodl	equ	0xFF3
  3573                           postinc0	equ	0xFEE
  3574                           wreg	equ	0xFE8
  3575                           indf1	equ	0xFE7
  3576                           fsr1h	equ	0xFE2
  3577                           fsr1l	equ	0xFE1
  3578                           indf2	equ	0xFDF
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           tblptru	equ	0xFF8
  3583                           tblptrh	equ	0xFF7
  3584                           tblptrl	equ	0xFF6
  3585                           tablat	equ	0xFF5
  3586                           prodh	equ	0xFF4
  3587                           prodl	equ	0xFF3
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           indf1	equ	0xFE7
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598                           	psect	rparam
  3599  0000                     tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           indf1	equ	0xFE7
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8


Data Sizes:
    Strings     55
    Constant    0
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      91
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    com_command_testLED@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 8
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_16(CODE[4]), STR_12(CODE[3]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[8]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[8]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 8
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_16(CODE[4]), STR_12(CODE[3]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[8]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[8]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 5
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[4]), STR_19(CODE[3]), 
		 -> STR_18(CODE[5]), STR_17(CODE[4]), STR_15(CODE[4]), STR_14(CODE[5]), 
		 -> STR_13(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 4
		 -> STR_19(CODE[3]), STR_15(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_14(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_17(CODE[4]), STR_13(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder2@data2	PTR unsigned char  size(2) Largest target is 5
		 -> STR_24(CODE[5]), 

    command_builder2@data1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), 

    command_builder2@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_22(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _init->_delayMS
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_testLED
    _com_command_testLED->_command_builder2
    _command_builder2->_command_builder_add_string
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28404
                                             84 COMRAM     2     2      0
                       _SPISlaveInit
                     _communications
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     297
                                              6 COMRAM     2     2      0
                            _delayMS
 ---------------------------------------------------------------------------------
 (1) _communications                                       3     3      0   28106
                                             81 COMRAM     3     3      0
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     278
                                              2 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  2     0      2    8103
                                             20 COMRAM     2     0      2
                _com_command_testLED
                            _delayMS
 ---------------------------------------------------------------------------------
 (2) _delayMS                                              6     4      2     251
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _com_command_testLED                                  2     0      2    7680
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (4) _command_builder2                                     6     0      6    7605
                                             12 COMRAM     6     0      6
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     397
                                              3 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     100
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   19305
                                             26 COMRAM    55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              6     2      4   18212
                                             20 COMRAM     6     2      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2365
                                             11 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     685
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    7473
                                             16 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    7398
                                             12 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    7848
                                             12 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    4166
                                              4 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    2994
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     864
                                              6 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPISlaveInit
   _communications
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_testLED
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _delayMS
     _send_data
       _SPI_send_data
   _init
     _delayMS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      54       4       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5B       1       95.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF       9        0.0%
DATA                 0      0      AF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Mar 26 22:28:21 2017

                                       _SPISlaveInit 0F94                                  ___wmul@multiplicand 0003  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l121 0BC6                                                  l134 0CA0  
                                                l238 1132                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  u680 10D8  
                                                u686 10DA                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0017  
                                               l1311 0B12                                                 l1305 0AD6  
                                               l1411 08BC                                                 l1403 08AA  
                                               l1423 093A                                                 l1425 096A  
                                               l1265 0E96                                                 l1281 09EA  
                                               l1601 0B42                                                 l1419 0910  
                                               l1427 0978                                                 l1291 0A5C  
                                               l1451 06D6                                                 l1523 0BEE  
                                               l1603 0B56                                                 l1611 0B94  
                                               l1269 0EC4                                                 l1285 0A26  
                                               l1293 0A60                                                 l1357 1084  
                                               l1471 07CE                                                 l1463 074C  
                                               l1439 0660                                                 l1535 0C34  
                                               l1367 109E                                                 l1615 0B9E  
                                               l1481 085C                                                 l1545 0C8E  
                                               l1369 10A2                                                 l1609 0B80  
                                               l1641 1192                                                 l1299 0A9C  
                                               l1475 0814                                                 l1387 112E  
                                               l1629 0BDC                                                 l1495 11B0  
                                               l1575 0E88                                                 l1567 0E26  
                                               STR_1 0629                                                 STR_2 0631  
                                               STR_3 0609                                                 STR_4 060F  
                                               STR_5 0601                                                 STR_6 061F  
                                               STR_7 0609                                                 STR_8 060F  
                                               STR_9 0601                                                 _main 117C  
                                               _init 0FE6                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 indf1 000FE7  
                                               fsr1l 000FE1                                                 indf2 000FDF  
                                               fsr2l 000FD9                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 001E                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 0000  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0054  
                                     _communications 0B1C                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 061A  
                                              STR_11 0615                                                STR_12 0635  
                                              STR_20 0624                                                STR_21 0615  
                                              STR_13 0631                                                STR_14 0615  
                                              STR_22 0629                                                STR_23 061F  
                                              STR_15 062D                                                STR_24 0615  
                                              STR_16 062D                                                STR_17 0631  
                                              STR_18 0615                                                STR_19 0635  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 000D  
                                  ?_command_builder2 000D                                    ?_command_builder3 000D  
                                    __end_of_delayMS 10B0                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0009  
                                 ??_command_builder1 0011                                   ??_command_builder2 0013  
                                 ??_command_builder3 0015                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0017                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                   __CFG_MCLRE$EXTMCLR 000000  
                                              init@i 0007                                                tablat 000FF5  
                                              status 000FD8                                      __end_of_strcmp2 0B1C  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 000B                        command_builder_add_string@inx 000B  
                                    __initialization 115C                                         __end_of_main 119A  
                                       __end_of_init 1036                               __end_of_communications 0BE2  
                __size_of_command_builder_add_string 005C                                     _SPI_receive_data 110E  
                       command_builder_add_char@data 0003                                               ??_main 0055  
                                             ??_init 0007                                        _SPI_send_data 119A  
                                      __activetblptr 000002                              _process_data_parameters 063A  
                                   receive_data@data 0007                                       __CFG_WDTEN$OFF 000000  
                        __end_of_com_command_testLED 11D6                                SPI_send_data@sendGood 0002  
                                     __CFG_XINST$OFF 000000                                               ___wmul 1136  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                             clear_0 1162                                            ??_delayMS 0003  
                                     ?_SPI_send_data 0001                            _process_data_parameterize 0860  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                          ??_strcmp2 0005                                     __end_of_strmatch 10E0  
                                      ?_receive_data 0004                                           __accesstop 0060  
                            __end_of__initialization 1172                                    SPI_send_data@data 0001  
                                     __pcstackCOMRAM 0001                           receive_data@receive_buffer 0004  
                          ??_process_data_parameters 0019                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0007                   __end_of_command_builder_add_string 0EE8  
                         _command_builder_add_string 0E8C                                           __pbssBANK0 0060  
                                     ??_receive_data 0006                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0008                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___wmul 0001                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0001                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 001A           communications@end_of_transmission_received 0058  
                        __end_of_resetCommunications 107A                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 11D6                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 0F3E                      __end_of_process_data_parameters 0860  
                           __end_of_SPI_receive_data 1136                            __size_of_command_builder1 0056  
                          __size_of_command_builder2 00BA                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 0009                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                                              __Lparam 0000  
           process_data_parameterize@parameter_index 0010                                      __size_of___wmul 0026  
                                       __psmallconst 0600                                 SPI_receive_data@data 0001  
                                            __pcinit 115C                                              _delayMS 107A  
                                            __ramtop 0600                                            ?_strmatch 000C  
                                            __ptext0 117C                                              __ptext1 0FE6  
                                            __ptext2 0B1C                                              __ptext3 0DFC  
                                            __ptext4 119A                                              __ptext5 1036  
                                            __ptext6 107A                                              __ptext7 11B8  
                                            __ptext8 0CA4                                              __ptext9 0BE2  
                                            _strcmp2 09D8                                 end_of_initialization 1172  
                 __size_of_process_data_parameterize 0178                                    __end_of_send_data 0E8C  
                                      __Lmediumconst 0000                                     ??_communications 0052  
        process_data_parameterize@parameter_position 0011                                              postinc0 000FEE  
                              receive_data@my_status 005B                                 __end_of_receive_data 0CA4  
                                         ??_strmatch 0010                                            _PORTBbits 000F81  
                    communications@last_state_active 0059                                        ?_process_data 001B  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 001B  
                  __end_of_process_data_parameterize 09D8                         __size_of_com_command_testLED 001E  
                communications@receive_current_state 005A                                        ?_SPISlaveInit 0001  
                                     __end_of___wmul 115C                command_builder_add_string@send_buffer 0005  
                                     ??_process_data 001F                          ?_command_builder_add_string 0005  
                                start_initialization 115C                                     _command_builder1 0EE8  
                                   _command_builder2 0CA4                                     _command_builder3 0D5E  
                               send_data@send_buffer 0003                                       ??_SPISlaveInit 0001  
                                           ??___wmul 0005                  send_end_of_transmission@send_buffer 0011  
                         ??_send_end_of_transmission 0013                           ??_command_builder_add_char 0004  
                                        __pbssCOMRAM 0057                             SPI_receive_data@recvGood 0003  
                                __end_of__stringdata 0638                                    ?_SPI_receive_data 0001  
                                 ??_SPI_receive_data 0003                       com_command_testLED@send_buffer 0013  
                              command_builder1@data1 000F                          command_builder1@send_buffer 000D  
                           ?_process_data_parameters 0015                                command_builder2@data1 000F  
                              command_builder2@data2 0011                                __size_of_receive_data 00C2  
                              command_builder3@data1 000F                                command_builder3@data2 0011  
                              command_builder3@data3 0013                                             ?_delayMS 0001  
                              __end_of_SPI_send_data 11B8                                          __smallconst 0600  
                     resetCommunications@send_buffer 0015                                    __size_of_strmatch 0030  
                                  send_data@send_end 0007                                             ?_strcmp2 0001  
                       __size_of_resetCommunications 0044                                       strmatch@result 0010  
                process_data_parameterize@parameters 0007                                         _receive_data 0BE2  
                                     ___wmul@product 0005                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                 __end_of_process_data 110E  
                                          _send_data 0DFC                    process_data_parameters@parameters 0015  
                                   __CFG_WDTPS$32768 000000                          command_builder2@send_buffer 000D  
                                           _SSP2CON3 000F69                                          __stringdata 0601  
                                  ___wmul@multiplier 0001                  command_builder_add_char@send_buffer 0001  
                                _com_command_testLED 11B8                                 __end_of_SPISlaveInit 0FE6  
           process_data@end_of_transmission_received 0051                                           ?_send_data 0003  
                                           __Hrparam 0000                                 ?_com_command_testLED 0013  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 000D                                    __CFG_P2BMX$PORTB5 000000  
                   __end_of_send_end_of_transmission 11EC                     __end_of_command_builder_add_char 0F94  
                                   __size_of_delayMS 0036                             __end_of_command_builder1 0F3E  
                           __end_of_command_builder2 0D5E                             __end_of_command_builder3 0DFC  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                         strcmp2@inx 000A                         process_data_parameterize@inx 000E  
                                           __ptext10 110E                                             __ptext11 10E0  
                                           __ptext20 0860                                             __ptext12 063A  
                                           __ptext21 1136                                             __ptext13 10B0  
                                           __ptext22 0F94                                             __ptext14 09D8  
                                           __ptext15 11D6                                             __ptext16 0EE8  
                                           __ptext17 0D5E                                             __ptext18 0E8C  
                                           __ptext19 0F3E                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 0144  
                                      __size_of_main 001E                                        strmatch@match 0012  
                                      __size_of_init 0050                                             delayMS@a 0001  
                                           delayMS@i 0003                                             delayMS@j 0005  
                         ?_process_data_parameterize 0007                                ??_com_command_testLED 0015  
                            __size_of_communications 00C6                                             _strmatch 10B0  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 001D  
                              __size_of_process_data 002E                               process_data@parameters 001F  
                      communications@no_more_to_send 0053                                      main@togglePulse 0055  
                                        ??_send_data 0005                                            strmatch@a 000C  
                                          strmatch@b 000E                                  _resetCommunications 1036  
                          __size_of_SPI_receive_data 0028                                             strcmp2@a 0001  
                                           strcmp2@b 0003                                         _process_data 10E0  
                                  _SPI_transmit_wait 0057                                __size_of_SPISlaveInit 0052  
                          communications@send_buffer 008A                     __size_of_process_data_parameters 0226  
                                  __CFG_T3CMX$PORTC0 000000                                 ?_resetCommunications 0015  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0011  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0001  
