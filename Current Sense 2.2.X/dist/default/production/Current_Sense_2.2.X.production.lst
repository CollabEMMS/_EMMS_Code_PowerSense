

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Feb 22 10:41:32 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.43
    60                           ; Generated 25/07/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18LF25K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  001C4E                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for powerPulseCheck@timerCountLFLast
    99  001C4E  FFFF               	dw	65535
   100  001C50  7FFF               	dw	32767
   101                           
   102                           ;initializer for powerPulseCheck@energyPerPulse
   103  001C52  6978               	dw	27000
   104  001C54  0000               	dw	0
   105                           
   106                           ;initializer for powerPulseCheck@firstPulse
   107  001C56  01                 	db	1
   108                           
   109                           ;initializer for _useLF
   110  001C57  01                 	db	1
   111                           
   112                           	psect	idataBANK0
   113  001C2A                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for powerPulseCheck@PIECEWISE_FUNC
   117  001C2A  6978               	dw	27000
   118  001C2C  0000               	dw	0
   119  001C2E  01D3               	dw	467
   120  001C30  0000               	dw	0
   121  001C32  00DC               	dw	220
   122  001C34  0000               	dw	0
   123                           
   124                           ;initializer for powerPulseCheck@timerCountHFLast
   125  001C36  FFFF               	dw	65535
   126  001C38  7FFF               	dw	32767
   127                           
   128                           ;initializer for powerPulseCheck@timerCountHFCheck
   129  001C3A  0001               	dw	1
   130  0000                     _ANSELBbits	set	3897
   131  0000                     _ANSELAbits	set	3896
   132  0000                     _ANSELC	set	3898
   133  0000                     _ANSELB	set	3897
   134  0000                     _ANSELA	set	3896
   135  0000                     _SSP2CON3bits	set	3945
   136  0000                     _SSP2CON3	set	3945
   137  0000                     _SSP2BUF	set	3951
   138  0000                     _SSP2STATbits	set	3949
   139  0000                     _SSP2CON1bits	set	3948
   140  0000                     _LATCbits	set	3979
   141  0000                     _T0CONbits	set	4053
   142  0000                     _IPR5	set	3967
   143  0000                     _IPR4	set	3964
   144  0000                     _IPR3	set	4005
   145  0000                     _IPR2	set	4002
   146  0000                     _IPR1	set	3999
   147  0000                     _PIE5	set	3965
   148  0000                     _PIE4	set	3962
   149  0000                     _PIE3	set	4003
   150  0000                     _PIE2	set	4000
   151  0000                     _PIE1	set	3997
   152  0000                     _PIR5	set	3966
   153  0000                     _PIR4	set	3963
   154  0000                     _PIR3	set	4004
   155  0000                     _PIR2	set	4001
   156  0000                     _PIR1	set	3998
   157  0000                     _RCONbits	set	4048
   158  0000                     _INTCON3	set	4080
   159  0000                     _INTCON2	set	4081
   160  0000                     _INTCON	set	4082
   161  0000                     _TRISAbits	set	3986
   162  0000                     _TRISCbits	set	3988
   163  0000                     _TRISBbits	set	3987
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _OSCTUNEbits	set	3995
   166  0000                     _OSCCON2bits	set	4050
   167  0000                     _OSCCONbits	set	4051
   168  0000                     _TMR0L	set	4054
   169  0000                     _TMR0H	set	4055
   170  0000                     _INTCONbits	set	4082
   171  0000                     _PORTCbits	set	3970
   172  0000                     _PORTBbits	set	3969
   173  0000                     _LATAbits	set	3977
   174  0000                     _PORTAbits	set	3968
   175  0000                     _LATBbits	set	3978
   176                           
   177                           	psect	smallconst
   178  000600                     __psmallconst:
   179                           	opt stack 0
   180  000600  00                 	db	0
   181  000601                     STR_3:
   182                           
   183                           ; BSR set to: 0
   184  000601  43                 	db	67	;'C'
   185  000602  61                 	db	97	;'a'
   186  000603  6C                 	db	108	;'l'
   187  000604  69                 	db	105	;'i'
   188  000605  62                 	db	98	;'b'
   189  000606  72                 	db	114	;'r'
   190  000607  61                 	db	97	;'a'
   191  000608  74                 	db	116	;'t'
   192  000609  69                 	db	105	;'i'
   193  00060A  6F                 	db	111	;'o'
   194  00060B  6E                 	db	110	;'n'
   195  00060C  00                 	db	0
   196  00060D                     STR_22:
   197                           
   198                           ; BSR set to: 0
   199  00060D  50                 	db	80	;'P'
   200  00060E  53                 	db	83	;'S'
   201  00060F  56                 	db	86	;'V'
   202  000610  65                 	db	101	;'e'
   203  000611  72                 	db	114	;'r'
   204  000612  73                 	db	115	;'s'
   205  000613  69                 	db	105	;'i'
   206  000614  6F                 	db	111	;'o'
   207  000615  6E                 	db	110	;'n'
   208  000616  00                 	db	0
   209  000617                     STR_4:
   210                           
   211                           ; BSR set to: 0
   212  000617  45                 	db	69	;'E'
   213  000618  6E                 	db	110	;'n'
   214  000619  55                 	db	85	;'U'
   215  00061A  73                 	db	115	;'s'
   216  00061B  65                 	db	101	;'e'
   217  00061C  64                 	db	100	;'d'
   218  00061D  00                 	db	0
   219  00061E                     STR_20:
   220                           
   221                           ; BSR set to: 0
   222  00061E  56                 	db	86	;'V'
   223  00061F  6F                 	db	111	;'o'
   224  000620  6C                 	db	108	;'l'
   225  000621  74                 	db	116	;'t'
   226  000622  73                 	db	115	;'s'
   227  000623  00                 	db	0
   228  000624                     STR_18:
   229                           
   230                           ; BSR set to: 0
   231  000624  57                 	db	87	;'W'
   232  000625  61                 	db	97	;'a'
   233  000626  74                 	db	116	;'t'
   234  000627  74                 	db	116	;'t'
   235  000628  73                 	db	115	;'s'
   236  000629  00                 	db	0
   237  00062A                     STR_7:
   238                           
   239                           ; BSR set to: 0
   240  00062A  4C                 	db	76	;'L'
   241  00062B  45                 	db	69	;'E'
   242  00062C  44                 	db	68	;'D'
   243  00062D  42                 	db	66	;'B'
   244  00062E  00                 	db	0
   245  00062F                     STR_6:
   246                           
   247                           ; BSR set to: 0
   248  00062F  44                 	db	68	;'D'
   249  000630  61                 	db	97	;'a'
   250  000631  74                 	db	116	;'t'
   251  000632  61                 	db	97	;'a'
   252  000633  00                 	db	0
   253  000634                     STR_5:
   254                           
   255                           ; BSR set to: 0
   256  000634  52                 	db	82	;'R'
   257  000635  65                 	db	101	;'e'
   258  000636  61                 	db	97	;'a'
   259  000637  64                 	db	100	;'d'
   260  000638  00                 	db	0
   261  000639                     STR_16:
   262                           
   263                           ; BSR set to: 0
   264  000639  43                 	db	67	;'C'
   265  00063A  6F                 	db	111	;'o'
   266  00063B  6E                 	db	110	;'n'
   267  00063C  66                 	db	102	;'f'
   268  00063D  00                 	db	0
   269  00063E                     STR_21:
   270                           
   271                           ; BSR set to: 0
   272  00063E  41                 	db	65	;'A'
   273  00063F  6D                 	db	109	;'m'
   274  000640  70                 	db	112	;'p'
   275  000641  73                 	db	115	;'s'
   276  000642  00                 	db	0
   277  000643                     
   278                           ; BSR set to: 0
   279  000643  32                 	db	50	;'2'
   280  000644  32                 	db	50	;'2'
   281  000645  32                 	db	50	;'2'
   282  000646  00                 	db	0
   283  000647                     
   284                           ; BSR set to: 0
   285  000647  33                 	db	51	;'3'
   286  000648  33                 	db	51	;'3'
   287  000649  33                 	db	51	;'3'
   288  00064A  00                 	db	0
   289  00064B                     STR_40:
   290                           
   291                           ; BSR set to: 0
   292  00064B  34                 	db	52	;'4'
   293  00064C  34                 	db	52	;'4'
   294  00064D  34                 	db	52	;'4'
   295  00064E  00                 	db	0
   296  00064F                     STR_1:
   297                           
   298                           ; BSR set to: 0
   299  00064F  45                 	db	69	;'E'
   300  000650  4E                 	db	78	;'N'
   301  000651  44                 	db	68	;'D'
   302  000652  00                 	db	0
   303  000653                     STR_11:
   304                           
   305                           ; BSR set to: 0
   306  000653  4F                 	db	79	;'O'
   307  000654  66                 	db	102	;'f'
   308  000655  66                 	db	102	;'f'
   309  000656  00                 	db	0
   310  000657                     STR_2:
   311                           
   312                           ; BSR set to: 0
   313  000657  53                 	db	83	;'S'
   314  000658  65                 	db	101	;'e'
   315  000659  74                 	db	116	;'t'
   316  00065A  00                 	db	0
   317  00065B                     STR_8:
   318                           
   319                           ; BSR set to: 0
   320  00065B  4F                 	db	79	;'O'
   321  00065C  6E                 	db	110	;'n'
   322  00065D  00                 	db	0
   323  0000                     
   324                           ; #config settings
   325  00065E  00                 	db	0	; dummy byte at the end
   326  0000                     
   327                           	psect	cinit
   328  0016EC                     __pcinit:
   329                           	opt stack 0
   330  0016EC                     start_initialization:
   331                           	opt stack 0
   332  0016EC                     __initialization:
   333                           	opt stack 0
   334                           
   335                           ; Initialize objects allocated to BANK0 (18 bytes)
   336                           ; load TBLPTR registers with __pidataBANK0
   337  0016EC  0E2A               	movlw	low __pidataBANK0
   338  0016EE  6EF6               	movwf	tblptrl,c
   339  0016F0  0E1C               	movlw	high __pidataBANK0
   340  0016F2  6EF7               	movwf	tblptrh,c
   341  0016F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   342  0016F6  6EF8               	movwf	tblptru,c
   343  0016F8  EE00  F0C4         	lfsr	0,__pdataBANK0
   344  0016FC  EE10 F012          	lfsr	1,18
   345  001700                     copy_data0:
   346  001700  0009               	tblrd		*+
   347  001702  CFF5 FFEE          	movff	tablat,postinc0
   348  001706  50E5               	movf	postdec1,w,c
   349  001708  50E1               	movf	fsr1l,w,c
   350  00170A  E1FA               	bnz	copy_data0
   351                           
   352                           ; Initialize objects allocated to COMRAM (10 bytes)
   353                           ; load TBLPTR registers with __pidataCOMRAM
   354  00170C  0E4E               	movlw	low __pidataCOMRAM
   355  00170E  6EF6               	movwf	tblptrl,c
   356  001710  0E1C               	movlw	high __pidataCOMRAM
   357  001712  6EF7               	movwf	tblptrh,c
   358  001714  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   359  001716  6EF8               	movwf	tblptru,c
   360  001718  EE00  F03A         	lfsr	0,__pdataCOMRAM
   361  00171C  EE10 F00A          	lfsr	1,10
   362  001720                     copy_data1:
   363  001720  0009               	tblrd		*+
   364  001722  CFF5 FFEE          	movff	tablat,postinc0
   365  001726  50E5               	movf	postdec1,w,c
   366  001728  50E1               	movf	fsr1l,w,c
   367  00172A  E1FA               	bnz	copy_data1
   368                           
   369                           ; Clear objects allocated to BANK1 (42 bytes)
   370  00172C  EE01  F033         	lfsr	0,__pbssBANK1
   371  001730  0E2A               	movlw	42
   372  001732                     clear_0:
   373  001732  6AEE               	clrf	postinc0,c
   374  001734  06E8               	decf	wreg,f,c
   375  001736  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (71 bytes)
   378  001738  EE00  F060         	lfsr	0,__pbssBANK0
   379  00173C  0E47               	movlw	71
   380  00173E                     clear_1:
   381  00173E  6AEE               	clrf	postinc0,c
   382  001740  06E8               	decf	wreg,f,c
   383  001742  E1FD               	bnz	clear_1
   384                           
   385                           ; Clear objects allocated to COMRAM (9 bytes)
   386  001744  EE00  F044         	lfsr	0,__pbssCOMRAM
   387  001748  0E09               	movlw	9
   388  00174A                     clear_2:
   389  00174A  6AEE               	clrf	postinc0,c
   390  00174C  06E8               	decf	wreg,f,c
   391  00174E  E1FD               	bnz	clear_2
   392  001750                     end_of_initialization:
   393                           	opt stack 0
   394  001750                     __end_of__initialization:
   395                           	opt stack 0
   396  001750  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   397  001752  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   398  001754  0E00               	movlw	low (__Lmediumconst shr (0+16))
   399  001756  6EF8               	movwf	tblptru,c
   400  001758  0100               	movlb	0
   401  00175A  EFE2  F008         	goto	_main	;jump to C main() function
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           tblptrl	equ	0xFF6
   405                           tablat	equ	0xFF5
   406                           postinc0	equ	0xFEE
   407                           wreg	equ	0xFE8
   408                           postdec1	equ	0xFE5
   409                           fsr1l	equ	0xFE1
   410                           
   411                           	psect	bssCOMRAM
   412  000044                     __pbssCOMRAM:
   413                           	opt stack 0
   414  000044                     _timerCountHF:
   415                           	opt stack 0
   416  000044                     	ds	4
   417  000048                     receive_data@my_status:
   418                           	opt stack 0
   419  000048                     	ds	1
   420  000049                     _SPI_transmit_wait:
   421                           	opt stack 0
   422  000049                     	ds	1
   423  00004A                     powerPulseCheck@mcpLFoutLast:
   424                           	opt stack 0
   425  00004A                     	ds	1
   426  00004B                     powerPulseCheck@mcpHFoutLast:
   427                           	opt stack 0
   428  00004B                     	ds	1
   429  00004C                     pulseFoutPassThru@runonce:
   430                           	opt stack 0
   431  00004C                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	dataCOMRAM
   442  00003A                     __pdataCOMRAM:
   443                           	opt stack 0
   444  00003A                     powerPulseCheck@timerCountLFLast:
   445                           	opt stack 0
   446  00003A                     	ds	4
   447  00003E                     powerPulseCheck@energyPerPulse:
   448                           	opt stack 0
   449  00003E                     	ds	4
   450  000042                     powerPulseCheck@firstPulse:
   451                           	opt stack 0
   452  000042                     	ds	1
   453  000043                     _useLF:
   454                           	opt stack 0
   455  000043                     	ds	1
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	bssBANK0
   466  000060                     __pbssBANK0:
   467                           	opt stack 0
   468  000060                     powerPulseCheck@meterEnergyUsedPart:
   469                           	opt stack 0
   470  000060                     	ds	4
   471  000064                     _timerCountLF:
   472                           	opt stack 0
   473  000064                     	ds	4
   474  000068                     _meterEnergyUsed:
   475                           	opt stack 0
   476  000068                     	ds	4
   477  00006C                     _meterWattsLF:
   478                           	opt stack 0
   479  00006C                     	ds	4
   480  000070                     _meterWattsHF:
   481                           	opt stack 0
   482  000070                     	ds	4
   483  000074                     _meterWatts:
   484                           	opt stack 0
   485  000074                     	ds	4
   486  000078                     resetCommunications@commState:
   487                           	opt stack 0
   488  000078                     	ds	2
   489  00007A                     communications@last_state_active:
   490                           	opt stack 0
   491  00007A                     	ds	1
   492  00007B                     communications@receive_current_state:
   493                           	opt stack 0
   494  00007B                     	ds	1
   495  00007C                     communications@end_of_transmission_received:
   496                           	opt stack 0
   497  00007C                     	ds	1
   498  00007D                     communications@send_buffer:
   499                           	opt stack 0
   500  00007D                     	ds	42
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	dataBANK0
   511  0000C4                     __pdataBANK0:
   512                           	opt stack 0
   513  0000C4                     powerPulseCheck@PIECEWISE_FUNC:
   514                           	opt stack 0
   515  0000C4                     	ds	12
   516  0000D0                     powerPulseCheck@timerCountHFLast:
   517                           	opt stack 0
   518  0000D0                     	ds	4
   519  0000D4                     powerPulseCheck@timerCountHFCheck:
   520                           	opt stack 0
   521  0000D4                     	ds	2
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	bssBANK1
   532  000133                     __pbssBANK1:
   533                           	opt stack 0
   534  000133                     communications@receive_buffer:
   535                           	opt stack 0
   536  000133                     	ds	42
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	cstackBANK1
   547  000100                     __pcstackBANK1:
   548                           	opt stack 0
   549  000100                     process_data@parameters:
   550                           	opt stack 0
   551                           
   552                           ; 50 bytes @ 0x0
   553  000100                     	ds	50
   554  000132                     process_data@end_of_transmission_received:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x32
   558  000132                     	ds	1
   559                           tblptru	equ	0xFF8
   560                           tblptrh	equ	0xFF7
   561                           tblptrl	equ	0xFF6
   562                           tablat	equ	0xFF5
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           postdec1	equ	0xFE5
   566                           fsr1l	equ	0xFE1
   567                           
   568                           	psect	cstackBANK0
   569  0000A7                     __pcstackBANK0:
   570                           	opt stack 0
   571  0000A7                     com_command_setPower@send_buffer:
   572                           	opt stack 0
   573  0000A7                     com_command_setEnergyUsed@send_buffer:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x0
   577  0000A7                     	ds	2
   578  0000A9                     com_command_setPower@temp:
   579                           	opt stack 0
   580  0000A9                     com_command_setEnergyUsed@temp:
   581                           	opt stack 0
   582                           
   583                           ; 12 bytes @ 0x2
   584  0000A9                     	ds	12
   585  0000B5                     resetCommunications@send_buffer:
   586                           	opt stack 0
   587  0000B5                     process_data_parameters@parameters:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  0000B5                     	ds	2
   592  0000B7                     ??_resetCommunications:
   593  0000B7                     process_data_parameters@send_buffer:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x10
   597  0000B7                     	ds	2
   598  0000B9                     process_data@receive_buffer:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x12
   602  0000B9                     	ds	2
   603  0000BB                     process_data@send_buffer:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x14
   607  0000BB                     	ds	2
   608  0000BD                     communications@no_more_to_send:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x16
   612  0000BD                     	ds	1
   613  0000BE                     communications@firstTime:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x17
   617  0000BE                     	ds	1
   618  0000BF                     main@initDone:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x18
   622  0000BF                     	ds	1
   623  0000C0                     main@inx:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x19
   627  0000C0                     	ds	2
   628  0000C2                     main@inx_1087:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1B
   632  0000C2                     	ds	2
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     ??_Timer0_ISR:
   646                           
   647                           ; 1 bytes @ 0x0
   648  000001                     	ds	18
   649  000013                     ??_isdigit:
   650  000013                     ?_strcmp2:
   651                           	opt stack 0
   652  000013                     ?___wmul:
   653                           	opt stack 0
   654  000013                     ?___lmul:
   655                           	opt stack 0
   656  000013                     ?___llmod:
   657                           	opt stack 0
   658  000013                     SPI_send_data@data:
   659                           	opt stack 0
   660  000013                     delayMS10@count:
   661                           	opt stack 0
   662  000013                     command_builder_add_char@send_buffer:
   663                           	opt stack 0
   664  000013                     strcmp2@a:
   665                           	opt stack 0
   666  000013                     SPI_receive_data@data:
   667                           	opt stack 0
   668  000013                     ___wmul@multiplier:
   669                           	opt stack 0
   670  000013                     ___lmul@multiplier:
   671                           	opt stack 0
   672  000013                     ___llmod@dividend:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x12
   676  000013                     	ds	1
   677  000014                     SPI_send_data@sendGood:
   678                           	opt stack 0
   679  000014                     _isdigit$2291:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x13
   683  000014                     	ds	1
   684  000015                     ??_delayMS10:
   685  000015                     command_builder_add_char@data:
   686                           	opt stack 0
   687  000015                     SPI_receive_data@recvGood:
   688                           	opt stack 0
   689  000015                     isdigit@c:
   690                           	opt stack 0
   691  000015                     send_data@send_buffer:
   692                           	opt stack 0
   693  000015                     strcmp2@b:
   694                           	opt stack 0
   695  000015                     ___wmul@multiplicand:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x14
   699  000015                     	ds	1
   700  000016                     ??_command_builder_add_char:
   701  000016                     delayMS10@inx:
   702                           	opt stack 0
   703  000016                     receive_data@receive_buffer:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x15
   707  000016                     	ds	1
   708  000017                     ??_send_data:
   709  000017                     ??_strcmp2:
   710  000017                     command_builder_add_string@send_buffer:
   711                           	opt stack 0
   712  000017                     ___wmul@product:
   713                           	opt stack 0
   714  000017                     ___lmul@multiplicand:
   715                           	opt stack 0
   716  000017                     ___llmod@divisor:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x16
   720  000017                     	ds	1
   721  000018                     ??_initMCPFout:
   722  000018                     ??_receive_data:
   723                           
   724                           ; 1 bytes @ 0x17
   725  000018                     	ds	1
   726  000019                     receive_data@data:
   727                           	opt stack 0
   728  000019                     send_data@send_end:
   729                           	opt stack 0
   730  000019                     process_data_parameterize@parameters:
   731                           	opt stack 0
   732  000019                     command_builder_add_string@data_string:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x18
   736  000019                     	ds	1
   737  00001A                     strcmp2@match:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x19
   741  00001A                     	ds	1
   742  00001B                     ??_command_builder_add_string:
   743  00001B                     ___llmod@counter:
   744                           	opt stack 0
   745  00001B                     process_data_parameterize@buffer_to_parameterize:
   746                           	opt stack 0
   747  00001B                     ___lmul@product:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x1A
   751  00001B                     	ds	1
   752  00001C                     strcmp2@inx:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x1B
   756  00001C                     	ds	1
   757  00001D                     ??_process_data_parameterize:
   758  00001D                     command_builder_add_string@inx:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x1C
   762  00001D                     	ds	1
   763  00001E                     strmatch@a:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x1D
   767  00001E                     	ds	1
   768  00001F                     ?_atol:
   769                           	opt stack 0
   770  00001F                     ?___lldiv:
   771                           	opt stack 0
   772  00001F                     command_builder1@send_buffer:
   773                           	opt stack 0
   774  00001F                     command_builder3@send_buffer:
   775                           	opt stack 0
   776  00001F                     atol@s:
   777                           	opt stack 0
   778  00001F                     ___lldiv@dividend:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x1E
   782  00001F                     	ds	1
   783  000020                     process_data_parameterize@inx:
   784                           	opt stack 0
   785  000020                     strmatch@b:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x1F
   789  000020                     	ds	1
   790  000021                     command_builder1@data1:
   791                           	opt stack 0
   792  000021                     command_builder3@data1:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x20
   796  000021                     	ds	1
   797  000022                     process_data_parameterize@parameter_index:
   798                           	opt stack 0
   799  000022                     strmatch@result:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x21
   803  000022                     	ds	1
   804  000023                     ??_atol:
   805  000023                     process_data_parameterize@parameter_position:
   806                           	opt stack 0
   807  000023                     command_builder3@data2:
   808                           	opt stack 0
   809  000023                     send_end_of_transmission@send_buffer:
   810                           	opt stack 0
   811  000023                     ___lldiv@divisor:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x22
   815  000023                     	ds	1
   816  000024                     strmatch@match:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x23
   820  000024                     	ds	1
   821  000025                     command_builder3@data3:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x24
   825  000025                     	ds	2
   826  000027                     atol@sign:
   827                           	opt stack 0
   828  000027                     com_command_setVersion@send_buffer:
   829                           	opt stack 0
   830  000027                     ___lldiv@quotient:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x26
   834  000027                     	ds	1
   835  000028                     atol@a:
   836                           	opt stack 0
   837                           
   838                           ; 4 bytes @ 0x27
   839  000028                     	ds	1
   840  000029                     
   841                           ; 1 bytes @ 0x28
   842  000029                     	ds	2
   843  00002B                     ___lldiv@counter:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x2A
   847  00002B                     	ds	1
   848  00002C                     ??_powerPulseCheck:
   849  00002C                     atol@c:
   850                           	opt stack 0
   851  00002C                     ultoa@buf:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x2B
   855  00002C                     	ds	2
   856  00002E                     ultoa@val:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x2D
   860  00002E                     	ds	2
   861  000030                     _powerPulseCheck$2649:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x2F
   865  000030                     	ds	2
   866  000032                     ultoa@base:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x31
   870  000032                     	ds	2
   871  000034                     ultoa@v:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x33
   875  000034                     	ds	4
   876  000038                     ultoa@c:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x37
   880  000038                     	ds	1
   881  000039                     process_data_parameters@end_of_transmission_received:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x38
   885  000039                     	ds	1
   886  00003A                     tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec1	equ	0xFE5
   893                           fsr1l	equ	0xFE1
   894                           
   895                           ; 1 bytes @ 0x39
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 83 in file "Current_Sense_Main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  inx             2   27[BANK0 ] int 
   906 ;;  inx             2   25[BANK0 ] int 
   907 ;;  initDone        1   24[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   917 ;;      Params:         0       0       0       0       0       0       0
   918 ;;      Locals:         0       5       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0
   920 ;;      Totals:         0       5       0       0       0       0       0
   921 ;;Total ram usage:        5 bytes
   922 ;; Hardware stack levels required when called:    8
   923 ;; This function calls:
   924 ;;		_communications
   925 ;;		_delayMS10
   926 ;;		_init
   927 ;;		_initMCPFout
   928 ;;		_initTimer
   929 ;;		_powerPulseCheck
   930 ;;		_pulseFoutPassThru
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text0
   937  0011C4                     __ptext0:
   938                           	opt stack 0
   939  0011C4                     _main:
   940                           	opt stack 23
   941                           
   942                           ;Current_Sense_Main.c: 84: init();
   943                           
   944                           ;incstack = 0
   945  0011C4  EC1E  F00E         	call	_init	;wreg free
   946                           
   947                           ;Current_Sense_Main.c: 86: for (int inx = 0; inx < 10; inx++) {
   948  0011C8  0E00               	movlw	0
   949  0011CA  0100               	movlb	0	; () banked
   950  0011CC  6FC1               	movwf	(main@inx+1)& (0+255),b
   951  0011CE  0E00               	movlw	0
   952  0011D0  6FC0               	movwf	main@inx& (0+255),b
   953  0011D2                     l3204:
   954                           
   955                           ; BSR set to: 0
   956  0011D2  0100               	movlb	0	; () banked
   957  0011D4  BFC1               	btfsc	(main@inx+1)& (0+255),7,b
   958  0011D6  D008               	goto	l119
   959  0011D8  0100               	movlb	0	; () banked
   960  0011DA  51C1               	movf	(main@inx+1)& (0+255),w,b
   961  0011DC  E117               	bnz	l3216
   962  0011DE  0E0A               	movlw	10
   963  0011E0  0100               	movlb	0	; () banked
   964  0011E2  5DC0               	subwf	main@inx& (0+255),w,b
   965  0011E4  B0D8               	btfsc	status,0,c
   966  0011E6  D012               	goto	u2890
   967  0011E8                     l119:
   968                           
   969                           ; BSR set to: 0
   970                           ;Current_Sense_Main.c: 87: LATBbits.LATB4 = 1;
   971  0011E8  888A               	bsf	3978,4,c	;volatile
   972                           
   973                           ; BSR set to: 0
   974                           ;Current_Sense_Main.c: 88: delayMS10(10);
   975  0011EA  0E00               	movlw	0
   976  0011EC  6E14               	movwf	delayMS10@count+1,c
   977  0011EE  0E0A               	movlw	10
   978  0011F0  6E13               	movwf	delayMS10@count,c
   979  0011F2  EC40  F00D         	call	_delayMS10	;wreg free
   980                           
   981                           ;Current_Sense_Main.c: 89: LATBbits.LATB4 = 0;
   982  0011F6  988A               	bcf	3978,4,c	;volatile
   983                           
   984                           ;Current_Sense_Main.c: 90: delayMS10(10);
   985  0011F8  0E00               	movlw	0
   986  0011FA  6E14               	movwf	delayMS10@count+1,c
   987  0011FC  0E0A               	movlw	10
   988  0011FE  6E13               	movwf	delayMS10@count,c
   989  001200  EC40  F00D         	call	_delayMS10	;wreg free
   990  001204  0100               	movlb	0	; () banked
   991  001206  4BC0               	infsnz	main@inx& (0+255),f,b
   992  001208  2BC1               	incf	(main@inx+1)& (0+255),f,b
   993  00120A  D7E3               	goto	l3204
   994  00120C                     u2890:
   995  00120C                     l3216:
   996                           
   997                           ; BSR set to: 0
   998                           ;Current_Sense_Main.c: 91: }
   999                           ;Current_Sense_Main.c: 93: initTimer();
  1000  00120C  ECF2  F00D         	call	_initTimer	;wreg free
  1001                           
  1002                           ;Current_Sense_Main.c: 121: communications(1);
  1003  001210  0E01               	movlw	1
  1004  001212  ECAE  F009         	call	_communications
  1005                           
  1006                           ;Current_Sense_Main.c: 128: bool initDone = 0;
  1007  001216  0E00               	movlw	0
  1008  001218  0100               	movlb	0	; () banked
  1009  00121A  6FBF               	movwf	main@initDone& (0+255),b
  1010  00121C                     l3222:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;Current_Sense_Main.c: 131: communications(0);
  1014  00121C  0E00               	movlw	0
  1015  00121E  ECAE  F009         	call	_communications
  1016                           
  1017                           ;Current_Sense_Main.c: 132: pulseFoutPassThru();
  1018  001222  EC63  F00C         	call	_pulseFoutPassThru	;wreg free
  1019                           
  1020                           ;Current_Sense_Main.c: 133: powerPulseCheck();
  1021  001226  EC30  F003         	call	_powerPulseCheck	;wreg free
  1022                           
  1023                           ;Current_Sense_Main.c: 136: if (initDone == 0) {
  1024  00122A  0100               	movlb	0	; () banked
  1025  00122C  51BF               	movf	main@initDone& (0+255),w,b
  1026  00122E  0100               	movlb	0	; () banked
  1027  001230  A4D8               	btfss	status,2,c
  1028  001232  D7F4               	goto	l121
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;Current_Sense_Main.c: 137: if (timerCountLF > 1000) {
  1032  001234  0100               	movlb	0	; () banked
  1033  001236  5167               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1034  001238  0100               	movlb	0	; () banked
  1035  00123A  1166               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1036  00123C  E108               	bnz	u2910
  1037  00123E  0EE9               	movlw	233
  1038  001240  0100               	movlb	0	; () banked
  1039  001242  5D64               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1040  001244  0E03               	movlw	3
  1041  001246  0100               	movlb	0	; () banked
  1042  001248  5965               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1043  00124A  A0D8               	btfss	status,0,c
  1044  00124C  D7E7               	goto	l121
  1045  00124E                     u2910:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;Current_Sense_Main.c: 138: initMCPFout();
  1049  00124E  EC71  F00D         	call	_initMCPFout	;wreg free
  1050                           
  1051                           ;Current_Sense_Main.c: 139: initDone = 1;
  1052  001252  0E01               	movlw	1
  1053  001254  0100               	movlb	0	; () banked
  1054  001256  6FBF               	movwf	main@initDone& (0+255),b
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;Current_Sense_Main.c: 141: for (int inx = 0; inx < 10; inx++) {
  1058  001258  0E00               	movlw	0
  1059  00125A  0100               	movlb	0	; () banked
  1060  00125C  6FC3               	movwf	(main@inx_1087+1)& (0+255),b
  1061  00125E  0E00               	movlw	0
  1062  001260  6FC2               	movwf	main@inx_1087& (0+255),b
  1063  001262                     l3238:
  1064                           
  1065                           ; BSR set to: 0
  1066  001262  0100               	movlb	0	; () banked
  1067  001264  BFC3               	btfsc	(main@inx_1087+1)& (0+255),7,b
  1068  001266  D008               	goto	l124
  1069  001268  0100               	movlb	0	; () banked
  1070  00126A  51C3               	movf	(main@inx_1087+1)& (0+255),w,b
  1071  00126C  E1D7               	bnz	l3222
  1072  00126E  0E0A               	movlw	10
  1073  001270  0100               	movlb	0	; () banked
  1074  001272  5DC2               	subwf	main@inx_1087& (0+255),w,b
  1075  001274  B0D8               	btfsc	status,0,c
  1076  001276  D7D2               	goto	l121
  1077  001278                     l124:
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;Current_Sense_Main.c: 142: LATBbits.LATB4 = 1;
  1081  001278  888A               	bsf	3978,4,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;Current_Sense_Main.c: 143: delayMS10(3);
  1085  00127A  0E00               	movlw	0
  1086  00127C  6E14               	movwf	delayMS10@count+1,c
  1087  00127E  0E03               	movlw	3
  1088  001280  6E13               	movwf	delayMS10@count,c
  1089  001282  EC40  F00D         	call	_delayMS10	;wreg free
  1090                           
  1091                           ;Current_Sense_Main.c: 144: LATBbits.LATB4 = 0;
  1092  001286  988A               	bcf	3978,4,c	;volatile
  1093                           
  1094                           ;Current_Sense_Main.c: 145: delayMS10(5);
  1095  001288  0E00               	movlw	0
  1096  00128A  6E14               	movwf	delayMS10@count+1,c
  1097  00128C  0E05               	movlw	5
  1098  00128E  6E13               	movwf	delayMS10@count,c
  1099  001290  EC40  F00D         	call	_delayMS10	;wreg free
  1100  001294  0100               	movlb	0	; () banked
  1101  001296  4BC2               	infsnz	main@inx_1087& (0+255),f,b
  1102  001298  2BC3               	incf	(main@inx_1087+1)& (0+255),f,b
  1103  00129A  D7E3               	goto	l3238
  1104  00129C                     __end_of_main:
  1105                           	opt stack 0
  1106                           tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _pulseFoutPassThru *****************
  1117 ;; Defined at:
  1118 ;;		line 188 in file "Current_Sense_Main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text1
  1147  0018C6                     __ptext1:
  1148                           	opt stack 0
  1149  0018C6                     _pulseFoutPassThru:
  1150                           	opt stack 29
  1151                           
  1152                           ;Current_Sense_Main.c: 190: static bool runonce = 0;
  1153                           ;Current_Sense_Main.c: 191: if (useLF) {
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;incstack = 0
  1157  0018C6  5043               	movf	_useLF,w,c	;volatile
  1158  0018C8  B4D8               	btfsc	status,2,c
  1159  0018CA  D012               	goto	l133
  1160                           
  1161                           ;Current_Sense_Main.c: 192: if (PORTAbits.RA1 == 0) {
  1162  0018CC  B280               	btfsc	3968,1,c	;volatile
  1163  0018CE  D00C               	goto	l134
  1164                           
  1165                           ;Current_Sense_Main.c: 193: LATAbits.LATA0 = 1;
  1166  0018D0  8089               	bsf	3977,0,c	;volatile
  1167                           
  1168                           ;Current_Sense_Main.c: 194: if (runonce == 0) {
  1169  0018D2  504C               	movf	pulseFoutPassThru@runonce,w,c
  1170  0018D4  A4D8               	btfss	status,2,c
  1171  0018D6  0012               	return	
  1172                           
  1173                           ;Current_Sense_Main.c: 195: runonce = 1;
  1174  0018D8  0E01               	movlw	1
  1175  0018DA  6E4C               	movwf	pulseFoutPassThru@runonce,c
  1176                           
  1177                           ;Current_Sense_Main.c: 196: if (PORTBbits.RB4 == 1) {
  1178  0018DC  A881               	btfss	3969,4,c	;volatile
  1179  0018DE  D002               	goto	l136
  1180                           
  1181                           ;Current_Sense_Main.c: 197: LATBbits.LATB4 = 0;
  1182  0018E0  988A               	bcf	3978,4,c	;volatile
  1183                           
  1184                           ;Current_Sense_Main.c: 198: } else {
  1185  0018E2  0012               	return	
  1186  0018E4                     l136:
  1187                           
  1188                           ;Current_Sense_Main.c: 199: LATBbits.LATB4 = 1;
  1189  0018E4  888A               	bsf	3978,4,c	;volatile
  1190                           
  1191                           ;Current_Sense_Main.c: 200: }
  1192                           ;Current_Sense_Main.c: 201: }
  1193                           ;Current_Sense_Main.c: 202: } else {
  1194  0018E6  0012               	return	
  1195  0018E8                     l134:
  1196                           
  1197                           ;Current_Sense_Main.c: 203: LATAbits.LATA0 = 0;
  1198  0018E8  9089               	bcf	3977,0,c	;volatile
  1199                           
  1200                           ;Current_Sense_Main.c: 204: runonce = 0;
  1201  0018EA  0E00               	movlw	0
  1202  0018EC  6E4C               	movwf	pulseFoutPassThru@runonce,c
  1203                           
  1204                           ;Current_Sense_Main.c: 205: }
  1205                           ;Current_Sense_Main.c: 206: } else if (!useLF) {
  1206  0018EE  0012               	return	
  1207  0018F0                     l133:
  1208  0018F0  5043               	movf	_useLF,w,c	;volatile
  1209  0018F2  A4D8               	btfss	status,2,c
  1210  0018F4  0012               	return	
  1211                           
  1212                           ;Current_Sense_Main.c: 207: if (PORTCbits.RC2 == 0) {
  1213  0018F6  B482               	btfsc	3970,2,c	;volatile
  1214  0018F8  D00C               	goto	l141
  1215                           
  1216                           ;Current_Sense_Main.c: 208: LATAbits.LATA0 = 1;
  1217  0018FA  8089               	bsf	3977,0,c	;volatile
  1218                           
  1219                           ;Current_Sense_Main.c: 209: if (runonce == 0) {
  1220  0018FC  504C               	movf	pulseFoutPassThru@runonce,w,c
  1221  0018FE  A4D8               	btfss	status,2,c
  1222  001900  0012               	return	
  1223                           
  1224                           ;Current_Sense_Main.c: 210: runonce = 1;
  1225  001902  0E01               	movlw	1
  1226  001904  6E4C               	movwf	pulseFoutPassThru@runonce,c
  1227                           
  1228                           ;Current_Sense_Main.c: 211: if (PORTBbits.RB4 == 1) {
  1229  001906  A881               	btfss	3969,4,c	;volatile
  1230  001908  D002               	goto	l143
  1231                           
  1232                           ;Current_Sense_Main.c: 212: LATBbits.LATB4 = 0;
  1233  00190A  988A               	bcf	3978,4,c	;volatile
  1234                           
  1235                           ;Current_Sense_Main.c: 213: } else {
  1236  00190C  0012               	return	
  1237  00190E                     l143:
  1238                           
  1239                           ;Current_Sense_Main.c: 214: LATBbits.LATB4 = 1;
  1240  00190E  888A               	bsf	3978,4,c	;volatile
  1241                           
  1242                           ;Current_Sense_Main.c: 215: }
  1243                           ;Current_Sense_Main.c: 216: }
  1244                           ;Current_Sense_Main.c: 217: } else {
  1245  001910  0012               	return	
  1246  001912                     l141:
  1247                           
  1248                           ;Current_Sense_Main.c: 218: LATAbits.LATA0 = 0;
  1249  001912  9089               	bcf	3977,0,c	;volatile
  1250                           
  1251                           ;Current_Sense_Main.c: 219: runonce = 0;
  1252  001914  0E00               	movlw	0
  1253  001916  6E4C               	movwf	pulseFoutPassThru@runonce,c
  1254  001918  0012               	return	
  1255  00191A                     __end_of_pulseFoutPassThru:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           fsr1l	equ	0xFE1
  1265                           status	equ	0xFD8
  1266                           
  1267 ;; *************** function _powerPulseCheck *****************
  1268 ;; Defined at:
  1269 ;;		line 238 in file "Current_Sense_Main.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         0       0       0       0       0       0       0
  1284 ;;      Locals:         4       0       0       0       0       0       0
  1285 ;;      Temps:          4       0       0       0       0       0       0
  1286 ;;      Totals:         8       0       0       0       0       0       0
  1287 ;;Total ram usage:        8 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    2
  1290 ;; This function calls:
  1291 ;;		___lldiv
  1292 ;;		___lmul
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text2
  1299  000660                     __ptext2:
  1300                           	opt stack 0
  1301  000660                     _powerPulseCheck:
  1302                           	opt stack 28
  1303                           
  1304                           ;Current_Sense_Main.c: 246: static unsigned long PIECEWISE_FUNC[3] = {27000, 467, 220};
  1305                           ;Current_Sense_Main.c: 248: static unsigned long energyPerPulse = 27000;
  1306                           ;Current_Sense_Main.c: 249: static unsigned long meterEnergyUsedPart = 0;
  1307                           ;Current_Sense_Main.c: 250: static unsigned long timerCountLFLast = 2147483647;
  1308                           ;Current_Sense_Main.c: 251: static unsigned long timerCountHFLast = 2147483647;
  1309                           ;Current_Sense_Main.c: 252: static unsigned int timerCountHFCheck = 1;
  1310                           ;Current_Sense_Main.c: 253: static bool firstPulse = 1;
  1311                           
  1312                           ;incstack = 0
  1313  000660  0442               	decf	powerPulseCheck@firstPulse,w,c
  1314  000662  A4D8               	btfss	status,2,c
  1315  000664  D009               	goto	l172
  1316                           
  1317                           ;Current_Sense_Main.c: 259: meterWatts = 0;
  1318  000666  0E00               	movlw	0
  1319  000668  0100               	movlb	0	; () banked
  1320  00066A  6F74               	movwf	_meterWatts& (0+255),b
  1321  00066C  0E00               	movlw	0
  1322  00066E  6F75               	movwf	(_meterWatts+1)& (0+255),b
  1323  000670  0E00               	movlw	0
  1324  000672  6F76               	movwf	(_meterWatts+2)& (0+255),b
  1325  000674  0E00               	movlw	0
  1326  000676  6F77               	movwf	(_meterWatts+3)& (0+255),b
  1327  000678                     l172:
  1328                           
  1329                           ;Current_Sense_Main.c: 260: }
  1330                           ;Current_Sense_Main.c: 263: if (PORTAbits.RA1 == 0) {
  1331                           
  1332                           ; BSR set to: 0
  1333  000678  B280               	btfsc	3968,1,c	;volatile
  1334  00067A  D0AA               	goto	l173
  1335                           
  1336                           ;Current_Sense_Main.c: 264: if (mcpLFoutLast == 0) {
  1337  00067C  504A               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1338  00067E  A4D8               	btfss	status,2,c
  1339  000680  D0A9               	goto	l178
  1340                           
  1341                           ;Current_Sense_Main.c: 265: mcpLFoutLast = 1;
  1342  000682  0E01               	movlw	1
  1343  000684  6E4A               	movwf	powerPulseCheck@mcpLFoutLast,c
  1344                           
  1345                           ;Current_Sense_Main.c: 266: firstPulse = 0;
  1346  000686  0E00               	movlw	0
  1347  000688  6E42               	movwf	powerPulseCheck@firstPulse,c
  1348                           
  1349                           ;Current_Sense_Main.c: 268: timerCountLFLast = timerCountLF;
  1350  00068A  C064  F03A         	movff	_timerCountLF,powerPulseCheck@timerCountLFLast	;volatile
  1351  00068E  C065  F03B         	movff	_timerCountLF+1,powerPulseCheck@timerCountLFLast+1	;volatile
  1352  000692  C066  F03C         	movff	_timerCountLF+2,powerPulseCheck@timerCountLFLast+2	;volatile
  1353  000696  C067  F03D         	movff	_timerCountLF+3,powerPulseCheck@timerCountLFLast+3	;volatile
  1354                           
  1355                           ;Current_Sense_Main.c: 269: timerCountLF = 0;
  1356  00069A  0E00               	movlw	0
  1357  00069C  0100               	movlb	0	; () banked
  1358  00069E  6F64               	movwf	_timerCountLF& (0+255),b	;volatile
  1359  0006A0  0E00               	movlw	0
  1360  0006A2  6F65               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  1361  0006A4  0E00               	movlw	0
  1362  0006A6  6F66               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  1363  0006A8  0E00               	movlw	0
  1364  0006AA  6F67               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;Current_Sense_Main.c: 270: meterWattsLF = ((((energyPerPulse * (unsigned long) 16 * (un
      +                          signed long) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long)
      +                           1) / (unsigned long) timerCountLFLast;
  1368  0006AC  0E64               	movlw	100
  1369  0006AE  6E23               	movwf	___lldiv@divisor,c
  1370  0006B0  0E00               	movlw	0
  1371  0006B2  6E24               	movwf	___lldiv@divisor+1,c
  1372  0006B4  0E00               	movlw	0
  1373  0006B6  6E25               	movwf	___lldiv@divisor+2,c
  1374  0006B8  0E00               	movlw	0
  1375  0006BA  6E26               	movwf	___lldiv@divisor+3,c
  1376  0006BC  C03E  F02C         	movff	powerPulseCheck@energyPerPulse,??_powerPulseCheck
  1377  0006C0  C03F  F02D         	movff	powerPulseCheck@energyPerPulse+1,??_powerPulseCheck+1
  1378  0006C4  C040  F02E         	movff	powerPulseCheck@energyPerPulse+2,??_powerPulseCheck+2
  1379  0006C8  C041  F02F         	movff	powerPulseCheck@energyPerPulse+3,??_powerPulseCheck+3
  1380  0006CC  0E04               	movlw	4
  1381  0006CE                     u2755:
  1382  0006CE  90D8               	bcf	status,0,c
  1383  0006D0  362C               	rlcf	??_powerPulseCheck,f,c
  1384  0006D2  362D               	rlcf	??_powerPulseCheck+1,f,c
  1385  0006D4  362E               	rlcf	??_powerPulseCheck+2,f,c
  1386  0006D6  362F               	rlcf	??_powerPulseCheck+3,f,c
  1387  0006D8  2EE8               	decfsz	wreg,f,c
  1388  0006DA  D7F9               	goto	u2755
  1389  0006DC  C02C  F013         	movff	??_powerPulseCheck,___lmul@multiplier
  1390  0006E0  C02D  F014         	movff	??_powerPulseCheck+1,___lmul@multiplier+1
  1391  0006E4  C02E  F015         	movff	??_powerPulseCheck+2,___lmul@multiplier+2
  1392  0006E8  C02F  F016         	movff	??_powerPulseCheck+3,___lmul@multiplier+3
  1393  0006EC  0E10               	movlw	16
  1394  0006EE  6E17               	movwf	___lmul@multiplicand,c
  1395  0006F0  0E0E               	movlw	14
  1396  0006F2  6E18               	movwf	___lmul@multiplicand+1,c
  1397  0006F4  0E00               	movlw	0
  1398  0006F6  6E19               	movwf	___lmul@multiplicand+2,c
  1399  0006F8  0E00               	movlw	0
  1400  0006FA  6E1A               	movwf	___lmul@multiplicand+3,c
  1401  0006FC  EC38  F00C         	call	___lmul	;wreg free
  1402  000700  C013  F01F         	movff	?___lmul,___lldiv@dividend
  1403  000704  C014  F020         	movff	?___lmul+1,___lldiv@dividend+1
  1404  000708  C015  F021         	movff	?___lmul+2,___lldiv@dividend+2
  1405  00070C  C016  F022         	movff	?___lmul+3,___lldiv@dividend+3
  1406  000710  ECF7  F00A         	call	___lldiv	;wreg free
  1407  000714  C01F  F030         	movff	?___lldiv,_powerPulseCheck$2649
  1408  000718  C020  F031         	movff	?___lldiv+1,_powerPulseCheck$2649+1
  1409  00071C  C021  F032         	movff	?___lldiv+2,_powerPulseCheck$2649+2
  1410  000720  C022  F033         	movff	?___lldiv+3,_powerPulseCheck$2649+3
  1411                           
  1412                           ;Current_Sense_Main.c: 270: meterWattsLF = ((((energyPerPulse * (unsigned long) 16 * (un
      +                          signed long) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long)
      +                           1) / (unsigned long) timerCountLFLast;
  1413  000724  C030  F01F         	movff	_powerPulseCheck$2649,___lldiv@dividend
  1414  000728  C031  F020         	movff	_powerPulseCheck$2649+1,___lldiv@dividend+1
  1415  00072C  C032  F021         	movff	_powerPulseCheck$2649+2,___lldiv@dividend+2
  1416  000730  C033  F022         	movff	_powerPulseCheck$2649+3,___lldiv@dividend+3
  1417  000734  C03A  F023         	movff	powerPulseCheck@timerCountLFLast,___lldiv@divisor
  1418  000738  C03B  F024         	movff	powerPulseCheck@timerCountLFLast+1,___lldiv@divisor+1
  1419  00073C  C03C  F025         	movff	powerPulseCheck@timerCountLFLast+2,___lldiv@divisor+2
  1420  000740  C03D  F026         	movff	powerPulseCheck@timerCountLFLast+3,___lldiv@divisor+3
  1421  000744  ECF7  F00A         	call	___lldiv	;wreg free
  1422  000748  C01F  F06C         	movff	?___lldiv,_meterWattsLF
  1423  00074C  C020  F06D         	movff	?___lldiv+1,_meterWattsLF+1
  1424  000750  C021  F06E         	movff	?___lldiv+2,_meterWattsLF+2
  1425  000754  C022  F06F         	movff	?___lldiv+3,_meterWattsLF+3
  1426                           
  1427                           ;Current_Sense_Main.c: 273: meterEnergyUsedPart += energyPerPulse * (unsigned long) 16;
  1428  000758  C03E  F02C         	movff	powerPulseCheck@energyPerPulse,??_powerPulseCheck
  1429  00075C  C03F  F02D         	movff	powerPulseCheck@energyPerPulse+1,??_powerPulseCheck+1
  1430  000760  C040  F02E         	movff	powerPulseCheck@energyPerPulse+2,??_powerPulseCheck+2
  1431  000764  C041  F02F         	movff	powerPulseCheck@energyPerPulse+3,??_powerPulseCheck+3
  1432  000768  0E04               	movlw	4
  1433  00076A                     u2765:
  1434  00076A  90D8               	bcf	status,0,c
  1435  00076C  362C               	rlcf	??_powerPulseCheck,f,c
  1436  00076E  362D               	rlcf	??_powerPulseCheck+1,f,c
  1437  000770  362E               	rlcf	??_powerPulseCheck+2,f,c
  1438  000772  362F               	rlcf	??_powerPulseCheck+3,f,c
  1439  000774  2EE8               	decfsz	wreg,f,c
  1440  000776  D7F9               	goto	u2765
  1441  000778  502C               	movf	??_powerPulseCheck,w,c
  1442  00077A  0100               	movlb	0	; () banked
  1443  00077C  2760               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1444  00077E  502D               	movf	??_powerPulseCheck+1,w,c
  1445  000780  0100               	movlb	0	; () banked
  1446  000782  2361               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1447  000784  502E               	movf	??_powerPulseCheck+2,w,c
  1448  000786  0100               	movlb	0	; () banked
  1449  000788  2362               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1450  00078A  502F               	movf	??_powerPulseCheck+3,w,c
  1451  00078C  0100               	movlb	0	; () banked
  1452  00078E  2363               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1453                           
  1454                           ;Current_Sense_Main.c: 274: while (meterEnergyUsedPart > 100000) {
  1455  000790  D010               	goto	l175
  1456  000792                     l3140:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;Current_Sense_Main.c: 275: meterEnergyUsed++;
  1460  000792  0E01               	movlw	1
  1461  000794  0100               	movlb	0	; () banked
  1462  000796  2768               	addwf	_meterEnergyUsed& (0+255),f,b
  1463  000798  0E00               	movlw	0
  1464  00079A  2369               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1465  00079C  236A               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1466  00079E  236B               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1467                           
  1468                           ;Current_Sense_Main.c: 276: meterEnergyUsedPart -= 100000;
  1469  0007A0  0EA0               	movlw	160
  1470  0007A2  0100               	movlb	0	; () banked
  1471  0007A4  5F60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1472  0007A6  0E86               	movlw	134
  1473  0007A8  5B61               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1474  0007AA  0E01               	movlw	1
  1475  0007AC  5B62               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1476  0007AE  0E00               	movlw	0
  1477  0007B0  5B63               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1478  0007B2                     l175:
  1479                           
  1480                           ; BSR set to: 0
  1481  0007B2  0100               	movlb	0	; () banked
  1482  0007B4  5163               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1483  0007B6  E1ED               	bnz	l3140
  1484  0007B8  0EA1               	movlw	161
  1485  0007BA  0100               	movlb	0	; () banked
  1486  0007BC  5D60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1487  0007BE  0E86               	movlw	134
  1488  0007C0  0100               	movlb	0	; () banked
  1489  0007C2  5961               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1490  0007C4  0E01               	movlw	1
  1491  0007C6  0100               	movlb	0	; () banked
  1492  0007C8  5962               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1493  0007CA  A0D8               	btfss	status,0,c
  1494  0007CC  D003               	goto	l178
  1495  0007CE  D7E1               	goto	l176
  1496  0007D0                     l173:
  1497                           
  1498                           ;Current_Sense_Main.c: 281: mcpHFoutLast = 0;
  1499                           
  1500                           ; BSR set to: 0
  1501  0007D0  0E00               	movlw	0
  1502  0007D2  6E4B               	movwf	powerPulseCheck@mcpHFoutLast,c
  1503  0007D4                     l178:
  1504                           
  1505                           ;Current_Sense_Main.c: 282: }
  1506                           ;Current_Sense_Main.c: 285: if (PORTCbits.RC2 == 0) {
  1507  0007D4  B482               	btfsc	3970,2,c	;volatile
  1508  0007D6  D063               	goto	l179
  1509                           
  1510                           ;Current_Sense_Main.c: 286: if (mcpHFoutLast == 0) {
  1511  0007D8  504B               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1512  0007DA  A4D8               	btfss	status,2,c
  1513  0007DC  D062               	goto	l181
  1514                           
  1515                           ;Current_Sense_Main.c: 287: mcpHFoutLast = 1;
  1516  0007DE  0E01               	movlw	1
  1517  0007E0  6E4B               	movwf	powerPulseCheck@mcpHFoutLast,c
  1518                           
  1519                           ;Current_Sense_Main.c: 288: firstPulse = 0;
  1520  0007E2  0E00               	movlw	0
  1521  0007E4  6E42               	movwf	powerPulseCheck@firstPulse,c
  1522                           
  1523                           ;Current_Sense_Main.c: 290: timerCountHFLast = timerCountHF;
  1524  0007E6  C044  F0D0         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1525  0007EA  C045  F0D1         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1526  0007EE  C046  F0D2         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1527  0007F2  C047  F0D3         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1528                           
  1529                           ;Current_Sense_Main.c: 291: timerCountHF = 0;
  1530  0007F6  0E00               	movlw	0
  1531  0007F8  6E44               	movwf	_timerCountHF,c	;volatile
  1532  0007FA  0E00               	movlw	0
  1533  0007FC  6E45               	movwf	_timerCountHF+1,c	;volatile
  1534  0007FE  0E00               	movlw	0
  1535  000800  6E46               	movwf	_timerCountHF+2,c	;volatile
  1536  000802  0E00               	movlw	0
  1537  000804  6E47               	movwf	_timerCountHF+3,c	;volatile
  1538                           
  1539                           ;Current_Sense_Main.c: 292: meterWattsHF = ((((energyPerPulse * (unsigned long) 3600) / 
      +                          ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned long)
      +                           timerCountHFLast;
  1540  000806  0E64               	movlw	100
  1541  000808  6E23               	movwf	___lldiv@divisor,c
  1542  00080A  0E00               	movlw	0
  1543  00080C  6E24               	movwf	___lldiv@divisor+1,c
  1544  00080E  0E00               	movlw	0
  1545  000810  6E25               	movwf	___lldiv@divisor+2,c
  1546  000812  0E00               	movlw	0
  1547  000814  6E26               	movwf	___lldiv@divisor+3,c
  1548  000816  C03E  F013         	movff	powerPulseCheck@energyPerPulse,___lmul@multiplier
  1549  00081A  C03F  F014         	movff	powerPulseCheck@energyPerPulse+1,___lmul@multiplier+1
  1550  00081E  C040  F015         	movff	powerPulseCheck@energyPerPulse+2,___lmul@multiplier+2
  1551  000822  C041  F016         	movff	powerPulseCheck@energyPerPulse+3,___lmul@multiplier+3
  1552  000826  0E10               	movlw	16
  1553  000828  6E17               	movwf	___lmul@multiplicand,c
  1554  00082A  0E0E               	movlw	14
  1555  00082C  6E18               	movwf	___lmul@multiplicand+1,c
  1556  00082E  0E00               	movlw	0
  1557  000830  6E19               	movwf	___lmul@multiplicand+2,c
  1558  000832  0E00               	movlw	0
  1559  000834  6E1A               	movwf	___lmul@multiplicand+3,c
  1560  000836  EC38  F00C         	call	___lmul	;wreg free
  1561  00083A  C013  F01F         	movff	?___lmul,___lldiv@dividend
  1562  00083E  C014  F020         	movff	?___lmul+1,___lldiv@dividend+1
  1563  000842  C015  F021         	movff	?___lmul+2,___lldiv@dividend+2
  1564  000846  C016  F022         	movff	?___lmul+3,___lldiv@dividend+3
  1565  00084A  ECF7  F00A         	call	___lldiv	;wreg free
  1566  00084E  C01F  F030         	movff	?___lldiv,_powerPulseCheck$2649
  1567  000852  C020  F031         	movff	?___lldiv+1,_powerPulseCheck$2649+1
  1568  000856  C021  F032         	movff	?___lldiv+2,_powerPulseCheck$2649+2
  1569  00085A  C022  F033         	movff	?___lldiv+3,_powerPulseCheck$2649+3
  1570                           
  1571                           ;Current_Sense_Main.c: 292: meterWattsHF = ((((energyPerPulse * (unsigned long) 3600) / 
      +                          ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned long)
      +                           timerCountHFLast;
  1572  00085E  C030  F01F         	movff	_powerPulseCheck$2649,___lldiv@dividend
  1573  000862  C031  F020         	movff	_powerPulseCheck$2649+1,___lldiv@dividend+1
  1574  000866  C032  F021         	movff	_powerPulseCheck$2649+2,___lldiv@dividend+2
  1575  00086A  C033  F022         	movff	_powerPulseCheck$2649+3,___lldiv@dividend+3
  1576  00086E  C0D0  F023         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1577  000872  C0D1  F024         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1578  000876  C0D2  F025         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1579  00087A  C0D3  F026         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1580  00087E  ECF7  F00A         	call	___lldiv	;wreg free
  1581  000882  C01F  F070         	movff	?___lldiv,_meterWattsHF
  1582  000886  C020  F071         	movff	?___lldiv+1,_meterWattsHF+1
  1583  00088A  C021  F072         	movff	?___lldiv+2,_meterWattsHF+2
  1584  00088E  C022  F073         	movff	?___lldiv+3,_meterWattsHF+3
  1585                           
  1586                           ;Current_Sense_Main.c: 294: timerCountHFCheck = 1;
  1587  000892  0E00               	movlw	0
  1588  000894  0100               	movlb	0	; () banked
  1589  000896  6FD5               	movwf	(powerPulseCheck@timerCountHFCheck+1)& (0+255),b
  1590  000898  0E01               	movlw	1
  1591  00089A  6FD4               	movwf	powerPulseCheck@timerCountHFCheck& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;Current_Sense_Main.c: 295: }
  1595                           ;Current_Sense_Main.c: 296: } else {
  1596  00089C  D002               	goto	l181
  1597  00089E                     l179:
  1598                           
  1599                           ;Current_Sense_Main.c: 297: mcpHFoutLast = 0;
  1600                           
  1601                           ; BSR set to: 0
  1602  00089E  0E00               	movlw	0
  1603  0008A0  6E4B               	movwf	powerPulseCheck@mcpHFoutLast,c
  1604  0008A2                     l181:
  1605                           
  1606                           ;Current_Sense_Main.c: 298: }
  1607                           ;Current_Sense_Main.c: 305: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast)) 
      +                          {
  1608  0008A2  5042               	movf	powerPulseCheck@firstPulse,w,c
  1609  0008A4  A4D8               	btfss	status,2,c
  1610  0008A6  D083               	goto	l185
  1611  0008A8  5044               	movf	_timerCountHF,w,c	;volatile
  1612  0008AA  0100               	movlb	0	; () banked
  1613  0008AC  5DD0               	subwf	powerPulseCheck@timerCountHFLast& (0+255),w,b
  1614  0008AE  5045               	movf	_timerCountHF+1,w,c	;volatile
  1615  0008B0  0100               	movlb	0	; () banked
  1616  0008B2  59D1               	subwfb	(powerPulseCheck@timerCountHFLast+1)& (0+255),w,b
  1617  0008B4  5046               	movf	_timerCountHF+2,w,c	;volatile
  1618  0008B6  0100               	movlb	0	; () banked
  1619  0008B8  59D2               	subwfb	(powerPulseCheck@timerCountHFLast+2)& (0+255),w,b
  1620  0008BA  5047               	movf	_timerCountHF+3,w,c	;volatile
  1621  0008BC  0100               	movlb	0	; () banked
  1622  0008BE  59D3               	subwfb	(powerPulseCheck@timerCountHFLast+3)& (0+255),w,b
  1623  0008C0  B0D8               	btfsc	status,0,c
  1624  0008C2  D075               	goto	l185
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;Current_Sense_Main.c: 306: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck)) {
  1628  0008C4  C0D4  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1629  0008C8  C0D5  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1630  0008CC  6A15               	clrf	___lmul@multiplier+2,c
  1631  0008CE  6A16               	clrf	___lmul@multiplier+3,c
  1632  0008D0  0EE8               	movlw	232
  1633  0008D2  6E17               	movwf	___lmul@multiplicand,c
  1634  0008D4  0E03               	movlw	3
  1635  0008D6  6E18               	movwf	___lmul@multiplicand+1,c
  1636  0008D8  0E00               	movlw	0
  1637  0008DA  6E19               	movwf	___lmul@multiplicand+2,c
  1638  0008DC  0E00               	movlw	0
  1639  0008DE  6E1A               	movwf	___lmul@multiplicand+3,c
  1640  0008E0  EC38  F00C         	call	___lmul	;wreg free
  1641  0008E4  5044               	movf	_timerCountHF,w,c	;volatile
  1642  0008E6  5C13               	subwf	?___lmul,w,c
  1643  0008E8  5045               	movf	_timerCountHF+1,w,c	;volatile
  1644  0008EA  5814               	subwfb	?___lmul+1,w,c
  1645  0008EC  5046               	movf	_timerCountHF+2,w,c	;volatile
  1646  0008EE  5815               	subwfb	?___lmul+2,w,c
  1647  0008F0  5047               	movf	_timerCountHF+3,w,c	;volatile
  1648  0008F2  5816               	subwfb	?___lmul+3,w,c
  1649  0008F4  B0D8               	btfsc	status,0,c
  1650  0008F6  D05B               	goto	l185
  1651                           
  1652                           ;Current_Sense_Main.c: 308: if (timerCountHFCheck < 90) {
  1653  0008F8  0100               	movlb	0	; () banked
  1654  0008FA  51D5               	movf	(powerPulseCheck@timerCountHFCheck+1)& (0+255),w,b
  1655  0008FC  E14F               	bnz	l3170
  1656  0008FE  0E5A               	movlw	90
  1657  000900  0100               	movlb	0	; () banked
  1658  000902  5DD4               	subwf	powerPulseCheck@timerCountHFCheck& (0+255),w,b
  1659  000904  B0D8               	btfsc	status,0,c
  1660  000906  D04A               	goto	l184
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;Current_Sense_Main.c: 309: timerCountHFCheck++;
  1664  000908  0100               	movlb	0	; () banked
  1665  00090A  4BD4               	infsnz	powerPulseCheck@timerCountHFCheck& (0+255),f,b
  1666  00090C  2BD5               	incf	(powerPulseCheck@timerCountHFCheck+1)& (0+255),f,b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;Current_Sense_Main.c: 311: meterWatts = ((((energyPerPulse * (unsigned long) 3600) / ((
      +                          unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned long) t
      +                          imerCountHF;
  1670  00090E  0E64               	movlw	100
  1671  000910  6E23               	movwf	___lldiv@divisor,c
  1672  000912  0E00               	movlw	0
  1673  000914  6E24               	movwf	___lldiv@divisor+1,c
  1674  000916  0E00               	movlw	0
  1675  000918  6E25               	movwf	___lldiv@divisor+2,c
  1676  00091A  0E00               	movlw	0
  1677  00091C  6E26               	movwf	___lldiv@divisor+3,c
  1678  00091E  C03E  F013         	movff	powerPulseCheck@energyPerPulse,___lmul@multiplier
  1679  000922  C03F  F014         	movff	powerPulseCheck@energyPerPulse+1,___lmul@multiplier+1
  1680  000926  C040  F015         	movff	powerPulseCheck@energyPerPulse+2,___lmul@multiplier+2
  1681  00092A  C041  F016         	movff	powerPulseCheck@energyPerPulse+3,___lmul@multiplier+3
  1682  00092E  0E10               	movlw	16
  1683  000930  6E17               	movwf	___lmul@multiplicand,c
  1684  000932  0E0E               	movlw	14
  1685  000934  6E18               	movwf	___lmul@multiplicand+1,c
  1686  000936  0E00               	movlw	0
  1687  000938  6E19               	movwf	___lmul@multiplicand+2,c
  1688  00093A  0E00               	movlw	0
  1689  00093C  6E1A               	movwf	___lmul@multiplicand+3,c
  1690  00093E  EC38  F00C         	call	___lmul	;wreg free
  1691  000942  C013  F01F         	movff	?___lmul,___lldiv@dividend
  1692  000946  C014  F020         	movff	?___lmul+1,___lldiv@dividend+1
  1693  00094A  C015  F021         	movff	?___lmul+2,___lldiv@dividend+2
  1694  00094E  C016  F022         	movff	?___lmul+3,___lldiv@dividend+3
  1695  000952  ECF7  F00A         	call	___lldiv	;wreg free
  1696  000956  C01F  F030         	movff	?___lldiv,_powerPulseCheck$2649
  1697  00095A  C020  F031         	movff	?___lldiv+1,_powerPulseCheck$2649+1
  1698  00095E  C021  F032         	movff	?___lldiv+2,_powerPulseCheck$2649+2
  1699  000962  C022  F033         	movff	?___lldiv+3,_powerPulseCheck$2649+3
  1700                           
  1701                           ;Current_Sense_Main.c: 311: meterWatts = ((((energyPerPulse * (unsigned long) 3600) / ((
      +                          unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned long) t
      +                          imerCountHF;
  1702  000966  C030  F01F         	movff	_powerPulseCheck$2649,___lldiv@dividend
  1703  00096A  C031  F020         	movff	_powerPulseCheck$2649+1,___lldiv@dividend+1
  1704  00096E  C032  F021         	movff	_powerPulseCheck$2649+2,___lldiv@dividend+2
  1705  000972  C033  F022         	movff	_powerPulseCheck$2649+3,___lldiv@dividend+3
  1706  000976  C044  F023         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1707  00097A  C045  F024         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1708  00097E  C046  F025         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1709  000982  C047  F026         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1710  000986  ECF7  F00A         	call	___lldiv	;wreg free
  1711  00098A  C01F  F074         	movff	?___lldiv,_meterWatts
  1712  00098E  C020  F075         	movff	?___lldiv+1,_meterWatts+1
  1713  000992  C021  F076         	movff	?___lldiv+2,_meterWatts+2
  1714  000996  C022  F077         	movff	?___lldiv+3,_meterWatts+3
  1715                           
  1716                           ;Current_Sense_Main.c: 312: } else {
  1717  00099A  D009               	goto	l185
  1718  00099C                     l184:
  1719  00099C                     l3170:
  1720                           
  1721                           ;Current_Sense_Main.c: 313: meterWatts = 0;
  1722  00099C  0E00               	movlw	0
  1723  00099E  0100               	movlb	0	; () banked
  1724  0009A0  6F74               	movwf	_meterWatts& (0+255),b
  1725  0009A2  0E00               	movlw	0
  1726  0009A4  6F75               	movwf	(_meterWatts+1)& (0+255),b
  1727  0009A6  0E00               	movlw	0
  1728  0009A8  6F76               	movwf	(_meterWatts+2)& (0+255),b
  1729  0009AA  0E00               	movlw	0
  1730  0009AC  6F77               	movwf	(_meterWatts+3)& (0+255),b
  1731  0009AE                     l185:
  1732                           
  1733                           ;Current_Sense_Main.c: 314: }
  1734                           ;Current_Sense_Main.c: 315: }
  1735                           ;Current_Sense_Main.c: 316: }
  1736                           ;Current_Sense_Main.c: 321: if (!firstPulse) {
  1737                           
  1738                           ; BSR set to: 0
  1739                           
  1740                           ; BSR set to: 0
  1741  0009AE  5042               	movf	powerPulseCheck@firstPulse,w,c
  1742  0009B0  A4D8               	btfss	status,2,c
  1743  0009B2  0012               	return	
  1744                           
  1745                           ;Current_Sense_Main.c: 322: if (timerCountLFLast < 4000) {
  1746  0009B4  503D               	movf	powerPulseCheck@timerCountLFLast+3,w,c
  1747  0009B6  103C               	iorwf	powerPulseCheck@timerCountLFLast+2,w,c
  1748  0009B8  E119               	bnz	l187
  1749  0009BA  0EA0               	movlw	160
  1750  0009BC  5C3A               	subwf	powerPulseCheck@timerCountLFLast,w,c
  1751  0009BE  0E0F               	movlw	15
  1752  0009C0  583B               	subwfb	powerPulseCheck@timerCountLFLast+1,w,c
  1753  0009C2  B0D8               	btfsc	status,0,c
  1754  0009C4  D013               	goto	l187
  1755                           
  1756                           ;Current_Sense_Main.c: 324: energyPerPulse = PIECEWISE_FUNC[0];
  1757  0009C6  C0C4  F03E         	movff	powerPulseCheck@PIECEWISE_FUNC,powerPulseCheck@energyPerPulse
  1758  0009CA  C0C5  F03F         	movff	powerPulseCheck@PIECEWISE_FUNC+1,powerPulseCheck@energyPerPulse+1
  1759  0009CE  C0C6  F040         	movff	powerPulseCheck@PIECEWISE_FUNC+2,powerPulseCheck@energyPerPulse+2
  1760  0009D2  C0C7  F041         	movff	powerPulseCheck@PIECEWISE_FUNC+3,powerPulseCheck@energyPerPulse+3
  1761                           
  1762                           ;Current_Sense_Main.c: 325: meterWatts = meterWattsLF;
  1763  0009D6  C06C  F074         	movff	_meterWattsLF,_meterWatts
  1764  0009DA  C06D  F075         	movff	_meterWattsLF+1,_meterWatts+1
  1765  0009DE  C06E  F076         	movff	_meterWattsLF+2,_meterWatts+2
  1766  0009E2  C06F  F077         	movff	_meterWattsLF+3,_meterWatts+3
  1767                           
  1768                           ;Current_Sense_Main.c: 326: useLF = 1;
  1769  0009E6  0E01               	movlw	1
  1770  0009E8  6E43               	movwf	_useLF,c	;volatile
  1771                           
  1772                           ;Current_Sense_Main.c: 327: } else {
  1773  0009EA  0012               	return	
  1774  0009EC                     l187:
  1775                           
  1776                           ;Current_Sense_Main.c: 329: energyPerPulse = PIECEWISE_FUNC[0];
  1777  0009EC  C0C4  F03E         	movff	powerPulseCheck@PIECEWISE_FUNC,powerPulseCheck@energyPerPulse
  1778  0009F0  C0C5  F03F         	movff	powerPulseCheck@PIECEWISE_FUNC+1,powerPulseCheck@energyPerPulse+1
  1779  0009F4  C0C6  F040         	movff	powerPulseCheck@PIECEWISE_FUNC+2,powerPulseCheck@energyPerPulse+2
  1780  0009F8  C0C7  F041         	movff	powerPulseCheck@PIECEWISE_FUNC+3,powerPulseCheck@energyPerPulse+3
  1781                           
  1782                           ;Current_Sense_Main.c: 330: if (timerCountLFLast < 33000) {
  1783  0009FC  503D               	movf	powerPulseCheck@timerCountLFLast+3,w,c
  1784  0009FE  103C               	iorwf	powerPulseCheck@timerCountLFLast+2,w,c
  1785  000A00  E10F               	bnz	l3182
  1786  000A02  0EE8               	movlw	232
  1787  000A04  5C3A               	subwf	powerPulseCheck@timerCountLFLast,w,c
  1788  000A06  0E80               	movlw	128
  1789  000A08  583B               	subwfb	powerPulseCheck@timerCountLFLast+1,w,c
  1790  000A0A  B0D8               	btfsc	status,0,c
  1791  000A0C  D009               	goto	l189
  1792                           
  1793                           ;Current_Sense_Main.c: 331: energyPerPulse = PIECEWISE_FUNC[1];
  1794  000A0E  C0C8  F03E         	movff	powerPulseCheck@PIECEWISE_FUNC+4,powerPulseCheck@energyPerPulse
  1795  000A12  C0C9  F03F         	movff	powerPulseCheck@PIECEWISE_FUNC+5,powerPulseCheck@energyPerPulse+1
  1796  000A16  C0CA  F040         	movff	powerPulseCheck@PIECEWISE_FUNC+6,powerPulseCheck@energyPerPulse+2
  1797  000A1A  C0CB  F041         	movff	powerPulseCheck@PIECEWISE_FUNC+7,powerPulseCheck@energyPerPulse+3
  1798                           
  1799                           ;Current_Sense_Main.c: 332: } else if (timerCountLFLast < 40000) {
  1800  000A1E  D011               	goto	l191
  1801  000A20                     l189:
  1802  000A20                     l3182:
  1803  000A20  503D               	movf	powerPulseCheck@timerCountLFLast+3,w,c
  1804  000A22  103C               	iorwf	powerPulseCheck@timerCountLFLast+2,w,c
  1805  000A24  E10E               	bnz	l190
  1806  000A26  0E40               	movlw	64
  1807  000A28  5C3A               	subwf	powerPulseCheck@timerCountLFLast,w,c
  1808  000A2A  0E9C               	movlw	156
  1809  000A2C  583B               	subwfb	powerPulseCheck@timerCountLFLast+1,w,c
  1810  000A2E  B0D8               	btfsc	status,0,c
  1811  000A30  D008               	goto	l191
  1812                           
  1813                           ;Current_Sense_Main.c: 333: energyPerPulse = PIECEWISE_FUNC[2];
  1814  000A32  C0CC  F03E         	movff	powerPulseCheck@PIECEWISE_FUNC+8,powerPulseCheck@energyPerPulse
  1815  000A36  C0CD  F03F         	movff	powerPulseCheck@PIECEWISE_FUNC+9,powerPulseCheck@energyPerPulse+1
  1816  000A3A  C0CE  F040         	movff	powerPulseCheck@PIECEWISE_FUNC+10,powerPulseCheck@energyPerPulse+2
  1817  000A3E  C0CF  F041         	movff	powerPulseCheck@PIECEWISE_FUNC+11,powerPulseCheck@energyPerPulse+3
  1818  000A42                     l191:
  1819  000A42                     l190:
  1820                           
  1821                           ;Current_Sense_Main.c: 334: }
  1822                           ;Current_Sense_Main.c: 335: meterWatts = meterWattsHF;
  1823  000A42  C070  F074         	movff	_meterWattsHF,_meterWatts
  1824  000A46  C071  F075         	movff	_meterWattsHF+1,_meterWatts+1
  1825  000A4A  C072  F076         	movff	_meterWattsHF+2,_meterWatts+2
  1826  000A4E  C073  F077         	movff	_meterWattsHF+3,_meterWatts+3
  1827                           
  1828                           ;Current_Sense_Main.c: 336: useLF = 0;
  1829  000A52  0E00               	movlw	0
  1830  000A54  6E43               	movwf	_useLF,c	;volatile
  1831  000A56  0012               	return	
  1832  000A58                     __end_of_powerPulseCheck:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1l	equ	0xFE1
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _initTimer *****************
  1845 ;; Defined at:
  1846 ;;		line 419 in file "Current_Sense_Main.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1860 ;;      Params:         0       0       0       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text3
  1875  001BE4                     __ptext3:
  1876                           	opt stack 0
  1877  001BE4                     _initTimer:
  1878                           	opt stack 29
  1879                           
  1880                           ;Current_Sense_Main.c: 421: T0CONbits.TMR0ON = 0;
  1881                           
  1882                           ;incstack = 0
  1883  001BE4  9ED5               	bcf	4053,7,c	;volatile
  1884                           
  1885                           ;Current_Sense_Main.c: 422: T0CONbits.T08BIT = 0;
  1886  001BE6  9CD5               	bcf	4053,6,c	;volatile
  1887                           
  1888                           ;Current_Sense_Main.c: 423: T0CONbits.T0CS = 0;
  1889  001BE8  9AD5               	bcf	4053,5,c	;volatile
  1890                           
  1891                           ;Current_Sense_Main.c: 424: T0CONbits.PSA = 0;
  1892  001BEA  96D5               	bcf	4053,3,c	;volatile
  1893                           
  1894                           ;Current_Sense_Main.c: 425: T0CONbits.T0PS = 0b001;
  1895  001BEC  50D5               	movf	4053,w,c	;volatile
  1896  001BEE  0BF8               	andlw	-8
  1897  001BF0  0901               	iorlw	1
  1898  001BF2  6ED5               	movwf	4053,c	;volatile
  1899                           
  1900                           ;Current_Sense_Main.c: 427: INTCONbits.TMR0IE = 1;
  1901  001BF4  8AF2               	bsf	intcon,5,c	;volatile
  1902                           
  1903                           ;Current_Sense_Main.c: 428: INTCONbits.GIE = 1;
  1904  001BF6  8EF2               	bsf	intcon,7,c	;volatile
  1905                           
  1906                           ;Current_Sense_Main.c: 429: T0CONbits.TMR0ON = 1;
  1907  001BF8  8ED5               	bsf	4053,7,c	;volatile
  1908  001BFA  0012               	return		;funcret
  1909  001BFC                     __end_of_initTimer:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _init *****************
  1923 ;; Defined at:
  1924 ;;		line 349 in file "Current_Sense_Main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         0       0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		_initIO
  1947 ;;		_initInterruptsClear
  1948 ;;		_initMCPFout
  1949 ;;		_initOSC
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text4
  1956  001C3C                     __ptext4:
  1957                           	opt stack 0
  1958  001C3C                     _init:
  1959                           	opt stack 27
  1960                           
  1961                           ;Current_Sense_Main.c: 350: initOSC();
  1962                           
  1963                           ;incstack = 0
  1964  001C3C  ECFE  F00D         	call	_initOSC	;wreg free
  1965                           
  1966                           ;Current_Sense_Main.c: 351: initIO();
  1967  001C40  ECC2  F00D         	call	_initIO	;wreg free
  1968                           
  1969                           ;Current_Sense_Main.c: 352: initInterruptsClear();
  1970  001C44  ECB5  F00C         	call	_initInterruptsClear	;wreg free
  1971                           
  1972                           ;Current_Sense_Main.c: 353: initMCPFout();
  1973  001C48  EC71  F00D         	call	_initMCPFout	;wreg free
  1974  001C4C  0012               	return	
  1975  001C4E                     __end_of_init:
  1976                           	opt stack 0
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           intcon	equ	0xFF2
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1l	equ	0xFE1
  1986                           status	equ	0xFD8
  1987                           
  1988 ;; *************** function _initOSC *****************
  1989 ;; Defined at:
  1990 ;;		line 358 in file "Current_Sense_Main.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         0       0       0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_init
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text5
  2019  001BFC                     __ptext5:
  2020                           	opt stack 0
  2021  001BFC                     _initOSC:
  2022                           	opt stack 28
  2023                           
  2024                           ;Current_Sense_Main.c: 360: OSCCONbits.IDLEN = 0;
  2025                           
  2026                           ;incstack = 0
  2027  001BFC  9ED3               	bcf	4051,7,c	;volatile
  2028                           
  2029                           ;Current_Sense_Main.c: 361: OSCCONbits.IRCF = 0b111;
  2030  001BFE  88D3               	bsf	4051,4,c	;volatile
  2031  001C00  8AD3               	bsf	4051,5,c	;volatile
  2032  001C02  8CD3               	bsf	4051,6,c	;volatile
  2033                           
  2034                           ;Current_Sense_Main.c: 362: OSCCONbits.SCS = 0b11;
  2035  001C04  0E03               	movlw	3
  2036  001C06  12D3               	iorwf	4051,f,c	;volatile
  2037                           
  2038                           ;Current_Sense_Main.c: 364: OSCCON2bits.MFIOSEL = 0;
  2039  001C08  98D2               	bcf	4050,4,c	;volatile
  2040                           
  2041                           ;Current_Sense_Main.c: 365: OSCCON2bits.SOSCGO = 0;
  2042  001C0A  96D2               	bcf	4050,3,c	;volatile
  2043                           
  2044                           ;Current_Sense_Main.c: 366: OSCCON2bits.PRISD = 0;
  2045  001C0C  94D2               	bcf	4050,2,c	;volatile
  2046                           
  2047                           ;Current_Sense_Main.c: 368: OSCTUNEbits.INTSRC = 1;
  2048  001C0E  8E9B               	bsf	3995,7,c	;volatile
  2049                           
  2050                           ;Current_Sense_Main.c: 369: OSCTUNEbits.PLLEN = 0;
  2051  001C10  9C9B               	bcf	3995,6,c	;volatile
  2052  001C12  0012               	return	
  2053  001C14                     __end_of_initOSC:
  2054                           	opt stack 0
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           intcon	equ	0xFF2
  2060                           postinc0	equ	0xFEE
  2061                           wreg	equ	0xFE8
  2062                           postdec1	equ	0xFE5
  2063                           fsr1l	equ	0xFE1
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function _initMCPFout *****************
  2067 ;; Defined at:
  2068 ;;		line 435 in file "Current_Sense_Main.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         0       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0
  2084 ;;      Temps:          1       0       0       0       0       0       0
  2085 ;;      Totals:         1       0       0       0       0       0       0
  2086 ;;Total ram usage:        1 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    2
  2089 ;; This function calls:
  2090 ;;		_delayMS10
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;;		_init
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text6
  2098  001AE2                     __ptext6:
  2099                           	opt stack 0
  2100  001AE2                     _initMCPFout:
  2101                           	opt stack 28
  2102                           
  2103                           ;Current_Sense_Main.c: 439: TRISCbits.TRISC6 = 0;
  2104                           
  2105                           ;incstack = 0
  2106  001AE2  9C94               	bcf	3988,6,c	;volatile
  2107                           
  2108                           ;Current_Sense_Main.c: 440: TRISCbits.TRISC7 = 0;
  2109  001AE4  9E94               	bcf	3988,7,c	;volatile
  2110                           
  2111                           ;Current_Sense_Main.c: 441: TRISCbits.TRISC5 = 0;
  2112  001AE6  9A94               	bcf	3988,5,c	;volatile
  2113                           
  2114                           ;Current_Sense_Main.c: 442: TRISCbits.TRISC3 = 0;
  2115  001AE8  9694               	bcf	3988,3,c	;volatile
  2116                           
  2117                           ;Current_Sense_Main.c: 459: LATCbits.LATC7 = 1;
  2118  001AEA  8E8B               	bsf	3979,7,c	;volatile
  2119                           
  2120                           ;Current_Sense_Main.c: 460: LATCbits.LATC5 = 1;
  2121  001AEC  8A8B               	bsf	3979,5,c	;volatile
  2122                           
  2123                           ;Current_Sense_Main.c: 461: LATCbits.LATC3 = 1;
  2124  001AEE  868B               	bsf	3979,3,c	;volatile
  2125                           
  2126                           ;Current_Sense_Main.c: 463: _delay((unsigned long)((5)*(16000000/4000.0)));
  2127  001AF0  0E1A               	movlw	26
  2128  001AF2  6E18               	movwf	??_initMCPFout& (0+255),c
  2129  001AF4  0EF8               	movlw	248
  2130  001AF6                     u2947:
  2131  001AF6  2EE8               	decfsz	wreg,f,c
  2132  001AF8  D7FE               	bra	u2947
  2133  001AFA  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  2134  001AFC  D7FC               	bra	u2947
  2135  001AFE  D000               	nop2	
  2136                           
  2137                           ;Current_Sense_Main.c: 464: LATCbits.LATC6 = 1;
  2138  001B00  8C8B               	bsf	3979,6,c	;volatile
  2139                           
  2140                           ;Current_Sense_Main.c: 465: delayMS10(10);
  2141  001B02  0E00               	movlw	0
  2142  001B04  6E14               	movwf	delayMS10@count+1,c
  2143  001B06  0E0A               	movlw	10
  2144  001B08  6E13               	movwf	delayMS10@count,c
  2145  001B0A  EC40  F00D         	call	_delayMS10	;wreg free
  2146  001B0E  0012               	return	
  2147  001B10                     __end_of_initMCPFout:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           intcon	equ	0xFF2
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1l	equ	0xFE1
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _delayMS10 *****************
  2161 ;; Defined at:
  2162 ;;		line 342 in file "Current_Sense_Main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  count           2   18[COMRAM] int 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  inx             2   21[COMRAM] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         2       0       0       0       0       0       0
  2177 ;;      Locals:         2       0       0       0       0       0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0
  2179 ;;      Totals:         5       0       0       0       0       0       0
  2180 ;;Total ram usage:        5 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;;		_initMCPFout
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text7
  2192  001A80                     __ptext7:
  2193                           	opt stack 0
  2194  001A80                     _delayMS10:
  2195                           	opt stack 28
  2196                           
  2197                           ;Current_Sense_Main.c: 343: for (int inx = 0; inx < count; inx++) {
  2198                           
  2199                           ;incstack = 0
  2200  001A80  0E00               	movlw	0
  2201  001A82  6E17               	movwf	delayMS10@inx+1,c
  2202  001A84  0E00               	movlw	0
  2203  001A86  6E16               	movwf	delayMS10@inx,c
  2204  001A88  D009               	goto	l195
  2205  001A8A                     
  2206                           ;Current_Sense_Main.c: 345: _delay((unsigned long)((10)*(16000000/4000.0)));
  2207  001A8A  0E34               	movlw	52
  2208  001A8C  6E15               	movwf	??_delayMS10& (0+255),c
  2209  001A8E  0EF2               	movlw	242
  2210  001A90                     u2957:
  2211  001A90  2EE8               	decfsz	wreg,f,c
  2212  001A92  D7FE               	bra	u2957
  2213  001A94  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2214  001A96  D7FC               	bra	u2957
  2215  001A98  4A16               	infsnz	delayMS10@inx,f,c
  2216  001A9A  2A17               	incf	delayMS10@inx+1,f,c
  2217  001A9C                     l195:
  2218  001A9C  5013               	movf	delayMS10@count,w,c
  2219  001A9E  5C16               	subwf	delayMS10@inx,w,c
  2220  001AA0  5017               	movf	delayMS10@inx+1,w,c
  2221  001AA2  0A80               	xorlw	128
  2222  001AA4  6E15               	movwf	??_delayMS10& (0+255),c
  2223  001AA6  5014               	movf	delayMS10@count+1,w,c
  2224  001AA8  0A80               	xorlw	128
  2225  001AAA  5815               	subwfb	??_delayMS10& (0+255),w,c
  2226  001AAC  B0D8               	btfsc	status,0,c
  2227  001AAE  0012               	return	
  2228  001AB0  D7EC               	goto	l196
  2229  001AB2                     __end_of_delayMS10:
  2230                           	opt stack 0
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           intcon	equ	0xFF2
  2236                           postinc0	equ	0xFEE
  2237                           wreg	equ	0xFE8
  2238                           postdec1	equ	0xFE5
  2239                           fsr1l	equ	0xFE1
  2240                           status	equ	0xFD8
  2241                           
  2242 ;; *************** function _initInterruptsClear *****************
  2243 ;; Defined at:
  2244 ;;		line 391 in file "Current_Sense_Main.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2258 ;;      Params:         0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_init
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text8
  2273  00196A                     __ptext8:
  2274                           	opt stack 0
  2275  00196A                     _initInterruptsClear:
  2276                           	opt stack 28
  2277                           
  2278                           ;Current_Sense_Main.c: 393: INTCON = 0b00000000;
  2279                           
  2280                           ;incstack = 0
  2281  00196A  0E00               	movlw	0
  2282  00196C  6EF2               	movwf	intcon,c	;volatile
  2283                           
  2284                           ;Current_Sense_Main.c: 394: INTCON2 = 0b00000000;
  2285  00196E  0E00               	movlw	0
  2286  001970  6EF1               	movwf	intcon2,c	;volatile
  2287                           
  2288                           ;Current_Sense_Main.c: 395: INTCON3 = 0b00000000;
  2289  001972  0E00               	movlw	0
  2290  001974  6EF0               	movwf	intcon3,c	;volatile
  2291                           
  2292                           ;Current_Sense_Main.c: 397: RCONbits.IPEN = 0;
  2293  001976  9ED0               	bcf	4048,7,c	;volatile
  2294                           
  2295                           ;Current_Sense_Main.c: 399: PIR1 = 0b00000000;
  2296  001978  0E00               	movlw	0
  2297  00197A  6E9E               	movwf	3998,c	;volatile
  2298                           
  2299                           ;Current_Sense_Main.c: 400: PIR2 = 0b00000000;
  2300  00197C  0E00               	movlw	0
  2301  00197E  6EA1               	movwf	4001,c	;volatile
  2302                           
  2303                           ;Current_Sense_Main.c: 401: PIR3 = 0b00000000;
  2304  001980  0E00               	movlw	0
  2305  001982  6EA4               	movwf	4004,c	;volatile
  2306                           
  2307                           ;Current_Sense_Main.c: 402: PIR4 = 0b00000000;
  2308  001984  0E00               	movlw	0
  2309  001986  6E7B               	movwf	3963,c	;volatile
  2310                           
  2311                           ;Current_Sense_Main.c: 403: PIR5 = 0b00000000;
  2312  001988  0E00               	movlw	0
  2313  00198A  6E7E               	movwf	3966,c	;volatile
  2314                           
  2315                           ;Current_Sense_Main.c: 405: PIE1 = 0b00000000;
  2316  00198C  0E00               	movlw	0
  2317  00198E  6E9D               	movwf	3997,c	;volatile
  2318                           
  2319                           ;Current_Sense_Main.c: 406: PIE2 = 0b00000000;
  2320  001990  0E00               	movlw	0
  2321  001992  6EA0               	movwf	4000,c	;volatile
  2322                           
  2323                           ;Current_Sense_Main.c: 407: PIE3 = 0b00000000;
  2324  001994  0E00               	movlw	0
  2325  001996  6EA3               	movwf	4003,c	;volatile
  2326                           
  2327                           ;Current_Sense_Main.c: 408: PIE4 = 0b00000000;
  2328  001998  0E00               	movlw	0
  2329  00199A  6E7A               	movwf	3962,c	;volatile
  2330                           
  2331                           ;Current_Sense_Main.c: 409: PIE5 = 0b00000000;
  2332  00199C  0E00               	movlw	0
  2333  00199E  6E7D               	movwf	3965,c	;volatile
  2334                           
  2335                           ;Current_Sense_Main.c: 411: IPR1 = 0b00000000;
  2336  0019A0  0E00               	movlw	0
  2337  0019A2  6E9F               	movwf	3999,c	;volatile
  2338                           
  2339                           ;Current_Sense_Main.c: 412: IPR2 = 0b00000000;
  2340  0019A4  0E00               	movlw	0
  2341  0019A6  6EA2               	movwf	4002,c	;volatile
  2342                           
  2343                           ;Current_Sense_Main.c: 413: IPR3 = 0b00000000;
  2344  0019A8  0E00               	movlw	0
  2345  0019AA  6EA5               	movwf	4005,c	;volatile
  2346                           
  2347                           ;Current_Sense_Main.c: 414: IPR4 = 0b00000000;
  2348  0019AC  0E00               	movlw	0
  2349  0019AE  6E7C               	movwf	3964,c	;volatile
  2350                           
  2351                           ;Current_Sense_Main.c: 415: IPR5 = 0b00000000;
  2352  0019B0  0E00               	movlw	0
  2353  0019B2  6E7F               	movwf	3967,c	;volatile
  2354  0019B4  0012               	return		;funcret
  2355  0019B6                     __end_of_initInterruptsClear:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           intcon	equ	0xFF2
  2362                           intcon2	equ	0xFF1
  2363                           intcon3	equ	0xFF0
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1l	equ	0xFE1
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _initIO *****************
  2371 ;; Defined at:
  2372 ;;		line 374 in file "Current_Sense_Main.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2386 ;;      Params:         0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_init
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text9
  2401  001B84                     __ptext9:
  2402                           	opt stack 0
  2403  001B84                     _initIO:
  2404                           	opt stack 28
  2405                           
  2406                           ;Current_Sense_Main.c: 375: ADCON0bits.ADON = 0;
  2407                           
  2408                           ;incstack = 0
  2409  001B84  90C2               	bcf	4034,0,c	;volatile
  2410                           
  2411                           ;Current_Sense_Main.c: 376: ANSELA = 0b00000000;
  2412  001B86  0E00               	movlw	0
  2413  001B88  010F               	movlb	15	; () banked
  2414  001B8A  6F38               	movwf	56,b	;volatile
  2415                           
  2416                           ;Current_Sense_Main.c: 377: ANSELB = 0b00000000;
  2417  001B8C  0E00               	movlw	0
  2418  001B8E  010F               	movlb	15	; () banked
  2419  001B90  6F39               	movwf	57,b	;volatile
  2420                           
  2421                           ;Current_Sense_Main.c: 378: ANSELC = 0b00000000;
  2422  001B92  0E00               	movlw	0
  2423  001B94  010F               	movlb	15	; () banked
  2424  001B96  6F3A               	movwf	58,b	;volatile
  2425                           
  2426                           ; BSR set to: 15
  2427                           ;Current_Sense_Main.c: 380: TRISBbits.TRISB4 = 0;
  2428  001B98  9893               	bcf	3987,4,c	;volatile
  2429                           
  2430                           ; BSR set to: 15
  2431                           ;Current_Sense_Main.c: 381: LATBbits.LATB4 = 0;
  2432  001B9A  988A               	bcf	3978,4,c	;volatile
  2433                           
  2434                           ; BSR set to: 15
  2435                           ;Current_Sense_Main.c: 383: TRISCbits.TRISC2 = 1;
  2436  001B9C  8494               	bsf	3988,2,c	;volatile
  2437                           
  2438                           ; BSR set to: 15
  2439                           ;Current_Sense_Main.c: 384: TRISAbits.TRISA1 = 1;
  2440  001B9E  8292               	bsf	3986,1,c	;volatile
  2441                           
  2442                           ; BSR set to: 15
  2443                           ;Current_Sense_Main.c: 385: TRISAbits.TRISA0 = 0;
  2444  001BA0  9092               	bcf	3986,0,c	;volatile
  2445                           
  2446                           ; BSR set to: 15
  2447                           ;Current_Sense_Main.c: 386: LATAbits.LATA0 = 0;
  2448  001BA2  9089               	bcf	3977,0,c	;volatile
  2449  001BA4  0012               	return	
  2450  001BA6                     __end_of_initIO:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           intcon	equ	0xFF2
  2457                           intcon2	equ	0xFF1
  2458                           intcon3	equ	0xFF0
  2459                           postinc0	equ	0xFEE
  2460                           wreg	equ	0xFE8
  2461                           postdec1	equ	0xFE5
  2462                           fsr1l	equ	0xFE1
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _communications *****************
  2466 ;; Defined at:
  2467 ;;		line 89 in file "SlaveComm_PIC18.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  firstTime       1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  firstTime       1   23[BANK0 ] unsigned char 
  2472 ;;  no_more_to_s    1   22[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2482 ;;      Params:         0       0       0       0       0       0       0
  2483 ;;      Locals:         0       2       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0
  2485 ;;      Totals:         0       2       0       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    7
  2489 ;; This function calls:
  2490 ;;		_SPISlaveInit
  2491 ;;		_process_data
  2492 ;;		_receive_data
  2493 ;;		_resetCommunications
  2494 ;;		_send_data
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text10
  2501  00135C                     __ptext10:
  2502                           	opt stack 0
  2503  00135C                     _communications:
  2504                           	opt stack 23
  2505                           
  2506                           ; BSR set to: 15
  2507                           ;incstack = 0
  2508                           ;communications@firstTime stored from wreg
  2509  00135C  0100               	movlb	0	; () banked
  2510  00135E  6FBE               	movwf	communications@firstTime& (0+255),b
  2511                           
  2512                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2513                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2514                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2515                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2516                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2517                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2518  001360  0100               	movlb	0	; () banked
  2519  001362  05BE               	decf	communications@firstTime& (0+255),w,b
  2520  001364  A4D8               	btfss	status,2,c
  2521  001366  D011               	goto	l299
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;SlaveComm_PIC18.c: 101: {
  2525                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2526  001368  EC8D  F00C         	call	_SPISlaveInit	;wreg free
  2527                           
  2528                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2529  00136C  0E00               	movlw	0
  2530  00136E  0100               	movlb	0	; () banked
  2531  001370  6FA5               	movwf	(communications@send_buffer+40)& (0+255),b
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2535  001372  0E00               	movlw	0
  2536  001374  0100               	movlb	0	; () banked
  2537  001376  6FA6               	movwf	(communications@send_buffer+41)& (0+255),b
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2541  001378  0E7D               	movlw	low communications@send_buffer
  2542  00137A  0100               	movlb	0	; () banked
  2543  00137C  6FB5               	movwf	resetCommunications@send_buffer& (0+255),b
  2544  00137E  0E00               	movlw	high communications@send_buffer
  2545  001380  0100               	movlb	0	; () banked
  2546  001382  6FB6               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2547  001384  EC0D  F00A         	call	_resetCommunications	;wreg free
  2548                           
  2549                           ;SlaveComm_PIC18.c: 106: }
  2550  001388  0012               	return	
  2551  00138A                     l299:
  2552                           
  2553                           ;SlaveComm_PIC18.c: 107: else
  2554                           ;SlaveComm_PIC18.c: 108: {
  2555                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2556  00138A  0E33               	movlw	low communications@receive_buffer
  2557  00138C  6E16               	movwf	receive_data@receive_buffer,c
  2558  00138E  0E01               	movlw	high communications@receive_buffer
  2559  001390  6E17               	movwf	receive_data@receive_buffer+1,c
  2560  001392  EC4E  F009         	call	_receive_data	;wreg free
  2561  001396  0100               	movlb	0	; () banked
  2562  001398  6F7B               	movwf	communications@receive_current_state& (0+255),b
  2563                           
  2564                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2565  00139A  D015               	goto	l301
  2566  00139C                     
  2567                           ; BSR set to: 0
  2568                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2569                           
  2570                           ; BSR set to: 0
  2571  00139C  0E33               	movlw	low communications@receive_buffer
  2572  00139E  0100               	movlb	0	; () banked
  2573  0013A0  6FB9               	movwf	process_data@receive_buffer& (0+255),b
  2574  0013A2  0E01               	movlw	high communications@receive_buffer
  2575  0013A4  0100               	movlb	0	; () banked
  2576  0013A6  6FBA               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2577  0013A8  0E7D               	movlw	low communications@send_buffer
  2578  0013AA  0100               	movlb	0	; () banked
  2579  0013AC  6FBB               	movwf	process_data@send_buffer& (0+255),b
  2580  0013AE  0E00               	movlw	high communications@send_buffer
  2581  0013B0  0100               	movlb	0	; () banked
  2582  0013B2  6FBC               	movwf	(process_data@send_buffer+1)& (0+255),b
  2583  0013B4  EC25  F00D         	call	_process_data	;wreg free
  2584  0013B8  06E8               	decf	wreg,f,c
  2585  0013BA  A4D8               	btfss	status,2,c
  2586  0013BC  D00F               	goto	l303
  2587                           
  2588                           ;SlaveComm_PIC18.c: 122: {
  2589                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2590  0013BE  0E01               	movlw	1
  2591  0013C0  0100               	movlb	0	; () banked
  2592  0013C2  6F7C               	movwf	communications@end_of_transmission_received& (0+255),b
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;SlaveComm_PIC18.c: 127: }
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;SlaveComm_PIC18.c: 124: }
  2599                           ;SlaveComm_PIC18.c: 126: break;
  2600  0013C4  D00B               	goto	l303
  2601  0013C6                     l301:
  2602                           
  2603                           ; BSR set to: 0
  2604                           
  2605                           ; BSR set to: 0
  2606  0013C6  0100               	movlb	0	; () banked
  2607  0013C8  517B               	movf	communications@receive_current_state& (0+255),w,b
  2608                           
  2609                           ; Switch size 1, requested type "space"
  2610                           ; Number of cases is 3, Range of values is 0 to 2
  2611                           ; switch strategies available:
  2612                           ; Name         Instructions Cycles
  2613                           ; simple_byte           10     6 (average)
  2614                           ;	Chosen strategy is simple_byte
  2615  0013CA  0A00               	xorlw	0	; case 0
  2616  0013CC  B4D8               	btfsc	status,2,c
  2617  0013CE  D006               	goto	l303
  2618  0013D0  0A01               	xorlw	1	; case 1
  2619  0013D2  B4D8               	btfsc	status,2,c
  2620  0013D4  D003               	goto	l303
  2621  0013D6  0A03               	xorlw	3	; case 2
  2622  0013D8  B4D8               	btfsc	status,2,c
  2623  0013DA  D7E0               	goto	l305
  2624  0013DC                     l303:
  2625                           
  2626                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2627                           
  2628                           ; BSR set to: 0
  2629  0013DC  0E7D               	movlw	low communications@send_buffer
  2630  0013DE  6E15               	movwf	send_data@send_buffer,c
  2631  0013E0  0E00               	movlw	high communications@send_buffer
  2632  0013E2  6E16               	movwf	send_data@send_buffer+1,c
  2633  0013E4  ECAF  F00A         	call	_send_data	;wreg free
  2634  0013E8  0100               	movlb	0	; () banked
  2635  0013EA  6FBD               	movwf	communications@no_more_to_send& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2639                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2640  0013EC  A081               	btfss	3969,0,c	;volatile
  2641  0013EE  D004               	goto	l309
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;SlaveComm_PIC18.c: 134: {
  2645                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2646  0013F0  0E00               	movlw	0
  2647  0013F2  0100               	movlb	0	; () banked
  2648  0013F4  6F7A               	movwf	communications@last_state_active& (0+255),b
  2649                           
  2650                           ;SlaveComm_PIC18.c: 136: }
  2651  0013F6  0012               	return	
  2652  0013F8                     l309:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;SlaveComm_PIC18.c: 137: else
  2656                           ;SlaveComm_PIC18.c: 138: {
  2657                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2658                           
  2659                           ; BSR set to: 0
  2660  0013F8  0100               	movlb	0	; () banked
  2661  0013FA  517A               	movf	communications@last_state_active& (0+255),w,b
  2662  0013FC  0100               	movlb	0	; () banked
  2663  0013FE  A4D8               	btfss	status,2,c
  2664  001400  D008               	goto	l311
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;SlaveComm_PIC18.c: 140: {
  2668                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2669  001402  0E7D               	movlw	low communications@send_buffer
  2670  001404  0100               	movlb	0	; () banked
  2671  001406  6FB5               	movwf	resetCommunications@send_buffer& (0+255),b
  2672  001408  0E00               	movlw	high communications@send_buffer
  2673  00140A  0100               	movlb	0	; () banked
  2674  00140C  6FB6               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2675  00140E  EC0D  F00A         	call	_resetCommunications	;wreg free
  2676  001412                     l311:
  2677                           
  2678                           ;SlaveComm_PIC18.c: 142: }
  2679                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2680  001412  0E01               	movlw	1
  2681  001414  0100               	movlb	0	; () banked
  2682  001416  6F7A               	movwf	communications@last_state_active& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685                           
  2686                           ; BSR set to: 0
  2687  001418  0012               	return	
  2688  00141A                     __end_of_communications:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           intcon	equ	0xFF2
  2695                           intcon2	equ	0xFF1
  2696                           intcon3	equ	0xFF0
  2697                           postinc0	equ	0xFEE
  2698                           wreg	equ	0xFE8
  2699                           postdec1	equ	0xFE5
  2700                           fsr1l	equ	0xFE1
  2701                           status	equ	0xFD8
  2702                           
  2703 ;; *************** function _send_data *****************
  2704 ;; Defined at:
  2705 ;;		line 485 in file "SlaveComm_PIC18.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2708 ;;		 -> communications@send_buffer(42), 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  send_end        1   24[COMRAM] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      unsigned char 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         2       0       0       0       0       0       0
  2721 ;;      Locals:         1       0       0       0       0       0       0
  2722 ;;      Temps:          2       0       0       0       0       0       0
  2723 ;;      Totals:         5       0       0       0       0       0       0
  2724 ;;Total ram usage:        5 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    2
  2727 ;; This function calls:
  2728 ;;		_SPI_send_data
  2729 ;; This function is called by:
  2730 ;;		_communications
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text11
  2735  00155E                     __ptext11:
  2736                           	opt stack 0
  2737  00155E                     _send_data:
  2738                           	opt stack 27
  2739                           
  2740                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2741                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2742                           
  2743                           ;incstack = 0
  2744  00155E  EE20 F028          	lfsr	2,40
  2745  001562  5015               	movf	send_data@send_buffer,w,c
  2746  001564  26D9               	addwf	fsr2l,f,c
  2747  001566  5016               	movf	send_data@send_buffer+1,w,c
  2748  001568  22DA               	addwfc	fsr2h,f,c
  2749  00156A  EE10 F029          	lfsr	1,41
  2750  00156E  5015               	movf	send_data@send_buffer,w,c
  2751  001570  26E1               	addwf	fsr1l,f,c
  2752  001572  5016               	movf	send_data@send_buffer+1,w,c
  2753  001574  22E2               	addwfc	fsr1h,f,c
  2754  001576  50DE               	movf	postinc2,w,c
  2755  001578  18E6               	xorwf	postinc1,w,c
  2756  00157A  A4D8               	btfss	status,2,c
  2757  00157C  D006               	goto	l409
  2758                           
  2759                           ;SlaveComm_PIC18.c: 490: {
  2760                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2761  00157E  0E01               	movlw	1
  2762  001580  6E19               	movwf	send_data@send_end,c
  2763                           
  2764                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2765  001582  0E00               	movlw	0
  2766  001584  ECD3  F00D         	call	_SPI_send_data
  2767                           
  2768                           ;SlaveComm_PIC18.c: 493: }
  2769  001588  D030               	goto	l412
  2770  00158A                     l409:
  2771                           
  2772                           ;SlaveComm_PIC18.c: 494: else
  2773                           ;SlaveComm_PIC18.c: 495: {
  2774                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2775  00158A  0E00               	movlw	0
  2776  00158C  6E19               	movwf	send_data@send_end,c
  2777                           
  2778                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2779  00158E  EE20 F029          	lfsr	2,41
  2780  001592  5015               	movf	send_data@send_buffer,w,c
  2781  001594  26D9               	addwf	fsr2l,f,c
  2782  001596  5016               	movf	send_data@send_buffer+1,w,c
  2783  001598  22DA               	addwfc	fsr2h,f,c
  2784  00159A  50DF               	movf	indf2,w,c
  2785  00159C  6E17               	movwf	??_send_data& (0+255),c
  2786  00159E  5017               	movf	??_send_data,w,c
  2787  0015A0  0D01               	mullw	1
  2788  0015A2  50F3               	movf	prodl,w,c
  2789  0015A4  2415               	addwf	send_data@send_buffer,w,c
  2790  0015A6  6ED9               	movwf	fsr2l,c
  2791  0015A8  50F4               	movf	prodh,w,c
  2792  0015AA  2016               	addwfc	send_data@send_buffer+1,w,c
  2793  0015AC  6EDA               	movwf	fsr2h,c
  2794  0015AE  50DF               	movf	indf2,w,c
  2795  0015B0  ECD3  F00D         	call	_SPI_send_data
  2796  0015B4  06E8               	decf	wreg,f,c
  2797  0015B6  A4D8               	btfss	status,2,c
  2798  0015B8  D018               	goto	l412
  2799                           
  2800                           ;SlaveComm_PIC18.c: 500: {
  2801                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2802  0015BA  EE20 F029          	lfsr	2,41
  2803  0015BE  5015               	movf	send_data@send_buffer,w,c
  2804  0015C0  26D9               	addwf	fsr2l,f,c
  2805  0015C2  5016               	movf	send_data@send_buffer+1,w,c
  2806  0015C4  22DA               	addwfc	fsr2h,f,c
  2807  0015C6  2ADF               	incf	indf2,f,c
  2808                           
  2809                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2810  0015C8  EE20 F029          	lfsr	2,41
  2811  0015CC  5015               	movf	send_data@send_buffer,w,c
  2812  0015CE  26D9               	addwf	fsr2l,f,c
  2813  0015D0  5016               	movf	send_data@send_buffer+1,w,c
  2814  0015D2  22DA               	addwfc	fsr2h,f,c
  2815  0015D4  0E27               	movlw	39
  2816  0015D6  64DF               	cpfsgt	indf2,c
  2817  0015D8  D008               	goto	l412
  2818                           
  2819                           ;SlaveComm_PIC18.c: 504: {
  2820                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2821  0015DA  EE20 F029          	lfsr	2,41
  2822  0015DE  5015               	movf	send_data@send_buffer,w,c
  2823  0015E0  26D9               	addwf	fsr2l,f,c
  2824  0015E2  5016               	movf	send_data@send_buffer+1,w,c
  2825  0015E4  22DA               	addwfc	fsr2h,f,c
  2826  0015E6  0E00               	movlw	0
  2827  0015E8  6EDF               	movwf	indf2,c
  2828  0015EA                     l412:
  2829                           
  2830                           ;SlaveComm_PIC18.c: 506: }
  2831                           ;SlaveComm_PIC18.c: 507: }
  2832                           ;SlaveComm_PIC18.c: 508: }
  2833                           ;SlaveComm_PIC18.c: 510: return send_end;
  2834  0015EA  5019               	movf	send_data@send_end,w,c
  2835  0015EC  0012               	return	
  2836  0015EE                     __end_of_send_data:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           intcon2	equ	0xFF1
  2846                           intcon3	equ	0xFF0
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           postinc1	equ	0xFE6
  2850                           postdec1	equ	0xFE5
  2851                           fsr1h	equ	0xFE2
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _SPI_send_data *****************
  2860 ;; Defined at:
  2861 ;;		line 583 in file "SlaveComm_PIC18.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  data            1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  data            1   18[COMRAM] unsigned char 
  2866 ;;  sendGood        1   19[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2876 ;;      Params:         0       0       0       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0
  2879 ;;      Totals:         2       0       0       0       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_send_data
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text12
  2891  001BA6                     __ptext12:
  2892                           	opt stack 0
  2893  001BA6                     _SPI_send_data:
  2894                           	opt stack 27
  2895                           
  2896                           ;incstack = 0
  2897                           ;SPI_send_data@data stored from wreg
  2898  001BA6  6E13               	movwf	SPI_send_data@data,c
  2899                           
  2900                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2901  001BA8  0E00               	movlw	0
  2902  001BAA  6E14               	movwf	SPI_send_data@sendGood,c
  2903                           
  2904                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  2905  001BAC  5049               	movf	_SPI_transmit_wait,w,c
  2906  001BAE  A4D8               	btfss	status,2,c
  2907  001BB0  D006               	goto	l440
  2908                           
  2909                           ;SlaveComm_PIC18.c: 588: {
  2910                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  2911  001BB2  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2912                           
  2913                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  2914  001BB6  0E01               	movlw	1
  2915  001BB8  6E49               	movwf	_SPI_transmit_wait,c
  2916                           
  2917                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  2918  001BBA  0E01               	movlw	1
  2919  001BBC  D001               	goto	L1
  2920  001BBE                     l440:
  2921                           
  2922                           ;SlaveComm_PIC18.c: 593: else
  2923                           ;SlaveComm_PIC18.c: 594: {
  2924                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  2925  001BBE  0E00               	movlw	0
  2926  001BC0                     L1:
  2927  001BC0  6E14               	movwf	SPI_send_data@sendGood,c
  2928                           
  2929                           ;SlaveComm_PIC18.c: 596: }
  2930                           ;SlaveComm_PIC18.c: 598: return sendGood;
  2931  001BC2  5014               	movf	SPI_send_data@sendGood,w,c
  2932  001BC4  0012               	return	
  2933  001BC6                     __end_of_SPI_send_data:
  2934                           	opt stack 0
  2935                           tblptru	equ	0xFF8
  2936                           tblptrh	equ	0xFF7
  2937                           tblptrl	equ	0xFF6
  2938                           tablat	equ	0xFF5
  2939                           prodh	equ	0xFF4
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           intcon2	equ	0xFF1
  2943                           intcon3	equ	0xFF0
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postinc1	equ	0xFE6
  2947                           postdec1	equ	0xFE5
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           postinc2	equ	0xFDE
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _resetCommunications *****************
  2957 ;; Defined at:
  2958 ;;		line 152 in file "SlaveComm_PIC18.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  2961 ;;		 -> communications@send_buffer(42), 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2973 ;;      Params:         0       2       0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0
  2975 ;;      Temps:          0       2       0       0       0       0       0
  2976 ;;      Totals:         0       4       0       0       0       0       0
  2977 ;;Total ram usage:        4 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    5
  2980 ;; This function calls:
  2981 ;;		_com_command_setEnergyUsed
  2982 ;;		_com_command_setPower
  2983 ;;		_com_command_setVersion
  2984 ;; This function is called by:
  2985 ;;		_communications
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text13
  2990  00141A                     __ptext13:
  2991                           	opt stack 0
  2992  00141A                     _resetCommunications:
  2993                           	opt stack 24
  2994                           
  2995                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2996                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2997                           
  2998                           ;incstack = 0
  2999  00141A  9A6C               	bcf	3948,5,c	;volatile
  3000                           
  3001                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  3002  00141C  0E06               	movlw	6
  3003  00141E  0100               	movlb	0	; () banked
  3004  001420  6FB7               	movwf	??_resetCommunications& (0+255),b
  3005  001422  0E30               	movlw	48
  3006  001424                     u2967:
  3007  001424  2EE8               	decfsz	wreg,f,c
  3008  001426  D7FE               	bra	u2967
  3009  001428  2FB7               	decfsz	??_resetCommunications& (0+255),f,b
  3010  00142A  D7FC               	bra	u2967
  3011  00142C  F000               	nop	
  3012                           
  3013                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  3014  00142E  8A6C               	bsf	3948,5,c	;volatile
  3015                           
  3016                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  3017  001430  9E6C               	bcf	3948,7,c	;volatile
  3018                           
  3019                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  3020  001432  0E00               	movlw	0
  3021  001434  6E49               	movwf	_SPI_transmit_wait,c
  3022                           
  3023                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  3024  001436  0100               	movlb	0	; () banked
  3025  001438  EE20 F029          	lfsr	2,41
  3026  00143C  51B5               	movf	resetCommunications@send_buffer& (0+255),w,b
  3027  00143E  26D9               	addwf	fsr2l,f,c
  3028  001440  51B6               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  3029  001442  22DA               	addwfc	fsr2h,f,c
  3030  001444  0E00               	movlw	0
  3031  001446  6EDF               	movwf	indf2,c
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  3035  001448  0100               	movlb	0	; () banked
  3036  00144A  EE20 F028          	lfsr	2,40
  3037  00144E  51B5               	movf	resetCommunications@send_buffer& (0+255),w,b
  3038  001450  26D9               	addwf	fsr2l,f,c
  3039  001452  51B6               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  3040  001454  22DA               	addwfc	fsr2h,f,c
  3041  001456  0E00               	movlw	0
  3042  001458  6EDF               	movwf	indf2,c
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;SlaveComm_PIC18.c: 171: commState++;
  3046  00145A  0100               	movlb	0	; () banked
  3047  00145C  4B78               	infsnz	resetCommunications@commState& (0+255),f,b
  3048  00145E  2B79               	incf	(resetCommunications@commState+1)& (0+255),f,b
  3049                           
  3050                           ;SlaveComm_PIC18.c: 172: switch (commState)
  3051  001460  D01A               	goto	l317
  3052  001462                     
  3053                           ; BSR set to: 0
  3054                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  3055                           
  3056                           ; BSR set to: 0
  3057  001462  C0B5  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  3058  001466  C0B6  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  3059  00146A  EC9C  F00D         	call	_com_command_setVersion	;wreg free
  3060                           
  3061                           ;SlaveComm_PIC18.c: 176: break;
  3062  00146E  0012               	return	
  3063  001470                     
  3064                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  3065  001470  C0B5  F0A7         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  3066  001474  C0B6  F0A8         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  3067  001478  ECDB  F00C         	call	_com_command_setPower	;wreg free
  3068                           
  3069                           ;SlaveComm_PIC18.c: 179: break;
  3070  00147C  0012               	return	
  3071  00147E                     
  3072                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  3073  00147E  C0B5  F0A7         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  3074  001482  C0B6  F0A8         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3075  001486  EC00  F00D         	call	_com_command_setEnergyUsed	;wreg free
  3076  00148A                     
  3077                           ;SlaveComm_PIC18.c: 193: commState = 0;
  3078  00148A  0E00               	movlw	0
  3079  00148C  0100               	movlb	0	; () banked
  3080  00148E  6F79               	movwf	(resetCommunications@commState+1)& (0+255),b
  3081  001490  0E00               	movlw	0
  3082  001492  6F78               	movwf	resetCommunications@commState& (0+255),b
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;SlaveComm_PIC18.c: 195: }
  3086                           
  3087                           ;SlaveComm_PIC18.c: 194: break;
  3088  001494  0012               	return	
  3089  001496                     l317:
  3090                           
  3091                           ; BSR set to: 0
  3092                           
  3093                           ; BSR set to: 0
  3094  001496  C078  F0B7         	movff	resetCommunications@commState,??_resetCommunications
  3095  00149A  C079  F0B8         	movff	resetCommunications@commState+1,??_resetCommunications+1
  3096                           
  3097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3098                           ; Switch size 1, requested type "space"
  3099                           ; Number of cases is 1, Range of values is 0 to 0
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            4     3 (average)
  3103                           ;	Chosen strategy is simple_byte
  3104  00149E  0100               	movlb	0	; () banked
  3105  0014A0  51B8               	movf	(??_resetCommunications+1)& (0+255),w,b
  3106  0014A2  0A00               	xorlw	0	; case 0
  3107  0014A4  A4D8               	btfss	status,2,c
  3108  0014A6  D7F1               	goto	l322
  3109                           
  3110                           ; BSR set to: 0
  3111                           ; Switch size 1, requested type "space"
  3112                           ; Number of cases is 3, Range of values is 1 to 3
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte           10     6 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  0014A8  0100               	movlb	0	; () banked
  3118  0014AA  51B7               	movf	??_resetCommunications& (0+255),w,b
  3119  0014AC  0A01               	xorlw	1	; case 1
  3120  0014AE  B4D8               	btfsc	status,2,c
  3121  0014B0  D7D8               	goto	l318
  3122  0014B2  0A03               	xorlw	3	; case 2
  3123  0014B4  B4D8               	btfsc	status,2,c
  3124  0014B6  D7DC               	goto	l320
  3125  0014B8  0A01               	xorlw	1	; case 3
  3126  0014BA  B4D8               	btfsc	status,2,c
  3127  0014BC  D7E0               	goto	l321
  3128  0014BE  D7E5               	goto	l322
  3129  0014C0                     __end_of_resetCommunications:
  3130                           	opt stack 0
  3131                           tblptru	equ	0xFF8
  3132                           tblptrh	equ	0xFF7
  3133                           tblptrl	equ	0xFF6
  3134                           tablat	equ	0xFF5
  3135                           prodh	equ	0xFF4
  3136                           prodl	equ	0xFF3
  3137                           intcon	equ	0xFF2
  3138                           intcon2	equ	0xFF1
  3139                           intcon3	equ	0xFF0
  3140                           postinc0	equ	0xFEE
  3141                           wreg	equ	0xFE8
  3142                           postinc1	equ	0xFE6
  3143                           postdec1	equ	0xFE5
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           postinc2	equ	0xFDE
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function _com_command_setVersion *****************
  3153 ;; Defined at:
  3154 ;;		line 663 in file "SlaveComm_PIC18.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  3157 ;;		 -> communications@send_buffer(42), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3169 ;;      Params:         2       0       0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0
  3172 ;;      Totals:         2       0       0       0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		_command_builder3
  3178 ;; This function is called by:
  3179 ;;		_resetCommunications
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text14
  3184  001B38                     __ptext14:
  3185                           	opt stack 0
  3186  001B38                     _com_command_setVersion:
  3187                           	opt stack 24
  3188                           
  3189                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3190                           
  3191                           ;incstack = 0
  3192  001B38  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3193  001B3C  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3194  001B40  0E57               	movlw	low STR_2
  3195  001B42  6E21               	movwf	command_builder3@data1,c
  3196  001B44  0E06               	movlw	high STR_2
  3197  001B46  6E22               	movwf	command_builder3@data1+1,c
  3198  001B48  0E0D               	movlw	low STR_22
  3199  001B4A  6E23               	movwf	command_builder3@data2,c
  3200  001B4C  0E06               	movlw	high STR_22
  3201  001B4E  6E24               	movwf	command_builder3@data2+1,c
  3202  001B50  0E4B               	movlw	low STR_40
  3203  001B52  6E25               	movwf	command_builder3@data3,c
  3204  001B54  0E06               	movlw	high STR_40
  3205  001B56  6E26               	movwf	command_builder3@data3+1,c
  3206  001B58  EC60  F00A         	call	_command_builder3	;wreg free
  3207  001B5C  0012               	return		;funcret
  3208  001B5E                     __end_of_com_command_setVersion:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           intcon2	equ	0xFF1
  3218                           intcon3	equ	0xFF0
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           postinc1	equ	0xFE6
  3222                           postdec1	equ	0xFE5
  3223                           fsr1h	equ	0xFE2
  3224                           fsr1l	equ	0xFE1
  3225                           indf2	equ	0xFDF
  3226                           postinc2	equ	0xFDE
  3227                           fsr2h	equ	0xFDA
  3228                           fsr2l	equ	0xFD9
  3229                           status	equ	0xFD8
  3230                           
  3231 ;; *************** function _com_command_setPower *****************
  3232 ;; Defined at:
  3233 ;;		line 618 in file "SlaveComm_PIC18.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  send_buffer     2    0[BANK0 ] PTR struct buffer
  3236 ;;		 -> communications@send_buffer(42), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  temp           12    2[BANK0 ] unsigned char [12]
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3248 ;;      Params:         0       2       0       0       0       0       0
  3249 ;;      Locals:         0      12       0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0
  3251 ;;      Totals:         0      14       0       0       0       0       0
  3252 ;;Total ram usage:       14 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		_command_builder3
  3257 ;;		_ultoa
  3258 ;; This function is called by:
  3259 ;;		_resetCommunications
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text15
  3264  0019B6                     __ptext15:
  3265                           	opt stack 0
  3266  0019B6                     _com_command_setPower:
  3267                           	opt stack 24
  3268                           
  3269                           ;SlaveComm_PIC18.c: 621: char temp[12];
  3270                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  3271                           
  3272                           ;incstack = 0
  3273  0019B6  0EA9               	movlw	low com_command_setPower@temp
  3274  0019B8  6E2C               	movwf	ultoa@buf,c
  3275  0019BA  0E00               	movlw	high com_command_setPower@temp
  3276  0019BC  6E2D               	movwf	ultoa@buf+1,c
  3277  0019BE  C074  F02E         	movff	_meterWatts,ultoa@val
  3278  0019C2  C075  F02F         	movff	_meterWatts+1,ultoa@val+1
  3279  0019C6  C076  F030         	movff	_meterWatts+2,ultoa@val+2
  3280  0019CA  C077  F031         	movff	_meterWatts+3,ultoa@val+3
  3281  0019CE  0E00               	movlw	0
  3282  0019D0  6E33               	movwf	ultoa@base+1,c
  3283  0019D2  0E0A               	movlw	10
  3284  0019D4  6E32               	movwf	ultoa@base,c
  3285  0019D6  ECED  F007         	call	_ultoa	;wreg free
  3286                           
  3287                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  3288  0019DA  C0A7  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3289  0019DE  C0A8  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3290  0019E2  0E57               	movlw	low STR_2
  3291  0019E4  6E21               	movwf	command_builder3@data1,c
  3292  0019E6  0E06               	movlw	high STR_2
  3293  0019E8  6E22               	movwf	command_builder3@data1+1,c
  3294  0019EA  0E24               	movlw	low STR_18
  3295  0019EC  6E23               	movwf	command_builder3@data2,c
  3296  0019EE  0E06               	movlw	high STR_18
  3297  0019F0  6E24               	movwf	command_builder3@data2+1,c
  3298  0019F2  0EA9               	movlw	low com_command_setPower@temp
  3299  0019F4  6E25               	movwf	command_builder3@data3,c
  3300  0019F6  0E00               	movlw	high com_command_setPower@temp
  3301  0019F8  6E26               	movwf	command_builder3@data3+1,c
  3302  0019FA  EC60  F00A         	call	_command_builder3	;wreg free
  3303  0019FE  0012               	return	
  3304  001A00                     __end_of_com_command_setPower:
  3305                           	opt stack 0
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           intcon2	equ	0xFF1
  3314                           intcon3	equ	0xFF0
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           postinc1	equ	0xFE6
  3318                           postdec1	equ	0xFE5
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function _receive_data *****************
  3328 ;; Defined at:
  3329 ;;		line 199 in file "SlaveComm_PIC18.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3332 ;;		 -> communications@receive_buffer(42), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  data            1   24[COMRAM] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      enum E6751
  3337 ;; Registers used:
  3338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3344 ;;      Params:         2       0       0       0       0       0       0
  3345 ;;      Locals:         1       0       0       0       0       0       0
  3346 ;;      Temps:          1       0       0       0       0       0       0
  3347 ;;      Totals:         4       0       0       0       0       0       0
  3348 ;;Total ram usage:        4 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    2
  3351 ;; This function calls:
  3352 ;;		_SPI_receive_data
  3353 ;; This function is called by:
  3354 ;;		_communications
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text16
  3359  00129C                     __ptext16:
  3360                           	opt stack 0
  3361  00129C                     _receive_data:
  3362                           	opt stack 27
  3363                           
  3364                           ;SlaveComm_PIC18.c: 201: char data;
  3365                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  3366                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  3367                           
  3368                           ;incstack = 0
  3369  00129C  0E02               	movlw	2
  3370  00129E  1848               	xorwf	receive_data@my_status,w,c
  3371  0012A0  A4D8               	btfss	status,2,c
  3372  0012A2  D002               	goto	l328
  3373                           
  3374                           ;SlaveComm_PIC18.c: 206: {
  3375                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  3376  0012A4  0E00               	movlw	0
  3377  0012A6  6E48               	movwf	receive_data@my_status,c
  3378  0012A8                     l328:
  3379                           
  3380                           ;SlaveComm_PIC18.c: 208: }
  3381                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3382  0012A8  0E19               	movlw	low receive_data@data
  3383  0012AA  6E13               	movwf	SPI_receive_data@data,c
  3384  0012AC  0E00               	movlw	high receive_data@data
  3385  0012AE  6E14               	movwf	SPI_receive_data@data+1,c
  3386  0012B0  EC88  F00D         	call	_SPI_receive_data	;wreg free
  3387  0012B4  06E8               	decf	wreg,f,c
  3388  0012B6  A4D8               	btfss	status,2,c
  3389  0012B8  D04F               	goto	l333
  3390                           
  3391                           ;SlaveComm_PIC18.c: 211: {
  3392                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3393  0012BA  0E21               	movlw	33
  3394  0012BC  1819               	xorwf	receive_data@data,w,c
  3395  0012BE  A4D8               	btfss	status,2,c
  3396  0012C0  D015               	goto	l330
  3397  0012C2  0448               	decf	receive_data@my_status,w,c
  3398  0012C4  B4D8               	btfsc	status,2,c
  3399  0012C6  D012               	goto	l330
  3400                           
  3401                           ;SlaveComm_PIC18.c: 213: {
  3402                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3403  0012C8  0E01               	movlw	1
  3404  0012CA  6E48               	movwf	receive_data@my_status,c
  3405                           
  3406                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3407  0012CC  EE20 F029          	lfsr	2,41
  3408  0012D0  5016               	movf	receive_data@receive_buffer,w,c
  3409  0012D2  26D9               	addwf	fsr2l,f,c
  3410  0012D4  5017               	movf	receive_data@receive_buffer+1,w,c
  3411  0012D6  22DA               	addwfc	fsr2h,f,c
  3412  0012D8  0E00               	movlw	0
  3413  0012DA  6EDF               	movwf	indf2,c
  3414                           
  3415                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3416  0012DC  EE20 F028          	lfsr	2,40
  3417  0012E0  5016               	movf	receive_data@receive_buffer,w,c
  3418  0012E2  26D9               	addwf	fsr2l,f,c
  3419  0012E4  5017               	movf	receive_data@receive_buffer+1,w,c
  3420  0012E6  22DA               	addwfc	fsr2h,f,c
  3421  0012E8  0E00               	movlw	0
  3422  0012EA  6EDF               	movwf	indf2,c
  3423  0012EC                     l330:
  3424                           
  3425                           ;SlaveComm_PIC18.c: 217: }
  3426                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3427  0012EC  0448               	decf	receive_data@my_status,w,c
  3428  0012EE  A4D8               	btfss	status,2,c
  3429  0012F0  D02A               	goto	l332
  3430                           
  3431                           ;SlaveComm_PIC18.c: 220: {
  3432                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3433  0012F2  EE20 F028          	lfsr	2,40
  3434  0012F6  5016               	movf	receive_data@receive_buffer,w,c
  3435  0012F8  26D9               	addwf	fsr2l,f,c
  3436  0012FA  5017               	movf	receive_data@receive_buffer+1,w,c
  3437  0012FC  22DA               	addwfc	fsr2h,f,c
  3438  0012FE  50DF               	movf	indf2,w,c
  3439  001300  6E18               	movwf	??_receive_data& (0+255),c
  3440  001302  5018               	movf	??_receive_data,w,c
  3441  001304  0D01               	mullw	1
  3442  001306  50F3               	movf	prodl,w,c
  3443  001308  2416               	addwf	receive_data@receive_buffer,w,c
  3444  00130A  6ED9               	movwf	fsr2l,c
  3445  00130C  50F4               	movf	prodh,w,c
  3446  00130E  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3447  001310  6EDA               	movwf	fsr2h,c
  3448  001312  C019  FFDF         	movff	receive_data@data,indf2
  3449                           
  3450                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3451  001316  EE20 F028          	lfsr	2,40
  3452  00131A  5016               	movf	receive_data@receive_buffer,w,c
  3453  00131C  26D9               	addwf	fsr2l,f,c
  3454  00131E  5017               	movf	receive_data@receive_buffer+1,w,c
  3455  001320  22DA               	addwfc	fsr2h,f,c
  3456  001322  2ADF               	incf	indf2,f,c
  3457                           
  3458                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3459  001324  EE20 F028          	lfsr	2,40
  3460  001328  5016               	movf	receive_data@receive_buffer,w,c
  3461  00132A  26D9               	addwf	fsr2l,f,c
  3462  00132C  5017               	movf	receive_data@receive_buffer+1,w,c
  3463  00132E  22DA               	addwfc	fsr2h,f,c
  3464  001330  0E27               	movlw	39
  3465  001332  64DF               	cpfsgt	indf2,c
  3466  001334  D008               	goto	l332
  3467                           
  3468                           ;SlaveComm_PIC18.c: 225: {
  3469                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3470  001336  EE20 F028          	lfsr	2,40
  3471  00133A  5016               	movf	receive_data@receive_buffer,w,c
  3472  00133C  26D9               	addwf	fsr2l,f,c
  3473  00133E  5017               	movf	receive_data@receive_buffer+1,w,c
  3474  001340  22DA               	addwfc	fsr2h,f,c
  3475  001342  0E27               	movlw	39
  3476  001344  6EDF               	movwf	indf2,c
  3477  001346                     l332:
  3478                           
  3479                           ;SlaveComm_PIC18.c: 227: }
  3480                           ;SlaveComm_PIC18.c: 228: }
  3481                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3482  001346  0448               	decf	receive_data@my_status,w,c
  3483  001348  A4D8               	btfss	status,2,c
  3484  00134A  D006               	goto	l333
  3485  00134C  0E2A               	movlw	42
  3486  00134E  1819               	xorwf	receive_data@data,w,c
  3487  001350  A4D8               	btfss	status,2,c
  3488  001352  D002               	goto	l333
  3489                           
  3490                           ;SlaveComm_PIC18.c: 231: {
  3491                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3492  001354  0E02               	movlw	2
  3493  001356  6E48               	movwf	receive_data@my_status,c
  3494  001358                     l333:
  3495                           
  3496                           ;SlaveComm_PIC18.c: 233: }
  3497                           ;SlaveComm_PIC18.c: 234: }
  3498                           ;SlaveComm_PIC18.c: 236: return my_status;
  3499  001358  5048               	movf	receive_data@my_status,w,c
  3500  00135A  0012               	return	
  3501  00135C                     __end_of_receive_data:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           intcon	equ	0xFF2
  3510                           intcon2	equ	0xFF1
  3511                           intcon3	equ	0xFF0
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           postinc1	equ	0xFE6
  3515                           postdec1	equ	0xFE5
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           postinc2	equ	0xFDE
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _SPI_receive_data *****************
  3525 ;; Defined at:
  3526 ;;		line 562 in file "SlaveComm_PIC18.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  data            2   18[COMRAM] PTR unsigned char 
  3529 ;;		 -> receive_data@data(1), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  recvGood        1   20[COMRAM] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      unsigned char 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         2       0       0       0       0       0       0
  3542 ;;      Locals:         1       0       0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0
  3544 ;;      Totals:         3       0       0       0       0       0       0
  3545 ;;Total ram usage:        3 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_receive_data
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text17
  3556  001B10                     __ptext17:
  3557                           	opt stack 0
  3558  001B10                     _SPI_receive_data:
  3559                           	opt stack 27
  3560                           
  3561                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3562                           
  3563                           ;incstack = 0
  3564  001B10  0E00               	movlw	0
  3565  001B12  6E15               	movwf	SPI_receive_data@recvGood,c
  3566                           
  3567                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3568  001B14  A06D               	btfss	3949,0,c	;volatile
  3569  001B16  D00C               	goto	l435
  3570                           
  3571                           ;SlaveComm_PIC18.c: 568: {
  3572                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3573  001B18  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3574  001B1C  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3575  001B20  CF6F FFDF          	movff	3951,indf2	;volatile
  3576                           
  3577                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3578  001B24  0E01               	movlw	1
  3579  001B26  6E15               	movwf	SPI_receive_data@recvGood,c
  3580                           
  3581                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3582  001B28  9E6C               	bcf	3948,7,c	;volatile
  3583                           
  3584                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3585  001B2A  0E00               	movlw	0
  3586  001B2C  6E49               	movwf	_SPI_transmit_wait,c
  3587                           
  3588                           ;SlaveComm_PIC18.c: 573: }
  3589  001B2E  D002               	goto	l436
  3590  001B30                     l435:
  3591                           
  3592                           ;SlaveComm_PIC18.c: 574: else
  3593                           ;SlaveComm_PIC18.c: 575: {
  3594                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3595  001B30  0E00               	movlw	0
  3596  001B32  6E15               	movwf	SPI_receive_data@recvGood,c
  3597  001B34                     l436:
  3598                           
  3599                           ;SlaveComm_PIC18.c: 577: }
  3600                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3601  001B34  5015               	movf	SPI_receive_data@recvGood,w,c
  3602  001B36  0012               	return	
  3603  001B38                     __end_of_SPI_receive_data:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           intcon2	equ	0xFF1
  3613                           intcon3	equ	0xFF0
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           postinc1	equ	0xFE6
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           postinc2	equ	0xFDE
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _process_data *****************
  3627 ;; Defined at:
  3628 ;;		line 239 in file "SlaveComm_PIC18.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  receive_buff    2   18[BANK0 ] PTR struct buffer
  3631 ;;		 -> communications@receive_buffer(42), 
  3632 ;;  send_buffer     2   20[BANK0 ] PTR struct buffer
  3633 ;;		 -> communications@send_buffer(42), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  3636 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      unsigned char 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3646 ;;      Params:         0       4       0       0       0       0       0
  3647 ;;      Locals:         0       0      51       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0
  3649 ;;      Totals:         0       4      51       0       0       0       0
  3650 ;;Total ram usage:       55 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    6
  3653 ;; This function calls:
  3654 ;;		_process_data_parameterize
  3655 ;;		_process_data_parameters
  3656 ;; This function is called by:
  3657 ;;		_communications
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text18
  3662  001A4A                     __ptext18:
  3663                           	opt stack 0
  3664  001A4A                     _process_data:
  3665                           	opt stack 23
  3666                           
  3667                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3668                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3669                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3670                           
  3671                           ;incstack = 0
  3672  001A4A  0E00               	movlw	low process_data@parameters
  3673  001A4C  6E19               	movwf	process_data_parameterize@parameters,c
  3674  001A4E  0E01               	movlw	high process_data@parameters
  3675  001A50  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3676  001A52  C0B9  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3677  001A56  C0BA  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3678  001A5A  EC97  F006         	call	_process_data_parameterize	;wreg free
  3679                           
  3680                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3681  001A5E  0E00               	movlw	low process_data@parameters
  3682  001A60  0100               	movlb	0	; () banked
  3683  001A62  6FB5               	movwf	process_data_parameters@parameters& (0+255),b
  3684  001A64  0E01               	movlw	high process_data@parameters
  3685  001A66  0100               	movlb	0	; () banked
  3686  001A68  6FB6               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3687  001A6A  C0BB  F0B7         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3688  001A6E  C0BC  F0B8         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3689  001A72  EC2C  F005         	call	_process_data_parameters	;wreg free
  3690  001A76  0101               	movlb	1	; () banked
  3691  001A78  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  3692                           
  3693                           ; BSR set to: 1
  3694                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3695  001A7A  0101               	movlb	1	; () banked
  3696  001A7C  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3697  001A7E  0012               	return	
  3698  001A80                     __end_of_process_data:
  3699                           	opt stack 0
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           intcon2	equ	0xFF1
  3708                           intcon3	equ	0xFF0
  3709                           postinc0	equ	0xFEE
  3710                           wreg	equ	0xFE8
  3711                           postinc1	equ	0xFE6
  3712                           postdec1	equ	0xFE5
  3713                           fsr1h	equ	0xFE2
  3714                           fsr1l	equ	0xFE1
  3715                           indf2	equ	0xFDF
  3716                           postinc2	equ	0xFDE
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _process_data_parameters *****************
  3722 ;; Defined at:
  3723 ;;		line 315 in file "SlaveComm_PIC18.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  parameters      2   14[BANK0 ] PTR unsigned char [10]
  3726 ;;		 -> process_data@parameters(50), 
  3727 ;;  send_buffer     2   16[BANK0 ] PTR struct buffer
  3728 ;;		 -> communications@send_buffer(42), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  end_of_trans    1   56[COMRAM] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      unsigned char 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0       4       0       0       0       0       0
  3741 ;;      Locals:         1       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         1       4       0       0       0       0       0
  3744 ;;Total ram usage:        5 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    5
  3747 ;; This function calls:
  3748 ;;		_atol
  3749 ;;		_com_command_setEnergyUsed
  3750 ;;		_command_builder3
  3751 ;;		_send_end_of_transmission
  3752 ;;		_strmatch
  3753 ;; This function is called by:
  3754 ;;		_process_data
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text19
  3759  000A58                     __ptext19:
  3760                           	opt stack 0
  3761  000A58                     _process_data_parameters:
  3762                           	opt stack 23
  3763                           
  3764                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3765                           
  3766                           ; BSR set to: 1
  3767                           ;incstack = 0
  3768  000A58  0E00               	movlw	0
  3769  000A5A  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3770                           
  3771                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3772  000A5C  C0B5  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3773  000A60  C0B6  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3774  000A64  0E4F               	movlw	low STR_1
  3775  000A66  6E20               	movwf	strmatch@b,c
  3776  000A68  0E06               	movlw	high STR_1
  3777  000A6A  6E21               	movwf	strmatch@b+1,c
  3778  000A6C  EC59  F00D         	call	_strmatch	;wreg free
  3779  000A70  06E8               	decf	wreg,f,c
  3780  000A72  A4D8               	btfss	status,2,c
  3781  000A74  D003               	goto	l357
  3782                           
  3783                           ;SlaveComm_PIC18.c: 321: {
  3784                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3785  000A76  0E01               	movlw	1
  3786  000A78  6E39               	movwf	process_data_parameters@end_of_transmission_received,c
  3787                           
  3788                           ;SlaveComm_PIC18.c: 332: }
  3789  000A7A  D157               	goto	l383
  3790  000A7C                     l357:
  3791                           
  3792                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3793  000A7C  C0B5  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3794  000A80  C0B6  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3795  000A84  0E57               	movlw	low STR_2
  3796  000A86  6E20               	movwf	strmatch@b,c
  3797  000A88  0E06               	movlw	high STR_2
  3798  000A8A  6E21               	movwf	strmatch@b+1,c
  3799  000A8C  EC59  F00D         	call	_strmatch	;wreg free
  3800  000A90  06E8               	decf	wreg,f,c
  3801  000A92  A4D8               	btfss	status,2,c
  3802  000A94  D03B               	goto	l359
  3803                           
  3804                           ;SlaveComm_PIC18.c: 334: {
  3805                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3806  000A96  0E0A               	movlw	10
  3807  000A98  0100               	movlb	0	; () banked
  3808  000A9A  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3809  000A9C  6E1E               	movwf	strmatch@a,c
  3810  000A9E  0E00               	movlw	0
  3811  000AA0  0100               	movlb	0	; () banked
  3812  000AA2  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3813  000AA4  6E1F               	movwf	strmatch@a+1,c
  3814  000AA6  0E01               	movlw	low STR_3
  3815  000AA8  6E20               	movwf	strmatch@b,c
  3816  000AAA  0E06               	movlw	high STR_3
  3817  000AAC  6E21               	movwf	strmatch@b+1,c
  3818  000AAE  EC59  F00D         	call	_strmatch	;wreg free
  3819  000AB2  06E8               	decf	wreg,f,c
  3820  000AB4  B4D8               	btfsc	status,2,c
  3821  000AB6  D139               	goto	l383
  3822                           
  3823                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3824                           
  3825                           ;SlaveComm_PIC18.c: 336: {
  3826                           ;SlaveComm_PIC18.c: 338: }
  3827  000AB8  0E0A               	movlw	10
  3828  000ABA  0100               	movlb	0	; () banked
  3829  000ABC  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3830  000ABE  6E1E               	movwf	strmatch@a,c
  3831  000AC0  0E00               	movlw	0
  3832  000AC2  0100               	movlb	0	; () banked
  3833  000AC4  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3834  000AC6  6E1F               	movwf	strmatch@a+1,c
  3835  000AC8  0E17               	movlw	low STR_4
  3836  000ACA  6E20               	movwf	strmatch@b,c
  3837  000ACC  0E06               	movlw	high STR_4
  3838  000ACE  6E21               	movwf	strmatch@b+1,c
  3839  000AD0  EC59  F00D         	call	_strmatch	;wreg free
  3840  000AD4  06E8               	decf	wreg,f,c
  3841  000AD6  A4D8               	btfss	status,2,c
  3842  000AD8  D128               	goto	l383
  3843                           
  3844                           ;SlaveComm_PIC18.c: 340: {
  3845                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3846  000ADA  0E14               	movlw	20
  3847  000ADC  0100               	movlb	0	; () banked
  3848  000ADE  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3849  000AE0  6E1F               	movwf	atol@s,c
  3850  000AE2  0E00               	movlw	0
  3851  000AE4  0100               	movlb	0	; () banked
  3852  000AE6  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3853  000AE8  6E20               	movwf	atol@s+1,c
  3854  000AEA  EC68  F008         	call	_atol	;wreg free
  3855  000AEE  C01F  F068         	movff	?_atol,_meterEnergyUsed
  3856  000AF2  C020  F069         	movff	?_atol+1,_meterEnergyUsed+1
  3857  000AF6  C021  F06A         	movff	?_atol+2,_meterEnergyUsed+2
  3858  000AFA  C022  F06B         	movff	?_atol+3,_meterEnergyUsed+3
  3859                           
  3860                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  3861  000AFE  C0B7  F0A7         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3862  000B02  C0B8  F0A8         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3863  000B06  EC00  F00D         	call	_com_command_setEnergyUsed	;wreg free
  3864                           
  3865                           ;SlaveComm_PIC18.c: 347: }
  3866                           ;SlaveComm_PIC18.c: 352: }
  3867  000B0A  D10F               	goto	l383
  3868  000B0C                     l359:
  3869                           
  3870                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  3871  000B0C  C0B5  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3872  000B10  C0B6  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3873  000B14  0E34               	movlw	low STR_5
  3874  000B16  6E20               	movwf	strmatch@b,c
  3875  000B18  0E06               	movlw	high STR_5
  3876  000B1A  6E21               	movwf	strmatch@b+1,c
  3877  000B1C  EC59  F00D         	call	_strmatch	;wreg free
  3878  000B20  06E8               	decf	wreg,f,c
  3879  000B22  B4D8               	btfsc	status,2,c
  3880  000B24  D102               	goto	l383
  3881                           
  3882                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  3883                           
  3884                           ;SlaveComm_PIC18.c: 354: {
  3885                           ;SlaveComm_PIC18.c: 356: }
  3886  000B26  C0B5  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3887  000B2A  C0B6  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3888  000B2E  0E2F               	movlw	low STR_6
  3889  000B30  6E20               	movwf	strmatch@b,c
  3890  000B32  0E06               	movlw	high STR_6
  3891  000B34  6E21               	movwf	strmatch@b+1,c
  3892  000B36  EC59  F00D         	call	_strmatch	;wreg free
  3893  000B3A  06E8               	decf	wreg,f,c
  3894  000B3C  A4D8               	btfss	status,2,c
  3895  000B3E  D059               	goto	l366
  3896                           
  3897                           ;SlaveComm_PIC18.c: 358: {
  3898                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  3899  000B40  0E0A               	movlw	10
  3900  000B42  0100               	movlb	0	; () banked
  3901  000B44  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3902  000B46  6E1E               	movwf	strmatch@a,c
  3903  000B48  0E00               	movlw	0
  3904  000B4A  0100               	movlb	0	; () banked
  3905  000B4C  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3906  000B4E  6E1F               	movwf	strmatch@a+1,c
  3907  000B50  0E2A               	movlw	low STR_7
  3908  000B52  6E20               	movwf	strmatch@b,c
  3909  000B54  0E06               	movlw	high STR_7
  3910  000B56  6E21               	movwf	strmatch@b+1,c
  3911  000B58  EC59  F00D         	call	_strmatch	;wreg free
  3912  000B5C  06E8               	decf	wreg,f,c
  3913  000B5E  A4D8               	btfss	status,2,c
  3914  000B60  D0E4               	goto	l383
  3915                           
  3916                           ;SlaveComm_PIC18.c: 360: {
  3917                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  3918  000B62  0E14               	movlw	20
  3919  000B64  0100               	movlb	0	; () banked
  3920  000B66  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3921  000B68  6E1E               	movwf	strmatch@a,c
  3922  000B6A  0E00               	movlw	0
  3923  000B6C  0100               	movlb	0	; () banked
  3924  000B6E  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3925  000B70  6E1F               	movwf	strmatch@a+1,c
  3926  000B72  0E5B               	movlw	low STR_8
  3927  000B74  6E20               	movwf	strmatch@b,c
  3928  000B76  0E06               	movlw	high STR_8
  3929  000B78  6E21               	movwf	strmatch@b+1,c
  3930  000B7A  EC59  F00D         	call	_strmatch	;wreg free
  3931  000B7E  06E8               	decf	wreg,f,c
  3932  000B80  A4D8               	btfss	status,2,c
  3933  000B82  D013               	goto	l368
  3934                           
  3935                           ;SlaveComm_PIC18.c: 362: {
  3936                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3937  000B84  C0B7  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3938  000B88  C0B8  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3939  000B8C  0E57               	movlw	low STR_2
  3940  000B8E  6E21               	movwf	command_builder3@data1,c
  3941  000B90  0E06               	movlw	high STR_2
  3942  000B92  6E22               	movwf	command_builder3@data1+1,c
  3943  000B94  0E2A               	movlw	low STR_7
  3944  000B96  6E23               	movwf	command_builder3@data2,c
  3945  000B98  0E06               	movlw	high STR_7
  3946  000B9A  6E24               	movwf	command_builder3@data2+1,c
  3947  000B9C  0E53               	movlw	low STR_11
  3948  000B9E  6E25               	movwf	command_builder3@data3,c
  3949  000BA0  0E06               	movlw	high STR_11
  3950  000BA2  6E26               	movwf	command_builder3@data3+1,c
  3951  000BA4  EC60  F00A         	call	_command_builder3	;wreg free
  3952                           
  3953                           ;SlaveComm_PIC18.c: 364: }
  3954  000BA8  D0C0               	goto	l383
  3955  000BAA                     l368:
  3956                           
  3957                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  3958  000BAA  0E14               	movlw	20
  3959  000BAC  0100               	movlb	0	; () banked
  3960  000BAE  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  3961  000BB0  6E1E               	movwf	strmatch@a,c
  3962  000BB2  0E00               	movlw	0
  3963  000BB4  0100               	movlb	0	; () banked
  3964  000BB6  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  3965  000BB8  6E1F               	movwf	strmatch@a+1,c
  3966  000BBA  0E53               	movlw	low STR_11
  3967  000BBC  6E20               	movwf	strmatch@b,c
  3968  000BBE  0E06               	movlw	high STR_11
  3969  000BC0  6E21               	movwf	strmatch@b+1,c
  3970  000BC2  EC59  F00D         	call	_strmatch	;wreg free
  3971  000BC6  06E8               	decf	wreg,f,c
  3972  000BC8  A4D8               	btfss	status,2,c
  3973  000BCA  D0AF               	goto	l383
  3974                           
  3975                           ;SlaveComm_PIC18.c: 366: {
  3976                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  3977  000BCC  C0B7  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3978  000BD0  C0B8  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3979  000BD4  0E57               	movlw	low STR_2
  3980  000BD6  6E21               	movwf	command_builder3@data1,c
  3981  000BD8  0E06               	movlw	high STR_2
  3982  000BDA  6E22               	movwf	command_builder3@data1+1,c
  3983  000BDC  0E2A               	movlw	low STR_7
  3984  000BDE  6E23               	movwf	command_builder3@data2,c
  3985  000BE0  0E06               	movlw	high STR_7
  3986  000BE2  6E24               	movwf	command_builder3@data2+1,c
  3987  000BE4  0E5B               	movlw	low STR_8
  3988  000BE6  6E25               	movwf	command_builder3@data3,c
  3989  000BE8  0E06               	movlw	high STR_8
  3990  000BEA  6E26               	movwf	command_builder3@data3+1,c
  3991  000BEC  EC60  F00A         	call	_command_builder3	;wreg free
  3992                           
  3993                           ;SlaveComm_PIC18.c: 368: }
  3994                           ;SlaveComm_PIC18.c: 369: }
  3995                           ;SlaveComm_PIC18.c: 370: }
  3996  000BF0  D09C               	goto	l383
  3997  000BF2                     l366:
  3998                           
  3999                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  4000  000BF2  C0B5  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4001  000BF6  C0B6  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4002  000BFA  0E39               	movlw	low STR_16
  4003  000BFC  6E20               	movwf	strmatch@b,c
  4004  000BFE  0E06               	movlw	high STR_16
  4005  000C00  6E21               	movwf	strmatch@b+1,c
  4006  000C02  EC59  F00D         	call	_strmatch	;wreg free
  4007  000C06  06E8               	decf	wreg,f,c
  4008  000C08  A4D8               	btfss	status,2,c
  4009  000C0A  D08F               	goto	l383
  4010                           
  4011                           ;SlaveComm_PIC18.c: 372: {
  4012                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  4013  000C0C  0E0A               	movlw	10
  4014  000C0E  0100               	movlb	0	; () banked
  4015  000C10  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4016  000C12  6E1E               	movwf	strmatch@a,c
  4017  000C14  0E00               	movlw	0
  4018  000C16  0100               	movlb	0	; () banked
  4019  000C18  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4020  000C1A  6E1F               	movwf	strmatch@a+1,c
  4021  000C1C  0E2A               	movlw	low STR_7
  4022  000C1E  6E20               	movwf	strmatch@b,c
  4023  000C20  0E06               	movlw	high STR_7
  4024  000C22  6E21               	movwf	strmatch@b+1,c
  4025  000C24  EC59  F00D         	call	_strmatch	;wreg free
  4026  000C28  06E8               	decf	wreg,f,c
  4027  000C2A  A4D8               	btfss	status,2,c
  4028  000C2C  D007               	goto	l373
  4029                           
  4030                           ;SlaveComm_PIC18.c: 374: {
  4031                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  4032  000C2E  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4033  000C32  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4034  000C36  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4035                           
  4036                           ;SlaveComm_PIC18.c: 376: }
  4037  000C3A  D077               	goto	l383
  4038  000C3C                     l373:
  4039                           
  4040                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  4041  000C3C  0E0A               	movlw	10
  4042  000C3E  0100               	movlb	0	; () banked
  4043  000C40  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4044  000C42  6E1E               	movwf	strmatch@a,c
  4045  000C44  0E00               	movlw	0
  4046  000C46  0100               	movlb	0	; () banked
  4047  000C48  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4048  000C4A  6E1F               	movwf	strmatch@a+1,c
  4049  000C4C  0E24               	movlw	low STR_18
  4050  000C4E  6E20               	movwf	strmatch@b,c
  4051  000C50  0E06               	movlw	high STR_18
  4052  000C52  6E21               	movwf	strmatch@b+1,c
  4053  000C54  EC59  F00D         	call	_strmatch	;wreg free
  4054  000C58  06E8               	decf	wreg,f,c
  4055  000C5A  A4D8               	btfss	status,2,c
  4056  000C5C  D007               	goto	l375
  4057                           
  4058                           ;SlaveComm_PIC18.c: 378: {
  4059                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  4060  000C5E  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4061  000C62  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4062  000C66  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4063                           
  4064                           ;SlaveComm_PIC18.c: 380: }
  4065  000C6A  D05F               	goto	l383
  4066  000C6C                     l375:
  4067                           
  4068                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  4069  000C6C  0E0A               	movlw	10
  4070  000C6E  0100               	movlb	0	; () banked
  4071  000C70  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4072  000C72  6E1E               	movwf	strmatch@a,c
  4073  000C74  0E00               	movlw	0
  4074  000C76  0100               	movlb	0	; () banked
  4075  000C78  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4076  000C7A  6E1F               	movwf	strmatch@a+1,c
  4077  000C7C  0E17               	movlw	low STR_4
  4078  000C7E  6E20               	movwf	strmatch@b,c
  4079  000C80  0E06               	movlw	high STR_4
  4080  000C82  6E21               	movwf	strmatch@b+1,c
  4081  000C84  EC59  F00D         	call	_strmatch	;wreg free
  4082  000C88  06E8               	decf	wreg,f,c
  4083  000C8A  A4D8               	btfss	status,2,c
  4084  000C8C  D007               	goto	l377
  4085                           
  4086                           ;SlaveComm_PIC18.c: 382: {
  4087                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  4088  000C8E  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4089  000C92  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4090  000C96  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4091                           
  4092                           ;SlaveComm_PIC18.c: 384: }
  4093  000C9A  D047               	goto	l383
  4094  000C9C                     l377:
  4095                           
  4096                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  4097  000C9C  0E0A               	movlw	10
  4098  000C9E  0100               	movlb	0	; () banked
  4099  000CA0  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4100  000CA2  6E1E               	movwf	strmatch@a,c
  4101  000CA4  0E00               	movlw	0
  4102  000CA6  0100               	movlb	0	; () banked
  4103  000CA8  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4104  000CAA  6E1F               	movwf	strmatch@a+1,c
  4105  000CAC  0E1E               	movlw	low STR_20
  4106  000CAE  6E20               	movwf	strmatch@b,c
  4107  000CB0  0E06               	movlw	high STR_20
  4108  000CB2  6E21               	movwf	strmatch@b+1,c
  4109  000CB4  EC59  F00D         	call	_strmatch	;wreg free
  4110  000CB8  06E8               	decf	wreg,f,c
  4111  000CBA  A4D8               	btfss	status,2,c
  4112  000CBC  D007               	goto	l379
  4113                           
  4114                           ;SlaveComm_PIC18.c: 386: {
  4115                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  4116  000CBE  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4117  000CC2  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4118  000CC6  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4119                           
  4120                           ;SlaveComm_PIC18.c: 388: }
  4121  000CCA  D02F               	goto	l383
  4122  000CCC                     l379:
  4123                           
  4124                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  4125  000CCC  0E0A               	movlw	10
  4126  000CCE  0100               	movlb	0	; () banked
  4127  000CD0  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4128  000CD2  6E1E               	movwf	strmatch@a,c
  4129  000CD4  0E00               	movlw	0
  4130  000CD6  0100               	movlb	0	; () banked
  4131  000CD8  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4132  000CDA  6E1F               	movwf	strmatch@a+1,c
  4133  000CDC  0E3E               	movlw	low STR_21
  4134  000CDE  6E20               	movwf	strmatch@b,c
  4135  000CE0  0E06               	movlw	high STR_21
  4136  000CE2  6E21               	movwf	strmatch@b+1,c
  4137  000CE4  EC59  F00D         	call	_strmatch	;wreg free
  4138  000CE8  06E8               	decf	wreg,f,c
  4139  000CEA  A4D8               	btfss	status,2,c
  4140  000CEC  D007               	goto	l381
  4141                           
  4142                           ;SlaveComm_PIC18.c: 390: {
  4143                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  4144  000CEE  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4145  000CF2  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4146  000CF6  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4147                           
  4148                           ;SlaveComm_PIC18.c: 392: }
  4149  000CFA  D017               	goto	l383
  4150  000CFC                     l381:
  4151                           
  4152                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  4153  000CFC  0E0A               	movlw	10
  4154  000CFE  0100               	movlb	0	; () banked
  4155  000D00  25B5               	addwf	process_data_parameters@parameters& (0+255),w,b
  4156  000D02  6E1E               	movwf	strmatch@a,c
  4157  000D04  0E00               	movlw	0
  4158  000D06  0100               	movlb	0	; () banked
  4159  000D08  21B6               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4160  000D0A  6E1F               	movwf	strmatch@a+1,c
  4161  000D0C  0E0D               	movlw	low STR_22
  4162  000D0E  6E20               	movwf	strmatch@b,c
  4163  000D10  0E06               	movlw	high STR_22
  4164  000D12  6E21               	movwf	strmatch@b+1,c
  4165  000D14  EC59  F00D         	call	_strmatch	;wreg free
  4166  000D18  06E8               	decf	wreg,f,c
  4167  000D1A  A4D8               	btfss	status,2,c
  4168  000D1C  D006               	goto	l383
  4169                           
  4170                           ;SlaveComm_PIC18.c: 394: {
  4171                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  4172  000D1E  C0B7  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4173  000D22  C0B8  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4174  000D26  EC0A  F00E         	call	_send_end_of_transmission	;wreg free
  4175  000D2A                     l383:
  4176                           
  4177                           ;SlaveComm_PIC18.c: 396: }
  4178                           ;SlaveComm_PIC18.c: 397: }
  4179                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  4180  000D2A  5039               	movf	process_data_parameters@end_of_transmission_received,w,c
  4181  000D2C  0012               	return	
  4182  000D2E                     __end_of_process_data_parameters:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           intcon2	equ	0xFF1
  4192                           intcon3	equ	0xFF0
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           postinc1	equ	0xFE6
  4196                           postdec1	equ	0xFE5
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           indf2	equ	0xFDF
  4200                           postinc2	equ	0xFDE
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _strmatch *****************
  4206 ;; Defined at:
  4207 ;;		line 513 in file "SlaveComm_PIC18.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  a               2   29[COMRAM] PTR unsigned char 
  4210 ;;		 -> process_data@parameters(50), 
  4211 ;;  b               2   31[COMRAM] PTR unsigned char 
  4212 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4213 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4214 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4215 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  result          2   33[COMRAM] int 
  4218 ;;  match           1   35[COMRAM] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      unsigned char 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4228 ;;      Params:         4       0       0       0       0       0       0
  4229 ;;      Locals:         3       0       0       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0
  4231 ;;      Totals:         7       0       0       0       0       0       0
  4232 ;;Total ram usage:        7 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    2
  4235 ;; This function calls:
  4236 ;;		_strcmp2
  4237 ;; This function is called by:
  4238 ;;		_process_data_parameters
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text20
  4243  001AB2                     __ptext20:
  4244                           	opt stack 0
  4245  001AB2                     _strmatch:
  4246                           	opt stack 25
  4247                           
  4248                           ;SlaveComm_PIC18.c: 515: int result;
  4249                           ;SlaveComm_PIC18.c: 516: bool match;
  4250                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  4251                           
  4252                           ;incstack = 0
  4253  001AB2  C01E  F013         	movff	strmatch@a,strcmp2@a
  4254  001AB6  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4255  001ABA  C020  F015         	movff	strmatch@b,strcmp2@b
  4256  001ABE  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4257  001AC2  EC57  F007         	call	_strcmp2	;wreg free
  4258  001AC6  C013  F022         	movff	?_strcmp2,strmatch@result
  4259  001ACA  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4260                           
  4261                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  4262  001ACE  5022               	movf	strmatch@result,w,c
  4263  001AD0  1023               	iorwf	strmatch@result+1,w,c
  4264  001AD2  A4D8               	btfss	status,2,c
  4265  001AD4  D002               	goto	u2370
  4266  001AD6  0E01               	movlw	1
  4267  001AD8  D001               	goto	u2380
  4268  001ADA                     u2370:
  4269  001ADA  0E00               	movlw	0
  4270  001ADC                     u2380:
  4271  001ADC  6E24               	movwf	strmatch@match,c
  4272                           
  4273                           ;SlaveComm_PIC18.c: 522: return match;
  4274  001ADE  5024               	movf	strmatch@match,w,c
  4275  001AE0  0012               	return	
  4276  001AE2                     __end_of_strmatch:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           prodh	equ	0xFF4
  4283                           prodl	equ	0xFF3
  4284                           intcon	equ	0xFF2
  4285                           intcon2	equ	0xFF1
  4286                           intcon3	equ	0xFF0
  4287                           postinc0	equ	0xFEE
  4288                           wreg	equ	0xFE8
  4289                           postinc1	equ	0xFE6
  4290                           postdec1	equ	0xFE5
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _strcmp2 *****************
  4300 ;; Defined at:
  4301 ;;		line 525 in file "SlaveComm_PIC18.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  a               2   18[COMRAM] PTR unsigned char 
  4304 ;;		 -> process_data@parameters(50), 
  4305 ;;  b               2   20[COMRAM] PTR unsigned char 
  4306 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4307 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4308 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4309 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  inx             2   27[COMRAM] int 
  4312 ;;  match           2   25[COMRAM] int 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  2   18[COMRAM] int 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         4       0       0       0       0       0       0
  4323 ;;      Locals:         4       0       0       0       0       0       0
  4324 ;;      Temps:          3       0       0       0       0       0       0
  4325 ;;      Totals:        11       0       0       0       0       0       0
  4326 ;;Total ram usage:       11 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_strmatch
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text21
  4337  000EAE                     __ptext21:
  4338                           	opt stack 0
  4339  000EAE                     _strcmp2:
  4340                           	opt stack 25
  4341                           
  4342                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  4343                           
  4344                           ;incstack = 0
  4345  000EAE  0E00               	movlw	0
  4346  000EB0  6E1D               	movwf	strcmp2@inx+1,c
  4347  000EB2  0E00               	movlw	0
  4348  000EB4  6E1C               	movwf	strcmp2@inx,c
  4349                           
  4350                           ;SlaveComm_PIC18.c: 528: int match = 0;
  4351  000EB6  0E00               	movlw	0
  4352  000EB8  6E1B               	movwf	strcmp2@match+1,c
  4353  000EBA  0E00               	movlw	0
  4354  000EBC  6E1A               	movwf	strcmp2@match,c
  4355                           
  4356                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4357  000EBE  D035               	goto	l419
  4358  000EC0                     
  4359                           ;SlaveComm_PIC18.c: 531: {
  4360                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  4361  000EC0  501C               	movf	strcmp2@inx,w,c
  4362  000EC2  2413               	addwf	strcmp2@a,w,c
  4363  000EC4  6ED9               	movwf	fsr2l,c
  4364  000EC6  501D               	movf	strcmp2@inx+1,w,c
  4365  000EC8  2014               	addwfc	strcmp2@a+1,w,c
  4366  000ECA  6EDA               	movwf	fsr2h,c
  4367  000ECC  501C               	movf	strcmp2@inx,w,c
  4368  000ECE  2415               	addwf	strcmp2@b,w,c
  4369  000ED0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4370  000ED2  501D               	movf	strcmp2@inx+1,w,c
  4371  000ED4  2016               	addwfc	strcmp2@b+1,w,c
  4372  000ED6  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4373  000ED8  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4374  000EDC  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4375  000EE0                     	if	0	;tblptru may be non-zero
  4376  000EE0                     	endif
  4377  000EE0                     	if	0	;tblptru may be non-zero
  4378  000EE0                     	endif
  4379  000EE0  50DE               	movf	postinc2,w,c
  4380  000EE2  0009               	tblrd		*+
  4381  000EE4  5CF5               	subwf	tablat,w,c
  4382  000EE6  B0D8               	btfsc	status,0,c
  4383  000EE8  D005               	goto	l421
  4384                           
  4385                           ;SlaveComm_PIC18.c: 533: {
  4386                           ;SlaveComm_PIC18.c: 534: match = 1;
  4387  000EEA  0E00               	movlw	0
  4388  000EEC  6E1B               	movwf	strcmp2@match+1,c
  4389  000EEE  0E01               	movlw	1
  4390  000EF0  6E1A               	movwf	strcmp2@match,c
  4391                           
  4392                           ;SlaveComm_PIC18.c: 535: }
  4393  000EF2  D019               	goto	l423
  4394  000EF4                     l421:
  4395                           
  4396                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  4397  000EF4  501C               	movf	strcmp2@inx,w,c
  4398  000EF6  2413               	addwf	strcmp2@a,w,c
  4399  000EF8  6ED9               	movwf	fsr2l,c
  4400  000EFA  501D               	movf	strcmp2@inx+1,w,c
  4401  000EFC  2014               	addwfc	strcmp2@a+1,w,c
  4402  000EFE  6EDA               	movwf	fsr2h,c
  4403  000F00  50DF               	movf	indf2,w,c
  4404  000F02  6E17               	movwf	??_strcmp2& (0+255),c
  4405  000F04  501C               	movf	strcmp2@inx,w,c
  4406  000F06  2415               	addwf	strcmp2@b,w,c
  4407  000F08  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4408  000F0A  501D               	movf	strcmp2@inx+1,w,c
  4409  000F0C  2016               	addwfc	strcmp2@b+1,w,c
  4410  000F0E  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4411  000F10  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4412  000F14  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4413  000F18                     	if	0	;tblptru may be non-zero
  4414  000F18                     	endif
  4415  000F18                     	if	0	;tblptru may be non-zero
  4416  000F18                     	endif
  4417  000F18  0008               	tblrd		*
  4418  000F1A  50F5               	movf	tablat,w,c
  4419  000F1C  5C17               	subwf	??_strcmp2,w,c
  4420  000F1E  B0D8               	btfsc	status,0,c
  4421  000F20  D002               	goto	l423
  4422                           
  4423                           ;SlaveComm_PIC18.c: 537: {
  4424                           ;SlaveComm_PIC18.c: 538: match = -1;
  4425  000F22  681A               	setf	strcmp2@match,c
  4426  000F24  681B               	setf	strcmp2@match+1,c
  4427  000F26                     l423:
  4428                           
  4429                           ;SlaveComm_PIC18.c: 543: }
  4430                           ;SlaveComm_PIC18.c: 545: inx++;
  4431                           
  4432                           ;SlaveComm_PIC18.c: 541: {
  4433  000F26  4A1C               	infsnz	strcmp2@inx,f,c
  4434  000F28  2A1D               	incf	strcmp2@inx+1,f,c
  4435  000F2A                     l419:
  4436  000F2A  501C               	movf	strcmp2@inx,w,c
  4437  000F2C  2413               	addwf	strcmp2@a,w,c
  4438  000F2E  6ED9               	movwf	fsr2l,c
  4439  000F30  501D               	movf	strcmp2@inx+1,w,c
  4440  000F32  2014               	addwfc	strcmp2@a+1,w,c
  4441  000F34  6EDA               	movwf	fsr2h,c
  4442  000F36  50DF               	movf	indf2,w,c
  4443  000F38  B4D8               	btfsc	status,2,c
  4444  000F3A  D013               	goto	u2250
  4445  000F3C  501C               	movf	strcmp2@inx,w,c
  4446  000F3E  2415               	addwf	strcmp2@b,w,c
  4447  000F40  6E17               	movwf	??_strcmp2& (0+255),c
  4448  000F42  501D               	movf	strcmp2@inx+1,w,c
  4449  000F44  2016               	addwfc	strcmp2@b+1,w,c
  4450  000F46  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4451  000F48  C017  FFF6         	movff	??_strcmp2,tblptrl
  4452  000F4C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4453  000F50                     	if	0	;tblptru may be non-zero
  4454  000F50                     	endif
  4455  000F50                     	if	0	;tblptru may be non-zero
  4456  000F50                     	endif
  4457  000F50  0008               	tblrd		*
  4458  000F52  50F5               	movf	tablat,w,c
  4459  000F54  0900               	iorlw	0
  4460  000F56  B4D8               	btfsc	status,2,c
  4461  000F58  D004               	goto	u2250
  4462  000F5A  501A               	movf	strcmp2@match,w,c
  4463  000F5C  101B               	iorwf	strcmp2@match+1,w,c
  4464  000F5E  B4D8               	btfsc	status,2,c
  4465  000F60  D7AF               	goto	l420
  4466  000F62                     u2250:
  4467                           
  4468                           ;SlaveComm_PIC18.c: 546: }
  4469                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4470  000F62  501C               	movf	strcmp2@inx,w,c
  4471  000F64  2413               	addwf	strcmp2@a,w,c
  4472  000F66  6ED9               	movwf	fsr2l,c
  4473  000F68  501D               	movf	strcmp2@inx+1,w,c
  4474  000F6A  2014               	addwfc	strcmp2@a+1,w,c
  4475  000F6C  6EDA               	movwf	fsr2h,c
  4476  000F6E  50DF               	movf	indf2,w,c
  4477  000F70  A4D8               	btfss	status,2,c
  4478  000F72  D012               	goto	l429
  4479  000F74  501C               	movf	strcmp2@inx,w,c
  4480  000F76  2415               	addwf	strcmp2@b,w,c
  4481  000F78  6E17               	movwf	??_strcmp2& (0+255),c
  4482  000F7A  501D               	movf	strcmp2@inx+1,w,c
  4483  000F7C  2016               	addwfc	strcmp2@b+1,w,c
  4484  000F7E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4485  000F80  C017  FFF6         	movff	??_strcmp2,tblptrl
  4486  000F84  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4487  000F88                     	if	0	;tblptru may be non-zero
  4488  000F88                     	endif
  4489  000F88                     	if	0	;tblptru may be non-zero
  4490  000F88                     	endif
  4491  000F88  0008               	tblrd		*
  4492  000F8A  50F5               	movf	tablat,w,c
  4493  000F8C  0900               	iorlw	0
  4494  000F8E  B4D8               	btfsc	status,2,c
  4495  000F90  D003               	goto	l429
  4496                           
  4497                           ;SlaveComm_PIC18.c: 550: {
  4498                           ;SlaveComm_PIC18.c: 551: match = -1;
  4499  000F92  681A               	setf	strcmp2@match,c
  4500  000F94  681B               	setf	strcmp2@match+1,c
  4501                           
  4502                           ;SlaveComm_PIC18.c: 552: }
  4503  000F96  D01C               	goto	l431
  4504  000F98                     l429:
  4505                           
  4506                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4507  000F98  501C               	movf	strcmp2@inx,w,c
  4508  000F9A  2413               	addwf	strcmp2@a,w,c
  4509  000F9C  6ED9               	movwf	fsr2l,c
  4510  000F9E  501D               	movf	strcmp2@inx+1,w,c
  4511  000FA0  2014               	addwfc	strcmp2@a+1,w,c
  4512  000FA2  6EDA               	movwf	fsr2h,c
  4513  000FA4  50DF               	movf	indf2,w,c
  4514  000FA6  B4D8               	btfsc	status,2,c
  4515  000FA8  D013               	goto	l431
  4516  000FAA  501C               	movf	strcmp2@inx,w,c
  4517  000FAC  2415               	addwf	strcmp2@b,w,c
  4518  000FAE  6E17               	movwf	??_strcmp2& (0+255),c
  4519  000FB0  501D               	movf	strcmp2@inx+1,w,c
  4520  000FB2  2016               	addwfc	strcmp2@b+1,w,c
  4521  000FB4  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4522  000FB6  C017  FFF6         	movff	??_strcmp2,tblptrl
  4523  000FBA  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4524  000FBE                     	if	0	;tblptru may be non-zero
  4525  000FBE                     	endif
  4526  000FBE                     	if	0	;tblptru may be non-zero
  4527  000FBE                     	endif
  4528  000FBE  0008               	tblrd		*
  4529  000FC0  50F5               	movf	tablat,w,c
  4530  000FC2  0900               	iorlw	0
  4531  000FC4  A4D8               	btfss	status,2,c
  4532  000FC6  D004               	goto	l431
  4533                           
  4534                           ;SlaveComm_PIC18.c: 554: {
  4535                           ;SlaveComm_PIC18.c: 555: match = 1;
  4536  000FC8  0E00               	movlw	0
  4537  000FCA  6E1B               	movwf	strcmp2@match+1,c
  4538  000FCC  0E01               	movlw	1
  4539  000FCE  6E1A               	movwf	strcmp2@match,c
  4540  000FD0                     l431:
  4541                           
  4542                           ;SlaveComm_PIC18.c: 556: }
  4543                           ;SlaveComm_PIC18.c: 558: return match;
  4544  000FD0  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4545  000FD4  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4546  000FD8  0012               	return	
  4547  000FDA                     __end_of_strcmp2:
  4548                           	opt stack 0
  4549                           tblptru	equ	0xFF8
  4550                           tblptrh	equ	0xFF7
  4551                           tblptrl	equ	0xFF6
  4552                           tablat	equ	0xFF5
  4553                           prodh	equ	0xFF4
  4554                           prodl	equ	0xFF3
  4555                           intcon	equ	0xFF2
  4556                           intcon2	equ	0xFF1
  4557                           intcon3	equ	0xFF0
  4558                           postinc0	equ	0xFEE
  4559                           wreg	equ	0xFE8
  4560                           postinc1	equ	0xFE6
  4561                           postdec1	equ	0xFE5
  4562                           fsr1h	equ	0xFE2
  4563                           fsr1l	equ	0xFE1
  4564                           indf2	equ	0xFDF
  4565                           postinc2	equ	0xFDE
  4566                           fsr2h	equ	0xFDA
  4567                           fsr2l	equ	0xFD9
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function _send_end_of_transmission *****************
  4571 ;; Defined at:
  4572 ;;		line 604 in file "SlaveComm_PIC18.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4575 ;;		 -> communications@send_buffer(42), 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4587 ;;      Params:         2       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0
  4590 ;;      Totals:         2       0       0       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    4
  4594 ;; This function calls:
  4595 ;;		_command_builder1
  4596 ;; This function is called by:
  4597 ;;		_process_data_parameters
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text22
  4602  001C14                     __ptext22:
  4603                           	opt stack 0
  4604  001C14                     _send_end_of_transmission:
  4605                           	opt stack 23
  4606                           
  4607                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4608                           
  4609                           ;incstack = 0
  4610  001C14  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4611  001C18  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4612  001C1C  0E4F               	movlw	low STR_1
  4613  001C1E  6E21               	movwf	command_builder1@data1,c
  4614  001C20  0E06               	movlw	high STR_1
  4615  001C22  6E22               	movwf	command_builder1@data1+1,c
  4616  001C24  ECE2  F00B         	call	_command_builder1	;wreg free
  4617  001C28  0012               	return	
  4618  001C2A                     __end_of_send_end_of_transmission:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           intcon2	equ	0xFF1
  4628                           intcon3	equ	0xFF0
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           postinc1	equ	0xFE6
  4632                           postdec1	equ	0xFE5
  4633                           fsr1h	equ	0xFE2
  4634                           fsr1l	equ	0xFE1
  4635                           indf2	equ	0xFDF
  4636                           postinc2	equ	0xFDE
  4637                           fsr2h	equ	0xFDA
  4638                           fsr2l	equ	0xFD9
  4639                           status	equ	0xFD8
  4640                           
  4641 ;; *************** function _command_builder1 *****************
  4642 ;; Defined at:
  4643 ;;		line 406 in file "SlaveComm_PIC18.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4646 ;;		 -> communications@send_buffer(42), 
  4647 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4648 ;;		 -> STR_23(4), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4660 ;;      Params:         4       0       0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0
  4663 ;;      Totals:         4       0       0       0       0       0       0
  4664 ;;Total ram usage:        4 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    3
  4667 ;; This function calls:
  4668 ;;		_command_builder_add_char
  4669 ;;		_command_builder_add_string
  4670 ;; This function is called by:
  4671 ;;		_send_end_of_transmission
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text23
  4676  0017C4                     __ptext23:
  4677                           	opt stack 0
  4678  0017C4                     _command_builder1:
  4679                           	opt stack 23
  4680                           
  4681                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4682                           
  4683                           ;incstack = 0
  4684  0017C4  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4685  0017C8  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4686  0017CC  0E23               	movlw	35
  4687  0017CE  6E15               	movwf	command_builder_add_char@data,c
  4688  0017D0  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  4689                           
  4690                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4691  0017D4  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4692  0017D8  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4693  0017DC  0E23               	movlw	35
  4694  0017DE  6E15               	movwf	command_builder_add_char@data,c
  4695  0017E0  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  4696                           
  4697                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4698  0017E4  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4699  0017E8  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4700  0017EC  0E21               	movlw	33
  4701  0017EE  6E15               	movwf	command_builder_add_char@data,c
  4702  0017F0  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  4703                           
  4704                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4705  0017F4  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4706  0017F8  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4707  0017FC  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4708  001800  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4709  001804  EC38  F00B         	call	_command_builder_add_string	;wreg free
  4710                           
  4711                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4712  001808  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4713  00180C  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4714  001810  0E2A               	movlw	42
  4715  001812  6E15               	movwf	command_builder_add_char@data,c
  4716  001814  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  4717  001818  0012               	return	
  4718  00181A                     __end_of_command_builder1:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           intcon2	equ	0xFF1
  4728                           intcon3	equ	0xFF0
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           postinc1	equ	0xFE6
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function _com_command_setEnergyUsed *****************
  4742 ;; Defined at:
  4743 ;;		line 629 in file "SlaveComm_PIC18.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  send_buffer     2    0[BANK0 ] PTR struct buffer
  4746 ;;		 -> communications@send_buffer(42), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  temp           12    2[BANK0 ] unsigned char [12]
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4758 ;;      Params:         0       2       0       0       0       0       0
  4759 ;;      Locals:         0      12       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0
  4761 ;;      Totals:         0      14       0       0       0       0       0
  4762 ;;Total ram usage:       14 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    4
  4765 ;; This function calls:
  4766 ;;		_command_builder3
  4767 ;;		_ultoa
  4768 ;; This function is called by:
  4769 ;;		_resetCommunications
  4770 ;;		_process_data_parameters
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text24
  4775  001A00                     __ptext24:
  4776                           	opt stack 0
  4777  001A00                     _com_command_setEnergyUsed:
  4778                           	opt stack 24
  4779                           
  4780                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4781                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4782                           
  4783                           ;incstack = 0
  4784  001A00  0EA9               	movlw	low com_command_setEnergyUsed@temp
  4785  001A02  6E2C               	movwf	ultoa@buf,c
  4786  001A04  0E00               	movlw	high com_command_setEnergyUsed@temp
  4787  001A06  6E2D               	movwf	ultoa@buf+1,c
  4788  001A08  C068  F02E         	movff	_meterEnergyUsed,ultoa@val
  4789  001A0C  C069  F02F         	movff	_meterEnergyUsed+1,ultoa@val+1
  4790  001A10  C06A  F030         	movff	_meterEnergyUsed+2,ultoa@val+2
  4791  001A14  C06B  F031         	movff	_meterEnergyUsed+3,ultoa@val+3
  4792  001A18  0E00               	movlw	0
  4793  001A1A  6E33               	movwf	ultoa@base+1,c
  4794  001A1C  0E0A               	movlw	10
  4795  001A1E  6E32               	movwf	ultoa@base,c
  4796  001A20  ECED  F007         	call	_ultoa	;wreg free
  4797                           
  4798                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4799  001A24  C0A7  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4800  001A28  C0A8  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4801  001A2C  0E57               	movlw	low STR_2
  4802  001A2E  6E21               	movwf	command_builder3@data1,c
  4803  001A30  0E06               	movlw	high STR_2
  4804  001A32  6E22               	movwf	command_builder3@data1+1,c
  4805  001A34  0E17               	movlw	low STR_4
  4806  001A36  6E23               	movwf	command_builder3@data2,c
  4807  001A38  0E06               	movlw	high STR_4
  4808  001A3A  6E24               	movwf	command_builder3@data2+1,c
  4809  001A3C  0EA9               	movlw	low com_command_setEnergyUsed@temp
  4810  001A3E  6E25               	movwf	command_builder3@data3,c
  4811  001A40  0E00               	movlw	high com_command_setEnergyUsed@temp
  4812  001A42  6E26               	movwf	command_builder3@data3+1,c
  4813  001A44  EC60  F00A         	call	_command_builder3	;wreg free
  4814  001A48  0012               	return	
  4815  001A4A                     __end_of_com_command_setEnergyUsed:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           intcon2	equ	0xFF1
  4825                           intcon3	equ	0xFF0
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _ultoa *****************
  4839 ;; Defined at:
  4840 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ltoa.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  buf             2   43[COMRAM] PTR unsigned char 
  4843 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4844 ;;  val             4   45[COMRAM] unsigned long 
  4845 ;;  base            2   49[COMRAM] int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;  v               4   51[COMRAM] unsigned long 
  4848 ;;  c               1   55[COMRAM] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  2   43[COMRAM] PTR unsigned char 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4858 ;;      Params:         8       0       0       0       0       0       0
  4859 ;;      Locals:         5       0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0
  4861 ;;      Totals:        13       0       0       0       0       0       0
  4862 ;;Total ram usage:       13 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    2
  4865 ;; This function calls:
  4866 ;;		___lldiv
  4867 ;;		___llmod
  4868 ;; This function is called by:
  4869 ;;		_com_command_setPower
  4870 ;;		_com_command_setEnergyUsed
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text25
  4875  000FDA                     __ptext25:
  4876                           	opt stack 0
  4877  000FDA                     _ultoa:
  4878                           	opt stack 25
  4879                           
  4880                           ;incstack = 0
  4881  000FDA  C02E  F034         	movff	ultoa@val,ultoa@v
  4882  000FDE  C02F  F035         	movff	ultoa@val+1,ultoa@v+1
  4883  000FE2  C030  F036         	movff	ultoa@val+2,ultoa@v+2
  4884  000FE6  C031  F037         	movff	ultoa@val+3,ultoa@v+3
  4885  000FEA  C034  F01F         	movff	ultoa@v,___lldiv@dividend
  4886  000FEE  C035  F020         	movff	ultoa@v+1,___lldiv@dividend+1
  4887  000FF2  C036  F021         	movff	ultoa@v+2,___lldiv@dividend+2
  4888  000FF6  C037  F022         	movff	ultoa@v+3,___lldiv@dividend+3
  4889  000FFA  C032  F023         	movff	ultoa@base,___lldiv@divisor
  4890  000FFE  C033  F024         	movff	ultoa@base+1,___lldiv@divisor+1
  4891  001002  0E00               	movlw	0
  4892  001004  BE24               	btfsc	___lldiv@divisor+1,7,c
  4893  001006  0EFF               	movlw	-1
  4894  001008  6E25               	movwf	___lldiv@divisor+2,c
  4895  00100A  6E26               	movwf	___lldiv@divisor+3,c
  4896  00100C  ECF7  F00A         	call	___lldiv	;wreg free
  4897  001010  C01F  F034         	movff	?___lldiv,ultoa@v
  4898  001014  C020  F035         	movff	?___lldiv+1,ultoa@v+1
  4899  001018  C021  F036         	movff	?___lldiv+2,ultoa@v+2
  4900  00101C  C022  F037         	movff	?___lldiv+3,ultoa@v+3
  4901  001020  4A2C               	infsnz	ultoa@buf,f,c
  4902  001022  2A2D               	incf	ultoa@buf+1,f,c
  4903  001024  5034               	movf	ultoa@v,w,c
  4904  001026  1035               	iorwf	ultoa@v+1,w,c
  4905  001028  1036               	iorwf	ultoa@v+2,w,c
  4906  00102A  1037               	iorwf	ultoa@v+3,w,c
  4907  00102C  A4D8               	btfss	status,2,c
  4908  00102E  D7DD               	goto	l892
  4909  001030  C02C  FFD9         	movff	ultoa@buf,fsr2l
  4910  001034  C02D  FFDA         	movff	ultoa@buf+1,fsr2h
  4911  001038  0E00               	movlw	0
  4912  00103A  6EDF               	movwf	indf2,c
  4913  00103C  062C               	decf	ultoa@buf,f,c
  4914  00103E  A0D8               	btfss	status,0,c
  4915  001040  062D               	decf	ultoa@buf+1,f,c
  4916  001042  C02E  F013         	movff	ultoa@val,___llmod@dividend
  4917  001046  C02F  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4918  00104A  C030  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4919  00104E  C031  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4920  001052  C032  F017         	movff	ultoa@base,___llmod@divisor
  4921  001056  C033  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4922  00105A  0E00               	movlw	0
  4923  00105C  BE18               	btfsc	___llmod@divisor+1,7,c
  4924  00105E  0EFF               	movlw	-1
  4925  001060  6E19               	movwf	___llmod@divisor+2,c
  4926  001062  6E1A               	movwf	___llmod@divisor+3,c
  4927  001064  ECAF  F00B         	call	___llmod	;wreg free
  4928  001068  5013               	movf	?___llmod,w,c
  4929  00106A  6E38               	movwf	ultoa@c,c
  4930  00106C  C02E  F01F         	movff	ultoa@val,___lldiv@dividend
  4931  001070  C02F  F020         	movff	ultoa@val+1,___lldiv@dividend+1
  4932  001074  C030  F021         	movff	ultoa@val+2,___lldiv@dividend+2
  4933  001078  C031  F022         	movff	ultoa@val+3,___lldiv@dividend+3
  4934  00107C  C032  F023         	movff	ultoa@base,___lldiv@divisor
  4935  001080  C033  F024         	movff	ultoa@base+1,___lldiv@divisor+1
  4936  001084  0E00               	movlw	0
  4937  001086  BE24               	btfsc	___lldiv@divisor+1,7,c
  4938  001088  0EFF               	movlw	-1
  4939  00108A  6E25               	movwf	___lldiv@divisor+2,c
  4940  00108C  6E26               	movwf	___lldiv@divisor+3,c
  4941  00108E  ECF7  F00A         	call	___lldiv	;wreg free
  4942  001092  C01F  F02E         	movff	?___lldiv,ultoa@val
  4943  001096  C020  F02F         	movff	?___lldiv+1,ultoa@val+1
  4944  00109A  C021  F030         	movff	?___lldiv+2,ultoa@val+2
  4945  00109E  C022  F031         	movff	?___lldiv+3,ultoa@val+3
  4946  0010A2  0E09               	movlw	9
  4947  0010A4  6438               	cpfsgt	ultoa@c,c
  4948  0010A6  D002               	goto	l895
  4949  0010A8  0E07               	movlw	7
  4950  0010AA  2638               	addwf	ultoa@c,f,c
  4951  0010AC                     l895:
  4952  0010AC  0E30               	movlw	48
  4953  0010AE  2638               	addwf	ultoa@c,f,c
  4954  0010B0  C02C  FFD9         	movff	ultoa@buf,fsr2l
  4955  0010B4  C02D  FFDA         	movff	ultoa@buf+1,fsr2h
  4956  0010B8  C038  FFDF         	movff	ultoa@c,indf2
  4957  0010BC  062C               	decf	ultoa@buf,f,c
  4958  0010BE  A0D8               	btfss	status,0,c
  4959  0010C0  062D               	decf	ultoa@buf+1,f,c
  4960  0010C2  502E               	movf	ultoa@val,w,c
  4961  0010C4  102F               	iorwf	ultoa@val+1,w,c
  4962  0010C6  1030               	iorwf	ultoa@val+2,w,c
  4963  0010C8  1031               	iorwf	ultoa@val+3,w,c
  4964  0010CA  B4D8               	btfsc	status,2,c
  4965  0010CC  0012               	return	
  4966  0010CE  D7B9               	goto	l894
  4967  0010D0                     __end_of_ultoa:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           intcon2	equ	0xFF1
  4977                           intcon3	equ	0xFF0
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           postinc1	equ	0xFE6
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8
  4989                           
  4990 ;; *************** function ___llmod *****************
  4991 ;; Defined at:
  4992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  dividend        4   18[COMRAM] unsigned long 
  4995 ;;  divisor         4   22[COMRAM] unsigned long 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  counter         1   26[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  4   18[COMRAM] unsigned long 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5007 ;;      Params:         8       0       0       0       0       0       0
  5008 ;;      Locals:         1       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0
  5010 ;;      Totals:         9       0       0       0       0       0       0
  5011 ;;Total ram usage:        9 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_ultoa
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text26
  5022  00175E                     __ptext26:
  5023                           	opt stack 0
  5024  00175E                     ___llmod:
  5025                           	opt stack 25
  5026                           
  5027                           ;incstack = 0
  5028  00175E  5017               	movf	___llmod@divisor,w,c
  5029  001760  1018               	iorwf	___llmod@divisor+1,w,c
  5030  001762  1019               	iorwf	___llmod@divisor+2,w,c
  5031  001764  101A               	iorwf	___llmod@divisor+3,w,c
  5032  001766  B4D8               	btfsc	status,2,c
  5033  001768  D024               	goto	l854
  5034  00176A  0E01               	movlw	1
  5035  00176C  6E1B               	movwf	___llmod@counter,c
  5036  00176E  D006               	goto	l849
  5037  001770  90D8               	bcf	status,0,c
  5038  001772  3617               	rlcf	___llmod@divisor,f,c
  5039  001774  3618               	rlcf	___llmod@divisor+1,f,c
  5040  001776  3619               	rlcf	___llmod@divisor+2,f,c
  5041  001778  361A               	rlcf	___llmod@divisor+3,f,c
  5042  00177A  2A1B               	incf	___llmod@counter,f,c
  5043  00177C                     l849:
  5044  00177C  AE1A               	btfss	___llmod@divisor+3,7,c
  5045  00177E  D7F8               	goto	l850
  5046  001780                     u2190:
  5047  001780  5017               	movf	___llmod@divisor,w,c
  5048  001782  5C13               	subwf	___llmod@dividend,w,c
  5049  001784  5018               	movf	___llmod@divisor+1,w,c
  5050  001786  5814               	subwfb	___llmod@dividend+1,w,c
  5051  001788  5019               	movf	___llmod@divisor+2,w,c
  5052  00178A  5815               	subwfb	___llmod@dividend+2,w,c
  5053  00178C  501A               	movf	___llmod@divisor+3,w,c
  5054  00178E  5816               	subwfb	___llmod@dividend+3,w,c
  5055  001790  A0D8               	btfss	status,0,c
  5056  001792  D008               	goto	l853
  5057  001794  5017               	movf	___llmod@divisor,w,c
  5058  001796  5E13               	subwf	___llmod@dividend,f,c
  5059  001798  5018               	movf	___llmod@divisor+1,w,c
  5060  00179A  5A14               	subwfb	___llmod@dividend+1,f,c
  5061  00179C  5019               	movf	___llmod@divisor+2,w,c
  5062  00179E  5A15               	subwfb	___llmod@dividend+2,f,c
  5063  0017A0  501A               	movf	___llmod@divisor+3,w,c
  5064  0017A2  5A16               	subwfb	___llmod@dividend+3,f,c
  5065  0017A4                     l853:
  5066  0017A4  90D8               	bcf	status,0,c
  5067  0017A6  321A               	rrcf	___llmod@divisor+3,f,c
  5068  0017A8  3219               	rrcf	___llmod@divisor+2,f,c
  5069  0017AA  3218               	rrcf	___llmod@divisor+1,f,c
  5070  0017AC  3217               	rrcf	___llmod@divisor,f,c
  5071  0017AE  2E1B               	decfsz	___llmod@counter,f,c
  5072  0017B0  D7E7               	goto	u2190
  5073  0017B2                     l854:
  5074  0017B2  C013  F013         	movff	___llmod@dividend,?___llmod
  5075  0017B6  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  5076  0017BA  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  5077  0017BE  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  5078  0017C2  0012               	return		;funcret
  5079  0017C4                     __end_of___llmod:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           prodh	equ	0xFF4
  5086                           prodl	equ	0xFF3
  5087                           intcon	equ	0xFF2
  5088                           intcon2	equ	0xFF1
  5089                           intcon3	equ	0xFF0
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           postinc1	equ	0xFE6
  5093                           postdec1	equ	0xFE5
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function ___lldiv *****************
  5103 ;; Defined at:
  5104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  dividend        4   30[COMRAM] unsigned long 
  5107 ;;  divisor         4   34[COMRAM] unsigned long 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  quotient        4   38[COMRAM] unsigned long 
  5110 ;;  counter         1   42[COMRAM] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  4   30[COMRAM] unsigned long 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5120 ;;      Params:         8       0       0       0       0       0       0
  5121 ;;      Locals:         5       0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0       0
  5123 ;;      Totals:        13       0       0       0       0       0       0
  5124 ;;Total ram usage:       13 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_powerPulseCheck
  5131 ;;		_ultoa
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text27
  5136  0015EE                     __ptext27:
  5137                           	opt stack 0
  5138  0015EE                     ___lldiv:
  5139                           	opt stack 28
  5140                           
  5141                           ;incstack = 0
  5142  0015EE  0E00               	movlw	0
  5143  0015F0  6E27               	movwf	___lldiv@quotient,c
  5144  0015F2  0E00               	movlw	0
  5145  0015F4  6E28               	movwf	___lldiv@quotient+1,c
  5146  0015F6  0E00               	movlw	0
  5147  0015F8  6E29               	movwf	___lldiv@quotient+2,c
  5148  0015FA  0E00               	movlw	0
  5149  0015FC  6E2A               	movwf	___lldiv@quotient+3,c
  5150  0015FE  5023               	movf	___lldiv@divisor,w,c
  5151  001600  1024               	iorwf	___lldiv@divisor+1,w,c
  5152  001602  1025               	iorwf	___lldiv@divisor+2,w,c
  5153  001604  1026               	iorwf	___lldiv@divisor+3,w,c
  5154  001606  B4D8               	btfsc	status,2,c
  5155  001608  D02A               	goto	l844
  5156  00160A  0E01               	movlw	1
  5157  00160C  6E2B               	movwf	___lldiv@counter,c
  5158  00160E  D006               	goto	l839
  5159  001610  90D8               	bcf	status,0,c
  5160  001612  3623               	rlcf	___lldiv@divisor,f,c
  5161  001614  3624               	rlcf	___lldiv@divisor+1,f,c
  5162  001616  3625               	rlcf	___lldiv@divisor+2,f,c
  5163  001618  3626               	rlcf	___lldiv@divisor+3,f,c
  5164  00161A  2A2B               	incf	___lldiv@counter,f,c
  5165  00161C                     l839:
  5166  00161C  AE26               	btfss	___lldiv@divisor+3,7,c
  5167  00161E  D7F8               	goto	l840
  5168  001620                     u2160:
  5169  001620  90D8               	bcf	status,0,c
  5170  001622  3627               	rlcf	___lldiv@quotient,f,c
  5171  001624  3628               	rlcf	___lldiv@quotient+1,f,c
  5172  001626  3629               	rlcf	___lldiv@quotient+2,f,c
  5173  001628  362A               	rlcf	___lldiv@quotient+3,f,c
  5174  00162A  5023               	movf	___lldiv@divisor,w,c
  5175  00162C  5C1F               	subwf	___lldiv@dividend,w,c
  5176  00162E  5024               	movf	___lldiv@divisor+1,w,c
  5177  001630  5820               	subwfb	___lldiv@dividend+1,w,c
  5178  001632  5025               	movf	___lldiv@divisor+2,w,c
  5179  001634  5821               	subwfb	___lldiv@dividend+2,w,c
  5180  001636  5026               	movf	___lldiv@divisor+3,w,c
  5181  001638  5822               	subwfb	___lldiv@dividend+3,w,c
  5182  00163A  A0D8               	btfss	status,0,c
  5183  00163C  D009               	goto	l843
  5184  00163E  5023               	movf	___lldiv@divisor,w,c
  5185  001640  5E1F               	subwf	___lldiv@dividend,f,c
  5186  001642  5024               	movf	___lldiv@divisor+1,w,c
  5187  001644  5A20               	subwfb	___lldiv@dividend+1,f,c
  5188  001646  5025               	movf	___lldiv@divisor+2,w,c
  5189  001648  5A21               	subwfb	___lldiv@dividend+2,f,c
  5190  00164A  5026               	movf	___lldiv@divisor+3,w,c
  5191  00164C  5A22               	subwfb	___lldiv@dividend+3,f,c
  5192  00164E  8027               	bsf	___lldiv@quotient,0,c
  5193  001650                     l843:
  5194  001650  90D8               	bcf	status,0,c
  5195  001652  3226               	rrcf	___lldiv@divisor+3,f,c
  5196  001654  3225               	rrcf	___lldiv@divisor+2,f,c
  5197  001656  3224               	rrcf	___lldiv@divisor+1,f,c
  5198  001658  3223               	rrcf	___lldiv@divisor,f,c
  5199  00165A  2E2B               	decfsz	___lldiv@counter,f,c
  5200  00165C  D7E1               	goto	u2160
  5201  00165E                     l844:
  5202  00165E  C027  F01F         	movff	___lldiv@quotient,?___lldiv
  5203  001662  C028  F020         	movff	___lldiv@quotient+1,?___lldiv+1
  5204  001666  C029  F021         	movff	___lldiv@quotient+2,?___lldiv+2
  5205  00166A  C02A  F022         	movff	___lldiv@quotient+3,?___lldiv+3
  5206  00166E  0012               	return		;funcret
  5207  001670                     __end_of___lldiv:
  5208                           	opt stack 0
  5209                           tblptru	equ	0xFF8
  5210                           tblptrh	equ	0xFF7
  5211                           tblptrl	equ	0xFF6
  5212                           tablat	equ	0xFF5
  5213                           prodh	equ	0xFF4
  5214                           prodl	equ	0xFF3
  5215                           intcon	equ	0xFF2
  5216                           intcon2	equ	0xFF1
  5217                           intcon3	equ	0xFF0
  5218                           postinc0	equ	0xFEE
  5219                           wreg	equ	0xFE8
  5220                           postinc1	equ	0xFE6
  5221                           postdec1	equ	0xFE5
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           fsr2h	equ	0xFDA
  5227                           fsr2l	equ	0xFD9
  5228                           status	equ	0xFD8
  5229                           
  5230 ;; *************** function _command_builder3 *****************
  5231 ;; Defined at:
  5232 ;;		line 430 in file "SlaveComm_PIC18.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  5235 ;;		 -> communications@send_buffer(42), 
  5236 ;;  data1           2   32[COMRAM] PTR unsigned char 
  5237 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5238 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5239 ;;  data2           2   34[COMRAM] PTR unsigned char 
  5240 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5241 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5242 ;;  data3           2   36[COMRAM] PTR unsigned char 
  5243 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5244 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         8       0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0
  5259 ;;      Totals:         8       0       0       0       0       0       0
  5260 ;;Total ram usage:        8 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    3
  5263 ;; This function calls:
  5264 ;;		_command_builder_add_char
  5265 ;;		_command_builder_add_string
  5266 ;; This function is called by:
  5267 ;;		_process_data_parameters
  5268 ;;		_com_command_setPower
  5269 ;;		_com_command_setEnergyUsed
  5270 ;;		_com_command_setVersion
  5271 ;;		_com_command_setVolts
  5272 ;;		_com_command_setAmps
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text28
  5277  0014C0                     __ptext28:
  5278                           	opt stack 0
  5279  0014C0                     _command_builder3:
  5280                           	opt stack 24
  5281                           
  5282                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  5283                           
  5284                           ;incstack = 0
  5285  0014C0  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5286  0014C4  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5287  0014C8  0E23               	movlw	35
  5288  0014CA  6E15               	movwf	command_builder_add_char@data,c
  5289  0014CC  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5290                           
  5291                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  5292  0014D0  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5293  0014D4  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5294  0014D8  0E23               	movlw	35
  5295  0014DA  6E15               	movwf	command_builder_add_char@data,c
  5296  0014DC  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5297                           
  5298                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  5299  0014E0  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5300  0014E4  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5301  0014E8  0E21               	movlw	33
  5302  0014EA  6E15               	movwf	command_builder_add_char@data,c
  5303  0014EC  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5304                           
  5305                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  5306  0014F0  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5307  0014F4  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5308  0014F8  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5309  0014FC  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5310  001500  EC38  F00B         	call	_command_builder_add_string	;wreg free
  5311                           
  5312                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  5313  001504  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5314  001508  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5315  00150C  0E3B               	movlw	59
  5316  00150E  6E15               	movwf	command_builder_add_char@data,c
  5317  001510  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5318                           
  5319                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  5320  001514  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5321  001518  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5322  00151C  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5323  001520  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5324  001524  EC38  F00B         	call	_command_builder_add_string	;wreg free
  5325                           
  5326                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  5327  001528  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5328  00152C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5329  001530  0E3B               	movlw	59
  5330  001532  6E15               	movwf	command_builder_add_char@data,c
  5331  001534  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5332                           
  5333                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  5334  001538  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5335  00153C  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5336  001540  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5337  001544  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5338  001548  EC38  F00B         	call	_command_builder_add_string	;wreg free
  5339                           
  5340                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  5341  00154C  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5342  001550  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5343  001554  0E2A               	movlw	42
  5344  001556  6E15               	movwf	command_builder_add_char@data,c
  5345  001558  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5346  00155C  0012               	return	
  5347  00155E                     __end_of_command_builder3:
  5348                           	opt stack 0
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           intcon2	equ	0xFF1
  5357                           intcon3	equ	0xFF0
  5358                           postinc0	equ	0xFEE
  5359                           wreg	equ	0xFE8
  5360                           postinc1	equ	0xFE6
  5361                           postdec1	equ	0xFE5
  5362                           fsr1h	equ	0xFE2
  5363                           fsr1l	equ	0xFE1
  5364                           indf2	equ	0xFDF
  5365                           postinc2	equ	0xFDE
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function _command_builder_add_string *****************
  5371 ;; Defined at:
  5372 ;;		line 475 in file "SlaveComm_PIC18.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5375 ;;		 -> communications@send_buffer(42), 
  5376 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5377 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5378 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5379 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5380 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5381 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5382 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  5383 ;;		 -> STR_10(5), STR_9(4), 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  inx             2   28[COMRAM] int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5395 ;;      Params:         4       0       0       0       0       0       0
  5396 ;;      Locals:         2       0       0       0       0       0       0
  5397 ;;      Temps:          2       0       0       0       0       0       0
  5398 ;;      Totals:         8       0       0       0       0       0       0
  5399 ;;Total ram usage:        8 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    2
  5402 ;; This function calls:
  5403 ;;		_command_builder_add_char
  5404 ;; This function is called by:
  5405 ;;		_command_builder1
  5406 ;;		_command_builder3
  5407 ;;		_command_builder2
  5408 ;;		_command_builder4
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text29
  5413  001670                     __ptext29:
  5414                           	opt stack 0
  5415  001670                     _command_builder_add_string:
  5416                           	opt stack 24
  5417                           
  5418                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5419                           
  5420                           ;incstack = 0
  5421  001670  0E00               	movlw	0
  5422  001672  6E1E               	movwf	command_builder_add_string@inx+1,c
  5423  001674  0E00               	movlw	0
  5424  001676  6E1D               	movwf	command_builder_add_string@inx,c
  5425  001678  D01F               	goto	l403
  5426  00167A                     
  5427                           ;SlaveComm_PIC18.c: 478: {
  5428                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5429  00167A  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5430  00167E  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5431  001682  501D               	movf	command_builder_add_string@inx,w,c
  5432  001684  2419               	addwf	command_builder_add_string@data_string,w,c
  5433  001686  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5434  001688  501E               	movf	command_builder_add_string@inx+1,w,c
  5435  00168A  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5436  00168C  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5437  00168E  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5438  001692  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5439  001696  6AF8               	clrf	tblptru,c
  5440  001698  0E05               	movlw	(high __ramtop+-1)
  5441  00169A  64F7               	cpfsgt	tblptrh,c
  5442  00169C  D003               	bra	u2127
  5443  00169E  0008               	tblrd		*
  5444  0016A0  50F5               	movf	tablat,w,c
  5445  0016A2  D005               	bra	u2120
  5446  0016A4                     u2127:
  5447  0016A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5448  0016A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5449  0016AC  50E7               	movf	indf1,w,c
  5450  0016AE                     u2120:
  5451  0016AE  6E15               	movwf	command_builder_add_char@data,c
  5452  0016B0  EC0D  F00C         	call	_command_builder_add_char	;wreg free
  5453  0016B4  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5454  0016B6  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5455  0016B8                     l403:
  5456  0016B8  501D               	movf	command_builder_add_string@inx,w,c
  5457  0016BA  2419               	addwf	command_builder_add_string@data_string,w,c
  5458  0016BC  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5459  0016BE  501E               	movf	command_builder_add_string@inx+1,w,c
  5460  0016C0  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5461  0016C2  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5462  0016C4  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5463  0016C8  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5464  0016CC  6AF8               	clrf	tblptru,c
  5465  0016CE  0E05               	movlw	(high __ramtop+-1)
  5466  0016D0  64F7               	cpfsgt	tblptrh,c
  5467  0016D2  D003               	bra	u2137
  5468  0016D4  0008               	tblrd		*
  5469  0016D6  50F5               	movf	tablat,w,c
  5470  0016D8  D005               	bra	u2130
  5471  0016DA                     u2137:
  5472  0016DA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5473  0016DE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5474  0016E2  50E7               	movf	indf1,w,c
  5475  0016E4                     u2130:
  5476  0016E4  0900               	iorlw	0
  5477  0016E6  B4D8               	btfsc	status,2,c
  5478  0016E8  0012               	return	
  5479  0016EA  D7C7               	goto	l404
  5480  0016EC                     __end_of_command_builder_add_string:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           intcon2	equ	0xFF1
  5490                           intcon3	equ	0xFF0
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           indf1	equ	0xFE7
  5494                           postinc1	equ	0xFE6
  5495                           postdec1	equ	0xFE5
  5496                           fsr1h	equ	0xFE2
  5497                           fsr1l	equ	0xFE1
  5498                           indf2	equ	0xFDF
  5499                           postinc2	equ	0xFDE
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _command_builder_add_char *****************
  5505 ;; Defined at:
  5506 ;;		line 462 in file "SlaveComm_PIC18.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5509 ;;		 -> communications@send_buffer(42), 
  5510 ;;  data            1   20[COMRAM] unsigned char 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5522 ;;      Params:         3       0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0
  5524 ;;      Temps:          1       0       0       0       0       0       0
  5525 ;;      Totals:         4       0       0       0       0       0       0
  5526 ;;Total ram usage:        4 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    1
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_command_builder1
  5533 ;;		_command_builder3
  5534 ;;		_command_builder_add_string
  5535 ;;		_command_builder2
  5536 ;;		_command_builder4
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text30
  5541  00181A                     __ptext30:
  5542                           	opt stack 0
  5543  00181A                     _command_builder_add_char:
  5544                           	opt stack 24
  5545                           
  5546                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5547                           
  5548                           ;incstack = 0
  5549  00181A  EE20 F028          	lfsr	2,40
  5550  00181E  5013               	movf	command_builder_add_char@send_buffer,w,c
  5551  001820  26D9               	addwf	fsr2l,f,c
  5552  001822  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5553  001824  22DA               	addwfc	fsr2h,f,c
  5554  001826  50DF               	movf	indf2,w,c
  5555  001828  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5556  00182A  5016               	movf	??_command_builder_add_char,w,c
  5557  00182C  0D01               	mullw	1
  5558  00182E  50F3               	movf	prodl,w,c
  5559  001830  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5560  001832  6ED9               	movwf	fsr2l,c
  5561  001834  50F4               	movf	prodh,w,c
  5562  001836  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5563  001838  6EDA               	movwf	fsr2h,c
  5564  00183A  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5565                           
  5566                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5567  00183E  EE20 F028          	lfsr	2,40
  5568  001842  5013               	movf	command_builder_add_char@send_buffer,w,c
  5569  001844  26D9               	addwf	fsr2l,f,c
  5570  001846  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5571  001848  22DA               	addwfc	fsr2h,f,c
  5572  00184A  2ADF               	incf	indf2,f,c
  5573                           
  5574                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5575  00184C  EE20 F028          	lfsr	2,40
  5576  001850  5013               	movf	command_builder_add_char@send_buffer,w,c
  5577  001852  26D9               	addwf	fsr2l,f,c
  5578  001854  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5579  001856  22DA               	addwfc	fsr2h,f,c
  5580  001858  0E27               	movlw	39
  5581  00185A  64DF               	cpfsgt	indf2,c
  5582  00185C  0012               	return	
  5583                           
  5584                           ;SlaveComm_PIC18.c: 468: {
  5585                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5586  00185E  EE20 F028          	lfsr	2,40
  5587  001862  5013               	movf	command_builder_add_char@send_buffer,w,c
  5588  001864  26D9               	addwf	fsr2l,f,c
  5589  001866  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5590  001868  22DA               	addwfc	fsr2h,f,c
  5591  00186A  0E00               	movlw	0
  5592  00186C  6EDF               	movwf	indf2,c
  5593  00186E  0012               	return	
  5594  001870                     __end_of_command_builder_add_char:
  5595                           	opt stack 0
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           prodh	equ	0xFF4
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           intcon2	equ	0xFF1
  5604                           intcon3	equ	0xFF0
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           indf1	equ	0xFE7
  5608                           postinc1	equ	0xFE6
  5609                           postdec1	equ	0xFE5
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _atol *****************
  5619 ;; Defined at:
  5620 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\atol.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5623 ;;		 -> process_data@parameters(50), 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  a               4   39[COMRAM] long 
  5626 ;;  c               1   43[COMRAM] unsigned char 
  5627 ;;  sign            1   38[COMRAM] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  4   30[COMRAM] long 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5637 ;;      Params:         4       0       0       0       0       0       0
  5638 ;;      Locals:         6       0       0       0       0       0       0
  5639 ;;      Temps:          4       0       0       0       0       0       0
  5640 ;;      Totals:        14       0       0       0       0       0       0
  5641 ;;Total ram usage:       14 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    2
  5644 ;; This function calls:
  5645 ;;		___lmul
  5646 ;;		_isdigit
  5647 ;; This function is called by:
  5648 ;;		_process_data_parameters
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text31
  5653  0010D0                     __ptext31:
  5654                           	opt stack 0
  5655  0010D0                     _atol:
  5656                           	opt stack 25
  5657                           
  5658                           ;incstack = 0
  5659  0010D0  C01F  FFD9         	movff	atol@s,fsr2l
  5660  0010D4  C020  FFDA         	movff	atol@s+1,fsr2h
  5661  0010D8  50DF               	movf	indf2,w,c
  5662  0010DA  6E2C               	movwf	atol@c,c
  5663  0010DC  4A1F               	infsnz	atol@s,f,c
  5664  0010DE  2A20               	incf	atol@s+1,f,c
  5665  0010E0  0E20               	movlw	32
  5666  0010E2  182C               	xorwf	atol@c,w,c
  5667  0010E4  B4D8               	btfsc	status,2,c
  5668  0010E6  D7F4               	goto	_atol
  5669  0010E8  0E09               	movlw	9
  5670  0010EA  182C               	xorwf	atol@c,w,c
  5671  0010EC  B4D8               	btfsc	status,2,c
  5672  0010EE  D7F0               	goto	_atol
  5673  0010F0  0E00               	movlw	0
  5674  0010F2  6E28               	movwf	atol@a,c
  5675  0010F4  0E00               	movlw	0
  5676  0010F6  6E29               	movwf	atol@a+1,c
  5677  0010F8  0E00               	movlw	0
  5678  0010FA  6E2A               	movwf	atol@a+2,c
  5679  0010FC  0E00               	movlw	0
  5680  0010FE  6E2B               	movwf	atol@a+3,c
  5681  001100  0E00               	movlw	0
  5682  001102  6E27               	movwf	atol@sign,c
  5683  001104  0E2D               	movlw	45
  5684  001106  182C               	xorwf	atol@c,w,c
  5685  001108  A4D8               	btfss	status,2,c
  5686  00110A  D002               	goto	l635
  5687  00110C  2A27               	incf	atol@sign,f,c
  5688  00110E  D027               	goto	L3
  5689  001110                     l635:
  5690  001110  0E2B               	movlw	43
  5691  001112  182C               	xorwf	atol@c,w,c
  5692  001114  A4D8               	btfss	status,2,c
  5693  001116  D02B               	goto	l638
  5694  001118  D022               	goto	L3
  5695  00111A  C028  F013         	movff	atol@a,___lmul@multiplier
  5696  00111E  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5697  001122  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5698  001126  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5699  00112A  0E0A               	movlw	10
  5700  00112C  6E17               	movwf	___lmul@multiplicand,c
  5701  00112E  0E00               	movlw	0
  5702  001130  6E18               	movwf	___lmul@multiplicand+1,c
  5703  001132  0E00               	movlw	0
  5704  001134  6E19               	movwf	___lmul@multiplicand+2,c
  5705  001136  0E00               	movlw	0
  5706  001138  6E1A               	movwf	___lmul@multiplicand+3,c
  5707  00113A  EC38  F00C         	call	___lmul	;wreg free
  5708  00113E  C02C  F023         	movff	atol@c,??_atol
  5709  001142  0ED0               	movlw	208
  5710  001144  2623               	addwf	??_atol,f,c
  5711  001146  5023               	movf	??_atol,w,c
  5712  001148  2413               	addwf	?___lmul,w,c
  5713  00114A  6E28               	movwf	atol@a,c
  5714  00114C  0E00               	movlw	0
  5715  00114E  2014               	addwfc	?___lmul+1,w,c
  5716  001150  6E29               	movwf	atol@a+1,c
  5717  001152  0E00               	movlw	0
  5718  001154  2015               	addwfc	?___lmul+2,w,c
  5719  001156  6E2A               	movwf	atol@a+2,c
  5720  001158  0E00               	movlw	0
  5721  00115A  2016               	addwfc	?___lmul+3,w,c
  5722  00115C  6E2B               	movwf	atol@a+3,c
  5723  00115E                     L3:
  5724  00115E  C01F  FFD9         	movff	atol@s,fsr2l
  5725  001162  C020  FFDA         	movff	atol@s+1,fsr2h
  5726  001166  50DF               	movf	indf2,w,c
  5727  001168  6E2C               	movwf	atol@c,c
  5728  00116A  4A1F               	infsnz	atol@s,f,c
  5729  00116C  2A20               	incf	atol@s+1,f,c
  5730  00116E                     l638:
  5731  00116E  502C               	movf	atol@c,w,c
  5732  001170  ECE3  F00D         	call	_isdigit
  5733  001174  B0D8               	btfsc	status,0,c
  5734  001176  D7D1               	goto	l639
  5735  001178  5027               	movf	atol@sign,w,c
  5736  00117A  B4D8               	btfsc	status,2,c
  5737  00117C  D01A               	goto	l641
  5738  00117E  C028  F023         	movff	atol@a,??_atol
  5739  001182  C029  F024         	movff	atol@a+1,??_atol+1
  5740  001186  C02A  F025         	movff	atol@a+2,??_atol+2
  5741  00118A  C02B  F026         	movff	atol@a+3,??_atol+3
  5742  00118E  1E23               	comf	??_atol,f,c
  5743  001190  1E24               	comf	??_atol+1,f,c
  5744  001192  1E25               	comf	??_atol+2,f,c
  5745  001194  1E26               	comf	??_atol+3,f,c
  5746  001196  2A23               	incf	??_atol,f,c
  5747  001198  0E00               	movlw	0
  5748  00119A  2224               	addwfc	??_atol+1,f,c
  5749  00119C  2225               	addwfc	??_atol+2,f,c
  5750  00119E  2226               	addwfc	??_atol+3,f,c
  5751  0011A0  C023  F01F         	movff	??_atol,?_atol
  5752  0011A4  C024  F020         	movff	??_atol+1,?_atol+1
  5753  0011A8  C025  F021         	movff	??_atol+2,?_atol+2
  5754  0011AC  C026  F022         	movff	??_atol+3,?_atol+3
  5755  0011B0  0012               	return	
  5756  0011B2                     l641:
  5757  0011B2  C028  F01F         	movff	atol@a,?_atol
  5758  0011B6  C029  F020         	movff	atol@a+1,?_atol+1
  5759  0011BA  C02A  F021         	movff	atol@a+2,?_atol+2
  5760  0011BE  C02B  F022         	movff	atol@a+3,?_atol+3
  5761  0011C2  0012               	return		;funcret
  5762  0011C4                     __end_of_atol:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           intcon	equ	0xFF2
  5771                           intcon2	equ	0xFF1
  5772                           intcon3	equ	0xFF0
  5773                           postinc0	equ	0xFEE
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           postinc1	equ	0xFE6
  5777                           postdec1	equ	0xFE5
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           fsr2h	equ	0xFDA
  5783                           fsr2l	equ	0xFD9
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function _isdigit *****************
  5787 ;; Defined at:
  5788 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  c               1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  c               1   20[COMRAM] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5802 ;;      Params:         0       0       0       0       0       0       0
  5803 ;;      Locals:         2       0       0       0       0       0       0
  5804 ;;      Temps:          1       0       0       0       0       0       0
  5805 ;;      Totals:         3       0       0       0       0       0       0
  5806 ;;Total ram usage:        3 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_atol
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text32
  5817  001BC6                     __ptext32:
  5818                           	opt stack 0
  5819  001BC6                     _isdigit:
  5820                           	opt stack 25
  5821                           
  5822                           ;incstack = 0
  5823                           ;isdigit@c stored from wreg
  5824  001BC6  6E15               	movwf	isdigit@c,c
  5825  001BC8  0E00               	movlw	0
  5826  001BCA  6E14               	movwf	_isdigit$2291,c
  5827  001BCC  0E3A               	movlw	58
  5828  001BCE  6015               	cpfslt	isdigit@c,c
  5829  001BD0  D005               	goto	l813
  5830  001BD2  0E2F               	movlw	47
  5831  001BD4  6415               	cpfsgt	isdigit@c,c
  5832  001BD6  D002               	goto	l813
  5833  001BD8  0E01               	movlw	1
  5834  001BDA  6E14               	movwf	_isdigit$2291,c
  5835  001BDC                     l813:
  5836  001BDC  C014  F013         	movff	_isdigit$2291,??_isdigit
  5837  001BE0  3013               	rrcf	??_isdigit,w,c
  5838  001BE2  0012               	return	
  5839  001BE4                     __end_of_isdigit:
  5840                           	opt stack 0
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           intcon2	equ	0xFF1
  5849                           intcon3	equ	0xFF0
  5850                           postinc0	equ	0xFEE
  5851                           wreg	equ	0xFE8
  5852                           indf1	equ	0xFE7
  5853                           postinc1	equ	0xFE6
  5854                           postdec1	equ	0xFE5
  5855                           fsr1h	equ	0xFE2
  5856                           fsr1l	equ	0xFE1
  5857                           indf2	equ	0xFDF
  5858                           postinc2	equ	0xFDE
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function ___lmul *****************
  5864 ;; Defined at:
  5865 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  multiplier      4   18[COMRAM] unsigned long 
  5868 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  product         4   26[COMRAM] unsigned long 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  4   18[COMRAM] unsigned long 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5880 ;;      Params:         8       0       0       0       0       0       0
  5881 ;;      Locals:         4       0       0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0
  5883 ;;      Totals:        12       0       0       0       0       0       0
  5884 ;;Total ram usage:       12 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_powerPulseCheck
  5891 ;;		_atol
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text33
  5896  001870                     __ptext33:
  5897                           	opt stack 0
  5898  001870                     ___lmul:
  5899                           	opt stack 28
  5900                           
  5901                           ;incstack = 0
  5902  001870  0E00               	movlw	0
  5903  001872  6E1B               	movwf	___lmul@product,c
  5904  001874  0E00               	movlw	0
  5905  001876  6E1C               	movwf	___lmul@product+1,c
  5906  001878  0E00               	movlw	0
  5907  00187A  6E1D               	movwf	___lmul@product+2,c
  5908  00187C  0E00               	movlw	0
  5909  00187E  6E1E               	movwf	___lmul@product+3,c
  5910  001880  A013               	btfss	___lmul@multiplier,0,c
  5911  001882  D008               	goto	l482
  5912  001884  5017               	movf	___lmul@multiplicand,w,c
  5913  001886  261B               	addwf	___lmul@product,f,c
  5914  001888  5018               	movf	___lmul@multiplicand+1,w,c
  5915  00188A  221C               	addwfc	___lmul@product+1,f,c
  5916  00188C  5019               	movf	___lmul@multiplicand+2,w,c
  5917  00188E  221D               	addwfc	___lmul@product+2,f,c
  5918  001890  501A               	movf	___lmul@multiplicand+3,w,c
  5919  001892  221E               	addwfc	___lmul@product+3,f,c
  5920  001894                     l482:
  5921  001894  90D8               	bcf	status,0,c
  5922  001896  3617               	rlcf	___lmul@multiplicand,f,c
  5923  001898  3618               	rlcf	___lmul@multiplicand+1,f,c
  5924  00189A  3619               	rlcf	___lmul@multiplicand+2,f,c
  5925  00189C  361A               	rlcf	___lmul@multiplicand+3,f,c
  5926  00189E  90D8               	bcf	status,0,c
  5927  0018A0  3216               	rrcf	___lmul@multiplier+3,f,c
  5928  0018A2  3215               	rrcf	___lmul@multiplier+2,f,c
  5929  0018A4  3214               	rrcf	___lmul@multiplier+1,f,c
  5930  0018A6  3213               	rrcf	___lmul@multiplier,f,c
  5931  0018A8  5013               	movf	___lmul@multiplier,w,c
  5932  0018AA  1014               	iorwf	___lmul@multiplier+1,w,c
  5933  0018AC  1015               	iorwf	___lmul@multiplier+2,w,c
  5934  0018AE  1016               	iorwf	___lmul@multiplier+3,w,c
  5935  0018B0  A4D8               	btfss	status,2,c
  5936  0018B2  D7E6               	goto	l481
  5937  0018B4  C01B  F013         	movff	___lmul@product,?___lmul
  5938  0018B8  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5939  0018BC  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5940  0018C0  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5941  0018C4  0012               	return		;funcret
  5942  0018C6                     __end_of___lmul:
  5943                           	opt stack 0
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           intcon2	equ	0xFF1
  5952                           intcon3	equ	0xFF0
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           postinc1	equ	0xFE6
  5957                           postdec1	equ	0xFE5
  5958                           fsr1h	equ	0xFE2
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           postinc2	equ	0xFDE
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _process_data_parameterize *****************
  5967 ;; Defined at:
  5968 ;;		line 256 in file "SlaveComm_PIC18.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5971 ;;		 -> process_data@parameters(50), 
  5972 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5973 ;;		 -> communications@receive_buffer(42), 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  inx             2   31[COMRAM] int 
  5976 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5977 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         4       0       0       0       0       0       0
  5988 ;;      Locals:         4       0       0       0       0       0       0
  5989 ;;      Temps:          3       0       0       0       0       0       0
  5990 ;;      Totals:        11       0       0       0       0       0       0
  5991 ;;Total ram usage:       11 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    2
  5994 ;; This function calls:
  5995 ;;		___wmul
  5996 ;; This function is called by:
  5997 ;;		_process_data
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text34
  6002  000D2E                     __ptext34:
  6003                           	opt stack 0
  6004  000D2E                     _process_data_parameterize:
  6005                           	opt stack 26
  6006                           
  6007                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  6008                           
  6009                           ;incstack = 0
  6010  000D2E  0E00               	movlw	0
  6011  000D30  6E23               	movwf	process_data_parameterize@parameter_position,c
  6012                           
  6013                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  6014  000D32  0E00               	movlw	0
  6015  000D34  6E22               	movwf	process_data_parameterize@parameter_index,c
  6016                           
  6017                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  6018  000D36  0E00               	movlw	0
  6019  000D38  6E21               	movwf	process_data_parameterize@inx+1,c
  6020  000D3A  0E00               	movlw	0
  6021  000D3C  6E20               	movwf	process_data_parameterize@inx,c
  6022  000D3E  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6023  000D40  D008               	goto	l340
  6024  000D42  5021               	movf	process_data_parameterize@inx+1,w,c
  6025  000D44  E105               	bnz	u2450
  6026  000D46  0E05               	movlw	5
  6027  000D48  5C20               	subwf	process_data_parameterize@inx,w,c
  6028  000D4A  B0D8               	btfsc	status,0,c
  6029  000D4C  D082               	goto	l342
  6030  000D4E  D001               	goto	l340
  6031  000D50                     u2450:
  6032  000D50  D080               	goto	l342
  6033  000D52                     l340:
  6034                           
  6035                           ;SlaveComm_PIC18.c: 269: {
  6036                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  6037  000D52  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6038  000D56  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6039  000D5A  0E00               	movlw	0
  6040  000D5C  6E16               	movwf	___wmul@multiplicand+1,c
  6041  000D5E  0E0A               	movlw	10
  6042  000D60  6E15               	movwf	___wmul@multiplicand,c
  6043  000D62  ECAF  F00D         	call	___wmul	;wreg free
  6044  000D66  5013               	movf	?___wmul,w,c
  6045  000D68  2419               	addwf	process_data_parameterize@parameters,w,c
  6046  000D6A  6ED9               	movwf	fsr2l,c
  6047  000D6C  5014               	movf	?___wmul+1,w,c
  6048  000D6E  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6049  000D70  6EDA               	movwf	fsr2h,c
  6050  000D72  0E00               	movlw	0
  6051  000D74  6EDF               	movwf	indf2,c
  6052  000D76  4A20               	infsnz	process_data_parameterize@inx,f,c
  6053  000D78  2A21               	incf	process_data_parameterize@inx+1,f,c
  6054  000D7A  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6055  000D7C  D7EA               	goto	l340
  6056  000D7E  5021               	movf	process_data_parameterize@inx+1,w,c
  6057  000D80  E168               	bnz	l2978
  6058  000D82  D7E1               	goto	L2
  6059  000D84                     
  6060                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  6061  000D84  0E00               	movlw	0
  6062  000D86  6E23               	movwf	process_data_parameterize@parameter_position,c
  6063                           
  6064                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  6065  000D88  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6066                           
  6067                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  6068  000D8A  0E04               	movlw	4
  6069  000D8C  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6070  000D8E  D05A               	goto	l346
  6071                           
  6072                           ;SlaveComm_PIC18.c: 286: {
  6073                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  6074  000D90  0E04               	movlw	4
  6075  000D92  6E22               	movwf	process_data_parameterize@parameter_index,c
  6076                           
  6077                           ;SlaveComm_PIC18.c: 290: }
  6078                           ;SlaveComm_PIC18.c: 292: break;
  6079  000D94  D057               	goto	l346
  6080  000D96                     
  6081                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6082  000D96  EE20 F029          	lfsr	2,41
  6083  000D9A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6084  000D9C  26D9               	addwf	fsr2l,f,c
  6085  000D9E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6086  000DA0  22DA               	addwfc	fsr2h,f,c
  6087  000DA2  50DF               	movf	indf2,w,c
  6088  000DA4  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6089  000DA6  501D               	movf	??_process_data_parameterize,w,c
  6090  000DA8  0D01               	mullw	1
  6091  000DAA  50F3               	movf	prodl,w,c
  6092  000DAC  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6093  000DAE  6ED9               	movwf	fsr2l,c
  6094  000DB0  50F4               	movf	prodh,w,c
  6095  000DB2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6096  000DB4  6EDA               	movwf	fsr2h,c
  6097  000DB6  5022               	movf	process_data_parameterize@parameter_index,w,c
  6098  000DB8  0D0A               	mullw	10
  6099  000DBA  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6100  000DBE  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6101  000DC2  50F3               	movf	prodl,w,c
  6102  000DC4  261E               	addwf	??_process_data_parameterize+1,f,c
  6103  000DC6  50F4               	movf	prodh,w,c
  6104  000DC8  221F               	addwfc	??_process_data_parameterize+2,f,c
  6105  000DCA  5023               	movf	process_data_parameterize@parameter_position,w,c
  6106  000DCC  0D01               	mullw	1
  6107  000DCE  50F3               	movf	prodl,w,c
  6108  000DD0  241E               	addwf	??_process_data_parameterize+1,w,c
  6109  000DD2  6EE1               	movwf	fsr1l,c
  6110  000DD4  50F4               	movf	prodh,w,c
  6111  000DD6  201F               	addwfc	??_process_data_parameterize+2,w,c
  6112  000DD8  6EE2               	movwf	fsr1h,c
  6113  000DDA  CFDF FFE7          	movff	indf2,indf1
  6114                           
  6115                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  6116  000DDE  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6117                           
  6118                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  6119  000DE0  0E09               	movlw	9
  6120  000DE2  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6121  000DE4  D002               	goto	l350
  6122                           
  6123                           ;SlaveComm_PIC18.c: 298: {
  6124                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  6125  000DE6  0E09               	movlw	9
  6126  000DE8  6E23               	movwf	process_data_parameterize@parameter_position,c
  6127  000DEA                     l350:
  6128                           
  6129                           ;SlaveComm_PIC18.c: 302: }
  6130                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  6131  000DEA  5022               	movf	process_data_parameterize@parameter_index,w,c
  6132  000DEC  0D0A               	mullw	10
  6133  000DEE  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6134  000DF2  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6135  000DF6  50F3               	movf	prodl,w,c
  6136  000DF8  261D               	addwf	??_process_data_parameterize,f,c
  6137  000DFA  50F4               	movf	prodh,w,c
  6138  000DFC  221E               	addwfc	??_process_data_parameterize+1,f,c
  6139  000DFE  5023               	movf	process_data_parameterize@parameter_position,w,c
  6140  000E00  0D01               	mullw	1
  6141  000E02  50F3               	movf	prodl,w,c
  6142  000E04  241D               	addwf	??_process_data_parameterize,w,c
  6143  000E06  6ED9               	movwf	fsr2l,c
  6144  000E08  50F4               	movf	prodh,w,c
  6145  000E0A  201E               	addwfc	??_process_data_parameterize+1,w,c
  6146  000E0C  6EDA               	movwf	fsr2h,c
  6147  000E0E  0E00               	movlw	0
  6148  000E10  6EDF               	movwf	indf2,c
  6149                           
  6150                           ;SlaveComm_PIC18.c: 307: }
  6151                           
  6152                           ;SlaveComm_PIC18.c: 306: break;
  6153  000E12  D018               	goto	l346
  6154  000E14  EE20 F029          	lfsr	2,41
  6155  000E18  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6156  000E1A  26D9               	addwf	fsr2l,f,c
  6157  000E1C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6158  000E1E  22DA               	addwfc	fsr2h,f,c
  6159  000E20  50DF               	movf	indf2,w,c
  6160  000E22  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6161  000E24  501D               	movf	??_process_data_parameterize,w,c
  6162  000E26  0D01               	mullw	1
  6163  000E28  50F3               	movf	prodl,w,c
  6164  000E2A  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6165  000E2C  6ED9               	movwf	fsr2l,c
  6166  000E2E  50F4               	movf	prodh,w,c
  6167  000E30  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6168  000E32  6EDA               	movwf	fsr2h,c
  6169  000E34  50DF               	movf	indf2,w,c
  6170                           
  6171                           ; Switch size 1, requested type "space"
  6172                           ; Number of cases is 2, Range of values is 33 to 59
  6173                           ; switch strategies available:
  6174                           ; Name         Instructions Cycles
  6175                           ; simple_byte            7     4 (average)
  6176                           ;	Chosen strategy is simple_byte
  6177  000E36  0A21               	xorlw	33	; case 33
  6178  000E38  B4D8               	btfsc	status,2,c
  6179  000E3A  D004               	goto	l346
  6180  000E3C  0A1A               	xorlw	26	; case 59
  6181  000E3E  B4D8               	btfsc	status,2,c
  6182  000E40  D7A1               	goto	l347
  6183  000E42  D7A9               	goto	l349
  6184  000E44                     l346:
  6185                           
  6186                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  6187  000E44  EE20 F029          	lfsr	2,41
  6188  000E48  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6189  000E4A  26D9               	addwf	fsr2l,f,c
  6190  000E4C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6191  000E4E  22DA               	addwfc	fsr2h,f,c
  6192  000E50  2ADF               	incf	indf2,f,c
  6193  000E52                     l342:
  6194  000E52                     l2978:
  6195  000E52  EE20 F029          	lfsr	2,41
  6196  000E56  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6197  000E58  26D9               	addwf	fsr2l,f,c
  6198  000E5A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6199  000E5C  22DA               	addwfc	fsr2h,f,c
  6200  000E5E  50DF               	movf	indf2,w,c
  6201  000E60  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6202  000E62  501D               	movf	??_process_data_parameterize,w,c
  6203  000E64  0D01               	mullw	1
  6204  000E66  50F3               	movf	prodl,w,c
  6205  000E68  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6206  000E6A  6ED9               	movwf	fsr2l,c
  6207  000E6C  50F4               	movf	prodh,w,c
  6208  000E6E  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6209  000E70  6EDA               	movwf	fsr2h,c
  6210  000E72  0E2A               	movlw	42
  6211  000E74  18DE               	xorwf	postinc2,w,c
  6212  000E76  B4D8               	btfsc	status,2,c
  6213  000E78  0012               	return	
  6214  000E7A  EE20 F029          	lfsr	2,41
  6215  000E7E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6216  000E80  26D9               	addwf	fsr2l,f,c
  6217  000E82  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6218  000E84  22DA               	addwfc	fsr2h,f,c
  6219  000E86  0E28               	movlw	40
  6220  000E88  60DF               	cpfslt	indf2,c
  6221  000E8A  0012               	return	
  6222  000E8C  EE20 F028          	lfsr	2,40
  6223  000E90  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6224  000E92  26D9               	addwf	fsr2l,f,c
  6225  000E94  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6226  000E96  22DA               	addwfc	fsr2h,f,c
  6227  000E98  EE10 F029          	lfsr	1,41
  6228  000E9C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6229  000E9E  26E1               	addwf	fsr1l,f,c
  6230  000EA0  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6231  000EA2  22E2               	addwfc	fsr1h,f,c
  6232  000EA4  50DE               	movf	postinc2,w,c
  6233  000EA6  18E6               	xorwf	postinc1,w,c
  6234  000EA8  B4D8               	btfsc	status,2,c
  6235  000EAA  0012               	return	
  6236  000EAC  D7B3               	goto	l344
  6237  000EAE                     __end_of_process_data_parameterize:
  6238                           	opt stack 0
  6239                           tblptru	equ	0xFF8
  6240                           tblptrh	equ	0xFF7
  6241                           tblptrl	equ	0xFF6
  6242                           tablat	equ	0xFF5
  6243                           prodh	equ	0xFF4
  6244                           prodl	equ	0xFF3
  6245                           intcon	equ	0xFF2
  6246                           intcon2	equ	0xFF1
  6247                           intcon3	equ	0xFF0
  6248                           postinc0	equ	0xFEE
  6249                           wreg	equ	0xFE8
  6250                           indf1	equ	0xFE7
  6251                           postinc1	equ	0xFE6
  6252                           postdec1	equ	0xFE5
  6253                           fsr1h	equ	0xFE2
  6254                           fsr1l	equ	0xFE1
  6255                           indf2	equ	0xFDF
  6256                           postinc2	equ	0xFDE
  6257                           fsr2h	equ	0xFDA
  6258                           fsr2l	equ	0xFD9
  6259                           status	equ	0xFD8
  6260                           
  6261 ;; *************** function ___wmul *****************
  6262 ;; Defined at:
  6263 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  multiplier      2   18[COMRAM] unsigned int 
  6266 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  product         2   22[COMRAM] unsigned int 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  2   18[COMRAM] unsigned int 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, prodl, prodh
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6278 ;;      Params:         4       0       0       0       0       0       0
  6279 ;;      Locals:         2       0       0       0       0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0
  6281 ;;      Totals:         6       0       0       0       0       0       0
  6282 ;;Total ram usage:        6 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_process_data_parameterize
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text35
  6293  001B5E                     __ptext35:
  6294                           	opt stack 0
  6295  001B5E                     ___wmul:
  6296                           	opt stack 26
  6297                           
  6298                           ;incstack = 0
  6299  001B5E  5013               	movf	___wmul@multiplier,w,c
  6300  001B60  0215               	mulwf	___wmul@multiplicand,c
  6301  001B62  CFF3 F017          	movff	prodl,___wmul@product
  6302  001B66  CFF4 F018          	movff	prodh,___wmul@product+1
  6303  001B6A  5013               	movf	___wmul@multiplier,w,c
  6304  001B6C  0216               	mulwf	___wmul@multiplicand+1,c
  6305  001B6E  50F3               	movf	prodl,w,c
  6306  001B70  2618               	addwf	___wmul@product+1,f,c
  6307  001B72  5014               	movf	___wmul@multiplier+1,w,c
  6308  001B74  0215               	mulwf	___wmul@multiplicand,c
  6309  001B76  50F3               	movf	prodl,w,c
  6310  001B78  2618               	addwf	___wmul@product+1,f,c
  6311  001B7A  C017  F013         	movff	___wmul@product,?___wmul
  6312  001B7E  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6313  001B82  0012               	return	
  6314  001B84                     __end_of___wmul:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           intcon2	equ	0xFF1
  6324                           intcon3	equ	0xFF0
  6325                           postinc0	equ	0xFEE
  6326                           wreg	equ	0xFE8
  6327                           indf1	equ	0xFE7
  6328                           postinc1	equ	0xFE6
  6329                           postdec1	equ	0xFE5
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           fsr2h	equ	0xFDA
  6335                           fsr2l	equ	0xFD9
  6336                           status	equ	0xFD8
  6337                           
  6338 ;; *************** function _SPISlaveInit *****************
  6339 ;; Defined at:
  6340 ;;		line 669 in file "SlaveComm_PIC18.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6354 ;;      Params:         0       0       0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_communications
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text36
  6369  00191A                     __ptext36:
  6370                           	opt stack 0
  6371  00191A                     _SPISlaveInit:
  6372                           	opt stack 28
  6373                           
  6374                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  6375                           
  6376                           ;incstack = 0
  6377  00191A  9092               	bcf	3986,0,c	;volatile
  6378                           
  6379                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  6380  00191C  8292               	bsf	3986,1,c	;volatile
  6381                           
  6382                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  6383  00191E  9694               	bcf	3988,3,c	;volatile
  6384                           
  6385                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  6386  001920  9A94               	bcf	3988,5,c	;volatile
  6387                           
  6388                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  6389  001922  9C94               	bcf	3988,6,c	;volatile
  6390                           
  6391                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  6392  001924  9E94               	bcf	3988,7,c	;volatile
  6393                           
  6394                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  6395  001926  010F               	movlb	15	; () banked
  6396  001928  9338               	bcf	56,1,b	;volatile
  6397                           
  6398                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6399  00192A  8C8B               	bsf	3979,6,c	;volatile
  6400                           
  6401                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6402  00192C  868B               	bsf	3979,3,c	;volatile
  6403                           
  6404                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6405  00192E  8A8B               	bsf	3979,5,c	;volatile
  6406                           
  6407                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6408  001930  8E8B               	bsf	3979,7,c	;volatile
  6409                           
  6410                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6411  001932  9A6C               	bcf	3948,5,c	;volatile
  6412                           
  6413                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6414  001934  010F               	movlb	15	; () banked
  6415  001936  9139               	bcf	57,0,b	;volatile
  6416                           
  6417                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6418  001938  010F               	movlb	15	; () banked
  6419  00193A  9339               	bcf	57,1,b	;volatile
  6420                           
  6421                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6422  00193C  010F               	movlb	15	; () banked
  6423  00193E  9539               	bcf	57,2,b	;volatile
  6424                           
  6425                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6426  001940  010F               	movlb	15	; () banked
  6427  001942  9739               	bcf	57,3,b	;volatile
  6428                           
  6429                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6430  001944  8093               	bsf	3987,0,c	;volatile
  6431                           
  6432                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6433  001946  8293               	bsf	3987,1,c	;volatile
  6434                           
  6435                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6436  001948  8493               	bsf	3987,2,c	;volatile
  6437                           
  6438                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6439  00194A  9693               	bcf	3987,3,c	;volatile
  6440                           
  6441                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6442  00194C  9E6D               	bcf	3949,7,c	;volatile
  6443                           
  6444                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6445  00194E  8C6D               	bsf	3949,6,c	;volatile
  6446                           
  6447                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6448  001950  9E6C               	bcf	3948,7,c	;volatile
  6449                           
  6450                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6451  001952  9C6C               	bcf	3948,6,c	;volatile
  6452                           
  6453                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6454  001954  9A6C               	bcf	3948,5,c	;volatile
  6455                           
  6456                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6457  001956  886C               	bsf	3948,4,c	;volatile
  6458                           
  6459                           ; BSR set to: 15
  6460                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6461  001958  506C               	movf	3948,w,c	;volatile
  6462  00195A  0BF0               	andlw	-16
  6463  00195C  0904               	iorlw	4
  6464  00195E  6E6C               	movwf	3948,c	;volatile
  6465                           
  6466                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6467  001960  0E00               	movlw	0
  6468  001962  6E69               	movwf	3945,c	;volatile
  6469                           
  6470                           ; BSR set to: 15
  6471                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6472  001964  9869               	bcf	3945,4,c	;volatile
  6473                           
  6474                           ; BSR set to: 15
  6475                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6476  001966  8A6C               	bsf	3948,5,c	;volatile
  6477  001968  0012               	return	
  6478  00196A                     __end_of_SPISlaveInit:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           intcon	equ	0xFF2
  6487                           intcon2	equ	0xFF1
  6488                           intcon3	equ	0xFF0
  6489                           postinc0	equ	0xFEE
  6490                           wreg	equ	0xFE8
  6491                           indf1	equ	0xFE7
  6492                           postinc1	equ	0xFE6
  6493                           postdec1	equ	0xFE5
  6494                           fsr1h	equ	0xFE2
  6495                           fsr1l	equ	0xFE1
  6496                           indf2	equ	0xFDF
  6497                           postinc2	equ	0xFDE
  6498                           fsr2h	equ	0xFDA
  6499                           fsr2l	equ	0xFD9
  6500                           status	equ	0xFD8
  6501                           
  6502 ;; *************** function _Timer0_ISR *****************
  6503 ;; Defined at:
  6504 ;;		line 225 in file "Current_Sense_Main.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6518 ;;      Params:         0       0       0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0
  6520 ;;      Temps:         18       0       0       0       0       0       0
  6521 ;;      Totals:        18       0       0       0       0       0       0
  6522 ;;Total ram usage:       18 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		Interrupt level 2
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	intcode
  6532  000008                     __pintcode:
  6533                           	opt stack 0
  6534  000008                     _Timer0_ISR:
  6535                           	opt stack 23
  6536                           
  6537                           ; BSR set to: 15
  6538                           ;incstack = 0
  6539  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6540  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6541  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6542  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6543  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6544  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6545  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6546  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6547  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6548  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6549  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6550  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6551  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6552  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6553  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6554  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6555  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6556  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6557  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6558                           
  6559                           ;Current_Sense_Main.c: 227: INTCONbits.TMR0IF = 0;
  6560  000052  94F2               	bcf	intcon,2,c	;volatile
  6561                           
  6562                           ;Current_Sense_Main.c: 229: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6563  000054  0EFC               	movlw	252
  6564  000056  6ED7               	movwf	4055,c	;volatile
  6565                           
  6566                           ;Current_Sense_Main.c: 230: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6567  000058  0E18               	movlw	24
  6568  00005A  6ED6               	movwf	4054,c	;volatile
  6569                           
  6570                           ;Current_Sense_Main.c: 232: timerCountHF++;
  6571  00005C  0E01               	movlw	1
  6572  00005E  2644               	addwf	_timerCountHF,f,c	;volatile
  6573  000060  0E00               	movlw	0
  6574  000062  2245               	addwfc	_timerCountHF+1,f,c	;volatile
  6575  000064  2246               	addwfc	_timerCountHF+2,f,c	;volatile
  6576  000066  2247               	addwfc	_timerCountHF+3,f,c	;volatile
  6577                           
  6578                           ;Current_Sense_Main.c: 233: timerCountLF++;
  6579  000068  0E01               	movlw	1
  6580  00006A  0100               	movlb	0	; () banked
  6581  00006C  2764               	addwf	_timerCountLF& (0+255),f,b	;volatile
  6582  00006E  0E00               	movlw	0
  6583  000070  2365               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  6584  000072  2366               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  6585  000074  2367               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  6586                           
  6587                           ; BSR set to: 0
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;Current_Sense_Main.c: 235: return;
  6591  000076  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6592  00007A  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6593  00007E  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6594  000082  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6595  000086  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6596  00008A  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6597  00008E  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6598  000092  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6599  000096  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6600  00009A  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6601  00009E  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6602  0000A2  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6603  0000A6  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6604  0000AA  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6605  0000AE  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6606  0000B2  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6607  0000B6  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6608  0000BA  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6609  0000BE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6610  0000C0  0011               	retfie		f
  6611  0000C2                     __end_of_Timer0_ISR:
  6612                           	opt stack 0
  6613                           pclatu	equ	0xFFB
  6614                           pclath	equ	0xFFA
  6615                           tblptru	equ	0xFF8
  6616                           tblptrh	equ	0xFF7
  6617                           tblptrl	equ	0xFF6
  6618                           tablat	equ	0xFF5
  6619                           prodh	equ	0xFF4
  6620                           prodl	equ	0xFF3
  6621                           intcon	equ	0xFF2
  6622                           intcon2	equ	0xFF1
  6623                           intcon3	equ	0xFF0
  6624                           postinc0	equ	0xFEE
  6625                           fsr0h	equ	0xFEA
  6626                           fsr0l	equ	0xFE9
  6627                           wreg	equ	0xFE8
  6628                           indf1	equ	0xFE7
  6629                           postinc1	equ	0xFE6
  6630                           postdec1	equ	0xFE5
  6631                           fsr1h	equ	0xFE2
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           postinc2	equ	0xFDE
  6635                           fsr2h	equ	0xFDA
  6636                           fsr2l	equ	0xFD9
  6637                           status	equ	0xFD8
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           intcon2	equ	0xFF1
  6648                           intcon3	equ	0xFF0
  6649                           postinc0	equ	0xFEE
  6650                           fsr0h	equ	0xFEA
  6651                           fsr0l	equ	0xFE9
  6652                           wreg	equ	0xFE8
  6653                           indf1	equ	0xFE7
  6654                           postinc1	equ	0xFE6
  6655                           postdec1	equ	0xFE5
  6656                           fsr1h	equ	0xFE2
  6657                           fsr1l	equ	0xFE1
  6658                           indf2	equ	0xFDF
  6659                           postinc2	equ	0xFDE
  6660                           fsr2h	equ	0xFDA
  6661                           fsr2l	equ	0xFD9
  6662                           status	equ	0xFD8
  6663                           
  6664                           	psect	rparam
  6665  0000                     pclatu	equ	0xFFB
  6666                           pclath	equ	0xFFA
  6667                           tblptru	equ	0xFF8
  6668                           tblptrh	equ	0xFF7
  6669                           tblptrl	equ	0xFF6
  6670                           tablat	equ	0xFF5
  6671                           prodh	equ	0xFF4
  6672                           prodl	equ	0xFF3
  6673                           intcon	equ	0xFF2
  6674                           intcon2	equ	0xFF1
  6675                           intcon3	equ	0xFF0
  6676                           postinc0	equ	0xFEE
  6677                           fsr0h	equ	0xFEA
  6678                           fsr0l	equ	0xFE9
  6679                           wreg	equ	0xFE8
  6680                           indf1	equ	0xFE7
  6681                           postinc1	equ	0xFE6
  6682                           postdec1	equ	0xFE5
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           indf2	equ	0xFDF
  6686                           postinc2	equ	0xFDE
  6687                           fsr2h	equ	0xFDA
  6688                           fsr2l	equ	0xFD9
  6689                           status	equ	0xFD8
  6690                           
  6691                           	psect	temp
  6692  00004D                     btemp:
  6693                           	opt stack 0
  6694  00004D                     	ds	1
  6695  0000                     int$flags	set	btemp
  6696  0000                     wtemp6	set	btemp+1
  6697                           pclatu	equ	0xFFB
  6698                           pclath	equ	0xFFA
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           intcon2	equ	0xFF1
  6707                           intcon3	equ	0xFF0
  6708                           postinc0	equ	0xFEE
  6709                           fsr0h	equ	0xFEA
  6710                           fsr0l	equ	0xFE9
  6711                           wreg	equ	0xFE8
  6712                           indf1	equ	0xFE7
  6713                           postinc1	equ	0xFE6
  6714                           postdec1	equ	0xFE5
  6715                           fsr1h	equ	0xFE2
  6716                           fsr1l	equ	0xFE1
  6717                           indf2	equ	0xFDF
  6718                           postinc2	equ	0xFDE
  6719                           fsr2h	equ	0xFDA
  6720                           fsr2l	equ	0xFD9
  6721                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        28
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     29     118
    BANK1           256     51      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _send_data->_SPI_send_data
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    ___lldiv->___lmul
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  104108
                                             24 BANK0      5     5      0
                     _communications
                          _delayMS10
                               _init
                        _initMCPFout
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                     16    16      0    3163
                                             43 COMRAM     8     8      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     426
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCPFout                                          1     1      0     426
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (2) _delayMS10                                            5     3      2     426
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   99494
                                             22 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   48023
                                             14 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   16986
                                              0 BANK0     14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     443
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   50693
                                             18 BANK0      4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   49006
                                             56 COMRAM     1     1      0
                                             14 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   17076
                                              0 BANK0     14    12      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    3280
                                             43 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8    1681
                                             30 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1835
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
               ___lmul (ARG)
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
             ___lmul (ARG)
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
             ___lmul (ARG)
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initMCPFout
     _delayMS10
   _initTimer
   _powerPulseCheck
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      76       4       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F       9        0.0%
DATA                 0      0     11F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Feb 22 10:41:32 2018

                                       _SPISlaveInit 191A                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l121 121C                                                  l124 1278  
                                                l301 13C6                                                  l141 1912  
                                                l133 18F0                                                  l134 18E8  
                                                l311 1412                                                  l303 13DC  
                                                l143 190E                                                  l119 11E8  
                                                l320 1470                                                  l136 18E4  
                                                l321 147E                                                  l305 139C  
                                                l330 12EC                                                  l322 148A  
                                                l403 16B8                                                  l340 0D52  
                                                l404 167A                                                  l420 0EC0  
                                                l332 1346                                                  l412 15EA  
                                                l172 0678                                                  l421 0EF4  
                                                l333 1358                                                  l317 1496  
                                                l309 13F8                                                  l181 08A2  
                                                l173 07D0                                                  l342 0E52  
                                                l350 0DEA                                                  l318 1462  
                                                l190 0A42                                                  l431 0FD0  
                                                l423 0F26                                                  l191 0A42  
                                                l175 07B2                                                  l344 0E14  
                                                l328 12A8                                                  l440 1BBE  
                                                l184 099C                                                  l176 0792  
                                                l409 158A                                                  l185 09AE  
                                                l346 0E44                                                  l178 07D4  
                                                l347 0D84                                                  l419 0F2A  
                                                l435 1B30                                                  l195 1A9C  
                                                l187 09EC                                                  l179 089E  
                                                l436 1B34                                                  l196 1A8A  
                                                l349 0D96                                                  l429 0F98  
                                                l381 0CFC                                                  l373 0C3C  
                                                l357 0A7C                                                  l189 0A20  
                                                l366 0BF2                                                  l383 0D2A  
                                                l375 0C6C                                                  l359 0B0C  
                                                l368 0BAA                                                  l481 1880  
                                                l641 11B2                                                  l377 0C9C  
                                                l482 1894                                                  l635 1110  
                                                l379 0CCC                                                  l299 138A  
                                                l813 1BDC                                                  l638 116E  
                                                l639 111A                                                  l840 1610  
                                                l850 1770                                                  l843 1650  
                                                l844 165E                                                  l853 17A4  
                                                l854 17B2                                                  l839 161C  
                                                l849 177C                                                  l892 0FEA  
                                                l894 1042                                                  l895 10AC  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 00B7                                         ?_initMCPFout 0001  
                                               l3140 0792                                                 l3204 11D2  
                                               l3222 121C                                                 l3216 120C  
                                               l3170 099C                                                 l3182 0A20  
                                               l3238 1262                                                 l2978 0E52  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2120 16AE                                                 u2130 16E4  
                                               u2127 16A4                                                 u2160 1620  
                                               u2137 16DA                                                 u2250 0F62  
                                               u2190 1780                                                 u2450 0D50  
                                               u2370 1ADA                                                 u2380 1ADC  
                                               _IPR1 000F9F                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               u2910 124E                                                 u2755 06CE  
                                               u2765 076A                                                 u2890 120C  
                                               u2947 1AF6                                                 u2957 1A90  
                                               u2967 1424                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 10D0                                                 _main 11C4  
                                               _init 1C3C                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C2                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00BE                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 135C  
                                       main@inx_1087 00C2                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 062A                                                STR_11 0653  
                                              STR_12 0653                                                STR_20 061E  
                                              STR_13 0657                                                STR_21 063E  
                                              STR_14 062A                                                STR_22 060D  
                                              STR_23 064F                                                STR_15 065B  
                                              STR_40 064B                                                STR_32 0643  
                                              STR_16 0639                                                STR_17 062A  
                                              STR_26 0657                                                STR_18 0624  
                                              STR_19 0617                                                STR_27 0624  
                                              STR_35 0647                                                STR_28 0657  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 1670  
                                    __end_of___llmod 17C4                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                       main@initDone 00BF                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 196A  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0023                                   ??_command_builder3 0027  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 00B7  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1C14                                     ?_powerPulseCheck 0001  
                                    __end_of_isdigit 1BE4                                                _useLF 0043  
                                 __CFG_MCLRE$EXTMCLR 000000                                                atol@a 0028  
                                              atol@c 002C                                                atol@s 001F  
                                              _ultoa 0FDA                                                pclath 000FFA  
                                              tablat 000FF5                                                status 000FD8  
                                              wtemp6 004E                                      __end_of_strcmp2 0FDA  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 00A7  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001D  
                                    __initialization 16EC                                         __end_of_atol 11C4  
                                       __end_of_main 129C                                         __end_of_init 1C4E  
                             __end_of_communications 141A                               _com_command_setVersion 1B38  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 1B10  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 003A                                               ??_init 0019  
                                      _SPI_send_data 1BA6                                        __activetblptr 000002  
                            _process_data_parameters 0A58                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 002C                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 1870  
                                             ___wmul 1B5E                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 0027  
                                          ??___llmod 001B                                               _initIO 1B84  
                                             clear_0 1732                                               clear_1 173E  
                                             clear_2 174A                                       ?_SPI_send_data 0001  
                         ?_com_command_setEnergyUsed 00A7                                            ??_initOSC 0013  
                          _process_data_parameterize 0D2E                                         __pdataCOMRAM 003A  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 0038  
                           com_command_setPower@temp 00A9                                               ultoa@v 0034  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1AE2  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 1750                                 __size_of_initMCPFout 002E  
                    powerPulseCheck@timerCountHFLast 00D0                      com_command_setPower@send_buffer 00A7  
                    powerPulseCheck@timerCountLFLast 003A                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                               _powerPulseCheck$2649 0030                                         __pidataBANK0 1C2A  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                      __end_of_ultoa 10D0                            ??_process_data_parameters 0039  
                 powerPulseCheck@meterEnergyUsedPart 0060                         communications@receive_buffer 0133  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 16EC  
                         _command_builder_add_string 1670                                              ??_ultoa 0034  
                                         __pbssBANK0 0060                                           __pbssBANK1 0133  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 18C6                                              ?___lmul 0013  
                                            ?___wmul 0013                                   __CFG_CCP3MX$PORTB5 000000  
                                 ?_pulseFoutPassThru 0001                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090                                              ?_initIO 0001  
process_data_parameters@end_of_transmission_received 0039           communications@end_of_transmission_received 007C  
                                     ___lmul@product 001B                          __end_of_resetCommunications 14C0  
                                    _meterEnergyUsed 0068                                  ??_pulseFoutPassThru 0013  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 1A00                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1C14                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 181A                                    __end_of_delayMS10 1AB2  
                    __end_of_process_data_parameters 0D2E                             __end_of_SPI_receive_data 1B38  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
                          __end_of_pulseFoutPassThru 191A      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 15EE                                      __size_of___wmul 0026  
                                            ___llmod 175E                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 0022  
                                            __pcinit 16EC                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 11C4  
                                            __ptext1 18C6                                              __ptext2 0660  
                                            __ptext3 1BE4                                              __ptext4 1C3C  
                                            __ptext5 1BFC                                              __ptext6 1AE2  
                                            __ptext7 1A80                                              __ptext8 196A  
                                            __ptext9 1B84                                           _meterWatts 0074  
                                          _T0CONbits 000FD5                                              _initOSC 1BFC  
                                  __end_of_initTimer 1BFC                                              _isdigit 1BC6  
                      powerPulseCheck@energyPerPulse 003E                                  __size_of_Timer0_ISR 00BA  
                                            main@inx 00C0                                              _strcmp2 0EAE  
                               end_of_initialization 1750                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 15EE                            powerPulseCheck@firstPulse 0042  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 1B5E  
                           __size_of_powerPulseCheck 03F8                                     ??_communications 003A  
                                    ___lldiv@divisor 0023                                      ___lldiv@counter 002B  
        process_data_parameterize@parameter_position 0023                                              postdec1 000FE5  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                receive_data@my_status 0048  
                               __end_of_receive_data 135C                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                      communications@last_state_active 007A  
                        ??_com_command_setEnergyUsed 0039                                        ?_process_data 00B9  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                     powerPulseCheck@timerCountHFCheck 00D4  
                         process_data@receive_buffer 00B9                          __end_of_initInterruptsClear 19B6  
                  __end_of_process_data_parameterize 0EAE                           __size_of_pulseFoutPassThru 0054  
                               _com_command_setPower 19B6                  communications@receive_current_state 007B  
                                      ?_SPISlaveInit 0001                                       __end_of___lmul 18C6  
                                     __end_of___wmul 1B84                                        __pidataCOMRAM 1C4E  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 1BA6  
                                     ??_process_data 003A                          ?_command_builder_add_string 0017  
                                start_initialization 16EC                                        ??_initMCPFout 0018  
                       resetCommunications@commState 0078                                     _command_builder1 17C4  
                                   _command_builder3 14C0                            _com_command_setEnergyUsed 1A00  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0027                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 00A7  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0023  
                                  ??_powerPulseCheck 002C                                          __pdataBANK0 00C4  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0025  
                         ??_command_builder_add_char 0016                                          __pbssCOMRAM 0044  
                                      __pcstackBANK0 00A7                                        __pcstackBANK1 0100  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00C2  
                                       _isdigit$2291 0014                                       delayMS10@count 0013  
                                  ?_SPI_receive_data 0013                                            _delayMS10 1A80  
                                __end_of_initMCPFout 1B10                        com_command_setEnergyUsed@temp 00A9  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 00B5                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___lldiv 001F                                             ?___llmod 0013  
                              __end_of_SPI_send_data 1BC6                                         _meterWattsHF 0070  
                                       _meterWattsLF 006C                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 00B5  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                  send_data@send_end 0019                                            _initTimer 1BE4  
                                           ?_strcmp2 0013                        powerPulseCheck@PIECEWISE_FUNC 00C4  
                       __size_of_resetCommunications 00A6                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                  process_data_parameterize@parameters 0019  
                           pulseFoutPassThru@runonce 004C                                         _receive_data 129C  
                                     ___wmul@product 0017                                             _LATAbits 000F89  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 0013                                 __end_of_process_data 1A80  
                                          _send_data 155E                               ??_com_command_setPower 0039  
                  process_data_parameters@parameters 00B5                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                           ?_initTimer 0001  
                                  ___lmul@multiplier 0013                                 __end_of_SPISlaveInit 196A  
                                          copy_data0 1700                                            copy_data1 1720  
                                        _initMCPFout 1AE2             process_data@end_of_transmission_received 0132  
                                         ?_send_data 0015                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001F                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                     __end_of_send_end_of_transmission 1C2A  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                   __end_of_command_builder_add_char 1870                             __end_of_command_builder1 181A  
                           __end_of_command_builder3 155E                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                             __ptext10 135C  
                                           __ptext11 155E                                             __ptext20 1AB2  
                                           __ptext12 1BA6                                             __ptext21 0EAE  
                                           __ptext13 141A                                             __ptext30 181A  
                                           __ptext22 1C14                                             __ptext14 1B38  
                                           __ptext31 10D0                                             __ptext23 17C4  
                                           __ptext15 19B6                                             __ptext32 1BC6  
                                           __ptext24 1A00                                             __ptext16 129C  
                                           __ptext33 1870                                             __ptext25 0FDA  
                                           __ptext17 1B10                                             __ptext34 0D2E  
                                           __ptext26 175E                                             __ptext18 1A4A  
                                           __ptext35 1B5E                                             __ptext27 15EE  
                                           __ptext19 0A58                                             __ptext36 191A  
                                           __ptext28 14C0                                             __ptext29 1670  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0660                                        __size_of_atol 00F4  
                                      __size_of_main 00D8                                        strmatch@match 0024  
                                      __size_of_init 0012                          powerPulseCheck@mcpHFoutLast 004B  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                       __size_of_initInterruptsClear 004C                          powerPulseCheck@mcpLFoutLast 004A  
                                           int$flags 004D                                             atol@sign 0027  
                  __end_of_com_command_setEnergyUsed 1A4A                              __size_of_communications 00BE  
                                           _strmatch 1AB2                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 00BB                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0032  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0036  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0044                                         _timerCountLF 0064  
                                   ___lldiv@dividend 001F                        communications@no_more_to_send 00BD  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 141A                            __size_of_SPI_receive_data 0028  
                                           ultoa@buf 002C                                             ultoa@val 002E  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                   ___lldiv@quotient 0027                                         _process_data 1A4A  
                                  _SPI_transmit_wait 0049                                __size_of_SPISlaveInit 0050  
                          communications@send_buffer 007D                     __size_of_process_data_parameters 02D6  
                                  __CFG_T3CMX$PORTC0 000000                              __end_of_powerPulseCheck 0A58  
                               ?_resetCommunications 00B5                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0023                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 0056                            ?_command_builder_add_char 0013  
