

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Apr 20 01:54:04 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELAbits	set	3896
    52  0000                     _ANSELB	set	3897
    53  0000                     _ANSELBbits	set	3897
    54  0000                     _ANSELC	set	3898
    55  0000                     _ADCON0bits	set	4034
    56  0000                     _INTCON	set	4082
    57  0000                     _INTCON2	set	4081
    58  0000                     _INTCON3	set	4080
    59  0000                     _INTCONbits	set	4082
    60  0000                     _IPR1	set	3999
    61  0000                     _IPR2	set	4002
    62  0000                     _IPR3	set	4005
    63  0000                     _IPR4	set	3964
    64  0000                     _IPR5	set	3967
    65  0000                     _LATAbits	set	3977
    66  0000                     _LATBbits	set	3978
    67  0000                     _LATCbits	set	3979
    68  0000                     _OSCCON2bits	set	4050
    69  0000                     _OSCCONbits	set	4051
    70  0000                     _OSCTUNEbits	set	3995
    71  0000                     _PIE1	set	3997
    72  0000                     _PIE2	set	4000
    73  0000                     _PIE3	set	4003
    74  0000                     _PIE4	set	3962
    75  0000                     _PIE5	set	3965
    76  0000                     _PIR1	set	3998
    77  0000                     _PIR2	set	4001
    78  0000                     _PIR3	set	4004
    79  0000                     _PIR4	set	3963
    80  0000                     _PIR5	set	3966
    81  0000                     _PORTAbits	set	3968
    82  0000                     _PORTBbits	set	3969
    83  0000                     _PORTCbits	set	3970
    84  0000                     _RCONbits	set	4048
    85  0000                     _SSP2BUF	set	3951
    86  0000                     _SSP2CON1bits	set	3948
    87  0000                     _SSP2CON3	set	3945
    88  0000                     _SSP2CON3bits	set	3945
    89  0000                     _SSP2STATbits	set	3949
    90  0000                     _T0CONbits	set	4053
    91  0000                     _TMR0H	set	4055
    92  0000                     _TMR0L	set	4054
    93  0000                     _TRISAbits	set	3986
    94  0000                     _TRISBbits	set	3987
    95  0000                     _TRISCbits	set	3988
    96                           
    97                           	psect	smallconst
    98  000600                     __psmallconst:
    99                           	opt stack 0
   100  000600  00                 	db	0
   101  000601                     STR_3:
   102  000601  43                 	db	67	;'C'
   103  000602  61                 	db	97	;'a'
   104  000603  6C                 	db	108	;'l'
   105  000604  69                 	db	105	;'i'
   106  000605  62                 	db	98	;'b'
   107  000606  72                 	db	114	;'r'
   108  000607  61                 	db	97	;'a'
   109  000608  74                 	db	116	;'t'
   110  000609  69                 	db	105	;'i'
   111  00060A  6F                 	db	111	;'o'
   112  00060B  6E                 	db	110	;'n'
   113  00060C  00                 	db	0
   114  00060D                     STR_21:
   115  00060D  50                 	db	80	;'P'
   116  00060E  53                 	db	83	;'S'
   117  00060F  56                 	db	86	;'V'
   118  000610  65                 	db	101	;'e'
   119  000611  72                 	db	114	;'r'
   120  000612  73                 	db	115	;'s'
   121  000613  69                 	db	105	;'i'
   122  000614  6F                 	db	111	;'o'
   123  000615  6E                 	db	110	;'n'
   124  000616  00                 	db	0
   125  000617                     STR_18:
   126  000617  45                 	db	69	;'E'
   127  000618  6E                 	db	110	;'n'
   128  000619  55                 	db	85	;'U'
   129  00061A  73                 	db	115	;'s'
   130  00061B  65                 	db	101	;'e'
   131  00061C  64                 	db	100	;'d'
   132  00061D  00                 	db	0
   133  00061E                     STR_19:
   134  00061E  56                 	db	86	;'V'
   135  00061F  6F                 	db	111	;'o'
   136  000620  6C                 	db	108	;'l'
   137  000621  74                 	db	116	;'t'
   138  000622  73                 	db	115	;'s'
   139  000623  00                 	db	0
   140  000624                     STR_17:
   141  000624  57                 	db	87	;'W'
   142  000625  61                 	db	97	;'a'
   143  000626  74                 	db	116	;'t'
   144  000627  74                 	db	116	;'t'
   145  000628  73                 	db	115	;'s'
   146  000629  00                 	db	0
   147  00062A                     STR_6:
   148  00062A  4C                 	db	76	;'L'
   149  00062B  45                 	db	69	;'E'
   150  00062C  44                 	db	68	;'D'
   151  00062D  42                 	db	66	;'B'
   152  00062E  00                 	db	0
   153  00062F                     STR_5:
   154  00062F  44                 	db	68	;'D'
   155  000630  61                 	db	97	;'a'
   156  000631  74                 	db	116	;'t'
   157  000632  61                 	db	97	;'a'
   158  000633  00                 	db	0
   159  000634                     STR_4:
   160  000634  52                 	db	82	;'R'
   161  000635  65                 	db	101	;'e'
   162  000636  61                 	db	97	;'a'
   163  000637  64                 	db	100	;'d'
   164  000638  00                 	db	0
   165  000639                     STR_15:
   166  000639  43                 	db	67	;'C'
   167  00063A  6F                 	db	111	;'o'
   168  00063B  6E                 	db	110	;'n'
   169  00063C  66                 	db	102	;'f'
   170  00063D  00                 	db	0
   171  00063E                     STR_20:
   172  00063E  41                 	db	65	;'A'
   173  00063F  6D                 	db	109	;'m'
   174  000640  70                 	db	112	;'p'
   175  000641  73                 	db	115	;'s'
   176  000642  00                 	db	0
   177  000643  32                 	db	50	;'2'
   178  000644  32                 	db	50	;'2'
   179  000645  32                 	db	50	;'2'
   180  000646  00                 	db	0
   181  000647  33                 	db	51	;'3'
   182  000648  33                 	db	51	;'3'
   183  000649  33                 	db	51	;'3'
   184  00064A  00                 	db	0
   185  00064B                     STR_39:
   186  00064B  34                 	db	52	;'4'
   187  00064C  34                 	db	52	;'4'
   188  00064D  34                 	db	52	;'4'
   189  00064E  00                 	db	0
   190  00064F                     STR_1:
   191  00064F  45                 	db	69	;'E'
   192  000650  4E                 	db	78	;'N'
   193  000651  44                 	db	68	;'D'
   194  000652  00                 	db	0
   195  000653                     STR_10:
   196  000653  4F                 	db	79	;'O'
   197  000654  66                 	db	102	;'f'
   198  000655  66                 	db	102	;'f'
   199  000656  00                 	db	0
   200  000657                     STR_2:
   201  000657  53                 	db	83	;'S'
   202  000658  65                 	db	101	;'e'
   203  000659  74                 	db	116	;'t'
   204  00065A  00                 	db	0
   205  00065B                     STR_7:
   206  00065B  4F                 	db	79	;'O'
   207  00065C  6E                 	db	110	;'n'
   208  00065D  00                 	db	0
   209  0000                     
   210                           ; #config settings
   211  00065E  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           	psect	cinit
   214  0014AC                     __pcinit:
   215                           	opt stack 0
   216  0014AC                     start_initialization:
   217                           	opt stack 0
   218  0014AC                     __initialization:
   219                           	opt stack 0
   220                           
   221                           ; Clear objects allocated to BANK0 (84 bytes)
   222  0014AC  EE00  F060         	lfsr	0,__pbssBANK0
   223  0014B0  0E54               	movlw	84
   224  0014B2                     clear_0:
   225  0014B2  6AEE               	clrf	postinc0,c
   226  0014B4  06E8               	decf	wreg,f,c
   227  0014B6  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (21 bytes)
   230  0014B8  EE00  F034         	lfsr	0,__pbssCOMRAM
   231  0014BC  0E15               	movlw	21
   232  0014BE                     clear_1:
   233  0014BE  6AEE               	clrf	postinc0,c
   234  0014C0  06E8               	decf	wreg,f,c
   235  0014C2  E1FD               	bnz	clear_1
   236  0014C4                     end_of_initialization:
   237                           	opt stack 0
   238  0014C4                     __end_of__initialization:
   239                           	opt stack 0
   240  0014C4  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241  0014C6  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242  0014C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   243  0014CA  6EF8               	movwf	tblptru,c
   244  0014CC  0100               	movlb	0
   245  0014CE  EF80  F008         	goto	_main	;jump to C main() function
   246                           tblptru	equ	0xFF8
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           
   250                           	psect	bssCOMRAM
   251  000034                     __pbssCOMRAM:
   252                           	opt stack 0
   253  000034                     _meterEnergyUsed:
   254                           	opt stack 0
   255  000034                     	ds	2
   256  000036                     _meterWatts:
   257                           	opt stack 0
   258  000036                     	ds	2
   259  000038                     resetCommunications@commState:
   260                           	opt stack 0
   261  000038                     	ds	2
   262  00003A                     _SPI_transmit_wait:
   263                           	opt stack 0
   264  00003A                     	ds	1
   265  00003B                     communications@end_of_transmission_received:
   266                           	opt stack 0
   267  00003B                     	ds	1
   268  00003C                     communications@last_state_active:
   269                           	opt stack 0
   270  00003C                     	ds	1
   271  00003D                     communications@receive_current_state:
   272                           	opt stack 0
   273  00003D                     	ds	1
   274  00003E                     powerPulseCheck@mcpHFoutLast:
   275                           	opt stack 0
   276  00003E                     	ds	1
   277  00003F                     powerPulseCheck@mcpLFoutLast:
   278                           	opt stack 0
   279  00003F                     	ds	1
   280  000040                     receive_data@my_status:
   281                           	opt stack 0
   282  000040                     	ds	1
   283  000041                     _timerCountHF:
   284                           	opt stack 0
   285  000041                     	ds	4
   286  000045                     _timerCountLF:
   287                           	opt stack 0
   288  000045                     	ds	4
   289                           tblptru	equ	0xFF8
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bssBANK0
   294  000060                     __pbssBANK0:
   295                           	opt stack 0
   296  000060                     communications@receive_buffer:
   297                           	opt stack 0
   298  000060                     	ds	42
   299  00008A                     communications@send_buffer:
   300                           	opt stack 0
   301  00008A                     	ds	42
   302                           tblptru	equ	0xFF8
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           
   306                           	psect	cstackBANK0
   307  0000B4                     __pcstackBANK0:
   308                           	opt stack 0
   309  0000B4                     process_data@parameters:
   310                           	opt stack 0
   311                           
   312                           ; 50 bytes @ 0x0
   313  0000B4                     	ds	50
   314  0000E6                     process_data@end_of_transmission_received:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x32
   318  0000E6                     	ds	1
   319                           tblptru	equ	0xFF8
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt stack 0
   326  000001                     ??_Timer0_ISR:
   327  000001                     
   328                           ; 1 bytes @ 0x0
   329  000001                     	ds	14
   330  00000F                     ?_strcmp2:
   331                           	opt stack 0
   332  00000F                     ?___wmul:
   333                           	opt stack 0
   334  00000F                     ?___lwdiv:
   335                           	opt stack 0
   336  00000F                     ?___lwmod:
   337                           	opt stack 0
   338  00000F                     ?___lldiv:
   339                           	opt stack 0
   340  00000F                     SPI_send_data@data:
   341                           	opt stack 0
   342  00000F                     delayMS10@count:
   343                           	opt stack 0
   344  00000F                     command_builder_add_char@send_buffer:
   345                           	opt stack 0
   346  00000F                     strcmp2@a:
   347                           	opt stack 0
   348  00000F                     SPI_receive_data@data:
   349                           	opt stack 0
   350  00000F                     ___wmul@multiplier:
   351                           	opt stack 0
   352  00000F                     ___lwdiv@dividend:
   353                           	opt stack 0
   354  00000F                     ___lwmod@dividend:
   355                           	opt stack 0
   356  00000F                     ___lldiv@dividend:
   357                           	opt stack 0
   358                           
   359                           ; 4 bytes @ 0xE
   360  00000F                     	ds	1
   361  000010                     SPI_send_data@sendGood:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0xF
   365  000010                     	ds	1
   366  000011                     ??_delayMS10:
   367  000011                     command_builder_add_char@data:
   368                           	opt stack 0
   369  000011                     SPI_receive_data@recvGood:
   370                           	opt stack 0
   371  000011                     send_data@send_buffer:
   372                           	opt stack 0
   373  000011                     strcmp2@b:
   374                           	opt stack 0
   375  000011                     ___wmul@multiplicand:
   376                           	opt stack 0
   377  000011                     ___lwdiv@divisor:
   378                           	opt stack 0
   379  000011                     ___lwmod@divisor:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  000011                     	ds	1
   384  000012                     ??_command_builder_add_char:
   385  000012                     delayMS10@inx:
   386                           	opt stack 0
   387  000012                     receive_data@receive_buffer:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x11
   391  000012                     	ds	1
   392  000013                     ??_send_data:
   393  000013                     ??_strcmp2:
   394  000013                     ___lwmod@counter:
   395                           	opt stack 0
   396  000013                     command_builder_add_string@send_buffer:
   397                           	opt stack 0
   398  000013                     ___wmul@product:
   399                           	opt stack 0
   400  000013                     ___lwdiv@quotient:
   401                           	opt stack 0
   402  000013                     ___lldiv@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x12
   406  000013                     	ds	1
   407  000014                     ??_initMCPFout:
   408  000014                     ??_receive_data:
   409                           
   410                           ; 0 bytes @ 0x13
   411  000014                     	ds	1
   412  000015                     receive_data@data:
   413                           	opt stack 0
   414  000015                     send_data@send_end:
   415                           	opt stack 0
   416  000015                     ___lwdiv@counter:
   417                           	opt stack 0
   418  000015                     process_data_parameterize@parameters:
   419                           	opt stack 0
   420  000015                     command_builder_add_string@data_string:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x14
   424  000015                     	ds	1
   425  000016                     strcmp2@match:
   426                           	opt stack 0
   427  000016                     utoa@buf:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x15
   431  000016                     	ds	1
   432  000017                     ??_command_builder_add_string:
   433  000017                     process_data_parameterize@buffer_to_parameterize:
   434                           	opt stack 0
   435  000017                     ___lldiv@quotient:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0x16
   439  000017                     	ds	1
   440  000018                     strcmp2@inx:
   441                           	opt stack 0
   442  000018                     utoa@val:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x17
   446  000018                     	ds	1
   447  000019                     ??_process_data_parameterize:
   448  000019                     command_builder_add_string@inx:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x18
   452  000019                     	ds	1
   453  00001A                     strmatch@a:
   454                           	opt stack 0
   455  00001A                     utoa@base:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x19
   459  00001A                     	ds	1
   460  00001B                     ___lldiv@counter:
   461                           	opt stack 0
   462  00001B                     command_builder1@send_buffer:
   463                           	opt stack 0
   464  00001B                     command_builder3@send_buffer:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x1A
   468  00001B                     	ds	1
   469  00001C                     powerPulseCheck@meterWattsLF:
   470                           	opt stack 0
   471  00001C                     process_data_parameterize@inx:
   472                           	opt stack 0
   473  00001C                     strmatch@b:
   474                           	opt stack 0
   475  00001C                     utoa@v:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x1B
   479  00001C                     	ds	1
   480  00001D                     command_builder1@data1:
   481                           	opt stack 0
   482  00001D                     command_builder3@data1:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x1C
   486  00001D                     	ds	1
   487  00001E                     powerPulseCheck@checkWattsHFvsLF:
   488                           	opt stack 0
   489  00001E                     process_data_parameterize@parameter_index:
   490                           	opt stack 0
   491  00001E                     utoa@c:
   492                           	opt stack 0
   493  00001E                     strmatch@result:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x1D
   497  00001E                     	ds	1
   498  00001F                     process_data_parameterize@parameter_position:
   499                           	opt stack 0
   500  00001F                     powerPulseCheck@meterWattsHF:
   501                           	opt stack 0
   502  00001F                     command_builder3@data2:
   503                           	opt stack 0
   504  00001F                     send_end_of_transmission@send_buffer:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1E
   508  00001F                     	ds	1
   509  000020                     strmatch@match:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1F
   513  000020                     	ds	1
   514  000021                     command_builder3@data3:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x20
   518  000021                     	ds	2
   519  000023                     process_data_parameters@parameters:
   520                           	opt stack 0
   521  000023                     com_command_setPower@send_buffer:
   522                           	opt stack 0
   523  000023                     com_command_setEnergyUsed@send_buffer:
   524                           	opt stack 0
   525  000023                     com_command_setVersion@send_buffer:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x22
   529  000023                     	ds	2
   530  000025                     process_data_parameters@send_buffer:
   531                           	opt stack 0
   532  000025                     com_command_setPower@temp:
   533                           	opt stack 0
   534  000025                     com_command_setEnergyUsed@temp:
   535                           	opt stack 0
   536                           
   537                           ; 7 bytes @ 0x24
   538  000025                     	ds	2
   539  000027                     process_data_parameters@end_of_transmission_received:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x26
   543  000027                     	ds	1
   544  000028                     process_data@receive_buffer:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x27
   548  000028                     	ds	2
   549  00002A                     process_data@send_buffer:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x29
   553  00002A                     	ds	2
   554  00002C                     resetCommunications@send_buffer:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2B
   558  00002C                     	ds	2
   559  00002E                     ??_resetCommunications:
   560                           
   561                           ; 0 bytes @ 0x2D
   562  00002E                     	ds	2
   563  000030                     communications@no_more_to_send:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x2F
   567  000030                     	ds	1
   568  000031                     communications@firstTime:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x30
   572  000031                     	ds	1
   573  000032                     main@inx:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x31
   577  000032                     	ds	2
   578                           tblptru	equ	0xFF8
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 79 in file "Current_Sense_Main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  inx             2   49[COMRAM] int 
   592 ;; Return value:  Size  Location     Type
   593 ;;		None               void
   594 ;; Registers used:
   595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         2       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         2       0       0       0       0       0       0
   605 ;;Total ram usage:        2 bytes
   606 ;; Hardware stack levels required when called:    8
   607 ;; This function calls:
   608 ;;		_communications
   609 ;;		_delayMS10
   610 ;;		_init
   611 ;;		_initTimer
   612 ;;		_powerPulseCheck
   613 ;;		_pulseFoutPassThru
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text0
   620  001100                     __ptext0:
   621                           	opt stack 0
   622  001100                     _main:
   623                           	opt stack 23
   624                           
   625                           ;Current_Sense_Main.c: 81: init( );
   626                           
   627                           ;incstack = 0
   628  001100  ECD4  F00A         	call	_init	;wreg free
   629                           
   630                           ;Current_Sense_Main.c: 83: for ( int inx = 0; inx < 10; inx++ )
   631  001104  0E00               	movlw	0
   632  001106  6E33               	movwf	main@inx+1,c
   633  001108  0E00               	movlw	0
   634  00110A  6E32               	movwf	main@inx,c
   635  00110C                     l2248:
   636  00110C  BE33               	btfsc	main@inx+1,7,c
   637  00110E  D006               	goto	l109
   638  001110  5033               	movf	main@inx+1,w,c
   639  001112  E115               	bnz	l2260
   640  001114  0E0A               	movlw	10
   641  001116  5C32               	subwf	main@inx,w,c
   642  001118  B0D8               	btfsc	status,0,c
   643  00111A  D011               	goto	l2260
   644  00111C                     l109:
   645                           
   646                           ;Current_Sense_Main.c: 84: {
   647                           ;Current_Sense_Main.c: 85: LATBbits.LATB4 = 1;
   648  00111C  888A               	bsf	3978,4,c	;volatile
   649                           
   650                           ;Current_Sense_Main.c: 86: delayMS10( 10 );
   651  00111E  0E00               	movlw	0
   652  001120  6E10               	movwf	delayMS10@count+1,c
   653  001122  0E0A               	movlw	10
   654  001124  6E0F               	movwf	delayMS10@count,c
   655  001126  ECF8  F009         	call	_delayMS10	;wreg free
   656                           
   657                           ;Current_Sense_Main.c: 87: LATBbits.LATB4 = 0;
   658  00112A  988A               	bcf	3978,4,c	;volatile
   659                           
   660                           ;Current_Sense_Main.c: 88: delayMS10( 10 );
   661  00112C  0E00               	movlw	0
   662  00112E  6E10               	movwf	delayMS10@count+1,c
   663  001130  0E0A               	movlw	10
   664  001132  6E0F               	movwf	delayMS10@count,c
   665  001134  ECF8  F009         	call	_delayMS10	;wreg free
   666  001138  4A32               	infsnz	main@inx,f,c
   667  00113A  2A33               	incf	main@inx+1,f,c
   668  00113C  D7E7               	goto	l2248
   669  00113E                     l2260:
   670                           
   671                           ;Current_Sense_Main.c: 89: }
   672                           ;Current_Sense_Main.c: 91: initTimer( );
   673  00113E  ECB1  F00A         	call	_initTimer	;wreg free
   674                           
   675                           ;Current_Sense_Main.c: 119: communications( 1 );
   676  001142  0E01               	movlw	1
   677  001144  EC20  F007         	call	_communications
   678  001148                     l2264:
   679                           
   680                           ;Current_Sense_Main.c: 129: {
   681                           ;Current_Sense_Main.c: 130: communications( 0 );
   682  001148  0E00               	movlw	0
   683  00114A  EC20  F007         	call	_communications
   684                           
   685                           ;Current_Sense_Main.c: 131: pulseFoutPassThru( );
   686  00114E  ECDD  F00A         	call	_pulseFoutPassThru	;wreg free
   687                           
   688                           ;Current_Sense_Main.c: 132: powerPulseCheck( );
   689  001152  ECB1  F005         	call	_powerPulseCheck	;wreg free
   690  001156  D7F8               	goto	l2264
   691  001158                     __end_of_main:
   692                           	opt stack 0
   693                           tblptru	equ	0xFF8
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           status	equ	0xFD8
   697                           
   698 ;; *************** function _pulseFoutPassThru *****************
   699 ;; Defined at:
   700 ;;		line 169 in file "Current_Sense_Main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		None
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         0       0       0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text1
   729  0015BA                     __ptext1:
   730                           	opt stack 0
   731  0015BA                     _pulseFoutPassThru:
   732                           	opt stack 29
   733                           
   734                           ;Current_Sense_Main.c: 173: if ( PORTAbits.RA1 == 1 )
   735                           
   736                           ;incstack = 0
   737  0015BA  A280               	btfss	3968,1,c	;volatile
   738  0015BC  D002               	goto	l117
   739                           
   740                           ;Current_Sense_Main.c: 174: {
   741                           ;Current_Sense_Main.c: 175: LATAbits.LATA0 = 1;
   742  0015BE  8089               	bsf	3977,0,c	;volatile
   743                           
   744                           ;Current_Sense_Main.c: 184: }
   745  0015C0  0012               	return	
   746  0015C2                     l117:
   747                           
   748                           ;Current_Sense_Main.c: 185: else
   749                           ;Current_Sense_Main.c: 186: {
   750                           ;Current_Sense_Main.c: 187: LATAbits.LATA0 = 0;
   751  0015C2  9089               	bcf	3977,0,c	;volatile
   752  0015C4  0012               	return	
   753  0015C6                     __end_of_pulseFoutPassThru:
   754                           	opt stack 0
   755                           tblptru	equ	0xFF8
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           status	equ	0xFD8
   759                           
   760 ;; *************** function _powerPulseCheck *****************
   761 ;; Defined at:
   762 ;;		line 207 in file "Current_Sense_Main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  meterWattsHF    2   30[COMRAM] int 
   767 ;;  meterWattsLF    2   27[COMRAM] int 
   768 ;;  checkWattsHF    1   29[COMRAM] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;		None               void
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   778 ;;      Params:         0       0       0       0       0       0       0
   779 ;;      Locals:         5       0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0
   781 ;;      Totals:         5       0       0       0       0       0       0
   782 ;;Total ram usage:        5 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    2
   785 ;; This function calls:
   786 ;;		___lldiv
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text2
   793  000B62                     __ptext2:
   794                           	opt stack 0
   795  000B62                     _powerPulseCheck:
   796                           	opt stack 28
   797                           
   798                           ;Current_Sense_Main.c: 222: int meterWattsHF = 0;
   799                           
   800                           ;incstack = 0
   801  000B62  0E00               	movlw	0
   802  000B64  6E20               	movwf	powerPulseCheck@meterWattsHF+1,c
   803  000B66  0E00               	movlw	0
   804  000B68  6E1F               	movwf	powerPulseCheck@meterWattsHF,c
   805                           
   806                           ;Current_Sense_Main.c: 223: int meterWattsLF = 0;
   807  000B6A  0E00               	movlw	0
   808  000B6C  6E1D               	movwf	powerPulseCheck@meterWattsLF+1,c
   809  000B6E  0E00               	movlw	0
   810  000B70  6E1C               	movwf	powerPulseCheck@meterWattsLF,c
   811                           
   812                           ;Current_Sense_Main.c: 225: static bool mcpHFoutLast = 0;
   813                           ;Current_Sense_Main.c: 226: static bool mcpLFoutLast = 0;
   814                           ;Current_Sense_Main.c: 227: bool checkWattsHFvsLF = 0;
   815  000B72  0E00               	movlw	0
   816  000B74  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   817                           
   818                           ;Current_Sense_Main.c: 229: if ( PORTCbits.RC2 == 1 )
   819  000B76  A482               	btfss	3970,2,c	;volatile
   820  000B78  D026               	goto	l2212
   821                           
   822                           ;Current_Sense_Main.c: 230: {
   823                           ;Current_Sense_Main.c: 231: if ( mcpHFoutLast == 0 )
   824  000B7A  503E               	movf	powerPulseCheck@mcpHFoutLast,w,c
   825  000B7C  A4D8               	btfss	status,2,c
   826  000B7E  D025               	goto	l2214
   827                           
   828                           ;Current_Sense_Main.c: 232: {
   829                           ;Current_Sense_Main.c: 233: mcpHFoutLast = 1;
   830  000B80  0E01               	movlw	1
   831  000B82  6E3E               	movwf	powerPulseCheck@mcpHFoutLast,c
   832                           
   833                           ;Current_Sense_Main.c: 238: meterWattsHF = 1 / timerCountHF;
   834  000B84  0E01               	movlw	1
   835  000B86  6E0F               	movwf	___lldiv@dividend,c
   836  000B88  0E00               	movlw	0
   837  000B8A  6E10               	movwf	___lldiv@dividend+1,c
   838  000B8C  0E00               	movlw	0
   839  000B8E  6E11               	movwf	___lldiv@dividend+2,c
   840  000B90  0E00               	movlw	0
   841  000B92  6E12               	movwf	___lldiv@dividend+3,c
   842  000B94  C041  F013         	movff	_timerCountHF,___lldiv@divisor	;volatile
   843  000B98  C042  F014         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
   844  000B9C  C043  F015         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
   845  000BA0  C044  F016         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
   846  000BA4  EC01  F008         	call	___lldiv	;wreg free
   847  000BA8  C00F  F01F         	movff	?___lldiv,powerPulseCheck@meterWattsHF
   848  000BAC  C010  F020         	movff	?___lldiv+1,powerPulseCheck@meterWattsHF+1
   849                           
   850                           ;Current_Sense_Main.c: 239: checkWattsHFvsLF = 1;
   851  000BB0  0E01               	movlw	1
   852  000BB2  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   853                           
   854                           ;Current_Sense_Main.c: 240: timerCountHF = 0;
   855  000BB4  0E00               	movlw	0
   856  000BB6  6E41               	movwf	_timerCountHF,c	;volatile
   857  000BB8  0E00               	movlw	0
   858  000BBA  6E42               	movwf	_timerCountHF+1,c	;volatile
   859  000BBC  0E00               	movlw	0
   860  000BBE  6E43               	movwf	_timerCountHF+2,c	;volatile
   861  000BC0  0E00               	movlw	0
   862  000BC2  6E44               	movwf	_timerCountHF+3,c	;volatile
   863                           
   864                           ;Current_Sense_Main.c: 241: }
   865                           ;Current_Sense_Main.c: 242: }
   866  000BC4  D002               	goto	l2214
   867  000BC6                     l2212:
   868                           
   869                           ;Current_Sense_Main.c: 243: else
   870                           ;Current_Sense_Main.c: 244: {
   871                           ;Current_Sense_Main.c: 245: mcpHFoutLast = 0;
   872  000BC6  0E00               	movlw	0
   873  000BC8  6E3E               	movwf	powerPulseCheck@mcpHFoutLast,c
   874  000BCA                     l2214:
   875                           
   876                           ;Current_Sense_Main.c: 246: }
   877                           ;Current_Sense_Main.c: 249: if ( PORTAbits.RA1 == 1 )
   878  000BCA  A280               	btfss	3968,1,c	;volatile
   879  000BCC  D029               	goto	l2228
   880                           
   881                           ;Current_Sense_Main.c: 250: {
   882                           ;Current_Sense_Main.c: 251: if ( mcpLFoutLast == 0 )
   883  000BCE  503F               	movf	powerPulseCheck@mcpLFoutLast,w,c
   884  000BD0  A4D8               	btfss	status,2,c
   885  000BD2  D026               	goto	l2228
   886                           
   887                           ;Current_Sense_Main.c: 252: {
   888                           ;Current_Sense_Main.c: 253: mcpLFoutLast = 1;
   889  000BD4  0E01               	movlw	1
   890  000BD6  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
   891                           
   892                           ;Current_Sense_Main.c: 258: meterWattsLF = 5 / timerCountLF;
   893  000BD8  0E05               	movlw	5
   894  000BDA  6E0F               	movwf	___lldiv@dividend,c
   895  000BDC  0E00               	movlw	0
   896  000BDE  6E10               	movwf	___lldiv@dividend+1,c
   897  000BE0  0E00               	movlw	0
   898  000BE2  6E11               	movwf	___lldiv@dividend+2,c
   899  000BE4  0E00               	movlw	0
   900  000BE6  6E12               	movwf	___lldiv@dividend+3,c
   901  000BE8  C045  F013         	movff	_timerCountLF,___lldiv@divisor	;volatile
   902  000BEC  C046  F014         	movff	_timerCountLF+1,___lldiv@divisor+1	;volatile
   903  000BF0  C047  F015         	movff	_timerCountLF+2,___lldiv@divisor+2	;volatile
   904  000BF4  C048  F016         	movff	_timerCountLF+3,___lldiv@divisor+3	;volatile
   905  000BF8  EC01  F008         	call	___lldiv	;wreg free
   906  000BFC  C00F  F01C         	movff	?___lldiv,powerPulseCheck@meterWattsLF
   907  000C00  C010  F01D         	movff	?___lldiv+1,powerPulseCheck@meterWattsLF+1
   908                           
   909                           ;Current_Sense_Main.c: 260: meterEnergyUsed += 5;
   910  000C04  0E05               	movlw	5
   911  000C06  2634               	addwf	_meterEnergyUsed,f,c
   912  000C08  0E00               	movlw	0
   913  000C0A  2235               	addwfc	_meterEnergyUsed+1,f,c
   914                           
   915                           ;Current_Sense_Main.c: 262: checkWattsHFvsLF = 1;
   916  000C0C  0E01               	movlw	1
   917  000C0E  6E1E               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   918                           
   919                           ;Current_Sense_Main.c: 263: timerCountLF = 0;
   920  000C10  0E00               	movlw	0
   921  000C12  6E45               	movwf	_timerCountLF,c	;volatile
   922  000C14  0E00               	movlw	0
   923  000C16  6E46               	movwf	_timerCountLF+1,c	;volatile
   924  000C18  0E00               	movlw	0
   925  000C1A  6E47               	movwf	_timerCountLF+2,c	;volatile
   926  000C1C  0E00               	movlw	0
   927  000C1E  6E48               	movwf	_timerCountLF+3,c	;volatile
   928  000C20                     l2228:
   929                           
   930                           ;Current_Sense_Main.c: 264: }
   931                           ;Current_Sense_Main.c: 265: }
   932                           ;Current_Sense_Main.c: 272: if ( checkWattsHFvsLF == 1 )
   933  000C20  041E               	decf	powerPulseCheck@checkWattsHFvsLF,w,c
   934  000C22  A4D8               	btfss	status,2,c
   935  000C24  0012               	return	
   936                           
   937                           ;Current_Sense_Main.c: 273: {
   938                           ;Current_Sense_Main.c: 274: if ( meterWattsHF <= -1 )
   939  000C26  AE20               	btfss	powerPulseCheck@meterWattsHF+1,7,c
   940  000C28  D005               	goto	l135
   941                           
   942                           ;Current_Sense_Main.c: 275: {
   943                           ;Current_Sense_Main.c: 276: meterWatts = meterWattsHF;
   944  000C2A  C01F  F036         	movff	powerPulseCheck@meterWattsHF,_meterWatts
   945  000C2E  C020  F037         	movff	powerPulseCheck@meterWattsHF+1,_meterWatts+1
   946                           
   947                           ;Current_Sense_Main.c: 277: }
   948  000C32  0012               	return	
   949  000C34                     l135:
   950                           
   951                           ;Current_Sense_Main.c: 278: else
   952                           ;Current_Sense_Main.c: 279: {
   953                           ;Current_Sense_Main.c: 280: meterWatts = meterWattsLF;
   954  000C34  C01C  F036         	movff	powerPulseCheck@meterWattsLF,_meterWatts
   955  000C38  C01D  F037         	movff	powerPulseCheck@meterWattsLF+1,_meterWatts+1
   956  000C3C  0012               	return	
   957  000C3E                     __end_of_powerPulseCheck:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           status	equ	0xFD8
   963                           
   964 ;; *************** function ___lldiv *****************
   965 ;; Defined at:
   966 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  dividend        4   14[COMRAM] unsigned long 
   969 ;;  divisor         4   18[COMRAM] unsigned long 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  quotient        4   22[COMRAM] unsigned long 
   972 ;;  counter         1   26[COMRAM] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  4   14[COMRAM] unsigned long 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   982 ;;      Params:         8       0       0       0       0       0       0
   983 ;;      Locals:         5       0       0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0
   985 ;;      Totals:        13       0       0       0       0       0       0
   986 ;;Total ram usage:       13 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_powerPulseCheck
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997  001002                     __ptext3:
   998                           	opt stack 0
   999  001002                     ___lldiv:
  1000                           	opt stack 28
  1001                           
  1002                           ;incstack = 0
  1003  001002  0E00               	movlw	0
  1004  001004  6E17               	movwf	___lldiv@quotient,c
  1005  001006  0E00               	movlw	0
  1006  001008  6E18               	movwf	___lldiv@quotient+1,c
  1007  00100A  0E00               	movlw	0
  1008  00100C  6E19               	movwf	___lldiv@quotient+2,c
  1009  00100E  0E00               	movlw	0
  1010  001010  6E1A               	movwf	___lldiv@quotient+3,c
  1011  001012  5013               	movf	___lldiv@divisor,w,c
  1012  001014  1014               	iorwf	___lldiv@divisor+1,w,c
  1013  001016  1015               	iorwf	___lldiv@divisor+2,w,c
  1014  001018  1016               	iorwf	___lldiv@divisor+3,w,c
  1015  00101A  B4D8               	btfsc	status,2,c
  1016  00101C  D02A               	goto	l774
  1017  00101E  0E01               	movlw	1
  1018  001020  6E1B               	movwf	___lldiv@counter,c
  1019  001022  D006               	goto	l2144
  1020  001024                     l2142:
  1021  001024  90D8               	bcf	status,0,c
  1022  001026  3613               	rlcf	___lldiv@divisor,f,c
  1023  001028  3614               	rlcf	___lldiv@divisor+1,f,c
  1024  00102A  3615               	rlcf	___lldiv@divisor+2,f,c
  1025  00102C  3616               	rlcf	___lldiv@divisor+3,f,c
  1026  00102E  2A1B               	incf	___lldiv@counter,f,c
  1027  001030                     l2144:
  1028  001030  AE16               	btfss	___lldiv@divisor+3,7,c
  1029  001032  D7F8               	goto	l2142
  1030  001034                     l2146:
  1031  001034  90D8               	bcf	status,0,c
  1032  001036  3617               	rlcf	___lldiv@quotient,f,c
  1033  001038  3618               	rlcf	___lldiv@quotient+1,f,c
  1034  00103A  3619               	rlcf	___lldiv@quotient+2,f,c
  1035  00103C  361A               	rlcf	___lldiv@quotient+3,f,c
  1036  00103E  5013               	movf	___lldiv@divisor,w,c
  1037  001040  5C0F               	subwf	___lldiv@dividend,w,c
  1038  001042  5014               	movf	___lldiv@divisor+1,w,c
  1039  001044  5810               	subwfb	___lldiv@dividend+1,w,c
  1040  001046  5015               	movf	___lldiv@divisor+2,w,c
  1041  001048  5811               	subwfb	___lldiv@dividend+2,w,c
  1042  00104A  5016               	movf	___lldiv@divisor+3,w,c
  1043  00104C  5812               	subwfb	___lldiv@dividend+3,w,c
  1044  00104E  A0D8               	btfss	status,0,c
  1045  001050  D009               	goto	l2154
  1046  001052  5013               	movf	___lldiv@divisor,w,c
  1047  001054  5E0F               	subwf	___lldiv@dividend,f,c
  1048  001056  5014               	movf	___lldiv@divisor+1,w,c
  1049  001058  5A10               	subwfb	___lldiv@dividend+1,f,c
  1050  00105A  5015               	movf	___lldiv@divisor+2,w,c
  1051  00105C  5A11               	subwfb	___lldiv@dividend+2,f,c
  1052  00105E  5016               	movf	___lldiv@divisor+3,w,c
  1053  001060  5A12               	subwfb	___lldiv@dividend+3,f,c
  1054  001062  8017               	bsf	___lldiv@quotient,0,c
  1055  001064                     l2154:
  1056  001064  90D8               	bcf	status,0,c
  1057  001066  3216               	rrcf	___lldiv@divisor+3,f,c
  1058  001068  3215               	rrcf	___lldiv@divisor+2,f,c
  1059  00106A  3214               	rrcf	___lldiv@divisor+1,f,c
  1060  00106C  3213               	rrcf	___lldiv@divisor,f,c
  1061  00106E  2E1B               	decfsz	___lldiv@counter,f,c
  1062  001070  D7E1               	goto	l2146
  1063  001072                     l774:
  1064  001072  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  1065  001076  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  1066  00107A  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  1067  00107E  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  1068  001082  0012               	return		;funcret
  1069  001084                     __end_of___lldiv:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           status	equ	0xFD8
  1075                           
  1076 ;; *************** function _initTimer *****************
  1077 ;; Defined at:
  1078 ;;		line 376 in file "Current_Sense_Main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1092 ;;      Params:         0       0       0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text4
  1107  001562                     __ptext4:
  1108                           	opt stack 0
  1109  001562                     _initTimer:
  1110                           	opt stack 29
  1111                           
  1112                           ;Current_Sense_Main.c: 379: T0CONbits.TMR0ON = 0;
  1113                           
  1114                           ;incstack = 0
  1115  001562  9ED5               	bcf	4053,7,c	;volatile
  1116                           
  1117                           ;Current_Sense_Main.c: 380: T0CONbits.T08BIT = 0;
  1118  001564  9CD5               	bcf	4053,6,c	;volatile
  1119                           
  1120                           ;Current_Sense_Main.c: 381: T0CONbits.T0CS = 0;
  1121  001566  9AD5               	bcf	4053,5,c	;volatile
  1122                           
  1123                           ;Current_Sense_Main.c: 382: T0CONbits.PSA = 0;
  1124  001568  96D5               	bcf	4053,3,c	;volatile
  1125                           
  1126                           ;Current_Sense_Main.c: 383: T0CONbits.T0PS = 0b001;
  1127  00156A  50D5               	movf	4053,w,c	;volatile
  1128  00156C  0BF8               	andlw	-8
  1129  00156E  0901               	iorlw	1
  1130  001570  6ED5               	movwf	4053,c	;volatile
  1131                           
  1132                           ;Current_Sense_Main.c: 385: INTCONbits.TMR0IE = 1;
  1133  001572  8AF2               	bsf	intcon,5,c	;volatile
  1134                           
  1135                           ;Current_Sense_Main.c: 386: INTCONbits.GIE = 1;
  1136  001574  8EF2               	bsf	intcon,7,c	;volatile
  1137                           
  1138                           ;Current_Sense_Main.c: 387: T0CONbits.TMR0ON = 1;
  1139  001576  8ED5               	bsf	4053,7,c	;volatile
  1140  001578  0012               	return		;funcret
  1141  00157A                     __end_of_initTimer:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           intcon	equ	0xFF2
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _init *****************
  1150 ;; Defined at:
  1151 ;;		line 300 in file "Current_Sense_Main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;		None               void
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1165 ;;      Params:         0       0       0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    3
  1172 ;; This function calls:
  1173 ;;		_initIO
  1174 ;;		_initInterruptsClear
  1175 ;;		_initMCPFout
  1176 ;;		_initOSC
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text5
  1183  0015A8                     __ptext5:
  1184                           	opt stack 0
  1185  0015A8                     _init:
  1186                           	opt stack 27
  1187                           
  1188                           ;Current_Sense_Main.c: 302: initOSC( );
  1189                           
  1190                           ;incstack = 0
  1191  0015A8  ECBD  F00A         	call	_initOSC	;wreg free
  1192                           
  1193                           ;Current_Sense_Main.c: 303: initIO( );
  1194  0015AC  EC8F  F00A         	call	_initIO	;wreg free
  1195                           
  1196                           ;Current_Sense_Main.c: 304: initInterruptsClear( );
  1197  0015B0  EC53  F009         	call	_initInterruptsClear	;wreg free
  1198                           
  1199                           ;Current_Sense_Main.c: 305: initMCPFout( );
  1200  0015B4  ECDC  F009         	call	_initMCPFout	;wreg free
  1201  0015B8  0012               	return	
  1202  0015BA                     __end_of_init:
  1203                           	opt stack 0
  1204                           tblptru	equ	0xFF8
  1205                           intcon	equ	0xFF2
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _initOSC *****************
  1211 ;; Defined at:
  1212 ;;		line 310 in file "Current_Sense_Main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, status,2
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1226 ;;      Params:         0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_init
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text6
  1241  00157A                     __ptext6:
  1242                           	opt stack 0
  1243  00157A                     _initOSC:
  1244                           	opt stack 28
  1245                           
  1246                           ;Current_Sense_Main.c: 313: OSCCONbits.IDLEN = 0;
  1247                           
  1248                           ;incstack = 0
  1249  00157A  9ED3               	bcf	4051,7,c	;volatile
  1250                           
  1251                           ;Current_Sense_Main.c: 314: OSCCONbits.IRCF = 0b111;
  1252  00157C  88D3               	bsf	4051,4,c	;volatile
  1253  00157E  8AD3               	bsf	4051,5,c	;volatile
  1254  001580  8CD3               	bsf	4051,6,c	;volatile
  1255                           
  1256                           ;Current_Sense_Main.c: 315: OSCCONbits.SCS = 0b11;
  1257  001582  0E03               	movlw	3
  1258  001584  12D3               	iorwf	4051,f,c	;volatile
  1259                           
  1260                           ;Current_Sense_Main.c: 317: OSCCON2bits.MFIOSEL = 0;
  1261  001586  98D2               	bcf	4050,4,c	;volatile
  1262                           
  1263                           ;Current_Sense_Main.c: 318: OSCCON2bits.SOSCGO = 0;
  1264  001588  96D2               	bcf	4050,3,c	;volatile
  1265                           
  1266                           ;Current_Sense_Main.c: 319: OSCCON2bits.PRISD = 0;
  1267  00158A  94D2               	bcf	4050,2,c	;volatile
  1268                           
  1269                           ;Current_Sense_Main.c: 321: OSCTUNEbits.INTSRC = 1;
  1270  00158C  8E9B               	bsf	3995,7,c	;volatile
  1271                           
  1272                           ;Current_Sense_Main.c: 322: OSCTUNEbits.PLLEN = 0;
  1273  00158E  9C9B               	bcf	3995,6,c	;volatile
  1274  001590  0012               	return	
  1275  001592                     __end_of_initOSC:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           intcon	equ	0xFF2
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _initMCPFout *****************
  1284 ;; Defined at:
  1285 ;;		line 393 in file "Current_Sense_Main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1299 ;;      Params:         0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0
  1301 ;;      Temps:          1       0       0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    2
  1306 ;; This function calls:
  1307 ;;		_delayMS10
  1308 ;; This function is called by:
  1309 ;;		_init
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text7
  1314  0013B8                     __ptext7:
  1315                           	opt stack 0
  1316  0013B8                     _initMCPFout:
  1317                           	opt stack 27
  1318                           
  1319                           ;Current_Sense_Main.c: 398: LATCbits.LATC6 = 0;
  1320                           
  1321                           ;incstack = 0
  1322  0013B8  9C8B               	bcf	3979,6,c	;volatile
  1323                           
  1324                           ;Current_Sense_Main.c: 399: _delay((unsigned long)((1)*(16000000/4000.0)));
  1325  0013BA  0E06               	movlw	6
  1326  0013BC  6E14               	movwf	??_initMCPFout& (0+255),c
  1327  0013BE  0E30               	movlw	48
  1328  0013C0                     u1507:
  1329  0013C0  2EE8               	decfsz	wreg,f,c
  1330  0013C2  D7FE               	goto	u1507
  1331  0013C4  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1332  0013C6  D7FC               	goto	u1507
  1333  0013C8  D000               	nop2	
  1334                           
  1335                           ;Current_Sense_Main.c: 401: LATCbits.LATC7 = 1;
  1336  0013CA  8E8B               	bsf	3979,7,c	;volatile
  1337                           
  1338                           ;Current_Sense_Main.c: 402: LATCbits.LATC5 = 1;
  1339  0013CC  8A8B               	bsf	3979,5,c	;volatile
  1340                           
  1341                           ;Current_Sense_Main.c: 403: LATCbits.LATC3 = 1;
  1342  0013CE  868B               	bsf	3979,3,c	;volatile
  1343                           
  1344                           ;Current_Sense_Main.c: 405: _delay((unsigned long)((1)*(16000000/4000.0)));
  1345  0013D0  0E06               	movlw	6
  1346  0013D2  6E14               	movwf	??_initMCPFout& (0+255),c
  1347  0013D4  0E30               	movlw	48
  1348  0013D6                     u1517:
  1349  0013D6  2EE8               	decfsz	wreg,f,c
  1350  0013D8  D7FE               	goto	u1517
  1351  0013DA  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1352  0013DC  D7FC               	goto	u1517
  1353  0013DE  D000               	nop2	
  1354                           
  1355                           ;Current_Sense_Main.c: 406: LATCbits.LATC6 = 1;
  1356  0013E0  8C8B               	bsf	3979,6,c	;volatile
  1357                           
  1358                           ;Current_Sense_Main.c: 407: delayMS10( 10 );
  1359  0013E2  0E00               	movlw	0
  1360  0013E4  6E10               	movwf	delayMS10@count+1,c
  1361  0013E6  0E0A               	movlw	10
  1362  0013E8  6E0F               	movwf	delayMS10@count,c
  1363  0013EA  ECF8  F009         	call	_delayMS10	;wreg free
  1364  0013EE  0012               	return	
  1365  0013F0                     __end_of_initMCPFout:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _delayMS10 *****************
  1374 ;; Defined at:
  1375 ;;		line 291 in file "Current_Sense_Main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  count           2   14[COMRAM] int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  inx             2   17[COMRAM] int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;		None               void
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1389 ;;      Params:         2       0       0       0       0       0       0
  1390 ;;      Locals:         2       0       0       0       0       0       0
  1391 ;;      Temps:          1       0       0       0       0       0       0
  1392 ;;      Totals:         5       0       0       0       0       0       0
  1393 ;;Total ram usage:        5 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;;		_initMCPFout
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text8
  1405  0013F0                     __ptext8:
  1406                           	opt stack 0
  1407  0013F0                     _delayMS10:
  1408                           	opt stack 27
  1409                           
  1410                           ;Current_Sense_Main.c: 293: for ( int inx = 0; inx < count; inx++ )
  1411                           
  1412                           ;incstack = 0
  1413  0013F0  0E00               	movlw	0
  1414  0013F2  6E13               	movwf	delayMS10@inx+1,c
  1415  0013F4  0E00               	movlw	0
  1416  0013F6  6E12               	movwf	delayMS10@inx,c
  1417  0013F8  D009               	goto	l140
  1418  0013FA                     l1874:
  1419                           
  1420                           ;Current_Sense_Main.c: 294: {
  1421                           ;Current_Sense_Main.c: 296: _delay((unsigned long)((10)*(16000000/4000.0)));
  1422  0013FA  0E34               	movlw	52
  1423  0013FC  6E11               	movwf	??_delayMS10& (0+255),c
  1424  0013FE  0EF2               	movlw	242
  1425  001400                     u1527:
  1426  001400  2EE8               	decfsz	wreg,f,c
  1427  001402  D7FE               	goto	u1527
  1428  001404  2E11               	decfsz	??_delayMS10& (0+255),f,c
  1429  001406  D7FC               	goto	u1527
  1430  001408  4A12               	infsnz	delayMS10@inx,f,c
  1431  00140A  2A13               	incf	delayMS10@inx+1,f,c
  1432  00140C                     l140:
  1433  00140C  500F               	movf	delayMS10@count,w,c
  1434  00140E  5C12               	subwf	delayMS10@inx,w,c
  1435  001410  5013               	movf	delayMS10@inx+1,w,c
  1436  001412  0A80               	xorlw	128
  1437  001414  6E11               	movwf	??_delayMS10& (0+255),c
  1438  001416  5010               	movf	delayMS10@count+1,w,c
  1439  001418  0A80               	xorlw	128
  1440  00141A  5811               	subwfb	??_delayMS10& (0+255),w,c
  1441  00141C  B0D8               	btfsc	status,0,c
  1442  00141E  0012               	return	
  1443  001420  D7EC               	goto	l1874
  1444  001422                     __end_of_delayMS10:
  1445                           	opt stack 0
  1446                           tblptru	equ	0xFF8
  1447                           intcon	equ	0xFF2
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _initInterruptsClear *****************
  1453 ;; Defined at:
  1454 ;;		line 347 in file "Current_Sense_Main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, status,2
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         0       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_init
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text9
  1483  0012A6                     __ptext9:
  1484                           	opt stack 0
  1485  0012A6                     _initInterruptsClear:
  1486                           	opt stack 28
  1487                           
  1488                           ;Current_Sense_Main.c: 350: INTCON = 0b00000000;
  1489                           
  1490                           ;incstack = 0
  1491  0012A6  0E00               	movlw	0
  1492  0012A8  6EF2               	movwf	intcon,c	;volatile
  1493                           
  1494                           ;Current_Sense_Main.c: 351: INTCON2 = 0b00000000;
  1495  0012AA  0E00               	movlw	0
  1496  0012AC  6EF1               	movwf	intcon2,c	;volatile
  1497                           
  1498                           ;Current_Sense_Main.c: 352: INTCON3 = 0b00000000;
  1499  0012AE  0E00               	movlw	0
  1500  0012B0  6EF0               	movwf	intcon3,c	;volatile
  1501                           
  1502                           ;Current_Sense_Main.c: 354: RCONbits.IPEN = 0;
  1503  0012B2  9ED0               	bcf	4048,7,c	;volatile
  1504                           
  1505                           ;Current_Sense_Main.c: 356: PIR1 = 0b00000000;
  1506  0012B4  0E00               	movlw	0
  1507  0012B6  6E9E               	movwf	3998,c	;volatile
  1508                           
  1509                           ;Current_Sense_Main.c: 357: PIR2 = 0b00000000;
  1510  0012B8  0E00               	movlw	0
  1511  0012BA  6EA1               	movwf	4001,c	;volatile
  1512                           
  1513                           ;Current_Sense_Main.c: 358: PIR3 = 0b00000000;
  1514  0012BC  0E00               	movlw	0
  1515  0012BE  6EA4               	movwf	4004,c	;volatile
  1516                           
  1517                           ;Current_Sense_Main.c: 359: PIR4 = 0b00000000;
  1518  0012C0  0E00               	movlw	0
  1519  0012C2  6E7B               	movwf	3963,c	;volatile
  1520                           
  1521                           ;Current_Sense_Main.c: 360: PIR5 = 0b00000000;
  1522  0012C4  0E00               	movlw	0
  1523  0012C6  6E7E               	movwf	3966,c	;volatile
  1524                           
  1525                           ;Current_Sense_Main.c: 362: PIE1 = 0b00000000;
  1526  0012C8  0E00               	movlw	0
  1527  0012CA  6E9D               	movwf	3997,c	;volatile
  1528                           
  1529                           ;Current_Sense_Main.c: 363: PIE2 = 0b00000000;
  1530  0012CC  0E00               	movlw	0
  1531  0012CE  6EA0               	movwf	4000,c	;volatile
  1532                           
  1533                           ;Current_Sense_Main.c: 364: PIE3 = 0b00000000;
  1534  0012D0  0E00               	movlw	0
  1535  0012D2  6EA3               	movwf	4003,c	;volatile
  1536                           
  1537                           ;Current_Sense_Main.c: 365: PIE4 = 0b00000000;
  1538  0012D4  0E00               	movlw	0
  1539  0012D6  6E7A               	movwf	3962,c	;volatile
  1540                           
  1541                           ;Current_Sense_Main.c: 366: PIE5 = 0b00000000;
  1542  0012D8  0E00               	movlw	0
  1543  0012DA  6E7D               	movwf	3965,c	;volatile
  1544                           
  1545                           ;Current_Sense_Main.c: 368: IPR1 = 0b00000000;
  1546  0012DC  0E00               	movlw	0
  1547  0012DE  6E9F               	movwf	3999,c	;volatile
  1548                           
  1549                           ;Current_Sense_Main.c: 369: IPR2 = 0b00000000;
  1550  0012E0  0E00               	movlw	0
  1551  0012E2  6EA2               	movwf	4002,c	;volatile
  1552                           
  1553                           ;Current_Sense_Main.c: 370: IPR3 = 0b00000000;
  1554  0012E4  0E00               	movlw	0
  1555  0012E6  6EA5               	movwf	4005,c	;volatile
  1556                           
  1557                           ;Current_Sense_Main.c: 371: IPR4 = 0b00000000;
  1558  0012E8  0E00               	movlw	0
  1559  0012EA  6E7C               	movwf	3964,c	;volatile
  1560                           
  1561                           ;Current_Sense_Main.c: 372: IPR5 = 0b00000000;
  1562  0012EC  0E00               	movlw	0
  1563  0012EE  6E7F               	movwf	3967,c	;volatile
  1564  0012F0  0012               	return		;funcret
  1565  0012F2                     __end_of_initInterruptsClear:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           intcon	equ	0xFF2
  1569                           intcon2	equ	0xFF1
  1570                           intcon3	equ	0xFF0
  1571                           postinc0	equ	0xFEE
  1572                           wreg	equ	0xFE8
  1573                           status	equ	0xFD8
  1574                           
  1575 ;; *************** function _initIO *****************
  1576 ;; Defined at:
  1577 ;;		line 327 in file "Current_Sense_Main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg, status,2
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1591 ;;      Params:         0       0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_init
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text10
  1606  00151E                     __ptext10:
  1607                           	opt stack 0
  1608  00151E                     _initIO:
  1609                           	opt stack 28
  1610                           
  1611                           ;Current_Sense_Main.c: 329: ADCON0bits.ADON = 0;
  1612                           
  1613                           ;incstack = 0
  1614  00151E  90C2               	bcf	4034,0,c	;volatile
  1615                           
  1616                           ;Current_Sense_Main.c: 330: ANSELA = 0b00000000;
  1617  001520  0E00               	movlw	0
  1618  001522  010F               	movlb	15	; () banked
  1619  001524  6F38               	movwf	56,b	;volatile
  1620                           
  1621                           ;Current_Sense_Main.c: 331: ANSELB = 0b00000000;
  1622  001526  0E00               	movlw	0
  1623  001528  010F               	movlb	15	; () banked
  1624  00152A  6F39               	movwf	57,b	;volatile
  1625                           
  1626                           ;Current_Sense_Main.c: 332: ANSELC = 0b00000000;
  1627  00152C  0E00               	movlw	0
  1628  00152E  010F               	movlb	15	; () banked
  1629  001530  6F3A               	movwf	58,b	;volatile
  1630                           
  1631                           ; BSR set to: 15
  1632                           ;Current_Sense_Main.c: 334: TRISBbits.TRISB4 = 0;
  1633  001532  9893               	bcf	3987,4,c	;volatile
  1634                           
  1635                           ; BSR set to: 15
  1636                           ;Current_Sense_Main.c: 335: LATBbits.LATB4 = 0;
  1637  001534  988A               	bcf	3978,4,c	;volatile
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;Current_Sense_Main.c: 337: TRISCbits.TRISC2 = 1;
  1641  001536  8494               	bsf	3988,2,c	;volatile
  1642                           
  1643                           ; BSR set to: 15
  1644                           ;Current_Sense_Main.c: 338: TRISAbits.TRISA1 = 1;
  1645  001538  8292               	bsf	3986,1,c	;volatile
  1646                           
  1647                           ; BSR set to: 15
  1648                           ;Current_Sense_Main.c: 339: TRISAbits.TRISA0 = 0;
  1649  00153A  9092               	bcf	3986,0,c	;volatile
  1650                           
  1651                           ; BSR set to: 15
  1652                           ;Current_Sense_Main.c: 340: LATAbits.LATA0 = 0;
  1653  00153C  9089               	bcf	3977,0,c	;volatile
  1654                           
  1655                           ; BSR set to: 15
  1656                           ;Current_Sense_Main.c: 342: TRISCbits.TRISC6 = 0;
  1657  00153E  9C94               	bcf	3988,6,c	;volatile
  1658  001540  0012               	return	
  1659  001542                     __end_of_initIO:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           intcon	equ	0xFF2
  1663                           intcon2	equ	0xFF1
  1664                           intcon3	equ	0xFF0
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _communications *****************
  1670 ;; Defined at:
  1671 ;;		line 89 in file "SlaveComm_PIC18.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  firstTime       1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  firstTime       1   48[COMRAM] unsigned char 
  1676 ;;  no_more_to_s    1   47[COMRAM] unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;		None               void
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         0       0       0       0       0       0       0
  1687 ;;      Locals:         2       0       0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    7
  1693 ;; This function calls:
  1694 ;;		_SPISlaveInit
  1695 ;;		_process_data
  1696 ;;		_receive_data
  1697 ;;		_resetCommunications
  1698 ;;		_send_data
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text11
  1705  000E40                     __ptext11:
  1706                           	opt stack 0
  1707  000E40                     _communications:
  1708                           	opt stack 23
  1709                           
  1710                           ; BSR set to: 15
  1711                           ;incstack = 0
  1712                           ;communications@firstTime stored from wreg
  1713  000E40  6E31               	movwf	communications@firstTime,c
  1714                           
  1715                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  1716                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  1717                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  1718                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  1719                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  1720                           ;SlaveComm_PIC18.c: 100: if( firstTime == 1 )
  1721  000E42  0431               	decf	communications@firstTime,w,c
  1722  000E44  A4D8               	btfss	status,2,c
  1723  000E46  D00F               	goto	l2174
  1724                           
  1725                           ;SlaveComm_PIC18.c: 101: {
  1726                           ;SlaveComm_PIC18.c: 102: SPISlaveInit( );
  1727  000E48  EC2B  F009         	call	_SPISlaveInit	;wreg free
  1728                           
  1729                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  1730  000E4C  0E00               	movlw	0
  1731  000E4E  0100               	movlb	0	; () banked
  1732  000E50  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  1736  000E52  0E00               	movlw	0
  1737  000E54  0100               	movlb	0	; () banked
  1738  000E56  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;SlaveComm_PIC18.c: 105: resetCommunications( &send_buffer );
  1742  000E58  0E8A               	movlw	low communications@send_buffer
  1743  000E5A  6E2C               	movwf	resetCommunications@send_buffer,c
  1744  000E5C  0E00               	movlw	high communications@send_buffer
  1745  000E5E  6E2D               	movwf	resetCommunications@send_buffer+1,c
  1746  000E60  EC6D  F007         	call	_resetCommunications	;wreg free
  1747                           
  1748                           ;SlaveComm_PIC18.c: 106: }
  1749  000E64  0012               	return	
  1750  000E66                     l2174:
  1751                           
  1752                           ;SlaveComm_PIC18.c: 107: else
  1753                           ;SlaveComm_PIC18.c: 108: {
  1754                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data( &receive_buffer );
  1755  000E66  0E60               	movlw	low communications@receive_buffer
  1756  000E68  6E12               	movwf	receive_data@receive_buffer,c
  1757  000E6A  0E00               	movlw	high communications@receive_buffer
  1758  000E6C  6E13               	movwf	receive_data@receive_buffer+1,c
  1759  000E6E  EC1F  F006         	call	_receive_data	;wreg free
  1760  000E72  6E3D               	movwf	communications@receive_current_state,c
  1761                           
  1762                           ;SlaveComm_PIC18.c: 111: switch( receive_current_state )
  1763  000E74  D010               	goto	l2182
  1764  000E76                     l2176:
  1765                           
  1766                           ;SlaveComm_PIC18.c: 121: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  1767  000E76  0E60               	movlw	low communications@receive_buffer
  1768  000E78  6E28               	movwf	process_data@receive_buffer,c
  1769  000E7A  0E00               	movlw	high communications@receive_buffer
  1770  000E7C  6E29               	movwf	process_data@receive_buffer+1,c
  1771  000E7E  0E8A               	movlw	low communications@send_buffer
  1772  000E80  6E2A               	movwf	process_data@send_buffer,c
  1773  000E82  0E00               	movlw	high communications@send_buffer
  1774  000E84  6E2B               	movwf	process_data@send_buffer+1,c
  1775  000E86  EC11  F00A         	call	_process_data	;wreg free
  1776  000E8A  06E8               	decf	wreg,f,c
  1777  000E8C  A4D8               	btfss	status,2,c
  1778  000E8E  D00D               	goto	l2184
  1779                           
  1780                           ;SlaveComm_PIC18.c: 122: {
  1781                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  1782  000E90  0E01               	movlw	1
  1783  000E92  6E3B               	movwf	communications@end_of_transmission_received,c
  1784                           
  1785                           ;SlaveComm_PIC18.c: 127: }
  1786                           
  1787                           ;SlaveComm_PIC18.c: 124: }
  1788                           ;SlaveComm_PIC18.c: 126: break;
  1789  000E94  D00A               	goto	l2184
  1790  000E96                     l2182:
  1791  000E96  503D               	movf	communications@receive_current_state,w,c
  1792                           
  1793                           ; Switch size 1, requested type "space"
  1794                           ; Number of cases is 3, Range of values is 0 to 2
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte           10     6 (average)
  1798                           ;	Chosen strategy is simple_byte
  1799  000E98  0A00               	xorlw	0	; case 0
  1800  000E9A  B4D8               	btfsc	status,2,c
  1801  000E9C  D006               	goto	l2184
  1802  000E9E  0A01               	xorlw	1	; case 1
  1803  000EA0  B4D8               	btfsc	status,2,c
  1804  000EA2  D003               	goto	l2184
  1805  000EA4  0A03               	xorlw	3	; case 2
  1806  000EA6  B4D8               	btfsc	status,2,c
  1807  000EA8  D7E6               	goto	l2176
  1808  000EAA                     l2184:
  1809                           
  1810                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data( &send_buffer );
  1811  000EAA  0E8A               	movlw	low communications@send_buffer
  1812  000EAC  6E11               	movwf	send_data@send_buffer,c
  1813  000EAE  0E00               	movlw	high communications@send_buffer
  1814  000EB0  6E12               	movwf	send_data@send_buffer+1,c
  1815  000EB2  ECB9  F007         	call	_send_data	;wreg free
  1816  000EB6  6E30               	movwf	communications@no_more_to_send,c
  1817                           
  1818                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  1819                           ;SlaveComm_PIC18.c: 133: if( PORTBbits.SS2 == 0b1 )
  1820  000EB8  A081               	btfss	3969,0,c	;volatile
  1821  000EBA  D003               	goto	l2190
  1822                           
  1823                           ;SlaveComm_PIC18.c: 134: {
  1824                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  1825  000EBC  0E00               	movlw	0
  1826  000EBE  6E3C               	movwf	communications@last_state_active,c
  1827                           
  1828                           ;SlaveComm_PIC18.c: 136: }
  1829  000EC0  0012               	return	
  1830  000EC2                     l2190:
  1831                           
  1832                           ;SlaveComm_PIC18.c: 137: else
  1833                           ;SlaveComm_PIC18.c: 138: {
  1834                           ;SlaveComm_PIC18.c: 139: if( last_state_active == 0 )
  1835  000EC2  503C               	movf	communications@last_state_active,w,c
  1836  000EC4  A4D8               	btfss	status,2,c
  1837  000EC6  D006               	goto	l2194
  1838                           
  1839                           ;SlaveComm_PIC18.c: 140: {
  1840                           ;SlaveComm_PIC18.c: 141: resetCommunications( &send_buffer );
  1841  000EC8  0E8A               	movlw	low communications@send_buffer
  1842  000ECA  6E2C               	movwf	resetCommunications@send_buffer,c
  1843  000ECC  0E00               	movlw	high communications@send_buffer
  1844  000ECE  6E2D               	movwf	resetCommunications@send_buffer+1,c
  1845  000ED0  EC6D  F007         	call	_resetCommunications	;wreg free
  1846  000ED4                     l2194:
  1847                           
  1848                           ;SlaveComm_PIC18.c: 142: }
  1849                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  1850  000ED4  0E01               	movlw	1
  1851  000ED6  6E3C               	movwf	communications@last_state_active,c
  1852  000ED8  0012               	return	
  1853  000EDA                     __end_of_communications:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           intcon	equ	0xFF2
  1857                           intcon2	equ	0xFF1
  1858                           intcon3	equ	0xFF0
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _send_data *****************
  1864 ;; Defined at:
  1865 ;;		line 473 in file "SlaveComm_PIC18.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  1868 ;;		 -> communications@send_buffer(42), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  send_end        1   20[COMRAM] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      unsigned char 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1880 ;;      Params:         2       0       0       0       0       0       0
  1881 ;;      Locals:         1       0       0       0       0       0       0
  1882 ;;      Temps:          2       0       0       0       0       0       0
  1883 ;;      Totals:         5       0       0       0       0       0       0
  1884 ;;Total ram usage:        5 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		_SPI_send_data
  1889 ;; This function is called by:
  1890 ;;		_communications
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text12
  1895  000F72                     __ptext12:
  1896                           	opt stack 0
  1897  000F72                     _send_data:
  1898                           	opt stack 27
  1899                           
  1900                           ;SlaveComm_PIC18.c: 475: bool send_end;
  1901                           ;SlaveComm_PIC18.c: 477: if( send_buffer->read_position == send_buffer->write_position )
  1902                           
  1903                           ;incstack = 0
  1904  000F72  EE20 F028          	lfsr	2,40
  1905  000F76  5011               	movf	send_data@send_buffer,w,c
  1906  000F78  26D9               	addwf	fsr2l,f,c
  1907  000F7A  5012               	movf	send_data@send_buffer+1,w,c
  1908  000F7C  22DA               	addwfc	fsr2h,f,c
  1909  000F7E  EE10 F029          	lfsr	1,41
  1910  000F82  5011               	movf	send_data@send_buffer,w,c
  1911  000F84  26E1               	addwf	fsr1l,f,c
  1912  000F86  5012               	movf	send_data@send_buffer+1,w,c
  1913  000F88  22E2               	addwfc	fsr1h,f,c
  1914  000F8A  50DE               	movf	postinc2,w,c
  1915  000F8C  18E6               	xorwf	postinc1,w,c
  1916  000F8E  A4D8               	btfss	status,2,c
  1917  000F90  D006               	goto	l2124
  1918                           
  1919                           ;SlaveComm_PIC18.c: 478: {
  1920                           ;SlaveComm_PIC18.c: 479: send_end = 1;
  1921  000F92  0E01               	movlw	1
  1922  000F94  6E15               	movwf	send_data@send_end,c
  1923                           
  1924                           ;SlaveComm_PIC18.c: 480: SPI_send_data( '\0' );
  1925  000F96  0E00               	movlw	0
  1926  000F98  ECA1  F00A         	call	_SPI_send_data
  1927                           
  1928                           ;SlaveComm_PIC18.c: 481: }
  1929  000F9C  D030               	goto	l2132
  1930  000F9E                     l2124:
  1931                           
  1932                           ;SlaveComm_PIC18.c: 482: else
  1933                           ;SlaveComm_PIC18.c: 483: {
  1934                           ;SlaveComm_PIC18.c: 484: send_end = 0;
  1935  000F9E  0E00               	movlw	0
  1936  000FA0  6E15               	movwf	send_data@send_end,c
  1937                           
  1938                           ;SlaveComm_PIC18.c: 487: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  1939  000FA2  EE20 F029          	lfsr	2,41
  1940  000FA6  5011               	movf	send_data@send_buffer,w,c
  1941  000FA8  26D9               	addwf	fsr2l,f,c
  1942  000FAA  5012               	movf	send_data@send_buffer+1,w,c
  1943  000FAC  22DA               	addwfc	fsr2h,f,c
  1944  000FAE  50DF               	movf	indf2,w,c
  1945  000FB0  6E13               	movwf	??_send_data& (0+255),c
  1946  000FB2  5013               	movf	??_send_data,w,c
  1947  000FB4  0D01               	mullw	1
  1948  000FB6  50F3               	movf	prodl,w,c
  1949  000FB8  2411               	addwf	send_data@send_buffer,w,c
  1950  000FBA  6ED9               	movwf	fsr2l,c
  1951  000FBC  50F4               	movf	prodh,w,c
  1952  000FBE  2012               	addwfc	send_data@send_buffer+1,w,c
  1953  000FC0  6EDA               	movwf	fsr2h,c
  1954  000FC2  50DF               	movf	indf2,w,c
  1955  000FC4  ECA1  F00A         	call	_SPI_send_data
  1956  000FC8  06E8               	decf	wreg,f,c
  1957  000FCA  A4D8               	btfss	status,2,c
  1958  000FCC  D018               	goto	l2132
  1959                           
  1960                           ;SlaveComm_PIC18.c: 488: {
  1961                           ;SlaveComm_PIC18.c: 490: send_buffer->read_position++;
  1962  000FCE  EE20 F029          	lfsr	2,41
  1963  000FD2  5011               	movf	send_data@send_buffer,w,c
  1964  000FD4  26D9               	addwf	fsr2l,f,c
  1965  000FD6  5012               	movf	send_data@send_buffer+1,w,c
  1966  000FD8  22DA               	addwfc	fsr2h,f,c
  1967  000FDA  2ADF               	incf	indf2,f,c
  1968                           
  1969                           ;SlaveComm_PIC18.c: 491: if( send_buffer->read_position >= 40 )
  1970  000FDC  EE20 F029          	lfsr	2,41
  1971  000FE0  5011               	movf	send_data@send_buffer,w,c
  1972  000FE2  26D9               	addwf	fsr2l,f,c
  1973  000FE4  5012               	movf	send_data@send_buffer+1,w,c
  1974  000FE6  22DA               	addwfc	fsr2h,f,c
  1975  000FE8  0E27               	movlw	39
  1976  000FEA  64DF               	cpfsgt	indf2,c
  1977  000FEC  D008               	goto	l2132
  1978                           
  1979                           ;SlaveComm_PIC18.c: 492: {
  1980                           ;SlaveComm_PIC18.c: 493: send_buffer->read_position = 0;
  1981  000FEE  EE20 F029          	lfsr	2,41
  1982  000FF2  5011               	movf	send_data@send_buffer,w,c
  1983  000FF4  26D9               	addwf	fsr2l,f,c
  1984  000FF6  5012               	movf	send_data@send_buffer+1,w,c
  1985  000FF8  22DA               	addwfc	fsr2h,f,c
  1986  000FFA  0E00               	movlw	0
  1987  000FFC  6EDF               	movwf	indf2,c
  1988  000FFE                     l2132:
  1989                           
  1990                           ;SlaveComm_PIC18.c: 494: }
  1991                           ;SlaveComm_PIC18.c: 495: }
  1992                           ;SlaveComm_PIC18.c: 496: }
  1993                           ;SlaveComm_PIC18.c: 498: return send_end;
  1994  000FFE  5015               	movf	send_data@send_end,w,c
  1995  001000  0012               	return	
  1996  001002                     __end_of_send_data:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           intcon	equ	0xFF2
  2002                           intcon2	equ	0xFF1
  2003                           intcon3	equ	0xFF0
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postinc1	equ	0xFE6
  2007                           fsr1h	equ	0xFE2
  2008                           fsr1l	equ	0xFE1
  2009                           indf2	equ	0xFDF
  2010                           postinc2	equ	0xFDE
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _SPI_send_data *****************
  2016 ;; Defined at:
  2017 ;;		line 571 in file "SlaveComm_PIC18.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  data            1    wreg     unsigned char 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  data            1   14[COMRAM] unsigned char 
  2022 ;;  sendGood        1   15[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      unsigned char 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2032 ;;      Params:         0       0       0       0       0       0       0
  2033 ;;      Locals:         2       0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0
  2035 ;;      Totals:         2       0       0       0       0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_send_data
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text13
  2047  001542                     __ptext13:
  2048                           	opt stack 0
  2049  001542                     _SPI_send_data:
  2050                           	opt stack 27
  2051                           
  2052                           ;incstack = 0
  2053                           ;SPI_send_data@data stored from wreg
  2054  001542  6E0F               	movwf	SPI_send_data@data,c
  2055                           
  2056                           ;SlaveComm_PIC18.c: 573: bool sendGood = 0;
  2057  001544  0E00               	movlw	0
  2058  001546  6E10               	movwf	SPI_send_data@sendGood,c
  2059                           
  2060                           ;SlaveComm_PIC18.c: 575: if( SPI_transmit_wait == 0 )
  2061  001548  503A               	movf	_SPI_transmit_wait,w,c
  2062  00154A  A4D8               	btfss	status,2,c
  2063  00154C  D006               	goto	l2014
  2064                           
  2065                           ;SlaveComm_PIC18.c: 576: {
  2066                           ;SlaveComm_PIC18.c: 577: SSP2BUF = data;
  2067  00154E  C00F  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2068                           
  2069                           ;SlaveComm_PIC18.c: 578: SPI_transmit_wait = 1;
  2070  001552  0E01               	movlw	1
  2071  001554  6E3A               	movwf	_SPI_transmit_wait,c
  2072                           
  2073                           ;SlaveComm_PIC18.c: 579: sendGood = 1;
  2074  001556  0E01               	movlw	1
  2075  001558  D001               	goto	L1
  2076  00155A                     l2014:
  2077                           
  2078                           ;SlaveComm_PIC18.c: 581: else
  2079                           ;SlaveComm_PIC18.c: 582: {
  2080                           ;SlaveComm_PIC18.c: 583: sendGood = 0;
  2081  00155A  0E00               	movlw	0
  2082  00155C                     L1:
  2083  00155C  6E10               	movwf	SPI_send_data@sendGood,c
  2084                           
  2085                           ;SlaveComm_PIC18.c: 584: }
  2086                           ;SlaveComm_PIC18.c: 586: return sendGood;
  2087  00155E  5010               	movf	SPI_send_data@sendGood,w,c
  2088  001560  0012               	return	
  2089  001562                     __end_of_SPI_send_data:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           prodh	equ	0xFF4
  2093                           prodl	equ	0xFF3
  2094                           intcon	equ	0xFF2
  2095                           intcon2	equ	0xFF1
  2096                           intcon3	equ	0xFF0
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postinc1	equ	0xFE6
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           indf2	equ	0xFDF
  2103                           postinc2	equ	0xFDE
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _resetCommunications *****************
  2109 ;; Defined at:
  2110 ;;		line 152 in file "SlaveComm_PIC18.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  send_buffer     2   43[COMRAM] PTR struct buffer
  2113 ;;		 -> communications@send_buffer(42), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;		None               void
  2118 ;; Registers used:
  2119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2125 ;;      Params:         2       0       0       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0
  2127 ;;      Temps:          2       0       0       0       0       0       0
  2128 ;;      Totals:         4       0       0       0       0       0       0
  2129 ;;Total ram usage:        4 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    5
  2132 ;; This function calls:
  2133 ;;		_com_command_setEnergyUsed
  2134 ;;		_com_command_setPower
  2135 ;;		_com_command_setVersion
  2136 ;; This function is called by:
  2137 ;;		_communications
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text14
  2142  000EDA                     __ptext14:
  2143                           	opt stack 0
  2144  000EDA                     _resetCommunications:
  2145                           	opt stack 24
  2146                           
  2147                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2148                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2149                           
  2150                           ;incstack = 0
  2151  000EDA  9A6C               	bcf	3948,5,c	;volatile
  2152                           
  2153                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  2154  000EDC  0E06               	movlw	6
  2155  000EDE  6E2E               	movwf	??_resetCommunications& (0+255),c
  2156  000EE0  0E30               	movlw	48
  2157  000EE2                     u1537:
  2158  000EE2  2EE8               	decfsz	wreg,f,c
  2159  000EE4  D7FE               	goto	u1537
  2160  000EE6  2E2E               	decfsz	??_resetCommunications& (0+255),f,c
  2161  000EE8  D7FC               	goto	u1537
  2162  000EEA  D000               	nop2	
  2163                           
  2164                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  2165  000EEC  8A6C               	bsf	3948,5,c	;volatile
  2166                           
  2167                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  2168  000EEE  9E6C               	bcf	3948,7,c	;volatile
  2169                           
  2170                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  2171  000EF0  0E00               	movlw	0
  2172  000EF2  6E3A               	movwf	_SPI_transmit_wait,c
  2173                           
  2174                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  2175  000EF4  EE20 F029          	lfsr	2,41
  2176  000EF8  502C               	movf	resetCommunications@send_buffer,w,c
  2177  000EFA  26D9               	addwf	fsr2l,f,c
  2178  000EFC  502D               	movf	resetCommunications@send_buffer+1,w,c
  2179  000EFE  22DA               	addwfc	fsr2h,f,c
  2180  000F00  0E00               	movlw	0
  2181  000F02  6EDF               	movwf	indf2,c
  2182                           
  2183                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  2184  000F04  EE20 F028          	lfsr	2,40
  2185  000F08  502C               	movf	resetCommunications@send_buffer,w,c
  2186  000F0A  26D9               	addwf	fsr2l,f,c
  2187  000F0C  502D               	movf	resetCommunications@send_buffer+1,w,c
  2188  000F0E  22DA               	addwfc	fsr2h,f,c
  2189  000F10  0E00               	movlw	0
  2190  000F12  6EDF               	movwf	indf2,c
  2191                           
  2192                           ;SlaveComm_PIC18.c: 171: commState++;
  2193  000F14  4A38               	infsnz	resetCommunications@commState,f,c
  2194  000F16  2A39               	incf	resetCommunications@commState+1,f,c
  2195                           
  2196                           ;SlaveComm_PIC18.c: 172: switch( commState )
  2197  000F18  D019               	goto	l2070
  2198  000F1A                     l2060:
  2199                           
  2200                           ;SlaveComm_PIC18.c: 175: com_command_setVersion( send_buffer );
  2201  000F1A  C02C  F023         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2202  000F1E  C02D  F024         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2203  000F22  EC69  F00A         	call	_com_command_setVersion	;wreg free
  2204                           
  2205                           ;SlaveComm_PIC18.c: 176: break;
  2206  000F26  0012               	return	
  2207  000F28                     l2062:
  2208                           
  2209                           ;SlaveComm_PIC18.c: 178: com_command_setPower( send_buffer );
  2210  000F28  C02C  F023         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2211  000F2C  C02D  F024         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2212  000F30  EC79  F009         	call	_com_command_setPower	;wreg free
  2213                           
  2214                           ;SlaveComm_PIC18.c: 179: break;
  2215  000F34  0012               	return	
  2216  000F36                     l2064:
  2217                           
  2218                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed( send_buffer );
  2219  000F36  C02C  F023         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2220  000F3A  C02D  F024         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2221  000F3E  EC9A  F009         	call	_com_command_setEnergyUsed	;wreg free
  2222  000F42                     l2066:
  2223                           
  2224                           ;SlaveComm_PIC18.c: 193: commState = 0;
  2225  000F42  0E00               	movlw	0
  2226  000F44  6E39               	movwf	resetCommunications@commState+1,c
  2227  000F46  0E00               	movlw	0
  2228  000F48  6E38               	movwf	resetCommunications@commState,c
  2229                           
  2230                           ;SlaveComm_PIC18.c: 195: }
  2231                           
  2232                           ;SlaveComm_PIC18.c: 194: break;
  2233  000F4A  0012               	return	
  2234  000F4C                     l2070:
  2235  000F4C  C038  F02E         	movff	resetCommunications@commState,??_resetCommunications
  2236  000F50  C039  F02F         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "space"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  000F54  502F               	movf	??_resetCommunications+1,w,c
  2246  000F56  0A00               	xorlw	0	; case 0
  2247  000F58  A4D8               	btfss	status,2,c
  2248  000F5A  D7F3               	goto	l2066
  2249                           
  2250                           ; Switch size 1, requested type "space"
  2251                           ; Number of cases is 3, Range of values is 1 to 3
  2252                           ; switch strategies available:
  2253                           ; Name         Instructions Cycles
  2254                           ; simple_byte           10     6 (average)
  2255                           ;	Chosen strategy is simple_byte
  2256  000F5C  502E               	movf	??_resetCommunications,w,c
  2257  000F5E  0A01               	xorlw	1	; case 1
  2258  000F60  B4D8               	btfsc	status,2,c
  2259  000F62  D7DB               	goto	l2060
  2260  000F64  0A03               	xorlw	3	; case 2
  2261  000F66  B4D8               	btfsc	status,2,c
  2262  000F68  D7DF               	goto	l2062
  2263  000F6A  0A01               	xorlw	1	; case 3
  2264  000F6C  B4D8               	btfsc	status,2,c
  2265  000F6E  D7E3               	goto	l2064
  2266  000F70  D7E8               	goto	l2066
  2267  000F72                     __end_of_resetCommunications:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           intcon2	equ	0xFF1
  2274                           intcon3	equ	0xFF0
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postinc1	equ	0xFE6
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           postinc2	equ	0xFDE
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _com_command_setVersion *****************
  2287 ;; Defined at:
  2288 ;;		line 655 in file "SlaveComm_PIC18.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2291 ;;		 -> communications@send_buffer(42), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         2       0       0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0
  2306 ;;      Totals:         2       0       0       0       0       0       0
  2307 ;;Total ram usage:        2 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    4
  2310 ;; This function calls:
  2311 ;;		_command_builder3
  2312 ;; This function is called by:
  2313 ;;		_resetCommunications
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text15
  2318  0014D2                     __ptext15:
  2319                           	opt stack 0
  2320  0014D2                     _com_command_setVersion:
  2321                           	opt stack 24
  2322                           
  2323                           ;SlaveComm_PIC18.c: 657: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2324                           
  2325                           ;incstack = 0
  2326  0014D2  C023  F01B         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2327  0014D6  C024  F01C         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2328  0014DA  0E57               	movlw	low STR_2
  2329  0014DC  6E1D               	movwf	command_builder3@data1,c
  2330  0014DE  0E06               	movlw	high STR_2
  2331  0014E0  6E1E               	movwf	command_builder3@data1+1,c
  2332  0014E2  0E0D               	movlw	low STR_21
  2333  0014E4  6E1F               	movwf	command_builder3@data2,c
  2334  0014E6  0E06               	movlw	high STR_21
  2335  0014E8  6E20               	movwf	command_builder3@data2+1,c
  2336  0014EA  0E4B               	movlw	low STR_39
  2337  0014EC  6E21               	movwf	command_builder3@data3,c
  2338  0014EE  0E06               	movlw	high STR_39
  2339  0014F0  6E22               	movwf	command_builder3@data3+1,c
  2340  0014F2  ECD1  F006         	call	_command_builder3	;wreg free
  2341  0014F6  0012               	return		;funcret
  2342  0014F8                     __end_of_com_command_setVersion:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           prodh	equ	0xFF4
  2346                           prodl	equ	0xFF3
  2347                           intcon	equ	0xFF2
  2348                           intcon2	equ	0xFF1
  2349                           intcon3	equ	0xFF0
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           postinc1	equ	0xFE6
  2353                           fsr1h	equ	0xFE2
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           postinc2	equ	0xFDE
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361 ;; *************** function _com_command_setPower *****************
  2362 ;; Defined at:
  2363 ;;		line 606 in file "SlaveComm_PIC18.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2366 ;;		 -> communications@send_buffer(42), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  temp            7   36[COMRAM] unsigned char [7]
  2369 ;;  newPowerAllo    7    0        unsigned char [7]
  2370 ;; Return value:  Size  Location     Type
  2371 ;;		None               void
  2372 ;; Registers used:
  2373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2379 ;;      Params:         2       0       0       0       0       0       0
  2380 ;;      Locals:         7       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0
  2382 ;;      Totals:         9       0       0       0       0       0       0
  2383 ;;Total ram usage:        9 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    4
  2386 ;; This function calls:
  2387 ;;		_command_builder3
  2388 ;;		_utoa
  2389 ;; This function is called by:
  2390 ;;		_resetCommunications
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text16
  2395  0012F2                     __ptext16:
  2396                           	opt stack 0
  2397  0012F2                     _com_command_setPower:
  2398                           	opt stack 24
  2399                           
  2400                           ;SlaveComm_PIC18.c: 609: char temp[7];
  2401                           ;SlaveComm_PIC18.c: 611: char newPowerAllocated[7];
  2402                           ;SlaveComm_PIC18.c: 612: utoa(temp, meterWatts, 10);
  2403                           
  2404                           ;incstack = 0
  2405  0012F2  0E25               	movlw	low com_command_setPower@temp
  2406  0012F4  6E16               	movwf	utoa@buf,c
  2407  0012F6  0E00               	movlw	high com_command_setPower@temp
  2408  0012F8  6E17               	movwf	utoa@buf+1,c
  2409  0012FA  C036  F018         	movff	_meterWatts,utoa@val
  2410  0012FE  C037  F019         	movff	_meterWatts+1,utoa@val+1
  2411  001302  0E00               	movlw	0
  2412  001304  6E1B               	movwf	utoa@base+1,c
  2413  001306  0E0A               	movlw	10
  2414  001308  6E1A               	movwf	utoa@base,c
  2415  00130A  EC7F  F006         	call	_utoa	;wreg free
  2416                           
  2417                           ;SlaveComm_PIC18.c: 614: command_builder3( send_buffer, "Set", "Watts", temp );
  2418  00130E  C023  F01B         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2419  001312  C024  F01C         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2420  001316  0E57               	movlw	low STR_2
  2421  001318  6E1D               	movwf	command_builder3@data1,c
  2422  00131A  0E06               	movlw	high STR_2
  2423  00131C  6E1E               	movwf	command_builder3@data1+1,c
  2424  00131E  0E24               	movlw	low STR_17
  2425  001320  6E1F               	movwf	command_builder3@data2,c
  2426  001322  0E06               	movlw	high STR_17
  2427  001324  6E20               	movwf	command_builder3@data2+1,c
  2428  001326  0E25               	movlw	low com_command_setPower@temp
  2429  001328  6E21               	movwf	command_builder3@data3,c
  2430  00132A  0E00               	movlw	high com_command_setPower@temp
  2431  00132C  6E22               	movwf	command_builder3@data3+1,c
  2432  00132E  ECD1  F006         	call	_command_builder3	;wreg free
  2433  001332  0012               	return	
  2434  001334                     __end_of_com_command_setPower:
  2435                           	opt stack 0
  2436                           tblptru	equ	0xFF8
  2437                           prodh	equ	0xFF4
  2438                           prodl	equ	0xFF3
  2439                           intcon	equ	0xFF2
  2440                           intcon2	equ	0xFF1
  2441                           intcon3	equ	0xFF0
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postinc1	equ	0xFE6
  2445                           fsr1h	equ	0xFE2
  2446                           fsr1l	equ	0xFE1
  2447                           indf2	equ	0xFDF
  2448                           postinc2	equ	0xFDE
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _com_command_setEnergyUsed *****************
  2454 ;; Defined at:
  2455 ;;		line 620 in file "SlaveComm_PIC18.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2458 ;;		 -> communications@send_buffer(42), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  temp            7   36[COMRAM] unsigned char [7]
  2461 ;;  newPowerAllo    7    0        unsigned char [7]
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2471 ;;      Params:         2       0       0       0       0       0       0
  2472 ;;      Locals:         7       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0
  2474 ;;      Totals:         9       0       0       0       0       0       0
  2475 ;;Total ram usage:        9 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    4
  2478 ;; This function calls:
  2479 ;;		_command_builder3
  2480 ;;		_utoa
  2481 ;; This function is called by:
  2482 ;;		_resetCommunications
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text17
  2487  001334                     __ptext17:
  2488                           	opt stack 0
  2489  001334                     _com_command_setEnergyUsed:
  2490                           	opt stack 24
  2491                           
  2492                           ;SlaveComm_PIC18.c: 622: char temp[7];
  2493                           ;SlaveComm_PIC18.c: 624: char newPowerAllocated[7];
  2494                           ;SlaveComm_PIC18.c: 625: utoa(temp, meterEnergyUsed, 10);
  2495                           
  2496                           ;incstack = 0
  2497  001334  0E25               	movlw	low com_command_setEnergyUsed@temp
  2498  001336  6E16               	movwf	utoa@buf,c
  2499  001338  0E00               	movlw	high com_command_setEnergyUsed@temp
  2500  00133A  6E17               	movwf	utoa@buf+1,c
  2501  00133C  C034  F018         	movff	_meterEnergyUsed,utoa@val
  2502  001340  C035  F019         	movff	_meterEnergyUsed+1,utoa@val+1
  2503  001344  0E00               	movlw	0
  2504  001346  6E1B               	movwf	utoa@base+1,c
  2505  001348  0E0A               	movlw	10
  2506  00134A  6E1A               	movwf	utoa@base,c
  2507  00134C  EC7F  F006         	call	_utoa	;wreg free
  2508                           
  2509                           ;SlaveComm_PIC18.c: 627: command_builder3( send_buffer, "Set", "EnUsed", temp );
  2510  001350  C023  F01B         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  2511  001354  C024  F01C         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  2512  001358  0E57               	movlw	low STR_2
  2513  00135A  6E1D               	movwf	command_builder3@data1,c
  2514  00135C  0E06               	movlw	high STR_2
  2515  00135E  6E1E               	movwf	command_builder3@data1+1,c
  2516  001360  0E17               	movlw	low STR_18
  2517  001362  6E1F               	movwf	command_builder3@data2,c
  2518  001364  0E06               	movlw	high STR_18
  2519  001366  6E20               	movwf	command_builder3@data2+1,c
  2520  001368  0E25               	movlw	low com_command_setEnergyUsed@temp
  2521  00136A  6E21               	movwf	command_builder3@data3,c
  2522  00136C  0E00               	movlw	high com_command_setEnergyUsed@temp
  2523  00136E  6E22               	movwf	command_builder3@data3+1,c
  2524  001370  ECD1  F006         	call	_command_builder3	;wreg free
  2525  001374  0012               	return	
  2526  001376                     __end_of_com_command_setEnergyUsed:
  2527                           	opt stack 0
  2528                           tblptru	equ	0xFF8
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           intcon2	equ	0xFF1
  2533                           intcon3	equ	0xFF0
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           postinc1	equ	0xFE6
  2537                           fsr1h	equ	0xFE2
  2538                           fsr1l	equ	0xFE1
  2539                           indf2	equ	0xFDF
  2540                           postinc2	equ	0xFDE
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8
  2544                           
  2545 ;; *************** function _utoa *****************
  2546 ;; Defined at:
  2547 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2550 ;;		 -> com_command_setEnergyUsed@temp(7), com_command_setPower@temp(7), 
  2551 ;;  val             2   23[COMRAM] unsigned int 
  2552 ;;  base            2   25[COMRAM] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  v               2   27[COMRAM] unsigned int 
  2555 ;;  c               1   29[COMRAM] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2   21[COMRAM] PTR unsigned char 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2565 ;;      Params:         6       0       0       0       0       0       0
  2566 ;;      Locals:         3       0       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0
  2568 ;;      Totals:         9       0       0       0       0       0       0
  2569 ;;Total ram usage:        9 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    2
  2572 ;; This function calls:
  2573 ;;		___lwdiv
  2574 ;;		___lwmod
  2575 ;; This function is called by:
  2576 ;;		_com_command_setPower
  2577 ;;		_com_command_setEnergyUsed
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text18
  2582  000CFE                     __ptext18:
  2583                           	opt stack 0
  2584  000CFE                     _utoa:
  2585                           	opt stack 25
  2586                           
  2587                           ;incstack = 0
  2588  000CFE  C018  F01C         	movff	utoa@val,utoa@v
  2589  000D02  C019  F01D         	movff	utoa@val+1,utoa@v+1
  2590  000D06                     l1838:
  2591  000D06  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  2592  000D0A  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  2593  000D0E  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2594  000D12  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2595  000D16  EC02  F009         	call	___lwdiv	;wreg free
  2596  000D1A  C00F  F01C         	movff	?___lwdiv,utoa@v
  2597  000D1E  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2598  000D22  4A16               	infsnz	utoa@buf,f,c
  2599  000D24  2A17               	incf	utoa@buf+1,f,c
  2600  000D26  501C               	movf	utoa@v,w,c
  2601  000D28  101D               	iorwf	utoa@v+1,w,c
  2602  000D2A  A4D8               	btfss	status,2,c
  2603  000D2C  D7EC               	goto	l1838
  2604  000D2E  C016  FFD9         	movff	utoa@buf,fsr2l
  2605  000D32  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2606  000D36  0E00               	movlw	0
  2607  000D38  6EDF               	movwf	indf2,c
  2608  000D3A  0616               	decf	utoa@buf,f,c
  2609  000D3C  A0D8               	btfss	status,0,c
  2610  000D3E  0617               	decf	utoa@buf+1,f,c
  2611  000D40                     l1848:
  2612  000D40  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2613  000D44  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2614  000D48  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2615  000D4C  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2616  000D50  ECBB  F009         	call	___lwmod	;wreg free
  2617  000D54  500F               	movf	?___lwmod,w,c
  2618  000D56  6E1E               	movwf	utoa@c,c
  2619  000D58  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2620  000D5C  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2621  000D60  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2622  000D64  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2623  000D68  EC02  F009         	call	___lwdiv	;wreg free
  2624  000D6C  C00F  F018         	movff	?___lwdiv,utoa@val
  2625  000D70  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2626  000D74  0E09               	movlw	9
  2627  000D76  641E               	cpfsgt	utoa@c,c
  2628  000D78  D002               	goto	l748
  2629  000D7A  0E07               	movlw	7
  2630  000D7C  261E               	addwf	utoa@c,f,c
  2631  000D7E                     l748:
  2632  000D7E  0E30               	movlw	48
  2633  000D80  261E               	addwf	utoa@c,f,c
  2634  000D82  C016  FFD9         	movff	utoa@buf,fsr2l
  2635  000D86  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2636  000D8A  C01E  FFDF         	movff	utoa@c,indf2
  2637  000D8E  0616               	decf	utoa@buf,f,c
  2638  000D90  A0D8               	btfss	status,0,c
  2639  000D92  0617               	decf	utoa@buf+1,f,c
  2640  000D94  5018               	movf	utoa@val,w,c
  2641  000D96  1019               	iorwf	utoa@val+1,w,c
  2642  000D98  A4D8               	btfss	status,2,c
  2643  000D9A  D7D2               	goto	l1848
  2644                           
  2645                           ;	Return value of _utoa is never used
  2646  000D9C  4A16               	infsnz	utoa@buf,f,c
  2647  000D9E  2A17               	incf	utoa@buf+1,f,c
  2648  000DA0  0012               	return	
  2649  000DA2                     __end_of_utoa:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           intcon2	equ	0xFF1
  2656                           intcon3	equ	0xFF0
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postinc1	equ	0xFE6
  2660                           fsr1h	equ	0xFE2
  2661                           fsr1l	equ	0xFE1
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function ___lwmod *****************
  2669 ;; Defined at:
  2670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  dividend        2   14[COMRAM] unsigned int 
  2673 ;;  divisor         2   16[COMRAM] unsigned int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  counter         1   18[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2   14[COMRAM] unsigned int 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2685 ;;      Params:         4       0       0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0
  2688 ;;      Totals:         5       0       0       0       0       0       0
  2689 ;;Total ram usage:        5 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    1
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_utoa
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text19
  2700  001376                     __ptext19:
  2701                           	opt stack 0
  2702  001376                     ___lwmod:
  2703                           	opt stack 25
  2704                           
  2705                           ;incstack = 0
  2706  001376  5011               	movf	___lwmod@divisor,w,c
  2707  001378  1012               	iorwf	___lwmod@divisor+1,w,c
  2708  00137A  B4D8               	btfsc	status,2,c
  2709  00137C  D018               	goto	l837
  2710  00137E  0E01               	movlw	1
  2711  001380  6E13               	movwf	___lwmod@counter,c
  2712  001382  D004               	goto	l1802
  2713  001384                     l1800:
  2714  001384  90D8               	bcf	status,0,c
  2715  001386  3611               	rlcf	___lwmod@divisor,f,c
  2716  001388  3612               	rlcf	___lwmod@divisor+1,f,c
  2717  00138A  2A13               	incf	___lwmod@counter,f,c
  2718  00138C                     l1802:
  2719  00138C  AE12               	btfss	___lwmod@divisor+1,7,c
  2720  00138E  D7FA               	goto	l1800
  2721  001390                     l1804:
  2722  001390  5011               	movf	___lwmod@divisor,w,c
  2723  001392  5C0F               	subwf	___lwmod@dividend,w,c
  2724  001394  5012               	movf	___lwmod@divisor+1,w,c
  2725  001396  5810               	subwfb	___lwmod@dividend+1,w,c
  2726  001398  A0D8               	btfss	status,0,c
  2727  00139A  D004               	goto	l1808
  2728  00139C  5011               	movf	___lwmod@divisor,w,c
  2729  00139E  5E0F               	subwf	___lwmod@dividend,f,c
  2730  0013A0  5012               	movf	___lwmod@divisor+1,w,c
  2731  0013A2  5A10               	subwfb	___lwmod@dividend+1,f,c
  2732  0013A4                     l1808:
  2733  0013A4  90D8               	bcf	status,0,c
  2734  0013A6  3212               	rrcf	___lwmod@divisor+1,f,c
  2735  0013A8  3211               	rrcf	___lwmod@divisor,f,c
  2736  0013AA  2E13               	decfsz	___lwmod@counter,f,c
  2737  0013AC  D7F1               	goto	l1804
  2738  0013AE                     l837:
  2739  0013AE  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2740  0013B2  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2741  0013B6  0012               	return		;funcret
  2742  0013B8                     __end_of___lwmod:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           prodh	equ	0xFF4
  2746                           prodl	equ	0xFF3
  2747                           intcon	equ	0xFF2
  2748                           intcon2	equ	0xFF1
  2749                           intcon3	equ	0xFF0
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postinc1	equ	0xFE6
  2753                           fsr1h	equ	0xFE2
  2754                           fsr1l	equ	0xFE1
  2755                           indf2	equ	0xFDF
  2756                           postinc2	equ	0xFDE
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function ___lwdiv *****************
  2762 ;; Defined at:
  2763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  dividend        2   14[COMRAM] unsigned int 
  2766 ;;  divisor         2   16[COMRAM] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  quotient        2   18[COMRAM] unsigned int 
  2769 ;;  counter         1   20[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2   14[COMRAM] unsigned int 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2779 ;;      Params:         4       0       0       0       0       0       0
  2780 ;;      Locals:         3       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0
  2782 ;;      Totals:         7       0       0       0       0       0       0
  2783 ;;Total ram usage:        7 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_utoa
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text20
  2794  001204                     __ptext20:
  2795                           	opt stack 0
  2796  001204                     ___lwdiv:
  2797                           	opt stack 25
  2798                           
  2799                           ;incstack = 0
  2800  001204  0E00               	movlw	0
  2801  001206  6E14               	movwf	___lwdiv@quotient+1,c
  2802  001208  0E00               	movlw	0
  2803  00120A  6E13               	movwf	___lwdiv@quotient,c
  2804  00120C  5011               	movf	___lwdiv@divisor,w,c
  2805  00120E  1012               	iorwf	___lwdiv@divisor+1,w,c
  2806  001210  B4D8               	btfsc	status,2,c
  2807  001212  D01C               	goto	l827
  2808  001214  0E01               	movlw	1
  2809  001216  6E15               	movwf	___lwdiv@counter,c
  2810  001218  D004               	goto	l1782
  2811  00121A                     l1780:
  2812  00121A  90D8               	bcf	status,0,c
  2813  00121C  3611               	rlcf	___lwdiv@divisor,f,c
  2814  00121E  3612               	rlcf	___lwdiv@divisor+1,f,c
  2815  001220  2A15               	incf	___lwdiv@counter,f,c
  2816  001222                     l1782:
  2817  001222  AE12               	btfss	___lwdiv@divisor+1,7,c
  2818  001224  D7FA               	goto	l1780
  2819  001226                     l1784:
  2820  001226  90D8               	bcf	status,0,c
  2821  001228  3613               	rlcf	___lwdiv@quotient,f,c
  2822  00122A  3614               	rlcf	___lwdiv@quotient+1,f,c
  2823  00122C  5011               	movf	___lwdiv@divisor,w,c
  2824  00122E  5C0F               	subwf	___lwdiv@dividend,w,c
  2825  001230  5012               	movf	___lwdiv@divisor+1,w,c
  2826  001232  5810               	subwfb	___lwdiv@dividend+1,w,c
  2827  001234  A0D8               	btfss	status,0,c
  2828  001236  D005               	goto	l1792
  2829  001238  5011               	movf	___lwdiv@divisor,w,c
  2830  00123A  5E0F               	subwf	___lwdiv@dividend,f,c
  2831  00123C  5012               	movf	___lwdiv@divisor+1,w,c
  2832  00123E  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2833  001240  8013               	bsf	___lwdiv@quotient,0,c
  2834  001242                     l1792:
  2835  001242  90D8               	bcf	status,0,c
  2836  001244  3212               	rrcf	___lwdiv@divisor+1,f,c
  2837  001246  3211               	rrcf	___lwdiv@divisor,f,c
  2838  001248  2E15               	decfsz	___lwdiv@counter,f,c
  2839  00124A  D7ED               	goto	l1784
  2840  00124C                     l827:
  2841  00124C  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2842  001250  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2843  001254  0012               	return		;funcret
  2844  001256                     __end_of___lwdiv:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           intcon	equ	0xFF2
  2850                           intcon2	equ	0xFF1
  2851                           intcon3	equ	0xFF0
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postinc1	equ	0xFE6
  2855                           fsr1h	equ	0xFE2
  2856                           fsr1l	equ	0xFE1
  2857                           indf2	equ	0xFDF
  2858                           postinc2	equ	0xFDE
  2859                           fsr2h	equ	0xFDA
  2860                           fsr2l	equ	0xFD9
  2861                           status	equ	0xFD8
  2862                           
  2863 ;; *************** function _receive_data *****************
  2864 ;; Defined at:
  2865 ;;		line 199 in file "SlaveComm_PIC18.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  receive_buff    2   17[COMRAM] PTR struct buffer
  2868 ;;		 -> communications@receive_buffer(42), 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  data            1   20[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      enum E7617
  2873 ;; Registers used:
  2874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         2       0       0       0       0       0       0
  2881 ;;      Locals:         1       0       0       0       0       0       0
  2882 ;;      Temps:          1       0       0       0       0       0       0
  2883 ;;      Totals:         4       0       0       0       0       0       0
  2884 ;;Total ram usage:        4 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    2
  2887 ;; This function calls:
  2888 ;;		_SPI_receive_data
  2889 ;; This function is called by:
  2890 ;;		_communications
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text21
  2895  000C3E                     __ptext21:
  2896                           	opt stack 0
  2897  000C3E                     _receive_data:
  2898                           	opt stack 27
  2899                           
  2900                           ;SlaveComm_PIC18.c: 201: char data;
  2901                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  2902                           ;SlaveComm_PIC18.c: 205: if( my_status == receive_end_command )
  2903                           
  2904                           ;incstack = 0
  2905  000C3E  0E02               	movlw	2
  2906  000C40  1840               	xorwf	receive_data@my_status,w,c
  2907  000C42  A4D8               	btfss	status,2,c
  2908  000C44  D002               	goto	l2080
  2909                           
  2910                           ;SlaveComm_PIC18.c: 206: {
  2911                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  2912  000C46  0E00               	movlw	0
  2913  000C48  6E40               	movwf	receive_data@my_status,c
  2914  000C4A                     l2080:
  2915                           
  2916                           ;SlaveComm_PIC18.c: 208: }
  2917                           ;SlaveComm_PIC18.c: 210: if( SPI_receive_data( &data ) == 1 )
  2918  000C4A  0E15               	movlw	low receive_data@data
  2919  000C4C  6E0F               	movwf	SPI_receive_data@data,c
  2920  000C4E  0E00               	movlw	high receive_data@data
  2921  000C50  6E10               	movwf	SPI_receive_data@data+1,c
  2922  000C52  EC42  F00A         	call	_SPI_receive_data	;wreg free
  2923  000C56  06E8               	decf	wreg,f,c
  2924  000C58  A4D8               	btfss	status,2,c
  2925  000C5A  D04F               	goto	l272
  2926                           
  2927                           ;SlaveComm_PIC18.c: 211: {
  2928                           ;SlaveComm_PIC18.c: 212: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2929  000C5C  0E21               	movlw	33
  2930  000C5E  1815               	xorwf	receive_data@data,w,c
  2931  000C60  A4D8               	btfss	status,2,c
  2932  000C62  D015               	goto	l2092
  2933  000C64  0440               	decf	receive_data@my_status,w,c
  2934  000C66  B4D8               	btfsc	status,2,c
  2935  000C68  D012               	goto	l2092
  2936                           
  2937                           ;SlaveComm_PIC18.c: 213: {
  2938                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  2939  000C6A  0E01               	movlw	1
  2940  000C6C  6E40               	movwf	receive_data@my_status,c
  2941                           
  2942                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  2943  000C6E  EE20 F029          	lfsr	2,41
  2944  000C72  5012               	movf	receive_data@receive_buffer,w,c
  2945  000C74  26D9               	addwf	fsr2l,f,c
  2946  000C76  5013               	movf	receive_data@receive_buffer+1,w,c
  2947  000C78  22DA               	addwfc	fsr2h,f,c
  2948  000C7A  0E00               	movlw	0
  2949  000C7C  6EDF               	movwf	indf2,c
  2950                           
  2951                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  2952  000C7E  EE20 F028          	lfsr	2,40
  2953  000C82  5012               	movf	receive_data@receive_buffer,w,c
  2954  000C84  26D9               	addwf	fsr2l,f,c
  2955  000C86  5013               	movf	receive_data@receive_buffer+1,w,c
  2956  000C88  22DA               	addwfc	fsr2h,f,c
  2957  000C8A  0E00               	movlw	0
  2958  000C8C  6EDF               	movwf	indf2,c
  2959  000C8E                     l2092:
  2960                           
  2961                           ;SlaveComm_PIC18.c: 217: }
  2962                           ;SlaveComm_PIC18.c: 219: if( my_status == receive_in_command )
  2963  000C8E  0440               	decf	receive_data@my_status,w,c
  2964  000C90  A4D8               	btfss	status,2,c
  2965  000C92  D02A               	goto	l2102
  2966                           
  2967                           ;SlaveComm_PIC18.c: 220: {
  2968                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2969  000C94  EE20 F028          	lfsr	2,40
  2970  000C98  5012               	movf	receive_data@receive_buffer,w,c
  2971  000C9A  26D9               	addwf	fsr2l,f,c
  2972  000C9C  5013               	movf	receive_data@receive_buffer+1,w,c
  2973  000C9E  22DA               	addwfc	fsr2h,f,c
  2974  000CA0  50DF               	movf	indf2,w,c
  2975  000CA2  6E14               	movwf	??_receive_data& (0+255),c
  2976  000CA4  5014               	movf	??_receive_data,w,c
  2977  000CA6  0D01               	mullw	1
  2978  000CA8  50F3               	movf	prodl,w,c
  2979  000CAA  2412               	addwf	receive_data@receive_buffer,w,c
  2980  000CAC  6ED9               	movwf	fsr2l,c
  2981  000CAE  50F4               	movf	prodh,w,c
  2982  000CB0  2013               	addwfc	receive_data@receive_buffer+1,w,c
  2983  000CB2  6EDA               	movwf	fsr2h,c
  2984  000CB4  C015  FFDF         	movff	receive_data@data,indf2
  2985                           
  2986                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  2987  000CB8  EE20 F028          	lfsr	2,40
  2988  000CBC  5012               	movf	receive_data@receive_buffer,w,c
  2989  000CBE  26D9               	addwf	fsr2l,f,c
  2990  000CC0  5013               	movf	receive_data@receive_buffer+1,w,c
  2991  000CC2  22DA               	addwfc	fsr2h,f,c
  2992  000CC4  2ADF               	incf	indf2,f,c
  2993                           
  2994                           ;SlaveComm_PIC18.c: 224: if( receive_buffer->write_position >= 40 )
  2995  000CC6  EE20 F028          	lfsr	2,40
  2996  000CCA  5012               	movf	receive_data@receive_buffer,w,c
  2997  000CCC  26D9               	addwf	fsr2l,f,c
  2998  000CCE  5013               	movf	receive_data@receive_buffer+1,w,c
  2999  000CD0  22DA               	addwfc	fsr2h,f,c
  3000  000CD2  0E27               	movlw	39
  3001  000CD4  64DF               	cpfsgt	indf2,c
  3002  000CD6  D008               	goto	l2102
  3003                           
  3004                           ;SlaveComm_PIC18.c: 225: {
  3005                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = ( 40 - 1 );
  3006  000CD8  EE20 F028          	lfsr	2,40
  3007  000CDC  5012               	movf	receive_data@receive_buffer,w,c
  3008  000CDE  26D9               	addwf	fsr2l,f,c
  3009  000CE0  5013               	movf	receive_data@receive_buffer+1,w,c
  3010  000CE2  22DA               	addwfc	fsr2h,f,c
  3011  000CE4  0E27               	movlw	39
  3012  000CE6  6EDF               	movwf	indf2,c
  3013  000CE8                     l2102:
  3014                           
  3015                           ;SlaveComm_PIC18.c: 227: }
  3016                           ;SlaveComm_PIC18.c: 228: }
  3017                           ;SlaveComm_PIC18.c: 230: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  3018  000CE8  0440               	decf	receive_data@my_status,w,c
  3019  000CEA  A4D8               	btfss	status,2,c
  3020  000CEC  D006               	goto	l272
  3021  000CEE  0E2A               	movlw	42
  3022  000CF0  1815               	xorwf	receive_data@data,w,c
  3023  000CF2  A4D8               	btfss	status,2,c
  3024  000CF4  D002               	goto	l272
  3025                           
  3026                           ;SlaveComm_PIC18.c: 231: {
  3027                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3028  000CF6  0E02               	movlw	2
  3029  000CF8  6E40               	movwf	receive_data@my_status,c
  3030  000CFA                     l272:
  3031                           
  3032                           ;SlaveComm_PIC18.c: 233: }
  3033                           ;SlaveComm_PIC18.c: 234: }
  3034                           ;SlaveComm_PIC18.c: 236: return my_status;
  3035  000CFA  5040               	movf	receive_data@my_status,w,c
  3036  000CFC  0012               	return	
  3037  000CFE                     __end_of_receive_data:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           intcon	equ	0xFF2
  3043                           intcon2	equ	0xFF1
  3044                           intcon3	equ	0xFF0
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postinc1	equ	0xFE6
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           indf2	equ	0xFDF
  3051                           postinc2	equ	0xFDE
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _SPI_receive_data *****************
  3057 ;; Defined at:
  3058 ;;		line 550 in file "SlaveComm_PIC18.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  data            2   14[COMRAM] PTR unsigned char 
  3061 ;;		 -> receive_data@data(1), 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  recvGood        1   16[COMRAM] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      unsigned char 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr2l, fsr2h, status,2
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3073 ;;      Params:         2       0       0       0       0       0       0
  3074 ;;      Locals:         1       0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0
  3076 ;;      Totals:         3       0       0       0       0       0       0
  3077 ;;Total ram usage:        3 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_receive_data
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text22
  3088  001484                     __ptext22:
  3089                           	opt stack 0
  3090  001484                     _SPI_receive_data:
  3091                           	opt stack 27
  3092                           
  3093                           ;SlaveComm_PIC18.c: 553: bool recvGood = 0;
  3094                           
  3095                           ;incstack = 0
  3096  001484  0E00               	movlw	0
  3097  001486  6E11               	movwf	SPI_receive_data@recvGood,c
  3098                           
  3099                           ;SlaveComm_PIC18.c: 555: if( SSP2STATbits.BF == 1 )
  3100  001488  A06D               	btfss	3949,0,c	;volatile
  3101  00148A  D00C               	goto	l1904
  3102                           
  3103                           ;SlaveComm_PIC18.c: 556: {
  3104                           ;SlaveComm_PIC18.c: 557: *data = SSP2BUF;
  3105  00148C  C00F  FFD9         	movff	SPI_receive_data@data,fsr2l
  3106  001490  C010  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3107  001494  CF6F FFDF          	movff	3951,indf2	;volatile
  3108                           
  3109                           ;SlaveComm_PIC18.c: 558: recvGood = 1;
  3110  001498  0E01               	movlw	1
  3111  00149A  6E11               	movwf	SPI_receive_data@recvGood,c
  3112                           
  3113                           ;SlaveComm_PIC18.c: 559: SSP2CON1bits.WCOL = 0;
  3114  00149C  9E6C               	bcf	3948,7,c	;volatile
  3115                           
  3116                           ;SlaveComm_PIC18.c: 560: SPI_transmit_wait = 0;
  3117  00149E  0E00               	movlw	0
  3118  0014A0  6E3A               	movwf	_SPI_transmit_wait,c
  3119                           
  3120                           ;SlaveComm_PIC18.c: 561: }
  3121  0014A2  D002               	goto	l377
  3122  0014A4                     l1904:
  3123                           
  3124                           ;SlaveComm_PIC18.c: 562: else
  3125                           ;SlaveComm_PIC18.c: 563: {
  3126                           ;SlaveComm_PIC18.c: 564: recvGood = 0;
  3127  0014A4  0E00               	movlw	0
  3128  0014A6  6E11               	movwf	SPI_receive_data@recvGood,c
  3129  0014A8                     l377:
  3130                           
  3131                           ;SlaveComm_PIC18.c: 565: }
  3132                           ;SlaveComm_PIC18.c: 567: return recvGood;
  3133  0014A8  5011               	movf	SPI_receive_data@recvGood,w,c
  3134  0014AA  0012               	return	
  3135  0014AC                     __end_of_SPI_receive_data:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           intcon	equ	0xFF2
  3141                           intcon2	equ	0xFF1
  3142                           intcon3	equ	0xFF0
  3143                           postinc0	equ	0xFEE
  3144                           wreg	equ	0xFE8
  3145                           postinc1	equ	0xFE6
  3146                           fsr1h	equ	0xFE2
  3147                           fsr1l	equ	0xFE1
  3148                           indf2	equ	0xFDF
  3149                           postinc2	equ	0xFDE
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _process_data *****************
  3155 ;; Defined at:
  3156 ;;		line 239 in file "SlaveComm_PIC18.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  receive_buff    2   39[COMRAM] PTR struct buffer
  3159 ;;		 -> communications@receive_buffer(42), 
  3160 ;;  send_buffer     2   41[COMRAM] PTR struct buffer
  3161 ;;		 -> communications@send_buffer(42), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  parameters     50    0[BANK0 ] unsigned char [10][5]
  3164 ;;  end_of_trans    1   50[BANK0 ] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      unsigned char 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         4       0       0       0       0       0       0
  3175 ;;      Locals:         0      51       0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0
  3177 ;;      Totals:         4      51       0       0       0       0       0
  3178 ;;Total ram usage:       55 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    6
  3181 ;; This function calls:
  3182 ;;		_process_data_parameterize
  3183 ;;		_process_data_parameters
  3184 ;; This function is called by:
  3185 ;;		_communications
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text23
  3190  001422                     __ptext23:
  3191                           	opt stack 0
  3192  001422                     _process_data:
  3193                           	opt stack 23
  3194                           
  3195                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3196                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3197                           ;SlaveComm_PIC18.c: 248: process_data_parameterize( parameters, receive_buffer );
  3198                           
  3199                           ;incstack = 0
  3200  001422  0EB4               	movlw	low process_data@parameters
  3201  001424  6E15               	movwf	process_data_parameterize@parameters,c
  3202  001426  0E00               	movlw	high process_data@parameters
  3203  001428  6E16               	movwf	process_data_parameterize@parameters+1,c
  3204  00142A  C028  F017         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3205  00142E  C029  F018         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3206  001432  EC5B  F004         	call	_process_data_parameterize	;wreg free
  3207                           
  3208                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3209  001436  0EB4               	movlw	low process_data@parameters
  3210  001438  6E23               	movwf	process_data_parameters@parameters,c
  3211  00143A  0E00               	movlw	high process_data@parameters
  3212  00143C  6E24               	movwf	process_data_parameters@parameters+1,c
  3213  00143E  C02A  F025         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3214  001442  C02B  F026         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3215  001446  EC30  F003         	call	_process_data_parameters	;wreg free
  3216  00144A  0100               	movlb	0	; () banked
  3217  00144C  6FE6               	movwf	process_data@end_of_transmission_received& (0+255),b
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3221  00144E  0100               	movlb	0	; () banked
  3222  001450  51E6               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3223  001452  0012               	return	
  3224  001454                     __end_of_process_data:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           intcon2	equ	0xFF1
  3231                           intcon3	equ	0xFF0
  3232                           postinc0	equ	0xFEE
  3233                           wreg	equ	0xFE8
  3234                           postinc1	equ	0xFE6
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _process_data_parameters *****************
  3244 ;; Defined at:
  3245 ;;		line 315 in file "SlaveComm_PIC18.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  parameters      2   34[COMRAM] PTR unsigned char [10]
  3248 ;;		 -> process_data@parameters(50), 
  3249 ;;  send_buffer     2   36[COMRAM] PTR struct buffer
  3250 ;;		 -> communications@send_buffer(42), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  end_of_trans    1   38[COMRAM] unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      unsigned char 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         4       0       0       0       0       0       0
  3263 ;;      Locals:         1       0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0
  3265 ;;      Totals:         5       0       0       0       0       0       0
  3266 ;;Total ram usage:        5 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    5
  3269 ;; This function calls:
  3270 ;;		_command_builder3
  3271 ;;		_send_end_of_transmission
  3272 ;;		_strmatch
  3273 ;; This function is called by:
  3274 ;;		_process_data
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text24
  3279  000660                     __ptext24:
  3280                           	opt stack 0
  3281  000660                     _process_data_parameters:
  3282                           	opt stack 23
  3283                           
  3284                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;incstack = 0
  3288  000660  0E00               	movlw	0
  3289  000662  6E27               	movwf	process_data_parameters@end_of_transmission_received,c
  3290                           
  3291                           ;SlaveComm_PIC18.c: 320: if( strmatch( parameters[0], "END" ) == 1 )
  3292  000664  C023  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3293  000668  C024  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3294  00066C  0E4F               	movlw	low STR_1
  3295  00066E  6E1C               	movwf	strmatch@b,c
  3296  000670  0E06               	movlw	high STR_1
  3297  000672  6E1D               	movwf	strmatch@b+1,c
  3298  000674  EC2A  F00A         	call	_strmatch	;wreg free
  3299  000678  06E8               	decf	wreg,f,c
  3300  00067A  A4D8               	btfss	status,2,c
  3301  00067C  D003               	goto	l1956
  3302                           
  3303                           ;SlaveComm_PIC18.c: 321: {
  3304                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3305  00067E  0E01               	movlw	1
  3306  000680  6E27               	movwf	process_data_parameters@end_of_transmission_received,c
  3307                           
  3308                           ;SlaveComm_PIC18.c: 332: }
  3309  000682  D117               	goto	l2002
  3310  000684                     l1956:
  3311                           
  3312                           ;SlaveComm_PIC18.c: 333: else if( strmatch( parameters[0], "Set" ) == 1 )
  3313  000684  C023  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3314  000688  C024  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3315  00068C  0E57               	movlw	low STR_2
  3316  00068E  6E1C               	movwf	strmatch@b,c
  3317  000690  0E06               	movlw	high STR_2
  3318  000692  6E1D               	movwf	strmatch@b+1,c
  3319  000694  EC2A  F00A         	call	_strmatch	;wreg free
  3320  000698  06E8               	decf	wreg,f,c
  3321  00069A  A4D8               	btfss	status,2,c
  3322  00069C  D00D               	goto	l1960
  3323                           
  3324                           ;SlaveComm_PIC18.c: 334: {
  3325                           ;SlaveComm_PIC18.c: 335: if( strmatch( parameters[1], "Calibration" ) == 1 )
  3326  00069E  0E0A               	movlw	10
  3327  0006A0  2423               	addwf	process_data_parameters@parameters,w,c
  3328  0006A2  6E1A               	movwf	strmatch@a,c
  3329  0006A4  0E00               	movlw	0
  3330  0006A6  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3331  0006A8  6E1B               	movwf	strmatch@a+1,c
  3332  0006AA  0E01               	movlw	low STR_3
  3333  0006AC  6E1C               	movwf	strmatch@b,c
  3334  0006AE  0E06               	movlw	high STR_3
  3335  0006B0  6E1D               	movwf	strmatch@b+1,c
  3336  0006B2  EC2A  F00A         	call	_strmatch	;wreg free
  3337                           
  3338                           ;SlaveComm_PIC18.c: 338: }
  3339                           ;SlaveComm_PIC18.c: 340: }
  3340                           
  3341                           ;SlaveComm_PIC18.c: 336: {
  3342  0006B6  D0FD               	goto	l2002
  3343  0006B8                     l1960:
  3344                           
  3345                           ;SlaveComm_PIC18.c: 341: else if( strmatch( parameters[0], "Read" ) == 1 )
  3346  0006B8  C023  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3347  0006BC  C024  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3348  0006C0  0E34               	movlw	low STR_4
  3349  0006C2  6E1C               	movwf	strmatch@b,c
  3350  0006C4  0E06               	movlw	high STR_4
  3351  0006C6  6E1D               	movwf	strmatch@b+1,c
  3352  0006C8  EC2A  F00A         	call	_strmatch	;wreg free
  3353  0006CC  06E8               	decf	wreg,f,c
  3354  0006CE  B4D8               	btfsc	status,2,c
  3355  0006D0  D0F0               	goto	l2002
  3356                           
  3357                           ;SlaveComm_PIC18.c: 345: else if( strmatch( parameters[0], "Data" ) == 1 )
  3358                           
  3359                           ;SlaveComm_PIC18.c: 342: {
  3360                           ;SlaveComm_PIC18.c: 344: }
  3361  0006D2  C023  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3362  0006D6  C024  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3363  0006DA  0E2F               	movlw	low STR_5
  3364  0006DC  6E1C               	movwf	strmatch@b,c
  3365  0006DE  0E06               	movlw	high STR_5
  3366  0006E0  6E1D               	movwf	strmatch@b+1,c
  3367  0006E2  EC2A  F00A         	call	_strmatch	;wreg free
  3368  0006E6  06E8               	decf	wreg,f,c
  3369  0006E8  A4D8               	btfss	status,2,c
  3370  0006EA  D053               	goto	l1976
  3371                           
  3372                           ;SlaveComm_PIC18.c: 346: {
  3373                           ;SlaveComm_PIC18.c: 347: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3374  0006EC  0E0A               	movlw	10
  3375  0006EE  2423               	addwf	process_data_parameters@parameters,w,c
  3376  0006F0  6E1A               	movwf	strmatch@a,c
  3377  0006F2  0E00               	movlw	0
  3378  0006F4  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3379  0006F6  6E1B               	movwf	strmatch@a+1,c
  3380  0006F8  0E2A               	movlw	low STR_6
  3381  0006FA  6E1C               	movwf	strmatch@b,c
  3382  0006FC  0E06               	movlw	high STR_6
  3383  0006FE  6E1D               	movwf	strmatch@b+1,c
  3384  000700  EC2A  F00A         	call	_strmatch	;wreg free
  3385  000704  06E8               	decf	wreg,f,c
  3386  000706  A4D8               	btfss	status,2,c
  3387  000708  D0D4               	goto	l2002
  3388                           
  3389                           ;SlaveComm_PIC18.c: 348: {
  3390                           ;SlaveComm_PIC18.c: 349: if( strmatch( parameters[2], "On" ) == 1 )
  3391  00070A  0E14               	movlw	20
  3392  00070C  2423               	addwf	process_data_parameters@parameters,w,c
  3393  00070E  6E1A               	movwf	strmatch@a,c
  3394  000710  0E00               	movlw	0
  3395  000712  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3396  000714  6E1B               	movwf	strmatch@a+1,c
  3397  000716  0E5B               	movlw	low STR_7
  3398  000718  6E1C               	movwf	strmatch@b,c
  3399  00071A  0E06               	movlw	high STR_7
  3400  00071C  6E1D               	movwf	strmatch@b+1,c
  3401  00071E  EC2A  F00A         	call	_strmatch	;wreg free
  3402  000722  06E8               	decf	wreg,f,c
  3403  000724  A4D8               	btfss	status,2,c
  3404  000726  D013               	goto	l1972
  3405                           
  3406                           ;SlaveComm_PIC18.c: 350: {
  3407                           ;SlaveComm_PIC18.c: 351: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  3408  000728  C025  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3409  00072C  C026  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3410  000730  0E57               	movlw	low STR_2
  3411  000732  6E1D               	movwf	command_builder3@data1,c
  3412  000734  0E06               	movlw	high STR_2
  3413  000736  6E1E               	movwf	command_builder3@data1+1,c
  3414  000738  0E2A               	movlw	low STR_6
  3415  00073A  6E1F               	movwf	command_builder3@data2,c
  3416  00073C  0E06               	movlw	high STR_6
  3417  00073E  6E20               	movwf	command_builder3@data2+1,c
  3418  000740  0E53               	movlw	low STR_10
  3419  000742  6E21               	movwf	command_builder3@data3,c
  3420  000744  0E06               	movlw	high STR_10
  3421  000746  6E22               	movwf	command_builder3@data3+1,c
  3422  000748  ECD1  F006         	call	_command_builder3	;wreg free
  3423                           
  3424                           ;SlaveComm_PIC18.c: 352: }
  3425  00074C  D0B2               	goto	l2002
  3426  00074E                     l1972:
  3427                           
  3428                           ;SlaveComm_PIC18.c: 353: else if( strmatch( parameters[2], "Off" ) == 1 )
  3429  00074E  0E14               	movlw	20
  3430  000750  2423               	addwf	process_data_parameters@parameters,w,c
  3431  000752  6E1A               	movwf	strmatch@a,c
  3432  000754  0E00               	movlw	0
  3433  000756  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3434  000758  6E1B               	movwf	strmatch@a+1,c
  3435  00075A  0E53               	movlw	low STR_10
  3436  00075C  6E1C               	movwf	strmatch@b,c
  3437  00075E  0E06               	movlw	high STR_10
  3438  000760  6E1D               	movwf	strmatch@b+1,c
  3439  000762  EC2A  F00A         	call	_strmatch	;wreg free
  3440  000766  06E8               	decf	wreg,f,c
  3441  000768  A4D8               	btfss	status,2,c
  3442  00076A  D0A3               	goto	l2002
  3443                           
  3444                           ;SlaveComm_PIC18.c: 354: {
  3445                           ;SlaveComm_PIC18.c: 355: command_builder3( send_buffer, "Set", "LEDB", "On" );
  3446  00076C  C025  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3447  000770  C026  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3448  000774  0E57               	movlw	low STR_2
  3449  000776  6E1D               	movwf	command_builder3@data1,c
  3450  000778  0E06               	movlw	high STR_2
  3451  00077A  6E1E               	movwf	command_builder3@data1+1,c
  3452  00077C  0E2A               	movlw	low STR_6
  3453  00077E  6E1F               	movwf	command_builder3@data2,c
  3454  000780  0E06               	movlw	high STR_6
  3455  000782  6E20               	movwf	command_builder3@data2+1,c
  3456  000784  0E5B               	movlw	low STR_7
  3457  000786  6E21               	movwf	command_builder3@data3,c
  3458  000788  0E06               	movlw	high STR_7
  3459  00078A  6E22               	movwf	command_builder3@data3+1,c
  3460  00078C  ECD1  F006         	call	_command_builder3	;wreg free
  3461                           
  3462                           ;SlaveComm_PIC18.c: 356: }
  3463                           ;SlaveComm_PIC18.c: 357: }
  3464                           ;SlaveComm_PIC18.c: 358: }
  3465  000790  D090               	goto	l2002
  3466  000792                     l1976:
  3467                           
  3468                           ;SlaveComm_PIC18.c: 359: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3469  000792  C023  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3470  000796  C024  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3471  00079A  0E39               	movlw	low STR_15
  3472  00079C  6E1C               	movwf	strmatch@b,c
  3473  00079E  0E06               	movlw	high STR_15
  3474  0007A0  6E1D               	movwf	strmatch@b+1,c
  3475  0007A2  EC2A  F00A         	call	_strmatch	;wreg free
  3476  0007A6  06E8               	decf	wreg,f,c
  3477  0007A8  A4D8               	btfss	status,2,c
  3478  0007AA  D083               	goto	l2002
  3479                           
  3480                           ;SlaveComm_PIC18.c: 360: {
  3481                           ;SlaveComm_PIC18.c: 361: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3482  0007AC  0E0A               	movlw	10
  3483  0007AE  2423               	addwf	process_data_parameters@parameters,w,c
  3484  0007B0  6E1A               	movwf	strmatch@a,c
  3485  0007B2  0E00               	movlw	0
  3486  0007B4  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3487  0007B6  6E1B               	movwf	strmatch@a+1,c
  3488  0007B8  0E2A               	movlw	low STR_6
  3489  0007BA  6E1C               	movwf	strmatch@b,c
  3490  0007BC  0E06               	movlw	high STR_6
  3491  0007BE  6E1D               	movwf	strmatch@b+1,c
  3492  0007C0  EC2A  F00A         	call	_strmatch	;wreg free
  3493  0007C4  06E8               	decf	wreg,f,c
  3494  0007C6  A4D8               	btfss	status,2,c
  3495  0007C8  D007               	goto	l1982
  3496                           
  3497                           ;SlaveComm_PIC18.c: 362: {
  3498                           ;SlaveComm_PIC18.c: 363: send_end_of_transmission( send_buffer );
  3499  0007CA  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3500  0007CE  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3501  0007D2  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3502                           
  3503                           ;SlaveComm_PIC18.c: 364: }
  3504  0007D6  D06D               	goto	l2002
  3505  0007D8                     l1982:
  3506                           
  3507                           ;SlaveComm_PIC18.c: 365: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3508  0007D8  0E0A               	movlw	10
  3509  0007DA  2423               	addwf	process_data_parameters@parameters,w,c
  3510  0007DC  6E1A               	movwf	strmatch@a,c
  3511  0007DE  0E00               	movlw	0
  3512  0007E0  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3513  0007E2  6E1B               	movwf	strmatch@a+1,c
  3514  0007E4  0E24               	movlw	low STR_17
  3515  0007E6  6E1C               	movwf	strmatch@b,c
  3516  0007E8  0E06               	movlw	high STR_17
  3517  0007EA  6E1D               	movwf	strmatch@b+1,c
  3518  0007EC  EC2A  F00A         	call	_strmatch	;wreg free
  3519  0007F0  06E8               	decf	wreg,f,c
  3520  0007F2  A4D8               	btfss	status,2,c
  3521  0007F4  D007               	goto	l1986
  3522                           
  3523                           ;SlaveComm_PIC18.c: 366: {
  3524                           ;SlaveComm_PIC18.c: 367: send_end_of_transmission( send_buffer );
  3525  0007F6  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3526  0007FA  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3527  0007FE  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3528                           
  3529                           ;SlaveComm_PIC18.c: 368: }
  3530  000802  D057               	goto	l2002
  3531  000804                     l1986:
  3532                           
  3533                           ;SlaveComm_PIC18.c: 369: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3534  000804  0E0A               	movlw	10
  3535  000806  2423               	addwf	process_data_parameters@parameters,w,c
  3536  000808  6E1A               	movwf	strmatch@a,c
  3537  00080A  0E00               	movlw	0
  3538  00080C  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3539  00080E  6E1B               	movwf	strmatch@a+1,c
  3540  000810  0E17               	movlw	low STR_18
  3541  000812  6E1C               	movwf	strmatch@b,c
  3542  000814  0E06               	movlw	high STR_18
  3543  000816  6E1D               	movwf	strmatch@b+1,c
  3544  000818  EC2A  F00A         	call	_strmatch	;wreg free
  3545  00081C  06E8               	decf	wreg,f,c
  3546  00081E  A4D8               	btfss	status,2,c
  3547  000820  D007               	goto	l1990
  3548                           
  3549                           ;SlaveComm_PIC18.c: 370: {
  3550                           ;SlaveComm_PIC18.c: 371: send_end_of_transmission( send_buffer );
  3551  000822  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3552  000826  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3553  00082A  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3554                           
  3555                           ;SlaveComm_PIC18.c: 372: }
  3556  00082E  D041               	goto	l2002
  3557  000830                     l1990:
  3558                           
  3559                           ;SlaveComm_PIC18.c: 373: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3560  000830  0E0A               	movlw	10
  3561  000832  2423               	addwf	process_data_parameters@parameters,w,c
  3562  000834  6E1A               	movwf	strmatch@a,c
  3563  000836  0E00               	movlw	0
  3564  000838  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3565  00083A  6E1B               	movwf	strmatch@a+1,c
  3566  00083C  0E1E               	movlw	low STR_19
  3567  00083E  6E1C               	movwf	strmatch@b,c
  3568  000840  0E06               	movlw	high STR_19
  3569  000842  6E1D               	movwf	strmatch@b+1,c
  3570  000844  EC2A  F00A         	call	_strmatch	;wreg free
  3571  000848  06E8               	decf	wreg,f,c
  3572  00084A  A4D8               	btfss	status,2,c
  3573  00084C  D007               	goto	l1994
  3574                           
  3575                           ;SlaveComm_PIC18.c: 374: {
  3576                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission( send_buffer );
  3577  00084E  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3578  000852  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3579  000856  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3580                           
  3581                           ;SlaveComm_PIC18.c: 376: }
  3582  00085A  D02B               	goto	l2002
  3583  00085C                     l1994:
  3584                           
  3585                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3586  00085C  0E0A               	movlw	10
  3587  00085E  2423               	addwf	process_data_parameters@parameters,w,c
  3588  000860  6E1A               	movwf	strmatch@a,c
  3589  000862  0E00               	movlw	0
  3590  000864  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3591  000866  6E1B               	movwf	strmatch@a+1,c
  3592  000868  0E3E               	movlw	low STR_20
  3593  00086A  6E1C               	movwf	strmatch@b,c
  3594  00086C  0E06               	movlw	high STR_20
  3595  00086E  6E1D               	movwf	strmatch@b+1,c
  3596  000870  EC2A  F00A         	call	_strmatch	;wreg free
  3597  000874  06E8               	decf	wreg,f,c
  3598  000876  A4D8               	btfss	status,2,c
  3599  000878  D007               	goto	l1998
  3600                           
  3601                           ;SlaveComm_PIC18.c: 378: {
  3602                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission( send_buffer );
  3603  00087A  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3604  00087E  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3605  000882  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3606                           
  3607                           ;SlaveComm_PIC18.c: 380: }
  3608  000886  D015               	goto	l2002
  3609  000888                     l1998:
  3610                           
  3611                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3612  000888  0E0A               	movlw	10
  3613  00088A  2423               	addwf	process_data_parameters@parameters,w,c
  3614  00088C  6E1A               	movwf	strmatch@a,c
  3615  00088E  0E00               	movlw	0
  3616  000890  2024               	addwfc	process_data_parameters@parameters+1,w,c
  3617  000892  6E1B               	movwf	strmatch@a+1,c
  3618  000894  0E0D               	movlw	low STR_21
  3619  000896  6E1C               	movwf	strmatch@b,c
  3620  000898  0E06               	movlw	high STR_21
  3621  00089A  6E1D               	movwf	strmatch@b+1,c
  3622  00089C  EC2A  F00A         	call	_strmatch	;wreg free
  3623  0008A0  06E8               	decf	wreg,f,c
  3624  0008A2  A4D8               	btfss	status,2,c
  3625  0008A4  D006               	goto	l2002
  3626                           
  3627                           ;SlaveComm_PIC18.c: 382: {
  3628                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission( send_buffer );
  3629  0008A6  C025  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3630  0008AA  C026  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3631  0008AE  ECC9  F00A         	call	_send_end_of_transmission	;wreg free
  3632  0008B2                     l2002:
  3633                           
  3634                           ;SlaveComm_PIC18.c: 384: }
  3635                           ;SlaveComm_PIC18.c: 385: }
  3636                           ;SlaveComm_PIC18.c: 391: return end_of_transmission_received;
  3637  0008B2  5027               	movf	process_data_parameters@end_of_transmission_received,w,c
  3638  0008B4  0012               	return	
  3639  0008B6                     __end_of_process_data_parameters:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           intcon2	equ	0xFF1
  3646                           intcon3	equ	0xFF0
  3647                           postinc0	equ	0xFEE
  3648                           wreg	equ	0xFE8
  3649                           postinc1	equ	0xFE6
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           indf2	equ	0xFDF
  3653                           postinc2	equ	0xFDE
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function _strmatch *****************
  3659 ;; Defined at:
  3660 ;;		line 501 in file "SlaveComm_PIC18.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  a               2   25[COMRAM] PTR unsigned char 
  3663 ;;		 -> process_data@parameters(50), 
  3664 ;;  b               2   27[COMRAM] PTR unsigned char 
  3665 ;;		 -> STR_21(10), STR_20(5), STR_19(6), STR_18(7), 
  3666 ;;		 -> STR_17(6), STR_16(5), STR_15(5), STR_11(4), 
  3667 ;;		 -> STR_7(3), STR_6(5), STR_5(5), STR_4(5), 
  3668 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  result          2   29[COMRAM] int 
  3671 ;;  match           1   31[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3681 ;;      Params:         4       0       0       0       0       0       0
  3682 ;;      Locals:         3       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0
  3684 ;;      Totals:         7       0       0       0       0       0       0
  3685 ;;Total ram usage:        7 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    2
  3688 ;; This function calls:
  3689 ;;		_strcmp2
  3690 ;; This function is called by:
  3691 ;;		_process_data_parameters
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text25
  3696  001454                     __ptext25:
  3697                           	opt stack 0
  3698  001454                     _strmatch:
  3699                           	opt stack 25
  3700                           
  3701                           ;SlaveComm_PIC18.c: 503: int result;
  3702                           ;SlaveComm_PIC18.c: 504: bool match;
  3703                           ;SlaveComm_PIC18.c: 506: result = strcmp2( a, b );
  3704                           
  3705                           ;incstack = 0
  3706  001454  C01A  F00F         	movff	strmatch@a,strcmp2@a
  3707  001458  C01B  F010         	movff	strmatch@a+1,strcmp2@a+1
  3708  00145C  C01C  F011         	movff	strmatch@b,strcmp2@b
  3709  001460  C01D  F012         	movff	strmatch@b+1,strcmp2@b+1
  3710  001464  EC1B  F005         	call	_strcmp2	;wreg free
  3711  001468  C00F  F01E         	movff	?_strcmp2,strmatch@result
  3712  00146C  C010  F01F         	movff	?_strcmp2+1,strmatch@result+1
  3713                           
  3714                           ;SlaveComm_PIC18.c: 508: match = ( result == 0 ) ? 1 : 0;
  3715  001470  501E               	movf	strmatch@result,w,c
  3716  001472  101F               	iorwf	strmatch@result+1,w,c
  3717  001474  A4D8               	btfss	status,2,c
  3718  001476  D002               	goto	u950
  3719  001478  0E01               	movlw	1
  3720  00147A  D001               	goto	u960
  3721  00147C                     u950:
  3722  00147C  0E00               	movlw	0
  3723  00147E                     u960:
  3724  00147E  6E20               	movwf	strmatch@match,c
  3725                           
  3726                           ;SlaveComm_PIC18.c: 510: return match;
  3727  001480  5020               	movf	strmatch@match,w,c
  3728  001482  0012               	return	
  3729  001484                     __end_of_strmatch:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           intcon3	equ	0xFF0
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           postinc1	equ	0xFE6
  3740                           fsr1h	equ	0xFE2
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _strcmp2 *****************
  3749 ;; Defined at:
  3750 ;;		line 513 in file "SlaveComm_PIC18.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  a               2   14[COMRAM] PTR unsigned char 
  3753 ;;		 -> process_data@parameters(50), 
  3754 ;;  b               2   16[COMRAM] PTR unsigned char 
  3755 ;;		 -> STR_21(10), STR_20(5), STR_19(6), STR_18(7), 
  3756 ;;		 -> STR_17(6), STR_16(5), STR_15(5), STR_11(4), 
  3757 ;;		 -> STR_7(3), STR_6(5), STR_5(5), STR_4(5), 
  3758 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  inx             2   23[COMRAM] int 
  3761 ;;  match           2   21[COMRAM] int 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2   14[COMRAM] int 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3771 ;;      Params:         4       0       0       0       0       0       0
  3772 ;;      Locals:         4       0       0       0       0       0       0
  3773 ;;      Temps:          3       0       0       0       0       0       0
  3774 ;;      Totals:        11       0       0       0       0       0       0
  3775 ;;Total ram usage:       11 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_strmatch
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text26
  3786  000A36                     __ptext26:
  3787                           	opt stack 0
  3788  000A36                     _strcmp2:
  3789                           	opt stack 25
  3790                           
  3791                           ;SlaveComm_PIC18.c: 515: int inx = 0;
  3792                           
  3793                           ;incstack = 0
  3794  000A36  0E00               	movlw	0
  3795  000A38  6E19               	movwf	strcmp2@inx+1,c
  3796  000A3A  0E00               	movlw	0
  3797  000A3C  6E18               	movwf	strcmp2@inx,c
  3798                           
  3799                           ;SlaveComm_PIC18.c: 516: int match = 0;
  3800  000A3E  0E00               	movlw	0
  3801  000A40  6E17               	movwf	strcmp2@match+1,c
  3802  000A42  0E00               	movlw	0
  3803  000A44  6E16               	movwf	strcmp2@match,c
  3804                           
  3805                           ;SlaveComm_PIC18.c: 518: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  3806  000A46  D035               	goto	l1752
  3807  000A48                     l1740:
  3808                           
  3809                           ;SlaveComm_PIC18.c: 519: {
  3810                           ;SlaveComm_PIC18.c: 520: if( a[inx] > b[inx] )
  3811  000A48  5018               	movf	strcmp2@inx,w,c
  3812  000A4A  240F               	addwf	strcmp2@a,w,c
  3813  000A4C  6ED9               	movwf	fsr2l,c
  3814  000A4E  5019               	movf	strcmp2@inx+1,w,c
  3815  000A50  2010               	addwfc	strcmp2@a+1,w,c
  3816  000A52  6EDA               	movwf	fsr2h,c
  3817  000A54  5018               	movf	strcmp2@inx,w,c
  3818  000A56  2411               	addwf	strcmp2@b,w,c
  3819  000A58  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3820  000A5A  5019               	movf	strcmp2@inx+1,w,c
  3821  000A5C  2012               	addwfc	strcmp2@b+1,w,c
  3822  000A5E  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  3823  000A60  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3824  000A64  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3825  000A68                     	if	0	;tblptru may be non-zero
  3826  000A68                     	endif
  3827  000A68                     	if	0	;tblptru may be non-zero
  3828  000A68                     	endif
  3829  000A68  50DE               	movf	postinc2,w,c
  3830  000A6A  0009               	tblrd		*+
  3831  000A6C  5CF5               	subwf	tablat,w,c
  3832  000A6E  B0D8               	btfsc	status,0,c
  3833  000A70  D005               	goto	l1744
  3834                           
  3835                           ;SlaveComm_PIC18.c: 521: {
  3836                           ;SlaveComm_PIC18.c: 522: match = 1;
  3837  000A72  0E00               	movlw	0
  3838  000A74  6E17               	movwf	strcmp2@match+1,c
  3839  000A76  0E01               	movlw	1
  3840  000A78  6E16               	movwf	strcmp2@match,c
  3841                           
  3842                           ;SlaveComm_PIC18.c: 523: }
  3843  000A7A  D019               	goto	l1750
  3844  000A7C                     l1744:
  3845                           
  3846                           ;SlaveComm_PIC18.c: 524: else if( a[inx] < b[inx] )
  3847  000A7C  5018               	movf	strcmp2@inx,w,c
  3848  000A7E  240F               	addwf	strcmp2@a,w,c
  3849  000A80  6ED9               	movwf	fsr2l,c
  3850  000A82  5019               	movf	strcmp2@inx+1,w,c
  3851  000A84  2010               	addwfc	strcmp2@a+1,w,c
  3852  000A86  6EDA               	movwf	fsr2h,c
  3853  000A88  50DF               	movf	indf2,w,c
  3854  000A8A  6E13               	movwf	??_strcmp2& (0+255),c
  3855  000A8C  5018               	movf	strcmp2@inx,w,c
  3856  000A8E  2411               	addwf	strcmp2@b,w,c
  3857  000A90  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3858  000A92  5019               	movf	strcmp2@inx+1,w,c
  3859  000A94  2012               	addwfc	strcmp2@b+1,w,c
  3860  000A96  6E15               	movwf	(??_strcmp2+2)& (0+255),c
  3861  000A98  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3862  000A9C  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3863  000AA0                     	if	0	;tblptru may be non-zero
  3864  000AA0                     	endif
  3865  000AA0                     	if	0	;tblptru may be non-zero
  3866  000AA0                     	endif
  3867  000AA0  0008               	tblrd		*
  3868  000AA2  50F5               	movf	tablat,w,c
  3869  000AA4  5C13               	subwf	??_strcmp2,w,c
  3870  000AA6  B0D8               	btfsc	status,0,c
  3871  000AA8  D002               	goto	l1750
  3872                           
  3873                           ;SlaveComm_PIC18.c: 525: {
  3874                           ;SlaveComm_PIC18.c: 526: match = -1;
  3875  000AAA  6816               	setf	strcmp2@match,c
  3876  000AAC  6817               	setf	strcmp2@match+1,c
  3877  000AAE                     l1750:
  3878                           
  3879                           ;SlaveComm_PIC18.c: 531: }
  3880                           ;SlaveComm_PIC18.c: 533: inx++;
  3881  000AAE  4A18               	infsnz	strcmp2@inx,f,c
  3882  000AB0  2A19               	incf	strcmp2@inx+1,f,c
  3883  000AB2                     l1752:
  3884  000AB2  5018               	movf	strcmp2@inx,w,c
  3885  000AB4  240F               	addwf	strcmp2@a,w,c
  3886  000AB6  6ED9               	movwf	fsr2l,c
  3887  000AB8  5019               	movf	strcmp2@inx+1,w,c
  3888  000ABA  2010               	addwfc	strcmp2@a+1,w,c
  3889  000ABC  6EDA               	movwf	fsr2h,c
  3890  000ABE  50DF               	movf	indf2,w,c
  3891  000AC0  B4D8               	btfsc	status,2,c
  3892  000AC2  D013               	goto	l1758
  3893  000AC4  5018               	movf	strcmp2@inx,w,c
  3894  000AC6  2411               	addwf	strcmp2@b,w,c
  3895  000AC8  6E13               	movwf	??_strcmp2& (0+255),c
  3896  000ACA  5019               	movf	strcmp2@inx+1,w,c
  3897  000ACC  2012               	addwfc	strcmp2@b+1,w,c
  3898  000ACE  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3899  000AD0  C013  FFF6         	movff	??_strcmp2,tblptrl
  3900  000AD4  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3901  000AD8                     	if	0	;tblptru may be non-zero
  3902  000AD8                     	endif
  3903  000AD8                     	if	0	;tblptru may be non-zero
  3904  000AD8                     	endif
  3905  000AD8  0008               	tblrd		*
  3906  000ADA  50F5               	movf	tablat,w,c
  3907  000ADC  0900               	iorlw	0
  3908  000ADE  B4D8               	btfsc	status,2,c
  3909  000AE0  D004               	goto	l1758
  3910  000AE2  5016               	movf	strcmp2@match,w,c
  3911  000AE4  1017               	iorwf	strcmp2@match+1,w,c
  3912  000AE6  B4D8               	btfsc	status,2,c
  3913  000AE8  D7AF               	goto	l1740
  3914  000AEA                     l1758:
  3915                           
  3916                           ;SlaveComm_PIC18.c: 534: }
  3917                           ;SlaveComm_PIC18.c: 537: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  3918  000AEA  5018               	movf	strcmp2@inx,w,c
  3919  000AEC  240F               	addwf	strcmp2@a,w,c
  3920  000AEE  6ED9               	movwf	fsr2l,c
  3921  000AF0  5019               	movf	strcmp2@inx+1,w,c
  3922  000AF2  2010               	addwfc	strcmp2@a+1,w,c
  3923  000AF4  6EDA               	movwf	fsr2h,c
  3924  000AF6  50DF               	movf	indf2,w,c
  3925  000AF8  A4D8               	btfss	status,2,c
  3926  000AFA  D012               	goto	l1764
  3927  000AFC  5018               	movf	strcmp2@inx,w,c
  3928  000AFE  2411               	addwf	strcmp2@b,w,c
  3929  000B00  6E13               	movwf	??_strcmp2& (0+255),c
  3930  000B02  5019               	movf	strcmp2@inx+1,w,c
  3931  000B04  2012               	addwfc	strcmp2@b+1,w,c
  3932  000B06  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3933  000B08  C013  FFF6         	movff	??_strcmp2,tblptrl
  3934  000B0C  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3935  000B10                     	if	0	;tblptru may be non-zero
  3936  000B10                     	endif
  3937  000B10                     	if	0	;tblptru may be non-zero
  3938  000B10                     	endif
  3939  000B10  0008               	tblrd		*
  3940  000B12  50F5               	movf	tablat,w,c
  3941  000B14  0900               	iorlw	0
  3942  000B16  B4D8               	btfsc	status,2,c
  3943  000B18  D003               	goto	l1764
  3944                           
  3945                           ;SlaveComm_PIC18.c: 538: {
  3946                           ;SlaveComm_PIC18.c: 539: match = -1;
  3947  000B1A  6816               	setf	strcmp2@match,c
  3948  000B1C  6817               	setf	strcmp2@match+1,c
  3949                           
  3950                           ;SlaveComm_PIC18.c: 540: }
  3951  000B1E  D01C               	goto	l1770
  3952  000B20                     l1764:
  3953                           
  3954                           ;SlaveComm_PIC18.c: 541: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  3955  000B20  5018               	movf	strcmp2@inx,w,c
  3956  000B22  240F               	addwf	strcmp2@a,w,c
  3957  000B24  6ED9               	movwf	fsr2l,c
  3958  000B26  5019               	movf	strcmp2@inx+1,w,c
  3959  000B28  2010               	addwfc	strcmp2@a+1,w,c
  3960  000B2A  6EDA               	movwf	fsr2h,c
  3961  000B2C  50DF               	movf	indf2,w,c
  3962  000B2E  B4D8               	btfsc	status,2,c
  3963  000B30  D013               	goto	l1770
  3964  000B32  5018               	movf	strcmp2@inx,w,c
  3965  000B34  2411               	addwf	strcmp2@b,w,c
  3966  000B36  6E13               	movwf	??_strcmp2& (0+255),c
  3967  000B38  5019               	movf	strcmp2@inx+1,w,c
  3968  000B3A  2012               	addwfc	strcmp2@b+1,w,c
  3969  000B3C  6E14               	movwf	(??_strcmp2+1)& (0+255),c
  3970  000B3E  C013  FFF6         	movff	??_strcmp2,tblptrl
  3971  000B42  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3972  000B46                     	if	0	;tblptru may be non-zero
  3973  000B46                     	endif
  3974  000B46                     	if	0	;tblptru may be non-zero
  3975  000B46                     	endif
  3976  000B46  0008               	tblrd		*
  3977  000B48  50F5               	movf	tablat,w,c
  3978  000B4A  0900               	iorlw	0
  3979  000B4C  A4D8               	btfss	status,2,c
  3980  000B4E  D004               	goto	l1770
  3981                           
  3982                           ;SlaveComm_PIC18.c: 542: {
  3983                           ;SlaveComm_PIC18.c: 543: match = 1;
  3984  000B50  0E00               	movlw	0
  3985  000B52  6E17               	movwf	strcmp2@match+1,c
  3986  000B54  0E01               	movlw	1
  3987  000B56  6E16               	movwf	strcmp2@match,c
  3988  000B58                     l1770:
  3989                           
  3990                           ;SlaveComm_PIC18.c: 544: }
  3991                           ;SlaveComm_PIC18.c: 546: return match;
  3992  000B58  C016  F00F         	movff	strcmp2@match,?_strcmp2
  3993  000B5C  C017  F010         	movff	strcmp2@match+1,?_strcmp2+1
  3994  000B60  0012               	return	
  3995  000B62                     __end_of_strcmp2:
  3996                           	opt stack 0
  3997                           tblptru	equ	0xFF8
  3998                           tblptrh	equ	0xFF7
  3999                           tblptrl	equ	0xFF6
  4000                           tablat	equ	0xFF5
  4001                           prodh	equ	0xFF4
  4002                           prodl	equ	0xFF3
  4003                           intcon	equ	0xFF2
  4004                           intcon2	equ	0xFF1
  4005                           intcon3	equ	0xFF0
  4006                           postinc0	equ	0xFEE
  4007                           wreg	equ	0xFE8
  4008                           postinc1	equ	0xFE6
  4009                           fsr1h	equ	0xFE2
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           fsr2h	equ	0xFDA
  4014                           fsr2l	equ	0xFD9
  4015                           status	equ	0xFD8
  4016                           
  4017 ;; *************** function _send_end_of_transmission *****************
  4018 ;; Defined at:
  4019 ;;		line 592 in file "SlaveComm_PIC18.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4022 ;;		 -> communications@send_buffer(42), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;		None               void
  4027 ;; Registers used:
  4028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4034 ;;      Params:         2       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0
  4037 ;;      Totals:         2       0       0       0       0       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    4
  4041 ;; This function calls:
  4042 ;;		_command_builder1
  4043 ;; This function is called by:
  4044 ;;		_process_data_parameters
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text27
  4049  001592                     __ptext27:
  4050                           	opt stack 0
  4051  001592                     _send_end_of_transmission:
  4052                           	opt stack 23
  4053                           
  4054                           ;SlaveComm_PIC18.c: 594: command_builder1( send_buffer, "END" );
  4055                           
  4056                           ;incstack = 0
  4057  001592  C01F  F01B         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4058  001596  C020  F01C         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4059  00159A  0E4F               	movlw	low STR_1
  4060  00159C  6E1D               	movwf	command_builder1@data1,c
  4061  00159E  0E06               	movlw	high STR_1
  4062  0015A0  6E1E               	movwf	command_builder1@data1+1,c
  4063  0015A2  ECAC  F008         	call	_command_builder1	;wreg free
  4064  0015A6  0012               	return	
  4065  0015A8                     __end_of_send_end_of_transmission:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           intcon	equ	0xFF2
  4074                           intcon2	equ	0xFF1
  4075                           intcon3	equ	0xFF0
  4076                           postinc0	equ	0xFEE
  4077                           wreg	equ	0xFE8
  4078                           postinc1	equ	0xFE6
  4079                           fsr1h	equ	0xFE2
  4080                           fsr1l	equ	0xFE1
  4081                           indf2	equ	0xFDF
  4082                           postinc2	equ	0xFDE
  4083                           fsr2h	equ	0xFDA
  4084                           fsr2l	equ	0xFD9
  4085                           status	equ	0xFD8
  4086                           
  4087 ;; *************** function _command_builder1 *****************
  4088 ;; Defined at:
  4089 ;;		line 394 in file "SlaveComm_PIC18.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4092 ;;		 -> communications@send_buffer(42), 
  4093 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4094 ;;		 -> STR_22(4), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4106 ;;      Params:         4       0       0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0
  4109 ;;      Totals:         4       0       0       0       0       0       0
  4110 ;;Total ram usage:        4 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    3
  4113 ;; This function calls:
  4114 ;;		_command_builder_add_char
  4115 ;;		_command_builder_add_string
  4116 ;; This function is called by:
  4117 ;;		_send_end_of_transmission
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text28
  4122  001158                     __ptext28:
  4123                           	opt stack 0
  4124  001158                     _command_builder1:
  4125                           	opt stack 23
  4126                           
  4127                           ;SlaveComm_PIC18.c: 396: command_builder_add_char( send_buffer, '#' );
  4128                           
  4129                           ;incstack = 0
  4130  001158  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4131  00115C  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4132  001160  0E23               	movlw	35
  4133  001162  6E11               	movwf	command_builder_add_char@data,c
  4134  001164  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4135                           
  4136                           ;SlaveComm_PIC18.c: 397: command_builder_add_char( send_buffer, '#' );
  4137  001168  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4138  00116C  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4139  001170  0E23               	movlw	35
  4140  001172  6E11               	movwf	command_builder_add_char@data,c
  4141  001174  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4142                           
  4143                           ;SlaveComm_PIC18.c: 398: command_builder_add_char( send_buffer, '!' );
  4144  001178  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4145  00117C  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4146  001180  0E21               	movlw	33
  4147  001182  6E11               	movwf	command_builder_add_char@data,c
  4148  001184  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4149                           
  4150                           ;SlaveComm_PIC18.c: 399: command_builder_add_string( send_buffer, data1 );
  4151  001188  C01B  F013         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4152  00118C  C01C  F014         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4153  001190  C01D  F015         	movff	command_builder1@data1,command_builder_add_string@data_string
  4154  001194  C01E  F016         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4155  001198  EC42  F008         	call	_command_builder_add_string	;wreg free
  4156                           
  4157                           ;SlaveComm_PIC18.c: 400: command_builder_add_char( send_buffer, '*' );
  4158  00119C  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4159  0011A0  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4160  0011A4  0E2A               	movlw	42
  4161  0011A6  6E11               	movwf	command_builder_add_char@data,c
  4162  0011A8  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4163  0011AC  0012               	return	
  4164  0011AE                     __end_of_command_builder1:
  4165                           	opt stack 0
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           prodh	equ	0xFF4
  4171                           prodl	equ	0xFF3
  4172                           intcon	equ	0xFF2
  4173                           intcon2	equ	0xFF1
  4174                           intcon3	equ	0xFF0
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           postinc1	equ	0xFE6
  4178                           fsr1h	equ	0xFE2
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           fsr2h	equ	0xFDA
  4183                           fsr2l	equ	0xFD9
  4184                           status	equ	0xFD8
  4185                           
  4186 ;; *************** function _command_builder3 *****************
  4187 ;; Defined at:
  4188 ;;		line 418 in file "SlaveComm_PIC18.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4191 ;;		 -> communications@send_buffer(42), 
  4192 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4193 ;;		 -> STR_37(4), STR_32(4), STR_29(4), STR_27(4), 
  4194 ;;		 -> STR_25(4), STR_12(4), STR_8(4), 
  4195 ;;  data2           2   30[COMRAM] PTR unsigned char 
  4196 ;;		 -> STR_38(10), STR_33(5), STR_30(6), STR_28(7), 
  4197 ;;		 -> STR_26(6), STR_13(5), STR_9(5), 
  4198 ;;  data3           2   32[COMRAM] PTR unsigned char 
  4199 ;;		 -> STR_39(4), STR_34(4), STR_31(4), com_command_setEnergyUsed@temp(7), 
  4200 ;;		 -> com_command_setPower@temp(7), STR_14(3), STR_10(4), 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;		None               void
  4205 ;; Registers used:
  4206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4212 ;;      Params:         8       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0
  4215 ;;      Totals:         8       0       0       0       0       0       0
  4216 ;;Total ram usage:        8 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    3
  4219 ;; This function calls:
  4220 ;;		_command_builder_add_char
  4221 ;;		_command_builder_add_string
  4222 ;; This function is called by:
  4223 ;;		_process_data_parameters
  4224 ;;		_com_command_setPower
  4225 ;;		_com_command_setEnergyUsed
  4226 ;;		_com_command_setVersion
  4227 ;;		_com_command_setVolts
  4228 ;;		_com_command_setAmps
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text29
  4233  000DA2                     __ptext29:
  4234                           	opt stack 0
  4235  000DA2                     _command_builder3:
  4236                           	opt stack 24
  4237                           
  4238                           ;SlaveComm_PIC18.c: 420: command_builder_add_char( send_buffer, '#' );
  4239                           
  4240                           ;incstack = 0
  4241  000DA2  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4242  000DA6  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4243  000DAA  0E23               	movlw	35
  4244  000DAC  6E11               	movwf	command_builder_add_char@data,c
  4245  000DAE  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4246                           
  4247                           ;SlaveComm_PIC18.c: 421: command_builder_add_char( send_buffer, '#' );
  4248  000DB2  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4249  000DB6  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4250  000DBA  0E23               	movlw	35
  4251  000DBC  6E11               	movwf	command_builder_add_char@data,c
  4252  000DBE  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4253                           
  4254                           ;SlaveComm_PIC18.c: 422: command_builder_add_char( send_buffer, '!' );
  4255  000DC2  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4256  000DC6  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4257  000DCA  0E21               	movlw	33
  4258  000DCC  6E11               	movwf	command_builder_add_char@data,c
  4259  000DCE  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4260                           
  4261                           ;SlaveComm_PIC18.c: 423: command_builder_add_string( send_buffer, data1 );
  4262  000DD2  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4263  000DD6  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4264  000DDA  C01D  F015         	movff	command_builder3@data1,command_builder_add_string@data_string
  4265  000DDE  C01E  F016         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4266  000DE2  EC42  F008         	call	_command_builder_add_string	;wreg free
  4267                           
  4268                           ;SlaveComm_PIC18.c: 424: command_builder_add_char( send_buffer, ';' );
  4269  000DE6  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4270  000DEA  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4271  000DEE  0E3B               	movlw	59
  4272  000DF0  6E11               	movwf	command_builder_add_char@data,c
  4273  000DF2  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4274                           
  4275                           ;SlaveComm_PIC18.c: 425: command_builder_add_string( send_buffer, data2 );
  4276  000DF6  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4277  000DFA  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4278  000DFE  C01F  F015         	movff	command_builder3@data2,command_builder_add_string@data_string
  4279  000E02  C020  F016         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4280  000E06  EC42  F008         	call	_command_builder_add_string	;wreg free
  4281                           
  4282                           ;SlaveComm_PIC18.c: 426: command_builder_add_char( send_buffer, ';' );
  4283  000E0A  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4284  000E0E  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4285  000E12  0E3B               	movlw	59
  4286  000E14  6E11               	movwf	command_builder_add_char@data,c
  4287  000E16  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4288                           
  4289                           ;SlaveComm_PIC18.c: 427: command_builder_add_string( send_buffer, data3 );
  4290  000E1A  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4291  000E1E  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4292  000E22  C021  F015         	movff	command_builder3@data3,command_builder_add_string@data_string
  4293  000E26  C022  F016         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4294  000E2A  EC42  F008         	call	_command_builder_add_string	;wreg free
  4295                           
  4296                           ;SlaveComm_PIC18.c: 428: command_builder_add_char( send_buffer, '*' );
  4297  000E2E  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4298  000E32  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4299  000E36  0E2A               	movlw	42
  4300  000E38  6E11               	movwf	command_builder_add_char@data,c
  4301  000E3A  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4302  000E3E  0012               	return	
  4303  000E40                     __end_of_command_builder3:
  4304                           	opt stack 0
  4305                           tblptru	equ	0xFF8
  4306                           tblptrh	equ	0xFF7
  4307                           tblptrl	equ	0xFF6
  4308                           tablat	equ	0xFF5
  4309                           prodh	equ	0xFF4
  4310                           prodl	equ	0xFF3
  4311                           intcon	equ	0xFF2
  4312                           intcon2	equ	0xFF1
  4313                           intcon3	equ	0xFF0
  4314                           postinc0	equ	0xFEE
  4315                           wreg	equ	0xFE8
  4316                           postinc1	equ	0xFE6
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           indf2	equ	0xFDF
  4320                           postinc2	equ	0xFDE
  4321                           fsr2h	equ	0xFDA
  4322                           fsr2l	equ	0xFD9
  4323                           status	equ	0xFD8
  4324                           
  4325 ;; *************** function _command_builder_add_string *****************
  4326 ;; Defined at:
  4327 ;;		line 463 in file "SlaveComm_PIC18.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4330 ;;		 -> communications@send_buffer(42), 
  4331 ;;  data_string     2   20[COMRAM] PTR unsigned char 
  4332 ;;		 -> STR_39(4), STR_38(10), STR_37(4), STR_36(12), 
  4333 ;;		 -> STR_35(5), STR_34(4), STR_33(5), STR_32(4), 
  4334 ;;		 -> STR_31(4), STR_30(6), STR_29(4), STR_28(7), 
  4335 ;;		 -> STR_27(4), com_command_setEnergyUsed@temp(7), STR_26(6), STR_25(4), 
  4336 ;;		 -> com_command_setPower@temp(7), STR_24(5), STR_23(5), STR_22(4), 
  4337 ;;		 -> STR_14(3), STR_13(5), STR_12(4), STR_10(4), 
  4338 ;;		 -> STR_9(5), STR_8(4), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  inx             2   24[COMRAM] int 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;		None               void
  4343 ;; Registers used:
  4344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4350 ;;      Params:         4       0       0       0       0       0       0
  4351 ;;      Locals:         2       0       0       0       0       0       0
  4352 ;;      Temps:          2       0       0       0       0       0       0
  4353 ;;      Totals:         8       0       0       0       0       0       0
  4354 ;;Total ram usage:        8 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    2
  4357 ;; This function calls:
  4358 ;;		_command_builder_add_char
  4359 ;; This function is called by:
  4360 ;;		_command_builder1
  4361 ;;		_command_builder3
  4362 ;;		_command_builder2
  4363 ;;		_command_builder4
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text30
  4368  001084                     __ptext30:
  4369                           	opt stack 0
  4370  001084                     _command_builder_add_string:
  4371                           	opt stack 24
  4372                           
  4373                           ;SlaveComm_PIC18.c: 465: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4374                           
  4375                           ;incstack = 0
  4376  001084  0E00               	movlw	0
  4377  001086  6E1A               	movwf	command_builder_add_string@inx+1,c
  4378  001088  0E00               	movlw	0
  4379  00108A  6E19               	movwf	command_builder_add_string@inx,c
  4380  00108C  D01F               	goto	l1728
  4381  00108E                     l1724:
  4382                           
  4383                           ;SlaveComm_PIC18.c: 466: {
  4384                           ;SlaveComm_PIC18.c: 467: command_builder_add_char( send_buffer, data_string[inx] );
  4385  00108E  C013  F00F         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4386  001092  C014  F010         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4387  001096  5019               	movf	command_builder_add_string@inx,w,c
  4388  001098  2415               	addwf	command_builder_add_string@data_string,w,c
  4389  00109A  6E17               	movwf	??_command_builder_add_string& (0+255),c
  4390  00109C  501A               	movf	command_builder_add_string@inx+1,w,c
  4391  00109E  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  4392  0010A0  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4393  0010A2  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  4394  0010A6  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4395  0010AA  6AF8               	clrf	tblptru,c
  4396  0010AC  0E05               	movlw	(high __ramtop+-1)
  4397  0010AE  64F7               	cpfsgt	tblptrh,c
  4398  0010B0  D003               	bra	u777
  4399  0010B2  0008               	tblrd		*
  4400  0010B4  50F5               	movf	tablat,w,c
  4401  0010B6  D005               	bra	u770
  4402  0010B8                     u777:
  4403  0010B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4404  0010BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4405  0010C0  50E7               	movf	indf1,w,c
  4406  0010C2                     u770:
  4407  0010C2  6E11               	movwf	command_builder_add_char@data,c
  4408  0010C4  ECD7  F008         	call	_command_builder_add_char	;wreg free
  4409  0010C8  4A19               	infsnz	command_builder_add_string@inx,f,c
  4410  0010CA  2A1A               	incf	command_builder_add_string@inx+1,f,c
  4411  0010CC                     l1728:
  4412  0010CC  5019               	movf	command_builder_add_string@inx,w,c
  4413  0010CE  2415               	addwf	command_builder_add_string@data_string,w,c
  4414  0010D0  6E17               	movwf	??_command_builder_add_string& (0+255),c
  4415  0010D2  501A               	movf	command_builder_add_string@inx+1,w,c
  4416  0010D4  2016               	addwfc	command_builder_add_string@data_string+1,w,c
  4417  0010D6  6E18               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4418  0010D8  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  4419  0010DC  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4420  0010E0  6AF8               	clrf	tblptru,c
  4421  0010E2  0E05               	movlw	(high __ramtop+-1)
  4422  0010E4  64F7               	cpfsgt	tblptrh,c
  4423  0010E6  D003               	bra	u787
  4424  0010E8  0008               	tblrd		*
  4425  0010EA  50F5               	movf	tablat,w,c
  4426  0010EC  D005               	bra	u780
  4427  0010EE                     u787:
  4428  0010EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4429  0010F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4430  0010F6  50E7               	movf	indf1,w,c
  4431  0010F8                     u780:
  4432  0010F8  0900               	iorlw	0
  4433  0010FA  B4D8               	btfsc	status,2,c
  4434  0010FC  0012               	return	
  4435  0010FE  D7C7               	goto	l1724
  4436  001100                     __end_of_command_builder_add_string:
  4437                           	opt stack 0
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           intcon2	equ	0xFF1
  4446                           intcon3	equ	0xFF0
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           indf1	equ	0xFE7
  4450                           postinc1	equ	0xFE6
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           postinc2	equ	0xFDE
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _command_builder_add_char *****************
  4460 ;; Defined at:
  4461 ;;		line 450 in file "SlaveComm_PIC18.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  send_buffer     2   14[COMRAM] PTR struct buffer
  4464 ;;		 -> communications@send_buffer(42), 
  4465 ;;  data            1   16[COMRAM] unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4477 ;;      Params:         3       0       0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0
  4479 ;;      Temps:          1       0       0       0       0       0       0
  4480 ;;      Totals:         4       0       0       0       0       0       0
  4481 ;;Total ram usage:        4 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_command_builder1
  4488 ;;		_command_builder3
  4489 ;;		_command_builder_add_string
  4490 ;;		_command_builder2
  4491 ;;		_command_builder4
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text31
  4496  0011AE                     __ptext31:
  4497                           	opt stack 0
  4498  0011AE                     _command_builder_add_char:
  4499                           	opt stack 24
  4500                           
  4501                           ;SlaveComm_PIC18.c: 452: send_buffer->data_buffer[send_buffer->write_position] = data;
  4502                           
  4503                           ;incstack = 0
  4504  0011AE  EE20 F028          	lfsr	2,40
  4505  0011B2  500F               	movf	command_builder_add_char@send_buffer,w,c
  4506  0011B4  26D9               	addwf	fsr2l,f,c
  4507  0011B6  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4508  0011B8  22DA               	addwfc	fsr2h,f,c
  4509  0011BA  50DF               	movf	indf2,w,c
  4510  0011BC  6E12               	movwf	??_command_builder_add_char& (0+255),c
  4511  0011BE  5012               	movf	??_command_builder_add_char,w,c
  4512  0011C0  0D01               	mullw	1
  4513  0011C2  50F3               	movf	prodl,w,c
  4514  0011C4  240F               	addwf	command_builder_add_char@send_buffer,w,c
  4515  0011C6  6ED9               	movwf	fsr2l,c
  4516  0011C8  50F4               	movf	prodh,w,c
  4517  0011CA  2010               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4518  0011CC  6EDA               	movwf	fsr2h,c
  4519  0011CE  C011  FFDF         	movff	command_builder_add_char@data,indf2
  4520                           
  4521                           ;SlaveComm_PIC18.c: 454: send_buffer->write_position++;
  4522  0011D2  EE20 F028          	lfsr	2,40
  4523  0011D6  500F               	movf	command_builder_add_char@send_buffer,w,c
  4524  0011D8  26D9               	addwf	fsr2l,f,c
  4525  0011DA  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4526  0011DC  22DA               	addwfc	fsr2h,f,c
  4527  0011DE  2ADF               	incf	indf2,f,c
  4528                           
  4529                           ;SlaveComm_PIC18.c: 455: if( send_buffer->write_position >= 40 )
  4530  0011E0  EE20 F028          	lfsr	2,40
  4531  0011E4  500F               	movf	command_builder_add_char@send_buffer,w,c
  4532  0011E6  26D9               	addwf	fsr2l,f,c
  4533  0011E8  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4534  0011EA  22DA               	addwfc	fsr2h,f,c
  4535  0011EC  0E27               	movlw	39
  4536  0011EE  64DF               	cpfsgt	indf2,c
  4537  0011F0  0012               	return	
  4538                           
  4539                           ;SlaveComm_PIC18.c: 456: {
  4540                           ;SlaveComm_PIC18.c: 457: send_buffer->write_position = 0;
  4541  0011F2  EE20 F028          	lfsr	2,40
  4542  0011F6  500F               	movf	command_builder_add_char@send_buffer,w,c
  4543  0011F8  26D9               	addwf	fsr2l,f,c
  4544  0011FA  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  4545  0011FC  22DA               	addwfc	fsr2h,f,c
  4546  0011FE  0E00               	movlw	0
  4547  001200  6EDF               	movwf	indf2,c
  4548  001202  0012               	return	
  4549  001204                     __end_of_command_builder_add_char:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           intcon	equ	0xFF2
  4558                           intcon2	equ	0xFF1
  4559                           intcon3	equ	0xFF0
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           indf1	equ	0xFE7
  4563                           postinc1	equ	0xFE6
  4564                           fsr1h	equ	0xFE2
  4565                           fsr1l	equ	0xFE1
  4566                           indf2	equ	0xFDF
  4567                           postinc2	equ	0xFDE
  4568                           fsr2h	equ	0xFDA
  4569                           fsr2l	equ	0xFD9
  4570                           status	equ	0xFD8
  4571                           
  4572 ;; *************** function _process_data_parameterize *****************
  4573 ;; Defined at:
  4574 ;;		line 256 in file "SlaveComm_PIC18.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  4577 ;;		 -> process_data@parameters(50), 
  4578 ;;  buffer_to_pa    2   22[COMRAM] PTR struct buffer
  4579 ;;		 -> communications@receive_buffer(42), 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  inx             2   27[COMRAM] int 
  4582 ;;  parameter_po    1   30[COMRAM] unsigned char 
  4583 ;;  parameter_in    1   29[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4593 ;;      Params:         4       0       0       0       0       0       0
  4594 ;;      Locals:         4       0       0       0       0       0       0
  4595 ;;      Temps:          3       0       0       0       0       0       0
  4596 ;;      Totals:        11       0       0       0       0       0       0
  4597 ;;Total ram usage:       11 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		___wmul
  4602 ;; This function is called by:
  4603 ;;		_process_data
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text32
  4608  0008B6                     __ptext32:
  4609                           	opt stack 0
  4610  0008B6                     _process_data_parameterize:
  4611                           	opt stack 26
  4612                           
  4613                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  4614                           
  4615                           ;incstack = 0
  4616  0008B6  0E00               	movlw	0
  4617  0008B8  6E1F               	movwf	process_data_parameterize@parameter_position,c
  4618                           
  4619                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  4620  0008BA  0E00               	movlw	0
  4621  0008BC  6E1E               	movwf	process_data_parameterize@parameter_index,c
  4622                           
  4623                           ;SlaveComm_PIC18.c: 268: for( int inx = 0; inx < 5; inx++ )
  4624  0008BE  0E00               	movlw	0
  4625  0008C0  6E1D               	movwf	process_data_parameterize@inx+1,c
  4626  0008C2  0E00               	movlw	0
  4627  0008C4  6E1C               	movwf	process_data_parameterize@inx,c
  4628  0008C6  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  4629  0008C8  D008               	goto	l1914
  4630  0008CA  501D               	movf	process_data_parameterize@inx+1,w,c
  4631  0008CC  E105               	bnz	u1020
  4632  0008CE  0E05               	movlw	5
  4633  0008D0  5C1C               	subwf	process_data_parameterize@inx,w,c
  4634  0008D2  B0D8               	btfsc	status,0,c
  4635  0008D4  D082               	goto	l1944
  4636  0008D6  D001               	goto	l1914
  4637  0008D8                     u1020:
  4638  0008D8  D080               	goto	l1944
  4639  0008DA                     l1914:
  4640                           
  4641                           ;SlaveComm_PIC18.c: 269: {
  4642                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  4643  0008DA  C01C  F00F         	movff	process_data_parameterize@inx,___wmul@multiplier
  4644  0008DE  C01D  F010         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  4645  0008E2  0E00               	movlw	0
  4646  0008E4  6E12               	movwf	___wmul@multiplicand+1,c
  4647  0008E6  0E0A               	movlw	10
  4648  0008E8  6E11               	movwf	___wmul@multiplicand,c
  4649  0008EA  EC7C  F00A         	call	___wmul	;wreg free
  4650  0008EE  500F               	movf	?___wmul,w,c
  4651  0008F0  2415               	addwf	process_data_parameterize@parameters,w,c
  4652  0008F2  6ED9               	movwf	fsr2l,c
  4653  0008F4  5010               	movf	?___wmul+1,w,c
  4654  0008F6  2016               	addwfc	process_data_parameterize@parameters+1,w,c
  4655  0008F8  6EDA               	movwf	fsr2h,c
  4656  0008FA  0E00               	movlw	0
  4657  0008FC  6EDF               	movwf	indf2,c
  4658  0008FE  4A1C               	infsnz	process_data_parameterize@inx,f,c
  4659  000900  2A1D               	incf	process_data_parameterize@inx+1,f,c
  4660  000902  BE1D               	btfsc	process_data_parameterize@inx+1,7,c
  4661  000904  D7EA               	goto	l1914
  4662  000906  501D               	movf	process_data_parameterize@inx+1,w,c
  4663  000908  E168               	bnz	l1944
  4664  00090A  D7E1               	goto	L2
  4665  00090C                     l1920:
  4666                           
  4667                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  4668  00090C  0E00               	movlw	0
  4669  00090E  6E1F               	movwf	process_data_parameterize@parameter_position,c
  4670                           
  4671                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  4672  000910  2A1E               	incf	process_data_parameterize@parameter_index,f,c
  4673                           
  4674                           ;SlaveComm_PIC18.c: 285: if( parameter_index >= 5 )
  4675  000912  0E04               	movlw	4
  4676  000914  641E               	cpfsgt	process_data_parameterize@parameter_index,c
  4677  000916  D05A               	goto	l1942
  4678                           
  4679                           ;SlaveComm_PIC18.c: 286: {
  4680                           ;SlaveComm_PIC18.c: 289: parameter_index = ( 5 - 1 );
  4681  000918  0E04               	movlw	4
  4682  00091A  6E1E               	movwf	process_data_parameterize@parameter_index,c
  4683                           
  4684                           ;SlaveComm_PIC18.c: 290: }
  4685                           ;SlaveComm_PIC18.c: 292: break;
  4686  00091C  D057               	goto	l1942
  4687  00091E                     l1928:
  4688                           
  4689                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  4690  00091E  EE20 F029          	lfsr	2,41
  4691  000922  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4692  000924  26D9               	addwf	fsr2l,f,c
  4693  000926  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4694  000928  22DA               	addwfc	fsr2h,f,c
  4695  00092A  50DF               	movf	indf2,w,c
  4696  00092C  6E19               	movwf	??_process_data_parameterize& (0+255),c
  4697  00092E  5019               	movf	??_process_data_parameterize,w,c
  4698  000930  0D01               	mullw	1
  4699  000932  50F3               	movf	prodl,w,c
  4700  000934  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4701  000936  6ED9               	movwf	fsr2l,c
  4702  000938  50F4               	movf	prodh,w,c
  4703  00093A  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4704  00093C  6EDA               	movwf	fsr2h,c
  4705  00093E  501E               	movf	process_data_parameterize@parameter_index,w,c
  4706  000940  0D0A               	mullw	10
  4707  000942  C015  F01A         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  4708  000946  C016  F01B         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  4709  00094A  50F3               	movf	prodl,w,c
  4710  00094C  261A               	addwf	??_process_data_parameterize+1,f,c
  4711  00094E  50F4               	movf	prodh,w,c
  4712  000950  221B               	addwfc	??_process_data_parameterize+2,f,c
  4713  000952  501F               	movf	process_data_parameterize@parameter_position,w,c
  4714  000954  0D01               	mullw	1
  4715  000956  50F3               	movf	prodl,w,c
  4716  000958  241A               	addwf	??_process_data_parameterize+1,w,c
  4717  00095A  6EE1               	movwf	fsr1l,c
  4718  00095C  50F4               	movf	prodh,w,c
  4719  00095E  201B               	addwfc	??_process_data_parameterize+2,w,c
  4720  000960  6EE2               	movwf	fsr1h,c
  4721  000962  CFDF FFE7          	movff	indf2,indf1
  4722                           
  4723                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  4724  000966  2A1F               	incf	process_data_parameterize@parameter_position,f,c
  4725                           
  4726                           ;SlaveComm_PIC18.c: 297: if( parameter_position >= 10 )
  4727  000968  0E09               	movlw	9
  4728  00096A  641F               	cpfsgt	process_data_parameterize@parameter_position,c
  4729  00096C  D002               	goto	l1936
  4730                           
  4731                           ;SlaveComm_PIC18.c: 298: {
  4732                           ;SlaveComm_PIC18.c: 301: parameter_position = ( 10 - 1 );
  4733  00096E  0E09               	movlw	9
  4734  000970  6E1F               	movwf	process_data_parameterize@parameter_position,c
  4735  000972                     l1936:
  4736                           
  4737                           ;SlaveComm_PIC18.c: 302: }
  4738                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  4739  000972  501E               	movf	process_data_parameterize@parameter_index,w,c
  4740  000974  0D0A               	mullw	10
  4741  000976  C015  F019         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  4742  00097A  C016  F01A         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  4743  00097E  50F3               	movf	prodl,w,c
  4744  000980  2619               	addwf	??_process_data_parameterize,f,c
  4745  000982  50F4               	movf	prodh,w,c
  4746  000984  221A               	addwfc	??_process_data_parameterize+1,f,c
  4747  000986  501F               	movf	process_data_parameterize@parameter_position,w,c
  4748  000988  0D01               	mullw	1
  4749  00098A  50F3               	movf	prodl,w,c
  4750  00098C  2419               	addwf	??_process_data_parameterize,w,c
  4751  00098E  6ED9               	movwf	fsr2l,c
  4752  000990  50F4               	movf	prodh,w,c
  4753  000992  201A               	addwfc	??_process_data_parameterize+1,w,c
  4754  000994  6EDA               	movwf	fsr2h,c
  4755  000996  0E00               	movlw	0
  4756  000998  6EDF               	movwf	indf2,c
  4757                           
  4758                           ;SlaveComm_PIC18.c: 307: }
  4759                           
  4760                           ;SlaveComm_PIC18.c: 306: break;
  4761  00099A  D018               	goto	l1942
  4762  00099C                     l1940:
  4763  00099C  EE20 F029          	lfsr	2,41
  4764  0009A0  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4765  0009A2  26D9               	addwf	fsr2l,f,c
  4766  0009A4  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4767  0009A6  22DA               	addwfc	fsr2h,f,c
  4768  0009A8  50DF               	movf	indf2,w,c
  4769  0009AA  6E19               	movwf	??_process_data_parameterize& (0+255),c
  4770  0009AC  5019               	movf	??_process_data_parameterize,w,c
  4771  0009AE  0D01               	mullw	1
  4772  0009B0  50F3               	movf	prodl,w,c
  4773  0009B2  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4774  0009B4  6ED9               	movwf	fsr2l,c
  4775  0009B6  50F4               	movf	prodh,w,c
  4776  0009B8  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4777  0009BA  6EDA               	movwf	fsr2h,c
  4778  0009BC  50DF               	movf	indf2,w,c
  4779                           
  4780                           ; Switch size 1, requested type "space"
  4781                           ; Number of cases is 2, Range of values is 33 to 59
  4782                           ; switch strategies available:
  4783                           ; Name         Instructions Cycles
  4784                           ; simple_byte            7     4 (average)
  4785                           ;	Chosen strategy is simple_byte
  4786  0009BE  0A21               	xorlw	33	; case 33
  4787  0009C0  B4D8               	btfsc	status,2,c
  4788  0009C2  D004               	goto	l1942
  4789  0009C4  0A1A               	xorlw	26	; case 59
  4790  0009C6  B4D8               	btfsc	status,2,c
  4791  0009C8  D7A1               	goto	l1920
  4792  0009CA  D7A9               	goto	l1928
  4793  0009CC                     l1942:
  4794                           
  4795                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  4796  0009CC  EE20 F029          	lfsr	2,41
  4797  0009D0  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4798  0009D2  26D9               	addwf	fsr2l,f,c
  4799  0009D4  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4800  0009D6  22DA               	addwfc	fsr2h,f,c
  4801  0009D8  2ADF               	incf	indf2,f,c
  4802  0009DA                     l1944:
  4803  0009DA  EE20 F029          	lfsr	2,41
  4804  0009DE  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4805  0009E0  26D9               	addwf	fsr2l,f,c
  4806  0009E2  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4807  0009E4  22DA               	addwfc	fsr2h,f,c
  4808  0009E6  50DF               	movf	indf2,w,c
  4809  0009E8  6E19               	movwf	??_process_data_parameterize& (0+255),c
  4810  0009EA  5019               	movf	??_process_data_parameterize,w,c
  4811  0009EC  0D01               	mullw	1
  4812  0009EE  50F3               	movf	prodl,w,c
  4813  0009F0  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  4814  0009F2  6ED9               	movwf	fsr2l,c
  4815  0009F4  50F4               	movf	prodh,w,c
  4816  0009F6  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  4817  0009F8  6EDA               	movwf	fsr2h,c
  4818  0009FA  0E2A               	movlw	42
  4819  0009FC  18DE               	xorwf	postinc2,w,c
  4820  0009FE  B4D8               	btfsc	status,2,c
  4821  000A00  0012               	return	
  4822  000A02  EE20 F029          	lfsr	2,41
  4823  000A06  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4824  000A08  26D9               	addwf	fsr2l,f,c
  4825  000A0A  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4826  000A0C  22DA               	addwfc	fsr2h,f,c
  4827  000A0E  0E28               	movlw	40
  4828  000A10  60DF               	cpfslt	indf2,c
  4829  000A12  0012               	return	
  4830  000A14  EE20 F028          	lfsr	2,40
  4831  000A18  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4832  000A1A  26D9               	addwf	fsr2l,f,c
  4833  000A1C  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4834  000A1E  22DA               	addwfc	fsr2h,f,c
  4835  000A20  EE10 F029          	lfsr	1,41
  4836  000A24  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  4837  000A26  26E1               	addwf	fsr1l,f,c
  4838  000A28  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  4839  000A2A  22E2               	addwfc	fsr1h,f,c
  4840  000A2C  50DE               	movf	postinc2,w,c
  4841  000A2E  18E6               	xorwf	postinc1,w,c
  4842  000A30  B4D8               	btfsc	status,2,c
  4843  000A32  0012               	return	
  4844  000A34  D7B3               	goto	l1940
  4845  000A36                     __end_of_process_data_parameterize:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           indf1	equ	0xFE7
  4859                           postinc1	equ	0xFE6
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function ___wmul *****************
  4869 ;; Defined at:
  4870 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  multiplier      2   14[COMRAM] unsigned int 
  4873 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  product         2   18[COMRAM] unsigned int 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  2   14[COMRAM] unsigned int 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0, prodl, prodh
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4885 ;;      Params:         4       0       0       0       0       0       0
  4886 ;;      Locals:         2       0       0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0
  4888 ;;      Totals:         6       0       0       0       0       0       0
  4889 ;;Total ram usage:        6 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_process_data_parameterize
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text33
  4900  0014F8                     __ptext33:
  4901                           	opt stack 0
  4902  0014F8                     ___wmul:
  4903                           	opt stack 26
  4904                           
  4905                           ;incstack = 0
  4906  0014F8  500F               	movf	___wmul@multiplier,w,c
  4907  0014FA  0211               	mulwf	___wmul@multiplicand,c
  4908  0014FC  CFF3 F013          	movff	prodl,___wmul@product
  4909  001500  CFF4 F014          	movff	prodh,___wmul@product+1
  4910  001504  500F               	movf	___wmul@multiplier,w,c
  4911  001506  0212               	mulwf	___wmul@multiplicand+1,c
  4912  001508  50F3               	movf	prodl,w,c
  4913  00150A  2614               	addwf	___wmul@product+1,f,c
  4914  00150C  5010               	movf	___wmul@multiplier+1,w,c
  4915  00150E  0211               	mulwf	___wmul@multiplicand,c
  4916  001510  50F3               	movf	prodl,w,c
  4917  001512  2614               	addwf	___wmul@product+1,f,c
  4918  001514  C013  F00F         	movff	___wmul@product,?___wmul
  4919  001518  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4920  00151C  0012               	return	
  4921  00151E                     __end_of___wmul:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           intcon	equ	0xFF2
  4930                           intcon2	equ	0xFF1
  4931                           intcon3	equ	0xFF0
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postinc1	equ	0xFE6
  4936                           fsr1h	equ	0xFE2
  4937                           fsr1l	equ	0xFE1
  4938                           indf2	equ	0xFDF
  4939                           postinc2	equ	0xFDE
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function _SPISlaveInit *****************
  4945 ;; Defined at:
  4946 ;;		line 661 in file "SlaveComm_PIC18.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;		None               void
  4953 ;; Registers used:
  4954 ;;		wreg, status,2
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4960 ;;      Params:         0       0       0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_communications
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text34
  4975  001256                     __ptext34:
  4976                           	opt stack 0
  4977  001256                     _SPISlaveInit:
  4978                           	opt stack 28
  4979                           
  4980                           ;SlaveComm_PIC18.c: 664: TRISAbits.TRISA0 = 0;
  4981                           
  4982                           ;incstack = 0
  4983  001256  9092               	bcf	3986,0,c	;volatile
  4984                           
  4985                           ;SlaveComm_PIC18.c: 665: TRISAbits.TRISA1 = 1;
  4986  001258  8292               	bsf	3986,1,c	;volatile
  4987                           
  4988                           ;SlaveComm_PIC18.c: 667: TRISCbits.TRISC3 = 0;
  4989  00125A  9694               	bcf	3988,3,c	;volatile
  4990                           
  4991                           ;SlaveComm_PIC18.c: 668: TRISCbits.TRISC5 = 0;
  4992  00125C  9A94               	bcf	3988,5,c	;volatile
  4993                           
  4994                           ;SlaveComm_PIC18.c: 669: TRISCbits.TRISC6 = 0;
  4995  00125E  9C94               	bcf	3988,6,c	;volatile
  4996                           
  4997                           ;SlaveComm_PIC18.c: 670: TRISCbits.TRISC7 = 0;
  4998  001260  9E94               	bcf	3988,7,c	;volatile
  4999                           
  5000                           ;SlaveComm_PIC18.c: 671: ANSELAbits.ANSA1 = 0b0;
  5001  001262  010F               	movlb	15	; () banked
  5002  001264  9338               	bcf	56,1,b	;volatile
  5003                           
  5004                           ;SlaveComm_PIC18.c: 673: LATCbits.LATC6 = 1;
  5005  001266  8C8B               	bsf	3979,6,c	;volatile
  5006                           
  5007                           ;SlaveComm_PIC18.c: 674: LATCbits.LATC3 = 1;
  5008  001268  868B               	bsf	3979,3,c	;volatile
  5009                           
  5010                           ;SlaveComm_PIC18.c: 675: LATCbits.LATC5 = 1;
  5011  00126A  8A8B               	bsf	3979,5,c	;volatile
  5012                           
  5013                           ;SlaveComm_PIC18.c: 676: LATCbits.LATC7 = 1;
  5014  00126C  8E8B               	bsf	3979,7,c	;volatile
  5015                           
  5016                           ;SlaveComm_PIC18.c: 679: SSP2CON1bits.SSPEN = 0;
  5017  00126E  9A6C               	bcf	3948,5,c	;volatile
  5018                           
  5019                           ;SlaveComm_PIC18.c: 681: ANSELBbits.ANSB0 = 0b0;
  5020  001270  010F               	movlb	15	; () banked
  5021  001272  9139               	bcf	57,0,b	;volatile
  5022                           
  5023                           ;SlaveComm_PIC18.c: 682: ANSELBbits.ANSB1 = 0b0;
  5024  001274  010F               	movlb	15	; () banked
  5025  001276  9339               	bcf	57,1,b	;volatile
  5026                           
  5027                           ;SlaveComm_PIC18.c: 683: ANSELBbits.ANSB2 = 0b0;
  5028  001278  010F               	movlb	15	; () banked
  5029  00127A  9539               	bcf	57,2,b	;volatile
  5030                           
  5031                           ;SlaveComm_PIC18.c: 684: ANSELBbits.ANSB3 = 0b0;
  5032  00127C  010F               	movlb	15	; () banked
  5033  00127E  9739               	bcf	57,3,b	;volatile
  5034                           
  5035                           ;SlaveComm_PIC18.c: 686: TRISBbits.RB0 = 0b1;
  5036  001280  8093               	bsf	3987,0,c	;volatile
  5037                           
  5038                           ;SlaveComm_PIC18.c: 687: TRISBbits.RB1 = 0b1;
  5039  001282  8293               	bsf	3987,1,c	;volatile
  5040                           
  5041                           ;SlaveComm_PIC18.c: 688: TRISBbits.RB2 = 0b1;
  5042  001284  8493               	bsf	3987,2,c	;volatile
  5043                           
  5044                           ;SlaveComm_PIC18.c: 689: TRISBbits.RB3 = 0b0;
  5045  001286  9693               	bcf	3987,3,c	;volatile
  5046                           
  5047                           ;SlaveComm_PIC18.c: 691: SSP2STATbits.SMP = 0;
  5048  001288  9E6D               	bcf	3949,7,c	;volatile
  5049                           
  5050                           ;SlaveComm_PIC18.c: 692: SSP2STATbits.CKE = 1;
  5051  00128A  8C6D               	bsf	3949,6,c	;volatile
  5052                           
  5053                           ;SlaveComm_PIC18.c: 694: SSP2CON1bits.WCOL = 0;
  5054  00128C  9E6C               	bcf	3948,7,c	;volatile
  5055                           
  5056                           ;SlaveComm_PIC18.c: 695: SSP2CON1bits.SSPOV = 0;
  5057  00128E  9C6C               	bcf	3948,6,c	;volatile
  5058                           
  5059                           ;SlaveComm_PIC18.c: 696: SSP2CON1bits.SSPEN = 0;
  5060  001290  9A6C               	bcf	3948,5,c	;volatile
  5061                           
  5062                           ;SlaveComm_PIC18.c: 697: SSP2CON1bits.CKP = 1;
  5063  001292  886C               	bsf	3948,4,c	;volatile
  5064                           
  5065                           ; BSR set to: 15
  5066                           ;SlaveComm_PIC18.c: 698: SSP2CON1bits.SSPM = 0b0100;
  5067  001294  506C               	movf	3948,w,c	;volatile
  5068  001296  0BF0               	andlw	-16
  5069  001298  0904               	iorlw	4
  5070  00129A  6E6C               	movwf	3948,c	;volatile
  5071                           
  5072                           ;SlaveComm_PIC18.c: 701: SSP2CON3 = 0x00;
  5073  00129C  0E00               	movlw	0
  5074  00129E  6E69               	movwf	3945,c	;volatile
  5075                           
  5076                           ; BSR set to: 15
  5077                           ;SlaveComm_PIC18.c: 702: SSP2CON3bits.BOEN = 0b0;
  5078  0012A0  9869               	bcf	3945,4,c	;volatile
  5079                           
  5080                           ; BSR set to: 15
  5081                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 1;
  5082  0012A2  8A6C               	bsf	3948,5,c	;volatile
  5083  0012A4  0012               	return	
  5084  0012A6                     __end_of_SPISlaveInit:
  5085                           	opt stack 0
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           intcon2	equ	0xFF1
  5094                           intcon3	equ	0xFF0
  5095                           postinc0	equ	0xFEE
  5096                           wreg	equ	0xFE8
  5097                           indf1	equ	0xFE7
  5098                           postinc1	equ	0xFE6
  5099                           fsr1h	equ	0xFE2
  5100                           fsr1l	equ	0xFE1
  5101                           indf2	equ	0xFDF
  5102                           postinc2	equ	0xFDE
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _Timer0_ISR *****************
  5108 ;; Defined at:
  5109 ;;		line 193 in file "Current_Sense_Main.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5123 ;;      Params:         0       0       0       0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0
  5125 ;;      Temps:         14       0       0       0       0       0       0
  5126 ;;      Totals:        14       0       0       0       0       0       0
  5127 ;;Total ram usage:       14 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		Interrupt level 2
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	intcode
  5137  000008                     __pintcode:
  5138                           	opt stack 0
  5139  000008                     _Timer0_ISR:
  5140                           	opt stack 23
  5141                           
  5142                           ; BSR set to: 15
  5143                           ;incstack = 0
  5144  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5145  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5146  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5147  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5148  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5149  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5150  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5151  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5152  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5153  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5154  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5155  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5156  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5157  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5158  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5159                           
  5160                           ;Current_Sense_Main.c: 196: INTCONbits.TMR0IF = 0;
  5161  000042  94F2               	bcf	intcon,2,c	;volatile
  5162                           
  5163                           ;Current_Sense_Main.c: 198: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5164  000044  0EFC               	movlw	252
  5165  000046  6ED7               	movwf	4055,c	;volatile
  5166                           
  5167                           ;Current_Sense_Main.c: 199: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5168  000048  0E18               	movlw	24
  5169  00004A  6ED6               	movwf	4054,c	;volatile
  5170                           
  5171                           ;Current_Sense_Main.c: 201: timerCountHF++;
  5172  00004C  0E01               	movlw	1
  5173  00004E  2641               	addwf	_timerCountHF,f,c	;volatile
  5174  000050  0E00               	movlw	0
  5175  000052  2242               	addwfc	_timerCountHF+1,f,c	;volatile
  5176  000054  2243               	addwfc	_timerCountHF+2,f,c	;volatile
  5177  000056  2244               	addwfc	_timerCountHF+3,f,c	;volatile
  5178                           
  5179                           ;Current_Sense_Main.c: 202: timerCountLF++;
  5180  000058  0E01               	movlw	1
  5181  00005A  2645               	addwf	_timerCountLF,f,c	;volatile
  5182  00005C  0E00               	movlw	0
  5183  00005E  2246               	addwfc	_timerCountLF+1,f,c	;volatile
  5184  000060  2247               	addwfc	_timerCountLF+2,f,c	;volatile
  5185  000062  2248               	addwfc	_timerCountLF+3,f,c	;volatile
  5186                           
  5187                           ;Current_Sense_Main.c: 204: return;
  5188  000064  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5189  000068  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5190  00006C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5191  000070  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5192  000074  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5193  000078  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5194  00007C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5195  000080  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5196  000084  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5197  000088  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5198  00008C  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5199  000090  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5200  000094  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5201  000098  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5202  00009C  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5203  00009E  0011               	retfie		f
  5204  0000A0                     __end_of_Timer0_ISR:
  5205                           	opt stack 0
  5206                           pclatu	equ	0xFFB
  5207                           pclath	equ	0xFFA
  5208                           tblptru	equ	0xFF8
  5209                           tblptrh	equ	0xFF7
  5210                           tblptrl	equ	0xFF6
  5211                           tablat	equ	0xFF5
  5212                           prodh	equ	0xFF4
  5213                           prodl	equ	0xFF3
  5214                           intcon	equ	0xFF2
  5215                           intcon2	equ	0xFF1
  5216                           intcon3	equ	0xFF0
  5217                           postinc0	equ	0xFEE
  5218                           fsr0h	equ	0xFEA
  5219                           fsr0l	equ	0xFE9
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postinc1	equ	0xFE6
  5223                           fsr1h	equ	0xFE2
  5224                           fsr1l	equ	0xFE1
  5225                           indf2	equ	0xFDF
  5226                           postinc2	equ	0xFDE
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           pclatu	equ	0xFFB
  5231                           pclath	equ	0xFFA
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           intcon	equ	0xFF2
  5239                           intcon2	equ	0xFF1
  5240                           intcon3	equ	0xFF0
  5241                           postinc0	equ	0xFEE
  5242                           fsr0h	equ	0xFEA
  5243                           fsr0l	equ	0xFE9
  5244                           wreg	equ	0xFE8
  5245                           indf1	equ	0xFE7
  5246                           postinc1	equ	0xFE6
  5247                           fsr1h	equ	0xFE2
  5248                           fsr1l	equ	0xFE1
  5249                           indf2	equ	0xFDF
  5250                           postinc2	equ	0xFDE
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255                           	psect	rparam
  5256  0000                     pclatu	equ	0xFFB
  5257                           pclath	equ	0xFFA
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           intcon	equ	0xFF2
  5265                           intcon2	equ	0xFF1
  5266                           intcon3	equ	0xFF0
  5267                           postinc0	equ	0xFEE
  5268                           fsr0h	equ	0xFEA
  5269                           fsr0l	equ	0xFE9
  5270                           wreg	equ	0xFE8
  5271                           indf1	equ	0xFE7
  5272                           postinc1	equ	0xFE6
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281                           	psect	temp
  5282  000049                     btemp:
  5283                           	opt stack 0
  5284  000049                     	ds	1
  5285  0000                     int$flags	set	btemp
  5286                           pclatu	equ	0xFFB
  5287                           pclath	equ	0xFFA
  5288                           tblptru	equ	0xFF8
  5289                           tblptrh	equ	0xFF7
  5290                           tblptrl	equ	0xFF6
  5291                           tablat	equ	0xFF5
  5292                           prodh	equ	0xFF4
  5293                           prodl	equ	0xFF3
  5294                           intcon	equ	0xFF2
  5295                           intcon2	equ	0xFF1
  5296                           intcon3	equ	0xFF0
  5297                           postinc0	equ	0xFEE
  5298                           fsr0h	equ	0xFEA
  5299                           fsr0l	equ	0xFE9
  5300                           wreg	equ	0xFE8
  5301                           indf1	equ	0xFE7
  5302                           postinc1	equ	0xFE6
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     51      72
    BANK0           160     51     135
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setEnergyUsed@temp(COMRAM[7]), com_command_setPower@temp(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setEnergyUsed@temp(COMRAM[7]), com_command_setPower@temp(COMRAM[7]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_21(CODE[10]), STR_20(CODE[5]), STR_19(CODE[6]), STR_18(CODE[7]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), 
		 -> STR_7(CODE[3]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_21(CODE[10]), STR_20(CODE[5]), STR_19(CODE[6]), STR_18(CODE[7]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), 
		 -> STR_7(CODE[3]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_39(CODE[4]), STR_38(CODE[10]), STR_37(CODE[4]), STR_36(CODE[12]), 
		 -> STR_35(CODE[5]), STR_34(CODE[4]), STR_33(CODE[5]), STR_32(CODE[4]), 
		 -> STR_31(CODE[4]), STR_30(CODE[6]), STR_29(CODE[4]), STR_28(CODE[7]), 
		 -> STR_27(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[7]), STR_26(CODE[6]), STR_25(CODE[4]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_9(CODE[5]), STR_8(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 7
		 -> STR_39(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[7]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_14(CODE[3]), STR_10(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_38(CODE[10]), STR_33(CODE[5]), STR_30(CODE[6]), STR_28(CODE[7]), 
		 -> STR_26(CODE[6]), STR_13(CODE[5]), STR_9(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_37(CODE[4]), STR_32(CODE[4]), STR_29(CODE[4]), STR_27(CODE[4]), 
		 -> STR_25(CODE[4]), STR_12(CODE[4]), STR_8(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_22(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _communications->_resetCommunications
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _com_command_setEnergyUsed->_command_builder3
    _utoa->___lwdiv
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   56594
                                             49 COMRAM     2     2      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      5     5      0     513
                                             27 COMRAM     5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     238
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initMCPFout                                          1     1      0     238
                                             19 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     238
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   55559
                                             47 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     289
                                             16 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   32484
                                             43 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2    9686
                                             34 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                16    14      2   11280
                                             34 COMRAM     9     7      2
                   _command_builder3
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           16    14      2   11280
                                             34 COMRAM     9     7      2
                   _command_builder3
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1544
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     419
                                             17 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     111
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   22344
                                             39 COMRAM     4     0      4
                                              0 BANK0     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   21185
                                             34 COMRAM     5     1      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2717
                                             25 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     707
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    8210
                                             30 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    7804
                                             26 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    9600
                                             26 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    4468
                                             18 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    3076
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     908
                                             20 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _utoa
           ___lwdiv
           ___lwmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _utoa
           ___lwdiv
           ___lwmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     33      87       4       84.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     33      48       1       76.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF       9        0.0%
DATA                 0      0      CF      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Apr 20 01:54:04 2017

                                       _SPISlaveInit 1256                                  ___wmul@multiplicand 0011  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l140 140C                                                  l117 15C2  
                                                l109 111C                                                  l135 0C34  
                                                l272 0CFA                                                  l377 14A8  
                                                l827 124C                                                  l748 0D7E  
                                                l837 13AE                                                  l774 1072  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                u770 10C2                                                  u780 10F8  
                                                u950 147C                                                  u960 147E  
                                                u777 10B8                                                  u787 10EE  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 002E                                         ?_initMCPFout 0001  
                                               l2002 08B2                                                 l2102 0CE8  
                                               l2014 155A                                                 l2060 0F1A  
                                               l2132 0FFE                                                 l2124 0F9E  
                                               l2212 0BC6                                                 l2062 0F28  
                                               l2070 0F4C                                                 l2142 1024  
                                               l2214 0BCA                                                 l2080 0C4A  
                                               l2064 0F36                                                 l2144 1030  
                                               l2066 0F42                                                 l2154 1064  
                                               l2146 1034                                                 l2092 0C8E  
                                               l2228 0C20                                                 l2260 113E  
                                               l2190 0EC2                                                 l2182 0E96  
                                               l2174 0E66                                                 l1800 1384  
                                               l2176 0E76                                                 l2184 0EAA  
                                               l2264 1148                                                 l2248 110C  
                                               l1802 138C                                                 l2194 0ED4  
                                               l1724 108E                                                 l1740 0A48  
                                               l1804 1390                                                 l1750 0AAE  
                                               l1920 090C                                                 l1728 10CC  
                                               l1744 0A7C                                                 l1752 0AB2  
                                               l1904 14A4                                                 l1808 13A4  
                                               l1914 08DA                                                 l1770 0B58  
                                               l1940 099C                                                 l1764 0B20  
                                               l1780 121A                                                 l1942 09CC  
                                               l1758 0AEA                                                 l1782 1222  
                                               l1838 0D06                                                 l1936 0972  
                                               l1928 091E                                                 l1944 09DA  
                                               l1960 06B8                                                 l1792 1242  
                                               l1784 1226                                                 l1848 0D40  
                                               l1874 13FA                                                 l1972 074E  
                                               l1956 0684                                                 l1990 0830  
                                               l1982 07D8                                                 l1976 0792  
                                               l1994 085C                                                 l1986 0804  
                                               l1998 0888                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0634  
                                               STR_5 062F                                                 STR_6 062A  
                                               STR_7 065B                                                 STR_8 0657  
                                               STR_9 062A                                                 u1020 08D8  
                                               u1507 13C0                                                 u1517 13D6  
                                               u1527 1400                                                 u1537 0EE2  
                                               _IPR1 000F9F                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               _PIE4 000F7A                                                 _PIE5 000F7D  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _main 1100  
                                               _init 15A8                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr0l 000FE9  
                                               fsr2h 000FDA                                                 indf1 000FE7  
                                               fsr1l 000FE1                                                 indf2 000FDF  
                                               fsr2l 000FD9                                                 btemp 0049  
                                               _utoa 0CFE                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 pclat 000FFA  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00A0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 0031                        __size_of_com_command_setPower 0042  
                                       ___param_bank 000010                                       _communications 0E40  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 0653                                                STR_11 0653  
                                              STR_12 0657                                                STR_20 063E  
                                              STR_13 062A                                                STR_21 060D  
                                              STR_22 064F                                                STR_14 065B  
                                              STR_31 0643                                                STR_15 0639  
                                              STR_16 062A                                                STR_25 0657  
                                              STR_17 0624                                                STR_26 0624  
                                              STR_34 0647                                                STR_18 0617  
                                              STR_27 0657                                                STR_19 061E  
                                              STR_28 0617                                                STR_37 0657  
                                              STR_38 060D                                                STR_39 064B  
                                    __end_of___lldiv 1084                                                ?_utoa 0016  
                                     __CFG_DEBUG$OFF 000000                                      __end_of___lwdiv 1256  
                                    __end_of___lwmod 13B8                                    ?_command_builder1 001B  
                                  ?_command_builder3 001B                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 12A6  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 0017                                   ??_command_builder1 001F  
                                 ??_command_builder3 0023                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0025                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 1592  
                                   ?_powerPulseCheck 0001                          powerPulseCheck@meterWattsHF 001F  
                        powerPulseCheck@meterWattsLF 001C                                   __CFG_MCLRE$EXTMCLR 000000  
                                              tablat 000FF5                                                utoa@c 001E  
                                              utoa@v 001C                                                status 000FD8  
                                    __end_of_strcmp2 0B62                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 0019  
               com_command_setEnergyUsed@send_buffer 0023                                 ?_initInterruptsClear 0001  
                      command_builder_add_string@inx 0019                                      __initialization 14AC  
                                       __end_of_main 1158                                         __end_of_init 15BA  
                             __end_of_communications 0EDA                                         __end_of_utoa 0DA2  
                             _com_command_setVersion 14D2                  __size_of_command_builder_add_string 007C  
                                   _SPI_receive_data 1484                         command_builder_add_char@data 0011  
                                             ??_main 0032                                               ??_init 0015  
                                      _SPI_send_data 1542                                               ??_utoa 001C  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0015                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0010                                ??_initInterruptsClear 000F  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___wmul 14F8                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 0017  
                                          ??___lwdiv 0013                                            ??___lwmod 0013  
                                             _initIO 151E                                               clear_0 14B2  
                                             clear_1 14BE                                       ?_SPI_send_data 0001  
                         ?_com_command_setEnergyUsed 0023                                            ??_initOSC 000F  
                          _process_data_parameterize 08B6                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                             com_command_setPower@temp 0025  
                                          ??_strcmp2 0013                                     __end_of_strmatch 1484  
                                      ?_receive_data 0012                                           __accesstop 0060  
                            __end_of__initialization 14C4                                 __size_of_initMCPFout 0038  
                    com_command_setPower@send_buffer 0023                                        ___rparam_used 000001  
                                  SPI_send_data@data 000F                                       __pcstackCOMRAM 0001  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0012  
                          ??_process_data_parameters 0027                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0015                   __end_of_command_builder_add_string 1100  
                         _command_builder_add_string 1084                                           __pbssBANK0 0060  
                                     ??_receive_data 0014                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0016                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 15BA                                              ?___wmul 000F  
                                 __CFG_CCP3MX$PORTB5 000000                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 000F                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 0027  
         communications@end_of_transmission_received 003B                          __end_of_resetCommunications 0F72  
                                    _meterEnergyUsed 0034                                  ??_pulseFoutPassThru 000F  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 1334                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 1592                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 11AE                                    __end_of_delayMS10 1422  
                    __end_of_process_data_parameters 08B6                             __end_of_SPI_receive_data 14AC  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
                          __end_of_pulseFoutPassThru 15C6      process_data_parameterize@buffer_to_parameterize 0017  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0023                                              __Lparam 0000  
           process_data_parameterize@parameter_index 001E                                              ___lldiv 1002  
                                    __size_of___wmul 0026                                              ___lwdiv 1204  
                                            ___lwmod 1376                                         __psmallconst 0600  
                               SPI_receive_data@data 000F                                      __size_of_initIO 0024  
                                            __pcinit 14AC                                              __ramtop 0600  
                                          ?_strmatch 001A                                              __ptext0 1100  
                                            __ptext1 15BA                                              __ptext2 0B62  
                                            __ptext3 1002                                              __ptext4 1562  
                                            __ptext5 15A8                                              __ptext6 157A  
                                            __ptext7 13B8                                              __ptext8 13F0  
                                            __ptext9 12A6                                           _meterWatts 0036  
                                          _T0CONbits 000FD5                                              _initOSC 157A  
                                  __end_of_initTimer 157A                                  __size_of_Timer0_ISR 0098  
                                            main@inx 0032                                              _strcmp2 0A36  
                               end_of_initialization 14C4                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 1002                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 14F8                             __size_of_powerPulseCheck 00DC  
                                   ??_communications 0030                                      ___lldiv@divisor 0013  
                                    ___lldiv@counter 001B          process_data_parameterize@parameter_position 001F  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                              utoa@buf 0016  
                                            utoa@val 0018                                receive_data@my_status 0040  
                               __end_of_receive_data 0CFE                                           ??_strmatch 001E  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                      communications@last_state_active 003C  
                        ??_com_command_setEnergyUsed 0025                                        ?_process_data 0028  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 0028  
                        __end_of_initInterruptsClear 12F2                    __end_of_process_data_parameterize 0A36  
                         __size_of_pulseFoutPassThru 000C                                 _com_command_setPower 12F2  
                communications@receive_current_state 003D                                        ?_SPISlaveInit 0001  
                                     __end_of___wmul 151E                command_builder_add_string@send_buffer 0013  
                    powerPulseCheck@checkWattsHFvsLF 001E                                       __end_of_initIO 1542  
                                     ??_process_data 002C                          ?_command_builder_add_string 0013  
                                start_initialization 14AC                                        ??_initMCPFout 0014  
                       resetCommunications@commState 0038                                     _command_builder1 1158  
                                   _command_builder3 0DA2                            _com_command_setEnergyUsed 1334  
                  com_command_setVersion@send_buffer 0023                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0011                                ?_com_command_setPower 0023  
                                     ??_SPISlaveInit 000F                                             ??___wmul 0013  
                send_end_of_transmission@send_buffer 001F                                    ??_powerPulseCheck 001C  
                                           ??_initIO 000F                           ??_send_end_of_transmission 0021  
                         ??_command_builder_add_char 0012                                          __pbssCOMRAM 0034  
                                      __pcstackBANK0 00B4                             SPI_receive_data@recvGood 0011  
                                 __end_of_Timer0_ISR 00A0                                       delayMS10@count 000F  
                                  ?_SPI_receive_data 000F                                            _delayMS10 13F0  
                                __end_of_initMCPFout 13F0                        com_command_setEnergyUsed@temp 0025  
                                 ??_SPI_receive_data 0011                                         delayMS10@inx 0012  
                                   ___lwdiv@dividend 000F                                command_builder1@data1 001D  
                        command_builder1@send_buffer 001B                             ?_process_data_parameters 0023  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 001D                                command_builder3@data2 001F  
                              command_builder3@data3 0021                                             ?___lldiv 000F  
                                           ?___lwdiv 000F                                             ?___lwmod 000F  
                              __end_of_SPI_send_data 1562                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 002C  
                                  __size_of_strmatch 0030                                    send_data@send_end 0015  
                                          _initTimer 1562                                     ___lwdiv@quotient 0013  
                                           ?_strcmp2 000F                         __size_of_resetCommunications 0098  
                                     strmatch@result 001E                  process_data_parameterize@parameters 0015  
                                       _receive_data 0C3E                                       ___wmul@product 0013  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 000F  
                               __end_of_process_data 1454                                            _send_data 0F72  
                             ??_com_command_setPower 0025                    process_data_parameters@parameters 0023  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 000F                  command_builder_add_char@send_buffer 000F  
                                         ?_initTimer 0001                                 __end_of_SPISlaveInit 12A6  
                                        _initMCPFout 13B8             process_data@end_of_transmission_received 00E6  
                                         ?_send_data 0011                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001B                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 0042                     __end_of_send_end_of_transmission 15A8  
                                   __size_of___lldiv 0082                                     __size_of___lwdiv 0052  
                                   __size_of___lwmod 0042                     __end_of_command_builder_add_char 1204  
                           __end_of_command_builder1 11AE                             __end_of_command_builder3 0E40  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 0018  
                       process_data_parameterize@inx 001C                                      ___lwdiv@divisor 0011  
                                    ___lwdiv@counter 0015                                             __ptext10 151E  
                                           __ptext11 0E40                                             __ptext20 1204  
                                           __ptext12 0F72                                             __ptext21 0C3E  
                                           __ptext13 1542                                             __ptext30 1084  
                                           __ptext22 1484                                             __ptext14 0EDA  
                                           __ptext31 11AE                                             __ptext23 1422  
                                           __ptext15 14D2                                             __ptext32 08B6  
                                           __ptext24 0660                                             __ptext16 12F2  
                                           __ptext33 14F8                                             __ptext25 1454  
                                           __ptext17 1334                                             __ptext34 1256  
                                           __ptext26 0A36                                             __ptext18 0CFE  
                                           __ptext27 1592                                             __ptext19 1376  
                                           __ptext28 1158                                             __ptext29 0DA2  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0B62                                        __size_of_main 0058  
                                      strmatch@match 0020                                        __size_of_init 0012  
                        powerPulseCheck@mcpHFoutLast 003E                                        __size_of_utoa 00A4  
                                        ??_delayMS10 0011                           ?_process_data_parameterize 0015  
                       __size_of_initInterruptsClear 004C                          powerPulseCheck@mcpLFoutLast 003F  
                                           int$flags 0049                    __end_of_com_command_setEnergyUsed 1376  
                            __size_of_communications 009A                                             _strmatch 1454  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 002A  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                        ??_initTimer 000F                             ??_com_command_setVersion 0025  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 00B4                                         _timerCountHF 0041  
                                       _timerCountLF 0045                                     ___lwmod@dividend 000F  
                                   ___lldiv@dividend 000F                        communications@no_more_to_send 0030  
                                        ??_send_data 0013                                            strmatch@a 001A  
                                          strmatch@b 001C                                           _OSCCONbits 000FD3  
                                _resetCommunications 0EDA                            __size_of_SPI_receive_data 0028  
                                           utoa@base 001A                                             strcmp2@a 000F  
                                           strcmp2@b 0011                                     ___lldiv@quotient 0017  
                                       _process_data 1422                                    _SPI_transmit_wait 003A  
                                    ___lwmod@divisor 0011                                __size_of_SPISlaveInit 0050  
                          communications@send_buffer 008A                                      ___lwmod@counter 0013  
                   __size_of_process_data_parameters 0256                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0C3E                                 ?_resetCommunications 002C  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 001F  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 000F  
