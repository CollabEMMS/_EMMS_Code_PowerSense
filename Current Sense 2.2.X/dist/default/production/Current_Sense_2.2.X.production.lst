

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 30 14:11:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18LF25K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001A12                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for powerCalculation@size
   103  001A12  000E               	dw	14
   104                           
   105                           	psect	idataBANK0
   106  001A0E                     __pidataBANK0:
   107                           	opt stack 0
   108                           
   109                           ;initializer for powerCalculation@currentScalar
   110  001A0E  0001               	dw	1
   111                           
   112                           ;initializer for powerCalculation@voltageScalar
   113  001A10  0001               	dw	1
   114  0000                     _ANSELBbits	set	3897
   115  0000                     _ANSELAbits	set	3896
   116  0000                     _ANSELC	set	3898
   117  0000                     _ANSELB	set	3897
   118  0000                     _ANSELA	set	3896
   119  0000                     _SSP2CON3bits	set	3945
   120  0000                     _SSP2CON3	set	3945
   121  0000                     _SSP2BUF	set	3951
   122  0000                     _SSP2STATbits	set	3949
   123  0000                     _SSP2CON1bits	set	3948
   124  0000                     _LATCbits	set	3979
   125  0000                     _T0CONbits	set	4053
   126  0000                     _IPR5	set	3967
   127  0000                     _IPR4	set	3964
   128  0000                     _IPR3	set	4005
   129  0000                     _IPR2	set	4002
   130  0000                     _IPR1	set	3999
   131  0000                     _PIE5	set	3965
   132  0000                     _PIE4	set	3962
   133  0000                     _PIE3	set	4003
   134  0000                     _PIE2	set	4000
   135  0000                     _PIE1	set	3997
   136  0000                     _PIR5	set	3966
   137  0000                     _PIR4	set	3963
   138  0000                     _PIR3	set	4004
   139  0000                     _PIR2	set	4001
   140  0000                     _PIR1	set	3998
   141  0000                     _RCONbits	set	4048
   142  0000                     _INTCON3	set	4080
   143  0000                     _INTCON2	set	4081
   144  0000                     _INTCON	set	4082
   145  0000                     _TRISAbits	set	3986
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISBbits	set	3987
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _OSCTUNEbits	set	3995
   150  0000                     _OSCCON2bits	set	4050
   151  0000                     _OSCCONbits	set	4051
   152  0000                     _SSP1CON1bits	set	4038
   153  0000                     _PIR1bits	set	3998
   154  0000                     _SSP1STATbits	set	4039
   155  0000                     _SSP1BUF	set	4041
   156  0000                     _PORTAbits	set	3968
   157  0000                     _TMR0L	set	4054
   158  0000                     _TMR0H	set	4055
   159  0000                     _INTCONbits	set	4082
   160  0000                     _PORTBbits	set	3969
   161  0000                     _LATAbits	set	3977
   162  0000                     _PORTCbits	set	3970
   163  0000                     _LATBbits	set	3978
   164                           
   165                           	psect	smallconst
   166  000600                     __psmallconst:
   167                           	opt stack 0
   168  000600  00                 	db	0
   169  000601                     STR_3:
   170                           
   171                           ; BSR set to: 0
   172  000601  43                 	db	67	;'C'
   173  000602  61                 	db	97	;'a'
   174  000603  6C                 	db	108	;'l'
   175  000604  69                 	db	105	;'i'
   176  000605  62                 	db	98	;'b'
   177  000606  72                 	db	114	;'r'
   178  000607  61                 	db	97	;'a'
   179  000608  74                 	db	116	;'t'
   180  000609  69                 	db	105	;'i'
   181  00060A  6F                 	db	111	;'o'
   182  00060B  6E                 	db	110	;'n'
   183  00060C  00                 	db	0
   184  00060D                     STR_22:
   185                           
   186                           ; BSR set to: 0
   187  00060D  50                 	db	80	;'P'
   188  00060E  53                 	db	83	;'S'
   189  00060F  56                 	db	86	;'V'
   190  000610  65                 	db	101	;'e'
   191  000611  72                 	db	114	;'r'
   192  000612  73                 	db	115	;'s'
   193  000613  69                 	db	105	;'i'
   194  000614  6F                 	db	111	;'o'
   195  000615  6E                 	db	110	;'n'
   196  000616  00                 	db	0
   197  000617                     STR_4:
   198                           
   199                           ; BSR set to: 0
   200  000617  45                 	db	69	;'E'
   201  000618  6E                 	db	110	;'n'
   202  000619  55                 	db	85	;'U'
   203  00061A  73                 	db	115	;'s'
   204  00061B  65                 	db	101	;'e'
   205  00061C  64                 	db	100	;'d'
   206  00061D  00                 	db	0
   207  00061E                     STR_20:
   208                           
   209                           ; BSR set to: 0
   210  00061E  56                 	db	86	;'V'
   211  00061F  6F                 	db	111	;'o'
   212  000620  6C                 	db	108	;'l'
   213  000621  74                 	db	116	;'t'
   214  000622  73                 	db	115	;'s'
   215  000623  00                 	db	0
   216  000624                     STR_18:
   217                           
   218                           ; BSR set to: 0
   219  000624  57                 	db	87	;'W'
   220  000625  61                 	db	97	;'a'
   221  000626  74                 	db	116	;'t'
   222  000627  74                 	db	116	;'t'
   223  000628  73                 	db	115	;'s'
   224  000629  00                 	db	0
   225  00062A                     STR_7:
   226                           
   227                           ; BSR set to: 0
   228  00062A  4C                 	db	76	;'L'
   229  00062B  45                 	db	69	;'E'
   230  00062C  44                 	db	68	;'D'
   231  00062D  42                 	db	66	;'B'
   232  00062E  00                 	db	0
   233  00062F                     STR_6:
   234                           
   235                           ; BSR set to: 0
   236  00062F  44                 	db	68	;'D'
   237  000630  61                 	db	97	;'a'
   238  000631  74                 	db	116	;'t'
   239  000632  61                 	db	97	;'a'
   240  000633  00                 	db	0
   241  000634                     STR_5:
   242                           
   243                           ; BSR set to: 0
   244  000634  52                 	db	82	;'R'
   245  000635  65                 	db	101	;'e'
   246  000636  61                 	db	97	;'a'
   247  000637  64                 	db	100	;'d'
   248  000638  00                 	db	0
   249  000639                     STR_16:
   250                           
   251                           ; BSR set to: 0
   252  000639  43                 	db	67	;'C'
   253  00063A  6F                 	db	111	;'o'
   254  00063B  6E                 	db	110	;'n'
   255  00063C  66                 	db	102	;'f'
   256  00063D  00                 	db	0
   257  00063E                     STR_21:
   258                           
   259                           ; BSR set to: 0
   260  00063E  41                 	db	65	;'A'
   261  00063F  6D                 	db	109	;'m'
   262  000640  70                 	db	112	;'p'
   263  000641  73                 	db	115	;'s'
   264  000642  00                 	db	0
   265  000643                     
   266                           ; BSR set to: 0
   267  000643  32                 	db	50	;'2'
   268  000644  32                 	db	50	;'2'
   269  000645  32                 	db	50	;'2'
   270  000646  00                 	db	0
   271  000647                     
   272                           ; BSR set to: 0
   273  000647  33                 	db	51	;'3'
   274  000648  33                 	db	51	;'3'
   275  000649  33                 	db	51	;'3'
   276  00064A  00                 	db	0
   277  00064B                     STR_40:
   278                           
   279                           ; BSR set to: 0
   280  00064B  34                 	db	52	;'4'
   281  00064C  34                 	db	52	;'4'
   282  00064D  34                 	db	52	;'4'
   283  00064E  00                 	db	0
   284  00064F                     STR_1:
   285                           
   286                           ; BSR set to: 0
   287  00064F  45                 	db	69	;'E'
   288  000650  4E                 	db	78	;'N'
   289  000651  44                 	db	68	;'D'
   290  000652  00                 	db	0
   291  000653                     STR_11:
   292                           
   293                           ; BSR set to: 0
   294  000653  4F                 	db	79	;'O'
   295  000654  66                 	db	102	;'f'
   296  000655  66                 	db	102	;'f'
   297  000656  00                 	db	0
   298  000657                     STR_2:
   299                           
   300                           ; BSR set to: 0
   301  000657  53                 	db	83	;'S'
   302  000658  65                 	db	101	;'e'
   303  000659  74                 	db	116	;'t'
   304  00065A  00                 	db	0
   305  00065B                     STR_8:
   306                           
   307                           ; BSR set to: 0
   308  00065B  4F                 	db	79	;'O'
   309  00065C  6E                 	db	110	;'n'
   310  00065D  00                 	db	0
   311  0000                     
   312                           ; #config settings
   313  00065E  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	cinit
   316  00149C                     __pcinit:
   317                           	opt stack 0
   318  00149C                     start_initialization:
   319                           	opt stack 0
   320  00149C                     __initialization:
   321                           	opt stack 0
   322                           
   323                           ; Initialize objects allocated to BANK0 (4 bytes)
   324                           ; load TBLPTR registers with __pidataBANK0
   325  00149C  0E0E               	movlw	low __pidataBANK0
   326  00149E  6EF6               	movwf	tblptrl,c
   327  0014A0  0E1A               	movlw	high __pidataBANK0
   328  0014A2  6EF7               	movwf	tblptrh,c
   329  0014A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   330  0014A6  6EF8               	movwf	tblptru,c
   331  0014A8  EE00  F0CF         	lfsr	0,__pdataBANK0
   332  0014AC  EE10 F004          	lfsr	1,4
   333  0014B0                     copy_data0:
   334  0014B0  0009               	tblrd		*+
   335  0014B2  CFF5 FFEE          	movff	tablat,postinc0
   336  0014B6  50E5               	movf	postdec1,w,c
   337  0014B8  50E1               	movf	fsr1l,w,c
   338  0014BA  E1FA               	bnz	copy_data0
   339                           
   340                           ; Initialize objects allocated to COMRAM (2 bytes)
   341                           ; load TBLPTR registers with __pidataCOMRAM
   342  0014BC  0E12               	movlw	low __pidataCOMRAM
   343  0014BE  6EF6               	movwf	tblptrl,c
   344  0014C0  0E1A               	movlw	high __pidataCOMRAM
   345  0014C2  6EF7               	movwf	tblptrh,c
   346  0014C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   347  0014C6  6EF8               	movwf	tblptru,c
   348  0014C8  0009               	tblrd		*+	;fetch initializer
   349  0014CA  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   350  0014CE  0009               	tblrd		*+	;fetch initializer
   351  0014D0  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   352                           
   353                           ; Clear objects allocated to BANK1 (42 bytes)
   354  0014D4  EE01  F033         	lfsr	0,__pbssBANK1
   355  0014D8  0E2A               	movlw	42
   356  0014DA                     clear_0:
   357  0014DA  6AEE               	clrf	postinc0,c
   358  0014DC  06E8               	decf	wreg,f,c
   359  0014DE  E1FD               	bnz	clear_0
   360                           
   361                           ; Clear objects allocated to BANK0 (94 bytes)
   362  0014E0  EE00  F060         	lfsr	0,__pbssBANK0
   363  0014E4  0E5E               	movlw	94
   364  0014E6                     clear_1:
   365  0014E6  6AEE               	clrf	postinc0,c
   366  0014E8  06E8               	decf	wreg,f,c
   367  0014EA  E1FD               	bnz	clear_1
   368                           
   369                           ; Clear objects allocated to COMRAM (17 bytes)
   370  0014EC  EE00  F03A         	lfsr	0,__pbssCOMRAM
   371  0014F0  0E11               	movlw	17
   372  0014F2                     clear_2:
   373  0014F2  6AEE               	clrf	postinc0,c
   374  0014F4  06E8               	decf	wreg,f,c
   375  0014F6  E1FD               	bnz	clear_2
   376  0014F8                     end_of_initialization:
   377                           	opt stack 0
   378  0014F8                     __end_of__initialization:
   379                           	opt stack 0
   380  0014F8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   381  0014FA  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   382  0014FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   383  0014FE  6EF8               	movwf	tblptru,c
   384  001500  0100               	movlb	0
   385  001502  EF4C  F007         	goto	_main	;jump to C main() function
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssCOMRAM
   396  00003A                     __pbssCOMRAM:
   397                           	opt stack 0
   398  00003A                     _currentData:
   399                           	opt stack 0
   400  00003A                     	ds	2
   401  00003C                     _voltageData:
   402                           	opt stack 0
   403  00003C                     	ds	2
   404  00003E                     receive_data@my_status:
   405                           	opt stack 0
   406  00003E                     	ds	1
   407  00003F                     communications@last_state_active:
   408                           	opt stack 0
   409  00003F                     	ds	1
   410  000040                     communications@receive_current_state:
   411                           	opt stack 0
   412  000040                     	ds	1
   413  000041                     communications@end_of_transmission_received:
   414                           	opt stack 0
   415  000041                     	ds	1
   416  000042                     _SPI_transmit_wait:
   417                           	opt stack 0
   418  000042                     	ds	1
   419  000043                     readSerialData@byte3Read:
   420                           	opt stack 0
   421  000043                     	ds	1
   422  000044                     readSerialData@byte2Read:
   423                           	opt stack 0
   424  000044                     	ds	1
   425  000045                     readSerialData@byte1Read:
   426                           	opt stack 0
   427  000045                     	ds	1
   428  000046                     readSerialData@readingData:
   429                           	opt stack 0
   430  000046                     	ds	1
   431  000047                     energyPulseCheck@mcpLFoutLast:
   432                           	opt stack 0
   433  000047                     	ds	1
   434  000048                     pulseFoutPassThru@runonce:
   435                           	opt stack 0
   436  000048                     	ds	1
   437  000049                     _dataAvailable:
   438                           	opt stack 0
   439  000049                     	ds	1
   440  00004A                     _dataRead:
   441                           	opt stack 0
   442  00004A                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	dataCOMRAM
   453  00004B                     __pdataCOMRAM:
   454                           	opt stack 0
   455  00004B                     powerCalculation@size:
   456                           	opt stack 0
   457  00004B                     	ds	2
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	bssBANK0
   468  000060                     __pbssBANK0:
   469                           	opt stack 0
   470  000060                     powerCalculation@instantPower:
   471                           	opt stack 0
   472  000060                     	ds	28
   473  00007C                     energyPulseCheck@meterEnergyUsedPart:
   474                           	opt stack 0
   475  00007C                     	ds	4
   476  000080                     _timerCountLF:
   477                           	opt stack 0
   478  000080                     	ds	4
   479  000084                     _timerCountHF:
   480                           	opt stack 0
   481  000084                     	ds	4
   482  000088                     _meterEnergyUsed:
   483                           	opt stack 0
   484  000088                     	ds	4
   485  00008C                     _meterWatts:
   486                           	opt stack 0
   487  00008C                     	ds	4
   488  000090                     resetCommunications@commState:
   489                           	opt stack 0
   490  000090                     	ds	2
   491  000092                     powerCalculation@counter:
   492                           	opt stack 0
   493  000092                     	ds	2
   494  000094                     communications@send_buffer:
   495                           	opt stack 0
   496  000094                     	ds	42
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	dataBANK0
   507  0000CF                     __pdataBANK0:
   508                           	opt stack 0
   509  0000CF                     powerCalculation@currentScalar:
   510                           	opt stack 0
   511  0000CF                     	ds	2
   512  0000D1                     powerCalculation@voltageScalar:
   513                           	opt stack 0
   514  0000D1                     	ds	2
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           postdec1	equ	0xFE5
   522                           fsr1l	equ	0xFE1
   523                           
   524                           	psect	bssBANK1
   525  000133                     __pbssBANK1:
   526                           	opt stack 0
   527  000133                     communications@receive_buffer:
   528                           	opt stack 0
   529  000133                     	ds	42
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539                           	psect	cstackBANK1
   540  000100                     __pcstackBANK1:
   541                           	opt stack 0
   542  000100                     process_data@parameters:
   543                           	opt stack 0
   544                           
   545                           ; 50 bytes @ 0x0
   546  000100                     	ds	50
   547  000132                     process_data@end_of_transmission_received:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x32
   551  000132                     	ds	1
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	cstackBANK0
   562  0000BE                     __pcstackBANK0:
   563                           	opt stack 0
   564  0000BE                     com_command_setPower@temp:
   565                           	opt stack 0
   566  0000BE                     com_command_setEnergyUsed@temp:
   567                           	opt stack 0
   568                           
   569                           ; 12 bytes @ 0x0
   570  0000BE                     	ds	12
   571  0000CA                     main@initDone:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0xC
   575  0000CA                     	ds	1
   576  0000CB                     main@inx:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xD
   580  0000CB                     	ds	2
   581  0000CD                     main@inx_1350:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0xF
   585  0000CD                     	ds	2
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           	psect	cstackCOMRAM
   596  000001                     __pcstackCOMRAM:
   597                           	opt stack 0
   598  000001                     ??_Timer0_ISR:
   599                           
   600                           ; 1 bytes @ 0x0
   601  000001                     	ds	18
   602  000013                     ??_isdigit:
   603  000013                     ?_strcmp2:
   604                           	opt stack 0
   605  000013                     ?___wmul:
   606                           	opt stack 0
   607  000013                     ?___awdiv:
   608                           	opt stack 0
   609  000013                     ?___lmul:
   610                           	opt stack 0
   611  000013                     ?___lldiv:
   612                           	opt stack 0
   613  000013                     ?___llmod:
   614                           	opt stack 0
   615  000013                     readSerialData@data:
   616                           	opt stack 0
   617  000013                     SPI_send_data@data:
   618                           	opt stack 0
   619  000013                     delayMS10@count:
   620                           	opt stack 0
   621  000013                     command_builder_add_char@send_buffer:
   622                           	opt stack 0
   623  000013                     strcmp2@a:
   624                           	opt stack 0
   625  000013                     SPI_receive_data@data:
   626                           	opt stack 0
   627  000013                     ___wmul@multiplier:
   628                           	opt stack 0
   629  000013                     ___awdiv@dividend:
   630                           	opt stack 0
   631  000013                     ___lmul@multiplier:
   632                           	opt stack 0
   633  000013                     ___lldiv@dividend:
   634                           	opt stack 0
   635  000013                     ___llmod@dividend:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x12
   639  000013                     	ds	1
   640  000014                     SPI_send_data@sendGood:
   641                           	opt stack 0
   642  000014                     _isdigit$2582:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x13
   646  000014                     	ds	1
   647  000015                     ??_delayMS10:
   648  000015                     command_builder_add_char@data:
   649                           	opt stack 0
   650  000015                     SPI_receive_data@recvGood:
   651                           	opt stack 0
   652  000015                     isdigit@c:
   653                           	opt stack 0
   654  000015                     send_data@send_buffer:
   655                           	opt stack 0
   656  000015                     strcmp2@b:
   657                           	opt stack 0
   658  000015                     ___wmul@multiplicand:
   659                           	opt stack 0
   660  000015                     ___awdiv@divisor:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x14
   664  000015                     	ds	1
   665  000016                     ??_command_builder_add_char:
   666  000016                     delayMS10@inx:
   667                           	opt stack 0
   668  000016                     receive_data@receive_buffer:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x15
   672  000016                     	ds	1
   673  000017                     ??_send_data:
   674  000017                     ??_strcmp2:
   675  000017                     ___awdiv@counter:
   676                           	opt stack 0
   677  000017                     command_builder_add_string@send_buffer:
   678                           	opt stack 0
   679  000017                     ___wmul@product:
   680                           	opt stack 0
   681  000017                     ___lmul@multiplicand:
   682                           	opt stack 0
   683  000017                     ___lldiv@divisor:
   684                           	opt stack 0
   685  000017                     ___llmod@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x16
   689  000017                     	ds	1
   690  000018                     ??_receive_data:
   691  000018                     ___awdiv@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x17
   695  000018                     	ds	1
   696  000019                     receive_data@data:
   697                           	opt stack 0
   698  000019                     send_data@send_end:
   699                           	opt stack 0
   700  000019                     process_data_parameterize@parameters:
   701                           	opt stack 0
   702  000019                     command_builder_add_string@data_string:
   703                           	opt stack 0
   704  000019                     ___awdiv@quotient:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x18
   708  000019                     	ds	1
   709  00001A                     strcmp2@match:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x19
   713  00001A                     	ds	1
   714  00001B                     ??_powerCalculation:
   715  00001B                     ??_command_builder_add_string:
   716  00001B                     ___llmod@counter:
   717                           	opt stack 0
   718  00001B                     process_data_parameterize@buffer_to_parameterize:
   719                           	opt stack 0
   720  00001B                     ___lmul@product:
   721                           	opt stack 0
   722  00001B                     ___lldiv@quotient:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x1A
   726  00001B                     	ds	1
   727  00001C                     strcmp2@inx:
   728                           	opt stack 0
   729  00001C                     _powerCalculation$2940:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x1B
   733  00001C                     	ds	1
   734  00001D                     ??_process_data_parameterize:
   735  00001D                     command_builder_add_string@inx:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x1C
   739  00001D                     	ds	1
   740  00001E                     strmatch@a:
   741                           	opt stack 0
   742  00001E                     _powerCalculation$2941:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x1D
   746  00001E                     	ds	1
   747  00001F                     ?_atol:
   748                           	opt stack 0
   749  00001F                     ___lldiv@counter:
   750                           	opt stack 0
   751  00001F                     command_builder1@send_buffer:
   752                           	opt stack 0
   753  00001F                     command_builder3@send_buffer:
   754                           	opt stack 0
   755  00001F                     atol@s:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x1E
   759  00001F                     	ds	1
   760  000020                     powerCalculation@realPower:
   761                           	opt stack 0
   762  000020                     process_data_parameterize@inx:
   763                           	opt stack 0
   764  000020                     strmatch@b:
   765                           	opt stack 0
   766  000020                     ultoa@buf:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x1F
   770  000020                     	ds	1
   771  000021                     command_builder1@data1:
   772                           	opt stack 0
   773  000021                     command_builder3@data1:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x20
   777  000021                     	ds	1
   778  000022                     process_data_parameterize@parameter_index:
   779                           	opt stack 0
   780  000022                     powerCalculation@i:
   781                           	opt stack 0
   782  000022                     strmatch@result:
   783                           	opt stack 0
   784  000022                     ultoa@val:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x21
   788  000022                     	ds	1
   789  000023                     ??_atol:
   790  000023                     process_data_parameterize@parameter_position:
   791                           	opt stack 0
   792  000023                     command_builder3@data2:
   793                           	opt stack 0
   794  000023                     send_end_of_transmission@send_buffer:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x22
   798  000023                     	ds	1
   799  000024                     strmatch@match:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x23
   803  000024                     	ds	1
   804  000025                     command_builder3@data3:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x24
   808  000025                     	ds	1
   809  000026                     ultoa@base:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x25
   813  000026                     	ds	1
   814  000027                     atol@sign:
   815                           	opt stack 0
   816  000027                     com_command_setVersion@send_buffer:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x26
   820  000027                     	ds	1
   821  000028                     atol@a:
   822                           	opt stack 0
   823  000028                     ultoa@v:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x27
   827  000028                     	ds	1
   828  000029                     
   829                           ; 1 bytes @ 0x28
   830  000029                     	ds	3
   831  00002C                     atol@c:
   832                           	opt stack 0
   833  00002C                     ultoa@c:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x2B
   837  00002C                     	ds	1
   838  00002D                     com_command_setPower@send_buffer:
   839                           	opt stack 0
   840  00002D                     com_command_setEnergyUsed@send_buffer:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x2C
   844  00002D                     	ds	2
   845  00002F                     resetCommunications@send_buffer:
   846                           	opt stack 0
   847  00002F                     process_data_parameters@parameters:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x2E
   851  00002F                     	ds	2
   852  000031                     ??_resetCommunications:
   853  000031                     process_data_parameters@send_buffer:
   854                           	opt stack 0
   855                           
   856                           ; 2 bytes @ 0x30
   857  000031                     	ds	2
   858  000033                     process_data_parameters@end_of_transmission_received:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x32
   862  000033                     	ds	1
   863  000034                     process_data@receive_buffer:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x33
   867  000034                     	ds	2
   868  000036                     process_data@send_buffer:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x35
   872  000036                     	ds	2
   873  000038                     communications@no_more_to_send:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x37
   877  000038                     	ds	1
   878  000039                     communications@firstTime:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x38
   882  000039                     	ds	1
   883  00003A                     tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892                           ; 1 bytes @ 0x39
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 84 in file "Current_Sense_Main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  inx             2   15[BANK0 ] int 
   903 ;;  inx             2   13[BANK0 ] int 
   904 ;;  initDone        1   12[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       5       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         0       5       0       0       0       0       0
   918 ;;Total ram usage:        5 bytes
   919 ;; Hardware stack levels required when called:    8
   920 ;; This function calls:
   921 ;;		_communications
   922 ;;		_delayMS10
   923 ;;		_energyPulseCheck
   924 ;;		_init
   925 ;;		_initMCP
   926 ;;		_initTimer
   927 ;;		_powerCalculation
   928 ;;		_pulseFoutPassThru
   929 ;;		_readSerialData
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text0
   936  000E98                     __ptext0:
   937                           	opt stack 0
   938  000E98                     _main:
   939                           	opt stack 23
   940                           
   941                           ;Current_Sense_Main.c: 86: init();
   942                           
   943                           ;incstack = 0
   944  000E98  ECE8  F00C         	call	_init	;wreg free
   945                           
   946                           ;Current_Sense_Main.c: 88: for (int inx = 0; inx < 10; inx++)
   947  000E9C  0E00               	movlw	0
   948  000E9E  0100               	movlb	0	; () banked
   949  000EA0  6FCC               	movwf	(main@inx+1)& (0+255),b
   950  000EA2  0E00               	movlw	0
   951  000EA4  6FCB               	movwf	main@inx& (0+255),b
   952  000EA6                     l3544:
   953                           
   954                           ; BSR set to: 0
   955  000EA6  BFCC               	btfsc	(main@inx+1)& (0+255),7,b
   956  000EA8  D006               	goto	l135
   957  000EAA  51CC               	movf	(main@inx+1)& (0+255),w,b
   958  000EAC  E116               	bnz	l3556
   959  000EAE  0E0A               	movlw	10
   960  000EB0  5DCB               	subwf	main@inx& (0+255),w,b
   961  000EB2  B0D8               	btfsc	status,0,c
   962  000EB4  D012               	goto	u3110
   963  000EB6                     l135:
   964                           
   965                           ; BSR set to: 0
   966                           ;Current_Sense_Main.c: 89: {
   967                           ;Current_Sense_Main.c: 90: LATBbits.LATB4 = 1;
   968  000EB6  888A               	bsf	3978,4,c	;volatile
   969                           
   970                           ; BSR set to: 0
   971                           ;Current_Sense_Main.c: 91: delayMS10(10);
   972  000EB8  0E00               	movlw	0
   973  000EBA  6E14               	movwf	delayMS10@count+1,c
   974  000EBC  0E0A               	movlw	10
   975  000EBE  6E13               	movwf	delayMS10@count,c
   976  000EC0  EC00  F00C         	call	_delayMS10	;wreg free
   977                           
   978                           ;Current_Sense_Main.c: 92: LATBbits.LATB4 = 0;
   979  000EC4  988A               	bcf	3978,4,c	;volatile
   980                           
   981                           ;Current_Sense_Main.c: 93: delayMS10(10);
   982  000EC6  0E00               	movlw	0
   983  000EC8  6E14               	movwf	delayMS10@count+1,c
   984  000ECA  0E0A               	movlw	10
   985  000ECC  6E13               	movwf	delayMS10@count,c
   986  000ECE  EC00  F00C         	call	_delayMS10	;wreg free
   987  000ED2  0100               	movlb	0	; () banked
   988  000ED4  4BCB               	infsnz	main@inx& (0+255),f,b
   989  000ED6  2BCC               	incf	(main@inx+1)& (0+255),f,b
   990  000ED8  D7E6               	goto	l3544
   991  000EDA                     u3110:
   992  000EDA                     l3556:
   993                           
   994                           ; BSR set to: 0
   995                           ;Current_Sense_Main.c: 94: }
   996                           ;Current_Sense_Main.c: 96: initTimer();
   997  000EDA  ECD0  F00C         	call	_initTimer	;wreg free
   998                           
   999                           ;Current_Sense_Main.c: 124: communications(1);
  1000  000EDE  0E01               	movlw	1
  1001  000EE0  ECF9  F008         	call	_communications
  1002                           
  1003                           ;Current_Sense_Main.c: 131: bool initDone = 0;
  1004  000EE4  0E00               	movlw	0
  1005  000EE6  0100               	movlb	0	; () banked
  1006  000EE8  6FCA               	movwf	main@initDone& (0+255),b
  1007  000EEA                     l3562:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;Current_Sense_Main.c: 134: {
  1011                           ;Current_Sense_Main.c: 135: communications(0);
  1012  000EEA  0E00               	movlw	0
  1013  000EEC  ECF9  F008         	call	_communications
  1014                           
  1015                           ;Current_Sense_Main.c: 136: pulseFoutPassThru();
  1016  000EF0  EC83  F00C         	call	_pulseFoutPassThru	;wreg free
  1017                           
  1018                           ;Current_Sense_Main.c: 137: energyPulseCheck();
  1019  000EF4  EC83  F00A         	call	_energyPulseCheck	;wreg free
  1020                           
  1021                           ;Current_Sense_Main.c: 138: readSerialData();
  1022  000EF8  ECAD  F008         	call	_readSerialData	;wreg free
  1023                           
  1024                           ;Current_Sense_Main.c: 139: powerCalculation();
  1025  000EFC  ECD9  F005         	call	_powerCalculation	;wreg free
  1026                           
  1027                           ;Current_Sense_Main.c: 142: if (initDone == 0)
  1028  000F00  0100               	movlb	0	; () banked
  1029  000F02  51CA               	movf	main@initDone& (0+255),w,b
  1030  000F04  A4D8               	btfss	status,2,c
  1031  000F06  D7F1               	goto	l137
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;Current_Sense_Main.c: 143: {
  1035                           ;Current_Sense_Main.c: 144: if (timerCountLF > 1000)
  1036  000F08  5183               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1037  000F0A  1182               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1038  000F0C  E106               	bnz	u3130
  1039  000F0E  0EE9               	movlw	233
  1040  000F10  5D80               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1041  000F12  0E03               	movlw	3
  1042  000F14  5981               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1043  000F16  A0D8               	btfss	status,0,c
  1044  000F18  D7E8               	goto	l137
  1045  000F1A                     u3130:
  1046                           
  1047                           ; BSR set to: 0
  1048                           ;Current_Sense_Main.c: 145: {
  1049                           ;Current_Sense_Main.c: 146: initMCP();
  1050  000F1A  ECFE  F00C         	call	_initMCP	;wreg free
  1051                           
  1052                           ;Current_Sense_Main.c: 147: initDone = 1;
  1053  000F1E  0E01               	movlw	1
  1054  000F20  0100               	movlb	0	; () banked
  1055  000F22  6FCA               	movwf	main@initDone& (0+255),b
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;Current_Sense_Main.c: 149: for (int inx = 0; inx < 10; inx++)
  1059  000F24  0E00               	movlw	0
  1060  000F26  6FCE               	movwf	(main@inx_1350+1)& (0+255),b
  1061  000F28  0E00               	movlw	0
  1062  000F2A  6FCD               	movwf	main@inx_1350& (0+255),b
  1063  000F2C                     l3582:
  1064                           
  1065                           ; BSR set to: 0
  1066  000F2C  BFCE               	btfsc	(main@inx_1350+1)& (0+255),7,b
  1067  000F2E  D006               	goto	l140
  1068  000F30  51CE               	movf	(main@inx_1350+1)& (0+255),w,b
  1069  000F32  E1DB               	bnz	l3562
  1070  000F34  0E0A               	movlw	10
  1071  000F36  5DCD               	subwf	main@inx_1350& (0+255),w,b
  1072  000F38  B0D8               	btfsc	status,0,c
  1073  000F3A  D7D7               	goto	l137
  1074  000F3C                     l140:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;Current_Sense_Main.c: 150: {
  1078                           ;Current_Sense_Main.c: 151: LATBbits.LATB4 = 1;
  1079  000F3C  888A               	bsf	3978,4,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;Current_Sense_Main.c: 152: delayMS10(3);
  1083  000F3E  0E00               	movlw	0
  1084  000F40  6E14               	movwf	delayMS10@count+1,c
  1085  000F42  0E03               	movlw	3
  1086  000F44  6E13               	movwf	delayMS10@count,c
  1087  000F46  EC00  F00C         	call	_delayMS10	;wreg free
  1088                           
  1089                           ;Current_Sense_Main.c: 153: LATBbits.LATB4 = 0;
  1090  000F4A  988A               	bcf	3978,4,c	;volatile
  1091                           
  1092                           ;Current_Sense_Main.c: 154: delayMS10(5);
  1093  000F4C  0E00               	movlw	0
  1094  000F4E  6E14               	movwf	delayMS10@count+1,c
  1095  000F50  0E05               	movlw	5
  1096  000F52  6E13               	movwf	delayMS10@count,c
  1097  000F54  EC00  F00C         	call	_delayMS10	;wreg free
  1098  000F58  0100               	movlb	0	; () banked
  1099  000F5A  4BCD               	infsnz	main@inx_1350& (0+255),f,b
  1100  000F5C  2BCE               	incf	(main@inx_1350+1)& (0+255),f,b
  1101  000F5E  D7E6               	goto	l3582
  1102  000F60                     __end_of_main:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           postdec1	equ	0xFE5
  1111                           fsr1l	equ	0xFE1
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _readSerialData *****************
  1115 ;; Defined at:
  1116 ;;		line 285 in file "Current_Sense_Main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  data            1   18[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1130 ;;      Params:         0       0       0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0
  1133 ;;      Totals:         1       0       0       0       0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145  00115A                     __ptext1:
  1146                           	opt stack 0
  1147  00115A                     _readSerialData:
  1148                           	opt stack 29
  1149                           
  1150                           ;Current_Sense_Main.c: 287: static bool readingData = 0;
  1151                           ;Current_Sense_Main.c: 288: static bool byte1Read = 0;
  1152                           ;Current_Sense_Main.c: 289: static bool byte2Read = 0;
  1153                           ;Current_Sense_Main.c: 290: static bool byte3Read = 0;
  1154                           ;Current_Sense_Main.c: 292: if (dataAvailable || readingData) {
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;incstack = 0
  1158  00115A  5049               	movf	_dataAvailable,w,c
  1159  00115C  A4D8               	btfss	status,2,c
  1160  00115E  D003               	goto	u2990
  1161  001160  5046               	movf	readSerialData@readingData,w,c
  1162  001162  B4D8               	btfsc	status,2,c
  1163  001164  0012               	return	
  1164  001166                     u2990:
  1165                           
  1166                           ;Current_Sense_Main.c: 294: if (!readingData) {
  1167  001166  5046               	movf	readSerialData@readingData,w,c
  1168  001168  A4D8               	btfss	status,2,c
  1169  00116A  D008               	goto	l186
  1170                           
  1171                           ;Current_Sense_Main.c: 295: SSP1BUF = 0xac;
  1172  00116C  0EAC               	movlw	172
  1173  00116E  6EC9               	movwf	4041,c	;volatile
  1174                           
  1175                           ;Current_Sense_Main.c: 296: readingData = 1;
  1176  001170  0E01               	movlw	1
  1177  001172  6E46               	movwf	readSerialData@readingData,c
  1178                           
  1179                           ;Current_Sense_Main.c: 297: dataRead = 0;
  1180  001174  0E00               	movlw	0
  1181  001176  6E4A               	movwf	_dataRead,c
  1182                           
  1183                           ;Current_Sense_Main.c: 298: dataAvailable = 0;
  1184  001178  0E00               	movlw	0
  1185  00117A  6E49               	movwf	_dataAvailable,c
  1186  00117C                     l186:
  1187                           
  1188                           ;Current_Sense_Main.c: 299: }
  1189                           ;Current_Sense_Main.c: 301: if (readingData && SSP1STATbits.BF) {
  1190  00117C  5046               	movf	readSerialData@readingData,w,c
  1191  00117E  B4D8               	btfsc	status,2,c
  1192  001180  0012               	return	
  1193  001182  A0C7               	btfss	4039,0,c	;volatile
  1194  001184  0012               	return	
  1195                           
  1196                           ;Current_Sense_Main.c: 302: char data = SSP1BUF;
  1197  001186  CFC9 F013          	movff	4041,readSerialData@data	;volatile
  1198                           
  1199                           ;Current_Sense_Main.c: 303: PIR1bits.SSP1IF = 0;
  1200  00118A  969E               	bcf	3998,3,c	;volatile
  1201                           
  1202                           ;Current_Sense_Main.c: 304: SSP1CON1bits.WCOL = 0;
  1203  00118C  9EC6               	bcf	4038,7,c	;volatile
  1204                           
  1205                           ;Current_Sense_Main.c: 305: readingData = 0;
  1206  00118E  0E00               	movlw	0
  1207  001190  6E46               	movwf	readSerialData@readingData,c
  1208                           
  1209                           ;Current_Sense_Main.c: 307: if (!byte1Read) {
  1210  001192  5045               	movf	readSerialData@byte1Read,w,c
  1211  001194  A4D8               	btfss	status,2,c
  1212  001196  D007               	goto	l188
  1213                           
  1214                           ;Current_Sense_Main.c: 308: voltageData = (data << 8) & 0xFF;
  1215  001198  0E00               	movlw	0
  1216  00119A  6E3D               	movwf	_voltageData+1,c
  1217  00119C  0E00               	movlw	0
  1218  00119E  6E3C               	movwf	_voltageData,c
  1219                           
  1220                           ;Current_Sense_Main.c: 309: byte1Read = 1;
  1221  0011A0  0E01               	movlw	1
  1222  0011A2  6E45               	movwf	readSerialData@byte1Read,c
  1223                           
  1224                           ;Current_Sense_Main.c: 310: }
  1225  0011A4  0012               	return	
  1226  0011A6                     l188:
  1227                           
  1228                           ;Current_Sense_Main.c: 311: else if (!byte2Read) {
  1229  0011A6  5044               	movf	readSerialData@byte2Read,w,c
  1230  0011A8  A4D8               	btfss	status,2,c
  1231  0011AA  D008               	goto	l190
  1232                           
  1233                           ;Current_Sense_Main.c: 312: voltageData = voltageData | data;
  1234  0011AC  503C               	movf	_voltageData,w,c
  1235  0011AE  1013               	iorwf	readSerialData@data,w,c
  1236  0011B0  6E3C               	movwf	_voltageData,c
  1237  0011B2  503D               	movf	_voltageData+1,w,c
  1238  0011B4  6E3D               	movwf	_voltageData+1,c
  1239                           
  1240                           ;Current_Sense_Main.c: 313: byte2Read = 1;
  1241  0011B6  0E01               	movlw	1
  1242  0011B8  6E44               	movwf	readSerialData@byte2Read,c
  1243                           
  1244                           ;Current_Sense_Main.c: 314: }
  1245  0011BA  0012               	return	
  1246  0011BC                     l190:
  1247                           
  1248                           ;Current_Sense_Main.c: 315: else if (!byte3Read) {
  1249  0011BC  5043               	movf	readSerialData@byte3Read,w,c
  1250  0011BE  A4D8               	btfss	status,2,c
  1251  0011C0  D007               	goto	l192
  1252                           
  1253                           ;Current_Sense_Main.c: 316: currentData = (data << 8) & 0xFF;
  1254  0011C2  0E00               	movlw	0
  1255  0011C4  6E3B               	movwf	_currentData+1,c
  1256  0011C6  0E00               	movlw	0
  1257  0011C8  6E3A               	movwf	_currentData,c
  1258                           
  1259                           ;Current_Sense_Main.c: 317: byte3Read = 1;
  1260  0011CA  0E01               	movlw	1
  1261  0011CC  6E43               	movwf	readSerialData@byte3Read,c
  1262                           
  1263                           ;Current_Sense_Main.c: 318: }
  1264  0011CE  0012               	return	
  1265  0011D0                     l192:
  1266                           
  1267                           ;Current_Sense_Main.c: 319: else if (!dataRead) {
  1268  0011D0  504A               	movf	_dataRead,w,c
  1269  0011D2  A4D8               	btfss	status,2,c
  1270  0011D4  0012               	return	
  1271                           
  1272                           ;Current_Sense_Main.c: 320: currentData = currentData | data;
  1273  0011D6  503A               	movf	_currentData,w,c
  1274  0011D8  1013               	iorwf	readSerialData@data,w,c
  1275  0011DA  6E3A               	movwf	_currentData,c
  1276  0011DC  503B               	movf	_currentData+1,w,c
  1277  0011DE  6E3B               	movwf	_currentData+1,c
  1278                           
  1279                           ;Current_Sense_Main.c: 322: byte1Read = 0;
  1280  0011E0  0E00               	movlw	0
  1281  0011E2  6E45               	movwf	readSerialData@byte1Read,c
  1282                           
  1283                           ;Current_Sense_Main.c: 323: byte2Read = 0;
  1284  0011E4  0E00               	movlw	0
  1285  0011E6  6E44               	movwf	readSerialData@byte2Read,c
  1286                           
  1287                           ;Current_Sense_Main.c: 324: byte3Read = 0;
  1288  0011E8  0E00               	movlw	0
  1289  0011EA  6E43               	movwf	readSerialData@byte3Read,c
  1290                           
  1291                           ;Current_Sense_Main.c: 325: dataRead = 1;
  1292  0011EC  0E01               	movlw	1
  1293  0011EE  6E4A               	movwf	_dataRead,c
  1294  0011F0  0012               	return	
  1295  0011F2                     __end_of_readSerialData:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           postdec1	equ	0xFE5
  1304                           fsr1l	equ	0xFE1
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _pulseFoutPassThru *****************
  1308 ;; Defined at:
  1309 ;;		line 197 in file "Current_Sense_Main.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1323 ;;      Params:         0       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text2
  1338  001906                     __ptext2:
  1339                           	opt stack 0
  1340  001906                     _pulseFoutPassThru:
  1341                           	opt stack 29
  1342                           
  1343                           ;Current_Sense_Main.c: 200: static bool runonce = 0;
  1344                           ;Current_Sense_Main.c: 202: if (PORTCbits.RC2 == 0)
  1345                           
  1346                           ;incstack = 0
  1347  001906  B482               	btfsc	3970,2,c	;volatile
  1348  001908  D00C               	goto	l149
  1349                           
  1350                           ;Current_Sense_Main.c: 203: {
  1351                           ;Current_Sense_Main.c: 204: LATAbits.LATA0 = 1;
  1352  00190A  8089               	bsf	3977,0,c	;volatile
  1353                           
  1354                           ;Current_Sense_Main.c: 205: if (runonce == 0)
  1355  00190C  5048               	movf	pulseFoutPassThru@runonce,w,c
  1356  00190E  A4D8               	btfss	status,2,c
  1357  001910  0012               	return	
  1358                           
  1359                           ;Current_Sense_Main.c: 206: {
  1360                           ;Current_Sense_Main.c: 207: runonce = 1;
  1361  001912  0E01               	movlw	1
  1362  001914  6E48               	movwf	pulseFoutPassThru@runonce,c
  1363                           
  1364                           ;Current_Sense_Main.c: 208: if (PORTBbits.RB4 == 1)
  1365  001916  A881               	btfss	3969,4,c	;volatile
  1366  001918  D002               	goto	l151
  1367                           
  1368                           ;Current_Sense_Main.c: 209: {
  1369                           ;Current_Sense_Main.c: 210: LATBbits.LATB4 = 0;
  1370  00191A  988A               	bcf	3978,4,c	;volatile
  1371                           
  1372                           ;Current_Sense_Main.c: 211: }
  1373  00191C  0012               	return	
  1374  00191E                     l151:
  1375                           
  1376                           ;Current_Sense_Main.c: 212: else
  1377                           ;Current_Sense_Main.c: 213: {
  1378                           ;Current_Sense_Main.c: 214: LATBbits.LATB4 = 1;
  1379  00191E  888A               	bsf	3978,4,c	;volatile
  1380                           
  1381                           ;Current_Sense_Main.c: 215: }
  1382                           ;Current_Sense_Main.c: 216: }
  1383                           ;Current_Sense_Main.c: 217: }
  1384  001920  0012               	return	
  1385  001922                     l149:
  1386                           
  1387                           ;Current_Sense_Main.c: 218: else
  1388                           ;Current_Sense_Main.c: 219: {
  1389                           ;Current_Sense_Main.c: 220: LATAbits.LATA0 = 0;
  1390  001922  9089               	bcf	3977,0,c	;volatile
  1391                           
  1392                           ;Current_Sense_Main.c: 221: runonce = 0;
  1393  001924  0E00               	movlw	0
  1394  001926  6E48               	movwf	pulseFoutPassThru@runonce,c
  1395  001928  0012               	return	
  1396  00192A                     __end_of_pulseFoutPassThru:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           postinc0	equ	0xFEE
  1403                           wreg	equ	0xFE8
  1404                           postdec1	equ	0xFE5
  1405                           fsr1l	equ	0xFE1
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _powerCalculation *****************
  1409 ;; Defined at:
  1410 ;;		line 335 in file "Current_Sense_Main.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  i               2   33[COMRAM] int 
  1415 ;;  realPower       2   31[COMRAM] int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         0       0       0       0       0       0       0
  1426 ;;      Locals:         8       0       0       0       0       0       0
  1427 ;;      Temps:          1       0       0       0       0       0       0
  1428 ;;      Totals:         9       0       0       0       0       0       0
  1429 ;;Total ram usage:        9 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    2
  1432 ;; This function calls:
  1433 ;;		___awdiv
  1434 ;;		___wmul
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441  000BB2                     __ptext3:
  1442                           	opt stack 0
  1443  000BB2                     _powerCalculation:
  1444                           	opt stack 28
  1445                           
  1446                           ;Current_Sense_Main.c: 336: static int size = 14;
  1447                           ;Current_Sense_Main.c: 337: static int instantPower[14];
  1448                           ;Current_Sense_Main.c: 338: static int counter = 0;
  1449                           ;Current_Sense_Main.c: 342: static int voltageScalar = 1;
  1450                           ;Current_Sense_Main.c: 343: static int currentScalar = 1;
  1451                           ;Current_Sense_Main.c: 346: if (dataRead) {
  1452                           
  1453                           ;incstack = 0
  1454  000BB2  504A               	movf	_dataRead,w,c
  1455  000BB4  B4D8               	btfsc	status,2,c
  1456  000BB6  D036               	goto	l208
  1457                           
  1458                           ;Current_Sense_Main.c: 347: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1459  000BB8  C03A  F013         	movff	_currentData,___wmul@multiplier
  1460  000BBC  C03B  F014         	movff	_currentData+1,___wmul@multiplier+1
  1461  000BC0  C0CF  F015         	movff	powerCalculation@currentScalar,___wmul@multiplicand
  1462  000BC4  C0D0  F016         	movff	powerCalculation@currentScalar+1,___wmul@multiplicand+1
  1463  000BC8  EC70  F00C         	call	___wmul	;wreg free
  1464  000BCC  C013  F01C         	movff	?___wmul,_powerCalculation$2940
  1465  000BD0  C014  F01D         	movff	?___wmul+1,_powerCalculation$2940+1
  1466                           
  1467                           ;Current_Sense_Main.c: 347: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1468  000BD4  C01C  F013         	movff	_powerCalculation$2940,___wmul@multiplier
  1469  000BD8  C01D  F014         	movff	_powerCalculation$2940+1,___wmul@multiplier+1
  1470  000BDC  C03C  F015         	movff	_voltageData,___wmul@multiplicand
  1471  000BE0  C03D  F016         	movff	_voltageData+1,___wmul@multiplicand+1
  1472  000BE4  EC70  F00C         	call	___wmul	;wreg free
  1473  000BE8  C013  F01E         	movff	?___wmul,_powerCalculation$2941
  1474  000BEC  C014  F01F         	movff	?___wmul+1,_powerCalculation$2941+1
  1475                           
  1476                           ;Current_Sense_Main.c: 347: instantPower[counter] = (voltageData * voltageScalar) * (cur
      +                          rentData * currentScalar);
  1477  000BF0  C01E  F013         	movff	_powerCalculation$2941,___wmul@multiplier
  1478  000BF4  C01F  F014         	movff	_powerCalculation$2941+1,___wmul@multiplier+1
  1479  000BF8  C0D1  F015         	movff	powerCalculation@voltageScalar,___wmul@multiplicand
  1480  000BFC  C0D2  F016         	movff	powerCalculation@voltageScalar+1,___wmul@multiplicand+1
  1481  000C00  EC70  F00C         	call	___wmul	;wreg free
  1482  000C04  90D8               	bcf	status,0,c
  1483  000C06  0100               	movlb	0	; () banked
  1484  000C08  3592               	rlcf	powerCalculation@counter& (0+255),w,b
  1485  000C0A  6ED9               	movwf	fsr2l,c
  1486  000C0C  3593               	rlcf	(powerCalculation@counter+1)& (0+255),w,b
  1487  000C0E  6EDA               	movwf	fsr2h,c
  1488  000C10  0E60               	movlw	low powerCalculation@instantPower
  1489  000C12  26D9               	addwf	fsr2l,f,c
  1490  000C14  0E00               	movlw	high powerCalculation@instantPower
  1491  000C16  22DA               	addwfc	fsr2h,f,c
  1492  000C18  C013  FFDE         	movff	?___wmul,postinc2
  1493  000C1C  C014  FFDD         	movff	?___wmul+1,postdec2
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;Current_Sense_Main.c: 348: counter++;
  1497  000C20  4B92               	infsnz	powerCalculation@counter& (0+255),f,b
  1498  000C22  2B93               	incf	(powerCalculation@counter+1)& (0+255),f,b
  1499  000C24                     l208:
  1500                           
  1501                           ;Current_Sense_Main.c: 349: }
  1502                           ;Current_Sense_Main.c: 350: if (counter == size) {
  1503                           
  1504                           ; BSR set to: 0
  1505  000C24  504B               	movf	powerCalculation@size,w,c
  1506  000C26  0100               	movlb	0	; () banked
  1507  000C28  1992               	xorwf	powerCalculation@counter& (0+255),w,b
  1508  000C2A  E140               	bnz	l213
  1509  000C2C  504C               	movf	powerCalculation@size+1,w,c
  1510  000C2E  1993               	xorwf	(powerCalculation@counter+1)& (0+255),w,b
  1511  000C30  A4D8               	btfss	status,2,c
  1512  000C32  0012               	return	
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;Current_Sense_Main.c: 351: int realPower = 0;
  1516  000C34  0E00               	movlw	0
  1517  000C36  6E21               	movwf	powerCalculation@realPower+1,c
  1518  000C38  0E00               	movlw	0
  1519  000C3A  6E20               	movwf	powerCalculation@realPower,c
  1520                           
  1521                           ;Current_Sense_Main.c: 352: for (int i = 0; i < size; i++) {
  1522  000C3C  0E00               	movlw	0
  1523  000C3E  6E23               	movwf	powerCalculation@i+1,c
  1524  000C40  0E00               	movlw	0
  1525  000C42  6E22               	movwf	powerCalculation@i,c
  1526  000C44  D00F               	goto	l210
  1527  000C46                     
  1528                           ;Current_Sense_Main.c: 353: realPower =+ instantPower[i];
  1529                           
  1530                           ; BSR set to: 0
  1531  000C46  90D8               	bcf	status,0,c
  1532  000C48  3422               	rlcf	powerCalculation@i,w,c
  1533  000C4A  6ED9               	movwf	fsr2l,c
  1534  000C4C  3423               	rlcf	powerCalculation@i+1,w,c
  1535  000C4E  6EDA               	movwf	fsr2h,c
  1536  000C50  0E60               	movlw	low powerCalculation@instantPower
  1537  000C52  26D9               	addwf	fsr2l,f,c
  1538  000C54  0E00               	movlw	high powerCalculation@instantPower
  1539  000C56  22DA               	addwfc	fsr2h,f,c
  1540  000C58  CFDE F020          	movff	postinc2,powerCalculation@realPower
  1541  000C5C  CFDD F021          	movff	postdec2,powerCalculation@realPower+1
  1542  000C60  4A22               	infsnz	powerCalculation@i,f,c
  1543  000C62  2A23               	incf	powerCalculation@i+1,f,c
  1544  000C64                     l210:
  1545  000C64  504B               	movf	powerCalculation@size,w,c
  1546  000C66  5C22               	subwf	powerCalculation@i,w,c
  1547  000C68  5023               	movf	powerCalculation@i+1,w,c
  1548  000C6A  0A80               	xorlw	128
  1549  000C6C  6E1B               	movwf	??_powerCalculation& (0+255),c
  1550  000C6E  504C               	movf	powerCalculation@size+1,w,c
  1551  000C70  0A80               	xorlw	128
  1552  000C72  581B               	subwfb	??_powerCalculation& (0+255),w,c
  1553  000C74  A0D8               	btfss	status,0,c
  1554  000C76  D7E7               	goto	l211
  1555                           
  1556                           ;Current_Sense_Main.c: 354: }
  1557                           ;Current_Sense_Main.c: 355: counter = 0;
  1558  000C78  0E00               	movlw	0
  1559  000C7A  0100               	movlb	0	; () banked
  1560  000C7C  6F93               	movwf	(powerCalculation@counter+1)& (0+255),b
  1561  000C7E  0E00               	movlw	0
  1562  000C80  6F92               	movwf	powerCalculation@counter& (0+255),b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;Current_Sense_Main.c: 356: meterWatts = realPower / size;
  1566  000C82  C020  F013         	movff	powerCalculation@realPower,___awdiv@dividend
  1567  000C86  C021  F014         	movff	powerCalculation@realPower+1,___awdiv@dividend+1
  1568  000C8A  C04B  F015         	movff	powerCalculation@size,___awdiv@divisor
  1569  000C8E  C04C  F016         	movff	powerCalculation@size+1,___awdiv@divisor+1
  1570  000C92  EC8D  F009         	call	___awdiv	;wreg free
  1571  000C96  C013  F08C         	movff	?___awdiv,_meterWatts
  1572  000C9A  C014  F08D         	movff	?___awdiv+1,_meterWatts+1
  1573  000C9E  0100               	movlb	0	; () banked
  1574  000CA0  0E00               	movlw	0
  1575  000CA2  BF8D               	btfsc	(_meterWatts+1)& (0+255),7,b
  1576  000CA4  0EFF               	movlw	-1
  1577  000CA6  6F8E               	movwf	(_meterWatts+2)& (0+255),b
  1578  000CA8  6F8F               	movwf	(_meterWatts+3)& (0+255),b
  1579                           
  1580                           ; BSR set to: 0
  1581  000CAA  0012               	return	
  1582  000CAC                     l213:
  1583                           
  1584                           ; BSR set to: 0
  1585  000CAC  0012               	return		;funcret
  1586  000CAE                     __end_of_powerCalculation:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           postinc2	equ	0xFDE
  1597                           postdec2	equ	0xFDD
  1598                           fsr2h	equ	0xFDA
  1599                           fsr2l	equ	0xFD9
  1600                           status	equ	0xFD8
  1601                           
  1602 ;; *************** function ___awdiv *****************
  1603 ;; Defined at:
  1604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  dividend        2   18[COMRAM] int 
  1607 ;;  divisor         2   20[COMRAM] int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  quotient        2   24[COMRAM] int 
  1610 ;;  sign            1   23[COMRAM] unsigned char 
  1611 ;;  counter         1   22[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  2   18[COMRAM] int 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1621 ;;      Params:         4       0       0       0       0       0       0
  1622 ;;      Locals:         4       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0
  1624 ;;      Totals:         8       0       0       0       0       0       0
  1625 ;;Total ram usage:        8 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_powerCalculation
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text4
  1636  00131A                     __ptext4:
  1637                           	opt stack 0
  1638  00131A                     ___awdiv:
  1639                           	opt stack 28
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;incstack = 0
  1643  00131A  0E00               	movlw	0
  1644  00131C  6E18               	movwf	___awdiv@sign,c
  1645  00131E  AE16               	btfss	___awdiv@divisor+1,7,c
  1646  001320  D006               	goto	l675
  1647  001322  6C15               	negf	___awdiv@divisor,c
  1648  001324  1E16               	comf	___awdiv@divisor+1,f,c
  1649  001326  B0D8               	btfsc	status,0,c
  1650  001328  2A16               	incf	___awdiv@divisor+1,f,c
  1651  00132A  0E01               	movlw	1
  1652  00132C  6E18               	movwf	___awdiv@sign,c
  1653  00132E                     l675:
  1654  00132E  AE14               	btfss	___awdiv@dividend+1,7,c
  1655  001330  D006               	goto	l676
  1656  001332  6C13               	negf	___awdiv@dividend,c
  1657  001334  1E14               	comf	___awdiv@dividend+1,f,c
  1658  001336  B0D8               	btfsc	status,0,c
  1659  001338  2A14               	incf	___awdiv@dividend+1,f,c
  1660  00133A  0E01               	movlw	1
  1661  00133C  1A18               	xorwf	___awdiv@sign,f,c
  1662  00133E                     l676:
  1663  00133E  0E00               	movlw	0
  1664  001340  6E1A               	movwf	___awdiv@quotient+1,c
  1665  001342  0E00               	movlw	0
  1666  001344  6E19               	movwf	___awdiv@quotient,c
  1667  001346  5015               	movf	___awdiv@divisor,w,c
  1668  001348  1016               	iorwf	___awdiv@divisor+1,w,c
  1669  00134A  B4D8               	btfsc	status,2,c
  1670  00134C  D01C               	goto	l683
  1671  00134E  0E01               	movlw	1
  1672  001350  6E17               	movwf	___awdiv@counter,c
  1673  001352  D004               	goto	l678
  1674  001354  90D8               	bcf	status,0,c
  1675  001356  3615               	rlcf	___awdiv@divisor,f,c
  1676  001358  3616               	rlcf	___awdiv@divisor+1,f,c
  1677  00135A  2A17               	incf	___awdiv@counter,f,c
  1678  00135C                     l678:
  1679  00135C  AE16               	btfss	___awdiv@divisor+1,7,c
  1680  00135E  D7FA               	goto	l679
  1681  001360                     u2840:
  1682  001360  90D8               	bcf	status,0,c
  1683  001362  3619               	rlcf	___awdiv@quotient,f,c
  1684  001364  361A               	rlcf	___awdiv@quotient+1,f,c
  1685  001366  5015               	movf	___awdiv@divisor,w,c
  1686  001368  5C13               	subwf	___awdiv@dividend,w,c
  1687  00136A  5016               	movf	___awdiv@divisor+1,w,c
  1688  00136C  5814               	subwfb	___awdiv@dividend+1,w,c
  1689  00136E  A0D8               	btfss	status,0,c
  1690  001370  D005               	goto	l682
  1691  001372  5015               	movf	___awdiv@divisor,w,c
  1692  001374  5E13               	subwf	___awdiv@dividend,f,c
  1693  001376  5016               	movf	___awdiv@divisor+1,w,c
  1694  001378  5A14               	subwfb	___awdiv@dividend+1,f,c
  1695  00137A  8019               	bsf	___awdiv@quotient,0,c
  1696  00137C                     l682:
  1697  00137C  90D8               	bcf	status,0,c
  1698  00137E  3216               	rrcf	___awdiv@divisor+1,f,c
  1699  001380  3215               	rrcf	___awdiv@divisor,f,c
  1700  001382  2E17               	decfsz	___awdiv@counter,f,c
  1701  001384  D7ED               	goto	u2840
  1702  001386                     l683:
  1703  001386  5018               	movf	___awdiv@sign,w,c
  1704  001388  B4D8               	btfsc	status,2,c
  1705  00138A  D004               	goto	l684
  1706  00138C  6C19               	negf	___awdiv@quotient,c
  1707  00138E  1E1A               	comf	___awdiv@quotient+1,f,c
  1708  001390  B0D8               	btfsc	status,0,c
  1709  001392  2A1A               	incf	___awdiv@quotient+1,f,c
  1710  001394                     l684:
  1711  001394  C019  F013         	movff	___awdiv@quotient,?___awdiv
  1712  001398  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  1713  00139C  0012               	return	
  1714  00139E                     __end_of___awdiv:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           postdec1	equ	0xFE5
  1723                           fsr1l	equ	0xFE1
  1724                           postinc2	equ	0xFDE
  1725                           postdec2	equ	0xFDD
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _initTimer *****************
  1731 ;; Defined at:
  1732 ;;		line 446 in file "Current_Sense_Main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1746 ;;      Params:         0       0       0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text5
  1761  0019A0                     __ptext5:
  1762                           	opt stack 0
  1763  0019A0                     _initTimer:
  1764                           	opt stack 29
  1765                           
  1766                           ;Current_Sense_Main.c: 449: T0CONbits.TMR0ON = 0;
  1767                           
  1768                           ;incstack = 0
  1769  0019A0  9ED5               	bcf	4053,7,c	;volatile
  1770                           
  1771                           ;Current_Sense_Main.c: 450: T0CONbits.T08BIT = 0;
  1772  0019A2  9CD5               	bcf	4053,6,c	;volatile
  1773                           
  1774                           ;Current_Sense_Main.c: 451: T0CONbits.T0CS = 0;
  1775  0019A4  9AD5               	bcf	4053,5,c	;volatile
  1776                           
  1777                           ;Current_Sense_Main.c: 452: T0CONbits.PSA = 0;
  1778  0019A6  96D5               	bcf	4053,3,c	;volatile
  1779                           
  1780                           ;Current_Sense_Main.c: 453: T0CONbits.T0PS = 0b001;
  1781  0019A8  50D5               	movf	4053,w,c	;volatile
  1782  0019AA  0BF8               	andlw	-8
  1783  0019AC  0901               	iorlw	1
  1784  0019AE  6ED5               	movwf	4053,c	;volatile
  1785                           
  1786                           ;Current_Sense_Main.c: 455: INTCONbits.TMR0IE = 1;
  1787  0019B0  8AF2               	bsf	intcon,5,c	;volatile
  1788                           
  1789                           ;Current_Sense_Main.c: 456: INTCONbits.GIE = 1;
  1790  0019B2  8EF2               	bsf	intcon,7,c	;volatile
  1791                           
  1792                           ;Current_Sense_Main.c: 457: T0CONbits.TMR0ON = 1;
  1793  0019B4  8ED5               	bsf	4053,7,c	;volatile
  1794  0019B6  0012               	return		;funcret
  1795  0019B8                     __end_of_initTimer:
  1796                           	opt stack 0
  1797                           tblptru	equ	0xFF8
  1798                           tblptrh	equ	0xFF7
  1799                           tblptrl	equ	0xFF6
  1800                           tablat	equ	0xFF5
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           postinc2	equ	0xFDE
  1807                           postdec2	equ	0xFDD
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _init *****************
  1813 ;; Defined at:
  1814 ;;		line 371 in file "Current_Sense_Main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1828 ;;      Params:         0       0       0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0
  1831 ;;      Totals:         0       0       0       0       0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    2
  1835 ;; This function calls:
  1836 ;;		_initIO
  1837 ;;		_initInterruptsClear
  1838 ;;		_initMCP
  1839 ;;		_initOSC
  1840 ;;		_initSPI
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text6
  1847  0019D0                     __ptext6:
  1848                           	opt stack 0
  1849  0019D0                     _init:
  1850                           	opt stack 28
  1851                           
  1852                           ;Current_Sense_Main.c: 373: initOSC();
  1853                           
  1854                           ;incstack = 0
  1855  0019D0  ECDC  F00C         	call	_initOSC	;wreg free
  1856                           
  1857                           ;Current_Sense_Main.c: 374: initIO();
  1858  0019D4  ECA5  F00C         	call	_initIO	;wreg free
  1859                           
  1860                           ;Current_Sense_Main.c: 375: initInterruptsClear();
  1861  0019D8  EC6C  F00B         	call	_initInterruptsClear	;wreg free
  1862                           
  1863                           ;Current_Sense_Main.c: 376: initSPI();
  1864  0019DC  ECC3  F00C         	call	_initSPI	;wreg free
  1865                           
  1866                           ;Current_Sense_Main.c: 377: initMCP();
  1867  0019E0  ECFE  F00C         	call	_initMCP	;wreg free
  1868  0019E4  0012               	return	
  1869  0019E6                     __end_of_init:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           intcon	equ	0xFF2
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1l	equ	0xFE1
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _initSPI *****************
  1887 ;; Defined at:
  1888 ;;		line 463 in file "Current_Sense_Main.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		None
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1902 ;;      Params:         0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_init
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text7
  1917  001986                     __ptext7:
  1918                           	opt stack 0
  1919  001986                     _initSPI:
  1920                           	opt stack 28
  1921                           
  1922                           ;Current_Sense_Main.c: 474: SSP1CON1bits.SSPEN = 1;
  1923                           
  1924                           ;incstack = 0
  1925  001986  8AC6               	bsf	4038,5,c	;volatile
  1926                           
  1927                           ;Current_Sense_Main.c: 475: SSP1CON1bits.CKP = 1;
  1928  001988  88C6               	bsf	4038,4,c	;volatile
  1929                           
  1930                           ;Current_Sense_Main.c: 476: SSP1CON1bits.SSPM = 0000;
  1931  00198A  90C6               	bcf	4038,0,c	;volatile
  1932  00198C  92C6               	bcf	4038,1,c	;volatile
  1933  00198E  94C6               	bcf	4038,2,c	;volatile
  1934  001990  96C6               	bcf	4038,3,c	;volatile
  1935                           
  1936                           ;Current_Sense_Main.c: 480: SSP1STATbits.SMP = 1;
  1937  001992  8EC7               	bsf	4039,7,c	;volatile
  1938                           
  1939                           ;Current_Sense_Main.c: 481: SSP1STATbits.CKE = 0;
  1940  001994  9CC7               	bcf	4039,6,c	;volatile
  1941                           
  1942                           ;Current_Sense_Main.c: 484: TRISCbits.TRISC5 = 0;
  1943  001996  9A94               	bcf	3988,5,c	;volatile
  1944                           
  1945                           ;Current_Sense_Main.c: 485: TRISCbits.TRISC7 = 0;
  1946  001998  9E94               	bcf	3988,7,c	;volatile
  1947                           
  1948                           ;Current_Sense_Main.c: 486: TRISCbits.TRISC3 = 0;
  1949  00199A  9694               	bcf	3988,3,c	;volatile
  1950                           
  1951                           ;Current_Sense_Main.c: 487: TRISCbits.TRISC4 = 1;
  1952  00199C  8894               	bsf	3988,4,c	;volatile
  1953  00199E  0012               	return		;funcret
  1954  0019A0                     __end_of_initSPI:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           intcon	equ	0xFF2
  1961                           postinc0	equ	0xFEE
  1962                           wreg	equ	0xFE8
  1963                           postdec1	equ	0xFE5
  1964                           fsr1l	equ	0xFE1
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _initOSC *****************
  1972 ;; Defined at:
  1973 ;;		line 382 in file "Current_Sense_Main.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1987 ;;      Params:         0       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_init
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text8
  2002  0019B8                     __ptext8:
  2003                           	opt stack 0
  2004  0019B8                     _initOSC:
  2005                           	opt stack 28
  2006                           
  2007                           ;Current_Sense_Main.c: 385: OSCCONbits.IDLEN = 0;
  2008                           
  2009                           ;incstack = 0
  2010  0019B8  9ED3               	bcf	4051,7,c	;volatile
  2011                           
  2012                           ;Current_Sense_Main.c: 386: OSCCONbits.IRCF = 0b111;
  2013  0019BA  88D3               	bsf	4051,4,c	;volatile
  2014  0019BC  8AD3               	bsf	4051,5,c	;volatile
  2015  0019BE  8CD3               	bsf	4051,6,c	;volatile
  2016                           
  2017                           ;Current_Sense_Main.c: 387: OSCCONbits.SCS = 0b11;
  2018  0019C0  0E03               	movlw	3
  2019  0019C2  12D3               	iorwf	4051,f,c	;volatile
  2020                           
  2021                           ;Current_Sense_Main.c: 389: OSCCON2bits.MFIOSEL = 0;
  2022  0019C4  98D2               	bcf	4050,4,c	;volatile
  2023                           
  2024                           ;Current_Sense_Main.c: 390: OSCCON2bits.SOSCGO = 0;
  2025  0019C6  96D2               	bcf	4050,3,c	;volatile
  2026                           
  2027                           ;Current_Sense_Main.c: 391: OSCCON2bits.PRISD = 0;
  2028  0019C8  94D2               	bcf	4050,2,c	;volatile
  2029                           
  2030                           ;Current_Sense_Main.c: 393: OSCTUNEbits.INTSRC = 1;
  2031  0019CA  8E9B               	bsf	3995,7,c	;volatile
  2032                           
  2033                           ;Current_Sense_Main.c: 394: OSCTUNEbits.PLLEN = 0;
  2034  0019CC  9C9B               	bcf	3995,6,c	;volatile
  2035  0019CE  0012               	return	
  2036  0019D0                     __end_of_initOSC:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           intcon	equ	0xFF2
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postdec1	equ	0xFE5
  2046                           fsr1l	equ	0xFE1
  2047                           postinc2	equ	0xFDE
  2048                           postdec2	equ	0xFDD
  2049                           fsr2h	equ	0xFDA
  2050                           fsr2l	equ	0xFD9
  2051                           status	equ	0xFD8
  2052                           
  2053 ;; *************** function _initMCP *****************
  2054 ;; Defined at:
  2055 ;;		line 490 in file "Current_Sense_Main.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         0       0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    1
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;;		_init
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text9
  2085  0019FC                     __ptext9:
  2086                           	opt stack 0
  2087  0019FC                     _initMCP:
  2088                           	opt stack 29
  2089                           
  2090                           ;Current_Sense_Main.c: 493: TRISCbits.TRISC6 = 0;
  2091                           
  2092                           ;incstack = 0
  2093  0019FC  9C94               	bcf	3988,6,c	;volatile
  2094                           
  2095                           ;Current_Sense_Main.c: 496: LATCbits.LATC6 = 0;
  2096  0019FE  9C8B               	bcf	3979,6,c	;volatile
  2097                           
  2098                           ;Current_Sense_Main.c: 497: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2099  001A00  D000               	nop2		;2 cycle nop
  2100  001A02  D000               	nop2		;2 cycle nop
  2101                           
  2102                           ;Current_Sense_Main.c: 498: LATCbits.LATC6 = 1;
  2103  001A04  8C8B               	bsf	3979,6,c	;volatile
  2104                           
  2105                           ;Current_Sense_Main.c: 499: LATCbits.LATC7 = 0;
  2106  001A06  9E8B               	bcf	3979,7,c	;volatile
  2107                           
  2108                           ;Current_Sense_Main.c: 502: SSP1BUF = 0b10101100;
  2109  001A08  0EAC               	movlw	172
  2110  001A0A  6EC9               	movwf	4041,c	;volatile
  2111  001A0C  0012               	return	
  2112  001A0E                     __end_of_initMCP:
  2113                           	opt stack 0
  2114                           tblptru	equ	0xFF8
  2115                           tblptrh	equ	0xFF7
  2116                           tblptrl	equ	0xFF6
  2117                           tablat	equ	0xFF5
  2118                           intcon	equ	0xFF2
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           postdec1	equ	0xFE5
  2122                           fsr1l	equ	0xFE1
  2123                           postinc2	equ	0xFDE
  2124                           postdec2	equ	0xFDD
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _initInterruptsClear *****************
  2130 ;; Defined at:
  2131 ;;		line 417 in file "Current_Sense_Main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       0       0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_init
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text10
  2160  0016D8                     __ptext10:
  2161                           	opt stack 0
  2162  0016D8                     _initInterruptsClear:
  2163                           	opt stack 28
  2164                           
  2165                           ;Current_Sense_Main.c: 420: INTCON = 0b00000000;
  2166                           
  2167                           ;incstack = 0
  2168  0016D8  0E00               	movlw	0
  2169  0016DA  6EF2               	movwf	intcon,c	;volatile
  2170                           
  2171                           ;Current_Sense_Main.c: 421: INTCON2 = 0b00000000;
  2172  0016DC  0E00               	movlw	0
  2173  0016DE  6EF1               	movwf	intcon2,c	;volatile
  2174                           
  2175                           ;Current_Sense_Main.c: 422: INTCON3 = 0b00000000;
  2176  0016E0  0E00               	movlw	0
  2177  0016E2  6EF0               	movwf	intcon3,c	;volatile
  2178                           
  2179                           ;Current_Sense_Main.c: 424: RCONbits.IPEN = 0;
  2180  0016E4  9ED0               	bcf	4048,7,c	;volatile
  2181                           
  2182                           ;Current_Sense_Main.c: 426: PIR1 = 0b00000000;
  2183  0016E6  0E00               	movlw	0
  2184  0016E8  6E9E               	movwf	3998,c	;volatile
  2185                           
  2186                           ;Current_Sense_Main.c: 427: PIR2 = 0b00000000;
  2187  0016EA  0E00               	movlw	0
  2188  0016EC  6EA1               	movwf	4001,c	;volatile
  2189                           
  2190                           ;Current_Sense_Main.c: 428: PIR3 = 0b00000000;
  2191  0016EE  0E00               	movlw	0
  2192  0016F0  6EA4               	movwf	4004,c	;volatile
  2193                           
  2194                           ;Current_Sense_Main.c: 429: PIR4 = 0b00000000;
  2195  0016F2  0E00               	movlw	0
  2196  0016F4  6E7B               	movwf	3963,c	;volatile
  2197                           
  2198                           ;Current_Sense_Main.c: 430: PIR5 = 0b00000000;
  2199  0016F6  0E00               	movlw	0
  2200  0016F8  6E7E               	movwf	3966,c	;volatile
  2201                           
  2202                           ;Current_Sense_Main.c: 432: PIE1 = 0b00000000;
  2203  0016FA  0E00               	movlw	0
  2204  0016FC  6E9D               	movwf	3997,c	;volatile
  2205                           
  2206                           ;Current_Sense_Main.c: 433: PIE2 = 0b00000000;
  2207  0016FE  0E00               	movlw	0
  2208  001700  6EA0               	movwf	4000,c	;volatile
  2209                           
  2210                           ;Current_Sense_Main.c: 434: PIE3 = 0b00000000;
  2211  001702  0E00               	movlw	0
  2212  001704  6EA3               	movwf	4003,c	;volatile
  2213                           
  2214                           ;Current_Sense_Main.c: 435: PIE4 = 0b00000000;
  2215  001706  0E00               	movlw	0
  2216  001708  6E7A               	movwf	3962,c	;volatile
  2217                           
  2218                           ;Current_Sense_Main.c: 436: PIE5 = 0b00000000;
  2219  00170A  0E00               	movlw	0
  2220  00170C  6E7D               	movwf	3965,c	;volatile
  2221                           
  2222                           ;Current_Sense_Main.c: 438: IPR1 = 0b00000000;
  2223  00170E  0E00               	movlw	0
  2224  001710  6E9F               	movwf	3999,c	;volatile
  2225                           
  2226                           ;Current_Sense_Main.c: 439: IPR2 = 0b00000000;
  2227  001712  0E00               	movlw	0
  2228  001714  6EA2               	movwf	4002,c	;volatile
  2229                           
  2230                           ;Current_Sense_Main.c: 440: IPR3 = 0b00000000;
  2231  001716  0E00               	movlw	0
  2232  001718  6EA5               	movwf	4005,c	;volatile
  2233                           
  2234                           ;Current_Sense_Main.c: 441: IPR4 = 0b00000000;
  2235  00171A  0E00               	movlw	0
  2236  00171C  6E7C               	movwf	3964,c	;volatile
  2237                           
  2238                           ;Current_Sense_Main.c: 442: IPR5 = 0b00000000;
  2239  00171E  0E00               	movlw	0
  2240  001720  6E7F               	movwf	3967,c	;volatile
  2241  001722  0012               	return		;funcret
  2242  001724                     __end_of_initInterruptsClear:
  2243                           	opt stack 0
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           intcon	equ	0xFF2
  2249                           intcon2	equ	0xFF1
  2250                           intcon3	equ	0xFF0
  2251                           postinc0	equ	0xFEE
  2252                           wreg	equ	0xFE8
  2253                           postdec1	equ	0xFE5
  2254                           fsr1l	equ	0xFE1
  2255                           postinc2	equ	0xFDE
  2256                           postdec2	equ	0xFDD
  2257                           fsr2h	equ	0xFDA
  2258                           fsr2l	equ	0xFD9
  2259                           status	equ	0xFD8
  2260                           
  2261 ;; *************** function _initIO *****************
  2262 ;; Defined at:
  2263 ;;		line 399 in file "Current_Sense_Main.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2277 ;;      Params:         0       0       0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0
  2280 ;;      Totals:         0       0       0       0       0       0       0
  2281 ;;Total ram usage:        0 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_init
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text11
  2292  00194A                     __ptext11:
  2293                           	opt stack 0
  2294  00194A                     _initIO:
  2295                           	opt stack 28
  2296                           
  2297                           ;Current_Sense_Main.c: 401: ADCON0bits.ADON = 0;
  2298                           
  2299                           ;incstack = 0
  2300  00194A  90C2               	bcf	4034,0,c	;volatile
  2301                           
  2302                           ;Current_Sense_Main.c: 402: ANSELA = 0b00000000;
  2303  00194C  0E00               	movlw	0
  2304  00194E  010F               	movlb	15	; () banked
  2305  001950  6F38               	movwf	56,b	;volatile
  2306                           
  2307                           ;Current_Sense_Main.c: 403: ANSELB = 0b00000000;
  2308  001952  0E00               	movlw	0
  2309  001954  6F39               	movwf	57,b	;volatile
  2310                           
  2311                           ;Current_Sense_Main.c: 404: ANSELC = 0b00000000;
  2312  001956  0E00               	movlw	0
  2313  001958  6F3A               	movwf	58,b	;volatile
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;Current_Sense_Main.c: 406: TRISBbits.TRISB4 = 0;
  2317  00195A  9893               	bcf	3987,4,c	;volatile
  2318                           
  2319                           ; BSR set to: 15
  2320                           ;Current_Sense_Main.c: 407: LATBbits.LATB4 = 0;
  2321  00195C  988A               	bcf	3978,4,c	;volatile
  2322                           
  2323                           ; BSR set to: 15
  2324                           ;Current_Sense_Main.c: 409: TRISCbits.TRISC2 = 1;
  2325  00195E  8494               	bsf	3988,2,c	;volatile
  2326                           
  2327                           ; BSR set to: 15
  2328                           ;Current_Sense_Main.c: 410: TRISAbits.TRISA1 = 1;
  2329  001960  8292               	bsf	3986,1,c	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;Current_Sense_Main.c: 411: TRISAbits.TRISA0 = 0;
  2333  001962  9092               	bcf	3986,0,c	;volatile
  2334                           
  2335                           ; BSR set to: 15
  2336                           ;Current_Sense_Main.c: 412: LATAbits.LATA0 = 0;
  2337  001964  9089               	bcf	3977,0,c	;volatile
  2338  001966  0012               	return	
  2339  001968                     __end_of_initIO:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           intcon	equ	0xFF2
  2346                           intcon2	equ	0xFF1
  2347                           intcon3	equ	0xFF0
  2348                           postinc0	equ	0xFEE
  2349                           wreg	equ	0xFE8
  2350                           postdec1	equ	0xFE5
  2351                           fsr1l	equ	0xFE1
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _energyPulseCheck *****************
  2359 ;; Defined at:
  2360 ;;		line 242 in file "Current_Sense_Main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         0       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text12
  2389  001506                     __ptext12:
  2390                           	opt stack 0
  2391  001506                     _energyPulseCheck:
  2392                           	opt stack 29
  2393                           
  2394                           ;Current_Sense_Main.c: 251: static unsigned long meterEnergyUsedPart = 0;
  2395                           ;Current_Sense_Main.c: 252: static bool mcpLFoutLast = 0;
  2396                           ;Current_Sense_Main.c: 255: if (PORTAbits.RA1 == 0)
  2397                           
  2398                           ; BSR set to: 15
  2399                           ;incstack = 0
  2400  001506  B280               	btfsc	3968,1,c	;volatile
  2401  001508  D030               	goto	l166
  2402                           
  2403                           ;Current_Sense_Main.c: 256: {
  2404                           ;Current_Sense_Main.c: 257: if (mcpLFoutLast == 0)
  2405  00150A  5047               	movf	energyPulseCheck@mcpLFoutLast,w,c
  2406  00150C  A4D8               	btfss	status,2,c
  2407  00150E  0012               	return	
  2408                           
  2409                           ;Current_Sense_Main.c: 258: {
  2410                           ;Current_Sense_Main.c: 259: mcpLFoutLast = 1;
  2411  001510  0E01               	movlw	1
  2412  001512  6E47               	movwf	energyPulseCheck@mcpLFoutLast,c
  2413                           
  2414                           ;Current_Sense_Main.c: 261: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  2415  001514  0E80               	movlw	128
  2416  001516  0100               	movlb	0	; () banked
  2417  001518  277C               	addwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2418  00151A  0E97               	movlw	151
  2419  00151C  237D               	addwfc	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2420  00151E  0E06               	movlw	6
  2421  001520  237E               	addwfc	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2422  001522  0E00               	movlw	0
  2423  001524  237F               	addwfc	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2424                           
  2425                           ;Current_Sense_Main.c: 262: while (meterEnergyUsedPart > 100000)
  2426  001526  D00E               	goto	l168
  2427  001528                     l3458:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;Current_Sense_Main.c: 263: {
  2431                           ;Current_Sense_Main.c: 264: meterEnergyUsed++;
  2432  001528  0E01               	movlw	1
  2433  00152A  2788               	addwf	_meterEnergyUsed& (0+255),f,b
  2434  00152C  0E00               	movlw	0
  2435  00152E  2389               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  2436  001530  238A               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  2437  001532  238B               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  2438                           
  2439                           ;Current_Sense_Main.c: 265: meterEnergyUsedPart -= 100000;
  2440  001534  0EA0               	movlw	160
  2441  001536  5F7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),f,b
  2442  001538  0E86               	movlw	134
  2443  00153A  5B7D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  2444  00153C  0E01               	movlw	1
  2445  00153E  5B7E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  2446  001540  0E00               	movlw	0
  2447  001542  5B7F               	subwfb	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  2448  001544                     l168:
  2449                           
  2450                           ; BSR set to: 0
  2451  001544  517F               	movf	(energyPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  2452  001546  E1F0               	bnz	l3458
  2453  001548  0EA1               	movlw	161
  2454  00154A  5D7C               	subwf	energyPulseCheck@meterEnergyUsedPart& (0+255),w,b
  2455  00154C  0E86               	movlw	134
  2456  00154E  597D               	subwfb	(energyPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  2457  001550  0E01               	movlw	1
  2458  001552  597E               	subwfb	(energyPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  2459  001554  B0D8               	btfsc	status,0,c
  2460  001556  D7E8               	goto	l169
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;Current_Sense_Main.c: 266: }
  2464                           ;Current_Sense_Main.c: 268: timerCountLF = 0;
  2465                           
  2466                           ; BSR set to: 0
  2467  001558  0E00               	movlw	0
  2468  00155A  6F80               	movwf	_timerCountLF& (0+255),b	;volatile
  2469  00155C  0E00               	movlw	0
  2470  00155E  6F81               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  2471  001560  0E00               	movlw	0
  2472  001562  6F82               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  2473  001564  0E00               	movlw	0
  2474  001566  6F83               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;Current_Sense_Main.c: 269: }
  2478                           ;Current_Sense_Main.c: 270: }
  2479  001568  0012               	return	
  2480  00156A                     l166:
  2481                           
  2482                           ;Current_Sense_Main.c: 271: else
  2483                           ;Current_Sense_Main.c: 272: {
  2484                           ;Current_Sense_Main.c: 273: mcpLFoutLast = 0;
  2485                           
  2486                           ; BSR set to: 0
  2487  00156A  0E00               	movlw	0
  2488  00156C  6E47               	movwf	energyPulseCheck@mcpLFoutLast,c
  2489  00156E  0012               	return	
  2490  001570                     __end_of_energyPulseCheck:
  2491                           	opt stack 0
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           intcon	equ	0xFF2
  2497                           intcon2	equ	0xFF1
  2498                           intcon3	equ	0xFF0
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1l	equ	0xFE1
  2503                           postinc2	equ	0xFDE
  2504                           postdec2	equ	0xFDD
  2505                           fsr2h	equ	0xFDA
  2506                           fsr2l	equ	0xFD9
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _delayMS10 *****************
  2510 ;; Defined at:
  2511 ;;		line 362 in file "Current_Sense_Main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  count           2   18[COMRAM] int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  inx             2   21[COMRAM] int 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2525 ;;      Params:         2       0       0       0       0       0       0
  2526 ;;      Locals:         2       0       0       0       0       0       0
  2527 ;;      Temps:          1       0       0       0       0       0       0
  2528 ;;      Totals:         5       0       0       0       0       0       0
  2529 ;;Total ram usage:        5 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text13
  2540  001800                     __ptext13:
  2541                           	opt stack 0
  2542  001800                     _delayMS10:
  2543                           	opt stack 29
  2544                           
  2545                           ;Current_Sense_Main.c: 364: for (int inx = 0; inx < count; inx++)
  2546                           
  2547                           ;incstack = 0
  2548  001800  0E00               	movlw	0
  2549  001802  6E17               	movwf	delayMS10@inx+1,c
  2550  001804  0E00               	movlw	0
  2551  001806  6E16               	movwf	delayMS10@inx,c
  2552  001808  D009               	goto	l216
  2553  00180A                     
  2554                           ;Current_Sense_Main.c: 365: {
  2555                           ;Current_Sense_Main.c: 367: _delay((unsigned long)((10)*(16000000/4000.0)));
  2556  00180A  0E34               	movlw	52
  2557  00180C  6E15               	movwf	??_delayMS10& (0+255),c
  2558  00180E  0EF2               	movlw	242
  2559  001810                     u3167:
  2560  001810  2EE8               	decfsz	wreg,f,c
  2561  001812  D7FE               	bra	u3167
  2562  001814  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2563  001816  D7FC               	bra	u3167
  2564  001818  4A16               	infsnz	delayMS10@inx,f,c
  2565  00181A  2A17               	incf	delayMS10@inx+1,f,c
  2566  00181C                     l216:
  2567  00181C  5013               	movf	delayMS10@count,w,c
  2568  00181E  5C16               	subwf	delayMS10@inx,w,c
  2569  001820  5017               	movf	delayMS10@inx+1,w,c
  2570  001822  0A80               	xorlw	128
  2571  001824  6E15               	movwf	??_delayMS10& (0+255),c
  2572  001826  5014               	movf	delayMS10@count+1,w,c
  2573  001828  0A80               	xorlw	128
  2574  00182A  5815               	subwfb	??_delayMS10& (0+255),w,c
  2575  00182C  B0D8               	btfsc	status,0,c
  2576  00182E  0012               	return	
  2577  001830  D7EC               	goto	l217
  2578  001832                     __end_of_delayMS10:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           intcon3	equ	0xFF0
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           postdec1	equ	0xFE5
  2590                           fsr1l	equ	0xFE1
  2591                           postinc2	equ	0xFDE
  2592                           postdec2	equ	0xFDD
  2593                           fsr2h	equ	0xFDA
  2594                           fsr2l	equ	0xFD9
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _communications *****************
  2598 ;; Defined at:
  2599 ;;		line 89 in file "SlaveComm_PIC18.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  firstTime       1    wreg     unsigned char 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  firstTime       1   56[COMRAM] unsigned char 
  2604 ;;  no_more_to_s    1   55[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2614 ;;      Params:         0       0       0       0       0       0       0
  2615 ;;      Locals:         2       0       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0
  2617 ;;      Totals:         2       0       0       0       0       0       0
  2618 ;;Total ram usage:        2 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    7
  2621 ;; This function calls:
  2622 ;;		_SPISlaveInit
  2623 ;;		_process_data
  2624 ;;		_receive_data
  2625 ;;		_resetCommunications
  2626 ;;		_send_data
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text14
  2633  0011F2                     __ptext14:
  2634                           	opt stack 0
  2635  0011F2                     _communications:
  2636                           	opt stack 23
  2637                           
  2638                           ;incstack = 0
  2639                           ;communications@firstTime stored from wreg
  2640  0011F2  6E39               	movwf	communications@firstTime,c
  2641                           
  2642                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  2643                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  2644                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  2645                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  2646                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  2647                           ;SlaveComm_PIC18.c: 100: if (firstTime == 1)
  2648  0011F4  0439               	decf	communications@firstTime,w,c
  2649  0011F6  A4D8               	btfss	status,2,c
  2650  0011F8  D00E               	goto	l323
  2651                           
  2652                           ;SlaveComm_PIC18.c: 101: {
  2653                           ;SlaveComm_PIC18.c: 102: SPISlaveInit();
  2654  0011FA  ECDC  F00B         	call	_SPISlaveInit	;wreg free
  2655                           
  2656                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  2657  0011FE  0E00               	movlw	0
  2658  001200  0100               	movlb	0	; () banked
  2659  001202  6FBC               	movwf	(communications@send_buffer+40)& (0+255),b
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  2663  001204  0E00               	movlw	0
  2664  001206  6FBD               	movwf	(communications@send_buffer+41)& (0+255),b
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;SlaveComm_PIC18.c: 105: resetCommunications(&send_buffer);
  2668  001208  0E94               	movlw	low communications@send_buffer
  2669  00120A  6E2F               	movwf	resetCommunications@send_buffer,c
  2670  00120C  0E00               	movlw	high communications@send_buffer
  2671  00120E  6E30               	movwf	resetCommunications@send_buffer+1,c
  2672  001210  EC5F  F008         	call	_resetCommunications	;wreg free
  2673                           
  2674                           ;SlaveComm_PIC18.c: 106: }
  2675  001214  0012               	return	
  2676  001216                     l323:
  2677                           
  2678                           ;SlaveComm_PIC18.c: 107: else
  2679                           ;SlaveComm_PIC18.c: 108: {
  2680                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data(&receive_buffer);
  2681  001216  0E33               	movlw	low communications@receive_buffer
  2682  001218  6E16               	movwf	receive_data@receive_buffer,c
  2683  00121A  0E01               	movlw	high communications@receive_buffer
  2684  00121C  6E17               	movwf	receive_data@receive_buffer+1,c
  2685  00121E  ECB0  F007         	call	_receive_data	;wreg free
  2686  001222  6E40               	movwf	communications@receive_current_state,c
  2687                           
  2688                           ;SlaveComm_PIC18.c: 111: switch (receive_current_state)
  2689  001224  D010               	goto	l325
  2690  001226                     
  2691                           ;SlaveComm_PIC18.c: 121: if (process_data(&receive_buffer, &send_buffer) == 1)
  2692  001226  0E33               	movlw	low communications@receive_buffer
  2693  001228  6E34               	movwf	process_data@receive_buffer,c
  2694  00122A  0E01               	movlw	high communications@receive_buffer
  2695  00122C  6E35               	movwf	process_data@receive_buffer+1,c
  2696  00122E  0E94               	movlw	low communications@send_buffer
  2697  001230  6E36               	movwf	process_data@send_buffer,c
  2698  001232  0E00               	movlw	high communications@send_buffer
  2699  001234  6E37               	movwf	process_data@send_buffer+1,c
  2700  001236  EC19  F00C         	call	_process_data	;wreg free
  2701  00123A  06E8               	decf	wreg,f,c
  2702  00123C  A4D8               	btfss	status,2,c
  2703  00123E  D00D               	goto	l327
  2704                           
  2705                           ;SlaveComm_PIC18.c: 122: {
  2706                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  2707  001240  0E01               	movlw	1
  2708  001242  6E41               	movwf	communications@end_of_transmission_received,c
  2709                           
  2710                           ;SlaveComm_PIC18.c: 127: }
  2711                           
  2712                           ;SlaveComm_PIC18.c: 124: }
  2713                           ;SlaveComm_PIC18.c: 126: break;
  2714  001244  D00A               	goto	l327
  2715  001246                     l325:
  2716  001246  5040               	movf	communications@receive_current_state,w,c
  2717                           
  2718                           ; Switch size 1, requested type "space"
  2719                           ; Number of cases is 3, Range of values is 0 to 2
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte           10     6 (average)
  2723                           ;	Chosen strategy is simple_byte
  2724  001248  0A00               	xorlw	0	; case 0
  2725  00124A  B4D8               	btfsc	status,2,c
  2726  00124C  D006               	goto	l327
  2727  00124E  0A01               	xorlw	1	; case 1
  2728  001250  B4D8               	btfsc	status,2,c
  2729  001252  D003               	goto	l327
  2730  001254  0A03               	xorlw	3	; case 2
  2731  001256  B4D8               	btfsc	status,2,c
  2732  001258  D7E6               	goto	l329
  2733  00125A                     l327:
  2734                           
  2735                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data(&send_buffer);
  2736  00125A  0E94               	movlw	low communications@send_buffer
  2737  00125C  6E15               	movwf	send_data@send_buffer,c
  2738  00125E  0E00               	movlw	high communications@send_buffer
  2739  001260  6E16               	movwf	send_data@send_buffer+1,c
  2740  001262  EC45  F009         	call	_send_data	;wreg free
  2741  001266  6E38               	movwf	communications@no_more_to_send,c
  2742                           
  2743                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  2744                           ;SlaveComm_PIC18.c: 133: if (PORTBbits.SS2 == 0b1)
  2745  001268  A081               	btfss	3969,0,c	;volatile
  2746  00126A  D003               	goto	l333
  2747                           
  2748                           ;SlaveComm_PIC18.c: 134: {
  2749                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  2750  00126C  0E00               	movlw	0
  2751  00126E  6E3F               	movwf	communications@last_state_active,c
  2752                           
  2753                           ;SlaveComm_PIC18.c: 136: }
  2754  001270  0012               	return	
  2755  001272                     l333:
  2756                           
  2757                           ;SlaveComm_PIC18.c: 137: else
  2758                           ;SlaveComm_PIC18.c: 138: {
  2759                           ;SlaveComm_PIC18.c: 139: if (last_state_active == 0)
  2760  001272  503F               	movf	communications@last_state_active,w,c
  2761  001274  A4D8               	btfss	status,2,c
  2762  001276  D006               	goto	l335
  2763                           
  2764                           ;SlaveComm_PIC18.c: 140: {
  2765                           ;SlaveComm_PIC18.c: 141: resetCommunications(&send_buffer);
  2766  001278  0E94               	movlw	low communications@send_buffer
  2767  00127A  6E2F               	movwf	resetCommunications@send_buffer,c
  2768  00127C  0E00               	movlw	high communications@send_buffer
  2769  00127E  6E30               	movwf	resetCommunications@send_buffer+1,c
  2770  001280  EC5F  F008         	call	_resetCommunications	;wreg free
  2771  001284                     l335:
  2772                           
  2773                           ;SlaveComm_PIC18.c: 142: }
  2774                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  2775  001284  0E01               	movlw	1
  2776  001286  6E3F               	movwf	communications@last_state_active,c
  2777  001288  0012               	return	
  2778  00128A                     __end_of_communications:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           intcon	equ	0xFF2
  2785                           intcon2	equ	0xFF1
  2786                           intcon3	equ	0xFF0
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           postdec1	equ	0xFE5
  2790                           fsr1l	equ	0xFE1
  2791                           postinc2	equ	0xFDE
  2792                           postdec2	equ	0xFDD
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _send_data *****************
  2798 ;; Defined at:
  2799 ;;		line 485 in file "SlaveComm_PIC18.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2802 ;;		 -> communications@send_buffer(42), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  send_end        1   24[COMRAM] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      unsigned char 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2814 ;;      Params:         2       0       0       0       0       0       0
  2815 ;;      Locals:         1       0       0       0       0       0       0
  2816 ;;      Temps:          2       0       0       0       0       0       0
  2817 ;;      Totals:         5       0       0       0       0       0       0
  2818 ;;Total ram usage:        5 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    2
  2821 ;; This function calls:
  2822 ;;		_SPI_send_data
  2823 ;; This function is called by:
  2824 ;;		_communications
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text15
  2829  00128A                     __ptext15:
  2830                           	opt stack 0
  2831  00128A                     _send_data:
  2832                           	opt stack 27
  2833                           
  2834                           ;SlaveComm_PIC18.c: 487: bool send_end;
  2835                           ;SlaveComm_PIC18.c: 489: if (send_buffer->read_position == send_buffer->write_position)
  2836                           
  2837                           ;incstack = 0
  2838  00128A  EE20 F028          	lfsr	2,40
  2839  00128E  5015               	movf	send_data@send_buffer,w,c
  2840  001290  26D9               	addwf	fsr2l,f,c
  2841  001292  5016               	movf	send_data@send_buffer+1,w,c
  2842  001294  22DA               	addwfc	fsr2h,f,c
  2843  001296  EE10 F029          	lfsr	1,41
  2844  00129A  5015               	movf	send_data@send_buffer,w,c
  2845  00129C  26E1               	addwf	fsr1l,f,c
  2846  00129E  5016               	movf	send_data@send_buffer+1,w,c
  2847  0012A0  22E2               	addwfc	fsr1h,f,c
  2848  0012A2  50DE               	movf	postinc2,w,c
  2849  0012A4  18E6               	xorwf	postinc1,w,c
  2850  0012A6  A4D8               	btfss	status,2,c
  2851  0012A8  D006               	goto	l433
  2852                           
  2853                           ;SlaveComm_PIC18.c: 490: {
  2854                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2855  0012AA  0E01               	movlw	1
  2856  0012AC  6E19               	movwf	send_data@send_end,c
  2857                           
  2858                           ;SlaveComm_PIC18.c: 492: SPI_send_data('\0');
  2859  0012AE  0E00               	movlw	0
  2860  0012B0  EC95  F00C         	call	_SPI_send_data
  2861                           
  2862                           ;SlaveComm_PIC18.c: 493: }
  2863  0012B4  D030               	goto	l436
  2864  0012B6                     l433:
  2865                           
  2866                           ;SlaveComm_PIC18.c: 494: else
  2867                           ;SlaveComm_PIC18.c: 495: {
  2868                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2869  0012B6  0E00               	movlw	0
  2870  0012B8  6E19               	movwf	send_data@send_end,c
  2871                           
  2872                           ;SlaveComm_PIC18.c: 499: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2873  0012BA  EE20 F029          	lfsr	2,41
  2874  0012BE  5015               	movf	send_data@send_buffer,w,c
  2875  0012C0  26D9               	addwf	fsr2l,f,c
  2876  0012C2  5016               	movf	send_data@send_buffer+1,w,c
  2877  0012C4  22DA               	addwfc	fsr2h,f,c
  2878  0012C6  50DF               	movf	indf2,w,c
  2879  0012C8  6E17               	movwf	??_send_data& (0+255),c
  2880  0012CA  5017               	movf	??_send_data,w,c
  2881  0012CC  0D01               	mullw	1
  2882  0012CE  50F3               	movf	prodl,w,c
  2883  0012D0  2415               	addwf	send_data@send_buffer,w,c
  2884  0012D2  6ED9               	movwf	fsr2l,c
  2885  0012D4  50F4               	movf	prodh,w,c
  2886  0012D6  2016               	addwfc	send_data@send_buffer+1,w,c
  2887  0012D8  6EDA               	movwf	fsr2h,c
  2888  0012DA  50DF               	movf	indf2,w,c
  2889  0012DC  EC95  F00C         	call	_SPI_send_data
  2890  0012E0  06E8               	decf	wreg,f,c
  2891  0012E2  A4D8               	btfss	status,2,c
  2892  0012E4  D018               	goto	l436
  2893                           
  2894                           ;SlaveComm_PIC18.c: 500: {
  2895                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2896  0012E6  EE20 F029          	lfsr	2,41
  2897  0012EA  5015               	movf	send_data@send_buffer,w,c
  2898  0012EC  26D9               	addwf	fsr2l,f,c
  2899  0012EE  5016               	movf	send_data@send_buffer+1,w,c
  2900  0012F0  22DA               	addwfc	fsr2h,f,c
  2901  0012F2  2ADF               	incf	indf2,f,c
  2902                           
  2903                           ;SlaveComm_PIC18.c: 503: if (send_buffer->read_position >= 40)
  2904  0012F4  EE20 F029          	lfsr	2,41
  2905  0012F8  5015               	movf	send_data@send_buffer,w,c
  2906  0012FA  26D9               	addwf	fsr2l,f,c
  2907  0012FC  5016               	movf	send_data@send_buffer+1,w,c
  2908  0012FE  22DA               	addwfc	fsr2h,f,c
  2909  001300  0E27               	movlw	39
  2910  001302  64DF               	cpfsgt	indf2,c
  2911  001304  D008               	goto	l436
  2912                           
  2913                           ;SlaveComm_PIC18.c: 504: {
  2914                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2915  001306  EE20 F029          	lfsr	2,41
  2916  00130A  5015               	movf	send_data@send_buffer,w,c
  2917  00130C  26D9               	addwf	fsr2l,f,c
  2918  00130E  5016               	movf	send_data@send_buffer+1,w,c
  2919  001310  22DA               	addwfc	fsr2h,f,c
  2920  001312  0E00               	movlw	0
  2921  001314  6EDF               	movwf	indf2,c
  2922  001316                     l436:
  2923                           
  2924                           ;SlaveComm_PIC18.c: 506: }
  2925                           ;SlaveComm_PIC18.c: 507: }
  2926                           ;SlaveComm_PIC18.c: 508: }
  2927                           ;SlaveComm_PIC18.c: 510: return send_end;
  2928  001316  5019               	movf	send_data@send_end,w,c
  2929  001318  0012               	return	
  2930  00131A                     __end_of_send_data:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           intcon2	equ	0xFF1
  2940                           intcon3	equ	0xFF0
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           postinc1	equ	0xFE6
  2944                           postdec1	equ	0xFE5
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _SPI_send_data *****************
  2955 ;; Defined at:
  2956 ;;		line 583 in file "SlaveComm_PIC18.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  data            1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  data            1   18[COMRAM] unsigned char 
  2961 ;;  sendGood        1   19[COMRAM] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      unsigned char 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         0       0       0       0       0       0       0
  2972 ;;      Locals:         2       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0
  2974 ;;      Totals:         2       0       0       0       0       0       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_send_data
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text16
  2986  00192A                     __ptext16:
  2987                           	opt stack 0
  2988  00192A                     _SPI_send_data:
  2989                           	opt stack 27
  2990                           
  2991                           ;incstack = 0
  2992                           ;SPI_send_data@data stored from wreg
  2993  00192A  6E13               	movwf	SPI_send_data@data,c
  2994                           
  2995                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2996  00192C  0E00               	movlw	0
  2997  00192E  6E14               	movwf	SPI_send_data@sendGood,c
  2998                           
  2999                           ;SlaveComm_PIC18.c: 587: if (SPI_transmit_wait == 0)
  3000  001930  5042               	movf	_SPI_transmit_wait,w,c
  3001  001932  A4D8               	btfss	status,2,c
  3002  001934  D006               	goto	l464
  3003                           
  3004                           ;SlaveComm_PIC18.c: 588: {
  3005                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  3006  001936  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  3007                           
  3008                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  3009  00193A  0E01               	movlw	1
  3010  00193C  6E42               	movwf	_SPI_transmit_wait,c
  3011                           
  3012                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  3013  00193E  0E01               	movlw	1
  3014  001940  D001               	goto	L1
  3015  001942                     l464:
  3016                           
  3017                           ;SlaveComm_PIC18.c: 593: else
  3018                           ;SlaveComm_PIC18.c: 594: {
  3019                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  3020  001942  0E00               	movlw	0
  3021  001944                     L1:
  3022  001944  6E14               	movwf	SPI_send_data@sendGood,c
  3023                           
  3024                           ;SlaveComm_PIC18.c: 596: }
  3025                           ;SlaveComm_PIC18.c: 598: return sendGood;
  3026  001946  5014               	movf	SPI_send_data@sendGood,w,c
  3027  001948  0012               	return	
  3028  00194A                     __end_of_SPI_send_data:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           intcon	equ	0xFF2
  3037                           intcon2	equ	0xFF1
  3038                           intcon3	equ	0xFF0
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postinc1	equ	0xFE6
  3042                           postdec1	equ	0xFE5
  3043                           fsr1h	equ	0xFE2
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           postinc2	equ	0xFDE
  3047                           postdec2	equ	0xFDD
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _resetCommunications *****************
  3053 ;; Defined at:
  3054 ;;		line 152 in file "SlaveComm_PIC18.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  3057 ;;		 -> communications@send_buffer(42), 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3069 ;;      Params:         2       0       0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0
  3071 ;;      Temps:          2       0       0       0       0       0       0
  3072 ;;      Totals:         4       0       0       0       0       0       0
  3073 ;;Total ram usage:        4 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    5
  3076 ;; This function calls:
  3077 ;;		_com_command_setEnergyUsed
  3078 ;;		_com_command_setPower
  3079 ;;		_com_command_setVersion
  3080 ;; This function is called by:
  3081 ;;		_communications
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text17
  3086  0010BE                     __ptext17:
  3087                           	opt stack 0
  3088  0010BE                     _resetCommunications:
  3089                           	opt stack 24
  3090                           
  3091                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  3092                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  3093                           
  3094                           ;incstack = 0
  3095  0010BE  9A6C               	bcf	3948,5,c	;volatile
  3096                           
  3097                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  3098  0010C0  0E06               	movlw	6
  3099  0010C2  6E31               	movwf	??_resetCommunications& (0+255),c
  3100  0010C4  0E30               	movlw	48
  3101  0010C6                     u3177:
  3102  0010C6  2EE8               	decfsz	wreg,f,c
  3103  0010C8  D7FE               	bra	u3177
  3104  0010CA  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  3105  0010CC  D7FC               	bra	u3177
  3106  0010CE  D000               	nop2	
  3107                           
  3108                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  3109  0010D0  8A6C               	bsf	3948,5,c	;volatile
  3110                           
  3111                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  3112  0010D2  9E6C               	bcf	3948,7,c	;volatile
  3113                           
  3114                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  3115  0010D4  0E00               	movlw	0
  3116  0010D6  6E42               	movwf	_SPI_transmit_wait,c
  3117                           
  3118                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  3119  0010D8  EE20 F029          	lfsr	2,41
  3120  0010DC  502F               	movf	resetCommunications@send_buffer,w,c
  3121  0010DE  26D9               	addwf	fsr2l,f,c
  3122  0010E0  5030               	movf	resetCommunications@send_buffer+1,w,c
  3123  0010E2  22DA               	addwfc	fsr2h,f,c
  3124  0010E4  0E00               	movlw	0
  3125  0010E6  6EDF               	movwf	indf2,c
  3126                           
  3127                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  3128  0010E8  EE20 F028          	lfsr	2,40
  3129  0010EC  502F               	movf	resetCommunications@send_buffer,w,c
  3130  0010EE  26D9               	addwf	fsr2l,f,c
  3131  0010F0  5030               	movf	resetCommunications@send_buffer+1,w,c
  3132  0010F2  22DA               	addwfc	fsr2h,f,c
  3133  0010F4  0E00               	movlw	0
  3134  0010F6  6EDF               	movwf	indf2,c
  3135                           
  3136                           ;SlaveComm_PIC18.c: 171: commState++;
  3137  0010F8  0100               	movlb	0	; () banked
  3138  0010FA  4B90               	infsnz	resetCommunications@commState& (0+255),f,b
  3139  0010FC  2B91               	incf	(resetCommunications@commState+1)& (0+255),f,b
  3140                           
  3141                           ;SlaveComm_PIC18.c: 172: switch (commState)
  3142  0010FE  D01A               	goto	l341
  3143  001100                     
  3144                           ; BSR set to: 0
  3145                           ;SlaveComm_PIC18.c: 175: com_command_setVersion(send_buffer);
  3146                           
  3147                           ; BSR set to: 0
  3148  001100  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  3149  001104  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  3150  001108  EC5D  F00C         	call	_com_command_setVersion	;wreg free
  3151                           
  3152                           ;SlaveComm_PIC18.c: 176: break;
  3153  00110C  0012               	return	
  3154  00110E                     
  3155                           ;SlaveComm_PIC18.c: 178: com_command_setPower(send_buffer);
  3156  00110E  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  3157  001112  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  3158  001116  EC92  F00B         	call	_com_command_setPower	;wreg free
  3159                           
  3160                           ;SlaveComm_PIC18.c: 179: break;
  3161  00111A  0012               	return	
  3162  00111C                     
  3163                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed(send_buffer);
  3164  00111C  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  3165  001120  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3166  001124  ECB7  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3167  001128                     
  3168                           ;SlaveComm_PIC18.c: 193: commState = 0;
  3169  001128  0E00               	movlw	0
  3170  00112A  0100               	movlb	0	; () banked
  3171  00112C  6F91               	movwf	(resetCommunications@commState+1)& (0+255),b
  3172  00112E  0E00               	movlw	0
  3173  001130  6F90               	movwf	resetCommunications@commState& (0+255),b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;SlaveComm_PIC18.c: 195: }
  3177                           
  3178                           ;SlaveComm_PIC18.c: 194: break;
  3179  001132  0012               	return	
  3180  001134                     l341:
  3181                           
  3182                           ; BSR set to: 0
  3183                           
  3184                           ; BSR set to: 0
  3185  001134  C090  F031         	movff	resetCommunications@commState,??_resetCommunications
  3186  001138  C091  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  3187                           
  3188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3189                           ; Switch size 1, requested type "space"
  3190                           ; Number of cases is 1, Range of values is 0 to 0
  3191                           ; switch strategies available:
  3192                           ; Name         Instructions Cycles
  3193                           ; simple_byte            4     3 (average)
  3194                           ;	Chosen strategy is simple_byte
  3195  00113C  5032               	movf	??_resetCommunications+1,w,c
  3196  00113E  0A00               	xorlw	0	; case 0
  3197  001140  A4D8               	btfss	status,2,c
  3198  001142  D7F2               	goto	l346
  3199                           
  3200                           ; BSR set to: 0
  3201                           ; Switch size 1, requested type "space"
  3202                           ; Number of cases is 3, Range of values is 1 to 3
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte           10     6 (average)
  3206                           ;	Chosen strategy is simple_byte
  3207  001144  5031               	movf	??_resetCommunications,w,c
  3208  001146  0A01               	xorlw	1	; case 1
  3209  001148  B4D8               	btfsc	status,2,c
  3210  00114A  D7DA               	goto	l342
  3211  00114C  0A03               	xorlw	3	; case 2
  3212  00114E  B4D8               	btfsc	status,2,c
  3213  001150  D7DE               	goto	l344
  3214  001152  0A01               	xorlw	1	; case 3
  3215  001154  B4D8               	btfsc	status,2,c
  3216  001156  D7E2               	goto	l345
  3217  001158  D7E7               	goto	l346
  3218  00115A                     __end_of_resetCommunications:
  3219                           	opt stack 0
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           intcon	equ	0xFF2
  3227                           intcon2	equ	0xFF1
  3228                           intcon3	equ	0xFF0
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           postinc1	equ	0xFE6
  3232                           postdec1	equ	0xFE5
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           postinc2	equ	0xFDE
  3237                           postdec2	equ	0xFDD
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _com_command_setVersion *****************
  3243 ;; Defined at:
  3244 ;;		line 663 in file "SlaveComm_PIC18.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  3247 ;;		 -> communications@send_buffer(42), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3259 ;;      Params:         2       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0
  3262 ;;      Totals:         2       0       0       0       0       0       0
  3263 ;;Total ram usage:        2 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    4
  3266 ;; This function calls:
  3267 ;;		_command_builder3
  3268 ;; This function is called by:
  3269 ;;		_resetCommunications
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text18
  3274  0018BA                     __ptext18:
  3275                           	opt stack 0
  3276  0018BA                     _com_command_setVersion:
  3277                           	opt stack 24
  3278                           
  3279                           ;SlaveComm_PIC18.c: 665: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3280                           
  3281                           ;incstack = 0
  3282  0018BA  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3283  0018BE  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3284  0018C2  0E57               	movlw	low STR_2
  3285  0018C4  6E21               	movwf	command_builder3@data1,c
  3286  0018C6  0E06               	movlw	high STR_2
  3287  0018C8  6E22               	movwf	command_builder3@data1+1,c
  3288  0018CA  0E0D               	movlw	low STR_22
  3289  0018CC  6E23               	movwf	command_builder3@data2,c
  3290  0018CE  0E06               	movlw	high STR_22
  3291  0018D0  6E24               	movwf	command_builder3@data2+1,c
  3292  0018D2  0E4B               	movlw	low STR_40
  3293  0018D4  6E25               	movwf	command_builder3@data3,c
  3294  0018D6  0E06               	movlw	high STR_40
  3295  0018D8  6E26               	movwf	command_builder3@data3+1,c
  3296  0018DA  EC10  F008         	call	_command_builder3	;wreg free
  3297  0018DE  0012               	return		;funcret
  3298  0018E0                     __end_of_com_command_setVersion:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           intcon2	equ	0xFF1
  3308                           intcon3	equ	0xFF0
  3309                           postinc0	equ	0xFEE
  3310                           wreg	equ	0xFE8
  3311                           postinc1	equ	0xFE6
  3312                           postdec1	equ	0xFE5
  3313                           fsr1h	equ	0xFE2
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           fsr2h	equ	0xFDA
  3319                           fsr2l	equ	0xFD9
  3320                           status	equ	0xFD8
  3321                           
  3322 ;; *************** function _com_command_setPower *****************
  3323 ;; Defined at:
  3324 ;;		line 618 in file "SlaveComm_PIC18.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3327 ;;		 -> communications@send_buffer(42), 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  temp           12    0[BANK0 ] unsigned char [12]
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3339 ;;      Params:         2       0       0       0       0       0       0
  3340 ;;      Locals:         0      12       0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0
  3342 ;;      Totals:         2      12       0       0       0       0       0
  3343 ;;Total ram usage:       14 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    4
  3346 ;; This function calls:
  3347 ;;		_command_builder3
  3348 ;;		_ultoa
  3349 ;; This function is called by:
  3350 ;;		_resetCommunications
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text19
  3355  001724                     __ptext19:
  3356                           	opt stack 0
  3357  001724                     _com_command_setPower:
  3358                           	opt stack 24
  3359                           
  3360                           ;SlaveComm_PIC18.c: 621: char temp[12];
  3361                           ;SlaveComm_PIC18.c: 623: ultoa(temp, meterWatts, 10);
  3362                           
  3363                           ;incstack = 0
  3364  001724  0EBE               	movlw	low com_command_setPower@temp
  3365  001726  6E20               	movwf	ultoa@buf,c
  3366  001728  0E00               	movlw	high com_command_setPower@temp
  3367  00172A  6E21               	movwf	ultoa@buf+1,c
  3368  00172C  C08C  F022         	movff	_meterWatts,ultoa@val
  3369  001730  C08D  F023         	movff	_meterWatts+1,ultoa@val+1
  3370  001734  C08E  F024         	movff	_meterWatts+2,ultoa@val+2
  3371  001738  C08F  F025         	movff	_meterWatts+3,ultoa@val+3
  3372  00173C  0E00               	movlw	0
  3373  00173E  6E27               	movwf	ultoa@base+1,c
  3374  001740  0E0A               	movlw	10
  3375  001742  6E26               	movwf	ultoa@base,c
  3376  001744  EC57  F006         	call	_ultoa	;wreg free
  3377                           
  3378                           ;SlaveComm_PIC18.c: 624: command_builder3(send_buffer, "Set", "Watts", temp);
  3379  001748  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3380  00174C  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3381  001750  0E57               	movlw	low STR_2
  3382  001752  6E21               	movwf	command_builder3@data1,c
  3383  001754  0E06               	movlw	high STR_2
  3384  001756  6E22               	movwf	command_builder3@data1+1,c
  3385  001758  0E24               	movlw	low STR_18
  3386  00175A  6E23               	movwf	command_builder3@data2,c
  3387  00175C  0E06               	movlw	high STR_18
  3388  00175E  6E24               	movwf	command_builder3@data2+1,c
  3389  001760  0EBE               	movlw	low com_command_setPower@temp
  3390  001762  6E25               	movwf	command_builder3@data3,c
  3391  001764  0E00               	movlw	high com_command_setPower@temp
  3392  001766  6E26               	movwf	command_builder3@data3+1,c
  3393  001768  EC10  F008         	call	_command_builder3	;wreg free
  3394  00176C  0012               	return	
  3395  00176E                     __end_of_com_command_setPower:
  3396                           	opt stack 0
  3397                           tblptru	equ	0xFF8
  3398                           tblptrh	equ	0xFF7
  3399                           tblptrl	equ	0xFF6
  3400                           tablat	equ	0xFF5
  3401                           prodh	equ	0xFF4
  3402                           prodl	equ	0xFF3
  3403                           intcon	equ	0xFF2
  3404                           intcon2	equ	0xFF1
  3405                           intcon3	equ	0xFF0
  3406                           postinc0	equ	0xFEE
  3407                           wreg	equ	0xFE8
  3408                           postinc1	equ	0xFE6
  3409                           postdec1	equ	0xFE5
  3410                           fsr1h	equ	0xFE2
  3411                           fsr1l	equ	0xFE1
  3412                           indf2	equ	0xFDF
  3413                           postinc2	equ	0xFDE
  3414                           postdec2	equ	0xFDD
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _receive_data *****************
  3420 ;; Defined at:
  3421 ;;		line 199 in file "SlaveComm_PIC18.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3424 ;;		 -> communications@receive_buffer(42), 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  data            1   24[COMRAM] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      enum E6751
  3429 ;; Registers used:
  3430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3436 ;;      Params:         2       0       0       0       0       0       0
  3437 ;;      Locals:         1       0       0       0       0       0       0
  3438 ;;      Temps:          1       0       0       0       0       0       0
  3439 ;;      Totals:         4       0       0       0       0       0       0
  3440 ;;Total ram usage:        4 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    2
  3443 ;; This function calls:
  3444 ;;		_SPI_receive_data
  3445 ;; This function is called by:
  3446 ;;		_communications
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text20
  3451  000F60                     __ptext20:
  3452                           	opt stack 0
  3453  000F60                     _receive_data:
  3454                           	opt stack 27
  3455                           
  3456                           ;SlaveComm_PIC18.c: 201: char data;
  3457                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  3458                           ;SlaveComm_PIC18.c: 205: if (my_status == receive_end_command)
  3459                           
  3460                           ;incstack = 0
  3461  000F60  0E02               	movlw	2
  3462  000F62  183E               	xorwf	receive_data@my_status,w,c
  3463  000F64  A4D8               	btfss	status,2,c
  3464  000F66  D002               	goto	l352
  3465                           
  3466                           ;SlaveComm_PIC18.c: 206: {
  3467                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  3468  000F68  0E00               	movlw	0
  3469  000F6A  6E3E               	movwf	receive_data@my_status,c
  3470  000F6C                     l352:
  3471                           
  3472                           ;SlaveComm_PIC18.c: 208: }
  3473                           ;SlaveComm_PIC18.c: 210: if (SPI_receive_data(&data) == 1)
  3474  000F6C  0E19               	movlw	low receive_data@data
  3475  000F6E  6E13               	movwf	SPI_receive_data@data,c
  3476  000F70  0E00               	movlw	high receive_data@data
  3477  000F72  6E14               	movwf	SPI_receive_data@data+1,c
  3478  000F74  EC49  F00C         	call	_SPI_receive_data	;wreg free
  3479  000F78  06E8               	decf	wreg,f,c
  3480  000F7A  A4D8               	btfss	status,2,c
  3481  000F7C  D04F               	goto	l357
  3482                           
  3483                           ;SlaveComm_PIC18.c: 211: {
  3484                           ;SlaveComm_PIC18.c: 212: if ((data == '!') && (my_status != receive_in_command))
  3485  000F7E  0E21               	movlw	33
  3486  000F80  1819               	xorwf	receive_data@data,w,c
  3487  000F82  A4D8               	btfss	status,2,c
  3488  000F84  D015               	goto	l354
  3489  000F86  043E               	decf	receive_data@my_status,w,c
  3490  000F88  B4D8               	btfsc	status,2,c
  3491  000F8A  D012               	goto	l354
  3492                           
  3493                           ;SlaveComm_PIC18.c: 213: {
  3494                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  3495  000F8C  0E01               	movlw	1
  3496  000F8E  6E3E               	movwf	receive_data@my_status,c
  3497                           
  3498                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  3499  000F90  EE20 F029          	lfsr	2,41
  3500  000F94  5016               	movf	receive_data@receive_buffer,w,c
  3501  000F96  26D9               	addwf	fsr2l,f,c
  3502  000F98  5017               	movf	receive_data@receive_buffer+1,w,c
  3503  000F9A  22DA               	addwfc	fsr2h,f,c
  3504  000F9C  0E00               	movlw	0
  3505  000F9E  6EDF               	movwf	indf2,c
  3506                           
  3507                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  3508  000FA0  EE20 F028          	lfsr	2,40
  3509  000FA4  5016               	movf	receive_data@receive_buffer,w,c
  3510  000FA6  26D9               	addwf	fsr2l,f,c
  3511  000FA8  5017               	movf	receive_data@receive_buffer+1,w,c
  3512  000FAA  22DA               	addwfc	fsr2h,f,c
  3513  000FAC  0E00               	movlw	0
  3514  000FAE  6EDF               	movwf	indf2,c
  3515  000FB0                     l354:
  3516                           
  3517                           ;SlaveComm_PIC18.c: 217: }
  3518                           ;SlaveComm_PIC18.c: 219: if (my_status == receive_in_command)
  3519  000FB0  043E               	decf	receive_data@my_status,w,c
  3520  000FB2  A4D8               	btfss	status,2,c
  3521  000FB4  D02A               	goto	l356
  3522                           
  3523                           ;SlaveComm_PIC18.c: 220: {
  3524                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3525  000FB6  EE20 F028          	lfsr	2,40
  3526  000FBA  5016               	movf	receive_data@receive_buffer,w,c
  3527  000FBC  26D9               	addwf	fsr2l,f,c
  3528  000FBE  5017               	movf	receive_data@receive_buffer+1,w,c
  3529  000FC0  22DA               	addwfc	fsr2h,f,c
  3530  000FC2  50DF               	movf	indf2,w,c
  3531  000FC4  6E18               	movwf	??_receive_data& (0+255),c
  3532  000FC6  5018               	movf	??_receive_data,w,c
  3533  000FC8  0D01               	mullw	1
  3534  000FCA  50F3               	movf	prodl,w,c
  3535  000FCC  2416               	addwf	receive_data@receive_buffer,w,c
  3536  000FCE  6ED9               	movwf	fsr2l,c
  3537  000FD0  50F4               	movf	prodh,w,c
  3538  000FD2  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3539  000FD4  6EDA               	movwf	fsr2h,c
  3540  000FD6  C019  FFDF         	movff	receive_data@data,indf2
  3541                           
  3542                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  3543  000FDA  EE20 F028          	lfsr	2,40
  3544  000FDE  5016               	movf	receive_data@receive_buffer,w,c
  3545  000FE0  26D9               	addwf	fsr2l,f,c
  3546  000FE2  5017               	movf	receive_data@receive_buffer+1,w,c
  3547  000FE4  22DA               	addwfc	fsr2h,f,c
  3548  000FE6  2ADF               	incf	indf2,f,c
  3549                           
  3550                           ;SlaveComm_PIC18.c: 224: if (receive_buffer->write_position >= 40)
  3551  000FE8  EE20 F028          	lfsr	2,40
  3552  000FEC  5016               	movf	receive_data@receive_buffer,w,c
  3553  000FEE  26D9               	addwf	fsr2l,f,c
  3554  000FF0  5017               	movf	receive_data@receive_buffer+1,w,c
  3555  000FF2  22DA               	addwfc	fsr2h,f,c
  3556  000FF4  0E27               	movlw	39
  3557  000FF6  64DF               	cpfsgt	indf2,c
  3558  000FF8  D008               	goto	l356
  3559                           
  3560                           ;SlaveComm_PIC18.c: 225: {
  3561                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = (40 - 1);
  3562  000FFA  EE20 F028          	lfsr	2,40
  3563  000FFE  5016               	movf	receive_data@receive_buffer,w,c
  3564  001000  26D9               	addwf	fsr2l,f,c
  3565  001002  5017               	movf	receive_data@receive_buffer+1,w,c
  3566  001004  22DA               	addwfc	fsr2h,f,c
  3567  001006  0E27               	movlw	39
  3568  001008  6EDF               	movwf	indf2,c
  3569  00100A                     l356:
  3570                           
  3571                           ;SlaveComm_PIC18.c: 227: }
  3572                           ;SlaveComm_PIC18.c: 228: }
  3573                           ;SlaveComm_PIC18.c: 230: if ((my_status == receive_in_command) && (data == '*'))
  3574  00100A  043E               	decf	receive_data@my_status,w,c
  3575  00100C  A4D8               	btfss	status,2,c
  3576  00100E  D006               	goto	l357
  3577  001010  0E2A               	movlw	42
  3578  001012  1819               	xorwf	receive_data@data,w,c
  3579  001014  A4D8               	btfss	status,2,c
  3580  001016  D002               	goto	l357
  3581                           
  3582                           ;SlaveComm_PIC18.c: 231: {
  3583                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3584  001018  0E02               	movlw	2
  3585  00101A  6E3E               	movwf	receive_data@my_status,c
  3586  00101C                     l357:
  3587                           
  3588                           ;SlaveComm_PIC18.c: 233: }
  3589                           ;SlaveComm_PIC18.c: 234: }
  3590                           ;SlaveComm_PIC18.c: 236: return my_status;
  3591  00101C  503E               	movf	receive_data@my_status,w,c
  3592  00101E  0012               	return	
  3593  001020                     __end_of_receive_data:
  3594                           	opt stack 0
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           intcon	equ	0xFF2
  3602                           intcon2	equ	0xFF1
  3603                           intcon3	equ	0xFF0
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           postinc1	equ	0xFE6
  3607                           postdec1	equ	0xFE5
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _SPI_receive_data *****************
  3618 ;; Defined at:
  3619 ;;		line 562 in file "SlaveComm_PIC18.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  data            2   18[COMRAM] PTR unsigned char 
  3622 ;;		 -> receive_data@data(1), 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  recvGood        1   20[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3634 ;;      Params:         2       0       0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0
  3637 ;;      Totals:         3       0       0       0       0       0       0
  3638 ;;Total ram usage:        3 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_receive_data
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text21
  3649  001892                     __ptext21:
  3650                           	opt stack 0
  3651  001892                     _SPI_receive_data:
  3652                           	opt stack 27
  3653                           
  3654                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3655                           
  3656                           ;incstack = 0
  3657  001892  0E00               	movlw	0
  3658  001894  6E15               	movwf	SPI_receive_data@recvGood,c
  3659                           
  3660                           ;SlaveComm_PIC18.c: 567: if (SSP2STATbits.BF == 1)
  3661  001896  A06D               	btfss	3949,0,c	;volatile
  3662  001898  D00C               	goto	l459
  3663                           
  3664                           ;SlaveComm_PIC18.c: 568: {
  3665                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3666  00189A  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3667  00189E  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3668  0018A2  CF6F FFDF          	movff	3951,indf2	;volatile
  3669                           
  3670                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3671  0018A6  0E01               	movlw	1
  3672  0018A8  6E15               	movwf	SPI_receive_data@recvGood,c
  3673                           
  3674                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3675  0018AA  9E6C               	bcf	3948,7,c	;volatile
  3676                           
  3677                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3678  0018AC  0E00               	movlw	0
  3679  0018AE  6E42               	movwf	_SPI_transmit_wait,c
  3680                           
  3681                           ;SlaveComm_PIC18.c: 573: }
  3682  0018B0  D002               	goto	l460
  3683  0018B2                     l459:
  3684                           
  3685                           ;SlaveComm_PIC18.c: 574: else
  3686                           ;SlaveComm_PIC18.c: 575: {
  3687                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3688  0018B2  0E00               	movlw	0
  3689  0018B4  6E15               	movwf	SPI_receive_data@recvGood,c
  3690  0018B6                     l460:
  3691                           
  3692                           ;SlaveComm_PIC18.c: 577: }
  3693                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3694  0018B6  5015               	movf	SPI_receive_data@recvGood,w,c
  3695  0018B8  0012               	return	
  3696  0018BA                     __end_of_SPI_receive_data:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           intcon2	equ	0xFF1
  3706                           intcon3	equ	0xFF0
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postinc1	equ	0xFE6
  3710                           postdec1	equ	0xFE5
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _process_data *****************
  3721 ;; Defined at:
  3722 ;;		line 239 in file "SlaveComm_PIC18.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  receive_buff    2   51[COMRAM] PTR struct buffer
  3725 ;;		 -> communications@receive_buffer(42), 
  3726 ;;  send_buffer     2   53[COMRAM] PTR struct buffer
  3727 ;;		 -> communications@send_buffer(42), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  3730 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      unsigned char 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         4       0       0       0       0       0       0
  3741 ;;      Locals:         0       0      51       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         4       0      51       0       0       0       0
  3744 ;;Total ram usage:       55 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    6
  3747 ;; This function calls:
  3748 ;;		_process_data_parameterize
  3749 ;;		_process_data_parameters
  3750 ;; This function is called by:
  3751 ;;		_communications
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text22
  3756  001832                     __ptext22:
  3757                           	opt stack 0
  3758  001832                     _process_data:
  3759                           	opt stack 23
  3760                           
  3761                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3762                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3763                           ;SlaveComm_PIC18.c: 248: process_data_parameterize(parameters, receive_buffer);
  3764                           
  3765                           ;incstack = 0
  3766  001832  0E00               	movlw	low process_data@parameters
  3767  001834  6E19               	movwf	process_data_parameterize@parameters,c
  3768  001836  0E01               	movlw	high process_data@parameters
  3769  001838  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3770  00183A  C034  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3771  00183E  C035  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3772  001842  EC83  F004         	call	_process_data_parameterize	;wreg free
  3773                           
  3774                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3775  001846  0E00               	movlw	low process_data@parameters
  3776  001848  6E2F               	movwf	process_data_parameters@parameters,c
  3777  00184A  0E01               	movlw	high process_data@parameters
  3778  00184C  6E30               	movwf	process_data_parameters@parameters+1,c
  3779  00184E  C036  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3780  001852  C037  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3781  001856  EC30  F003         	call	_process_data_parameters	;wreg free
  3782  00185A  0101               	movlb	1	; () banked
  3783  00185C  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3787  00185E  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3788  001860  0012               	return	
  3789  001862                     __end_of_process_data:
  3790                           	opt stack 0
  3791                           tblptru	equ	0xFF8
  3792                           tblptrh	equ	0xFF7
  3793                           tblptrl	equ	0xFF6
  3794                           tablat	equ	0xFF5
  3795                           prodh	equ	0xFF4
  3796                           prodl	equ	0xFF3
  3797                           intcon	equ	0xFF2
  3798                           intcon2	equ	0xFF1
  3799                           intcon3	equ	0xFF0
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           postinc1	equ	0xFE6
  3803                           postdec1	equ	0xFE5
  3804                           fsr1h	equ	0xFE2
  3805                           fsr1l	equ	0xFE1
  3806                           indf2	equ	0xFDF
  3807                           postinc2	equ	0xFDE
  3808                           postdec2	equ	0xFDD
  3809                           fsr2h	equ	0xFDA
  3810                           fsr2l	equ	0xFD9
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _process_data_parameters *****************
  3814 ;; Defined at:
  3815 ;;		line 315 in file "SlaveComm_PIC18.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  3818 ;;		 -> process_data@parameters(50), 
  3819 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  3820 ;;		 -> communications@send_buffer(42), 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      unsigned char 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3832 ;;      Params:         4       0       0       0       0       0       0
  3833 ;;      Locals:         1       0       0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0
  3835 ;;      Totals:         5       0       0       0       0       0       0
  3836 ;;Total ram usage:        5 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    5
  3839 ;; This function calls:
  3840 ;;		_atol
  3841 ;;		_com_command_setEnergyUsed
  3842 ;;		_command_builder3
  3843 ;;		_send_end_of_transmission
  3844 ;;		_strmatch
  3845 ;; This function is called by:
  3846 ;;		_process_data
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text23
  3851  000660                     __ptext23:
  3852                           	opt stack 0
  3853  000660                     _process_data_parameters:
  3854                           	opt stack 23
  3855                           
  3856                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;incstack = 0
  3860  000660  0E00               	movlw	0
  3861  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3862                           
  3863                           ;SlaveComm_PIC18.c: 320: if (strmatch(parameters[0], "END") == 1)
  3864  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3865  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3866  00066C  0E4F               	movlw	low STR_1
  3867  00066E  6E20               	movwf	strmatch@b,c
  3868  000670  0E06               	movlw	high STR_1
  3869  000672  6E21               	movwf	strmatch@b+1,c
  3870  000674  EC31  F00C         	call	_strmatch	;wreg free
  3871  000678  06E8               	decf	wreg,f,c
  3872  00067A  A4D8               	btfss	status,2,c
  3873  00067C  D003               	goto	l381
  3874                           
  3875                           ;SlaveComm_PIC18.c: 321: {
  3876                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3877  00067E  0E01               	movlw	1
  3878  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  3879                           
  3880                           ;SlaveComm_PIC18.c: 332: }
  3881  000682  D13F               	goto	l407
  3882  000684                     l381:
  3883                           
  3884                           ;SlaveComm_PIC18.c: 333: else if (strmatch(parameters[0], "Set") == 1)
  3885  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3886  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3887  00068C  0E57               	movlw	low STR_2
  3888  00068E  6E20               	movwf	strmatch@b,c
  3889  000690  0E06               	movlw	high STR_2
  3890  000692  6E21               	movwf	strmatch@b+1,c
  3891  000694  EC31  F00C         	call	_strmatch	;wreg free
  3892  000698  06E8               	decf	wreg,f,c
  3893  00069A  A4D8               	btfss	status,2,c
  3894  00069C  D035               	goto	l383
  3895                           
  3896                           ;SlaveComm_PIC18.c: 334: {
  3897                           ;SlaveComm_PIC18.c: 335: if (strmatch(parameters[1], "Calibration") == 1)
  3898  00069E  0E0A               	movlw	10
  3899  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3900  0006A2  6E1E               	movwf	strmatch@a,c
  3901  0006A4  0E00               	movlw	0
  3902  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3903  0006A8  6E1F               	movwf	strmatch@a+1,c
  3904  0006AA  0E01               	movlw	low STR_3
  3905  0006AC  6E20               	movwf	strmatch@b,c
  3906  0006AE  0E06               	movlw	high STR_3
  3907  0006B0  6E21               	movwf	strmatch@b+1,c
  3908  0006B2  EC31  F00C         	call	_strmatch	;wreg free
  3909  0006B6  06E8               	decf	wreg,f,c
  3910  0006B8  B4D8               	btfsc	status,2,c
  3911  0006BA  D123               	goto	l407
  3912                           
  3913                           ;SlaveComm_PIC18.c: 339: else if (strmatch(parameters[1], "EnUsed") == 1)
  3914                           
  3915                           ;SlaveComm_PIC18.c: 336: {
  3916                           ;SlaveComm_PIC18.c: 338: }
  3917  0006BC  0E0A               	movlw	10
  3918  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3919  0006C0  6E1E               	movwf	strmatch@a,c
  3920  0006C2  0E00               	movlw	0
  3921  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3922  0006C6  6E1F               	movwf	strmatch@a+1,c
  3923  0006C8  0E17               	movlw	low STR_4
  3924  0006CA  6E20               	movwf	strmatch@b,c
  3925  0006CC  0E06               	movlw	high STR_4
  3926  0006CE  6E21               	movwf	strmatch@b+1,c
  3927  0006D0  EC31  F00C         	call	_strmatch	;wreg free
  3928  0006D4  06E8               	decf	wreg,f,c
  3929  0006D6  A4D8               	btfss	status,2,c
  3930  0006D8  D114               	goto	l407
  3931                           
  3932                           ;SlaveComm_PIC18.c: 340: {
  3933                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol(parameters[2]);
  3934  0006DA  0E14               	movlw	20
  3935  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3936  0006DE  6E1F               	movwf	atol@s,c
  3937  0006E0  0E00               	movlw	0
  3938  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3939  0006E4  6E20               	movwf	atol@s+1,c
  3940  0006E6  ECD2  F006         	call	_atol	;wreg free
  3941  0006EA  C01F  F088         	movff	?_atol,_meterEnergyUsed
  3942  0006EE  C020  F089         	movff	?_atol+1,_meterEnergyUsed+1
  3943  0006F2  C021  F08A         	movff	?_atol+2,_meterEnergyUsed+2
  3944  0006F6  C022  F08B         	movff	?_atol+3,_meterEnergyUsed+3
  3945                           
  3946                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed(send_buffer);
  3947  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3948  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3949  000702  ECB7  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3950                           
  3951                           ;SlaveComm_PIC18.c: 347: }
  3952                           ;SlaveComm_PIC18.c: 352: }
  3953  000706  D0FD               	goto	l407
  3954  000708                     l383:
  3955                           
  3956                           ;SlaveComm_PIC18.c: 353: else if (strmatch(parameters[0], "Read") == 1)
  3957  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3958  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3959  000710  0E34               	movlw	low STR_5
  3960  000712  6E20               	movwf	strmatch@b,c
  3961  000714  0E06               	movlw	high STR_5
  3962  000716  6E21               	movwf	strmatch@b+1,c
  3963  000718  EC31  F00C         	call	_strmatch	;wreg free
  3964  00071C  06E8               	decf	wreg,f,c
  3965  00071E  B4D8               	btfsc	status,2,c
  3966  000720  D0F0               	goto	l407
  3967                           
  3968                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Data") == 1)
  3969                           
  3970                           ;SlaveComm_PIC18.c: 354: {
  3971                           ;SlaveComm_PIC18.c: 356: }
  3972  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3973  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3974  00072A  0E2F               	movlw	low STR_6
  3975  00072C  6E20               	movwf	strmatch@b,c
  3976  00072E  0E06               	movlw	high STR_6
  3977  000730  6E21               	movwf	strmatch@b+1,c
  3978  000732  EC31  F00C         	call	_strmatch	;wreg free
  3979  000736  06E8               	decf	wreg,f,c
  3980  000738  A4D8               	btfss	status,2,c
  3981  00073A  D053               	goto	l390
  3982                           
  3983                           ;SlaveComm_PIC18.c: 358: {
  3984                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "LEDB") == 1)
  3985  00073C  0E0A               	movlw	10
  3986  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  3987  000740  6E1E               	movwf	strmatch@a,c
  3988  000742  0E00               	movlw	0
  3989  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3990  000746  6E1F               	movwf	strmatch@a+1,c
  3991  000748  0E2A               	movlw	low STR_7
  3992  00074A  6E20               	movwf	strmatch@b,c
  3993  00074C  0E06               	movlw	high STR_7
  3994  00074E  6E21               	movwf	strmatch@b+1,c
  3995  000750  EC31  F00C         	call	_strmatch	;wreg free
  3996  000754  06E8               	decf	wreg,f,c
  3997  000756  A4D8               	btfss	status,2,c
  3998  000758  D0D4               	goto	l407
  3999                           
  4000                           ;SlaveComm_PIC18.c: 360: {
  4001                           ;SlaveComm_PIC18.c: 361: if (strmatch(parameters[2], "On") == 1)
  4002  00075A  0E14               	movlw	20
  4003  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  4004  00075E  6E1E               	movwf	strmatch@a,c
  4005  000760  0E00               	movlw	0
  4006  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4007  000764  6E1F               	movwf	strmatch@a+1,c
  4008  000766  0E5B               	movlw	low STR_8
  4009  000768  6E20               	movwf	strmatch@b,c
  4010  00076A  0E06               	movlw	high STR_8
  4011  00076C  6E21               	movwf	strmatch@b+1,c
  4012  00076E  EC31  F00C         	call	_strmatch	;wreg free
  4013  000772  06E8               	decf	wreg,f,c
  4014  000774  A4D8               	btfss	status,2,c
  4015  000776  D013               	goto	l392
  4016                           
  4017                           ;SlaveComm_PIC18.c: 362: {
  4018                           ;SlaveComm_PIC18.c: 363: command_builder3(send_buffer, "Set", "LEDB", "Off");
  4019  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4020  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4021  000780  0E57               	movlw	low STR_2
  4022  000782  6E21               	movwf	command_builder3@data1,c
  4023  000784  0E06               	movlw	high STR_2
  4024  000786  6E22               	movwf	command_builder3@data1+1,c
  4025  000788  0E2A               	movlw	low STR_7
  4026  00078A  6E23               	movwf	command_builder3@data2,c
  4027  00078C  0E06               	movlw	high STR_7
  4028  00078E  6E24               	movwf	command_builder3@data2+1,c
  4029  000790  0E53               	movlw	low STR_11
  4030  000792  6E25               	movwf	command_builder3@data3,c
  4031  000794  0E06               	movlw	high STR_11
  4032  000796  6E26               	movwf	command_builder3@data3+1,c
  4033  000798  EC10  F008         	call	_command_builder3	;wreg free
  4034                           
  4035                           ;SlaveComm_PIC18.c: 364: }
  4036  00079C  D0B2               	goto	l407
  4037  00079E                     l392:
  4038                           
  4039                           ;SlaveComm_PIC18.c: 365: else if (strmatch(parameters[2], "Off") == 1)
  4040  00079E  0E14               	movlw	20
  4041  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  4042  0007A2  6E1E               	movwf	strmatch@a,c
  4043  0007A4  0E00               	movlw	0
  4044  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4045  0007A8  6E1F               	movwf	strmatch@a+1,c
  4046  0007AA  0E53               	movlw	low STR_11
  4047  0007AC  6E20               	movwf	strmatch@b,c
  4048  0007AE  0E06               	movlw	high STR_11
  4049  0007B0  6E21               	movwf	strmatch@b+1,c
  4050  0007B2  EC31  F00C         	call	_strmatch	;wreg free
  4051  0007B6  06E8               	decf	wreg,f,c
  4052  0007B8  A4D8               	btfss	status,2,c
  4053  0007BA  D0A3               	goto	l407
  4054                           
  4055                           ;SlaveComm_PIC18.c: 366: {
  4056                           ;SlaveComm_PIC18.c: 367: command_builder3(send_buffer, "Set", "LEDB", "On");
  4057  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4058  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4059  0007C4  0E57               	movlw	low STR_2
  4060  0007C6  6E21               	movwf	command_builder3@data1,c
  4061  0007C8  0E06               	movlw	high STR_2
  4062  0007CA  6E22               	movwf	command_builder3@data1+1,c
  4063  0007CC  0E2A               	movlw	low STR_7
  4064  0007CE  6E23               	movwf	command_builder3@data2,c
  4065  0007D0  0E06               	movlw	high STR_7
  4066  0007D2  6E24               	movwf	command_builder3@data2+1,c
  4067  0007D4  0E5B               	movlw	low STR_8
  4068  0007D6  6E25               	movwf	command_builder3@data3,c
  4069  0007D8  0E06               	movlw	high STR_8
  4070  0007DA  6E26               	movwf	command_builder3@data3+1,c
  4071  0007DC  EC10  F008         	call	_command_builder3	;wreg free
  4072                           
  4073                           ;SlaveComm_PIC18.c: 368: }
  4074                           ;SlaveComm_PIC18.c: 369: }
  4075                           ;SlaveComm_PIC18.c: 370: }
  4076  0007E0  D090               	goto	l407
  4077  0007E2                     l390:
  4078                           
  4079                           ;SlaveComm_PIC18.c: 371: else if (strmatch(parameters[0], "Conf") == 1)
  4080  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4081  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4082  0007EA  0E39               	movlw	low STR_16
  4083  0007EC  6E20               	movwf	strmatch@b,c
  4084  0007EE  0E06               	movlw	high STR_16
  4085  0007F0  6E21               	movwf	strmatch@b+1,c
  4086  0007F2  EC31  F00C         	call	_strmatch	;wreg free
  4087  0007F6  06E8               	decf	wreg,f,c
  4088  0007F8  A4D8               	btfss	status,2,c
  4089  0007FA  D083               	goto	l407
  4090                           
  4091                           ;SlaveComm_PIC18.c: 372: {
  4092                           ;SlaveComm_PIC18.c: 373: if (strmatch(parameters[1], "LEDB") == 1)
  4093  0007FC  0E0A               	movlw	10
  4094  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  4095  000800  6E1E               	movwf	strmatch@a,c
  4096  000802  0E00               	movlw	0
  4097  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4098  000806  6E1F               	movwf	strmatch@a+1,c
  4099  000808  0E2A               	movlw	low STR_7
  4100  00080A  6E20               	movwf	strmatch@b,c
  4101  00080C  0E06               	movlw	high STR_7
  4102  00080E  6E21               	movwf	strmatch@b+1,c
  4103  000810  EC31  F00C         	call	_strmatch	;wreg free
  4104  000814  06E8               	decf	wreg,f,c
  4105  000816  A4D8               	btfss	status,2,c
  4106  000818  D007               	goto	l397
  4107                           
  4108                           ;SlaveComm_PIC18.c: 374: {
  4109                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission(send_buffer);
  4110  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4111  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4112  000822  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4113                           
  4114                           ;SlaveComm_PIC18.c: 376: }
  4115  000826  D06D               	goto	l407
  4116  000828                     l397:
  4117                           
  4118                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[1], "Watts") == 1)
  4119  000828  0E0A               	movlw	10
  4120  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  4121  00082C  6E1E               	movwf	strmatch@a,c
  4122  00082E  0E00               	movlw	0
  4123  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4124  000832  6E1F               	movwf	strmatch@a+1,c
  4125  000834  0E24               	movlw	low STR_18
  4126  000836  6E20               	movwf	strmatch@b,c
  4127  000838  0E06               	movlw	high STR_18
  4128  00083A  6E21               	movwf	strmatch@b+1,c
  4129  00083C  EC31  F00C         	call	_strmatch	;wreg free
  4130  000840  06E8               	decf	wreg,f,c
  4131  000842  A4D8               	btfss	status,2,c
  4132  000844  D007               	goto	l399
  4133                           
  4134                           ;SlaveComm_PIC18.c: 378: {
  4135                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission(send_buffer);
  4136  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4137  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4138  00084E  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4139                           
  4140                           ;SlaveComm_PIC18.c: 380: }
  4141  000852  D057               	goto	l407
  4142  000854                     l399:
  4143                           
  4144                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[1], "EnUsed") == 1)
  4145  000854  0E0A               	movlw	10
  4146  000856  242F               	addwf	process_data_parameters@parameters,w,c
  4147  000858  6E1E               	movwf	strmatch@a,c
  4148  00085A  0E00               	movlw	0
  4149  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4150  00085E  6E1F               	movwf	strmatch@a+1,c
  4151  000860  0E17               	movlw	low STR_4
  4152  000862  6E20               	movwf	strmatch@b,c
  4153  000864  0E06               	movlw	high STR_4
  4154  000866  6E21               	movwf	strmatch@b+1,c
  4155  000868  EC31  F00C         	call	_strmatch	;wreg free
  4156  00086C  06E8               	decf	wreg,f,c
  4157  00086E  A4D8               	btfss	status,2,c
  4158  000870  D007               	goto	l401
  4159                           
  4160                           ;SlaveComm_PIC18.c: 382: {
  4161                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission(send_buffer);
  4162  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4163  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4164  00087A  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4165                           
  4166                           ;SlaveComm_PIC18.c: 384: }
  4167  00087E  D041               	goto	l407
  4168  000880                     l401:
  4169                           
  4170                           ;SlaveComm_PIC18.c: 385: else if (strmatch(parameters[1], "Volts") == 1)
  4171  000880  0E0A               	movlw	10
  4172  000882  242F               	addwf	process_data_parameters@parameters,w,c
  4173  000884  6E1E               	movwf	strmatch@a,c
  4174  000886  0E00               	movlw	0
  4175  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4176  00088A  6E1F               	movwf	strmatch@a+1,c
  4177  00088C  0E1E               	movlw	low STR_20
  4178  00088E  6E20               	movwf	strmatch@b,c
  4179  000890  0E06               	movlw	high STR_20
  4180  000892  6E21               	movwf	strmatch@b+1,c
  4181  000894  EC31  F00C         	call	_strmatch	;wreg free
  4182  000898  06E8               	decf	wreg,f,c
  4183  00089A  A4D8               	btfss	status,2,c
  4184  00089C  D007               	goto	l403
  4185                           
  4186                           ;SlaveComm_PIC18.c: 386: {
  4187                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission(send_buffer);
  4188  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4189  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4190  0008A6  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4191                           
  4192                           ;SlaveComm_PIC18.c: 388: }
  4193  0008AA  D02B               	goto	l407
  4194  0008AC                     l403:
  4195                           
  4196                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[1], "Amps") == 1)
  4197  0008AC  0E0A               	movlw	10
  4198  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  4199  0008B0  6E1E               	movwf	strmatch@a,c
  4200  0008B2  0E00               	movlw	0
  4201  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4202  0008B6  6E1F               	movwf	strmatch@a+1,c
  4203  0008B8  0E3E               	movlw	low STR_21
  4204  0008BA  6E20               	movwf	strmatch@b,c
  4205  0008BC  0E06               	movlw	high STR_21
  4206  0008BE  6E21               	movwf	strmatch@b+1,c
  4207  0008C0  EC31  F00C         	call	_strmatch	;wreg free
  4208  0008C4  06E8               	decf	wreg,f,c
  4209  0008C6  A4D8               	btfss	status,2,c
  4210  0008C8  D007               	goto	l405
  4211                           
  4212                           ;SlaveComm_PIC18.c: 390: {
  4213                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission(send_buffer);
  4214  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4215  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4216  0008D2  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4217                           
  4218                           ;SlaveComm_PIC18.c: 392: }
  4219  0008D6  D015               	goto	l407
  4220  0008D8                     l405:
  4221                           
  4222                           ;SlaveComm_PIC18.c: 393: else if (strmatch(parameters[1], "PSVersion") == 1)
  4223  0008D8  0E0A               	movlw	10
  4224  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  4225  0008DC  6E1E               	movwf	strmatch@a,c
  4226  0008DE  0E00               	movlw	0
  4227  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  4228  0008E2  6E1F               	movwf	strmatch@a+1,c
  4229  0008E4  0E0D               	movlw	low STR_22
  4230  0008E6  6E20               	movwf	strmatch@b,c
  4231  0008E8  0E06               	movlw	high STR_22
  4232  0008EA  6E21               	movwf	strmatch@b+1,c
  4233  0008EC  EC31  F00C         	call	_strmatch	;wreg free
  4234  0008F0  06E8               	decf	wreg,f,c
  4235  0008F2  A4D8               	btfss	status,2,c
  4236  0008F4  D006               	goto	l407
  4237                           
  4238                           ;SlaveComm_PIC18.c: 394: {
  4239                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission(send_buffer);
  4240  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4241  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4242  0008FE  ECF3  F00C         	call	_send_end_of_transmission	;wreg free
  4243  000902                     l407:
  4244                           
  4245                           ;SlaveComm_PIC18.c: 396: }
  4246                           ;SlaveComm_PIC18.c: 397: }
  4247                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  4248  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  4249  000904  0012               	return	
  4250  000906                     __end_of_process_data_parameters:
  4251                           	opt stack 0
  4252                           tblptru	equ	0xFF8
  4253                           tblptrh	equ	0xFF7
  4254                           tblptrl	equ	0xFF6
  4255                           tablat	equ	0xFF5
  4256                           prodh	equ	0xFF4
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           intcon2	equ	0xFF1
  4260                           intcon3	equ	0xFF0
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           postinc1	equ	0xFE6
  4264                           postdec1	equ	0xFE5
  4265                           fsr1h	equ	0xFE2
  4266                           fsr1l	equ	0xFE1
  4267                           indf2	equ	0xFDF
  4268                           postinc2	equ	0xFDE
  4269                           postdec2	equ	0xFDD
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8
  4273                           
  4274 ;; *************** function _strmatch *****************
  4275 ;; Defined at:
  4276 ;;		line 513 in file "SlaveComm_PIC18.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  a               2   29[COMRAM] PTR unsigned char 
  4279 ;;		 -> process_data@parameters(50), 
  4280 ;;  b               2   31[COMRAM] PTR unsigned char 
  4281 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4282 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4283 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4284 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  result          2   33[COMRAM] int 
  4287 ;;  match           1   35[COMRAM] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      unsigned char 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         4       0       0       0       0       0       0
  4298 ;;      Locals:         3       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0
  4300 ;;      Totals:         7       0       0       0       0       0       0
  4301 ;;Total ram usage:        7 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    2
  4304 ;; This function calls:
  4305 ;;		_strcmp2
  4306 ;; This function is called by:
  4307 ;;		_process_data_parameters
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text24
  4312  001862                     __ptext24:
  4313                           	opt stack 0
  4314  001862                     _strmatch:
  4315                           	opt stack 25
  4316                           
  4317                           ;SlaveComm_PIC18.c: 515: int result;
  4318                           ;SlaveComm_PIC18.c: 516: bool match;
  4319                           ;SlaveComm_PIC18.c: 518: result = strcmp2(a, b);
  4320                           
  4321                           ;incstack = 0
  4322  001862  C01E  F013         	movff	strmatch@a,strcmp2@a
  4323  001866  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4324  00186A  C020  F015         	movff	strmatch@b,strcmp2@b
  4325  00186E  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4326  001872  EC43  F005         	call	_strcmp2	;wreg free
  4327  001876  C013  F022         	movff	?_strcmp2,strmatch@result
  4328  00187A  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4329                           
  4330                           ;SlaveComm_PIC18.c: 520: match = (result == 0) ? 1 : 0;
  4331  00187E  5022               	movf	strmatch@result,w,c
  4332  001880  1023               	iorwf	strmatch@result+1,w,c
  4333  001882  A4D8               	btfss	status,2,c
  4334  001884  D002               	goto	u2370
  4335  001886  0E01               	movlw	1
  4336  001888  D001               	goto	u2380
  4337  00188A                     u2370:
  4338  00188A  0E00               	movlw	0
  4339  00188C                     u2380:
  4340  00188C  6E24               	movwf	strmatch@match,c
  4341                           
  4342                           ;SlaveComm_PIC18.c: 522: return match;
  4343  00188E  5024               	movf	strmatch@match,w,c
  4344  001890  0012               	return	
  4345  001892                     __end_of_strmatch:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           intcon2	equ	0xFF1
  4355                           intcon3	equ	0xFF0
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           postinc1	equ	0xFE6
  4359                           postdec1	equ	0xFE5
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function _strcmp2 *****************
  4370 ;; Defined at:
  4371 ;;		line 525 in file "SlaveComm_PIC18.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  a               2   18[COMRAM] PTR unsigned char 
  4374 ;;		 -> process_data@parameters(50), 
  4375 ;;  b               2   20[COMRAM] PTR unsigned char 
  4376 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4377 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4378 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4379 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  inx             2   27[COMRAM] int 
  4382 ;;  match           2   25[COMRAM] int 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  2   18[COMRAM] int 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4392 ;;      Params:         4       0       0       0       0       0       0
  4393 ;;      Locals:         4       0       0       0       0       0       0
  4394 ;;      Temps:          3       0       0       0       0       0       0
  4395 ;;      Totals:        11       0       0       0       0       0       0
  4396 ;;Total ram usage:       11 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    1
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_strmatch
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text25
  4407  000A86                     __ptext25:
  4408                           	opt stack 0
  4409  000A86                     _strcmp2:
  4410                           	opt stack 25
  4411                           
  4412                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  4413                           
  4414                           ;incstack = 0
  4415  000A86  0E00               	movlw	0
  4416  000A88  6E1D               	movwf	strcmp2@inx+1,c
  4417  000A8A  0E00               	movlw	0
  4418  000A8C  6E1C               	movwf	strcmp2@inx,c
  4419                           
  4420                           ;SlaveComm_PIC18.c: 528: int match = 0;
  4421  000A8E  0E00               	movlw	0
  4422  000A90  6E1B               	movwf	strcmp2@match+1,c
  4423  000A92  0E00               	movlw	0
  4424  000A94  6E1A               	movwf	strcmp2@match,c
  4425                           
  4426                           ;SlaveComm_PIC18.c: 530: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4427  000A96  D035               	goto	l443
  4428  000A98                     
  4429                           ;SlaveComm_PIC18.c: 531: {
  4430                           ;SlaveComm_PIC18.c: 532: if (a[inx] > b[inx])
  4431  000A98  501C               	movf	strcmp2@inx,w,c
  4432  000A9A  2413               	addwf	strcmp2@a,w,c
  4433  000A9C  6ED9               	movwf	fsr2l,c
  4434  000A9E  501D               	movf	strcmp2@inx+1,w,c
  4435  000AA0  2014               	addwfc	strcmp2@a+1,w,c
  4436  000AA2  6EDA               	movwf	fsr2h,c
  4437  000AA4  501C               	movf	strcmp2@inx,w,c
  4438  000AA6  2415               	addwf	strcmp2@b,w,c
  4439  000AA8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4440  000AAA  501D               	movf	strcmp2@inx+1,w,c
  4441  000AAC  2016               	addwfc	strcmp2@b+1,w,c
  4442  000AAE  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4443  000AB0  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4444  000AB4  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4445  000AB8                     	if	0	;tblptru may be non-zero
  4446  000AB8                     	endif
  4447  000AB8                     	if	0	;tblptru may be non-zero
  4448  000AB8                     	endif
  4449  000AB8  50DE               	movf	postinc2,w,c
  4450  000ABA  0009               	tblrd		*+
  4451  000ABC  5CF5               	subwf	tablat,w,c
  4452  000ABE  B0D8               	btfsc	status,0,c
  4453  000AC0  D005               	goto	l445
  4454                           
  4455                           ;SlaveComm_PIC18.c: 533: {
  4456                           ;SlaveComm_PIC18.c: 534: match = 1;
  4457  000AC2  0E00               	movlw	0
  4458  000AC4  6E1B               	movwf	strcmp2@match+1,c
  4459  000AC6  0E01               	movlw	1
  4460  000AC8  6E1A               	movwf	strcmp2@match,c
  4461                           
  4462                           ;SlaveComm_PIC18.c: 535: }
  4463  000ACA  D019               	goto	l447
  4464  000ACC                     l445:
  4465                           
  4466                           ;SlaveComm_PIC18.c: 536: else if (a[inx] < b[inx])
  4467  000ACC  501C               	movf	strcmp2@inx,w,c
  4468  000ACE  2413               	addwf	strcmp2@a,w,c
  4469  000AD0  6ED9               	movwf	fsr2l,c
  4470  000AD2  501D               	movf	strcmp2@inx+1,w,c
  4471  000AD4  2014               	addwfc	strcmp2@a+1,w,c
  4472  000AD6  6EDA               	movwf	fsr2h,c
  4473  000AD8  50DF               	movf	indf2,w,c
  4474  000ADA  6E17               	movwf	??_strcmp2& (0+255),c
  4475  000ADC  501C               	movf	strcmp2@inx,w,c
  4476  000ADE  2415               	addwf	strcmp2@b,w,c
  4477  000AE0  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4478  000AE2  501D               	movf	strcmp2@inx+1,w,c
  4479  000AE4  2016               	addwfc	strcmp2@b+1,w,c
  4480  000AE6  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4481  000AE8  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4482  000AEC  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4483  000AF0                     	if	0	;tblptru may be non-zero
  4484  000AF0                     	endif
  4485  000AF0                     	if	0	;tblptru may be non-zero
  4486  000AF0                     	endif
  4487  000AF0  0008               	tblrd		*
  4488  000AF2  50F5               	movf	tablat,w,c
  4489  000AF4  5C17               	subwf	??_strcmp2,w,c
  4490  000AF6  B0D8               	btfsc	status,0,c
  4491  000AF8  D002               	goto	l447
  4492                           
  4493                           ;SlaveComm_PIC18.c: 537: {
  4494                           ;SlaveComm_PIC18.c: 538: match = -1;
  4495  000AFA  681A               	setf	strcmp2@match,c
  4496  000AFC  681B               	setf	strcmp2@match+1,c
  4497  000AFE                     l447:
  4498                           
  4499                           ;SlaveComm_PIC18.c: 543: }
  4500                           ;SlaveComm_PIC18.c: 545: inx++;
  4501                           
  4502                           ;SlaveComm_PIC18.c: 541: {
  4503  000AFE  4A1C               	infsnz	strcmp2@inx,f,c
  4504  000B00  2A1D               	incf	strcmp2@inx+1,f,c
  4505  000B02                     l443:
  4506  000B02  501C               	movf	strcmp2@inx,w,c
  4507  000B04  2413               	addwf	strcmp2@a,w,c
  4508  000B06  6ED9               	movwf	fsr2l,c
  4509  000B08  501D               	movf	strcmp2@inx+1,w,c
  4510  000B0A  2014               	addwfc	strcmp2@a+1,w,c
  4511  000B0C  6EDA               	movwf	fsr2h,c
  4512  000B0E  50DF               	movf	indf2,w,c
  4513  000B10  B4D8               	btfsc	status,2,c
  4514  000B12  D013               	goto	u2250
  4515  000B14  501C               	movf	strcmp2@inx,w,c
  4516  000B16  2415               	addwf	strcmp2@b,w,c
  4517  000B18  6E17               	movwf	??_strcmp2& (0+255),c
  4518  000B1A  501D               	movf	strcmp2@inx+1,w,c
  4519  000B1C  2016               	addwfc	strcmp2@b+1,w,c
  4520  000B1E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4521  000B20  C017  FFF6         	movff	??_strcmp2,tblptrl
  4522  000B24  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4523  000B28                     	if	0	;tblptru may be non-zero
  4524  000B28                     	endif
  4525  000B28                     	if	0	;tblptru may be non-zero
  4526  000B28                     	endif
  4527  000B28  0008               	tblrd		*
  4528  000B2A  50F5               	movf	tablat,w,c
  4529  000B2C  0900               	iorlw	0
  4530  000B2E  B4D8               	btfsc	status,2,c
  4531  000B30  D004               	goto	u2250
  4532  000B32  501A               	movf	strcmp2@match,w,c
  4533  000B34  101B               	iorwf	strcmp2@match+1,w,c
  4534  000B36  B4D8               	btfsc	status,2,c
  4535  000B38  D7AF               	goto	l444
  4536  000B3A                     u2250:
  4537                           
  4538                           ;SlaveComm_PIC18.c: 546: }
  4539                           ;SlaveComm_PIC18.c: 549: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4540  000B3A  501C               	movf	strcmp2@inx,w,c
  4541  000B3C  2413               	addwf	strcmp2@a,w,c
  4542  000B3E  6ED9               	movwf	fsr2l,c
  4543  000B40  501D               	movf	strcmp2@inx+1,w,c
  4544  000B42  2014               	addwfc	strcmp2@a+1,w,c
  4545  000B44  6EDA               	movwf	fsr2h,c
  4546  000B46  50DF               	movf	indf2,w,c
  4547  000B48  A4D8               	btfss	status,2,c
  4548  000B4A  D012               	goto	l453
  4549  000B4C  501C               	movf	strcmp2@inx,w,c
  4550  000B4E  2415               	addwf	strcmp2@b,w,c
  4551  000B50  6E17               	movwf	??_strcmp2& (0+255),c
  4552  000B52  501D               	movf	strcmp2@inx+1,w,c
  4553  000B54  2016               	addwfc	strcmp2@b+1,w,c
  4554  000B56  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4555  000B58  C017  FFF6         	movff	??_strcmp2,tblptrl
  4556  000B5C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4557  000B60                     	if	0	;tblptru may be non-zero
  4558  000B60                     	endif
  4559  000B60                     	if	0	;tblptru may be non-zero
  4560  000B60                     	endif
  4561  000B60  0008               	tblrd		*
  4562  000B62  50F5               	movf	tablat,w,c
  4563  000B64  0900               	iorlw	0
  4564  000B66  B4D8               	btfsc	status,2,c
  4565  000B68  D003               	goto	l453
  4566                           
  4567                           ;SlaveComm_PIC18.c: 550: {
  4568                           ;SlaveComm_PIC18.c: 551: match = -1;
  4569  000B6A  681A               	setf	strcmp2@match,c
  4570  000B6C  681B               	setf	strcmp2@match+1,c
  4571                           
  4572                           ;SlaveComm_PIC18.c: 552: }
  4573  000B6E  D01C               	goto	l455
  4574  000B70                     l453:
  4575                           
  4576                           ;SlaveComm_PIC18.c: 553: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4577  000B70  501C               	movf	strcmp2@inx,w,c
  4578  000B72  2413               	addwf	strcmp2@a,w,c
  4579  000B74  6ED9               	movwf	fsr2l,c
  4580  000B76  501D               	movf	strcmp2@inx+1,w,c
  4581  000B78  2014               	addwfc	strcmp2@a+1,w,c
  4582  000B7A  6EDA               	movwf	fsr2h,c
  4583  000B7C  50DF               	movf	indf2,w,c
  4584  000B7E  B4D8               	btfsc	status,2,c
  4585  000B80  D013               	goto	l455
  4586  000B82  501C               	movf	strcmp2@inx,w,c
  4587  000B84  2415               	addwf	strcmp2@b,w,c
  4588  000B86  6E17               	movwf	??_strcmp2& (0+255),c
  4589  000B88  501D               	movf	strcmp2@inx+1,w,c
  4590  000B8A  2016               	addwfc	strcmp2@b+1,w,c
  4591  000B8C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4592  000B8E  C017  FFF6         	movff	??_strcmp2,tblptrl
  4593  000B92  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4594  000B96                     	if	0	;tblptru may be non-zero
  4595  000B96                     	endif
  4596  000B96                     	if	0	;tblptru may be non-zero
  4597  000B96                     	endif
  4598  000B96  0008               	tblrd		*
  4599  000B98  50F5               	movf	tablat,w,c
  4600  000B9A  0900               	iorlw	0
  4601  000B9C  A4D8               	btfss	status,2,c
  4602  000B9E  D004               	goto	l455
  4603                           
  4604                           ;SlaveComm_PIC18.c: 554: {
  4605                           ;SlaveComm_PIC18.c: 555: match = 1;
  4606  000BA0  0E00               	movlw	0
  4607  000BA2  6E1B               	movwf	strcmp2@match+1,c
  4608  000BA4  0E01               	movlw	1
  4609  000BA6  6E1A               	movwf	strcmp2@match,c
  4610  000BA8                     l455:
  4611                           
  4612                           ;SlaveComm_PIC18.c: 556: }
  4613                           ;SlaveComm_PIC18.c: 558: return match;
  4614  000BA8  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4615  000BAC  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4616  000BB0  0012               	return	
  4617  000BB2                     __end_of_strcmp2:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           prodh	equ	0xFF4
  4624                           prodl	equ	0xFF3
  4625                           intcon	equ	0xFF2
  4626                           intcon2	equ	0xFF1
  4627                           intcon3	equ	0xFF0
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           postinc1	equ	0xFE6
  4631                           postdec1	equ	0xFE5
  4632                           fsr1h	equ	0xFE2
  4633                           fsr1l	equ	0xFE1
  4634                           indf2	equ	0xFDF
  4635                           postinc2	equ	0xFDE
  4636                           postdec2	equ	0xFDD
  4637                           fsr2h	equ	0xFDA
  4638                           fsr2l	equ	0xFD9
  4639                           status	equ	0xFD8
  4640                           
  4641 ;; *************** function _send_end_of_transmission *****************
  4642 ;; Defined at:
  4643 ;;		line 604 in file "SlaveComm_PIC18.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  4646 ;;		 -> communications@send_buffer(42), 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4658 ;;      Params:         2       0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0
  4661 ;;      Totals:         2       0       0       0       0       0       0
  4662 ;;Total ram usage:        2 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    4
  4665 ;; This function calls:
  4666 ;;		_command_builder1
  4667 ;; This function is called by:
  4668 ;;		_process_data_parameters
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text26
  4673  0019E6                     __ptext26:
  4674                           	opt stack 0
  4675  0019E6                     _send_end_of_transmission:
  4676                           	opt stack 23
  4677                           
  4678                           ;SlaveComm_PIC18.c: 606: command_builder1(send_buffer, "END");
  4679                           
  4680                           ;incstack = 0
  4681  0019E6  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4682  0019EA  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4683  0019EE  0E4F               	movlw	low STR_1
  4684  0019F0  6E21               	movwf	command_builder1@data1,c
  4685  0019F2  0E06               	movlw	high STR_1
  4686  0019F4  6E22               	movwf	command_builder1@data1+1,c
  4687  0019F6  ECEB  F00A         	call	_command_builder1	;wreg free
  4688  0019FA  0012               	return	
  4689  0019FC                     __end_of_send_end_of_transmission:
  4690                           	opt stack 0
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           prodh	equ	0xFF4
  4696                           prodl	equ	0xFF3
  4697                           intcon	equ	0xFF2
  4698                           intcon2	equ	0xFF1
  4699                           intcon3	equ	0xFF0
  4700                           postinc0	equ	0xFEE
  4701                           wreg	equ	0xFE8
  4702                           postinc1	equ	0xFE6
  4703                           postdec1	equ	0xFE5
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           indf2	equ	0xFDF
  4707                           postinc2	equ	0xFDE
  4708                           postdec2	equ	0xFDD
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _command_builder1 *****************
  4714 ;; Defined at:
  4715 ;;		line 406 in file "SlaveComm_PIC18.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4718 ;;		 -> communications@send_buffer(42), 
  4719 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4720 ;;		 -> STR_23(4), 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4732 ;;      Params:         4       0       0       0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0
  4735 ;;      Totals:         4       0       0       0       0       0       0
  4736 ;;Total ram usage:        4 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    3
  4739 ;; This function calls:
  4740 ;;		_command_builder_add_char
  4741 ;;		_command_builder_add_string
  4742 ;; This function is called by:
  4743 ;;		_send_end_of_transmission
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text27
  4748  0015D6                     __ptext27:
  4749                           	opt stack 0
  4750  0015D6                     _command_builder1:
  4751                           	opt stack 23
  4752                           
  4753                           ;SlaveComm_PIC18.c: 408: command_builder_add_char(send_buffer, '#');
  4754                           
  4755                           ;incstack = 0
  4756  0015D6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4757  0015DA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4758  0015DE  0E23               	movlw	35
  4759  0015E0  6E15               	movwf	command_builder_add_char@data,c
  4760  0015E2  EC16  F00B         	call	_command_builder_add_char	;wreg free
  4761                           
  4762                           ;SlaveComm_PIC18.c: 409: command_builder_add_char(send_buffer, '#');
  4763  0015E6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4764  0015EA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4765  0015EE  0E23               	movlw	35
  4766  0015F0  6E15               	movwf	command_builder_add_char@data,c
  4767  0015F2  EC16  F00B         	call	_command_builder_add_char	;wreg free
  4768                           
  4769                           ;SlaveComm_PIC18.c: 410: command_builder_add_char(send_buffer, '!');
  4770  0015F6  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4771  0015FA  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4772  0015FE  0E21               	movlw	33
  4773  001600  6E15               	movwf	command_builder_add_char@data,c
  4774  001602  EC16  F00B         	call	_command_builder_add_char	;wreg free
  4775                           
  4776                           ;SlaveComm_PIC18.c: 411: command_builder_add_string(send_buffer, data1);
  4777  001606  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4778  00160A  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4779  00160E  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4780  001612  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4781  001616  EC10  F00A         	call	_command_builder_add_string	;wreg free
  4782                           
  4783                           ;SlaveComm_PIC18.c: 412: command_builder_add_char(send_buffer, '*');
  4784  00161A  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4785  00161E  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4786  001622  0E2A               	movlw	42
  4787  001624  6E15               	movwf	command_builder_add_char@data,c
  4788  001626  EC16  F00B         	call	_command_builder_add_char	;wreg free
  4789  00162A  0012               	return	
  4790  00162C                     __end_of_command_builder1:
  4791                           	opt stack 0
  4792                           tblptru	equ	0xFF8
  4793                           tblptrh	equ	0xFF7
  4794                           tblptrl	equ	0xFF6
  4795                           tablat	equ	0xFF5
  4796                           prodh	equ	0xFF4
  4797                           prodl	equ	0xFF3
  4798                           intcon	equ	0xFF2
  4799                           intcon2	equ	0xFF1
  4800                           intcon3	equ	0xFF0
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           postinc1	equ	0xFE6
  4804                           postdec1	equ	0xFE5
  4805                           fsr1h	equ	0xFE2
  4806                           fsr1l	equ	0xFE1
  4807                           indf2	equ	0xFDF
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _com_command_setEnergyUsed *****************
  4815 ;; Defined at:
  4816 ;;		line 629 in file "SlaveComm_PIC18.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4819 ;;		 -> communications@send_buffer(42), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  temp           12    0[BANK0 ] unsigned char [12]
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4831 ;;      Params:         2       0       0       0       0       0       0
  4832 ;;      Locals:         0      12       0       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0       0       0
  4834 ;;      Totals:         2      12       0       0       0       0       0
  4835 ;;Total ram usage:       14 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    4
  4838 ;; This function calls:
  4839 ;;		_command_builder3
  4840 ;;		_ultoa
  4841 ;; This function is called by:
  4842 ;;		_resetCommunications
  4843 ;;		_process_data_parameters
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text28
  4848  00176E                     __ptext28:
  4849                           	opt stack 0
  4850  00176E                     _com_command_setEnergyUsed:
  4851                           	opt stack 24
  4852                           
  4853                           ;SlaveComm_PIC18.c: 631: char temp[12];
  4854                           ;SlaveComm_PIC18.c: 633: ultoa(temp, meterEnergyUsed, 10);
  4855                           
  4856                           ;incstack = 0
  4857  00176E  0EBE               	movlw	low com_command_setEnergyUsed@temp
  4858  001770  6E20               	movwf	ultoa@buf,c
  4859  001772  0E00               	movlw	high com_command_setEnergyUsed@temp
  4860  001774  6E21               	movwf	ultoa@buf+1,c
  4861  001776  C088  F022         	movff	_meterEnergyUsed,ultoa@val
  4862  00177A  C089  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  4863  00177E  C08A  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  4864  001782  C08B  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  4865  001786  0E00               	movlw	0
  4866  001788  6E27               	movwf	ultoa@base+1,c
  4867  00178A  0E0A               	movlw	10
  4868  00178C  6E26               	movwf	ultoa@base,c
  4869  00178E  EC57  F006         	call	_ultoa	;wreg free
  4870                           
  4871                           ;SlaveComm_PIC18.c: 635: command_builder3(send_buffer, "Set", "EnUsed", temp);
  4872  001792  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4873  001796  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4874  00179A  0E57               	movlw	low STR_2
  4875  00179C  6E21               	movwf	command_builder3@data1,c
  4876  00179E  0E06               	movlw	high STR_2
  4877  0017A0  6E22               	movwf	command_builder3@data1+1,c
  4878  0017A2  0E17               	movlw	low STR_4
  4879  0017A4  6E23               	movwf	command_builder3@data2,c
  4880  0017A6  0E06               	movlw	high STR_4
  4881  0017A8  6E24               	movwf	command_builder3@data2+1,c
  4882  0017AA  0EBE               	movlw	low com_command_setEnergyUsed@temp
  4883  0017AC  6E25               	movwf	command_builder3@data3,c
  4884  0017AE  0E00               	movlw	high com_command_setEnergyUsed@temp
  4885  0017B0  6E26               	movwf	command_builder3@data3+1,c
  4886  0017B2  EC10  F008         	call	_command_builder3	;wreg free
  4887  0017B6  0012               	return	
  4888  0017B8                     __end_of_com_command_setEnergyUsed:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           intcon	equ	0xFF2
  4897                           intcon2	equ	0xFF1
  4898                           intcon3	equ	0xFF0
  4899                           postinc0	equ	0xFEE
  4900                           wreg	equ	0xFE8
  4901                           postinc1	equ	0xFE6
  4902                           postdec1	equ	0xFE5
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _ultoa *****************
  4913 ;; Defined at:
  4914 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4917 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4918 ;;  val             4   33[COMRAM] unsigned long 
  4919 ;;  base            2   37[COMRAM] int 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  v               4   39[COMRAM] unsigned long 
  4922 ;;  c               1   43[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  2   31[COMRAM] PTR unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4932 ;;      Params:         8       0       0       0       0       0       0
  4933 ;;      Locals:         5       0       0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0
  4935 ;;      Totals:        13       0       0       0       0       0       0
  4936 ;;Total ram usage:       13 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    2
  4939 ;; This function calls:
  4940 ;;		___lldiv
  4941 ;;		___llmod
  4942 ;; This function is called by:
  4943 ;;		_com_command_setPower
  4944 ;;		_com_command_setEnergyUsed
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text29
  4949  000CAE                     __ptext29:
  4950                           	opt stack 0
  4951  000CAE                     _ultoa:
  4952                           	opt stack 25
  4953                           
  4954                           ;incstack = 0
  4955  000CAE  C022  F028         	movff	ultoa@val,ultoa@v
  4956  000CB2  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4957  000CB6  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4958  000CBA  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4959  000CBE  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4960  000CC2  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4961  000CC6  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4962  000CCA  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4963  000CCE  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4964  000CD2  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4965  000CD6  0E00               	movlw	0
  4966  000CD8  BE18               	btfsc	___lldiv@divisor+1,7,c
  4967  000CDA  0EFF               	movlw	-1
  4968  000CDC  6E19               	movwf	___lldiv@divisor+2,c
  4969  000CDE  6E1A               	movwf	___lldiv@divisor+3,c
  4970  000CE0  ECCF  F009         	call	___lldiv	;wreg free
  4971  000CE4  C013  F028         	movff	?___lldiv,ultoa@v
  4972  000CE8  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4973  000CEC  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4974  000CF0  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4975  000CF4  4A20               	infsnz	ultoa@buf,f,c
  4976  000CF6  2A21               	incf	ultoa@buf+1,f,c
  4977  000CF8  5028               	movf	ultoa@v,w,c
  4978  000CFA  1029               	iorwf	ultoa@v+1,w,c
  4979  000CFC  102A               	iorwf	ultoa@v+2,w,c
  4980  000CFE  102B               	iorwf	ultoa@v+3,w,c
  4981  000D00  A4D8               	btfss	status,2,c
  4982  000D02  D7DD               	goto	l916
  4983  000D04  C020  FFD9         	movff	ultoa@buf,fsr2l
  4984  000D08  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4985  000D0C  0E00               	movlw	0
  4986  000D0E  6EDF               	movwf	indf2,c
  4987  000D10  0620               	decf	ultoa@buf,f,c
  4988  000D12  A0D8               	btfss	status,0,c
  4989  000D14  0621               	decf	ultoa@buf+1,f,c
  4990  000D16  C022  F013         	movff	ultoa@val,___llmod@dividend
  4991  000D1A  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4992  000D1E  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4993  000D22  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4994  000D26  C026  F017         	movff	ultoa@base,___llmod@divisor
  4995  000D2A  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4996  000D2E  0E00               	movlw	0
  4997  000D30  BE18               	btfsc	___llmod@divisor+1,7,c
  4998  000D32  0EFF               	movlw	-1
  4999  000D34  6E19               	movwf	___llmod@divisor+2,c
  5000  000D36  6E1A               	movwf	___llmod@divisor+3,c
  5001  000D38  ECB8  F00A         	call	___llmod	;wreg free
  5002  000D3C  5013               	movf	?___llmod,w,c
  5003  000D3E  6E2C               	movwf	ultoa@c,c
  5004  000D40  C022  F013         	movff	ultoa@val,___lldiv@dividend
  5005  000D44  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  5006  000D48  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  5007  000D4C  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  5008  000D50  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5009  000D54  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5010  000D58  0E00               	movlw	0
  5011  000D5A  BE18               	btfsc	___lldiv@divisor+1,7,c
  5012  000D5C  0EFF               	movlw	-1
  5013  000D5E  6E19               	movwf	___lldiv@divisor+2,c
  5014  000D60  6E1A               	movwf	___lldiv@divisor+3,c
  5015  000D62  ECCF  F009         	call	___lldiv	;wreg free
  5016  000D66  C013  F022         	movff	?___lldiv,ultoa@val
  5017  000D6A  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  5018  000D6E  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  5019  000D72  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  5020  000D76  0E09               	movlw	9
  5021  000D78  642C               	cpfsgt	ultoa@c,c
  5022  000D7A  D002               	goto	l919
  5023  000D7C  0E07               	movlw	7
  5024  000D7E  262C               	addwf	ultoa@c,f,c
  5025  000D80                     l919:
  5026  000D80  0E30               	movlw	48
  5027  000D82  262C               	addwf	ultoa@c,f,c
  5028  000D84  C020  FFD9         	movff	ultoa@buf,fsr2l
  5029  000D88  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5030  000D8C  C02C  FFDF         	movff	ultoa@c,indf2
  5031  000D90  0620               	decf	ultoa@buf,f,c
  5032  000D92  A0D8               	btfss	status,0,c
  5033  000D94  0621               	decf	ultoa@buf+1,f,c
  5034  000D96  5022               	movf	ultoa@val,w,c
  5035  000D98  1023               	iorwf	ultoa@val+1,w,c
  5036  000D9A  1024               	iorwf	ultoa@val+2,w,c
  5037  000D9C  1025               	iorwf	ultoa@val+3,w,c
  5038  000D9E  B4D8               	btfsc	status,2,c
  5039  000DA0  0012               	return	
  5040  000DA2  D7B9               	goto	l918
  5041  000DA4                     __end_of_ultoa:
  5042                           	opt stack 0
  5043                           tblptru	equ	0xFF8
  5044                           tblptrh	equ	0xFF7
  5045                           tblptrl	equ	0xFF6
  5046                           tablat	equ	0xFF5
  5047                           prodh	equ	0xFF4
  5048                           prodl	equ	0xFF3
  5049                           intcon	equ	0xFF2
  5050                           intcon2	equ	0xFF1
  5051                           intcon3	equ	0xFF0
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           postinc1	equ	0xFE6
  5055                           postdec1	equ	0xFE5
  5056                           fsr1h	equ	0xFE2
  5057                           fsr1l	equ	0xFE1
  5058                           indf2	equ	0xFDF
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function ___llmod *****************
  5066 ;; Defined at:
  5067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  dividend        4   18[COMRAM] unsigned long 
  5070 ;;  divisor         4   22[COMRAM] unsigned long 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  counter         1   26[COMRAM] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  4   18[COMRAM] unsigned long 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5082 ;;      Params:         8       0       0       0       0       0       0
  5083 ;;      Locals:         1       0       0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0
  5085 ;;      Totals:         9       0       0       0       0       0       0
  5086 ;;Total ram usage:        9 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_ultoa
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text30
  5097  001570                     __ptext30:
  5098                           	opt stack 0
  5099  001570                     ___llmod:
  5100                           	opt stack 25
  5101                           
  5102                           ;incstack = 0
  5103  001570  5017               	movf	___llmod@divisor,w,c
  5104  001572  1018               	iorwf	___llmod@divisor+1,w,c
  5105  001574  1019               	iorwf	___llmod@divisor+2,w,c
  5106  001576  101A               	iorwf	___llmod@divisor+3,w,c
  5107  001578  B4D8               	btfsc	status,2,c
  5108  00157A  D024               	goto	l878
  5109  00157C  0E01               	movlw	1
  5110  00157E  6E1B               	movwf	___llmod@counter,c
  5111  001580  D006               	goto	l873
  5112  001582  90D8               	bcf	status,0,c
  5113  001584  3617               	rlcf	___llmod@divisor,f,c
  5114  001586  3618               	rlcf	___llmod@divisor+1,f,c
  5115  001588  3619               	rlcf	___llmod@divisor+2,f,c
  5116  00158A  361A               	rlcf	___llmod@divisor+3,f,c
  5117  00158C  2A1B               	incf	___llmod@counter,f,c
  5118  00158E                     l873:
  5119  00158E  AE1A               	btfss	___llmod@divisor+3,7,c
  5120  001590  D7F8               	goto	l874
  5121  001592                     u2190:
  5122  001592  5017               	movf	___llmod@divisor,w,c
  5123  001594  5C13               	subwf	___llmod@dividend,w,c
  5124  001596  5018               	movf	___llmod@divisor+1,w,c
  5125  001598  5814               	subwfb	___llmod@dividend+1,w,c
  5126  00159A  5019               	movf	___llmod@divisor+2,w,c
  5127  00159C  5815               	subwfb	___llmod@dividend+2,w,c
  5128  00159E  501A               	movf	___llmod@divisor+3,w,c
  5129  0015A0  5816               	subwfb	___llmod@dividend+3,w,c
  5130  0015A2  A0D8               	btfss	status,0,c
  5131  0015A4  D008               	goto	l877
  5132  0015A6  5017               	movf	___llmod@divisor,w,c
  5133  0015A8  5E13               	subwf	___llmod@dividend,f,c
  5134  0015AA  5018               	movf	___llmod@divisor+1,w,c
  5135  0015AC  5A14               	subwfb	___llmod@dividend+1,f,c
  5136  0015AE  5019               	movf	___llmod@divisor+2,w,c
  5137  0015B0  5A15               	subwfb	___llmod@dividend+2,f,c
  5138  0015B2  501A               	movf	___llmod@divisor+3,w,c
  5139  0015B4  5A16               	subwfb	___llmod@dividend+3,f,c
  5140  0015B6                     l877:
  5141  0015B6  90D8               	bcf	status,0,c
  5142  0015B8  321A               	rrcf	___llmod@divisor+3,f,c
  5143  0015BA  3219               	rrcf	___llmod@divisor+2,f,c
  5144  0015BC  3218               	rrcf	___llmod@divisor+1,f,c
  5145  0015BE  3217               	rrcf	___llmod@divisor,f,c
  5146  0015C0  2E1B               	decfsz	___llmod@counter,f,c
  5147  0015C2  D7E7               	goto	u2190
  5148  0015C4                     l878:
  5149  0015C4  C013  F013         	movff	___llmod@dividend,?___llmod
  5150  0015C8  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  5151  0015CC  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  5152  0015D0  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  5153  0015D4  0012               	return		;funcret
  5154  0015D6                     __end_of___llmod:
  5155                           	opt stack 0
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           prodh	equ	0xFF4
  5161                           prodl	equ	0xFF3
  5162                           intcon	equ	0xFF2
  5163                           intcon2	equ	0xFF1
  5164                           intcon3	equ	0xFF0
  5165                           postinc0	equ	0xFEE
  5166                           wreg	equ	0xFE8
  5167                           postinc1	equ	0xFE6
  5168                           postdec1	equ	0xFE5
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function ___lldiv *****************
  5179 ;; Defined at:
  5180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  dividend        4   18[COMRAM] unsigned long 
  5183 ;;  divisor         4   22[COMRAM] unsigned long 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  quotient        4   26[COMRAM] unsigned long 
  5186 ;;  counter         1   30[COMRAM] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  4   18[COMRAM] unsigned long 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5196 ;;      Params:         8       0       0       0       0       0       0
  5197 ;;      Locals:         5       0       0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0
  5199 ;;      Totals:        13       0       0       0       0       0       0
  5200 ;;Total ram usage:       13 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    1
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_ultoa
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text31
  5211  00139E                     __ptext31:
  5212                           	opt stack 0
  5213  00139E                     ___lldiv:
  5214                           	opt stack 25
  5215                           
  5216                           ;incstack = 0
  5217  00139E  0E00               	movlw	0
  5218  0013A0  6E1B               	movwf	___lldiv@quotient,c
  5219  0013A2  0E00               	movlw	0
  5220  0013A4  6E1C               	movwf	___lldiv@quotient+1,c
  5221  0013A6  0E00               	movlw	0
  5222  0013A8  6E1D               	movwf	___lldiv@quotient+2,c
  5223  0013AA  0E00               	movlw	0
  5224  0013AC  6E1E               	movwf	___lldiv@quotient+3,c
  5225  0013AE  5017               	movf	___lldiv@divisor,w,c
  5226  0013B0  1018               	iorwf	___lldiv@divisor+1,w,c
  5227  0013B2  1019               	iorwf	___lldiv@divisor+2,w,c
  5228  0013B4  101A               	iorwf	___lldiv@divisor+3,w,c
  5229  0013B6  B4D8               	btfsc	status,2,c
  5230  0013B8  D02A               	goto	l868
  5231  0013BA  0E01               	movlw	1
  5232  0013BC  6E1F               	movwf	___lldiv@counter,c
  5233  0013BE  D006               	goto	l863
  5234  0013C0  90D8               	bcf	status,0,c
  5235  0013C2  3617               	rlcf	___lldiv@divisor,f,c
  5236  0013C4  3618               	rlcf	___lldiv@divisor+1,f,c
  5237  0013C6  3619               	rlcf	___lldiv@divisor+2,f,c
  5238  0013C8  361A               	rlcf	___lldiv@divisor+3,f,c
  5239  0013CA  2A1F               	incf	___lldiv@counter,f,c
  5240  0013CC                     l863:
  5241  0013CC  AE1A               	btfss	___lldiv@divisor+3,7,c
  5242  0013CE  D7F8               	goto	l864
  5243  0013D0                     u2160:
  5244  0013D0  90D8               	bcf	status,0,c
  5245  0013D2  361B               	rlcf	___lldiv@quotient,f,c
  5246  0013D4  361C               	rlcf	___lldiv@quotient+1,f,c
  5247  0013D6  361D               	rlcf	___lldiv@quotient+2,f,c
  5248  0013D8  361E               	rlcf	___lldiv@quotient+3,f,c
  5249  0013DA  5017               	movf	___lldiv@divisor,w,c
  5250  0013DC  5C13               	subwf	___lldiv@dividend,w,c
  5251  0013DE  5018               	movf	___lldiv@divisor+1,w,c
  5252  0013E0  5814               	subwfb	___lldiv@dividend+1,w,c
  5253  0013E2  5019               	movf	___lldiv@divisor+2,w,c
  5254  0013E4  5815               	subwfb	___lldiv@dividend+2,w,c
  5255  0013E6  501A               	movf	___lldiv@divisor+3,w,c
  5256  0013E8  5816               	subwfb	___lldiv@dividend+3,w,c
  5257  0013EA  A0D8               	btfss	status,0,c
  5258  0013EC  D009               	goto	l867
  5259  0013EE  5017               	movf	___lldiv@divisor,w,c
  5260  0013F0  5E13               	subwf	___lldiv@dividend,f,c
  5261  0013F2  5018               	movf	___lldiv@divisor+1,w,c
  5262  0013F4  5A14               	subwfb	___lldiv@dividend+1,f,c
  5263  0013F6  5019               	movf	___lldiv@divisor+2,w,c
  5264  0013F8  5A15               	subwfb	___lldiv@dividend+2,f,c
  5265  0013FA  501A               	movf	___lldiv@divisor+3,w,c
  5266  0013FC  5A16               	subwfb	___lldiv@dividend+3,f,c
  5267  0013FE  801B               	bsf	___lldiv@quotient,0,c
  5268  001400                     l867:
  5269  001400  90D8               	bcf	status,0,c
  5270  001402  321A               	rrcf	___lldiv@divisor+3,f,c
  5271  001404  3219               	rrcf	___lldiv@divisor+2,f,c
  5272  001406  3218               	rrcf	___lldiv@divisor+1,f,c
  5273  001408  3217               	rrcf	___lldiv@divisor,f,c
  5274  00140A  2E1F               	decfsz	___lldiv@counter,f,c
  5275  00140C  D7E1               	goto	u2160
  5276  00140E                     l868:
  5277  00140E  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5278  001412  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5279  001416  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5280  00141A  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5281  00141E  0012               	return		;funcret
  5282  001420                     __end_of___lldiv:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           intcon2	equ	0xFF1
  5292                           intcon3	equ	0xFF0
  5293                           postinc0	equ	0xFEE
  5294                           wreg	equ	0xFE8
  5295                           postinc1	equ	0xFE6
  5296                           postdec1	equ	0xFE5
  5297                           fsr1h	equ	0xFE2
  5298                           fsr1l	equ	0xFE1
  5299                           indf2	equ	0xFDF
  5300                           postinc2	equ	0xFDE
  5301                           postdec2	equ	0xFDD
  5302                           fsr2h	equ	0xFDA
  5303                           fsr2l	equ	0xFD9
  5304                           status	equ	0xFD8
  5305                           
  5306 ;; *************** function _command_builder3 *****************
  5307 ;; Defined at:
  5308 ;;		line 430 in file "SlaveComm_PIC18.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  5311 ;;		 -> communications@send_buffer(42), 
  5312 ;;  data1           2   32[COMRAM] PTR unsigned char 
  5313 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5314 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5315 ;;  data2           2   34[COMRAM] PTR unsigned char 
  5316 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5317 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5318 ;;  data3           2   36[COMRAM] PTR unsigned char 
  5319 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5320 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5332 ;;      Params:         8       0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0
  5335 ;;      Totals:         8       0       0       0       0       0       0
  5336 ;;Total ram usage:        8 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    3
  5339 ;; This function calls:
  5340 ;;		_command_builder_add_char
  5341 ;;		_command_builder_add_string
  5342 ;; This function is called by:
  5343 ;;		_process_data_parameters
  5344 ;;		_com_command_setPower
  5345 ;;		_com_command_setEnergyUsed
  5346 ;;		_com_command_setVersion
  5347 ;;		_com_command_setVolts
  5348 ;;		_com_command_setAmps
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text32
  5353  001020                     __ptext32:
  5354                           	opt stack 0
  5355  001020                     _command_builder3:
  5356                           	opt stack 24
  5357                           
  5358                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  5359                           
  5360                           ;incstack = 0
  5361  001020  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5362  001024  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5363  001028  0E23               	movlw	35
  5364  00102A  6E15               	movwf	command_builder_add_char@data,c
  5365  00102C  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5366                           
  5367                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  5368  001030  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5369  001034  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5370  001038  0E23               	movlw	35
  5371  00103A  6E15               	movwf	command_builder_add_char@data,c
  5372  00103C  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5373                           
  5374                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  5375  001040  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5376  001044  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5377  001048  0E21               	movlw	33
  5378  00104A  6E15               	movwf	command_builder_add_char@data,c
  5379  00104C  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5380                           
  5381                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  5382  001050  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5383  001054  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5384  001058  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5385  00105C  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5386  001060  EC10  F00A         	call	_command_builder_add_string	;wreg free
  5387                           
  5388                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, ';');
  5389  001064  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5390  001068  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5391  00106C  0E3B               	movlw	59
  5392  00106E  6E15               	movwf	command_builder_add_char@data,c
  5393  001070  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5394                           
  5395                           ;SlaveComm_PIC18.c: 437: command_builder_add_string(send_buffer, data2);
  5396  001074  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5397  001078  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5398  00107C  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5399  001080  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5400  001084  EC10  F00A         	call	_command_builder_add_string	;wreg free
  5401                           
  5402                           ;SlaveComm_PIC18.c: 438: command_builder_add_char(send_buffer, ';');
  5403  001088  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5404  00108C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5405  001090  0E3B               	movlw	59
  5406  001092  6E15               	movwf	command_builder_add_char@data,c
  5407  001094  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5408                           
  5409                           ;SlaveComm_PIC18.c: 439: command_builder_add_string(send_buffer, data3);
  5410  001098  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5411  00109C  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5412  0010A0  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5413  0010A4  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5414  0010A8  EC10  F00A         	call	_command_builder_add_string	;wreg free
  5415                           
  5416                           ;SlaveComm_PIC18.c: 440: command_builder_add_char(send_buffer, '*');
  5417  0010AC  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5418  0010B0  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5419  0010B4  0E2A               	movlw	42
  5420  0010B6  6E15               	movwf	command_builder_add_char@data,c
  5421  0010B8  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5422  0010BC  0012               	return	
  5423  0010BE                     __end_of_command_builder3:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           intcon2	equ	0xFF1
  5433                           intcon3	equ	0xFF0
  5434                           postinc0	equ	0xFEE
  5435                           wreg	equ	0xFE8
  5436                           postinc1	equ	0xFE6
  5437                           postdec1	equ	0xFE5
  5438                           fsr1h	equ	0xFE2
  5439                           fsr1l	equ	0xFE1
  5440                           indf2	equ	0xFDF
  5441                           postinc2	equ	0xFDE
  5442                           postdec2	equ	0xFDD
  5443                           fsr2h	equ	0xFDA
  5444                           fsr2l	equ	0xFD9
  5445                           status	equ	0xFD8
  5446                           
  5447 ;; *************** function _command_builder_add_string *****************
  5448 ;; Defined at:
  5449 ;;		line 475 in file "SlaveComm_PIC18.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  5452 ;;		 -> communications@send_buffer(42), 
  5453 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  5454 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  5455 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  5456 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  5457 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  5458 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  5459 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  5460 ;;		 -> STR_10(5), STR_9(4), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  inx             2   28[COMRAM] int 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5472 ;;      Params:         4       0       0       0       0       0       0
  5473 ;;      Locals:         2       0       0       0       0       0       0
  5474 ;;      Temps:          2       0       0       0       0       0       0
  5475 ;;      Totals:         8       0       0       0       0       0       0
  5476 ;;Total ram usage:        8 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		_command_builder_add_char
  5481 ;; This function is called by:
  5482 ;;		_command_builder1
  5483 ;;		_command_builder3
  5484 ;;		_command_builder2
  5485 ;;		_command_builder4
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text33
  5490  001420                     __ptext33:
  5491                           	opt stack 0
  5492  001420                     _command_builder_add_string:
  5493                           	opt stack 24
  5494                           
  5495                           ;SlaveComm_PIC18.c: 477: for (int inx = 0; data_string[inx] != '\0'; inx++)
  5496                           
  5497                           ;incstack = 0
  5498  001420  0E00               	movlw	0
  5499  001422  6E1E               	movwf	command_builder_add_string@inx+1,c
  5500  001424  0E00               	movlw	0
  5501  001426  6E1D               	movwf	command_builder_add_string@inx,c
  5502  001428  D01F               	goto	l427
  5503  00142A                     
  5504                           ;SlaveComm_PIC18.c: 478: {
  5505                           ;SlaveComm_PIC18.c: 479: command_builder_add_char(send_buffer, data_string[inx]);
  5506  00142A  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  5507  00142E  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  5508  001432  501D               	movf	command_builder_add_string@inx,w,c
  5509  001434  2419               	addwf	command_builder_add_string@data_string,w,c
  5510  001436  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5511  001438  501E               	movf	command_builder_add_string@inx+1,w,c
  5512  00143A  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5513  00143C  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5514  00143E  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5515  001442  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5516  001446  6AF8               	clrf	tblptru,c
  5517  001448  0E05               	movlw	(high __ramtop+-1)
  5518  00144A  64F7               	cpfsgt	tblptrh,c
  5519  00144C  D003               	bra	u2127
  5520  00144E  0008               	tblrd		*
  5521  001450  50F5               	movf	tablat,w,c
  5522  001452  D005               	bra	u2120
  5523  001454                     u2127:
  5524  001454  CFF6 FFE1          	movff	tblptrl,fsr1l
  5525  001458  CFF7 FFE2          	movff	tblptrh,fsr1h
  5526  00145C  50E7               	movf	indf1,w,c
  5527  00145E                     u2120:
  5528  00145E  6E15               	movwf	command_builder_add_char@data,c
  5529  001460  EC16  F00B         	call	_command_builder_add_char	;wreg free
  5530  001464  4A1D               	infsnz	command_builder_add_string@inx,f,c
  5531  001466  2A1E               	incf	command_builder_add_string@inx+1,f,c
  5532  001468                     l427:
  5533  001468  501D               	movf	command_builder_add_string@inx,w,c
  5534  00146A  2419               	addwf	command_builder_add_string@data_string,w,c
  5535  00146C  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  5536  00146E  501E               	movf	command_builder_add_string@inx+1,w,c
  5537  001470  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  5538  001472  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  5539  001474  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  5540  001478  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5541  00147C  6AF8               	clrf	tblptru,c
  5542  00147E  0E05               	movlw	(high __ramtop+-1)
  5543  001480  64F7               	cpfsgt	tblptrh,c
  5544  001482  D003               	bra	u2137
  5545  001484  0008               	tblrd		*
  5546  001486  50F5               	movf	tablat,w,c
  5547  001488  D005               	bra	u2130
  5548  00148A                     u2137:
  5549  00148A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5550  00148E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5551  001492  50E7               	movf	indf1,w,c
  5552  001494                     u2130:
  5553  001494  0900               	iorlw	0
  5554  001496  B4D8               	btfsc	status,2,c
  5555  001498  0012               	return	
  5556  00149A  D7C7               	goto	l428
  5557  00149C                     __end_of_command_builder_add_string:
  5558                           	opt stack 0
  5559                           tblptru	equ	0xFF8
  5560                           tblptrh	equ	0xFF7
  5561                           tblptrl	equ	0xFF6
  5562                           tablat	equ	0xFF5
  5563                           prodh	equ	0xFF4
  5564                           prodl	equ	0xFF3
  5565                           intcon	equ	0xFF2
  5566                           intcon2	equ	0xFF1
  5567                           intcon3	equ	0xFF0
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           indf1	equ	0xFE7
  5571                           postinc1	equ	0xFE6
  5572                           postdec1	equ	0xFE5
  5573                           fsr1h	equ	0xFE2
  5574                           fsr1l	equ	0xFE1
  5575                           indf2	equ	0xFDF
  5576                           postinc2	equ	0xFDE
  5577                           postdec2	equ	0xFDD
  5578                           fsr2h	equ	0xFDA
  5579                           fsr2l	equ	0xFD9
  5580                           status	equ	0xFD8
  5581                           
  5582 ;; *************** function _command_builder_add_char *****************
  5583 ;; Defined at:
  5584 ;;		line 462 in file "SlaveComm_PIC18.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  5587 ;;		 -> communications@send_buffer(42), 
  5588 ;;  data            1   20[COMRAM] unsigned char 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5600 ;;      Params:         3       0       0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0
  5602 ;;      Temps:          1       0       0       0       0       0       0
  5603 ;;      Totals:         4       0       0       0       0       0       0
  5604 ;;Total ram usage:        4 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_command_builder1
  5611 ;;		_command_builder3
  5612 ;;		_command_builder_add_string
  5613 ;;		_command_builder2
  5614 ;;		_command_builder4
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text34
  5619  00162C                     __ptext34:
  5620                           	opt stack 0
  5621  00162C                     _command_builder_add_char:
  5622                           	opt stack 24
  5623                           
  5624                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5625                           
  5626                           ;incstack = 0
  5627  00162C  EE20 F028          	lfsr	2,40
  5628  001630  5013               	movf	command_builder_add_char@send_buffer,w,c
  5629  001632  26D9               	addwf	fsr2l,f,c
  5630  001634  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5631  001636  22DA               	addwfc	fsr2h,f,c
  5632  001638  50DF               	movf	indf2,w,c
  5633  00163A  6E16               	movwf	??_command_builder_add_char& (0+255),c
  5634  00163C  5016               	movf	??_command_builder_add_char,w,c
  5635  00163E  0D01               	mullw	1
  5636  001640  50F3               	movf	prodl,w,c
  5637  001642  2413               	addwf	command_builder_add_char@send_buffer,w,c
  5638  001644  6ED9               	movwf	fsr2l,c
  5639  001646  50F4               	movf	prodh,w,c
  5640  001648  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5641  00164A  6EDA               	movwf	fsr2h,c
  5642  00164C  C015  FFDF         	movff	command_builder_add_char@data,indf2
  5643                           
  5644                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5645  001650  EE20 F028          	lfsr	2,40
  5646  001654  5013               	movf	command_builder_add_char@send_buffer,w,c
  5647  001656  26D9               	addwf	fsr2l,f,c
  5648  001658  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5649  00165A  22DA               	addwfc	fsr2h,f,c
  5650  00165C  2ADF               	incf	indf2,f,c
  5651                           
  5652                           ;SlaveComm_PIC18.c: 467: if (send_buffer->write_position >= 40)
  5653  00165E  EE20 F028          	lfsr	2,40
  5654  001662  5013               	movf	command_builder_add_char@send_buffer,w,c
  5655  001664  26D9               	addwf	fsr2l,f,c
  5656  001666  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5657  001668  22DA               	addwfc	fsr2h,f,c
  5658  00166A  0E27               	movlw	39
  5659  00166C  64DF               	cpfsgt	indf2,c
  5660  00166E  0012               	return	
  5661                           
  5662                           ;SlaveComm_PIC18.c: 468: {
  5663                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5664  001670  EE20 F028          	lfsr	2,40
  5665  001674  5013               	movf	command_builder_add_char@send_buffer,w,c
  5666  001676  26D9               	addwf	fsr2l,f,c
  5667  001678  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  5668  00167A  22DA               	addwfc	fsr2h,f,c
  5669  00167C  0E00               	movlw	0
  5670  00167E  6EDF               	movwf	indf2,c
  5671  001680  0012               	return	
  5672  001682                     __end_of_command_builder_add_char:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           intcon2	equ	0xFF1
  5682                           intcon3	equ	0xFF0
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           indf1	equ	0xFE7
  5686                           postinc1	equ	0xFE6
  5687                           postdec1	equ	0xFE5
  5688                           fsr1h	equ	0xFE2
  5689                           fsr1l	equ	0xFE1
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _atol *****************
  5698 ;; Defined at:
  5699 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  s               2   30[COMRAM] PTR const unsigned char 
  5702 ;;		 -> process_data@parameters(50), 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  a               4   39[COMRAM] long 
  5705 ;;  c               1   43[COMRAM] unsigned char 
  5706 ;;  sign            1   38[COMRAM] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  4   30[COMRAM] long 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5716 ;;      Params:         4       0       0       0       0       0       0
  5717 ;;      Locals:         6       0       0       0       0       0       0
  5718 ;;      Temps:          4       0       0       0       0       0       0
  5719 ;;      Totals:        14       0       0       0       0       0       0
  5720 ;;Total ram usage:       14 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    2
  5723 ;; This function calls:
  5724 ;;		___lmul
  5725 ;;		_isdigit
  5726 ;; This function is called by:
  5727 ;;		_process_data_parameters
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text35
  5732  000DA4                     __ptext35:
  5733                           	opt stack 0
  5734  000DA4                     _atol:
  5735                           	opt stack 25
  5736                           
  5737                           ;incstack = 0
  5738  000DA4  C01F  FFD9         	movff	atol@s,fsr2l
  5739  000DA8  C020  FFDA         	movff	atol@s+1,fsr2h
  5740  000DAC  50DF               	movf	indf2,w,c
  5741  000DAE  6E2C               	movwf	atol@c,c
  5742  000DB0  4A1F               	infsnz	atol@s,f,c
  5743  000DB2  2A20               	incf	atol@s+1,f,c
  5744  000DB4  0E20               	movlw	32
  5745  000DB6  182C               	xorwf	atol@c,w,c
  5746  000DB8  B4D8               	btfsc	status,2,c
  5747  000DBA  D7F4               	goto	_atol
  5748  000DBC  0E09               	movlw	9
  5749  000DBE  182C               	xorwf	atol@c,w,c
  5750  000DC0  B4D8               	btfsc	status,2,c
  5751  000DC2  D7F0               	goto	_atol
  5752  000DC4  0E00               	movlw	0
  5753  000DC6  6E28               	movwf	atol@a,c
  5754  000DC8  0E00               	movlw	0
  5755  000DCA  6E29               	movwf	atol@a+1,c
  5756  000DCC  0E00               	movlw	0
  5757  000DCE  6E2A               	movwf	atol@a+2,c
  5758  000DD0  0E00               	movlw	0
  5759  000DD2  6E2B               	movwf	atol@a+3,c
  5760  000DD4  0E00               	movlw	0
  5761  000DD6  6E27               	movwf	atol@sign,c
  5762  000DD8  0E2D               	movlw	45
  5763  000DDA  182C               	xorwf	atol@c,w,c
  5764  000DDC  A4D8               	btfss	status,2,c
  5765  000DDE  D002               	goto	l659
  5766  000DE0  2A27               	incf	atol@sign,f,c
  5767  000DE2  D027               	goto	L3
  5768  000DE4                     l659:
  5769  000DE4  0E2B               	movlw	43
  5770  000DE6  182C               	xorwf	atol@c,w,c
  5771  000DE8  A4D8               	btfss	status,2,c
  5772  000DEA  D02B               	goto	l662
  5773  000DEC  D022               	goto	L3
  5774  000DEE  C028  F013         	movff	atol@a,___lmul@multiplier
  5775  000DF2  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  5776  000DF6  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  5777  000DFA  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  5778  000DFE  0E0A               	movlw	10
  5779  000E00  6E17               	movwf	___lmul@multiplicand,c
  5780  000E02  0E00               	movlw	0
  5781  000E04  6E18               	movwf	___lmul@multiplicand+1,c
  5782  000E06  0E00               	movlw	0
  5783  000E08  6E19               	movwf	___lmul@multiplicand+2,c
  5784  000E0A  0E00               	movlw	0
  5785  000E0C  6E1A               	movwf	___lmul@multiplicand+3,c
  5786  000E0E  EC41  F00B         	call	___lmul	;wreg free
  5787  000E12  C02C  F023         	movff	atol@c,??_atol
  5788  000E16  0ED0               	movlw	208
  5789  000E18  2623               	addwf	??_atol,f,c
  5790  000E1A  5023               	movf	??_atol,w,c
  5791  000E1C  2413               	addwf	?___lmul,w,c
  5792  000E1E  6E28               	movwf	atol@a,c
  5793  000E20  0E00               	movlw	0
  5794  000E22  2014               	addwfc	?___lmul+1,w,c
  5795  000E24  6E29               	movwf	atol@a+1,c
  5796  000E26  0E00               	movlw	0
  5797  000E28  2015               	addwfc	?___lmul+2,w,c
  5798  000E2A  6E2A               	movwf	atol@a+2,c
  5799  000E2C  0E00               	movlw	0
  5800  000E2E  2016               	addwfc	?___lmul+3,w,c
  5801  000E30  6E2B               	movwf	atol@a+3,c
  5802  000E32                     L3:
  5803  000E32  C01F  FFD9         	movff	atol@s,fsr2l
  5804  000E36  C020  FFDA         	movff	atol@s+1,fsr2h
  5805  000E3A  50DF               	movf	indf2,w,c
  5806  000E3C  6E2C               	movwf	atol@c,c
  5807  000E3E  4A1F               	infsnz	atol@s,f,c
  5808  000E40  2A20               	incf	atol@s+1,f,c
  5809  000E42                     l662:
  5810  000E42  502C               	movf	atol@c,w,c
  5811  000E44  ECB4  F00C         	call	_isdigit
  5812  000E48  B0D8               	btfsc	status,0,c
  5813  000E4A  D7D1               	goto	l663
  5814  000E4C  5027               	movf	atol@sign,w,c
  5815  000E4E  B4D8               	btfsc	status,2,c
  5816  000E50  D01A               	goto	l665
  5817  000E52  C028  F023         	movff	atol@a,??_atol
  5818  000E56  C029  F024         	movff	atol@a+1,??_atol+1
  5819  000E5A  C02A  F025         	movff	atol@a+2,??_atol+2
  5820  000E5E  C02B  F026         	movff	atol@a+3,??_atol+3
  5821  000E62  1E23               	comf	??_atol,f,c
  5822  000E64  1E24               	comf	??_atol+1,f,c
  5823  000E66  1E25               	comf	??_atol+2,f,c
  5824  000E68  1E26               	comf	??_atol+3,f,c
  5825  000E6A  2A23               	incf	??_atol,f,c
  5826  000E6C  0E00               	movlw	0
  5827  000E6E  2224               	addwfc	??_atol+1,f,c
  5828  000E70  2225               	addwfc	??_atol+2,f,c
  5829  000E72  2226               	addwfc	??_atol+3,f,c
  5830  000E74  C023  F01F         	movff	??_atol,?_atol
  5831  000E78  C024  F020         	movff	??_atol+1,?_atol+1
  5832  000E7C  C025  F021         	movff	??_atol+2,?_atol+2
  5833  000E80  C026  F022         	movff	??_atol+3,?_atol+3
  5834  000E84  0012               	return	
  5835  000E86                     l665:
  5836  000E86  C028  F01F         	movff	atol@a,?_atol
  5837  000E8A  C029  F020         	movff	atol@a+1,?_atol+1
  5838  000E8E  C02A  F021         	movff	atol@a+2,?_atol+2
  5839  000E92  C02B  F022         	movff	atol@a+3,?_atol+3
  5840  000E96  0012               	return		;funcret
  5841  000E98                     __end_of_atol:
  5842                           	opt stack 0
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           prodh	equ	0xFF4
  5848                           prodl	equ	0xFF3
  5849                           intcon	equ	0xFF2
  5850                           intcon2	equ	0xFF1
  5851                           intcon3	equ	0xFF0
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           indf1	equ	0xFE7
  5855                           postinc1	equ	0xFE6
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           postdec2	equ	0xFDD
  5862                           fsr2h	equ	0xFDA
  5863                           fsr2l	equ	0xFD9
  5864                           status	equ	0xFD8
  5865                           
  5866 ;; *************** function _isdigit *****************
  5867 ;; Defined at:
  5868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  c               1    wreg     unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  c               1   20[COMRAM] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;		None               void
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5882 ;;      Params:         0       0       0       0       0       0       0
  5883 ;;      Locals:         2       0       0       0       0       0       0
  5884 ;;      Temps:          1       0       0       0       0       0       0
  5885 ;;      Totals:         3       0       0       0       0       0       0
  5886 ;;Total ram usage:        3 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    1
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_atol
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text36
  5897  001968                     __ptext36:
  5898                           	opt stack 0
  5899  001968                     _isdigit:
  5900                           	opt stack 25
  5901                           
  5902                           ;incstack = 0
  5903                           ;isdigit@c stored from wreg
  5904  001968  6E15               	movwf	isdigit@c,c
  5905  00196A  0E00               	movlw	0
  5906  00196C  6E14               	movwf	_isdigit$2582,c
  5907  00196E  0E3A               	movlw	58
  5908  001970  6015               	cpfslt	isdigit@c,c
  5909  001972  D005               	goto	l837
  5910  001974  0E2F               	movlw	47
  5911  001976  6415               	cpfsgt	isdigit@c,c
  5912  001978  D002               	goto	l837
  5913  00197A  0E01               	movlw	1
  5914  00197C  6E14               	movwf	_isdigit$2582,c
  5915  00197E                     l837:
  5916  00197E  C014  F013         	movff	_isdigit$2582,??_isdigit
  5917  001982  3013               	rrcf	??_isdigit,w,c
  5918  001984  0012               	return	
  5919  001986                     __end_of_isdigit:
  5920                           	opt stack 0
  5921                           tblptru	equ	0xFF8
  5922                           tblptrh	equ	0xFF7
  5923                           tblptrl	equ	0xFF6
  5924                           tablat	equ	0xFF5
  5925                           prodh	equ	0xFF4
  5926                           prodl	equ	0xFF3
  5927                           intcon	equ	0xFF2
  5928                           intcon2	equ	0xFF1
  5929                           intcon3	equ	0xFF0
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           indf1	equ	0xFE7
  5933                           postinc1	equ	0xFE6
  5934                           postdec1	equ	0xFE5
  5935                           fsr1h	equ	0xFE2
  5936                           fsr1l	equ	0xFE1
  5937                           indf2	equ	0xFDF
  5938                           postinc2	equ	0xFDE
  5939                           postdec2	equ	0xFDD
  5940                           fsr2h	equ	0xFDA
  5941                           fsr2l	equ	0xFD9
  5942                           status	equ	0xFD8
  5943                           
  5944 ;; *************** function ___lmul *****************
  5945 ;; Defined at:
  5946 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  multiplier      4   18[COMRAM] unsigned long 
  5949 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  product         4   26[COMRAM] unsigned long 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  4   18[COMRAM] unsigned long 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5961 ;;      Params:         8       0       0       0       0       0       0
  5962 ;;      Locals:         4       0       0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0
  5964 ;;      Totals:        12       0       0       0       0       0       0
  5965 ;;Total ram usage:       12 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    1
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_atol
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text37
  5976  001682                     __ptext37:
  5977                           	opt stack 0
  5978  001682                     ___lmul:
  5979                           	opt stack 25
  5980                           
  5981                           ;incstack = 0
  5982  001682  0E00               	movlw	0
  5983  001684  6E1B               	movwf	___lmul@product,c
  5984  001686  0E00               	movlw	0
  5985  001688  6E1C               	movwf	___lmul@product+1,c
  5986  00168A  0E00               	movlw	0
  5987  00168C  6E1D               	movwf	___lmul@product+2,c
  5988  00168E  0E00               	movlw	0
  5989  001690  6E1E               	movwf	___lmul@product+3,c
  5990  001692  A013               	btfss	___lmul@multiplier,0,c
  5991  001694  D008               	goto	l506
  5992  001696  5017               	movf	___lmul@multiplicand,w,c
  5993  001698  261B               	addwf	___lmul@product,f,c
  5994  00169A  5018               	movf	___lmul@multiplicand+1,w,c
  5995  00169C  221C               	addwfc	___lmul@product+1,f,c
  5996  00169E  5019               	movf	___lmul@multiplicand+2,w,c
  5997  0016A0  221D               	addwfc	___lmul@product+2,f,c
  5998  0016A2  501A               	movf	___lmul@multiplicand+3,w,c
  5999  0016A4  221E               	addwfc	___lmul@product+3,f,c
  6000  0016A6                     l506:
  6001  0016A6  90D8               	bcf	status,0,c
  6002  0016A8  3617               	rlcf	___lmul@multiplicand,f,c
  6003  0016AA  3618               	rlcf	___lmul@multiplicand+1,f,c
  6004  0016AC  3619               	rlcf	___lmul@multiplicand+2,f,c
  6005  0016AE  361A               	rlcf	___lmul@multiplicand+3,f,c
  6006  0016B0  90D8               	bcf	status,0,c
  6007  0016B2  3216               	rrcf	___lmul@multiplier+3,f,c
  6008  0016B4  3215               	rrcf	___lmul@multiplier+2,f,c
  6009  0016B6  3214               	rrcf	___lmul@multiplier+1,f,c
  6010  0016B8  3213               	rrcf	___lmul@multiplier,f,c
  6011  0016BA  5013               	movf	___lmul@multiplier,w,c
  6012  0016BC  1014               	iorwf	___lmul@multiplier+1,w,c
  6013  0016BE  1015               	iorwf	___lmul@multiplier+2,w,c
  6014  0016C0  1016               	iorwf	___lmul@multiplier+3,w,c
  6015  0016C2  A4D8               	btfss	status,2,c
  6016  0016C4  D7E6               	goto	l505
  6017  0016C6  C01B  F013         	movff	___lmul@product,?___lmul
  6018  0016CA  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  6019  0016CE  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  6020  0016D2  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  6021  0016D6  0012               	return		;funcret
  6022  0016D8                     __end_of___lmul:
  6023                           	opt stack 0
  6024                           tblptru	equ	0xFF8
  6025                           tblptrh	equ	0xFF7
  6026                           tblptrl	equ	0xFF6
  6027                           tablat	equ	0xFF5
  6028                           prodh	equ	0xFF4
  6029                           prodl	equ	0xFF3
  6030                           intcon	equ	0xFF2
  6031                           intcon2	equ	0xFF1
  6032                           intcon3	equ	0xFF0
  6033                           postinc0	equ	0xFEE
  6034                           wreg	equ	0xFE8
  6035                           indf1	equ	0xFE7
  6036                           postinc1	equ	0xFE6
  6037                           postdec1	equ	0xFE5
  6038                           fsr1h	equ	0xFE2
  6039                           fsr1l	equ	0xFE1
  6040                           indf2	equ	0xFDF
  6041                           postinc2	equ	0xFDE
  6042                           postdec2	equ	0xFDD
  6043                           fsr2h	equ	0xFDA
  6044                           fsr2l	equ	0xFD9
  6045                           status	equ	0xFD8
  6046                           
  6047 ;; *************** function _process_data_parameterize *****************
  6048 ;; Defined at:
  6049 ;;		line 256 in file "SlaveComm_PIC18.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  6052 ;;		 -> process_data@parameters(50), 
  6053 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  6054 ;;		 -> communications@receive_buffer(42), 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  inx             2   31[COMRAM] int 
  6057 ;;  parameter_po    1   34[COMRAM] unsigned char 
  6058 ;;  parameter_in    1   33[COMRAM] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6068 ;;      Params:         4       0       0       0       0       0       0
  6069 ;;      Locals:         4       0       0       0       0       0       0
  6070 ;;      Temps:          3       0       0       0       0       0       0
  6071 ;;      Totals:        11       0       0       0       0       0       0
  6072 ;;Total ram usage:       11 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    2
  6075 ;; This function calls:
  6076 ;;		___wmul
  6077 ;; This function is called by:
  6078 ;;		_process_data
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text38
  6083  000906                     __ptext38:
  6084                           	opt stack 0
  6085  000906                     _process_data_parameterize:
  6086                           	opt stack 26
  6087                           
  6088                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  6089                           
  6090                           ;incstack = 0
  6091  000906  0E00               	movlw	0
  6092  000908  6E23               	movwf	process_data_parameterize@parameter_position,c
  6093                           
  6094                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  6095  00090A  0E00               	movlw	0
  6096  00090C  6E22               	movwf	process_data_parameterize@parameter_index,c
  6097                           
  6098                           ;SlaveComm_PIC18.c: 268: for (int inx = 0; inx < 5; inx++)
  6099  00090E  0E00               	movlw	0
  6100  000910  6E21               	movwf	process_data_parameterize@inx+1,c
  6101  000912  0E00               	movlw	0
  6102  000914  6E20               	movwf	process_data_parameterize@inx,c
  6103  000916  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6104  000918  D008               	goto	l364
  6105  00091A  5021               	movf	process_data_parameterize@inx+1,w,c
  6106  00091C  E105               	bnz	u2460
  6107  00091E  0E05               	movlw	5
  6108  000920  5C20               	subwf	process_data_parameterize@inx,w,c
  6109  000922  B0D8               	btfsc	status,0,c
  6110  000924  D082               	goto	l366
  6111  000926  D001               	goto	l364
  6112  000928                     u2460:
  6113  000928  D080               	goto	l366
  6114  00092A                     l364:
  6115                           
  6116                           ;SlaveComm_PIC18.c: 269: {
  6117                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  6118  00092A  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6119  00092E  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6120  000932  0E00               	movlw	0
  6121  000934  6E16               	movwf	___wmul@multiplicand+1,c
  6122  000936  0E0A               	movlw	10
  6123  000938  6E15               	movwf	___wmul@multiplicand,c
  6124  00093A  EC70  F00C         	call	___wmul	;wreg free
  6125  00093E  5013               	movf	?___wmul,w,c
  6126  000940  2419               	addwf	process_data_parameterize@parameters,w,c
  6127  000942  6ED9               	movwf	fsr2l,c
  6128  000944  5014               	movf	?___wmul+1,w,c
  6129  000946  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6130  000948  6EDA               	movwf	fsr2h,c
  6131  00094A  0E00               	movlw	0
  6132  00094C  6EDF               	movwf	indf2,c
  6133  00094E  4A20               	infsnz	process_data_parameterize@inx,f,c
  6134  000950  2A21               	incf	process_data_parameterize@inx+1,f,c
  6135  000952  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6136  000954  D7EA               	goto	l364
  6137  000956  5021               	movf	process_data_parameterize@inx+1,w,c
  6138  000958  E168               	bnz	l3102
  6139  00095A  D7E1               	goto	L2
  6140  00095C                     
  6141                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  6142  00095C  0E00               	movlw	0
  6143  00095E  6E23               	movwf	process_data_parameterize@parameter_position,c
  6144                           
  6145                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  6146  000960  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6147                           
  6148                           ;SlaveComm_PIC18.c: 285: if (parameter_index >= 5)
  6149  000962  0E04               	movlw	4
  6150  000964  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6151  000966  D05A               	goto	l370
  6152                           
  6153                           ;SlaveComm_PIC18.c: 286: {
  6154                           ;SlaveComm_PIC18.c: 289: parameter_index = (5 - 1);
  6155  000968  0E04               	movlw	4
  6156  00096A  6E22               	movwf	process_data_parameterize@parameter_index,c
  6157                           
  6158                           ;SlaveComm_PIC18.c: 290: }
  6159                           ;SlaveComm_PIC18.c: 292: break;
  6160  00096C  D057               	goto	l370
  6161  00096E                     
  6162                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6163  00096E  EE20 F029          	lfsr	2,41
  6164  000972  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6165  000974  26D9               	addwf	fsr2l,f,c
  6166  000976  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6167  000978  22DA               	addwfc	fsr2h,f,c
  6168  00097A  50DF               	movf	indf2,w,c
  6169  00097C  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6170  00097E  501D               	movf	??_process_data_parameterize,w,c
  6171  000980  0D01               	mullw	1
  6172  000982  50F3               	movf	prodl,w,c
  6173  000984  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6174  000986  6ED9               	movwf	fsr2l,c
  6175  000988  50F4               	movf	prodh,w,c
  6176  00098A  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6177  00098C  6EDA               	movwf	fsr2h,c
  6178  00098E  5022               	movf	process_data_parameterize@parameter_index,w,c
  6179  000990  0D0A               	mullw	10
  6180  000992  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6181  000996  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6182  00099A  50F3               	movf	prodl,w,c
  6183  00099C  261E               	addwf	??_process_data_parameterize+1,f,c
  6184  00099E  50F4               	movf	prodh,w,c
  6185  0009A0  221F               	addwfc	??_process_data_parameterize+2,f,c
  6186  0009A2  5023               	movf	process_data_parameterize@parameter_position,w,c
  6187  0009A4  0D01               	mullw	1
  6188  0009A6  50F3               	movf	prodl,w,c
  6189  0009A8  241E               	addwf	??_process_data_parameterize+1,w,c
  6190  0009AA  6EE1               	movwf	fsr1l,c
  6191  0009AC  50F4               	movf	prodh,w,c
  6192  0009AE  201F               	addwfc	??_process_data_parameterize+2,w,c
  6193  0009B0  6EE2               	movwf	fsr1h,c
  6194  0009B2  CFDF FFE7          	movff	indf2,indf1
  6195                           
  6196                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  6197  0009B6  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6198                           
  6199                           ;SlaveComm_PIC18.c: 297: if (parameter_position >= 10)
  6200  0009B8  0E09               	movlw	9
  6201  0009BA  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6202  0009BC  D002               	goto	l374
  6203                           
  6204                           ;SlaveComm_PIC18.c: 298: {
  6205                           ;SlaveComm_PIC18.c: 301: parameter_position = (10 - 1);
  6206  0009BE  0E09               	movlw	9
  6207  0009C0  6E23               	movwf	process_data_parameterize@parameter_position,c
  6208  0009C2                     l374:
  6209                           
  6210                           ;SlaveComm_PIC18.c: 302: }
  6211                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  6212  0009C2  5022               	movf	process_data_parameterize@parameter_index,w,c
  6213  0009C4  0D0A               	mullw	10
  6214  0009C6  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6215  0009CA  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6216  0009CE  50F3               	movf	prodl,w,c
  6217  0009D0  261D               	addwf	??_process_data_parameterize,f,c
  6218  0009D2  50F4               	movf	prodh,w,c
  6219  0009D4  221E               	addwfc	??_process_data_parameterize+1,f,c
  6220  0009D6  5023               	movf	process_data_parameterize@parameter_position,w,c
  6221  0009D8  0D01               	mullw	1
  6222  0009DA  50F3               	movf	prodl,w,c
  6223  0009DC  241D               	addwf	??_process_data_parameterize,w,c
  6224  0009DE  6ED9               	movwf	fsr2l,c
  6225  0009E0  50F4               	movf	prodh,w,c
  6226  0009E2  201E               	addwfc	??_process_data_parameterize+1,w,c
  6227  0009E4  6EDA               	movwf	fsr2h,c
  6228  0009E6  0E00               	movlw	0
  6229  0009E8  6EDF               	movwf	indf2,c
  6230                           
  6231                           ;SlaveComm_PIC18.c: 307: }
  6232                           
  6233                           ;SlaveComm_PIC18.c: 306: break;
  6234  0009EA  D018               	goto	l370
  6235  0009EC  EE20 F029          	lfsr	2,41
  6236  0009F0  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6237  0009F2  26D9               	addwf	fsr2l,f,c
  6238  0009F4  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6239  0009F6  22DA               	addwfc	fsr2h,f,c
  6240  0009F8  50DF               	movf	indf2,w,c
  6241  0009FA  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6242  0009FC  501D               	movf	??_process_data_parameterize,w,c
  6243  0009FE  0D01               	mullw	1
  6244  000A00  50F3               	movf	prodl,w,c
  6245  000A02  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6246  000A04  6ED9               	movwf	fsr2l,c
  6247  000A06  50F4               	movf	prodh,w,c
  6248  000A08  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6249  000A0A  6EDA               	movwf	fsr2h,c
  6250  000A0C  50DF               	movf	indf2,w,c
  6251                           
  6252                           ; Switch size 1, requested type "space"
  6253                           ; Number of cases is 2, Range of values is 33 to 59
  6254                           ; switch strategies available:
  6255                           ; Name         Instructions Cycles
  6256                           ; simple_byte            7     4 (average)
  6257                           ;	Chosen strategy is simple_byte
  6258  000A0E  0A21               	xorlw	33	; case 33
  6259  000A10  B4D8               	btfsc	status,2,c
  6260  000A12  D004               	goto	l370
  6261  000A14  0A1A               	xorlw	26	; case 59
  6262  000A16  B4D8               	btfsc	status,2,c
  6263  000A18  D7A1               	goto	l371
  6264  000A1A  D7A9               	goto	l373
  6265  000A1C                     l370:
  6266                           
  6267                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  6268  000A1C  EE20 F029          	lfsr	2,41
  6269  000A20  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6270  000A22  26D9               	addwf	fsr2l,f,c
  6271  000A24  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6272  000A26  22DA               	addwfc	fsr2h,f,c
  6273  000A28  2ADF               	incf	indf2,f,c
  6274  000A2A                     l366:
  6275  000A2A                     l3102:
  6276  000A2A  EE20 F029          	lfsr	2,41
  6277  000A2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6278  000A30  26D9               	addwf	fsr2l,f,c
  6279  000A32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6280  000A34  22DA               	addwfc	fsr2h,f,c
  6281  000A36  50DF               	movf	indf2,w,c
  6282  000A38  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6283  000A3A  501D               	movf	??_process_data_parameterize,w,c
  6284  000A3C  0D01               	mullw	1
  6285  000A3E  50F3               	movf	prodl,w,c
  6286  000A40  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6287  000A42  6ED9               	movwf	fsr2l,c
  6288  000A44  50F4               	movf	prodh,w,c
  6289  000A46  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6290  000A48  6EDA               	movwf	fsr2h,c
  6291  000A4A  0E2A               	movlw	42
  6292  000A4C  18DE               	xorwf	postinc2,w,c
  6293  000A4E  B4D8               	btfsc	status,2,c
  6294  000A50  0012               	return	
  6295  000A52  EE20 F029          	lfsr	2,41
  6296  000A56  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6297  000A58  26D9               	addwf	fsr2l,f,c
  6298  000A5A  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6299  000A5C  22DA               	addwfc	fsr2h,f,c
  6300  000A5E  0E28               	movlw	40
  6301  000A60  60DF               	cpfslt	indf2,c
  6302  000A62  0012               	return	
  6303  000A64  EE20 F028          	lfsr	2,40
  6304  000A68  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6305  000A6A  26D9               	addwf	fsr2l,f,c
  6306  000A6C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6307  000A6E  22DA               	addwfc	fsr2h,f,c
  6308  000A70  EE10 F029          	lfsr	1,41
  6309  000A74  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6310  000A76  26E1               	addwf	fsr1l,f,c
  6311  000A78  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6312  000A7A  22E2               	addwfc	fsr1h,f,c
  6313  000A7C  50DE               	movf	postinc2,w,c
  6314  000A7E  18E6               	xorwf	postinc1,w,c
  6315  000A80  B4D8               	btfsc	status,2,c
  6316  000A82  0012               	return	
  6317  000A84  D7B3               	goto	l368
  6318  000A86                     __end_of_process_data_parameterize:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           intcon2	equ	0xFF1
  6328                           intcon3	equ	0xFF0
  6329                           postinc0	equ	0xFEE
  6330                           wreg	equ	0xFE8
  6331                           indf1	equ	0xFE7
  6332                           postinc1	equ	0xFE6
  6333                           postdec1	equ	0xFE5
  6334                           fsr1h	equ	0xFE2
  6335                           fsr1l	equ	0xFE1
  6336                           indf2	equ	0xFDF
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function ___wmul *****************
  6344 ;; Defined at:
  6345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  multiplier      2   18[COMRAM] unsigned int 
  6348 ;;  multiplicand    2   20[COMRAM] unsigned int 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  product         2   22[COMRAM] unsigned int 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  2   18[COMRAM] unsigned int 
  6353 ;; Registers used:
  6354 ;;		wreg, status,2, status,0, prodl, prodh
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6360 ;;      Params:         4       0       0       0       0       0       0
  6361 ;;      Locals:         2       0       0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0
  6363 ;;      Totals:         6       0       0       0       0       0       0
  6364 ;;Total ram usage:        6 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_powerCalculation
  6371 ;;		_process_data_parameterize
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text39
  6376  0018E0                     __ptext39:
  6377                           	opt stack 0
  6378  0018E0                     ___wmul:
  6379                           	opt stack 28
  6380                           
  6381                           ;incstack = 0
  6382  0018E0  5013               	movf	___wmul@multiplier,w,c
  6383  0018E2  0215               	mulwf	___wmul@multiplicand,c
  6384  0018E4  CFF3 F017          	movff	prodl,___wmul@product
  6385  0018E8  CFF4 F018          	movff	prodh,___wmul@product+1
  6386  0018EC  5013               	movf	___wmul@multiplier,w,c
  6387  0018EE  0216               	mulwf	___wmul@multiplicand+1,c
  6388  0018F0  50F3               	movf	prodl,w,c
  6389  0018F2  2618               	addwf	___wmul@product+1,f,c
  6390  0018F4  5014               	movf	___wmul@multiplier+1,w,c
  6391  0018F6  0215               	mulwf	___wmul@multiplicand,c
  6392  0018F8  50F3               	movf	prodl,w,c
  6393  0018FA  2618               	addwf	___wmul@product+1,f,c
  6394  0018FC  C017  F013         	movff	___wmul@product,?___wmul
  6395  001900  C018  F014         	movff	___wmul@product+1,?___wmul+1
  6396  001904  0012               	return	
  6397  001906                     __end_of___wmul:
  6398                           	opt stack 0
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           prodh	equ	0xFF4
  6404                           prodl	equ	0xFF3
  6405                           intcon	equ	0xFF2
  6406                           intcon2	equ	0xFF1
  6407                           intcon3	equ	0xFF0
  6408                           postinc0	equ	0xFEE
  6409                           wreg	equ	0xFE8
  6410                           indf1	equ	0xFE7
  6411                           postinc1	equ	0xFE6
  6412                           postdec1	equ	0xFE5
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           indf2	equ	0xFDF
  6416                           postinc2	equ	0xFDE
  6417                           postdec2	equ	0xFDD
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function _SPISlaveInit *****************
  6423 ;; Defined at:
  6424 ;;		line 669 in file "SlaveComm_PIC18.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6438 ;;      Params:         0       0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0
  6441 ;;      Totals:         0       0       0       0       0       0       0
  6442 ;;Total ram usage:        0 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_communications
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text40
  6453  0017B8                     __ptext40:
  6454                           	opt stack 0
  6455  0017B8                     _SPISlaveInit:
  6456                           	opt stack 28
  6457                           
  6458                           ;SlaveComm_PIC18.c: 672: TRISAbits.TRISA0 = 0;
  6459                           
  6460                           ;incstack = 0
  6461  0017B8  9092               	bcf	3986,0,c	;volatile
  6462                           
  6463                           ;SlaveComm_PIC18.c: 673: TRISAbits.TRISA1 = 1;
  6464  0017BA  8292               	bsf	3986,1,c	;volatile
  6465                           
  6466                           ;SlaveComm_PIC18.c: 675: TRISCbits.TRISC3 = 0;
  6467  0017BC  9694               	bcf	3988,3,c	;volatile
  6468                           
  6469                           ;SlaveComm_PIC18.c: 676: TRISCbits.TRISC5 = 0;
  6470  0017BE  9A94               	bcf	3988,5,c	;volatile
  6471                           
  6472                           ;SlaveComm_PIC18.c: 677: TRISCbits.TRISC6 = 0;
  6473  0017C0  9C94               	bcf	3988,6,c	;volatile
  6474                           
  6475                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC7 = 0;
  6476  0017C2  9E94               	bcf	3988,7,c	;volatile
  6477                           
  6478                           ;SlaveComm_PIC18.c: 679: ANSELAbits.ANSA1 = 0b0;
  6479  0017C4  010F               	movlb	15	; () banked
  6480  0017C6  9338               	bcf	56,1,b	;volatile
  6481                           
  6482                           ;SlaveComm_PIC18.c: 681: LATCbits.LATC6 = 1;
  6483  0017C8  8C8B               	bsf	3979,6,c	;volatile
  6484                           
  6485                           ;SlaveComm_PIC18.c: 682: LATCbits.LATC3 = 1;
  6486  0017CA  868B               	bsf	3979,3,c	;volatile
  6487                           
  6488                           ;SlaveComm_PIC18.c: 683: LATCbits.LATC5 = 1;
  6489  0017CC  8A8B               	bsf	3979,5,c	;volatile
  6490                           
  6491                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC7 = 1;
  6492  0017CE  8E8B               	bsf	3979,7,c	;volatile
  6493                           
  6494                           ;SlaveComm_PIC18.c: 687: SSP2CON1bits.SSPEN = 0;
  6495  0017D0  9A6C               	bcf	3948,5,c	;volatile
  6496                           
  6497                           ;SlaveComm_PIC18.c: 689: ANSELBbits.ANSB0 = 0b0;
  6498  0017D2  9139               	bcf	57,0,b	;volatile
  6499                           
  6500                           ;SlaveComm_PIC18.c: 690: ANSELBbits.ANSB1 = 0b0;
  6501  0017D4  9339               	bcf	57,1,b	;volatile
  6502                           
  6503                           ;SlaveComm_PIC18.c: 691: ANSELBbits.ANSB2 = 0b0;
  6504  0017D6  9539               	bcf	57,2,b	;volatile
  6505                           
  6506                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB3 = 0b0;
  6507  0017D8  9739               	bcf	57,3,b	;volatile
  6508                           
  6509                           ;SlaveComm_PIC18.c: 694: TRISBbits.RB0 = 0b1;
  6510  0017DA  8093               	bsf	3987,0,c	;volatile
  6511                           
  6512                           ;SlaveComm_PIC18.c: 695: TRISBbits.RB1 = 0b1;
  6513  0017DC  8293               	bsf	3987,1,c	;volatile
  6514                           
  6515                           ;SlaveComm_PIC18.c: 696: TRISBbits.RB2 = 0b1;
  6516  0017DE  8493               	bsf	3987,2,c	;volatile
  6517                           
  6518                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB3 = 0b0;
  6519  0017E0  9693               	bcf	3987,3,c	;volatile
  6520                           
  6521                           ;SlaveComm_PIC18.c: 699: SSP2STATbits.SMP = 0;
  6522  0017E2  9E6D               	bcf	3949,7,c	;volatile
  6523                           
  6524                           ;SlaveComm_PIC18.c: 700: SSP2STATbits.CKE = 1;
  6525  0017E4  8C6D               	bsf	3949,6,c	;volatile
  6526                           
  6527                           ;SlaveComm_PIC18.c: 702: SSP2CON1bits.WCOL = 0;
  6528  0017E6  9E6C               	bcf	3948,7,c	;volatile
  6529                           
  6530                           ;SlaveComm_PIC18.c: 703: SSP2CON1bits.SSPOV = 0;
  6531  0017E8  9C6C               	bcf	3948,6,c	;volatile
  6532                           
  6533                           ;SlaveComm_PIC18.c: 704: SSP2CON1bits.SSPEN = 0;
  6534  0017EA  9A6C               	bcf	3948,5,c	;volatile
  6535                           
  6536                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.CKP = 1;
  6537  0017EC  886C               	bsf	3948,4,c	;volatile
  6538                           
  6539                           ; BSR set to: 15
  6540                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPM = 0b0100;
  6541  0017EE  506C               	movf	3948,w,c	;volatile
  6542  0017F0  0BF0               	andlw	-16
  6543  0017F2  0904               	iorlw	4
  6544  0017F4  6E6C               	movwf	3948,c	;volatile
  6545                           
  6546                           ;SlaveComm_PIC18.c: 709: SSP2CON3 = 0x00;
  6547  0017F6  0E00               	movlw	0
  6548  0017F8  6E69               	movwf	3945,c	;volatile
  6549                           
  6550                           ; BSR set to: 15
  6551                           ;SlaveComm_PIC18.c: 710: SSP2CON3bits.BOEN = 0b0;
  6552  0017FA  9869               	bcf	3945,4,c	;volatile
  6553                           
  6554                           ; BSR set to: 15
  6555                           ;SlaveComm_PIC18.c: 712: SSP2CON1bits.SSPEN = 1;
  6556  0017FC  8A6C               	bsf	3948,5,c	;volatile
  6557  0017FE  0012               	return	
  6558  001800                     __end_of_SPISlaveInit:
  6559                           	opt stack 0
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           prodh	equ	0xFF4
  6565                           prodl	equ	0xFF3
  6566                           intcon	equ	0xFF2
  6567                           intcon2	equ	0xFF1
  6568                           intcon3	equ	0xFF0
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           indf1	equ	0xFE7
  6572                           postinc1	equ	0xFE6
  6573                           postdec1	equ	0xFE5
  6574                           fsr1h	equ	0xFE2
  6575                           fsr1l	equ	0xFE1
  6576                           indf2	equ	0xFDF
  6577                           postinc2	equ	0xFDE
  6578                           postdec2	equ	0xFDD
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _Timer0_ISR *****************
  6584 ;; Defined at:
  6585 ;;		line 227 in file "Current_Sense_Main.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1    wreg      void 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6599 ;;      Params:         0       0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0
  6601 ;;      Temps:         18       0       0       0       0       0       0
  6602 ;;      Totals:        18       0       0       0       0       0       0
  6603 ;;Total ram usage:       18 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		Interrupt level 2
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	intcode
  6613  000008                     __pintcode:
  6614                           	opt stack 0
  6615  000008                     _Timer0_ISR:
  6616                           	opt stack 23
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;incstack = 0
  6620  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6621  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  6622  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6623  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6624  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6625  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6626  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6627  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6628  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6629  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6630  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6631  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6632  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6633  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6634  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6635  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  6636  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  6637  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  6638  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  6639                           
  6640                           ;Current_Sense_Main.c: 230: INTCONbits.TMR0IF = 0;
  6641  000052  94F2               	bcf	intcon,2,c	;volatile
  6642                           
  6643                           ;Current_Sense_Main.c: 232: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6644  000054  0EFC               	movlw	252
  6645  000056  6ED7               	movwf	4055,c	;volatile
  6646                           
  6647                           ;Current_Sense_Main.c: 233: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6648  000058  0E18               	movlw	24
  6649  00005A  6ED6               	movwf	4054,c	;volatile
  6650                           
  6651                           ;Current_Sense_Main.c: 235: timerCountHF++;
  6652  00005C  0E01               	movlw	1
  6653  00005E  0100               	movlb	0	; () banked
  6654  000060  2784               	addwf	_timerCountHF& (0+255),f,b	;volatile
  6655  000062  0E00               	movlw	0
  6656  000064  2385               	addwfc	(_timerCountHF+1)& (0+255),f,b	;volatile
  6657  000066  2386               	addwfc	(_timerCountHF+2)& (0+255),f,b	;volatile
  6658  000068  2387               	addwfc	(_timerCountHF+3)& (0+255),f,b	;volatile
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;Current_Sense_Main.c: 236: timerCountLF++;
  6662  00006A  0E01               	movlw	1
  6663  00006C  2780               	addwf	_timerCountLF& (0+255),f,b	;volatile
  6664  00006E  0E00               	movlw	0
  6665  000070  2381               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  6666  000072  2382               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  6667  000074  2383               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  6668                           
  6669                           ;Current_Sense_Main.c: 237: dataAvailable = 1;
  6670  000076  0E01               	movlw	1
  6671  000078  6E49               	movwf	_dataAvailable,c
  6672                           
  6673                           ; BSR set to: 0
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;Current_Sense_Main.c: 239: return;
  6677  00007A  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  6678  00007E  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  6679  000082  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  6680  000086  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  6681  00008A  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6682  00008E  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6683  000092  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6684  000096  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6685  00009A  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6686  00009E  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6687  0000A2  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6688  0000A6  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6689  0000AA  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6690  0000AE  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6691  0000B2  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6692  0000B6  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6693  0000BA  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6694  0000BE  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6695  0000C2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6696  0000C4  0011               	retfie		f
  6697  0000C6                     __end_of_Timer0_ISR:
  6698                           	opt stack 0
  6699                           pclatu	equ	0xFFB
  6700                           pclath	equ	0xFFA
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           prodh	equ	0xFF4
  6706                           prodl	equ	0xFF3
  6707                           intcon	equ	0xFF2
  6708                           intcon2	equ	0xFF1
  6709                           intcon3	equ	0xFF0
  6710                           postinc0	equ	0xFEE
  6711                           fsr0h	equ	0xFEA
  6712                           fsr0l	equ	0xFE9
  6713                           wreg	equ	0xFE8
  6714                           indf1	equ	0xFE7
  6715                           postinc1	equ	0xFE6
  6716                           postdec1	equ	0xFE5
  6717                           fsr1h	equ	0xFE2
  6718                           fsr1l	equ	0xFE1
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           pclatu	equ	0xFFB
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           intcon3	equ	0xFF0
  6736                           postinc0	equ	0xFEE
  6737                           fsr0h	equ	0xFEA
  6738                           fsr0l	equ	0xFE9
  6739                           wreg	equ	0xFE8
  6740                           indf1	equ	0xFE7
  6741                           postinc1	equ	0xFE6
  6742                           postdec1	equ	0xFE5
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           indf2	equ	0xFDF
  6746                           postinc2	equ	0xFDE
  6747                           postdec2	equ	0xFDD
  6748                           fsr2h	equ	0xFDA
  6749                           fsr2l	equ	0xFD9
  6750                           status	equ	0xFD8
  6751                           
  6752                           	psect	rparam
  6753  0000                     pclatu	equ	0xFFB
  6754                           pclath	equ	0xFFA
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           intcon	equ	0xFF2
  6762                           intcon2	equ	0xFF1
  6763                           intcon3	equ	0xFF0
  6764                           postinc0	equ	0xFEE
  6765                           fsr0h	equ	0xFEA
  6766                           fsr0l	equ	0xFE9
  6767                           wreg	equ	0xFE8
  6768                           indf1	equ	0xFE7
  6769                           postinc1	equ	0xFE6
  6770                           postdec1	equ	0xFE5
  6771                           fsr1h	equ	0xFE2
  6772                           fsr1l	equ	0xFE1
  6773                           indf2	equ	0xFDF
  6774                           postinc2	equ	0xFDE
  6775                           postdec2	equ	0xFDD
  6776                           fsr2h	equ	0xFDA
  6777                           fsr2l	equ	0xFD9
  6778                           status	equ	0xFD8
  6779                           
  6780                           	psect	temp
  6781  00004D                     btemp:
  6782                           	opt stack 0
  6783  00004D                     	ds	1
  6784  0000                     int$flags	set	btemp
  6785  0000                     wtemp6	set	btemp+1
  6786                           pclatu	equ	0xFFB
  6787                           pclath	equ	0xFFA
  6788                           tblptru	equ	0xFF8
  6789                           tblptrh	equ	0xFF7
  6790                           tblptrl	equ	0xFF6
  6791                           tablat	equ	0xFF5
  6792                           prodh	equ	0xFF4
  6793                           prodl	equ	0xFF3
  6794                           intcon	equ	0xFF2
  6795                           intcon2	equ	0xFF1
  6796                           intcon3	equ	0xFF0
  6797                           postinc0	equ	0xFEE
  6798                           fsr0h	equ	0xFEA
  6799                           fsr0l	equ	0xFE9
  6800                           wreg	equ	0xFE8
  6801                           indf1	equ	0xFE7
  6802                           postinc1	equ	0xFE6
  6803                           postdec1	equ	0xFE5
  6804                           fsr1h	equ	0xFE2
  6805                           fsr1l	equ	0xFE1
  6806                           indf2	equ	0xFDF
  6807                           postinc2	equ	0xFDE
  6808                           postdec2	equ	0xFDD
  6809                           fsr2h	equ	0xFDA
  6810                           fsr2l	equ	0xFD9
  6811                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        6
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      76
    BANK0           160     17     115
    BANK1           256     51      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerCalculation->___awdiv
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   98759
                                             12 BANK0      5     5      0
                     _communications
                          _delayMS10
                   _energyPulseCheck
                               _init
                            _initMCP
                          _initTimer
                   _powerCalculation
                  _pulseFoutPassThru
                     _readSerialData
 ---------------------------------------------------------------------------------
 (1) _readSerialData                                       1     1      0      65
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerCalculation                                     9     9      0    1750
                                             26 COMRAM     9     9      0
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                             _initIO
                _initInterruptsClear
                            _initMCP
                            _initOSC
                            _initSPI
 ---------------------------------------------------------------------------------
 (2) _initSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCP                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _energyPulseCheck                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     428
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   96343
                                             55 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   45863
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   15906
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     598
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             51 COMRAM     4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47206
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   15996
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2200
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     601
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1841
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _energyPulseCheck
   _init
     _initIO
     _initInterruptsClear
     _initMCP
     _initOSC
     _initSPI
   _initMCP
   _initTimer
   _powerCalculation
     ___awdiv
     ___wmul
   _pulseFoutPassThru
   _readSerialData

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      73       4       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C       9        0.0%
DATA                 0      0     11C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 30 14:11:38 2018

                                       _SPISlaveInit 17B8                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                         __CFG_CP0$OFF 000000  
                                       __CFG_CP1$OFF 000000                                         __CFG_CP2$OFF 000000  
                                       __CFG_CP3$OFF 000000                                                  l210 0C64  
                                                l211 0C46                                                  l140 0F3C  
                                                l213 0CAC                                                  l151 191E  
                                                l135 0EB6                                                  l216 181C  
                                                l208 0C24                                                  l401 0880  
                                                l217 180A                                                  l137 0EEA  
                                                l403 08AC                                                  l323 1216  
                                                l405 08D8                                                  l341 1134  
                                                l333 1272                                                  l325 1246  
                                                l149 1922                                                  l342 1100  
                                                l166 156A                                                  l190 11BC  
                                                l407 0902                                                  l335 1284  
                                                l327 125A                                                  l352 0F6C  
                                                l344 110E                                                  l168 1544  
                                                l192 11D0                                                  l505 1692  
                                                l345 111C                                                  l433 12B6  
                                                l329 1226                                                  l169 1528  
                                                l370 0A1C                                                  l506 16A6  
                                                l354 0FB0                                                  l346 1128  
                                                l186 117C                                                  l371 095C  
                                                l427 1468                                                  l443 0B02  
                                                l364 092A                                                  l428 142A  
                                                l444 0A98                                                  l460 18B6  
                                                l356 100A                                                  l436 1316  
                                                l188 11A6                                                  l373 096E  
                                                l453 0B70                                                  l445 0ACC  
                                                l381 0684                                                  l357 101C  
                                                l366 0A2A                                                  l374 09C2  
                                                l390 07E2                                                  l455 0BA8  
                                                l447 0AFE                                                  l383 0708  
                                                l368 09EC                                                  l392 079E  
                                                l464 1942                                                  l459 18B2  
                                                l397 0828                                                  l662 0E42  
                                                l663 0DEE                                                  l399 0854  
                                                l665 0E86                                                  l682 137C  
                                                l659 0DE4                                                  l683 1386  
                                                l675 132E                                                  l916 0CBE  
                                                l684 1394                                                  l676 133E  
                                                l837 197E                                                  l918 0D16  
                                                l678 135C                                                  l863 13CC  
                                                l919 0D80                                                  l679 1354  
                                                l864 13C0                                                  l873 158E  
                                                l874 1582                                                  l867 1400  
                                                l868 140E                                                  l877 15B6  
                                                l878 15C4                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                            powerCalculation@counter 0092                                                 l3102 0A2A  
                                               l3544 0EA6                                                 l3458 1528  
                                               l3562 0EEA                                                 l3556 0EDA  
                                               l3582 0F2C                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2120 145E  
                                               u2130 1494                                                 u3110 0EDA  
                                               u2127 1454                                                 u2160 13D0  
                                               u2137 148A                                                 u2250 0B3A  
                                               u3130 0F1A                                                 u2190 1592  
                                               u2370 188A                                                 u2460 0928  
                                               u2380 188C                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 u3167 1810  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               u3177 10C6                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u2840 1360  
                                               u2990 1166                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                          readSerialData@readingData 0046                                                 _atol 0DA4  
                                               _main 0E98                                                 _init 19D0  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C6  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0039  
                                        _voltageData 003C                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 11F2  
                                       main@inx_1350 00CD                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                    __end_of___awdiv 139E                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1420                                      ___awdiv@divisor 0015  
                                    __end_of___llmod 15D6                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                    ___awdiv@counter 0017                                         main@initDone 00CA  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 16D8                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0031                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initMCP 1A0E  
                                    __end_of_initOSC 19D0                                      __end_of_initSPI 19A0  
                                    __end_of_isdigit 1986                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0CAE  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0BB2                                       __CFG_HFOFST$ON 000000  
                          __size_of_powerCalculation 00FC                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 002D  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001D  
                                    __initialization 149C                                         __end_of_atol 0E98  
                                       __end_of_main 0F60                                         __end_of_init 19E6  
                             __end_of_communications 128A                               _com_command_setVersion 18BA  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 1892  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 003A                                               ??_init 0013  
                                      _SPI_send_data 192A                                        __activetblptr 000002  
                            _process_data_parameters 0660                         powerCalculation@instantPower 0060  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                   ___awdiv@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                              ??_initInterruptsClear 0013                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 1682  
                                             ___wmul 18E0                                            ??___awdiv 0017  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                           __end_of_energyPulseCheck 1570                                               _initIO 194A  
                                             clear_0 14DA                                               clear_1 14E6  
                                             clear_2 14F2                                     ___awdiv@quotient 0019  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 002D  
                                          ??_initMCP 0013                                            ??_initOSC 0013  
                                          ??_initSPI 0013                            _process_data_parameterize 0906  
                                       __pdataCOMRAM 004B                                            ??_isdigit 0013  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 00BE  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 1892                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 14F8  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1A0E                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0DA4  
                          ??_process_data_parameters 0033                         communications@receive_buffer 0133  
                              _powerCalculation$2940 001C                                _powerCalculation$2941 001E  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 149C  
                         _command_builder_add_string 1420                                              ??_ultoa 0028  
                                         __pbssBANK0 0060                                           __pbssBANK1 0133  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                   _powerCalculation 0BB2                                         strcmp2@match 001A  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                    _pulseFoutPassThru 1906  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 0013                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 0033  
         communications@end_of_transmission_received 0041                                       ___lmul@product 001B  
                        __end_of_resetCommunications 115A                                      _meterEnergyUsed 0088  
                                ??_pulseFoutPassThru 0013                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 176E  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 19E6  
                                            _SSP1BUF 000FC9                                              _SSP2BUF 000F6F  
                            __size_of_readSerialData 0098                             _command_builder_add_char 162C  
                                  __end_of_delayMS10 1832                      __end_of_process_data_parameters 0906  
                           __end_of_SPI_receive_data 18BA                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E                            __end_of_pulseFoutPassThru 192A  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0027  
                                            __Lparam 0000                                              ___awdiv 131A  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 139E                                      __size_of___wmul 0026  
                                            ___llmod 1570                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                      __size_of_initIO 001E  
                                            __pcinit 149C                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 0E98  
                                            __ptext1 115A                                              __ptext2 1906  
                                            __ptext3 0BB2                                              __ptext4 131A  
                                            __ptext5 19A0                                              __ptext6 19D0  
                                            __ptext7 1986                                              __ptext8 19B8  
                                            __ptext9 19FC                                           _meterWatts 008C  
                                          _T0CONbits 000FD5                                              _initMCP 19FC  
                                            _initOSC 19B8                                    __end_of_initTimer 19B8  
                                            _initSPI 1986                                              _isdigit 1968  
                energyPulseCheck@meterEnergyUsedPart 007C                                  __size_of_Timer0_ISR 00BE  
                                            main@inx 00CB                                              _strcmp2 0A86  
                                      _dataAvailable 0049                                 end_of_initialization 14F8  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 131A  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 18E0  
                                   ??_communications 0038                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postdec2 000FDD  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                    ?_energyPulseCheck 0001  
                              receive_data@my_status 003E                                 __end_of_receive_data 1020  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                                 ??_energyPulseCheck 0013                      communications@last_state_active 003F  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 0034  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 0034  
                        __end_of_initInterruptsClear 1724                    __end_of_process_data_parameterize 0A86  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 1724  
                communications@receive_current_state 0040                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 16D8                                       __end_of___wmul 1906  
                                      __pidataCOMRAM 1A12                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 1968                                       ??_process_data 0038  
                           __end_of_powerCalculation 0CAE                          ?_command_builder_add_string 0017  
                                start_initialization 149C                                       _readSerialData 115A  
                       resetCommunications@commState 0090                                     _command_builder1 15D6  
                                   _command_builder3 1020                            _com_command_setEnergyUsed 176E  
                                    ___llmod@divisor 0017                                      ___llmod@counter 001B  
                  com_command_setVersion@send_buffer 0027                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                ?_com_command_setPower 002D  
                                     ??_SPISlaveInit 0013                                             ??___lmul 001B  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0023  
                                  powerCalculation@i 0022                                          __pdataBANK0 00CF  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0025  
                       energyPulseCheck@mcpLFoutLast 0047                           ??_command_builder_add_char 0016  
                             __end_of_readSerialData 11F2                                          __pbssCOMRAM 003A  
                                      __pcstackBANK0 00BE                                        __pcstackBANK1 0100  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00C6  
                                       _isdigit$2582 0014                                       delayMS10@count 0013  
                                  ?_SPI_receive_data 0013                                            _delayMS10 1800  
                      com_command_setEnergyUsed@temp 00BE                                   ??_SPI_receive_data 0015  
                                       delayMS10@inx 0016                                command_builder1@data1 0021  
                        command_builder1@send_buffer 001F                             ?_process_data_parameters 002F  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 0021                                command_builder3@data2 0023  
                              command_builder3@data3 0025                                             ?___awdiv 0013  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 194A                        powerCalculation@voltageScalar 00D1  
                                           ?_initMCP 0001                                             ?_initOSC 0001  
                                           ?_initSPI 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 002F                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                      ?_readSerialData 0001  
                                  send_data@send_end 0019                                            _initTimer 19A0  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 009C  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                             pulseFoutPassThru@runonce 0048  
                                       _receive_data 0F60                                       ___wmul@product 0017  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 1862                                            _send_data 128A  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 002F  
                                           _PIR1bits 000F9E                        powerCalculation@currentScalar 00CF  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                          powerCalculation@realPower 0020                                           ?_initTimer 0001  
                                  ___lmul@multiplier 0013                                 __end_of_SPISlaveInit 1800  
                          __size_of_energyPulseCheck 006A                                            copy_data0 14B0  
           process_data@end_of_transmission_received 0132                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                                   readSerialData@data 0013  
                 __size_of_com_command_setEnergyUsed 004A                                     __size_of___awdiv 0084  
                   __end_of_send_end_of_transmission 19FC                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 1682  
                           __end_of_command_builder1 162C                             __end_of_command_builder3 10BE  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                        _currentData 003A                                    ?_powerCalculation 0001  
                                           _dataRead 004A                                     __size_of_initMCP 0012  
                                   __size_of_initOSC 0018                                     __size_of_initSPI 001A  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                   ??_powerCalculation 001B  
                                           __ptext10 16D8                                             __ptext11 194A  
                                           __ptext20 0F60                                             __ptext12 1506  
                                           __ptext21 1892                                             __ptext13 1800  
                                           __ptext30 1570                                             __ptext22 1832  
                                           __ptext14 11F2                                             __ptext31 139E  
                                           __ptext23 0660                                             __ptext15 128A  
                                           __ptext40 17B8                                             __ptext32 1020  
                                           __ptext24 1862                                             __ptext16 192A  
                                           __ptext33 1420                                             __ptext25 0A86  
                                           __ptext17 10BE                                             __ptext34 162C  
                                           __ptext26 19E6                                             __ptext18 18BA  
                                           __ptext35 0DA4                                             __ptext27 15D6  
                                           __ptext19 1724                                             __ptext36 1968  
                                           __ptext28 176E                                             __ptext37 1682  
                                           __ptext29 0CAE                                             __ptext38 0906  
                                           __ptext39 18E0                                         _SSP1CON1bits 000FC6  
                            readSerialData@byte1Read 0045                              readSerialData@byte2Read 0044  
                                       _SSP2CON1bits 000F6C                              readSerialData@byte3Read 0043  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 012C  
                                        _OSCCON2bits 000FD2                                        __size_of_atol 00F4  
                                      __size_of_main 00C8                                        strmatch@match 0024  
                                      __size_of_init 0016                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                                           int$flags 004D                                             atol@sign 0027  
                                       _SSP1STATbits 000FC7                                 powerCalculation@size 004B  
                  __end_of_com_command_setEnergyUsed 17B8                              __size_of_communications 0098  
                                           _strmatch 1862                                         _SSP2STATbits 000F6D  
                            process_data@send_buffer 0036                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0030  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0084                                         _timerCountLF 0080  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 0038  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 10BE                                     ??_readSerialData 0013  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 1832                                    _SPI_transmit_wait 0042  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 0094  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                                   _energyPulseCheck 1506                                 ?_resetCommunications 002F  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0023  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013  
