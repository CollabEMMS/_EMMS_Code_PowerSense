

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Dec 05 10:55:08 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18LF25K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001DA4                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for powerPulseCheck@timerCountHFCheck
   103  001DA4  0001               	dw	1
   104                           
   105                           ;initializer for powerPulseCheck@firstPulse
   106  001DA6  01                 	db	1
   107                           
   108                           ;initializer for powerPulseCheck@timerCountHFLast
   109  001DA7  FFFF               	dw	65535
   110  001DA9  7FFF               	dw	32767
   111  0000                     _ANSELBbits	set	3897
   112  0000                     _ANSELAbits	set	3896
   113  0000                     _ANSELC	set	3898
   114  0000                     _ANSELB	set	3897
   115  0000                     _ANSELA	set	3896
   116  0000                     _SSP2CON3bits	set	3945
   117  0000                     _SSP2CON3	set	3945
   118  0000                     _SSP2BUF	set	3951
   119  0000                     _SSP2STATbits	set	3949
   120  0000                     _SSP2CON1bits	set	3948
   121  0000                     _LATCbits	set	3979
   122  0000                     _T0CONbits	set	4053
   123  0000                     _IPR5	set	3967
   124  0000                     _IPR4	set	3964
   125  0000                     _IPR3	set	4005
   126  0000                     _IPR2	set	4002
   127  0000                     _IPR1	set	3999
   128  0000                     _PIE5	set	3965
   129  0000                     _PIE4	set	3962
   130  0000                     _PIE3	set	4003
   131  0000                     _PIE2	set	4000
   132  0000                     _PIE1	set	3997
   133  0000                     _PIR5	set	3966
   134  0000                     _PIR4	set	3963
   135  0000                     _PIR3	set	4004
   136  0000                     _PIR2	set	4001
   137  0000                     _PIR1	set	3998
   138  0000                     _RCONbits	set	4048
   139  0000                     _INTCON3	set	4080
   140  0000                     _INTCON2	set	4081
   141  0000                     _INTCON	set	4082
   142  0000                     _TRISAbits	set	3986
   143  0000                     _TRISCbits	set	3988
   144  0000                     _TRISBbits	set	3987
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _OSCTUNEbits	set	3995
   147  0000                     _OSCCON2bits	set	4050
   148  0000                     _OSCCONbits	set	4051
   149  0000                     _PORTAbits	set	3968
   150  0000                     _TMR0L	set	4054
   151  0000                     _TMR0H	set	4055
   152  0000                     _INTCONbits	set	4082
   153  0000                     _PORTBbits	set	3969
   154  0000                     _LATAbits	set	3977
   155  0000                     _PORTCbits	set	3970
   156  0000                     _LATBbits	set	3978
   157                           
   158                           	psect	smallconst
   159  000600                     __psmallconst:
   160                           	opt stack 0
   161  000600  00                 	db	0
   162  000601                     STR_3:
   163                           
   164                           ; BSR set to: 0
   165  000601  43                 	db	67	;'C'
   166  000602  61                 	db	97	;'a'
   167  000603  6C                 	db	108	;'l'
   168  000604  69                 	db	105	;'i'
   169  000605  62                 	db	98	;'b'
   170  000606  72                 	db	114	;'r'
   171  000607  61                 	db	97	;'a'
   172  000608  74                 	db	116	;'t'
   173  000609  69                 	db	105	;'i'
   174  00060A  6F                 	db	111	;'o'
   175  00060B  6E                 	db	110	;'n'
   176  00060C  00                 	db	0
   177  00060D                     STR_22:
   178                           
   179                           ; BSR set to: 0
   180  00060D  50                 	db	80	;'P'
   181  00060E  53                 	db	83	;'S'
   182  00060F  56                 	db	86	;'V'
   183  000610  65                 	db	101	;'e'
   184  000611  72                 	db	114	;'r'
   185  000612  73                 	db	115	;'s'
   186  000613  69                 	db	105	;'i'
   187  000614  6F                 	db	111	;'o'
   188  000615  6E                 	db	110	;'n'
   189  000616  00                 	db	0
   190  000617                     STR_4:
   191                           
   192                           ; BSR set to: 0
   193  000617  45                 	db	69	;'E'
   194  000618  6E                 	db	110	;'n'
   195  000619  55                 	db	85	;'U'
   196  00061A  73                 	db	115	;'s'
   197  00061B  65                 	db	101	;'e'
   198  00061C  64                 	db	100	;'d'
   199  00061D  00                 	db	0
   200  00061E                     STR_20:
   201                           
   202                           ; BSR set to: 0
   203  00061E  56                 	db	86	;'V'
   204  00061F  6F                 	db	111	;'o'
   205  000620  6C                 	db	108	;'l'
   206  000621  74                 	db	116	;'t'
   207  000622  73                 	db	115	;'s'
   208  000623  00                 	db	0
   209  000624                     STR_18:
   210                           
   211                           ; BSR set to: 0
   212  000624  57                 	db	87	;'W'
   213  000625  61                 	db	97	;'a'
   214  000626  74                 	db	116	;'t'
   215  000627  74                 	db	116	;'t'
   216  000628  73                 	db	115	;'s'
   217  000629  00                 	db	0
   218  00062A                     STR_7:
   219                           
   220                           ; BSR set to: 0
   221  00062A  4C                 	db	76	;'L'
   222  00062B  45                 	db	69	;'E'
   223  00062C  44                 	db	68	;'D'
   224  00062D  42                 	db	66	;'B'
   225  00062E  00                 	db	0
   226  00062F                     STR_6:
   227                           
   228                           ; BSR set to: 0
   229  00062F  44                 	db	68	;'D'
   230  000630  61                 	db	97	;'a'
   231  000631  74                 	db	116	;'t'
   232  000632  61                 	db	97	;'a'
   233  000633  00                 	db	0
   234  000634                     STR_5:
   235                           
   236                           ; BSR set to: 0
   237  000634  52                 	db	82	;'R'
   238  000635  65                 	db	101	;'e'
   239  000636  61                 	db	97	;'a'
   240  000637  64                 	db	100	;'d'
   241  000638  00                 	db	0
   242  000639                     STR_16:
   243                           
   244                           ; BSR set to: 0
   245  000639  43                 	db	67	;'C'
   246  00063A  6F                 	db	111	;'o'
   247  00063B  6E                 	db	110	;'n'
   248  00063C  66                 	db	102	;'f'
   249  00063D  00                 	db	0
   250  00063E                     STR_21:
   251                           
   252                           ; BSR set to: 0
   253  00063E  41                 	db	65	;'A'
   254  00063F  6D                 	db	109	;'m'
   255  000640  70                 	db	112	;'p'
   256  000641  73                 	db	115	;'s'
   257  000642  00                 	db	0
   258  000643                     
   259                           ; BSR set to: 0
   260  000643  32                 	db	50	;'2'
   261  000644  32                 	db	50	;'2'
   262  000645  32                 	db	50	;'2'
   263  000646  00                 	db	0
   264  000647                     
   265                           ; BSR set to: 0
   266  000647  33                 	db	51	;'3'
   267  000648  33                 	db	51	;'3'
   268  000649  33                 	db	51	;'3'
   269  00064A  00                 	db	0
   270  00064B                     STR_40:
   271                           
   272                           ; BSR set to: 0
   273  00064B  34                 	db	52	;'4'
   274  00064C  34                 	db	52	;'4'
   275  00064D  34                 	db	52	;'4'
   276  00064E  00                 	db	0
   277  00064F                     STR_1:
   278                           
   279                           ; BSR set to: 0
   280  00064F  45                 	db	69	;'E'
   281  000650  4E                 	db	78	;'N'
   282  000651  44                 	db	68	;'D'
   283  000652  00                 	db	0
   284  000653                     STR_11:
   285                           
   286                           ; BSR set to: 0
   287  000653  4F                 	db	79	;'O'
   288  000654  66                 	db	102	;'f'
   289  000655  66                 	db	102	;'f'
   290  000656  00                 	db	0
   291  000657                     STR_2:
   292                           
   293                           ; BSR set to: 0
   294  000657  53                 	db	83	;'S'
   295  000658  65                 	db	101	;'e'
   296  000659  74                 	db	116	;'t'
   297  00065A  00                 	db	0
   298  00065B                     STR_8:
   299                           
   300                           ; BSR set to: 0
   301  00065B  4F                 	db	79	;'O'
   302  00065C  6E                 	db	110	;'n'
   303  00065D  00                 	db	0
   304  0000                     
   305                           ; #config settings
   306  00065E  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	cinit
   309  001974                     __pcinit:
   310                           	opt stack 0
   311  001974                     start_initialization:
   312                           	opt stack 0
   313  001974                     __initialization:
   314                           	opt stack 0
   315                           
   316                           ; Initialize objects allocated to COMRAM (7 bytes)
   317                           ; load TBLPTR registers with __pidataCOMRAM
   318  001974  0EA4               	movlw	low __pidataCOMRAM
   319  001976  6EF6               	movwf	tblptrl,c
   320  001978  0E1D               	movlw	high __pidataCOMRAM
   321  00197A  6EF7               	movwf	tblptrh,c
   322  00197C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   323  00197E  6EF8               	movwf	tblptru,c
   324  001980  EE00  F046         	lfsr	0,__pdataCOMRAM
   325  001984  EE10 F007          	lfsr	1,7
   326  001988                     copy_data0:
   327  001988  0009               	tblrd		*+
   328  00198A  CFF5 FFEE          	movff	tablat,postinc0
   329  00198E  50E5               	movf	postdec1,w,c
   330  001990  50E1               	movf	fsr1l,w,c
   331  001992  E1FA               	bnz	copy_data0
   332                           
   333                           ; Clear objects allocated to BANK1 (42 bytes)
   334  001994  EE01  F000         	lfsr	0,__pbssBANK1
   335  001998  0E2A               	movlw	42
   336  00199A                     clear_0:
   337  00199A  6AEE               	clrf	postinc0,c
   338  00199C  06E8               	decf	wreg,f,c
   339  00199E  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK0 (61 bytes)
   342  0019A0  EE00  F0BF         	lfsr	0,__pbssBANK0
   343  0019A4  0E3D               	movlw	61
   344  0019A6                     clear_1:
   345  0019A6  6AEE               	clrf	postinc0,c
   346  0019A8  06E8               	decf	wreg,f,c
   347  0019AA  E1FD               	bnz	clear_1
   348                           
   349                           ; Clear objects allocated to COMRAM (11 bytes)
   350  0019AC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   351  0019B0  0E0B               	movlw	11
   352  0019B2                     clear_2:
   353  0019B2  6AEE               	clrf	postinc0,c
   354  0019B4  06E8               	decf	wreg,f,c
   355  0019B6  E1FD               	bnz	clear_2
   356  0019B8                     end_of_initialization:
   357                           	opt stack 0
   358  0019B8                     __end_of__initialization:
   359                           	opt stack 0
   360  0019B8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   361  0019BA  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   362  0019BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   363  0019BE  6EF8               	movwf	tblptru,c
   364  0019C0  0100               	movlb	0
   365  0019C2  EF0A  F009         	goto	_main	;jump to C main() function
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	bssCOMRAM
   376  00003B                     __pbssCOMRAM:
   377                           	opt stack 0
   378  00003B                     resetCommunications@commState:
   379                           	opt stack 0
   380  00003B                     	ds	2
   381  00003D                     receive_data@my_status:
   382                           	opt stack 0
   383  00003D                     	ds	1
   384  00003E                     _SPI_transmit_wait:
   385                           	opt stack 0
   386  00003E                     	ds	1
   387  00003F                     powerPulseCheck@mcpLFoutLast:
   388                           	opt stack 0
   389  00003F                     	ds	1
   390  000040                     powerPulseCheck@mcpHFoutLast:
   391                           	opt stack 0
   392  000040                     	ds	1
   393  000041                     pulseFoutPassThru@runonce:
   394                           	opt stack 0
   395  000041                     	ds	1
   396  000042                     _timerCountHF:
   397                           	opt stack 0
   398  000042                     	ds	4
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	dataCOMRAM
   409  000046                     __pdataCOMRAM:
   410                           	opt stack 0
   411  000046                     powerPulseCheck@timerCountHFCheck:
   412                           	opt stack 0
   413  000046                     	ds	2
   414  000048                     powerPulseCheck@firstPulse:
   415                           	opt stack 0
   416  000048                     	ds	1
   417  000049                     powerPulseCheck@timerCountHFLast:
   418                           	opt stack 0
   419  000049                     	ds	4
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bssBANK0
   430  0000BF                     __pbssBANK0:
   431                           	opt stack 0
   432  0000BF                     powerPulseCheck@meterEnergyUsedPart:
   433                           	opt stack 0
   434  0000BF                     	ds	4
   435  0000C3                     _timerCountLF:
   436                           	opt stack 0
   437  0000C3                     	ds	4
   438  0000C7                     _meterEnergyUsed:
   439                           	opt stack 0
   440  0000C7                     	ds	4
   441  0000CB                     _meterWatts:
   442                           	opt stack 0
   443  0000CB                     	ds	4
   444  0000CF                     communications@last_state_active:
   445                           	opt stack 0
   446  0000CF                     	ds	1
   447  0000D0                     communications@receive_current_state:
   448                           	opt stack 0
   449  0000D0                     	ds	1
   450  0000D1                     communications@end_of_transmission_received:
   451                           	opt stack 0
   452  0000D1                     	ds	1
   453  0000D2                     communications@send_buffer:
   454                           	opt stack 0
   455  0000D2                     	ds	42
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	bssBANK1
   466  000100                     __pbssBANK1:
   467                           	opt stack 0
   468  000100                     communications@receive_buffer:
   469                           	opt stack 0
   470  000100                     	ds	42
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	cstackBANK0
   481  000060                     __pcstackBANK0:
   482                           	opt stack 0
   483  000060                     xSumMatches@recXsumbuf:
   484                           	opt stack 0
   485  000060                     xsum_builder@xsumBuf:
   486                           	opt stack 0
   487                           
   488                           ; 16 bytes @ 0x0
   489  000060                     	ds	16
   490  000070                     xSumMatches@xsum:
   491                           	opt stack 0
   492  000070                     com_command_setPower@temp:
   493                           	opt stack 0
   494  000070                     com_command_setEnergyUsed@temp:
   495                           	opt stack 0
   496                           
   497                           ; 12 bytes @ 0x10
   498  000070                     	ds	2
   499  000072                     xSumMatches@recXsum:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x12
   503  000072                     	ds	2
   504  000074                     xSumMatches@xsumRecieving:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x14
   508  000074                     	ds	1
   509  000075                     xSumMatches@matches:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x15
   513  000075                     	ds	1
   514  000076                     xSumMatches@recXsumPointer:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x16
   518  000076                     	ds	2
   519  000078                     xSumMatches@currentData:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x18
   523  000078                     	ds	4
   524  00007C                     resetCommunications@send_buffer:
   525                           	opt stack 0
   526  00007C                     process_data_parameters@parameters:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  00007C                     	ds	2
   531  00007E                     ??_resetCommunications:
   532  00007E                     process_data_parameters@send_buffer:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x1E
   536  00007E                     	ds	2
   537  000080                     process_data_parameters@end_of_transmission_received:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x20
   541  000080                     	ds	1
   542  000081                     process_data@receive_buffer:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x21
   546  000081                     	ds	2
   547  000083                     process_data@send_buffer:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x23
   551  000083                     	ds	2
   552  000085                     process_data@parameters:
   553                           	opt stack 0
   554                           
   555                           ; 50 bytes @ 0x25
   556  000085                     	ds	50
   557  0000B7                     process_data@end_of_transmission_received:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x57
   561  0000B7                     	ds	1
   562  0000B8                     communications@no_more_to_send:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x58
   566  0000B8                     	ds	1
   567  0000B9                     communications@firstTime:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x59
   571  0000B9                     	ds	1
   572  0000BA                     main@initDone:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x5A
   576  0000BA                     	ds	1
   577  0000BB                     main@inx:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x5B
   581  0000BB                     	ds	2
   582  0000BD                     main@inx_1084:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x5D
   586  0000BD                     	ds	2
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           postdec1	equ	0xFE5
   594                           fsr1l	equ	0xFE1
   595                           
   596                           	psect	cstackCOMRAM
   597  000001                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  000001                     ??_Timer0_ISR:
   600                           
   601                           ; 1 bytes @ 0x0
   602  000001                     	ds	18
   603  000013                     ??_isdigit:
   604  000013                     ?_command_builder_add_char:
   605                           	opt stack 0
   606  000013                     ?_strcmp2:
   607                           	opt stack 0
   608  000013                     ?___wmul:
   609                           	opt stack 0
   610  000013                     ?___lwdiv:
   611                           	opt stack 0
   612  000013                     ?___lwmod:
   613                           	opt stack 0
   614  000013                     ?___lmul:
   615                           	opt stack 0
   616  000013                     ?___lldiv:
   617                           	opt stack 0
   618  000013                     ?___llmod:
   619                           	opt stack 0
   620  000013                     SPI_send_data@data:
   621                           	opt stack 0
   622  000013                     delayMS10@count:
   623                           	opt stack 0
   624  000013                     command_builder_add_char@send_buffer:
   625                           	opt stack 0
   626  000013                     strcmp2@a:
   627                           	opt stack 0
   628  000013                     SPI_receive_data@data:
   629                           	opt stack 0
   630  000013                     ___wmul@multiplier:
   631                           	opt stack 0
   632  000013                     ___lwdiv@dividend:
   633                           	opt stack 0
   634  000013                     ___lwmod@dividend:
   635                           	opt stack 0
   636  000013                     ___lmul@multiplier:
   637                           	opt stack 0
   638  000013                     ___lldiv@dividend:
   639                           	opt stack 0
   640  000013                     ___llmod@dividend:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x12
   644  000013                     	ds	1
   645  000014                     SPI_send_data@sendGood:
   646                           	opt stack 0
   647  000014                     _isdigit$2334:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x13
   651  000014                     	ds	1
   652  000015                     ??_delayMS10:
   653  000015                     command_builder_add_char@data:
   654                           	opt stack 0
   655  000015                     SPI_receive_data@recvGood:
   656                           	opt stack 0
   657  000015                     isdigit@c:
   658                           	opt stack 0
   659  000015                     send_data@send_buffer:
   660                           	opt stack 0
   661  000015                     strcmp2@b:
   662                           	opt stack 0
   663  000015                     ___wmul@multiplicand:
   664                           	opt stack 0
   665  000015                     ___lwdiv@divisor:
   666                           	opt stack 0
   667  000015                     ___lwmod@divisor:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x14
   671  000015                     	ds	1
   672  000016                     ??_command_builder_add_char:
   673  000016                     delayMS10@inx:
   674                           	opt stack 0
   675  000016                     receive_data@receive_buffer:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x15
   679  000016                     	ds	1
   680  000017                     ??_send_data:
   681  000017                     ??_strcmp2:
   682  000017                     ?_command_builder_add_string:
   683                           	opt stack 0
   684  000017                     ___lwdiv@counter:
   685                           	opt stack 0
   686  000017                     ___lwmod@counter:
   687                           	opt stack 0
   688  000017                     command_builder_add_string@send_buffer:
   689                           	opt stack 0
   690  000017                     ___wmul@product:
   691                           	opt stack 0
   692  000017                     ___lmul@multiplicand:
   693                           	opt stack 0
   694  000017                     ___lldiv@divisor:
   695                           	opt stack 0
   696  000017                     ___llmod@divisor:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x16
   700  000017                     	ds	1
   701  000018                     ??_initMCPFout:
   702  000018                     ??_receive_data:
   703  000018                     ___lwdiv@quotient:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x17
   707  000018                     	ds	1
   708  000019                     ?_atoi:
   709                           	opt stack 0
   710  000019                     receive_data@data:
   711                           	opt stack 0
   712  000019                     send_data@send_end:
   713                           	opt stack 0
   714  000019                     process_data_parameterize@parameters:
   715                           	opt stack 0
   716  000019                     command_builder_add_string@data_string:
   717                           	opt stack 0
   718  000019                     atoi@s:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x18
   722  000019                     	ds	1
   723  00001A                     strcmp2@match:
   724                           	opt stack 0
   725  00001A                     utoa@buf:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x19
   729  00001A                     	ds	1
   730  00001B                     ??_atoi:
   731  00001B                     ??_command_builder_add_string:
   732  00001B                     ___llmod@counter:
   733                           	opt stack 0
   734  00001B                     process_data_parameterize@buffer_to_parameterize:
   735                           	opt stack 0
   736  00001B                     ___lmul@product:
   737                           	opt stack 0
   738  00001B                     ___lldiv@quotient:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x1A
   742  00001B                     	ds	1
   743  00001C                     strcmp2@inx:
   744                           	opt stack 0
   745  00001C                     utoa@val:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x1B
   749  00001C                     	ds	1
   750  00001D                     ??_process_data_parameterize:
   751  00001D                     atoi@sign:
   752                           	opt stack 0
   753  00001D                     command_builder_add_string@xsum:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x1C
   757  00001D                     	ds	1
   758  00001E                     strmatch@a:
   759                           	opt stack 0
   760  00001E                     atoi@a:
   761                           	opt stack 0
   762  00001E                     utoa@base:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x1D
   766  00001E                     	ds	1
   767  00001F                     ?_atol:
   768                           	opt stack 0
   769  00001F                     ___lldiv@counter:
   770                           	opt stack 0
   771  00001F                     command_builder_add_string@inx:
   772                           	opt stack 0
   773  00001F                     atol@s:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x1E
   777  00001F                     	ds	1
   778  000020                     xSumMatches@buffer_to_chk:
   779                           	opt stack 0
   780  000020                     process_data_parameterize@inx:
   781                           	opt stack 0
   782  000020                     strmatch@b:
   783                           	opt stack 0
   784  000020                     utoa@v:
   785                           	opt stack 0
   786  000020                     ultoa@buf:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x1F
   790  000020                     	ds	2
   791  000022                     ??_xSumMatches:
   792  000022                     process_data_parameterize@parameter_index:
   793                           	opt stack 0
   794  000022                     utoa@c:
   795                           	opt stack 0
   796  000022                     strmatch@result:
   797                           	opt stack 0
   798  000022                     ultoa@val:
   799                           	opt stack 0
   800                           
   801                           ; 4 bytes @ 0x21
   802  000022                     	ds	1
   803  000023                     ??_atol:
   804  000023                     process_data_parameterize@parameter_position:
   805                           	opt stack 0
   806  000023                     itoa@buf:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x22
   810  000023                     	ds	1
   811  000024                     strmatch@match:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x23
   815  000024                     	ds	1
   816  000025                     itoa@val:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x24
   820  000025                     	ds	1
   821  000026                     ultoa@base:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x25
   825  000026                     	ds	1
   826  000027                     atol@sign:
   827                           	opt stack 0
   828  000027                     itoa@base:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x26
   832  000027                     	ds	1
   833  000028                     atol@a:
   834                           	opt stack 0
   835  000028                     ultoa@v:
   836                           	opt stack 0
   837                           
   838                           ; 4 bytes @ 0x27
   839  000028                     	ds	1
   840  000029                     itoa@cp:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x28
   844  000029                     	ds	2
   845  00002B                     xsum_builder@send_buffer:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x2A
   849  00002B                     	ds	1
   850  00002C                     atol@c:
   851                           	opt stack 0
   852  00002C                     ultoa@c:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x2B
   856  00002C                     	ds	1
   857  00002D                     xsum_builder@xsum:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x2C
   861  00002D                     	ds	2
   862  00002F                     command_builder1@send_buffer:
   863                           	opt stack 0
   864  00002F                     command_builder3@send_buffer:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x2E
   868  00002F                     	ds	2
   869  000031                     command_builder1@data1:
   870                           	opt stack 0
   871  000031                     command_builder3@data1:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x30
   875  000031                     	ds	2
   876  000033                     command_builder1@xsum:
   877                           	opt stack 0
   878  000033                     command_builder3@data2:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x32
   882  000033                     	ds	2
   883  000035                     command_builder3@data3:
   884                           	opt stack 0
   885  000035                     send_end_of_transmission@send_buffer:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x34
   889  000035                     	ds	2
   890  000037                     command_builder3@xsum:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x36
   894  000037                     	ds	2
   895  000039                     com_command_setPower@send_buffer:
   896                           	opt stack 0
   897  000039                     com_command_setEnergyUsed@send_buffer:
   898                           	opt stack 0
   899  000039                     com_command_setVersion@send_buffer:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x38
   903  000039                     	ds	2
   904  00003B                     tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           
   913                           ; 1 bytes @ 0x3A
   914 ;;
   915 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   916 ;;
   917 ;; *************** function _main *****************
   918 ;; Defined at:
   919 ;;		line 80 in file "Current_Sense_Main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  inx             2   93[BANK0 ] int 
   924 ;;  inx             2   91[BANK0 ] int 
   925 ;;  initDone        1   90[BANK0 ] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   935 ;;      Params:         0       0       0       0       0       0       0
   936 ;;      Locals:         0       5       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0
   938 ;;      Totals:         0       5       0       0       0       0       0
   939 ;;Total ram usage:        5 bytes
   940 ;; Hardware stack levels required when called:   10
   941 ;; This function calls:
   942 ;;		_communications
   943 ;;		_delayMS10
   944 ;;		_init
   945 ;;		_initMCPFout
   946 ;;		_initTimer
   947 ;;		_powerPulseCheck
   948 ;;		_pulseFoutPassThru
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text0
   955  001214                     __ptext0:
   956                           	opt stack 0
   957  001214                     _main:
   958                           	opt stack 21
   959                           
   960                           ;Current_Sense_Main.c: 82: init();
   961                           
   962                           ;incstack = 0
   963  001214  ECC9  F00E         	call	_init	;wreg free
   964                           
   965                           ;Current_Sense_Main.c: 84: for (int inx = 0; inx < 10; inx++)
   966  001218  0E00               	movlw	0
   967  00121A  0100               	movlb	0	; () banked
   968  00121C  6FBC               	movwf	(main@inx+1)& (0+255),b
   969  00121E  0E00               	movlw	0
   970  001220  6FBB               	movwf	main@inx& (0+255),b
   971  001222                     l3678:
   972                           
   973                           ; BSR set to: 0
   974  001222  BFBC               	btfsc	(main@inx+1)& (0+255),7,b
   975  001224  D006               	goto	l113
   976  001226  51BC               	movf	(main@inx+1)& (0+255),w,b
   977  001228  E116               	bnz	l3690
   978  00122A  0E0A               	movlw	10
   979  00122C  5DBB               	subwf	main@inx& (0+255),w,b
   980  00122E  B0D8               	btfsc	status,0,c
   981  001230  D012               	goto	u3240
   982  001232                     l113:
   983                           
   984                           ; BSR set to: 0
   985                           ;Current_Sense_Main.c: 85: {
   986                           ;Current_Sense_Main.c: 86: LATBbits.LATB4 = 1;
   987  001232  888A               	bsf	3978,4,c	;volatile
   988                           
   989                           ; BSR set to: 0
   990                           ;Current_Sense_Main.c: 87: delayMS10(10);
   991  001234  0E00               	movlw	0
   992  001236  6E14               	movwf	delayMS10@count+1,c
   993  001238  0E0A               	movlw	10
   994  00123A  6E13               	movwf	delayMS10@count,c
   995  00123C  ECE2  F00D         	call	_delayMS10	;wreg free
   996                           
   997                           ;Current_Sense_Main.c: 88: LATBbits.LATB4 = 0;
   998  001240  988A               	bcf	3978,4,c	;volatile
   999                           
  1000                           ;Current_Sense_Main.c: 89: delayMS10(10);
  1001  001242  0E00               	movlw	0
  1002  001244  6E14               	movwf	delayMS10@count+1,c
  1003  001246  0E0A               	movlw	10
  1004  001248  6E13               	movwf	delayMS10@count,c
  1005  00124A  ECE2  F00D         	call	_delayMS10	;wreg free
  1006  00124E  0100               	movlb	0	; () banked
  1007  001250  4BBB               	infsnz	main@inx& (0+255),f,b
  1008  001252  2BBC               	incf	(main@inx+1)& (0+255),f,b
  1009  001254  D7E6               	goto	l3678
  1010  001256                     u3240:
  1011  001256                     l3690:
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;Current_Sense_Main.c: 90: }
  1015                           ;Current_Sense_Main.c: 92: initTimer();
  1016  001256  ECA6  F00E         	call	_initTimer	;wreg free
  1017                           
  1018                           ;Current_Sense_Main.c: 120: communications(1);
  1019  00125A  0E01               	movlw	1
  1020  00125C  ECCA  F009         	call	_communications
  1021                           
  1022                           ;Current_Sense_Main.c: 127: bool initDone = 0;
  1023  001260  0E00               	movlw	0
  1024  001262  0100               	movlb	0	; () banked
  1025  001264  6FBA               	movwf	main@initDone& (0+255),b
  1026  001266                     l3696:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;Current_Sense_Main.c: 130: {
  1030                           ;Current_Sense_Main.c: 131: communications(0);
  1031  001266  0E00               	movlw	0
  1032  001268  ECCA  F009         	call	_communications
  1033                           
  1034                           ;Current_Sense_Main.c: 132: pulseFoutPassThru();
  1035  00126C  EC66  F00E         	call	_pulseFoutPassThru	;wreg free
  1036                           
  1037                           ;Current_Sense_Main.c: 133: powerPulseCheck();
  1038  001270  EC92  F004         	call	_powerPulseCheck	;wreg free
  1039                           
  1040                           ;Current_Sense_Main.c: 136: if (initDone == 0)
  1041  001274  0100               	movlb	0	; () banked
  1042  001276  51BA               	movf	main@initDone& (0+255),w,b
  1043  001278  A4D8               	btfss	status,2,c
  1044  00127A  D7F5               	goto	l115
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;Current_Sense_Main.c: 137: {
  1048                           ;Current_Sense_Main.c: 138: if (timerCountLF > 1000)
  1049  00127C  51C6               	movf	(_timerCountLF+3)& (0+255),w,b	;volatile
  1050  00127E  11C5               	iorwf	(_timerCountLF+2)& (0+255),w,b	;volatile
  1051  001280  E106               	bnz	u3260
  1052  001282  0EE9               	movlw	233
  1053  001284  5DC3               	subwf	_timerCountLF& (0+255),w,b	;volatile
  1054  001286  0E03               	movlw	3
  1055  001288  59C4               	subwfb	(_timerCountLF+1)& (0+255),w,b	;volatile
  1056  00128A  A0D8               	btfss	status,0,c
  1057  00128C  D7EC               	goto	l115
  1058  00128E                     u3260:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;Current_Sense_Main.c: 139: {
  1062                           ;Current_Sense_Main.c: 140: initMCPFout();
  1063  00128E  EC9A  F00B         	call	_initMCPFout	;wreg free
  1064                           
  1065                           ;Current_Sense_Main.c: 141: initDone = 1;
  1066  001292  0E01               	movlw	1
  1067  001294  0100               	movlb	0	; () banked
  1068  001296  6FBA               	movwf	main@initDone& (0+255),b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;Current_Sense_Main.c: 143: for (int inx = 0; inx < 10; inx++)
  1072  001298  0E00               	movlw	0
  1073  00129A  6FBE               	movwf	(main@inx_1084+1)& (0+255),b
  1074  00129C  0E00               	movlw	0
  1075  00129E  6FBD               	movwf	main@inx_1084& (0+255),b
  1076  0012A0                     l3712:
  1077                           
  1078                           ; BSR set to: 0
  1079  0012A0  BFBE               	btfsc	(main@inx_1084+1)& (0+255),7,b
  1080  0012A2  D006               	goto	l118
  1081  0012A4  51BE               	movf	(main@inx_1084+1)& (0+255),w,b
  1082  0012A6  E1DF               	bnz	l3696
  1083  0012A8  0E0A               	movlw	10
  1084  0012AA  5DBD               	subwf	main@inx_1084& (0+255),w,b
  1085  0012AC  B0D8               	btfsc	status,0,c
  1086  0012AE  D7DB               	goto	l115
  1087  0012B0                     l118:
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;Current_Sense_Main.c: 144: {
  1091                           ;Current_Sense_Main.c: 145: LATBbits.LATB4 = 1;
  1092  0012B0  888A               	bsf	3978,4,c	;volatile
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;Current_Sense_Main.c: 146: delayMS10(3);
  1096  0012B2  0E00               	movlw	0
  1097  0012B4  6E14               	movwf	delayMS10@count+1,c
  1098  0012B6  0E03               	movlw	3
  1099  0012B8  6E13               	movwf	delayMS10@count,c
  1100  0012BA  ECE2  F00D         	call	_delayMS10	;wreg free
  1101                           
  1102                           ;Current_Sense_Main.c: 147: LATBbits.LATB4 = 0;
  1103  0012BE  988A               	bcf	3978,4,c	;volatile
  1104                           
  1105                           ;Current_Sense_Main.c: 148: delayMS10(5);
  1106  0012C0  0E00               	movlw	0
  1107  0012C2  6E14               	movwf	delayMS10@count+1,c
  1108  0012C4  0E05               	movlw	5
  1109  0012C6  6E13               	movwf	delayMS10@count,c
  1110  0012C8  ECE2  F00D         	call	_delayMS10	;wreg free
  1111  0012CC  0100               	movlb	0	; () banked
  1112  0012CE  4BBD               	infsnz	main@inx_1084& (0+255),f,b
  1113  0012D0  2BBE               	incf	(main@inx_1084+1)& (0+255),f,b
  1114  0012D2  D7E6               	goto	l3712
  1115  0012D4                     __end_of_main:
  1116                           	opt stack 0
  1117                           tblptru	equ	0xFF8
  1118                           tblptrh	equ	0xFF7
  1119                           tblptrl	equ	0xFF6
  1120                           tablat	equ	0xFF5
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1l	equ	0xFE1
  1125                           status	equ	0xFD8
  1126                           
  1127 ;; *************** function _pulseFoutPassThru *****************
  1128 ;; Defined at:
  1129 ;;		line 191 in file "Current_Sense_Main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text1
  1158  001CCC                     __ptext1:
  1159                           	opt stack 0
  1160  001CCC                     _pulseFoutPassThru:
  1161                           	opt stack 29
  1162                           
  1163                           ;Current_Sense_Main.c: 194: static bool runonce = 0;
  1164                           ;Current_Sense_Main.c: 196: if (PORTCbits.RC2 == 0)
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;incstack = 0
  1168  001CCC  B482               	btfsc	3970,2,c	;volatile
  1169  001CCE  D00C               	goto	l127
  1170                           
  1171                           ;Current_Sense_Main.c: 197: {
  1172                           ;Current_Sense_Main.c: 198: LATAbits.LATA0 = 1;
  1173  001CD0  8089               	bsf	3977,0,c	;volatile
  1174                           
  1175                           ;Current_Sense_Main.c: 199: if (runonce == 0)
  1176  001CD2  5041               	movf	pulseFoutPassThru@runonce,w,c
  1177  001CD4  A4D8               	btfss	status,2,c
  1178  001CD6  0012               	return	
  1179                           
  1180                           ;Current_Sense_Main.c: 200: {
  1181                           ;Current_Sense_Main.c: 201: runonce = 1;
  1182  001CD8  0E01               	movlw	1
  1183  001CDA  6E41               	movwf	pulseFoutPassThru@runonce,c
  1184                           
  1185                           ;Current_Sense_Main.c: 202: if (PORTBbits.RB4 == 1)
  1186  001CDC  A881               	btfss	3969,4,c	;volatile
  1187  001CDE  D002               	goto	l129
  1188                           
  1189                           ;Current_Sense_Main.c: 203: {
  1190                           ;Current_Sense_Main.c: 204: LATBbits.LATB4 = 0;
  1191  001CE0  988A               	bcf	3978,4,c	;volatile
  1192                           
  1193                           ;Current_Sense_Main.c: 205: }
  1194  001CE2  0012               	return	
  1195  001CE4                     l129:
  1196                           
  1197                           ;Current_Sense_Main.c: 206: else
  1198                           ;Current_Sense_Main.c: 207: {
  1199                           ;Current_Sense_Main.c: 208: LATBbits.LATB4 = 1;
  1200  001CE4  888A               	bsf	3978,4,c	;volatile
  1201                           
  1202                           ;Current_Sense_Main.c: 209: }
  1203                           ;Current_Sense_Main.c: 210: }
  1204                           ;Current_Sense_Main.c: 211: }
  1205  001CE6  0012               	return	
  1206  001CE8                     l127:
  1207                           
  1208                           ;Current_Sense_Main.c: 212: else
  1209                           ;Current_Sense_Main.c: 213: {
  1210                           ;Current_Sense_Main.c: 214: LATAbits.LATA0 = 0;
  1211  001CE8  9089               	bcf	3977,0,c	;volatile
  1212                           
  1213                           ;Current_Sense_Main.c: 215: runonce = 0;
  1214  001CEA  0E00               	movlw	0
  1215  001CEC  6E41               	movwf	pulseFoutPassThru@runonce,c
  1216  001CEE  0012               	return	
  1217  001CF0                     __end_of_pulseFoutPassThru:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _powerPulseCheck *****************
  1230 ;; Defined at:
  1231 ;;		line 235 in file "Current_Sense_Main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         0       0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    2
  1252 ;; This function calls:
  1253 ;;		___lldiv
  1254 ;;		___lmul
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text2
  1261  000924                     __ptext2:
  1262                           	opt stack 0
  1263  000924                     _powerPulseCheck:
  1264                           	opt stack 28
  1265                           
  1266                           ;Current_Sense_Main.c: 247: static unsigned long meterEnergyUsedPart = 0;
  1267                           ;Current_Sense_Main.c: 248: static unsigned long timerCountHFLast = 2147483647;
  1268                           ;Current_Sense_Main.c: 249: static unsigned int timerCountHFCheck = 1;
  1269                           ;Current_Sense_Main.c: 250: static bool firstPulse = 1;
  1270                           ;Current_Sense_Main.c: 253: static bool mcpHFoutLast = 0;
  1271                           ;Current_Sense_Main.c: 254: static bool mcpLFoutLast = 0;
  1272                           ;Current_Sense_Main.c: 258: if (PORTCbits.RC2 == 0)
  1273                           
  1274                           ;incstack = 0
  1275  000924  B482               	btfsc	3970,2,c	;volatile
  1276  000926  D036               	goto	l152
  1277                           
  1278                           ;Current_Sense_Main.c: 259: {
  1279                           ;Current_Sense_Main.c: 260: if (mcpHFoutLast == 0)
  1280  000928  5040               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1281  00092A  A4D8               	btfss	status,2,c
  1282  00092C  D035               	goto	l154
  1283                           
  1284                           ;Current_Sense_Main.c: 261: {
  1285                           ;Current_Sense_Main.c: 262: mcpHFoutLast = 1;
  1286  00092E  0E01               	movlw	1
  1287  000930  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1288                           
  1289                           ;Current_Sense_Main.c: 263: firstPulse = 0;
  1290  000932  0E00               	movlw	0
  1291  000934  6E48               	movwf	powerPulseCheck@firstPulse,c
  1292                           
  1293                           ;Current_Sense_Main.c: 265: timerCountHFLast = timerCountHF;
  1294  000936  C042  F049         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1295  00093A  C043  F04A         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1296  00093E  C044  F04B         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1297  000942  C045  F04C         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1298                           
  1299                           ;Current_Sense_Main.c: 266: timerCountHF = 0;
  1300  000946  0E00               	movlw	0
  1301  000948  6E42               	movwf	_timerCountHF,c	;volatile
  1302  00094A  0E00               	movlw	0
  1303  00094C  6E43               	movwf	_timerCountHF+1,c	;volatile
  1304  00094E  0E00               	movlw	0
  1305  000950  6E44               	movwf	_timerCountHF+2,c	;volatile
  1306  000952  0E00               	movlw	0
  1307  000954  6E45               	movwf	_timerCountHF+3,c	;volatile
  1308                           
  1309                           ;Current_Sense_Main.c: 267: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHFLast;
  1310  000956  0EE0               	movlw	224
  1311  000958  6E13               	movwf	___lldiv@dividend,c
  1312  00095A  0ED4               	movlw	212
  1313  00095C  6E14               	movwf	___lldiv@dividend+1,c
  1314  00095E  0E0E               	movlw	14
  1315  000960  6E15               	movwf	___lldiv@dividend+2,c
  1316  000962  0E00               	movlw	0
  1317  000964  6E16               	movwf	___lldiv@dividend+3,c
  1318  000966  C049  F017         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1319  00096A  C04A  F018         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1320  00096E  C04B  F019         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1321  000972  C04C  F01A         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1322  000976  EC59  F00B         	call	___lldiv	;wreg free
  1323  00097A  C013  F0CB         	movff	?___lldiv,_meterWatts
  1324  00097E  C014  F0CC         	movff	?___lldiv+1,_meterWatts+1
  1325  000982  C015  F0CD         	movff	?___lldiv+2,_meterWatts+2
  1326  000986  C016  F0CE         	movff	?___lldiv+3,_meterWatts+3
  1327                           
  1328                           ;Current_Sense_Main.c: 271: timerCountHFCheck = 1;
  1329  00098A  0E00               	movlw	0
  1330  00098C  6E47               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1331  00098E  0E01               	movlw	1
  1332  000990  6E46               	movwf	powerPulseCheck@timerCountHFCheck,c
  1333                           
  1334                           ;Current_Sense_Main.c: 272: }
  1335                           ;Current_Sense_Main.c: 273: }
  1336  000992  D002               	goto	l154
  1337  000994                     l152:
  1338                           
  1339                           ;Current_Sense_Main.c: 274: else
  1340                           ;Current_Sense_Main.c: 275: {
  1341                           ;Current_Sense_Main.c: 276: mcpHFoutLast = 0;
  1342  000994  0E00               	movlw	0
  1343  000996  6E40               	movwf	powerPulseCheck@mcpHFoutLast,c
  1344  000998                     l154:
  1345                           
  1346                           ;Current_Sense_Main.c: 277: }
  1347                           ;Current_Sense_Main.c: 285: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast))
  1348  000998  5048               	movf	powerPulseCheck@firstPulse,w,c
  1349  00099A  A4D8               	btfss	status,2,c
  1350  00099C  D050               	goto	l158
  1351  00099E  5042               	movf	_timerCountHF,w,c	;volatile
  1352  0009A0  5C49               	subwf	powerPulseCheck@timerCountHFLast,w,c
  1353  0009A2  5043               	movf	_timerCountHF+1,w,c	;volatile
  1354  0009A4  584A               	subwfb	powerPulseCheck@timerCountHFLast+1,w,c
  1355  0009A6  5044               	movf	_timerCountHF+2,w,c	;volatile
  1356  0009A8  584B               	subwfb	powerPulseCheck@timerCountHFLast+2,w,c
  1357  0009AA  5045               	movf	_timerCountHF+3,w,c	;volatile
  1358  0009AC  584C               	subwfb	powerPulseCheck@timerCountHFLast+3,w,c
  1359  0009AE  B0D8               	btfsc	status,0,c
  1360  0009B0  D046               	goto	l158
  1361                           
  1362                           ;Current_Sense_Main.c: 286: {
  1363                           ;Current_Sense_Main.c: 287: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1364  0009B2  C046  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1365  0009B6  C047  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1366  0009BA  6A15               	clrf	___lmul@multiplier+2,c
  1367  0009BC  6A16               	clrf	___lmul@multiplier+3,c
  1368  0009BE  0EE8               	movlw	232
  1369  0009C0  6E17               	movwf	___lmul@multiplicand,c
  1370  0009C2  0E03               	movlw	3
  1371  0009C4  6E18               	movwf	___lmul@multiplicand+1,c
  1372  0009C6  0E00               	movlw	0
  1373  0009C8  6E19               	movwf	___lmul@multiplicand+2,c
  1374  0009CA  0E00               	movlw	0
  1375  0009CC  6E1A               	movwf	___lmul@multiplicand+3,c
  1376  0009CE  EC8F  F00C         	call	___lmul	;wreg free
  1377  0009D2  5042               	movf	_timerCountHF,w,c	;volatile
  1378  0009D4  5C13               	subwf	?___lmul,w,c
  1379  0009D6  5043               	movf	_timerCountHF+1,w,c	;volatile
  1380  0009D8  5814               	subwfb	?___lmul+1,w,c
  1381  0009DA  5044               	movf	_timerCountHF+2,w,c	;volatile
  1382  0009DC  5815               	subwfb	?___lmul+2,w,c
  1383  0009DE  5045               	movf	_timerCountHF+3,w,c	;volatile
  1384  0009E0  5816               	subwfb	?___lmul+3,w,c
  1385  0009E2  B0D8               	btfsc	status,0,c
  1386  0009E4  D02C               	goto	l158
  1387                           
  1388                           ;Current_Sense_Main.c: 288: {
  1389                           ;Current_Sense_Main.c: 289: if (timerCountHFCheck < 90)
  1390  0009E6  5047               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1391  0009E8  E121               	bnz	l3638
  1392  0009EA  0E5A               	movlw	90
  1393  0009EC  5C46               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1394  0009EE  B0D8               	btfsc	status,0,c
  1395  0009F0  D01D               	goto	l157
  1396                           
  1397                           ;Current_Sense_Main.c: 290: {
  1398                           ;Current_Sense_Main.c: 291: timerCountHFCheck++;
  1399  0009F2  4A46               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1400  0009F4  2A47               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1401                           
  1402                           ;Current_Sense_Main.c: 292: meterWatts = (((((unsigned long) 27000 * (unsigned long) 360
      +                          0) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned 
      +                          long) timerCountHF;
  1403  0009F6  0EE0               	movlw	224
  1404  0009F8  6E13               	movwf	___lldiv@dividend,c
  1405  0009FA  0ED4               	movlw	212
  1406  0009FC  6E14               	movwf	___lldiv@dividend+1,c
  1407  0009FE  0E0E               	movlw	14
  1408  000A00  6E15               	movwf	___lldiv@dividend+2,c
  1409  000A02  0E00               	movlw	0
  1410  000A04  6E16               	movwf	___lldiv@dividend+3,c
  1411  000A06  C042  F017         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1412  000A0A  C043  F018         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1413  000A0E  C044  F019         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1414  000A12  C045  F01A         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1415  000A16  EC59  F00B         	call	___lldiv	;wreg free
  1416  000A1A  C013  F0CB         	movff	?___lldiv,_meterWatts
  1417  000A1E  C014  F0CC         	movff	?___lldiv+1,_meterWatts+1
  1418  000A22  C015  F0CD         	movff	?___lldiv+2,_meterWatts+2
  1419  000A26  C016  F0CE         	movff	?___lldiv+3,_meterWatts+3
  1420                           
  1421                           ;Current_Sense_Main.c: 293: }
  1422  000A2A  D009               	goto	l158
  1423  000A2C                     l157:
  1424  000A2C                     l3638:
  1425                           
  1426                           ;Current_Sense_Main.c: 294: else
  1427                           ;Current_Sense_Main.c: 295: {
  1428                           ;Current_Sense_Main.c: 296: meterWatts = 0;
  1429  000A2C  0E00               	movlw	0
  1430  000A2E  0100               	movlb	0	; () banked
  1431  000A30  6FCB               	movwf	_meterWatts& (0+255),b
  1432  000A32  0E00               	movlw	0
  1433  000A34  6FCC               	movwf	(_meterWatts+1)& (0+255),b
  1434  000A36  0E00               	movlw	0
  1435  000A38  6FCD               	movwf	(_meterWatts+2)& (0+255),b
  1436  000A3A  0E00               	movlw	0
  1437  000A3C  6FCE               	movwf	(_meterWatts+3)& (0+255),b
  1438  000A3E                     l158:
  1439                           
  1440                           ;Current_Sense_Main.c: 297: }
  1441                           ;Current_Sense_Main.c: 299: }
  1442                           ;Current_Sense_Main.c: 300: }
  1443                           ;Current_Sense_Main.c: 302: if (firstPulse == 1)
  1444                           
  1445                           ; BSR set to: 0
  1446                           
  1447                           ; BSR set to: 0
  1448                           
  1449                           ; BSR set to: 0
  1450  000A3E  0448               	decf	powerPulseCheck@firstPulse,w,c
  1451  000A40  A4D8               	btfss	status,2,c
  1452  000A42  D009               	goto	l159
  1453                           
  1454                           ;Current_Sense_Main.c: 303: {
  1455                           ;Current_Sense_Main.c: 304: meterWatts = 0;
  1456  000A44  0E00               	movlw	0
  1457  000A46  0100               	movlb	0	; () banked
  1458  000A48  6FCB               	movwf	_meterWatts& (0+255),b
  1459  000A4A  0E00               	movlw	0
  1460  000A4C  6FCC               	movwf	(_meterWatts+1)& (0+255),b
  1461  000A4E  0E00               	movlw	0
  1462  000A50  6FCD               	movwf	(_meterWatts+2)& (0+255),b
  1463  000A52  0E00               	movlw	0
  1464  000A54  6FCE               	movwf	(_meterWatts+3)& (0+255),b
  1465  000A56                     l159:
  1466                           
  1467                           ;Current_Sense_Main.c: 305: }
  1468                           ;Current_Sense_Main.c: 309: if (PORTAbits.RA1 == 0)
  1469                           
  1470                           ; BSR set to: 0
  1471  000A56  B280               	btfsc	3968,1,c	;volatile
  1472  000A58  D030               	goto	l160
  1473                           
  1474                           ;Current_Sense_Main.c: 310: {
  1475                           ;Current_Sense_Main.c: 311: if (mcpLFoutLast == 0)
  1476  000A5A  503F               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1477  000A5C  A4D8               	btfss	status,2,c
  1478  000A5E  0012               	return	
  1479                           
  1480                           ;Current_Sense_Main.c: 312: {
  1481                           ;Current_Sense_Main.c: 313: mcpLFoutLast = 1;
  1482  000A60  0E01               	movlw	1
  1483  000A62  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1484                           
  1485                           ;Current_Sense_Main.c: 315: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1486  000A64  0E80               	movlw	128
  1487  000A66  0100               	movlb	0	; () banked
  1488  000A68  27BF               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1489  000A6A  0E97               	movlw	151
  1490  000A6C  23C0               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1491  000A6E  0E06               	movlw	6
  1492  000A70  23C1               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1493  000A72  0E00               	movlw	0
  1494  000A74  23C2               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1495                           
  1496                           ;Current_Sense_Main.c: 316: while (meterEnergyUsedPart > 100000)
  1497  000A76  D00E               	goto	l162
  1498  000A78                     l3652:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;Current_Sense_Main.c: 317: {
  1502                           ;Current_Sense_Main.c: 318: meterEnergyUsed++;
  1503  000A78  0E01               	movlw	1
  1504  000A7A  27C7               	addwf	_meterEnergyUsed& (0+255),f,b
  1505  000A7C  0E00               	movlw	0
  1506  000A7E  23C8               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1507  000A80  23C9               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1508  000A82  23CA               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1509                           
  1510                           ;Current_Sense_Main.c: 319: meterEnergyUsedPart -= 100000;
  1511  000A84  0EA0               	movlw	160
  1512  000A86  5FBF               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1513  000A88  0E86               	movlw	134
  1514  000A8A  5BC0               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1515  000A8C  0E01               	movlw	1
  1516  000A8E  5BC1               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1517  000A90  0E00               	movlw	0
  1518  000A92  5BC2               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1519  000A94                     l162:
  1520                           
  1521                           ; BSR set to: 0
  1522  000A94  51C2               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1523  000A96  E1F0               	bnz	l3652
  1524  000A98  0EA1               	movlw	161
  1525  000A9A  5DBF               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1526  000A9C  0E86               	movlw	134
  1527  000A9E  59C0               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1528  000AA0  0E01               	movlw	1
  1529  000AA2  59C1               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1530  000AA4  B0D8               	btfsc	status,0,c
  1531  000AA6  D7E8               	goto	l163
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;Current_Sense_Main.c: 320: }
  1535                           ;Current_Sense_Main.c: 322: timerCountLF = 0;
  1536                           
  1537                           ; BSR set to: 0
  1538  000AA8  0E00               	movlw	0
  1539  000AAA  6FC3               	movwf	_timerCountLF& (0+255),b	;volatile
  1540  000AAC  0E00               	movlw	0
  1541  000AAE  6FC4               	movwf	(_timerCountLF+1)& (0+255),b	;volatile
  1542  000AB0  0E00               	movlw	0
  1543  000AB2  6FC5               	movwf	(_timerCountLF+2)& (0+255),b	;volatile
  1544  000AB4  0E00               	movlw	0
  1545  000AB6  6FC6               	movwf	(_timerCountLF+3)& (0+255),b	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;Current_Sense_Main.c: 323: }
  1549                           ;Current_Sense_Main.c: 324: }
  1550  000AB8  0012               	return	
  1551  000ABA                     l160:
  1552                           
  1553                           ;Current_Sense_Main.c: 325: else
  1554                           ;Current_Sense_Main.c: 326: {
  1555                           ;Current_Sense_Main.c: 327: mcpLFoutLast = 0;
  1556                           
  1557                           ; BSR set to: 0
  1558  000ABA  0E00               	movlw	0
  1559  000ABC  6E3F               	movwf	powerPulseCheck@mcpLFoutLast,c
  1560  000ABE  0012               	return	
  1561  000AC0                     __end_of_powerPulseCheck:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _initTimer *****************
  1574 ;; Defined at:
  1575 ;;		line 417 in file "Current_Sense_Main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1589 ;;      Params:         0       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text3
  1604  001D4C                     __ptext3:
  1605                           	opt stack 0
  1606  001D4C                     _initTimer:
  1607                           	opt stack 29
  1608                           
  1609                           ;Current_Sense_Main.c: 420: T0CONbits.TMR0ON = 0;
  1610                           
  1611                           ;incstack = 0
  1612  001D4C  9ED5               	bcf	4053,7,c	;volatile
  1613                           
  1614                           ;Current_Sense_Main.c: 421: T0CONbits.T08BIT = 0;
  1615  001D4E  9CD5               	bcf	4053,6,c	;volatile
  1616                           
  1617                           ;Current_Sense_Main.c: 422: T0CONbits.T0CS = 0;
  1618  001D50  9AD5               	bcf	4053,5,c	;volatile
  1619                           
  1620                           ;Current_Sense_Main.c: 423: T0CONbits.PSA = 0;
  1621  001D52  96D5               	bcf	4053,3,c	;volatile
  1622                           
  1623                           ;Current_Sense_Main.c: 424: T0CONbits.T0PS = 0b001;
  1624  001D54  50D5               	movf	4053,w,c	;volatile
  1625  001D56  0BF8               	andlw	-8
  1626  001D58  0901               	iorlw	1
  1627  001D5A  6ED5               	movwf	4053,c	;volatile
  1628                           
  1629                           ;Current_Sense_Main.c: 426: INTCONbits.TMR0IE = 1;
  1630  001D5C  8AF2               	bsf	intcon,5,c	;volatile
  1631                           
  1632                           ;Current_Sense_Main.c: 427: INTCONbits.GIE = 1;
  1633  001D5E  8EF2               	bsf	intcon,7,c	;volatile
  1634                           
  1635                           ;Current_Sense_Main.c: 428: T0CONbits.TMR0ON = 1;
  1636  001D60  8ED5               	bsf	4053,7,c	;volatile
  1637  001D62  0012               	return		;funcret
  1638  001D64                     __end_of_initTimer:
  1639                           	opt stack 0
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           wreg	equ	0xFE8
  1647                           postdec1	equ	0xFE5
  1648                           fsr1l	equ	0xFE1
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _init *****************
  1652 ;; Defined at:
  1653 ;;		line 343 in file "Current_Sense_Main.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1667 ;;      Params:         0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    3
  1674 ;; This function calls:
  1675 ;;		_initIO
  1676 ;;		_initInterruptsClear
  1677 ;;		_initMCPFout
  1678 ;;		_initOSC
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text4
  1685  001D92                     __ptext4:
  1686                           	opt stack 0
  1687  001D92                     _init:
  1688                           	opt stack 27
  1689                           
  1690                           ;Current_Sense_Main.c: 345: initOSC();
  1691                           
  1692                           ;incstack = 0
  1693  001D92  ECB2  F00E         	call	_initOSC	;wreg free
  1694                           
  1695                           ;Current_Sense_Main.c: 346: initIO();
  1696  001D96  EC88  F00E         	call	_initIO	;wreg free
  1697                           
  1698                           ;Current_Sense_Main.c: 347: initInterruptsClear();
  1699  001D9A  EC0C  F00D         	call	_initInterruptsClear	;wreg free
  1700                           
  1701                           ;Current_Sense_Main.c: 348: initMCPFout();
  1702  001D9E  EC9A  F00B         	call	_initMCPFout	;wreg free
  1703  001DA2  0012               	return	
  1704  001DA4                     __end_of_init:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           status	equ	0xFD8
  1716                           
  1717 ;; *************** function _initOSC *****************
  1718 ;; Defined at:
  1719 ;;		line 353 in file "Current_Sense_Main.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_init
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text5
  1748  001D64                     __ptext5:
  1749                           	opt stack 0
  1750  001D64                     _initOSC:
  1751                           	opt stack 28
  1752                           
  1753                           ;Current_Sense_Main.c: 356: OSCCONbits.IDLEN = 0;
  1754                           
  1755                           ;incstack = 0
  1756  001D64  9ED3               	bcf	4051,7,c	;volatile
  1757                           
  1758                           ;Current_Sense_Main.c: 357: OSCCONbits.IRCF = 0b111;
  1759  001D66  88D3               	bsf	4051,4,c	;volatile
  1760  001D68  8AD3               	bsf	4051,5,c	;volatile
  1761  001D6A  8CD3               	bsf	4051,6,c	;volatile
  1762                           
  1763                           ;Current_Sense_Main.c: 358: OSCCONbits.SCS = 0b11;
  1764  001D6C  0E03               	movlw	3
  1765  001D6E  12D3               	iorwf	4051,f,c	;volatile
  1766                           
  1767                           ;Current_Sense_Main.c: 360: OSCCON2bits.MFIOSEL = 0;
  1768  001D70  98D2               	bcf	4050,4,c	;volatile
  1769                           
  1770                           ;Current_Sense_Main.c: 361: OSCCON2bits.SOSCGO = 0;
  1771  001D72  96D2               	bcf	4050,3,c	;volatile
  1772                           
  1773                           ;Current_Sense_Main.c: 362: OSCCON2bits.PRISD = 0;
  1774  001D74  94D2               	bcf	4050,2,c	;volatile
  1775                           
  1776                           ;Current_Sense_Main.c: 364: OSCTUNEbits.INTSRC = 1;
  1777  001D76  8E9B               	bsf	3995,7,c	;volatile
  1778                           
  1779                           ;Current_Sense_Main.c: 365: OSCTUNEbits.PLLEN = 0;
  1780  001D78  9C9B               	bcf	3995,6,c	;volatile
  1781  001D7A  0012               	return	
  1782  001D7C                     __end_of_initOSC:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1l	equ	0xFE1
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _initMCPFout *****************
  1796 ;; Defined at:
  1797 ;;		line 434 in file "Current_Sense_Main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1811 ;;      Params:         0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0
  1813 ;;      Temps:          1       0       0       0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    2
  1818 ;; This function calls:
  1819 ;;		_delayMS10
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;;		_init
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text6
  1827  001734                     __ptext6:
  1828                           	opt stack 0
  1829  001734                     _initMCPFout:
  1830                           	opt stack 28
  1831                           
  1832                           ;Current_Sense_Main.c: 439: TRISCbits.TRISC6 = 0;
  1833                           
  1834                           ;incstack = 0
  1835  001734  9C94               	bcf	3988,6,c	;volatile
  1836                           
  1837                           ;Current_Sense_Main.c: 440: TRISCbits.TRISC7 = 0;
  1838  001736  9E94               	bcf	3988,7,c	;volatile
  1839                           
  1840                           ;Current_Sense_Main.c: 441: TRISCbits.TRISC5 = 0;
  1841  001738  9A94               	bcf	3988,5,c	;volatile
  1842                           
  1843                           ;Current_Sense_Main.c: 442: TRISCbits.TRISC3 = 0;
  1844  00173A  9694               	bcf	3988,3,c	;volatile
  1845                           
  1846                           ;Current_Sense_Main.c: 445: LATCbits.LATC7 = 0;
  1847  00173C  9E8B               	bcf	3979,7,c	;volatile
  1848                           
  1849                           ;Current_Sense_Main.c: 446: LATCbits.LATC5 = 0;
  1850  00173E  9A8B               	bcf	3979,5,c	;volatile
  1851                           
  1852                           ;Current_Sense_Main.c: 447: LATCbits.LATC3 = 0;
  1853  001740  968B               	bcf	3979,3,c	;volatile
  1854                           
  1855                           ;Current_Sense_Main.c: 449: _delay((unsigned long)((5)*(16000000/4000.0)));
  1856  001742  0E1A               	movlw	26
  1857  001744  6E18               	movwf	??_initMCPFout& (0+255),c
  1858  001746  0EF8               	movlw	248
  1859  001748                     u3297:
  1860  001748  2EE8               	decfsz	wreg,f,c
  1861  00174A  D7FE               	bra	u3297
  1862  00174C  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1863  00174E  D7FC               	bra	u3297
  1864  001750  D000               	nop2	
  1865                           
  1866                           ;Current_Sense_Main.c: 450: LATCbits.LATC6 = 0;
  1867  001752  9C8B               	bcf	3979,6,c	;volatile
  1868                           
  1869                           ;Current_Sense_Main.c: 451: _delay((unsigned long)((5)*(16000000/4000.0)));
  1870  001754  0E1A               	movlw	26
  1871  001756  6E18               	movwf	??_initMCPFout& (0+255),c
  1872  001758  0EF8               	movlw	248
  1873  00175A                     u3307:
  1874  00175A  2EE8               	decfsz	wreg,f,c
  1875  00175C  D7FE               	bra	u3307
  1876  00175E  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1877  001760  D7FC               	bra	u3307
  1878  001762  D000               	nop2	
  1879                           
  1880                           ;Current_Sense_Main.c: 453: LATCbits.LATC7 = 0;
  1881  001764  9E8B               	bcf	3979,7,c	;volatile
  1882                           
  1883                           ;Current_Sense_Main.c: 454: LATCbits.LATC5 = 0;
  1884  001766  9A8B               	bcf	3979,5,c	;volatile
  1885                           
  1886                           ;Current_Sense_Main.c: 455: LATCbits.LATC3 = 0;
  1887  001768  968B               	bcf	3979,3,c	;volatile
  1888                           
  1889                           ;Current_Sense_Main.c: 457: _delay((unsigned long)((5)*(16000000/4000.0)));
  1890  00176A  0E1A               	movlw	26
  1891  00176C  6E18               	movwf	??_initMCPFout& (0+255),c
  1892  00176E  0EF8               	movlw	248
  1893  001770                     u3317:
  1894  001770  2EE8               	decfsz	wreg,f,c
  1895  001772  D7FE               	bra	u3317
  1896  001774  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1897  001776  D7FC               	bra	u3317
  1898  001778  D000               	nop2	
  1899                           
  1900                           ;Current_Sense_Main.c: 459: LATCbits.LATC7 = 1;
  1901  00177A  8E8B               	bsf	3979,7,c	;volatile
  1902                           
  1903                           ;Current_Sense_Main.c: 460: LATCbits.LATC5 = 1;
  1904  00177C  8A8B               	bsf	3979,5,c	;volatile
  1905                           
  1906                           ;Current_Sense_Main.c: 461: LATCbits.LATC3 = 1;
  1907  00177E  868B               	bsf	3979,3,c	;volatile
  1908                           
  1909                           ;Current_Sense_Main.c: 463: _delay((unsigned long)((5)*(16000000/4000.0)));
  1910  001780  0E1A               	movlw	26
  1911  001782  6E18               	movwf	??_initMCPFout& (0+255),c
  1912  001784  0EF8               	movlw	248
  1913  001786                     u3327:
  1914  001786  2EE8               	decfsz	wreg,f,c
  1915  001788  D7FE               	bra	u3327
  1916  00178A  2E18               	decfsz	??_initMCPFout& (0+255),f,c
  1917  00178C  D7FC               	bra	u3327
  1918  00178E  D000               	nop2	
  1919                           
  1920                           ;Current_Sense_Main.c: 464: LATCbits.LATC6 = 1;
  1921  001790  8C8B               	bsf	3979,6,c	;volatile
  1922                           
  1923                           ;Current_Sense_Main.c: 465: delayMS10(10);
  1924  001792  0E00               	movlw	0
  1925  001794  6E14               	movwf	delayMS10@count+1,c
  1926  001796  0E0A               	movlw	10
  1927  001798  6E13               	movwf	delayMS10@count,c
  1928  00179A  ECE2  F00D         	call	_delayMS10	;wreg free
  1929  00179E  0012               	return	
  1930  0017A0                     __end_of_initMCPFout:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           intcon	equ	0xFF2
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           postdec1	equ	0xFE5
  1940                           fsr1l	equ	0xFE1
  1941                           status	equ	0xFD8
  1942                           
  1943 ;; *************** function _delayMS10 *****************
  1944 ;; Defined at:
  1945 ;;		line 334 in file "Current_Sense_Main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  count           2   18[COMRAM] int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  inx             2   21[COMRAM] int 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1959 ;;      Params:         2       0       0       0       0       0       0
  1960 ;;      Locals:         2       0       0       0       0       0       0
  1961 ;;      Temps:          1       0       0       0       0       0       0
  1962 ;;      Totals:         5       0       0       0       0       0       0
  1963 ;;Total ram usage:        5 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;;		_initMCPFout
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text7
  1975  001BC4                     __ptext7:
  1976                           	opt stack 0
  1977  001BC4                     _delayMS10:
  1978                           	opt stack 28
  1979                           
  1980                           ;Current_Sense_Main.c: 336: for (int inx = 0; inx < count; inx++)
  1981                           
  1982                           ;incstack = 0
  1983  001BC4  0E00               	movlw	0
  1984  001BC6  6E17               	movwf	delayMS10@inx+1,c
  1985  001BC8  0E00               	movlw	0
  1986  001BCA  6E16               	movwf	delayMS10@inx,c
  1987  001BCC  D009               	goto	l169
  1988  001BCE                     
  1989                           ;Current_Sense_Main.c: 337: {
  1990                           ;Current_Sense_Main.c: 339: _delay((unsigned long)((10)*(16000000/4000.0)));
  1991  001BCE  0E34               	movlw	52
  1992  001BD0  6E15               	movwf	??_delayMS10& (0+255),c
  1993  001BD2  0EF2               	movlw	242
  1994  001BD4                     u3337:
  1995  001BD4  2EE8               	decfsz	wreg,f,c
  1996  001BD6  D7FE               	bra	u3337
  1997  001BD8  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1998  001BDA  D7FC               	bra	u3337
  1999  001BDC  4A16               	infsnz	delayMS10@inx,f,c
  2000  001BDE  2A17               	incf	delayMS10@inx+1,f,c
  2001  001BE0                     l169:
  2002  001BE0  5013               	movf	delayMS10@count,w,c
  2003  001BE2  5C16               	subwf	delayMS10@inx,w,c
  2004  001BE4  5017               	movf	delayMS10@inx+1,w,c
  2005  001BE6  0A80               	xorlw	128
  2006  001BE8  6E15               	movwf	??_delayMS10& (0+255),c
  2007  001BEA  5014               	movf	delayMS10@count+1,w,c
  2008  001BEC  0A80               	xorlw	128
  2009  001BEE  5815               	subwfb	??_delayMS10& (0+255),w,c
  2010  001BF0  B0D8               	btfsc	status,0,c
  2011  001BF2  0012               	return	
  2012  001BF4  D7EC               	goto	l170
  2013  001BF6                     __end_of_delayMS10:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           intcon	equ	0xFF2
  2020                           postinc0	equ	0xFEE
  2021                           wreg	equ	0xFE8
  2022                           postdec1	equ	0xFE5
  2023                           fsr1l	equ	0xFE1
  2024                           status	equ	0xFD8
  2025                           
  2026 ;; *************** function _initInterruptsClear *****************
  2027 ;; Defined at:
  2028 ;;		line 388 in file "Current_Sense_Main.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         0       0       0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0
  2045 ;;      Totals:         0       0       0       0       0       0       0
  2046 ;;Total ram usage:        0 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_init
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057  001A18                     __ptext8:
  2058                           	opt stack 0
  2059  001A18                     _initInterruptsClear:
  2060                           	opt stack 28
  2061                           
  2062                           ;Current_Sense_Main.c: 391: INTCON = 0b00000000;
  2063                           
  2064                           ;incstack = 0
  2065  001A18  0E00               	movlw	0
  2066  001A1A  6EF2               	movwf	intcon,c	;volatile
  2067                           
  2068                           ;Current_Sense_Main.c: 392: INTCON2 = 0b00000000;
  2069  001A1C  0E00               	movlw	0
  2070  001A1E  6EF1               	movwf	intcon2,c	;volatile
  2071                           
  2072                           ;Current_Sense_Main.c: 393: INTCON3 = 0b00000000;
  2073  001A20  0E00               	movlw	0
  2074  001A22  6EF0               	movwf	intcon3,c	;volatile
  2075                           
  2076                           ;Current_Sense_Main.c: 395: RCONbits.IPEN = 0;
  2077  001A24  9ED0               	bcf	4048,7,c	;volatile
  2078                           
  2079                           ;Current_Sense_Main.c: 397: PIR1 = 0b00000000;
  2080  001A26  0E00               	movlw	0
  2081  001A28  6E9E               	movwf	3998,c	;volatile
  2082                           
  2083                           ;Current_Sense_Main.c: 398: PIR2 = 0b00000000;
  2084  001A2A  0E00               	movlw	0
  2085  001A2C  6EA1               	movwf	4001,c	;volatile
  2086                           
  2087                           ;Current_Sense_Main.c: 399: PIR3 = 0b00000000;
  2088  001A2E  0E00               	movlw	0
  2089  001A30  6EA4               	movwf	4004,c	;volatile
  2090                           
  2091                           ;Current_Sense_Main.c: 400: PIR4 = 0b00000000;
  2092  001A32  0E00               	movlw	0
  2093  001A34  6E7B               	movwf	3963,c	;volatile
  2094                           
  2095                           ;Current_Sense_Main.c: 401: PIR5 = 0b00000000;
  2096  001A36  0E00               	movlw	0
  2097  001A38  6E7E               	movwf	3966,c	;volatile
  2098                           
  2099                           ;Current_Sense_Main.c: 403: PIE1 = 0b00000000;
  2100  001A3A  0E00               	movlw	0
  2101  001A3C  6E9D               	movwf	3997,c	;volatile
  2102                           
  2103                           ;Current_Sense_Main.c: 404: PIE2 = 0b00000000;
  2104  001A3E  0E00               	movlw	0
  2105  001A40  6EA0               	movwf	4000,c	;volatile
  2106                           
  2107                           ;Current_Sense_Main.c: 405: PIE3 = 0b00000000;
  2108  001A42  0E00               	movlw	0
  2109  001A44  6EA3               	movwf	4003,c	;volatile
  2110                           
  2111                           ;Current_Sense_Main.c: 406: PIE4 = 0b00000000;
  2112  001A46  0E00               	movlw	0
  2113  001A48  6E7A               	movwf	3962,c	;volatile
  2114                           
  2115                           ;Current_Sense_Main.c: 407: PIE5 = 0b00000000;
  2116  001A4A  0E00               	movlw	0
  2117  001A4C  6E7D               	movwf	3965,c	;volatile
  2118                           
  2119                           ;Current_Sense_Main.c: 409: IPR1 = 0b00000000;
  2120  001A4E  0E00               	movlw	0
  2121  001A50  6E9F               	movwf	3999,c	;volatile
  2122                           
  2123                           ;Current_Sense_Main.c: 410: IPR2 = 0b00000000;
  2124  001A52  0E00               	movlw	0
  2125  001A54  6EA2               	movwf	4002,c	;volatile
  2126                           
  2127                           ;Current_Sense_Main.c: 411: IPR3 = 0b00000000;
  2128  001A56  0E00               	movlw	0
  2129  001A58  6EA5               	movwf	4005,c	;volatile
  2130                           
  2131                           ;Current_Sense_Main.c: 412: IPR4 = 0b00000000;
  2132  001A5A  0E00               	movlw	0
  2133  001A5C  6E7C               	movwf	3964,c	;volatile
  2134                           
  2135                           ;Current_Sense_Main.c: 413: IPR5 = 0b00000000;
  2136  001A5E  0E00               	movlw	0
  2137  001A60  6E7F               	movwf	3967,c	;volatile
  2138  001A62  0012               	return		;funcret
  2139  001A64                     __end_of_initInterruptsClear:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           intcon	equ	0xFF2
  2146                           intcon2	equ	0xFF1
  2147                           intcon3	equ	0xFF0
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postdec1	equ	0xFE5
  2151                           fsr1l	equ	0xFE1
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _initIO *****************
  2155 ;; Defined at:
  2156 ;;		line 370 in file "Current_Sense_Main.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    1
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_init
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text9
  2185  001D10                     __ptext9:
  2186                           	opt stack 0
  2187  001D10                     _initIO:
  2188                           	opt stack 28
  2189                           
  2190                           ;Current_Sense_Main.c: 372: ADCON0bits.ADON = 0;
  2191                           
  2192                           ;incstack = 0
  2193  001D10  90C2               	bcf	4034,0,c	;volatile
  2194                           
  2195                           ;Current_Sense_Main.c: 373: ANSELA = 0b00000000;
  2196  001D12  0E00               	movlw	0
  2197  001D14  010F               	movlb	15	; () banked
  2198  001D16  6F38               	movwf	56,b	;volatile
  2199                           
  2200                           ;Current_Sense_Main.c: 374: ANSELB = 0b00000000;
  2201  001D18  0E00               	movlw	0
  2202  001D1A  6F39               	movwf	57,b	;volatile
  2203                           
  2204                           ;Current_Sense_Main.c: 375: ANSELC = 0b00000000;
  2205  001D1C  0E00               	movlw	0
  2206  001D1E  6F3A               	movwf	58,b	;volatile
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;Current_Sense_Main.c: 377: TRISBbits.TRISB4 = 0;
  2210  001D20  9893               	bcf	3987,4,c	;volatile
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;Current_Sense_Main.c: 378: LATBbits.LATB4 = 0;
  2214  001D22  988A               	bcf	3978,4,c	;volatile
  2215                           
  2216                           ; BSR set to: 15
  2217                           ;Current_Sense_Main.c: 380: TRISCbits.TRISC2 = 1;
  2218  001D24  8494               	bsf	3988,2,c	;volatile
  2219                           
  2220                           ; BSR set to: 15
  2221                           ;Current_Sense_Main.c: 381: TRISAbits.TRISA1 = 1;
  2222  001D26  8292               	bsf	3986,1,c	;volatile
  2223                           
  2224                           ; BSR set to: 15
  2225                           ;Current_Sense_Main.c: 382: TRISAbits.TRISA0 = 0;
  2226  001D28  9092               	bcf	3986,0,c	;volatile
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;Current_Sense_Main.c: 383: LATAbits.LATA0 = 0;
  2230  001D2A  9089               	bcf	3977,0,c	;volatile
  2231  001D2C  0012               	return	
  2232  001D2E                     __end_of_initIO:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           intcon3	equ	0xFF0
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1l	equ	0xFE1
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _communications *****************
  2248 ;; Defined at:
  2249 ;;		line 95 in file "SlaveComm_PIC18.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  firstTime       1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  firstTime       1   89[BANK0 ] unsigned char 
  2254 ;;  no_more_to_s    1   88[BANK0 ] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2264 ;;      Params:         0       0       0       0       0       0       0
  2265 ;;      Locals:         0       2       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0
  2267 ;;      Totals:         0       2       0       0       0       0       0
  2268 ;;Total ram usage:        2 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    9
  2271 ;; This function calls:
  2272 ;;		_SPISlaveInit
  2273 ;;		_process_data
  2274 ;;		_receive_data
  2275 ;;		_resetCommunications
  2276 ;;		_send_data
  2277 ;;		_xSumMatches
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text10
  2284  001394                     __ptext10:
  2285                           	opt stack 0
  2286  001394                     _communications:
  2287                           	opt stack 21
  2288                           
  2289                           ; BSR set to: 15
  2290                           ;incstack = 0
  2291                           ;communications@firstTime stored from wreg
  2292  001394  0100               	movlb	0	; () banked
  2293  001396  6FB9               	movwf	communications@firstTime& (0+255),b
  2294                           
  2295                           ;SlaveComm_PIC18.c: 97: static struct buffer receive_buffer;
  2296                           ;SlaveComm_PIC18.c: 98: static struct buffer send_buffer;
  2297                           ;SlaveComm_PIC18.c: 100: static bool end_of_transmission_received = 0;
  2298                           ;SlaveComm_PIC18.c: 101: bool no_more_to_send;
  2299                           ;SlaveComm_PIC18.c: 103: static enum receive_status receive_current_state;
  2300                           ;SlaveComm_PIC18.c: 106: if (firstTime == 1)
  2301  001398  0100               	movlb	0	; () banked
  2302  00139A  05B9               	decf	communications@firstTime& (0+255),w,b
  2303  00139C  A4D8               	btfss	status,2,c
  2304  00139E  D00E               	goto	l281
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;SlaveComm_PIC18.c: 107: {
  2308                           ;SlaveComm_PIC18.c: 108: SPISlaveInit();
  2309  0013A0  EC7C  F00D         	call	_SPISlaveInit	;wreg free
  2310                           
  2311                           ;SlaveComm_PIC18.c: 109: send_buffer.write_position = 0;
  2312  0013A4  0E00               	movlw	0
  2313  0013A6  0100               	movlb	0	; () banked
  2314  0013A8  6FFA               	movwf	(communications@send_buffer+40)& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;SlaveComm_PIC18.c: 110: send_buffer.read_position = 0;
  2318  0013AA  0E00               	movlw	0
  2319  0013AC  6FFB               	movwf	(communications@send_buffer+41)& (0+255),b
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;SlaveComm_PIC18.c: 111: resetCommunications(&send_buffer);
  2323  0013AE  0ED2               	movlw	low communications@send_buffer
  2324  0013B0  6F7C               	movwf	resetCommunications@send_buffer& (0+255),b
  2325  0013B2  0E00               	movlw	high communications@send_buffer
  2326  0013B4  6F7D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2327  0013B6  EC78  F00A         	call	_resetCommunications	;wreg free
  2328                           
  2329                           ;SlaveComm_PIC18.c: 112: }
  2330  0013BA  0012               	return	
  2331  0013BC                     l281:
  2332                           
  2333                           ;SlaveComm_PIC18.c: 113: else
  2334                           ;SlaveComm_PIC18.c: 114: {
  2335                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data(&receive_buffer);
  2336  0013BC  0E00               	movlw	low communications@receive_buffer
  2337  0013BE  6E16               	movwf	receive_data@receive_buffer,c
  2338  0013C0  0E01               	movlw	high communications@receive_buffer
  2339  0013C2  6E17               	movwf	receive_data@receive_buffer+1,c
  2340  0013C4  EC6A  F009         	call	_receive_data	;wreg free
  2341  0013C8  0100               	movlb	0	; () banked
  2342  0013CA  6FD0               	movwf	communications@receive_current_state& (0+255),b
  2343                           
  2344                           ;SlaveComm_PIC18.c: 117: switch (receive_current_state)
  2345  0013CC  D01B               	goto	l283
  2346  0013CE                     
  2347                           ; BSR set to: 0
  2348                           ;SlaveComm_PIC18.c: 126: if( xSumMatches (&receive_buffer) == 1){
  2349                           
  2350                           ; BSR set to: 0
  2351  0013CE  0E00               	movlw	low communications@receive_buffer
  2352  0013D0  6E20               	movwf	xSumMatches@buffer_to_chk,c
  2353  0013D2  0E01               	movlw	high communications@receive_buffer
  2354  0013D4  6E21               	movwf	xSumMatches@buffer_to_chk+1,c
  2355  0013D6  EC20  F006         	call	_xSumMatches	;wreg free
  2356  0013DA  06E8               	decf	wreg,f,c
  2357  0013DC  A4D8               	btfss	status,2,c
  2358  0013DE  D01C               	goto	l285
  2359                           
  2360                           ;SlaveComm_PIC18.c: 127: if (process_data(&receive_buffer, &send_buffer) == 1)
  2361  0013E0  0E00               	movlw	low communications@receive_buffer
  2362  0013E2  0100               	movlb	0	; () banked
  2363  0013E4  6F81               	movwf	process_data@receive_buffer& (0+255),b
  2364  0013E6  0E01               	movlw	high communications@receive_buffer
  2365  0013E8  6F82               	movwf	(process_data@receive_buffer+1)& (0+255),b
  2366  0013EA  0ED2               	movlw	low communications@send_buffer
  2367  0013EC  6F83               	movwf	process_data@send_buffer& (0+255),b
  2368  0013EE  0E00               	movlw	high communications@send_buffer
  2369  0013F0  6F84               	movwf	(process_data@send_buffer+1)& (0+255),b
  2370  0013F2  ECFB  F00D         	call	_process_data	;wreg free
  2371  0013F6  06E8               	decf	wreg,f,c
  2372  0013F8  A4D8               	btfss	status,2,c
  2373  0013FA  D00E               	goto	l285
  2374                           
  2375                           ;SlaveComm_PIC18.c: 128: {
  2376                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  2377  0013FC  0E01               	movlw	1
  2378  0013FE  0100               	movlb	0	; () banked
  2379  001400  6FD1               	movwf	communications@end_of_transmission_received& (0+255),b
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;SlaveComm_PIC18.c: 133: }
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;SlaveComm_PIC18.c: 130: }
  2386                           ;SlaveComm_PIC18.c: 131: }
  2387                           ;SlaveComm_PIC18.c: 132: break;
  2388                           
  2389                           ; BSR set to: 0
  2390  001402  D00A               	goto	l285
  2391  001404                     l283:
  2392                           
  2393                           ; BSR set to: 0
  2394                           
  2395                           ; BSR set to: 0
  2396  001404  51D0               	movf	communications@receive_current_state& (0+255),w,b
  2397                           
  2398                           ; Switch size 1, requested type "space"
  2399                           ; Number of cases is 3, Range of values is 0 to 2
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte           10     6 (average)
  2403                           ;	Chosen strategy is simple_byte
  2404  001406  0A00               	xorlw	0	; case 0
  2405  001408  B4D8               	btfsc	status,2,c
  2406  00140A  D006               	goto	l285
  2407  00140C  0A01               	xorlw	1	; case 1
  2408  00140E  B4D8               	btfsc	status,2,c
  2409  001410  D003               	goto	l285
  2410  001412  0A03               	xorlw	3	; case 2
  2411  001414  B4D8               	btfsc	status,2,c
  2412  001416  D7DB               	goto	l287
  2413  001418                     l285:
  2414                           
  2415                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data(&send_buffer);
  2416                           
  2417                           ; BSR set to: 0
  2418  001418  0ED2               	movlw	low communications@send_buffer
  2419  00141A  6E15               	movwf	send_data@send_buffer,c
  2420  00141C  0E00               	movlw	high communications@send_buffer
  2421  00141E  6E16               	movwf	send_data@send_buffer+1,c
  2422  001420  EC11  F00B         	call	_send_data	;wreg free
  2423  001424  0100               	movlb	0	; () banked
  2424  001426  6FB8               	movwf	communications@no_more_to_send& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  2428                           ;SlaveComm_PIC18.c: 139: if (PORTBbits.SS2 == 0b1)
  2429  001428  A081               	btfss	3969,0,c	;volatile
  2430  00142A  D003               	goto	l292
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;SlaveComm_PIC18.c: 140: {
  2434                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  2435  00142C  0E00               	movlw	0
  2436  00142E  6FCF               	movwf	communications@last_state_active& (0+255),b
  2437                           
  2438                           ;SlaveComm_PIC18.c: 142: }
  2439  001430  0012               	return	
  2440  001432                     l292:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;SlaveComm_PIC18.c: 143: else
  2444                           ;SlaveComm_PIC18.c: 144: {
  2445                           ;SlaveComm_PIC18.c: 145: if (last_state_active == 0)
  2446                           
  2447                           ; BSR set to: 0
  2448  001432  51CF               	movf	communications@last_state_active& (0+255),w,b
  2449  001434  A4D8               	btfss	status,2,c
  2450  001436  D006               	goto	l294
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;SlaveComm_PIC18.c: 146: {
  2454                           ;SlaveComm_PIC18.c: 147: resetCommunications(&send_buffer);
  2455  001438  0ED2               	movlw	low communications@send_buffer
  2456  00143A  6F7C               	movwf	resetCommunications@send_buffer& (0+255),b
  2457  00143C  0E00               	movlw	high communications@send_buffer
  2458  00143E  6F7D               	movwf	(resetCommunications@send_buffer+1)& (0+255),b
  2459  001440  EC78  F00A         	call	_resetCommunications	;wreg free
  2460  001444                     l294:
  2461                           
  2462                           ;SlaveComm_PIC18.c: 148: }
  2463                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  2464  001444  0E01               	movlw	1
  2465  001446  0100               	movlb	0	; () banked
  2466  001448  6FCF               	movwf	communications@last_state_active& (0+255),b
  2467                           
  2468                           ; BSR set to: 0
  2469                           
  2470                           ; BSR set to: 0
  2471  00144A  0012               	return	
  2472  00144C                     __end_of_communications:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           intcon	equ	0xFF2
  2479                           intcon2	equ	0xFF1
  2480                           intcon3	equ	0xFF0
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           postdec1	equ	0xFE5
  2484                           fsr1l	equ	0xFE1
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _xSumMatches *****************
  2488 ;; Defined at:
  2489 ;;		line 158 in file "SlaveComm_PIC18.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  buffer_to_ch    2   31[COMRAM] PTR struct buffer
  2492 ;;		 -> communications@receive_buffer(42), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  recXsumbuf     16    0[BANK0 ] unsigned char [16]
  2495 ;;  recXsumPoint    2   22[BANK0 ] int 
  2496 ;;  recXsum         2   18[BANK0 ] int 
  2497 ;;  xsum            2   16[BANK0 ] int 
  2498 ;;  currentData     1   24[BANK0 ] unsigned char 
  2499 ;;  matches         1   21[BANK0 ] unsigned char 
  2500 ;;  xsumRecievin    1   20[BANK0 ] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      unsigned char 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         2       0       0       0       0       0       0
  2511 ;;      Locals:         0      25       0       0       0       0       0
  2512 ;;      Temps:          2       0       0       0       0       0       0
  2513 ;;      Totals:         4      25       0       0       0       0       0
  2514 ;;Total ram usage:       29 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		_atoi
  2519 ;; This function is called by:
  2520 ;;		_communications
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text11
  2525  000C40                     __ptext11:
  2526                           	opt stack 0
  2527  000C40                     _xSumMatches:
  2528                           	opt stack 26
  2529                           
  2530                           ;SlaveComm_PIC18.c: 162: int xsum = 0;
  2531                           
  2532                           ;incstack = 0
  2533  000C40  0E00               	movlw	0
  2534  000C42  0100               	movlb	0	; () banked
  2535  000C44  6F71               	movwf	(xSumMatches@xsum+1)& (0+255),b
  2536  000C46  0E00               	movlw	0
  2537  000C48  6F70               	movwf	xSumMatches@xsum& (0+255),b
  2538                           
  2539                           ;SlaveComm_PIC18.c: 163: int recXsum = 0;
  2540  000C4A  0E00               	movlw	0
  2541  000C4C  6F73               	movwf	(xSumMatches@recXsum+1)& (0+255),b
  2542  000C4E  0E00               	movlw	0
  2543  000C50  6F72               	movwf	xSumMatches@recXsum& (0+255),b
  2544                           
  2545                           ;SlaveComm_PIC18.c: 164: char recXsumbuf[16];
  2546                           ;SlaveComm_PIC18.c: 165: int recXsumPointer = 0;
  2547  000C52  0E00               	movlw	0
  2548  000C54  6F77               	movwf	(xSumMatches@recXsumPointer+1)& (0+255),b
  2549  000C56  0E00               	movlw	0
  2550  000C58  6F76               	movwf	xSumMatches@recXsumPointer& (0+255),b
  2551                           
  2552                           ;SlaveComm_PIC18.c: 166: bool xsumRecieving = 0;
  2553  000C5A  0E00               	movlw	0
  2554  000C5C  6F74               	movwf	xSumMatches@xsumRecieving& (0+255),b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;SlaveComm_PIC18.c: 167: char currentData;
  2558                           ;SlaveComm_PIC18.c: 169: buffer_to_chk->read_position = 1;
  2559  000C5E  EE20 F029          	lfsr	2,41
  2560  000C62  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2561  000C64  26D9               	addwf	fsr2l,f,c
  2562  000C66  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2563  000C68  22DA               	addwfc	fsr2h,f,c
  2564  000C6A  0E01               	movlw	1
  2565  000C6C  6EDF               	movwf	indf2,c
  2566                           
  2567                           ;SlaveComm_PIC18.c: 172: while (currentData != '*'){
  2568  000C6E  D063               	goto	l303
  2569  000C70                     
  2570                           ; BSR set to: 0
  2571                           ;SlaveComm_PIC18.c: 174: currentData = (buffer_to_chk->data_buffer[ buffer_to_chk->read_
      +                          position]);
  2572                           
  2573                           ; BSR set to: 0
  2574  000C70  EE20 F029          	lfsr	2,41
  2575  000C74  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2576  000C76  26D9               	addwf	fsr2l,f,c
  2577  000C78  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2578  000C7A  22DA               	addwfc	fsr2h,f,c
  2579  000C7C  50DF               	movf	indf2,w,c
  2580  000C7E  6E22               	movwf	??_xSumMatches& (0+255),c
  2581  000C80  5022               	movf	??_xSumMatches,w,c
  2582  000C82  0D01               	mullw	1
  2583  000C84  50F3               	movf	prodl,w,c
  2584  000C86  2420               	addwf	xSumMatches@buffer_to_chk,w,c
  2585  000C88  6ED9               	movwf	fsr2l,c
  2586  000C8A  50F4               	movf	prodh,w,c
  2587  000C8C  2021               	addwfc	xSumMatches@buffer_to_chk+1,w,c
  2588  000C8E  6EDA               	movwf	fsr2h,c
  2589  000C90  50DF               	movf	indf2,w,c
  2590  000C92  6F78               	movwf	xSumMatches@currentData& (0+255),b
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;SlaveComm_PIC18.c: 175: buffer_to_chk->read_position++;
  2594  000C94  EE20 F029          	lfsr	2,41
  2595  000C98  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2596  000C9A  26D9               	addwf	fsr2l,f,c
  2597  000C9C  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2598  000C9E  22DA               	addwfc	fsr2h,f,c
  2599  000CA0  2ADF               	incf	indf2,f,c
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;SlaveComm_PIC18.c: 177: if (xsumRecieving){
  2603  000CA2  5174               	movf	xSumMatches@xsumRecieving& (0+255),w,b
  2604  000CA4  B4D8               	btfsc	status,2,c
  2605  000CA6  D00B               	goto	l300
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;SlaveComm_PIC18.c: 178: recXsumbuf[recXsumPointer] = currentData;
  2609  000CA8  0E60               	movlw	low xSumMatches@recXsumbuf
  2610  000CAA  2576               	addwf	xSumMatches@recXsumPointer& (0+255),w,b
  2611  000CAC  6ED9               	movwf	fsr2l,c
  2612  000CAE  0E00               	movlw	high xSumMatches@recXsumbuf
  2613  000CB0  2177               	addwfc	(xSumMatches@recXsumPointer+1)& (0+255),w,b
  2614  000CB2  6EDA               	movwf	fsr2h,c
  2615  000CB4  C078  FFDF         	movff	xSumMatches@currentData,indf2
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;SlaveComm_PIC18.c: 179: recXsumPointer++;
  2619  000CB8  4B76               	infsnz	xSumMatches@recXsumPointer& (0+255),f,b
  2620  000CBA  2B77               	incf	(xSumMatches@recXsumPointer+1)& (0+255),f,b
  2621                           
  2622                           ;SlaveComm_PIC18.c: 180: }
  2623  000CBC  D03C               	goto	l303
  2624  000CBE                     l300:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;SlaveComm_PIC18.c: 181: else{
  2628                           ;SlaveComm_PIC18.c: 183: if ((buffer_to_chk->data_buffer[ buffer_to_chk->read_position])
      +                           == '$'){
  2629                           
  2630                           ; BSR set to: 0
  2631  000CBE  EE20 F029          	lfsr	2,41
  2632  000CC2  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2633  000CC4  26D9               	addwf	fsr2l,f,c
  2634  000CC6  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2635  000CC8  22DA               	addwfc	fsr2h,f,c
  2636  000CCA  50DF               	movf	indf2,w,c
  2637  000CCC  6E22               	movwf	??_xSumMatches& (0+255),c
  2638  000CCE  5022               	movf	??_xSumMatches,w,c
  2639  000CD0  0D01               	mullw	1
  2640  000CD2  50F3               	movf	prodl,w,c
  2641  000CD4  2420               	addwf	xSumMatches@buffer_to_chk,w,c
  2642  000CD6  6ED9               	movwf	fsr2l,c
  2643  000CD8  50F4               	movf	prodh,w,c
  2644  000CDA  2021               	addwfc	xSumMatches@buffer_to_chk+1,w,c
  2645  000CDC  6EDA               	movwf	fsr2h,c
  2646  000CDE  0E24               	movlw	36
  2647  000CE0  18DE               	xorwf	postinc2,w,c
  2648  000CE2  A4D8               	btfss	status,2,c
  2649  000CE4  D024               	goto	l302
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;SlaveComm_PIC18.c: 184: (buffer_to_chk->data_buffer[ buffer_to_chk->read_position]) = '
      +                          \0';
  2653  000CE6  EE20 F029          	lfsr	2,41
  2654  000CEA  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2655  000CEC  26D9               	addwf	fsr2l,f,c
  2656  000CEE  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2657  000CF0  22DA               	addwfc	fsr2h,f,c
  2658  000CF2  50DF               	movf	indf2,w,c
  2659  000CF4  6E22               	movwf	??_xSumMatches& (0+255),c
  2660  000CF6  5022               	movf	??_xSumMatches,w,c
  2661  000CF8  0D01               	mullw	1
  2662  000CFA  50F3               	movf	prodl,w,c
  2663  000CFC  2420               	addwf	xSumMatches@buffer_to_chk,w,c
  2664  000CFE  6ED9               	movwf	fsr2l,c
  2665  000D00  50F4               	movf	prodh,w,c
  2666  000D02  2021               	addwfc	xSumMatches@buffer_to_chk+1,w,c
  2667  000D04  6EDA               	movwf	fsr2h,c
  2668  000D06  0E00               	movlw	0
  2669  000D08  6EDF               	movwf	indf2,c
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;SlaveComm_PIC18.c: 185: xsumRecieving = 1;
  2673  000D0A  0E01               	movlw	1
  2674  000D0C  6F74               	movwf	xSumMatches@xsumRecieving& (0+255),b
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;SlaveComm_PIC18.c: 186: recXsumbuf[recXsumPointer] = '\0';
  2678  000D0E  0E60               	movlw	low xSumMatches@recXsumbuf
  2679  000D10  2576               	addwf	xSumMatches@recXsumPointer& (0+255),w,b
  2680  000D12  6ED9               	movwf	fsr2l,c
  2681  000D14  0E00               	movlw	high xSumMatches@recXsumbuf
  2682  000D16  2177               	addwfc	(xSumMatches@recXsumPointer+1)& (0+255),w,b
  2683  000D18  6EDA               	movwf	fsr2h,c
  2684  000D1A  0E00               	movlw	0
  2685  000D1C  6EDF               	movwf	indf2,c
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;SlaveComm_PIC18.c: 187: buffer_to_chk->read_position++;
  2689  000D1E  EE20 F029          	lfsr	2,41
  2690  000D22  5020               	movf	xSumMatches@buffer_to_chk,w,c
  2691  000D24  26D9               	addwf	fsr2l,f,c
  2692  000D26  5021               	movf	xSumMatches@buffer_to_chk+1,w,c
  2693  000D28  22DA               	addwfc	fsr2h,f,c
  2694  000D2A  2ADF               	incf	indf2,f,c
  2695                           
  2696                           ;SlaveComm_PIC18.c: 188: }
  2697  000D2C  D004               	goto	l303
  2698  000D2E                     l302:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;SlaveComm_PIC18.c: 189: else{
  2702                           ;SlaveComm_PIC18.c: 190: xsum += currentData;
  2703                           
  2704                           ; BSR set to: 0
  2705  000D2E  5178               	movf	xSumMatches@currentData& (0+255),w,b
  2706  000D30  2770               	addwf	xSumMatches@xsum& (0+255),f,b
  2707  000D32  0E00               	movlw	0
  2708  000D34  2371               	addwfc	(xSumMatches@xsum+1)& (0+255),f,b
  2709  000D36                     l303:
  2710                           
  2711                           ; BSR set to: 0
  2712                           
  2713                           ; BSR set to: 0
  2714                           
  2715                           ; BSR set to: 0
  2716  000D36  0E2A               	movlw	42
  2717  000D38  1978               	xorwf	xSumMatches@currentData& (0+255),w,b
  2718  000D3A  A4D8               	btfss	status,2,c
  2719  000D3C  D799               	goto	l299
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;SlaveComm_PIC18.c: 191: }
  2723                           ;SlaveComm_PIC18.c: 193: }
  2724                           ;SlaveComm_PIC18.c: 195: }
  2725                           ;SlaveComm_PIC18.c: 197: bool matches = 0;
  2726                           
  2727                           ; BSR set to: 0
  2728  000D3E  0E00               	movlw	0
  2729  000D40  6F75               	movwf	xSumMatches@matches& (0+255),b
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;SlaveComm_PIC18.c: 199: recXsum = atoi (recXsumbuf);
  2733  000D42  0E60               	movlw	low xSumMatches@recXsumbuf
  2734  000D44  6E19               	movwf	atoi@s,c
  2735  000D46  0E00               	movlw	high xSumMatches@recXsumbuf
  2736  000D48  6E1A               	movwf	atoi@s+1,c
  2737  000D4A  EC42  F008         	call	_atoi	;wreg free
  2738  000D4E  C019  F072         	movff	?_atoi,xSumMatches@recXsum
  2739  000D52  C01A  F073         	movff	?_atoi+1,xSumMatches@recXsum+1
  2740                           
  2741                           ;SlaveComm_PIC18.c: 200: if (xsum == recXsum){
  2742  000D56  0100               	movlb	0	; () banked
  2743  000D58  5172               	movf	xSumMatches@recXsum& (0+255),w,b
  2744  000D5A  1970               	xorwf	xSumMatches@xsum& (0+255),w,b
  2745  000D5C  E106               	bnz	l305
  2746  000D5E  5173               	movf	(xSumMatches@recXsum+1)& (0+255),w,b
  2747  000D60  1971               	xorwf	(xSumMatches@xsum+1)& (0+255),w,b
  2748  000D62  A4D8               	btfss	status,2,c
  2749  000D64  D002               	goto	l305
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;SlaveComm_PIC18.c: 201: matches = 1;
  2753  000D66  0E01               	movlw	1
  2754  000D68  6F75               	movwf	xSumMatches@matches& (0+255),b
  2755  000D6A                     l305:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;SlaveComm_PIC18.c: 202: }
  2759                           ;SlaveComm_PIC18.c: 204: return matches;
  2760  000D6A  5175               	movf	xSumMatches@matches& (0+255),w,b
  2761  000D6C  0012               	return	
  2762  000D6E                     __end_of_xSumMatches:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           intcon	equ	0xFF2
  2771                           intcon2	equ	0xFF1
  2772                           intcon3	equ	0xFF0
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           postdec1	equ	0xFE5
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _atoi *****************
  2784 ;; Defined at:
  2785 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  s               2   24[COMRAM] PTR const unsigned char 
  2788 ;;		 -> xSumMatches@recXsumbuf(16), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  a               2   29[COMRAM] int 
  2791 ;;  sign            1   28[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2   24[COMRAM] int 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         2       0       0       0       0       0       0
  2802 ;;      Locals:         3       0       0       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0       0       0
  2804 ;;      Totals:         7       0       0       0       0       0       0
  2805 ;;Total ram usage:        7 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    2
  2808 ;; This function calls:
  2809 ;;		___wmul
  2810 ;;		_isdigit
  2811 ;; This function is called by:
  2812 ;;		_xSumMatches
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text12
  2817  001084                     __ptext12:
  2818                           	opt stack 0
  2819  001084                     _atoi:
  2820                           	opt stack 26
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;incstack = 0
  2824  001084  D002               	goto	l630
  2825  001086  4A19               	infsnz	atoi@s,f,c
  2826  001088  2A1A               	incf	atoi@s+1,f,c
  2827  00108A                     l630:
  2828  00108A  C019  FFD9         	movff	atoi@s,fsr2l
  2829  00108E  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2830  001092  0E20               	movlw	32
  2831  001094  18DE               	xorwf	postinc2,w,c
  2832  001096  B4D8               	btfsc	status,2,c
  2833  001098  D7F6               	goto	l631
  2834  00109A  C019  FFD9         	movff	atoi@s,fsr2l
  2835  00109E  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2836  0010A2  0E09               	movlw	9
  2837  0010A4  18DE               	xorwf	postinc2,w,c
  2838  0010A6  B4D8               	btfsc	status,2,c
  2839  0010A8  D7EE               	goto	l631
  2840  0010AA  0E00               	movlw	0
  2841  0010AC  6E1F               	movwf	atoi@a+1,c
  2842  0010AE  0E00               	movlw	0
  2843  0010B0  6E1E               	movwf	atoi@a,c
  2844  0010B2  0E00               	movlw	0
  2845  0010B4  6E1D               	movwf	atoi@sign,c
  2846  0010B6  C019  FFD9         	movff	atoi@s,fsr2l
  2847  0010BA  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2848  0010BE  0E2D               	movlw	45
  2849  0010C0  18DE               	xorwf	postinc2,w,c
  2850  0010C2  A4D8               	btfss	status,2,c
  2851  0010C4  D002               	goto	l633
  2852  0010C6  2A1D               	incf	atoi@sign,f,c
  2853  0010C8  D024               	goto	l3380
  2854  0010CA                     l633:
  2855  0010CA  C019  FFD9         	movff	atoi@s,fsr2l
  2856  0010CE  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2857  0010D2  0E2B               	movlw	43
  2858  0010D4  18DE               	xorwf	postinc2,w,c
  2859  0010D6  A4D8               	btfss	status,2,c
  2860  0010D8  D01E               	goto	l636
  2861  0010DA  D01B               	goto	l3380
  2862  0010DC  C01E  F013         	movff	atoi@a,___wmul@multiplier
  2863  0010E0  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  2864  0010E4  0E00               	movlw	0
  2865  0010E6  6E16               	movwf	___wmul@multiplicand+1,c
  2866  0010E8  0E0A               	movlw	10
  2867  0010EA  6E15               	movwf	___wmul@multiplicand,c
  2868  0010EC  EC53  F00E         	call	___wmul	;wreg free
  2869  0010F0  C019  FFD9         	movff	atoi@s,fsr2l
  2870  0010F4  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2871  0010F8  50DF               	movf	indf2,w,c
  2872  0010FA  6E1B               	movwf	??_atoi& (0+255),c
  2873  0010FC  6A1C               	clrf	(??_atoi+1)& (0+255),c
  2874  0010FE  5013               	movf	?___wmul,w,c
  2875  001100  261B               	addwf	??_atoi,f,c
  2876  001102  5014               	movf	?___wmul+1,w,c
  2877  001104  221C               	addwfc	??_atoi+1,f,c
  2878  001106  0ED0               	movlw	208
  2879  001108  241B               	addwf	??_atoi,w,c
  2880  00110A  6E1E               	movwf	atoi@a,c
  2881  00110C  0EFF               	movlw	255
  2882  00110E  201C               	addwfc	??_atoi+1,w,c
  2883  001110  6E1F               	movwf	atoi@a+1,c
  2884  001112                     l3380:
  2885  001112  4A19               	infsnz	atoi@s,f,c
  2886  001114  2A1A               	incf	atoi@s+1,f,c
  2887  001116                     l636:
  2888  001116  C019  FFD9         	movff	atoi@s,fsr2l
  2889  00111A  C01A  FFDA         	movff	atoi@s+1,fsr2h
  2890  00111E  50DF               	movf	indf2,w,c
  2891  001120  EC97  F00E         	call	_isdigit
  2892  001124  B0D8               	btfsc	status,0,c
  2893  001126  D7DA               	goto	l637
  2894  001128  501D               	movf	atoi@sign,w,c
  2895  00112A  B4D8               	btfsc	status,2,c
  2896  00112C  D00D               	goto	l639
  2897  00112E  C01E  F01B         	movff	atoi@a,??_atoi
  2898  001132  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  2899  001136  1E1B               	comf	??_atoi,f,c
  2900  001138  1E1C               	comf	??_atoi+1,f,c
  2901  00113A  4A1B               	infsnz	??_atoi,f,c
  2902  00113C  2A1C               	incf	??_atoi+1,f,c
  2903  00113E  C01B  F019         	movff	??_atoi,?_atoi
  2904  001142  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  2905  001146  0012               	return	
  2906  001148                     l639:
  2907  001148  C01E  F019         	movff	atoi@a,?_atoi
  2908  00114C  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  2909  001150  0012               	return		;funcret
  2910  001152                     __end_of_atoi:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           intcon2	equ	0xFF1
  2920                           intcon3	equ	0xFF0
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           postdec1	equ	0xFE5
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _send_data *****************
  2932 ;; Defined at:
  2933 ;;		line 554 in file "SlaveComm_PIC18.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  2936 ;;		 -> communications@send_buffer(42), 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  send_end        1   24[COMRAM] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      unsigned char 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2948 ;;      Params:         2       0       0       0       0       0       0
  2949 ;;      Locals:         1       0       0       0       0       0       0
  2950 ;;      Temps:          2       0       0       0       0       0       0
  2951 ;;      Totals:         5       0       0       0       0       0       0
  2952 ;;Total ram usage:        5 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    2
  2955 ;; This function calls:
  2956 ;;		_SPI_send_data
  2957 ;; This function is called by:
  2958 ;;		_communications
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text13
  2963  001622                     __ptext13:
  2964                           	opt stack 0
  2965  001622                     _send_data:
  2966                           	opt stack 27
  2967                           
  2968                           ;SlaveComm_PIC18.c: 556: bool send_end;
  2969                           ;SlaveComm_PIC18.c: 558: if (send_buffer->read_position == send_buffer->write_position)
  2970                           
  2971                           ;incstack = 0
  2972  001622  EE20 F028          	lfsr	2,40
  2973  001626  5015               	movf	send_data@send_buffer,w,c
  2974  001628  26D9               	addwf	fsr2l,f,c
  2975  00162A  5016               	movf	send_data@send_buffer+1,w,c
  2976  00162C  22DA               	addwfc	fsr2h,f,c
  2977  00162E  EE10 F029          	lfsr	1,41
  2978  001632  5015               	movf	send_data@send_buffer,w,c
  2979  001634  26E1               	addwf	fsr1l,f,c
  2980  001636  5016               	movf	send_data@send_buffer+1,w,c
  2981  001638  22E2               	addwfc	fsr1h,f,c
  2982  00163A  50DE               	movf	postinc2,w,c
  2983  00163C  18E6               	xorwf	postinc1,w,c
  2984  00163E  A4D8               	btfss	status,2,c
  2985  001640  D006               	goto	l406
  2986                           
  2987                           ;SlaveComm_PIC18.c: 559: {
  2988                           ;SlaveComm_PIC18.c: 560: send_end = 1;
  2989  001642  0E01               	movlw	1
  2990  001644  6E19               	movwf	send_data@send_end,c
  2991                           
  2992                           ;SlaveComm_PIC18.c: 561: SPI_send_data('\0');
  2993  001646  0E00               	movlw	0
  2994  001648  EC78  F00E         	call	_SPI_send_data
  2995                           
  2996                           ;SlaveComm_PIC18.c: 562: }
  2997  00164C  D030               	goto	l409
  2998  00164E                     l406:
  2999                           
  3000                           ;SlaveComm_PIC18.c: 563: else
  3001                           ;SlaveComm_PIC18.c: 564: {
  3002                           ;SlaveComm_PIC18.c: 565: send_end = 0;
  3003  00164E  0E00               	movlw	0
  3004  001650  6E19               	movwf	send_data@send_end,c
  3005                           
  3006                           ;SlaveComm_PIC18.c: 568: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  3007  001652  EE20 F029          	lfsr	2,41
  3008  001656  5015               	movf	send_data@send_buffer,w,c
  3009  001658  26D9               	addwf	fsr2l,f,c
  3010  00165A  5016               	movf	send_data@send_buffer+1,w,c
  3011  00165C  22DA               	addwfc	fsr2h,f,c
  3012  00165E  50DF               	movf	indf2,w,c
  3013  001660  6E17               	movwf	??_send_data& (0+255),c
  3014  001662  5017               	movf	??_send_data,w,c
  3015  001664  0D01               	mullw	1
  3016  001666  50F3               	movf	prodl,w,c
  3017  001668  2415               	addwf	send_data@send_buffer,w,c
  3018  00166A  6ED9               	movwf	fsr2l,c
  3019  00166C  50F4               	movf	prodh,w,c
  3020  00166E  2016               	addwfc	send_data@send_buffer+1,w,c
  3021  001670  6EDA               	movwf	fsr2h,c
  3022  001672  50DF               	movf	indf2,w,c
  3023  001674  EC78  F00E         	call	_SPI_send_data
  3024  001678  06E8               	decf	wreg,f,c
  3025  00167A  A4D8               	btfss	status,2,c
  3026  00167C  D018               	goto	l409
  3027                           
  3028                           ;SlaveComm_PIC18.c: 569: {
  3029                           ;SlaveComm_PIC18.c: 571: send_buffer->read_position++;
  3030  00167E  EE20 F029          	lfsr	2,41
  3031  001682  5015               	movf	send_data@send_buffer,w,c
  3032  001684  26D9               	addwf	fsr2l,f,c
  3033  001686  5016               	movf	send_data@send_buffer+1,w,c
  3034  001688  22DA               	addwfc	fsr2h,f,c
  3035  00168A  2ADF               	incf	indf2,f,c
  3036                           
  3037                           ;SlaveComm_PIC18.c: 572: if (send_buffer->read_position >= 40)
  3038  00168C  EE20 F029          	lfsr	2,41
  3039  001690  5015               	movf	send_data@send_buffer,w,c
  3040  001692  26D9               	addwf	fsr2l,f,c
  3041  001694  5016               	movf	send_data@send_buffer+1,w,c
  3042  001696  22DA               	addwfc	fsr2h,f,c
  3043  001698  0E27               	movlw	39
  3044  00169A  64DF               	cpfsgt	indf2,c
  3045  00169C  D008               	goto	l409
  3046                           
  3047                           ;SlaveComm_PIC18.c: 573: {
  3048                           ;SlaveComm_PIC18.c: 574: send_buffer->read_position = 0;
  3049  00169E  EE20 F029          	lfsr	2,41
  3050  0016A2  5015               	movf	send_data@send_buffer,w,c
  3051  0016A4  26D9               	addwf	fsr2l,f,c
  3052  0016A6  5016               	movf	send_data@send_buffer+1,w,c
  3053  0016A8  22DA               	addwfc	fsr2h,f,c
  3054  0016AA  0E00               	movlw	0
  3055  0016AC  6EDF               	movwf	indf2,c
  3056  0016AE                     l409:
  3057                           
  3058                           ;SlaveComm_PIC18.c: 575: }
  3059                           ;SlaveComm_PIC18.c: 576: }
  3060                           ;SlaveComm_PIC18.c: 577: }
  3061                           ;SlaveComm_PIC18.c: 579: return send_end;
  3062  0016AE  5019               	movf	send_data@send_end,w,c
  3063  0016B0  0012               	return	
  3064  0016B2                     __end_of_send_data:
  3065                           	opt stack 0
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           prodh	equ	0xFF4
  3071                           prodl	equ	0xFF3
  3072                           intcon	equ	0xFF2
  3073                           intcon2	equ	0xFF1
  3074                           intcon3	equ	0xFF0
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           postinc1	equ	0xFE6
  3078                           postdec1	equ	0xFE5
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           indf2	equ	0xFDF
  3082                           postinc2	equ	0xFDE
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _SPI_send_data *****************
  3088 ;; Defined at:
  3089 ;;		line 652 in file "SlaveComm_PIC18.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  data            1    wreg     unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  data            1   18[COMRAM] unsigned char 
  3094 ;;  sendGood        1   19[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      unsigned char 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_send_data
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text14
  3119  001CF0                     __ptext14:
  3120                           	opt stack 0
  3121  001CF0                     _SPI_send_data:
  3122                           	opt stack 27
  3123                           
  3124                           ;incstack = 0
  3125                           ;SPI_send_data@data stored from wreg
  3126  001CF0  6E13               	movwf	SPI_send_data@data,c
  3127                           
  3128                           ;SlaveComm_PIC18.c: 654: bool sendGood = 0;
  3129  001CF2  0E00               	movlw	0
  3130  001CF4  6E14               	movwf	SPI_send_data@sendGood,c
  3131                           
  3132                           ;SlaveComm_PIC18.c: 656: if (SPI_transmit_wait == 0)
  3133  001CF6  503E               	movf	_SPI_transmit_wait,w,c
  3134  001CF8  A4D8               	btfss	status,2,c
  3135  001CFA  D006               	goto	l437
  3136                           
  3137                           ;SlaveComm_PIC18.c: 657: {
  3138                           ;SlaveComm_PIC18.c: 658: SSP2BUF = data;
  3139  001CFC  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  3140                           
  3141                           ;SlaveComm_PIC18.c: 659: SPI_transmit_wait = 1;
  3142  001D00  0E01               	movlw	1
  3143  001D02  6E3E               	movwf	_SPI_transmit_wait,c
  3144                           
  3145                           ;SlaveComm_PIC18.c: 660: sendGood = 1;
  3146  001D04  0E01               	movlw	1
  3147  001D06  D001               	goto	L1
  3148  001D08                     l437:
  3149                           
  3150                           ;SlaveComm_PIC18.c: 662: else
  3151                           ;SlaveComm_PIC18.c: 663: {
  3152                           ;SlaveComm_PIC18.c: 664: sendGood = 0;
  3153  001D08  0E00               	movlw	0
  3154  001D0A                     L1:
  3155  001D0A  6E14               	movwf	SPI_send_data@sendGood,c
  3156                           
  3157                           ;SlaveComm_PIC18.c: 665: }
  3158                           ;SlaveComm_PIC18.c: 667: return sendGood;
  3159  001D0C  5014               	movf	SPI_send_data@sendGood,w,c
  3160  001D0E  0012               	return	
  3161  001D10                     __end_of_SPI_send_data:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           intcon	equ	0xFF2
  3170                           intcon2	equ	0xFF1
  3171                           intcon3	equ	0xFF0
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postinc1	equ	0xFE6
  3175                           postdec1	equ	0xFE5
  3176                           fsr1h	equ	0xFE2
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _resetCommunications *****************
  3185 ;; Defined at:
  3186 ;;		line 207 in file "SlaveComm_PIC18.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  send_buffer     2   28[BANK0 ] PTR struct buffer
  3189 ;;		 -> communications@send_buffer(42), 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3201 ;;      Params:         0       2       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0
  3203 ;;      Temps:          0       2       0       0       0       0       0
  3204 ;;      Totals:         0       4       0       0       0       0       0
  3205 ;;Total ram usage:        4 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    7
  3208 ;; This function calls:
  3209 ;;		_com_command_setEnergyUsed
  3210 ;;		_com_command_setPower
  3211 ;;		_com_command_setVersion
  3212 ;; This function is called by:
  3213 ;;		_communications
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text15
  3218  0014F0                     __ptext15:
  3219                           	opt stack 0
  3220  0014F0                     _resetCommunications:
  3221                           	opt stack 22
  3222                           
  3223                           ;SlaveComm_PIC18.c: 210: static int commState = 0;
  3224                           ;SlaveComm_PIC18.c: 213: SSP2CON1bits.SSPEN = 0;
  3225                           
  3226                           ;incstack = 0
  3227  0014F0  9A6C               	bcf	3948,5,c	;volatile
  3228                           
  3229                           ;SlaveComm_PIC18.c: 214: _delay((unsigned long)((1)*(16000000/4000.0)));
  3230  0014F2  0E06               	movlw	6
  3231  0014F4  0100               	movlb	0	; () banked
  3232  0014F6  6F7E               	movwf	??_resetCommunications& (0+255),b
  3233  0014F8  0E30               	movlw	48
  3234  0014FA                     u3347:
  3235  0014FA  2EE8               	decfsz	wreg,f,c
  3236  0014FC  D7FE               	bra	u3347
  3237  0014FE  2F7E               	decfsz	??_resetCommunications& (0+255),f,b
  3238  001500  D7FC               	bra	u3347
  3239  001502  F000               	nop	
  3240                           
  3241                           ;SlaveComm_PIC18.c: 215: SSP2CON1bits.SSPEN = 1;
  3242  001504  8A6C               	bsf	3948,5,c	;volatile
  3243                           
  3244                           ;SlaveComm_PIC18.c: 217: SSP2CON1bits.WCOL = 0;
  3245  001506  9E6C               	bcf	3948,7,c	;volatile
  3246                           
  3247                           ;SlaveComm_PIC18.c: 218: SPI_transmit_wait = 0;
  3248  001508  0E00               	movlw	0
  3249  00150A  6E3E               	movwf	_SPI_transmit_wait,c
  3250                           
  3251                           ;SlaveComm_PIC18.c: 220: send_buffer->read_position = 0;
  3252  00150C  0100               	movlb	0	; () banked
  3253  00150E  EE20 F029          	lfsr	2,41
  3254  001512  517C               	movf	resetCommunications@send_buffer& (0+255),w,b
  3255  001514  26D9               	addwf	fsr2l,f,c
  3256  001516  517D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  3257  001518  22DA               	addwfc	fsr2h,f,c
  3258  00151A  0E00               	movlw	0
  3259  00151C  6EDF               	movwf	indf2,c
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;SlaveComm_PIC18.c: 221: send_buffer->write_position = 0;
  3263  00151E  EE20 F028          	lfsr	2,40
  3264  001522  517C               	movf	resetCommunications@send_buffer& (0+255),w,b
  3265  001524  26D9               	addwf	fsr2l,f,c
  3266  001526  517D               	movf	(resetCommunications@send_buffer+1)& (0+255),w,b
  3267  001528  22DA               	addwfc	fsr2h,f,c
  3268  00152A  0E00               	movlw	0
  3269  00152C  6EDF               	movwf	indf2,c
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;SlaveComm_PIC18.c: 226: commState++;
  3273  00152E  4A3B               	infsnz	resetCommunications@commState,f,c
  3274  001530  2A3C               	incf	resetCommunications@commState+1,f,c
  3275                           
  3276                           ;SlaveComm_PIC18.c: 227: switch (commState)
  3277  001532  D019               	goto	l311
  3278  001534                     
  3279                           ; BSR set to: 0
  3280                           ;SlaveComm_PIC18.c: 230: com_command_setVersion(send_buffer);
  3281                           
  3282                           ; BSR set to: 0
  3283  001534  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  3284  001538  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  3285  00153C  EC40  F00E         	call	_com_command_setVersion	;wreg free
  3286                           
  3287                           ;SlaveComm_PIC18.c: 231: break;
  3288  001540  0012               	return	
  3289  001542                     
  3290                           ;SlaveComm_PIC18.c: 233: com_command_setPower(send_buffer);
  3291  001542  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  3292  001546  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  3293  00154A  EC32  F00D         	call	_com_command_setPower	;wreg free
  3294                           
  3295                           ;SlaveComm_PIC18.c: 234: break;
  3296  00154E  0012               	return	
  3297  001550                     
  3298                           ;SlaveComm_PIC18.c: 236: com_command_setEnergyUsed(send_buffer);
  3299  001550  C07C  F039         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  3300  001554  C07D  F03A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3301  001558  EC57  F00D         	call	_com_command_setEnergyUsed	;wreg free
  3302  00155C                     
  3303                           ;SlaveComm_PIC18.c: 248: commState = 0;
  3304  00155C  0E00               	movlw	0
  3305  00155E  6E3C               	movwf	resetCommunications@commState+1,c
  3306  001560  0E00               	movlw	0
  3307  001562  6E3B               	movwf	resetCommunications@commState,c
  3308                           
  3309                           ;SlaveComm_PIC18.c: 250: }
  3310                           
  3311                           ;SlaveComm_PIC18.c: 249: break;
  3312  001564  0012               	return	
  3313  001566                     l311:
  3314  001566  C03B  F07E         	movff	resetCommunications@commState,??_resetCommunications
  3315  00156A  C03C  F07F         	movff	resetCommunications@commState+1,??_resetCommunications+1
  3316                           
  3317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3318                           ; Switch size 1, requested type "space"
  3319                           ; Number of cases is 1, Range of values is 0 to 0
  3320                           ; switch strategies available:
  3321                           ; Name         Instructions Cycles
  3322                           ; simple_byte            4     3 (average)
  3323                           ;	Chosen strategy is simple_byte
  3324  00156E  0100               	movlb	0	; () banked
  3325  001570  517F               	movf	(??_resetCommunications+1)& (0+255),w,b
  3326  001572  0A00               	xorlw	0	; case 0
  3327  001574  A4D8               	btfss	status,2,c
  3328  001576  D7F2               	goto	l316
  3329                           
  3330                           ; BSR set to: 0
  3331                           ; Switch size 1, requested type "space"
  3332                           ; Number of cases is 3, Range of values is 1 to 3
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; simple_byte           10     6 (average)
  3336                           ;	Chosen strategy is simple_byte
  3337  001578  517E               	movf	??_resetCommunications& (0+255),w,b
  3338  00157A  0A01               	xorlw	1	; case 1
  3339  00157C  B4D8               	btfsc	status,2,c
  3340  00157E  D7DA               	goto	l312
  3341  001580  0A03               	xorlw	3	; case 2
  3342  001582  B4D8               	btfsc	status,2,c
  3343  001584  D7DE               	goto	l314
  3344  001586  0A01               	xorlw	1	; case 3
  3345  001588  B4D8               	btfsc	status,2,c
  3346  00158A  D7E2               	goto	l315
  3347  00158C  D7E7               	goto	l316
  3348  00158E                     __end_of_resetCommunications:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           prodh	equ	0xFF4
  3355                           prodl	equ	0xFF3
  3356                           intcon	equ	0xFF2
  3357                           intcon2	equ	0xFF1
  3358                           intcon3	equ	0xFF0
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postinc1	equ	0xFE6
  3362                           postdec1	equ	0xFE5
  3363                           fsr1h	equ	0xFE2
  3364                           fsr1l	equ	0xFE1
  3365                           indf2	equ	0xFDF
  3366                           postinc2	equ	0xFDE
  3367                           fsr2h	equ	0xFDA
  3368                           fsr2l	equ	0xFD9
  3369                           status	equ	0xFD8
  3370                           
  3371 ;; *************** function _com_command_setVersion *****************
  3372 ;; Defined at:
  3373 ;;		line 732 in file "SlaveComm_PIC18.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  3376 ;;		 -> communications@send_buffer(42), 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         2       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         2       0       0       0       0       0       0
  3392 ;;Total ram usage:        2 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    6
  3395 ;; This function calls:
  3396 ;;		_command_builder3
  3397 ;; This function is called by:
  3398 ;;		_resetCommunications
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text16
  3403  001C80                     __ptext16:
  3404                           	opt stack 0
  3405  001C80                     _com_command_setVersion:
  3406                           	opt stack 22
  3407                           
  3408                           ;SlaveComm_PIC18.c: 734: command_builder3(send_buffer, "Set", "PSVersion", "444");
  3409                           
  3410                           ;incstack = 0
  3411  001C80  C039  F02F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  3412  001C84  C03A  F030         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  3413  001C88  0E57               	movlw	low STR_2
  3414  001C8A  6E31               	movwf	command_builder3@data1,c
  3415  001C8C  0E06               	movlw	high STR_2
  3416  001C8E  6E32               	movwf	command_builder3@data1+1,c
  3417  001C90  0E0D               	movlw	low STR_22
  3418  001C92  6E33               	movwf	command_builder3@data2,c
  3419  001C94  0E06               	movlw	high STR_22
  3420  001C96  6E34               	movwf	command_builder3@data2+1,c
  3421  001C98  0E4B               	movlw	low STR_40
  3422  001C9A  6E35               	movwf	command_builder3@data3,c
  3423  001C9C  0E06               	movlw	high STR_40
  3424  001C9E  6E36               	movwf	command_builder3@data3+1,c
  3425  001CA0  ECA9  F008         	call	_command_builder3	;wreg free
  3426  001CA4  0012               	return		;funcret
  3427  001CA6                     __end_of_com_command_setVersion:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           intcon2	equ	0xFF1
  3437                           intcon3	equ	0xFF0
  3438                           postinc0	equ	0xFEE
  3439                           wreg	equ	0xFE8
  3440                           postinc1	equ	0xFE6
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           indf2	equ	0xFDF
  3445                           postinc2	equ	0xFDE
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _com_command_setPower *****************
  3451 ;; Defined at:
  3452 ;;		line 687 in file "SlaveComm_PIC18.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  3455 ;;		 -> communications@send_buffer(42), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  temp           12   16[BANK0 ] unsigned char [12]
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         2       0       0       0       0       0       0
  3468 ;;      Locals:         0      12       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0
  3470 ;;      Totals:         2      12       0       0       0       0       0
  3471 ;;Total ram usage:       14 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    6
  3474 ;; This function calls:
  3475 ;;		_command_builder3
  3476 ;;		_ultoa
  3477 ;; This function is called by:
  3478 ;;		_resetCommunications
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text17
  3483  001A64                     __ptext17:
  3484                           	opt stack 0
  3485  001A64                     _com_command_setPower:
  3486                           	opt stack 22
  3487                           
  3488                           ;SlaveComm_PIC18.c: 690: char temp[12];
  3489                           ;SlaveComm_PIC18.c: 692: ultoa(temp, meterWatts, 10);
  3490                           
  3491                           ;incstack = 0
  3492  001A64  0E70               	movlw	low com_command_setPower@temp
  3493  001A66  6E20               	movwf	ultoa@buf,c
  3494  001A68  0E00               	movlw	high com_command_setPower@temp
  3495  001A6A  6E21               	movwf	ultoa@buf+1,c
  3496  001A6C  C0CB  F022         	movff	_meterWatts,ultoa@val
  3497  001A70  C0CC  F023         	movff	_meterWatts+1,ultoa@val+1
  3498  001A74  C0CD  F024         	movff	_meterWatts+2,ultoa@val+2
  3499  001A78  C0CE  F025         	movff	_meterWatts+3,ultoa@val+3
  3500  001A7C  0E00               	movlw	0
  3501  001A7E  6E27               	movwf	ultoa@base+1,c
  3502  001A80  0E0A               	movlw	10
  3503  001A82  6E26               	movwf	ultoa@base,c
  3504  001A84  EC4D  F007         	call	_ultoa	;wreg free
  3505                           
  3506                           ;SlaveComm_PIC18.c: 693: command_builder3(send_buffer, "Set", "Watts", temp);
  3507  001A88  C039  F02F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  3508  001A8C  C03A  F030         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  3509  001A90  0E57               	movlw	low STR_2
  3510  001A92  6E31               	movwf	command_builder3@data1,c
  3511  001A94  0E06               	movlw	high STR_2
  3512  001A96  6E32               	movwf	command_builder3@data1+1,c
  3513  001A98  0E24               	movlw	low STR_18
  3514  001A9A  6E33               	movwf	command_builder3@data2,c
  3515  001A9C  0E06               	movlw	high STR_18
  3516  001A9E  6E34               	movwf	command_builder3@data2+1,c
  3517  001AA0  0E70               	movlw	low com_command_setPower@temp
  3518  001AA2  6E35               	movwf	command_builder3@data3,c
  3519  001AA4  0E00               	movlw	high com_command_setPower@temp
  3520  001AA6  6E36               	movwf	command_builder3@data3+1,c
  3521  001AA8  ECA9  F008         	call	_command_builder3	;wreg free
  3522  001AAC  0012               	return	
  3523  001AAE                     __end_of_com_command_setPower:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           intcon	equ	0xFF2
  3532                           intcon2	equ	0xFF1
  3533                           intcon3	equ	0xFF0
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postinc1	equ	0xFE6
  3537                           postdec1	equ	0xFE5
  3538                           fsr1h	equ	0xFE2
  3539                           fsr1l	equ	0xFE1
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _receive_data *****************
  3547 ;; Defined at:
  3548 ;;		line 254 in file "SlaveComm_PIC18.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  3551 ;;		 -> communications@receive_buffer(42), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  data            1   24[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      enum E6751
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         2       0       0       0       0       0       0
  3564 ;;      Locals:         1       0       0       0       0       0       0
  3565 ;;      Temps:          1       0       0       0       0       0       0
  3566 ;;      Totals:         4       0       0       0       0       0       0
  3567 ;;Total ram usage:        4 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    2
  3570 ;; This function calls:
  3571 ;;		_SPI_receive_data
  3572 ;; This function is called by:
  3573 ;;		_communications
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text18
  3578  0012D4                     __ptext18:
  3579                           	opt stack 0
  3580  0012D4                     _receive_data:
  3581                           	opt stack 27
  3582                           
  3583                           ;SlaveComm_PIC18.c: 256: char data;
  3584                           ;SlaveComm_PIC18.c: 258: static enum receive_status my_status = receive_waiting;
  3585                           ;SlaveComm_PIC18.c: 260: if (my_status == receive_end_command)
  3586                           
  3587                           ;incstack = 0
  3588  0012D4  0E02               	movlw	2
  3589  0012D6  183D               	xorwf	receive_data@my_status,w,c
  3590  0012D8  A4D8               	btfss	status,2,c
  3591  0012DA  D002               	goto	l322
  3592                           
  3593                           ;SlaveComm_PIC18.c: 261: {
  3594                           ;SlaveComm_PIC18.c: 262: my_status = receive_waiting;
  3595  0012DC  0E00               	movlw	0
  3596  0012DE  6E3D               	movwf	receive_data@my_status,c
  3597  0012E0                     l322:
  3598                           
  3599                           ;SlaveComm_PIC18.c: 263: }
  3600                           ;SlaveComm_PIC18.c: 265: if (SPI_receive_data(&data) == 1)
  3601  0012E0  0E19               	movlw	low receive_data@data
  3602  0012E2  6E13               	movwf	SPI_receive_data@data,c
  3603  0012E4  0E00               	movlw	high receive_data@data
  3604  0012E6  6E14               	movwf	SPI_receive_data@data+1,c
  3605  0012E8  EC2C  F00E         	call	_SPI_receive_data	;wreg free
  3606  0012EC  06E8               	decf	wreg,f,c
  3607  0012EE  A4D8               	btfss	status,2,c
  3608  0012F0  D04F               	goto	l327
  3609                           
  3610                           ;SlaveComm_PIC18.c: 266: {
  3611                           ;SlaveComm_PIC18.c: 267: if ((data == '!') && (my_status != receive_in_command))
  3612  0012F2  0E21               	movlw	33
  3613  0012F4  1819               	xorwf	receive_data@data,w,c
  3614  0012F6  A4D8               	btfss	status,2,c
  3615  0012F8  D015               	goto	l324
  3616  0012FA  043D               	decf	receive_data@my_status,w,c
  3617  0012FC  B4D8               	btfsc	status,2,c
  3618  0012FE  D012               	goto	l324
  3619                           
  3620                           ;SlaveComm_PIC18.c: 268: {
  3621                           ;SlaveComm_PIC18.c: 269: my_status = receive_in_command;
  3622  001300  0E01               	movlw	1
  3623  001302  6E3D               	movwf	receive_data@my_status,c
  3624                           
  3625                           ;SlaveComm_PIC18.c: 270: receive_buffer->read_position = 0;
  3626  001304  EE20 F029          	lfsr	2,41
  3627  001308  5016               	movf	receive_data@receive_buffer,w,c
  3628  00130A  26D9               	addwf	fsr2l,f,c
  3629  00130C  5017               	movf	receive_data@receive_buffer+1,w,c
  3630  00130E  22DA               	addwfc	fsr2h,f,c
  3631  001310  0E00               	movlw	0
  3632  001312  6EDF               	movwf	indf2,c
  3633                           
  3634                           ;SlaveComm_PIC18.c: 271: receive_buffer->write_position = 0;
  3635  001314  EE20 F028          	lfsr	2,40
  3636  001318  5016               	movf	receive_data@receive_buffer,w,c
  3637  00131A  26D9               	addwf	fsr2l,f,c
  3638  00131C  5017               	movf	receive_data@receive_buffer+1,w,c
  3639  00131E  22DA               	addwfc	fsr2h,f,c
  3640  001320  0E00               	movlw	0
  3641  001322  6EDF               	movwf	indf2,c
  3642  001324                     l324:
  3643                           
  3644                           ;SlaveComm_PIC18.c: 272: }
  3645                           ;SlaveComm_PIC18.c: 274: if (my_status == receive_in_command)
  3646  001324  043D               	decf	receive_data@my_status,w,c
  3647  001326  A4D8               	btfss	status,2,c
  3648  001328  D02A               	goto	l326
  3649                           
  3650                           ;SlaveComm_PIC18.c: 275: {
  3651                           ;SlaveComm_PIC18.c: 276: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  3652  00132A  EE20 F028          	lfsr	2,40
  3653  00132E  5016               	movf	receive_data@receive_buffer,w,c
  3654  001330  26D9               	addwf	fsr2l,f,c
  3655  001332  5017               	movf	receive_data@receive_buffer+1,w,c
  3656  001334  22DA               	addwfc	fsr2h,f,c
  3657  001336  50DF               	movf	indf2,w,c
  3658  001338  6E18               	movwf	??_receive_data& (0+255),c
  3659  00133A  5018               	movf	??_receive_data,w,c
  3660  00133C  0D01               	mullw	1
  3661  00133E  50F3               	movf	prodl,w,c
  3662  001340  2416               	addwf	receive_data@receive_buffer,w,c
  3663  001342  6ED9               	movwf	fsr2l,c
  3664  001344  50F4               	movf	prodh,w,c
  3665  001346  2017               	addwfc	receive_data@receive_buffer+1,w,c
  3666  001348  6EDA               	movwf	fsr2h,c
  3667  00134A  C019  FFDF         	movff	receive_data@data,indf2
  3668                           
  3669                           ;SlaveComm_PIC18.c: 278: receive_buffer->write_position++;
  3670  00134E  EE20 F028          	lfsr	2,40
  3671  001352  5016               	movf	receive_data@receive_buffer,w,c
  3672  001354  26D9               	addwf	fsr2l,f,c
  3673  001356  5017               	movf	receive_data@receive_buffer+1,w,c
  3674  001358  22DA               	addwfc	fsr2h,f,c
  3675  00135A  2ADF               	incf	indf2,f,c
  3676                           
  3677                           ;SlaveComm_PIC18.c: 279: if (receive_buffer->write_position >= 40)
  3678  00135C  EE20 F028          	lfsr	2,40
  3679  001360  5016               	movf	receive_data@receive_buffer,w,c
  3680  001362  26D9               	addwf	fsr2l,f,c
  3681  001364  5017               	movf	receive_data@receive_buffer+1,w,c
  3682  001366  22DA               	addwfc	fsr2h,f,c
  3683  001368  0E27               	movlw	39
  3684  00136A  64DF               	cpfsgt	indf2,c
  3685  00136C  D008               	goto	l326
  3686                           
  3687                           ;SlaveComm_PIC18.c: 280: {
  3688                           ;SlaveComm_PIC18.c: 281: receive_buffer->write_position = (40 - 1);
  3689  00136E  EE20 F028          	lfsr	2,40
  3690  001372  5016               	movf	receive_data@receive_buffer,w,c
  3691  001374  26D9               	addwf	fsr2l,f,c
  3692  001376  5017               	movf	receive_data@receive_buffer+1,w,c
  3693  001378  22DA               	addwfc	fsr2h,f,c
  3694  00137A  0E27               	movlw	39
  3695  00137C  6EDF               	movwf	indf2,c
  3696  00137E                     l326:
  3697                           
  3698                           ;SlaveComm_PIC18.c: 282: }
  3699                           ;SlaveComm_PIC18.c: 283: }
  3700                           ;SlaveComm_PIC18.c: 285: if ((my_status == receive_in_command) && (data == '*'))
  3701  00137E  043D               	decf	receive_data@my_status,w,c
  3702  001380  A4D8               	btfss	status,2,c
  3703  001382  D006               	goto	l327
  3704  001384  0E2A               	movlw	42
  3705  001386  1819               	xorwf	receive_data@data,w,c
  3706  001388  A4D8               	btfss	status,2,c
  3707  00138A  D002               	goto	l327
  3708                           
  3709                           ;SlaveComm_PIC18.c: 286: {
  3710                           ;SlaveComm_PIC18.c: 287: my_status = receive_end_command;
  3711  00138C  0E02               	movlw	2
  3712  00138E  6E3D               	movwf	receive_data@my_status,c
  3713  001390                     l327:
  3714                           
  3715                           ;SlaveComm_PIC18.c: 288: }
  3716                           ;SlaveComm_PIC18.c: 289: }
  3717                           ;SlaveComm_PIC18.c: 291: return my_status;
  3718  001390  503D               	movf	receive_data@my_status,w,c
  3719  001392  0012               	return	
  3720  001394                     __end_of_receive_data:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           intcon2	equ	0xFF1
  3730                           intcon3	equ	0xFF0
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postinc1	equ	0xFE6
  3734                           postdec1	equ	0xFE5
  3735                           fsr1h	equ	0xFE2
  3736                           fsr1l	equ	0xFE1
  3737                           indf2	equ	0xFDF
  3738                           postinc2	equ	0xFDE
  3739                           fsr2h	equ	0xFDA
  3740                           fsr2l	equ	0xFD9
  3741                           status	equ	0xFD8
  3742                           
  3743 ;; *************** function _SPI_receive_data *****************
  3744 ;; Defined at:
  3745 ;;		line 631 in file "SlaveComm_PIC18.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  data            2   18[COMRAM] PTR unsigned char 
  3748 ;;		 -> receive_data@data(1), 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  recvGood        1   20[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      unsigned char 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr2l, fsr2h, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3760 ;;      Params:         2       0       0       0       0       0       0
  3761 ;;      Locals:         1       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0
  3763 ;;      Totals:         3       0       0       0       0       0       0
  3764 ;;Total ram usage:        3 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_receive_data
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text19
  3775  001C58                     __ptext19:
  3776                           	opt stack 0
  3777  001C58                     _SPI_receive_data:
  3778                           	opt stack 27
  3779                           
  3780                           ;SlaveComm_PIC18.c: 634: bool recvGood = 0;
  3781                           
  3782                           ;incstack = 0
  3783  001C58  0E00               	movlw	0
  3784  001C5A  6E15               	movwf	SPI_receive_data@recvGood,c
  3785                           
  3786                           ;SlaveComm_PIC18.c: 636: if (SSP2STATbits.BF == 1)
  3787  001C5C  A06D               	btfss	3949,0,c	;volatile
  3788  001C5E  D00C               	goto	l432
  3789                           
  3790                           ;SlaveComm_PIC18.c: 637: {
  3791                           ;SlaveComm_PIC18.c: 638: *data = SSP2BUF;
  3792  001C60  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  3793  001C64  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3794  001C68  CF6F FFDF          	movff	3951,indf2	;volatile
  3795                           
  3796                           ;SlaveComm_PIC18.c: 639: recvGood = 1;
  3797  001C6C  0E01               	movlw	1
  3798  001C6E  6E15               	movwf	SPI_receive_data@recvGood,c
  3799                           
  3800                           ;SlaveComm_PIC18.c: 640: SSP2CON1bits.WCOL = 0;
  3801  001C70  9E6C               	bcf	3948,7,c	;volatile
  3802                           
  3803                           ;SlaveComm_PIC18.c: 641: SPI_transmit_wait = 0;
  3804  001C72  0E00               	movlw	0
  3805  001C74  6E3E               	movwf	_SPI_transmit_wait,c
  3806                           
  3807                           ;SlaveComm_PIC18.c: 642: }
  3808  001C76  D002               	goto	l433
  3809  001C78                     l432:
  3810                           
  3811                           ;SlaveComm_PIC18.c: 643: else
  3812                           ;SlaveComm_PIC18.c: 644: {
  3813                           ;SlaveComm_PIC18.c: 645: recvGood = 0;
  3814  001C78  0E00               	movlw	0
  3815  001C7A  6E15               	movwf	SPI_receive_data@recvGood,c
  3816  001C7C                     l433:
  3817                           
  3818                           ;SlaveComm_PIC18.c: 646: }
  3819                           ;SlaveComm_PIC18.c: 648: return recvGood;
  3820  001C7C  5015               	movf	SPI_receive_data@recvGood,w,c
  3821  001C7E  0012               	return	
  3822  001C80                     __end_of_SPI_receive_data:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           prodh	equ	0xFF4
  3829                           prodl	equ	0xFF3
  3830                           intcon	equ	0xFF2
  3831                           intcon2	equ	0xFF1
  3832                           intcon3	equ	0xFF0
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           postinc1	equ	0xFE6
  3836                           postdec1	equ	0xFE5
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           postinc2	equ	0xFDE
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function _process_data *****************
  3846 ;; Defined at:
  3847 ;;		line 294 in file "SlaveComm_PIC18.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  receive_buff    2   33[BANK0 ] PTR struct buffer
  3850 ;;		 -> communications@receive_buffer(42), 
  3851 ;;  send_buffer     2   35[BANK0 ] PTR struct buffer
  3852 ;;		 -> communications@send_buffer(42), 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  parameters     50   37[BANK0 ] unsigned char [10][5]
  3855 ;;  end_of_trans    1   87[BANK0 ] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3865 ;;      Params:         0       4       0       0       0       0       0
  3866 ;;      Locals:         0      51       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0
  3868 ;;      Totals:         0      55       0       0       0       0       0
  3869 ;;Total ram usage:       55 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    8
  3872 ;; This function calls:
  3873 ;;		_process_data_parameterize
  3874 ;;		_process_data_parameters
  3875 ;; This function is called by:
  3876 ;;		_communications
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text20
  3881  001BF6                     __ptext20:
  3882                           	opt stack 0
  3883  001BF6                     _process_data:
  3884                           	opt stack 21
  3885                           
  3886                           ;SlaveComm_PIC18.c: 296: bool end_of_transmission_received;
  3887                           ;SlaveComm_PIC18.c: 301: char parameters[5][10];
  3888                           ;SlaveComm_PIC18.c: 303: process_data_parameterize(parameters, receive_buffer);
  3889                           
  3890                           ;incstack = 0
  3891  001BF6  0E85               	movlw	low process_data@parameters
  3892  001BF8  6E19               	movwf	process_data_parameterize@parameters,c
  3893  001BFA  0E00               	movlw	high process_data@parameters
  3894  001BFC  6E1A               	movwf	process_data_parameterize@parameters+1,c
  3895  001BFE  C081  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3896  001C02  C082  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3897  001C06  EC60  F005         	call	_process_data_parameterize	;wreg free
  3898                           
  3899                           ;SlaveComm_PIC18.c: 305: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  3900  001C0A  0E85               	movlw	low process_data@parameters
  3901  001C0C  0100               	movlb	0	; () banked
  3902  001C0E  6F7C               	movwf	process_data_parameters@parameters& (0+255),b
  3903  001C10  0E00               	movlw	high process_data@parameters
  3904  001C12  6F7D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  3905  001C14  C083  F07E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3906  001C18  C084  F07F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3907  001C1C  EC30  F003         	call	_process_data_parameters	;wreg free
  3908  001C20  0100               	movlb	0	; () banked
  3909  001C22  6FB7               	movwf	process_data@end_of_transmission_received& (0+255),b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;SlaveComm_PIC18.c: 307: return end_of_transmission_received;
  3913  001C24  51B7               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3914  001C26  0012               	return	
  3915  001C28                     __end_of_process_data:
  3916                           	opt stack 0
  3917                           tblptru	equ	0xFF8
  3918                           tblptrh	equ	0xFF7
  3919                           tblptrl	equ	0xFF6
  3920                           tablat	equ	0xFF5
  3921                           prodh	equ	0xFF4
  3922                           prodl	equ	0xFF3
  3923                           intcon	equ	0xFF2
  3924                           intcon2	equ	0xFF1
  3925                           intcon3	equ	0xFF0
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           postinc1	equ	0xFE6
  3929                           postdec1	equ	0xFE5
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           postinc2	equ	0xFDE
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _process_data_parameters *****************
  3939 ;; Defined at:
  3940 ;;		line 370 in file "SlaveComm_PIC18.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  parameters      2   28[BANK0 ] PTR unsigned char [10]
  3943 ;;		 -> process_data@parameters(50), 
  3944 ;;  send_buffer     2   30[BANK0 ] PTR struct buffer
  3945 ;;		 -> communications@send_buffer(42), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  end_of_trans    1   32[BANK0 ] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      unsigned char 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3957 ;;      Params:         0       4       0       0       0       0       0
  3958 ;;      Locals:         0       1       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0
  3960 ;;      Totals:         0       5       0       0       0       0       0
  3961 ;;Total ram usage:        5 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    7
  3964 ;; This function calls:
  3965 ;;		_atol
  3966 ;;		_com_command_setEnergyUsed
  3967 ;;		_command_builder3
  3968 ;;		_send_end_of_transmission
  3969 ;;		_strmatch
  3970 ;; This function is called by:
  3971 ;;		_process_data
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text21
  3976  000660                     __ptext21:
  3977                           	opt stack 0
  3978  000660                     _process_data_parameters:
  3979                           	opt stack 21
  3980                           
  3981                           ;SlaveComm_PIC18.c: 372: bool end_of_transmission_received = 0;
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;incstack = 0
  3985  000660  0E00               	movlw	0
  3986  000662  0100               	movlb	0	; () banked
  3987  000664  6F80               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;SlaveComm_PIC18.c: 375: if (strmatch(parameters[0], "END") == 1)
  3991  000666  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3992  00066A  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3993  00066E  0E4F               	movlw	low STR_1
  3994  000670  6E20               	movwf	strmatch@b,c
  3995  000672  0E06               	movlw	high STR_1
  3996  000674  6E21               	movwf	strmatch@b+1,c
  3997  000676  EC14  F00E         	call	_strmatch	;wreg free
  3998  00067A  06E8               	decf	wreg,f,c
  3999  00067C  A4D8               	btfss	status,2,c
  4000  00067E  D004               	goto	l351
  4001                           
  4002                           ;SlaveComm_PIC18.c: 376: {
  4003                           ;SlaveComm_PIC18.c: 386: end_of_transmission_received = 1;
  4004  000680  0E01               	movlw	1
  4005  000682  0100               	movlb	0	; () banked
  4006  000684  6F80               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  4007                           
  4008                           ;SlaveComm_PIC18.c: 387: }
  4009  000686  D14B               	goto	l377
  4010  000688                     l351:
  4011                           
  4012                           ;SlaveComm_PIC18.c: 388: else if (strmatch(parameters[0], "Set") == 1)
  4013                           
  4014                           ; BSR set to: 0
  4015  000688  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4016  00068C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4017  000690  0E57               	movlw	low STR_2
  4018  000692  6E20               	movwf	strmatch@b,c
  4019  000694  0E06               	movlw	high STR_2
  4020  000696  6E21               	movwf	strmatch@b+1,c
  4021  000698  EC14  F00E         	call	_strmatch	;wreg free
  4022  00069C  06E8               	decf	wreg,f,c
  4023  00069E  A4D8               	btfss	status,2,c
  4024  0006A0  D038               	goto	l353
  4025                           
  4026                           ;SlaveComm_PIC18.c: 389: {
  4027                           ;SlaveComm_PIC18.c: 390: if (strmatch(parameters[1], "Calibration") == 1)
  4028  0006A2  0E0A               	movlw	10
  4029  0006A4  0100               	movlb	0	; () banked
  4030  0006A6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4031  0006A8  6E1E               	movwf	strmatch@a,c
  4032  0006AA  0E00               	movlw	0
  4033  0006AC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4034  0006AE  6E1F               	movwf	strmatch@a+1,c
  4035  0006B0  0E01               	movlw	low STR_3
  4036  0006B2  6E20               	movwf	strmatch@b,c
  4037  0006B4  0E06               	movlw	high STR_3
  4038  0006B6  6E21               	movwf	strmatch@b+1,c
  4039  0006B8  EC14  F00E         	call	_strmatch	;wreg free
  4040  0006BC  06E8               	decf	wreg,f,c
  4041  0006BE  B4D8               	btfsc	status,2,c
  4042  0006C0  D12E               	goto	l377
  4043                           
  4044                           ;SlaveComm_PIC18.c: 394: else if (strmatch(parameters[1], "EnUsed") == 1)
  4045                           
  4046                           ;SlaveComm_PIC18.c: 391: {
  4047                           ;SlaveComm_PIC18.c: 393: }
  4048  0006C2  0E0A               	movlw	10
  4049  0006C4  0100               	movlb	0	; () banked
  4050  0006C6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4051  0006C8  6E1E               	movwf	strmatch@a,c
  4052  0006CA  0E00               	movlw	0
  4053  0006CC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4054  0006CE  6E1F               	movwf	strmatch@a+1,c
  4055  0006D0  0E17               	movlw	low STR_4
  4056  0006D2  6E20               	movwf	strmatch@b,c
  4057  0006D4  0E06               	movlw	high STR_4
  4058  0006D6  6E21               	movwf	strmatch@b+1,c
  4059  0006D8  EC14  F00E         	call	_strmatch	;wreg free
  4060  0006DC  06E8               	decf	wreg,f,c
  4061  0006DE  A4D8               	btfss	status,2,c
  4062  0006E0  D11E               	goto	l377
  4063                           
  4064                           ;SlaveComm_PIC18.c: 395: {
  4065                           ;SlaveComm_PIC18.c: 400: meterEnergyUsed = atol(parameters[2]);
  4066  0006E2  0E14               	movlw	20
  4067  0006E4  0100               	movlb	0	; () banked
  4068  0006E6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4069  0006E8  6E1F               	movwf	atol@s,c
  4070  0006EA  0E00               	movlw	0
  4071  0006EC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4072  0006EE  6E20               	movwf	atol@s+1,c
  4073  0006F0  ECC8  F007         	call	_atol	;wreg free
  4074  0006F4  C01F  F0C7         	movff	?_atol,_meterEnergyUsed
  4075  0006F8  C020  F0C8         	movff	?_atol+1,_meterEnergyUsed+1
  4076  0006FC  C021  F0C9         	movff	?_atol+2,_meterEnergyUsed+2
  4077  000700  C022  F0CA         	movff	?_atol+3,_meterEnergyUsed+3
  4078                           
  4079                           ;SlaveComm_PIC18.c: 401: com_command_setEnergyUsed(send_buffer);
  4080  000704  C07E  F039         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  4081  000708  C07F  F03A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  4082  00070C  EC57  F00D         	call	_com_command_setEnergyUsed	;wreg free
  4083                           
  4084                           ;SlaveComm_PIC18.c: 402: }
  4085                           ;SlaveComm_PIC18.c: 407: }
  4086  000710  D106               	goto	l377
  4087  000712                     l353:
  4088                           
  4089                           ;SlaveComm_PIC18.c: 408: else if (strmatch(parameters[0], "Read") == 1)
  4090  000712  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4091  000716  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4092  00071A  0E34               	movlw	low STR_5
  4093  00071C  6E20               	movwf	strmatch@b,c
  4094  00071E  0E06               	movlw	high STR_5
  4095  000720  6E21               	movwf	strmatch@b+1,c
  4096  000722  EC14  F00E         	call	_strmatch	;wreg free
  4097  000726  06E8               	decf	wreg,f,c
  4098  000728  B4D8               	btfsc	status,2,c
  4099  00072A  D0F9               	goto	l377
  4100                           
  4101                           ;SlaveComm_PIC18.c: 412: else if (strmatch(parameters[0], "Data") == 1)
  4102                           
  4103                           ;SlaveComm_PIC18.c: 409: {
  4104                           ;SlaveComm_PIC18.c: 411: }
  4105  00072C  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4106  000730  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4107  000734  0E2F               	movlw	low STR_6
  4108  000736  6E20               	movwf	strmatch@b,c
  4109  000738  0E06               	movlw	high STR_6
  4110  00073A  6E21               	movwf	strmatch@b+1,c
  4111  00073C  EC14  F00E         	call	_strmatch	;wreg free
  4112  000740  06E8               	decf	wreg,f,c
  4113  000742  A4D8               	btfss	status,2,c
  4114  000744  D056               	goto	l360
  4115                           
  4116                           ;SlaveComm_PIC18.c: 413: {
  4117                           ;SlaveComm_PIC18.c: 414: if (strmatch(parameters[1], "LEDB") == 1)
  4118  000746  0E0A               	movlw	10
  4119  000748  0100               	movlb	0	; () banked
  4120  00074A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4121  00074C  6E1E               	movwf	strmatch@a,c
  4122  00074E  0E00               	movlw	0
  4123  000750  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4124  000752  6E1F               	movwf	strmatch@a+1,c
  4125  000754  0E2A               	movlw	low STR_7
  4126  000756  6E20               	movwf	strmatch@b,c
  4127  000758  0E06               	movlw	high STR_7
  4128  00075A  6E21               	movwf	strmatch@b+1,c
  4129  00075C  EC14  F00E         	call	_strmatch	;wreg free
  4130  000760  06E8               	decf	wreg,f,c
  4131  000762  A4D8               	btfss	status,2,c
  4132  000764  D0DC               	goto	l377
  4133                           
  4134                           ;SlaveComm_PIC18.c: 415: {
  4135                           ;SlaveComm_PIC18.c: 416: if (strmatch(parameters[2], "On") == 1)
  4136  000766  0E14               	movlw	20
  4137  000768  0100               	movlb	0	; () banked
  4138  00076A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4139  00076C  6E1E               	movwf	strmatch@a,c
  4140  00076E  0E00               	movlw	0
  4141  000770  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4142  000772  6E1F               	movwf	strmatch@a+1,c
  4143  000774  0E5B               	movlw	low STR_8
  4144  000776  6E20               	movwf	strmatch@b,c
  4145  000778  0E06               	movlw	high STR_8
  4146  00077A  6E21               	movwf	strmatch@b+1,c
  4147  00077C  EC14  F00E         	call	_strmatch	;wreg free
  4148  000780  06E8               	decf	wreg,f,c
  4149  000782  A4D8               	btfss	status,2,c
  4150  000784  D013               	goto	l362
  4151                           
  4152                           ;SlaveComm_PIC18.c: 417: {
  4153                           ;SlaveComm_PIC18.c: 418: command_builder3(send_buffer, "Set", "LEDB", "Off");
  4154  000786  C07E  F02F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4155  00078A  C07F  F030         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4156  00078E  0E57               	movlw	low STR_2
  4157  000790  6E31               	movwf	command_builder3@data1,c
  4158  000792  0E06               	movlw	high STR_2
  4159  000794  6E32               	movwf	command_builder3@data1+1,c
  4160  000796  0E2A               	movlw	low STR_7
  4161  000798  6E33               	movwf	command_builder3@data2,c
  4162  00079A  0E06               	movlw	high STR_7
  4163  00079C  6E34               	movwf	command_builder3@data2+1,c
  4164  00079E  0E53               	movlw	low STR_11
  4165  0007A0  6E35               	movwf	command_builder3@data3,c
  4166  0007A2  0E06               	movlw	high STR_11
  4167  0007A4  6E36               	movwf	command_builder3@data3+1,c
  4168  0007A6  ECA9  F008         	call	_command_builder3	;wreg free
  4169                           
  4170                           ;SlaveComm_PIC18.c: 419: }
  4171  0007AA  D0B9               	goto	l377
  4172  0007AC                     l362:
  4173                           
  4174                           ;SlaveComm_PIC18.c: 420: else if (strmatch(parameters[2], "Off") == 1)
  4175  0007AC  0E14               	movlw	20
  4176  0007AE  0100               	movlb	0	; () banked
  4177  0007B0  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4178  0007B2  6E1E               	movwf	strmatch@a,c
  4179  0007B4  0E00               	movlw	0
  4180  0007B6  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4181  0007B8  6E1F               	movwf	strmatch@a+1,c
  4182  0007BA  0E53               	movlw	low STR_11
  4183  0007BC  6E20               	movwf	strmatch@b,c
  4184  0007BE  0E06               	movlw	high STR_11
  4185  0007C0  6E21               	movwf	strmatch@b+1,c
  4186  0007C2  EC14  F00E         	call	_strmatch	;wreg free
  4187  0007C6  06E8               	decf	wreg,f,c
  4188  0007C8  A4D8               	btfss	status,2,c
  4189  0007CA  D0A9               	goto	l377
  4190                           
  4191                           ;SlaveComm_PIC18.c: 421: {
  4192                           ;SlaveComm_PIC18.c: 422: command_builder3(send_buffer, "Set", "LEDB", "On");
  4193  0007CC  C07E  F02F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  4194  0007D0  C07F  F030         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  4195  0007D4  0E57               	movlw	low STR_2
  4196  0007D6  6E31               	movwf	command_builder3@data1,c
  4197  0007D8  0E06               	movlw	high STR_2
  4198  0007DA  6E32               	movwf	command_builder3@data1+1,c
  4199  0007DC  0E2A               	movlw	low STR_7
  4200  0007DE  6E33               	movwf	command_builder3@data2,c
  4201  0007E0  0E06               	movlw	high STR_7
  4202  0007E2  6E34               	movwf	command_builder3@data2+1,c
  4203  0007E4  0E5B               	movlw	low STR_8
  4204  0007E6  6E35               	movwf	command_builder3@data3,c
  4205  0007E8  0E06               	movlw	high STR_8
  4206  0007EA  6E36               	movwf	command_builder3@data3+1,c
  4207  0007EC  ECA9  F008         	call	_command_builder3	;wreg free
  4208                           
  4209                           ;SlaveComm_PIC18.c: 423: }
  4210                           ;SlaveComm_PIC18.c: 424: }
  4211                           ;SlaveComm_PIC18.c: 425: }
  4212  0007F0  D096               	goto	l377
  4213  0007F2                     l360:
  4214                           
  4215                           ;SlaveComm_PIC18.c: 426: else if (strmatch(parameters[0], "Conf") == 1)
  4216  0007F2  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  4217  0007F6  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  4218  0007FA  0E39               	movlw	low STR_16
  4219  0007FC  6E20               	movwf	strmatch@b,c
  4220  0007FE  0E06               	movlw	high STR_16
  4221  000800  6E21               	movwf	strmatch@b+1,c
  4222  000802  EC14  F00E         	call	_strmatch	;wreg free
  4223  000806  06E8               	decf	wreg,f,c
  4224  000808  A4D8               	btfss	status,2,c
  4225  00080A  D089               	goto	l377
  4226                           
  4227                           ;SlaveComm_PIC18.c: 427: {
  4228                           ;SlaveComm_PIC18.c: 428: if (strmatch(parameters[1], "LEDB") == 1)
  4229  00080C  0E0A               	movlw	10
  4230  00080E  0100               	movlb	0	; () banked
  4231  000810  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4232  000812  6E1E               	movwf	strmatch@a,c
  4233  000814  0E00               	movlw	0
  4234  000816  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4235  000818  6E1F               	movwf	strmatch@a+1,c
  4236  00081A  0E2A               	movlw	low STR_7
  4237  00081C  6E20               	movwf	strmatch@b,c
  4238  00081E  0E06               	movlw	high STR_7
  4239  000820  6E21               	movwf	strmatch@b+1,c
  4240  000822  EC14  F00E         	call	_strmatch	;wreg free
  4241  000826  06E8               	decf	wreg,f,c
  4242  000828  A4D8               	btfss	status,2,c
  4243  00082A  D007               	goto	l367
  4244                           
  4245                           ;SlaveComm_PIC18.c: 429: {
  4246                           ;SlaveComm_PIC18.c: 430: send_end_of_transmission(send_buffer);
  4247  00082C  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4248  000830  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4249  000834  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4250                           
  4251                           ;SlaveComm_PIC18.c: 431: }
  4252  000838  D072               	goto	l377
  4253  00083A                     l367:
  4254                           
  4255                           ;SlaveComm_PIC18.c: 432: else if (strmatch(parameters[1], "Watts") == 1)
  4256  00083A  0E0A               	movlw	10
  4257  00083C  0100               	movlb	0	; () banked
  4258  00083E  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4259  000840  6E1E               	movwf	strmatch@a,c
  4260  000842  0E00               	movlw	0
  4261  000844  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4262  000846  6E1F               	movwf	strmatch@a+1,c
  4263  000848  0E24               	movlw	low STR_18
  4264  00084A  6E20               	movwf	strmatch@b,c
  4265  00084C  0E06               	movlw	high STR_18
  4266  00084E  6E21               	movwf	strmatch@b+1,c
  4267  000850  EC14  F00E         	call	_strmatch	;wreg free
  4268  000854  06E8               	decf	wreg,f,c
  4269  000856  A4D8               	btfss	status,2,c
  4270  000858  D007               	goto	l369
  4271                           
  4272                           ;SlaveComm_PIC18.c: 433: {
  4273                           ;SlaveComm_PIC18.c: 434: send_end_of_transmission(send_buffer);
  4274  00085A  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4275  00085E  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4276  000862  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4277                           
  4278                           ;SlaveComm_PIC18.c: 435: }
  4279  000866  D05B               	goto	l377
  4280  000868                     l369:
  4281                           
  4282                           ;SlaveComm_PIC18.c: 436: else if (strmatch(parameters[1], "EnUsed") == 1)
  4283  000868  0E0A               	movlw	10
  4284  00086A  0100               	movlb	0	; () banked
  4285  00086C  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4286  00086E  6E1E               	movwf	strmatch@a,c
  4287  000870  0E00               	movlw	0
  4288  000872  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4289  000874  6E1F               	movwf	strmatch@a+1,c
  4290  000876  0E17               	movlw	low STR_4
  4291  000878  6E20               	movwf	strmatch@b,c
  4292  00087A  0E06               	movlw	high STR_4
  4293  00087C  6E21               	movwf	strmatch@b+1,c
  4294  00087E  EC14  F00E         	call	_strmatch	;wreg free
  4295  000882  06E8               	decf	wreg,f,c
  4296  000884  A4D8               	btfss	status,2,c
  4297  000886  D007               	goto	l371
  4298                           
  4299                           ;SlaveComm_PIC18.c: 437: {
  4300                           ;SlaveComm_PIC18.c: 438: send_end_of_transmission(send_buffer);
  4301  000888  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4302  00088C  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4303  000890  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4304                           
  4305                           ;SlaveComm_PIC18.c: 439: }
  4306  000894  D044               	goto	l377
  4307  000896                     l371:
  4308                           
  4309                           ;SlaveComm_PIC18.c: 440: else if (strmatch(parameters[1], "Volts") == 1)
  4310  000896  0E0A               	movlw	10
  4311  000898  0100               	movlb	0	; () banked
  4312  00089A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4313  00089C  6E1E               	movwf	strmatch@a,c
  4314  00089E  0E00               	movlw	0
  4315  0008A0  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4316  0008A2  6E1F               	movwf	strmatch@a+1,c
  4317  0008A4  0E1E               	movlw	low STR_20
  4318  0008A6  6E20               	movwf	strmatch@b,c
  4319  0008A8  0E06               	movlw	high STR_20
  4320  0008AA  6E21               	movwf	strmatch@b+1,c
  4321  0008AC  EC14  F00E         	call	_strmatch	;wreg free
  4322  0008B0  06E8               	decf	wreg,f,c
  4323  0008B2  A4D8               	btfss	status,2,c
  4324  0008B4  D007               	goto	l373
  4325                           
  4326                           ;SlaveComm_PIC18.c: 441: {
  4327                           ;SlaveComm_PIC18.c: 442: send_end_of_transmission(send_buffer);
  4328  0008B6  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4329  0008BA  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4330  0008BE  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4331                           
  4332                           ;SlaveComm_PIC18.c: 443: }
  4333  0008C2  D02D               	goto	l377
  4334  0008C4                     l373:
  4335                           
  4336                           ;SlaveComm_PIC18.c: 444: else if (strmatch(parameters[1], "Amps") == 1)
  4337  0008C4  0E0A               	movlw	10
  4338  0008C6  0100               	movlb	0	; () banked
  4339  0008C8  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4340  0008CA  6E1E               	movwf	strmatch@a,c
  4341  0008CC  0E00               	movlw	0
  4342  0008CE  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4343  0008D0  6E1F               	movwf	strmatch@a+1,c
  4344  0008D2  0E3E               	movlw	low STR_21
  4345  0008D4  6E20               	movwf	strmatch@b,c
  4346  0008D6  0E06               	movlw	high STR_21
  4347  0008D8  6E21               	movwf	strmatch@b+1,c
  4348  0008DA  EC14  F00E         	call	_strmatch	;wreg free
  4349  0008DE  06E8               	decf	wreg,f,c
  4350  0008E0  A4D8               	btfss	status,2,c
  4351  0008E2  D007               	goto	l375
  4352                           
  4353                           ;SlaveComm_PIC18.c: 445: {
  4354                           ;SlaveComm_PIC18.c: 446: send_end_of_transmission(send_buffer);
  4355  0008E4  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4356  0008E8  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4357  0008EC  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4358                           
  4359                           ;SlaveComm_PIC18.c: 447: }
  4360  0008F0  D016               	goto	l377
  4361  0008F2                     l375:
  4362                           
  4363                           ;SlaveComm_PIC18.c: 448: else if (strmatch(parameters[1], "PSVersion") == 1)
  4364  0008F2  0E0A               	movlw	10
  4365  0008F4  0100               	movlb	0	; () banked
  4366  0008F6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  4367  0008F8  6E1E               	movwf	strmatch@a,c
  4368  0008FA  0E00               	movlw	0
  4369  0008FC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  4370  0008FE  6E1F               	movwf	strmatch@a+1,c
  4371  000900  0E0D               	movlw	low STR_22
  4372  000902  6E20               	movwf	strmatch@b,c
  4373  000904  0E06               	movlw	high STR_22
  4374  000906  6E21               	movwf	strmatch@b+1,c
  4375  000908  EC14  F00E         	call	_strmatch	;wreg free
  4376  00090C  06E8               	decf	wreg,f,c
  4377  00090E  A4D8               	btfss	status,2,c
  4378  000910  D006               	goto	l377
  4379                           
  4380                           ;SlaveComm_PIC18.c: 449: {
  4381                           ;SlaveComm_PIC18.c: 450: send_end_of_transmission(send_buffer);
  4382  000912  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  4383  000916  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  4384  00091A  ECBE  F00E         	call	_send_end_of_transmission	;wreg free
  4385  00091E                     l377:
  4386                           
  4387                           ;SlaveComm_PIC18.c: 451: }
  4388                           ;SlaveComm_PIC18.c: 452: }
  4389                           ;SlaveComm_PIC18.c: 458: return end_of_transmission_received;
  4390  00091E  0100               	movlb	0	; () banked
  4391  000920  5180               	movf	process_data_parameters@end_of_transmission_received& (0+255),w,b
  4392  000922  0012               	return	
  4393  000924                     __end_of_process_data_parameters:
  4394                           	opt stack 0
  4395                           tblptru	equ	0xFF8
  4396                           tblptrh	equ	0xFF7
  4397                           tblptrl	equ	0xFF6
  4398                           tablat	equ	0xFF5
  4399                           prodh	equ	0xFF4
  4400                           prodl	equ	0xFF3
  4401                           intcon	equ	0xFF2
  4402                           intcon2	equ	0xFF1
  4403                           intcon3	equ	0xFF0
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postinc1	equ	0xFE6
  4407                           postdec1	equ	0xFE5
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           postinc2	equ	0xFDE
  4412                           fsr2h	equ	0xFDA
  4413                           fsr2l	equ	0xFD9
  4414                           status	equ	0xFD8
  4415                           
  4416 ;; *************** function _strmatch *****************
  4417 ;; Defined at:
  4418 ;;		line 582 in file "SlaveComm_PIC18.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  a               2   29[COMRAM] PTR unsigned char 
  4421 ;;		 -> process_data@parameters(50), 
  4422 ;;  b               2   31[COMRAM] PTR unsigned char 
  4423 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4424 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4425 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4426 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  result          2   33[COMRAM] int 
  4429 ;;  match           1   35[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      unsigned char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4439 ;;      Params:         4       0       0       0       0       0       0
  4440 ;;      Locals:         3       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0
  4442 ;;      Totals:         7       0       0       0       0       0       0
  4443 ;;Total ram usage:        7 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    2
  4446 ;; This function calls:
  4447 ;;		_strcmp2
  4448 ;; This function is called by:
  4449 ;;		_process_data_parameters
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text22
  4454  001C28                     __ptext22:
  4455                           	opt stack 0
  4456  001C28                     _strmatch:
  4457                           	opt stack 25
  4458                           
  4459                           ;SlaveComm_PIC18.c: 584: int result;
  4460                           ;SlaveComm_PIC18.c: 585: bool match;
  4461                           ;SlaveComm_PIC18.c: 587: result = strcmp2(a, b);
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465  001C28  C01E  F013         	movff	strmatch@a,strcmp2@a
  4466  001C2C  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  4467  001C30  C020  F015         	movff	strmatch@b,strcmp2@b
  4468  001C34  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  4469  001C38  ECB7  F006         	call	_strcmp2	;wreg free
  4470  001C3C  C013  F022         	movff	?_strcmp2,strmatch@result
  4471  001C40  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  4472                           
  4473                           ;SlaveComm_PIC18.c: 589: match = (result == 0) ? 1 : 0;
  4474  001C44  5022               	movf	strmatch@result,w,c
  4475  001C46  1023               	iorwf	strmatch@result+1,w,c
  4476  001C48  A4D8               	btfss	status,2,c
  4477  001C4A  D002               	goto	u2670
  4478  001C4C  0E01               	movlw	1
  4479  001C4E  D001               	goto	u2680
  4480  001C50                     u2670:
  4481  001C50  0E00               	movlw	0
  4482  001C52                     u2680:
  4483  001C52  6E24               	movwf	strmatch@match,c
  4484                           
  4485                           ;SlaveComm_PIC18.c: 591: return match;
  4486  001C54  5024               	movf	strmatch@match,w,c
  4487  001C56  0012               	return	
  4488  001C58                     __end_of_strmatch:
  4489                           	opt stack 0
  4490                           tblptru	equ	0xFF8
  4491                           tblptrh	equ	0xFF7
  4492                           tblptrl	equ	0xFF6
  4493                           tablat	equ	0xFF5
  4494                           prodh	equ	0xFF4
  4495                           prodl	equ	0xFF3
  4496                           intcon	equ	0xFF2
  4497                           intcon2	equ	0xFF1
  4498                           intcon3	equ	0xFF0
  4499                           postinc0	equ	0xFEE
  4500                           wreg	equ	0xFE8
  4501                           postinc1	equ	0xFE6
  4502                           postdec1	equ	0xFE5
  4503                           fsr1h	equ	0xFE2
  4504                           fsr1l	equ	0xFE1
  4505                           indf2	equ	0xFDF
  4506                           postinc2	equ	0xFDE
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function _strcmp2 *****************
  4512 ;; Defined at:
  4513 ;;		line 594 in file "SlaveComm_PIC18.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  a               2   18[COMRAM] PTR unsigned char 
  4516 ;;		 -> process_data@parameters(50), 
  4517 ;;  b               2   20[COMRAM] PTR unsigned char 
  4518 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  4519 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  4520 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  4521 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  inx             2   27[COMRAM] int 
  4524 ;;  match           2   25[COMRAM] int 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2   18[COMRAM] int 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4534 ;;      Params:         4       0       0       0       0       0       0
  4535 ;;      Locals:         4       0       0       0       0       0       0
  4536 ;;      Temps:          3       0       0       0       0       0       0
  4537 ;;      Totals:        11       0       0       0       0       0       0
  4538 ;;Total ram usage:       11 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_strmatch
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text23
  4549  000D6E                     __ptext23:
  4550                           	opt stack 0
  4551  000D6E                     _strcmp2:
  4552                           	opt stack 25
  4553                           
  4554                           ;SlaveComm_PIC18.c: 596: int inx = 0;
  4555                           
  4556                           ;incstack = 0
  4557  000D6E  0E00               	movlw	0
  4558  000D70  6E1D               	movwf	strcmp2@inx+1,c
  4559  000D72  0E00               	movlw	0
  4560  000D74  6E1C               	movwf	strcmp2@inx,c
  4561                           
  4562                           ;SlaveComm_PIC18.c: 597: int match = 0;
  4563  000D76  0E00               	movlw	0
  4564  000D78  6E1B               	movwf	strcmp2@match+1,c
  4565  000D7A  0E00               	movlw	0
  4566  000D7C  6E1A               	movwf	strcmp2@match,c
  4567                           
  4568                           ;SlaveComm_PIC18.c: 599: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  4569  000D7E  D035               	goto	l416
  4570  000D80                     
  4571                           ;SlaveComm_PIC18.c: 600: {
  4572                           ;SlaveComm_PIC18.c: 601: if (a[inx] > b[inx])
  4573  000D80  501C               	movf	strcmp2@inx,w,c
  4574  000D82  2413               	addwf	strcmp2@a,w,c
  4575  000D84  6ED9               	movwf	fsr2l,c
  4576  000D86  501D               	movf	strcmp2@inx+1,w,c
  4577  000D88  2014               	addwfc	strcmp2@a+1,w,c
  4578  000D8A  6EDA               	movwf	fsr2h,c
  4579  000D8C  501C               	movf	strcmp2@inx,w,c
  4580  000D8E  2415               	addwf	strcmp2@b,w,c
  4581  000D90  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4582  000D92  501D               	movf	strcmp2@inx+1,w,c
  4583  000D94  2016               	addwfc	strcmp2@b+1,w,c
  4584  000D96  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4585  000D98  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4586  000D9C  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4587  000DA0                     	if	0	;tblptru may be non-zero
  4588  000DA0                     	endif
  4589  000DA0                     	if	0	;tblptru may be non-zero
  4590  000DA0                     	endif
  4591  000DA0  50DE               	movf	postinc2,w,c
  4592  000DA2  0009               	tblrd		*+
  4593  000DA4  5CF5               	subwf	tablat,w,c
  4594  000DA6  B0D8               	btfsc	status,0,c
  4595  000DA8  D005               	goto	l418
  4596                           
  4597                           ;SlaveComm_PIC18.c: 602: {
  4598                           ;SlaveComm_PIC18.c: 603: match = 1;
  4599  000DAA  0E00               	movlw	0
  4600  000DAC  6E1B               	movwf	strcmp2@match+1,c
  4601  000DAE  0E01               	movlw	1
  4602  000DB0  6E1A               	movwf	strcmp2@match,c
  4603                           
  4604                           ;SlaveComm_PIC18.c: 604: }
  4605  000DB2  D019               	goto	l420
  4606  000DB4                     l418:
  4607                           
  4608                           ;SlaveComm_PIC18.c: 605: else if (a[inx] < b[inx])
  4609  000DB4  501C               	movf	strcmp2@inx,w,c
  4610  000DB6  2413               	addwf	strcmp2@a,w,c
  4611  000DB8  6ED9               	movwf	fsr2l,c
  4612  000DBA  501D               	movf	strcmp2@inx+1,w,c
  4613  000DBC  2014               	addwfc	strcmp2@a+1,w,c
  4614  000DBE  6EDA               	movwf	fsr2h,c
  4615  000DC0  50DF               	movf	indf2,w,c
  4616  000DC2  6E17               	movwf	??_strcmp2& (0+255),c
  4617  000DC4  501C               	movf	strcmp2@inx,w,c
  4618  000DC6  2415               	addwf	strcmp2@b,w,c
  4619  000DC8  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4620  000DCA  501D               	movf	strcmp2@inx+1,w,c
  4621  000DCC  2016               	addwfc	strcmp2@b+1,w,c
  4622  000DCE  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  4623  000DD0  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  4624  000DD4  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  4625  000DD8                     	if	0	;tblptru may be non-zero
  4626  000DD8                     	endif
  4627  000DD8                     	if	0	;tblptru may be non-zero
  4628  000DD8                     	endif
  4629  000DD8  0008               	tblrd		*
  4630  000DDA  50F5               	movf	tablat,w,c
  4631  000DDC  5C17               	subwf	??_strcmp2,w,c
  4632  000DDE  B0D8               	btfsc	status,0,c
  4633  000DE0  D002               	goto	l420
  4634                           
  4635                           ;SlaveComm_PIC18.c: 606: {
  4636                           ;SlaveComm_PIC18.c: 607: match = -1;
  4637  000DE2  681A               	setf	strcmp2@match,c
  4638  000DE4  681B               	setf	strcmp2@match+1,c
  4639  000DE6                     l420:
  4640                           
  4641                           ;SlaveComm_PIC18.c: 612: }
  4642                           ;SlaveComm_PIC18.c: 614: inx++;
  4643                           
  4644                           ;SlaveComm_PIC18.c: 610: {
  4645  000DE6  4A1C               	infsnz	strcmp2@inx,f,c
  4646  000DE8  2A1D               	incf	strcmp2@inx+1,f,c
  4647  000DEA                     l416:
  4648  000DEA  501C               	movf	strcmp2@inx,w,c
  4649  000DEC  2413               	addwf	strcmp2@a,w,c
  4650  000DEE  6ED9               	movwf	fsr2l,c
  4651  000DF0  501D               	movf	strcmp2@inx+1,w,c
  4652  000DF2  2014               	addwfc	strcmp2@a+1,w,c
  4653  000DF4  6EDA               	movwf	fsr2h,c
  4654  000DF6  50DF               	movf	indf2,w,c
  4655  000DF8  B4D8               	btfsc	status,2,c
  4656  000DFA  D013               	goto	u2550
  4657  000DFC  501C               	movf	strcmp2@inx,w,c
  4658  000DFE  2415               	addwf	strcmp2@b,w,c
  4659  000E00  6E17               	movwf	??_strcmp2& (0+255),c
  4660  000E02  501D               	movf	strcmp2@inx+1,w,c
  4661  000E04  2016               	addwfc	strcmp2@b+1,w,c
  4662  000E06  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4663  000E08  C017  FFF6         	movff	??_strcmp2,tblptrl
  4664  000E0C  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4665  000E10                     	if	0	;tblptru may be non-zero
  4666  000E10                     	endif
  4667  000E10                     	if	0	;tblptru may be non-zero
  4668  000E10                     	endif
  4669  000E10  0008               	tblrd		*
  4670  000E12  50F5               	movf	tablat,w,c
  4671  000E14  0900               	iorlw	0
  4672  000E16  B4D8               	btfsc	status,2,c
  4673  000E18  D004               	goto	u2550
  4674  000E1A  501A               	movf	strcmp2@match,w,c
  4675  000E1C  101B               	iorwf	strcmp2@match+1,w,c
  4676  000E1E  B4D8               	btfsc	status,2,c
  4677  000E20  D7AF               	goto	l417
  4678  000E22                     u2550:
  4679                           
  4680                           ;SlaveComm_PIC18.c: 615: }
  4681                           ;SlaveComm_PIC18.c: 618: if ((a[inx] == '\0') && (b[inx] != '\0'))
  4682  000E22  501C               	movf	strcmp2@inx,w,c
  4683  000E24  2413               	addwf	strcmp2@a,w,c
  4684  000E26  6ED9               	movwf	fsr2l,c
  4685  000E28  501D               	movf	strcmp2@inx+1,w,c
  4686  000E2A  2014               	addwfc	strcmp2@a+1,w,c
  4687  000E2C  6EDA               	movwf	fsr2h,c
  4688  000E2E  50DF               	movf	indf2,w,c
  4689  000E30  A4D8               	btfss	status,2,c
  4690  000E32  D012               	goto	l426
  4691  000E34  501C               	movf	strcmp2@inx,w,c
  4692  000E36  2415               	addwf	strcmp2@b,w,c
  4693  000E38  6E17               	movwf	??_strcmp2& (0+255),c
  4694  000E3A  501D               	movf	strcmp2@inx+1,w,c
  4695  000E3C  2016               	addwfc	strcmp2@b+1,w,c
  4696  000E3E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4697  000E40  C017  FFF6         	movff	??_strcmp2,tblptrl
  4698  000E44  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4699  000E48                     	if	0	;tblptru may be non-zero
  4700  000E48                     	endif
  4701  000E48                     	if	0	;tblptru may be non-zero
  4702  000E48                     	endif
  4703  000E48  0008               	tblrd		*
  4704  000E4A  50F5               	movf	tablat,w,c
  4705  000E4C  0900               	iorlw	0
  4706  000E4E  B4D8               	btfsc	status,2,c
  4707  000E50  D003               	goto	l426
  4708                           
  4709                           ;SlaveComm_PIC18.c: 619: {
  4710                           ;SlaveComm_PIC18.c: 620: match = -1;
  4711  000E52  681A               	setf	strcmp2@match,c
  4712  000E54  681B               	setf	strcmp2@match+1,c
  4713                           
  4714                           ;SlaveComm_PIC18.c: 621: }
  4715  000E56  D01C               	goto	l428
  4716  000E58                     l426:
  4717                           
  4718                           ;SlaveComm_PIC18.c: 622: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  4719  000E58  501C               	movf	strcmp2@inx,w,c
  4720  000E5A  2413               	addwf	strcmp2@a,w,c
  4721  000E5C  6ED9               	movwf	fsr2l,c
  4722  000E5E  501D               	movf	strcmp2@inx+1,w,c
  4723  000E60  2014               	addwfc	strcmp2@a+1,w,c
  4724  000E62  6EDA               	movwf	fsr2h,c
  4725  000E64  50DF               	movf	indf2,w,c
  4726  000E66  B4D8               	btfsc	status,2,c
  4727  000E68  D013               	goto	l428
  4728  000E6A  501C               	movf	strcmp2@inx,w,c
  4729  000E6C  2415               	addwf	strcmp2@b,w,c
  4730  000E6E  6E17               	movwf	??_strcmp2& (0+255),c
  4731  000E70  501D               	movf	strcmp2@inx+1,w,c
  4732  000E72  2016               	addwfc	strcmp2@b+1,w,c
  4733  000E74  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  4734  000E76  C017  FFF6         	movff	??_strcmp2,tblptrl
  4735  000E7A  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  4736  000E7E                     	if	0	;tblptru may be non-zero
  4737  000E7E                     	endif
  4738  000E7E                     	if	0	;tblptru may be non-zero
  4739  000E7E                     	endif
  4740  000E7E  0008               	tblrd		*
  4741  000E80  50F5               	movf	tablat,w,c
  4742  000E82  0900               	iorlw	0
  4743  000E84  A4D8               	btfss	status,2,c
  4744  000E86  D004               	goto	l428
  4745                           
  4746                           ;SlaveComm_PIC18.c: 623: {
  4747                           ;SlaveComm_PIC18.c: 624: match = 1;
  4748  000E88  0E00               	movlw	0
  4749  000E8A  6E1B               	movwf	strcmp2@match+1,c
  4750  000E8C  0E01               	movlw	1
  4751  000E8E  6E1A               	movwf	strcmp2@match,c
  4752  000E90                     l428:
  4753                           
  4754                           ;SlaveComm_PIC18.c: 625: }
  4755                           ;SlaveComm_PIC18.c: 627: return match;
  4756  000E90  C01A  F013         	movff	strcmp2@match,?_strcmp2
  4757  000E94  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  4758  000E98  0012               	return	
  4759  000E9A                     __end_of_strcmp2:
  4760                           	opt stack 0
  4761                           tblptru	equ	0xFF8
  4762                           tblptrh	equ	0xFF7
  4763                           tblptrl	equ	0xFF6
  4764                           tablat	equ	0xFF5
  4765                           prodh	equ	0xFF4
  4766                           prodl	equ	0xFF3
  4767                           intcon	equ	0xFF2
  4768                           intcon2	equ	0xFF1
  4769                           intcon3	equ	0xFF0
  4770                           postinc0	equ	0xFEE
  4771                           wreg	equ	0xFE8
  4772                           postinc1	equ	0xFE6
  4773                           postdec1	equ	0xFE5
  4774                           fsr1h	equ	0xFE2
  4775                           fsr1l	equ	0xFE1
  4776                           indf2	equ	0xFDF
  4777                           postinc2	equ	0xFDE
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function _send_end_of_transmission *****************
  4783 ;; Defined at:
  4784 ;;		line 673 in file "SlaveComm_PIC18.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  send_buffer     2   52[COMRAM] PTR struct buffer
  4787 ;;		 -> communications@send_buffer(42), 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4799 ;;      Params:         2       0       0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0
  4802 ;;      Totals:         2       0       0       0       0       0       0
  4803 ;;Total ram usage:        2 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    6
  4806 ;; This function calls:
  4807 ;;		_command_builder1
  4808 ;; This function is called by:
  4809 ;;		_process_data_parameters
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text24
  4814  001D7C                     __ptext24:
  4815                           	opt stack 0
  4816  001D7C                     _send_end_of_transmission:
  4817                           	opt stack 21
  4818                           
  4819                           ;SlaveComm_PIC18.c: 675: command_builder1(send_buffer, "END");
  4820                           
  4821                           ;incstack = 0
  4822  001D7C  C035  F02F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4823  001D80  C036  F030         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4824  001D84  0E4F               	movlw	low STR_1
  4825  001D86  6E31               	movwf	command_builder1@data1,c
  4826  001D88  0E06               	movlw	high STR_1
  4827  001D8A  6E32               	movwf	command_builder1@data1+1,c
  4828  001D8C  EC62  F00C         	call	_command_builder1	;wreg free
  4829  001D90  0012               	return	
  4830  001D92                     __end_of_send_end_of_transmission:
  4831                           	opt stack 0
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           intcon3	equ	0xFF0
  4841                           postinc0	equ	0xFEE
  4842                           wreg	equ	0xFE8
  4843                           postinc1	equ	0xFE6
  4844                           postdec1	equ	0xFE5
  4845                           fsr1h	equ	0xFE2
  4846                           fsr1l	equ	0xFE1
  4847                           indf2	equ	0xFDF
  4848                           postinc2	equ	0xFDE
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _command_builder1 *****************
  4854 ;; Defined at:
  4855 ;;		line 461 in file "SlaveComm_PIC18.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  4858 ;;		 -> communications@send_buffer(42), 
  4859 ;;  data1           2   48[COMRAM] PTR unsigned char 
  4860 ;;		 -> STR_23(4), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  xsum            2   50[COMRAM] int 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4872 ;;      Params:         4       0       0       0       0       0       0
  4873 ;;      Locals:         2       0       0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0
  4875 ;;      Totals:         6       0       0       0       0       0       0
  4876 ;;Total ram usage:        6 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    5
  4879 ;; This function calls:
  4880 ;;		_command_builder_add_char
  4881 ;;		_command_builder_add_string
  4882 ;;		_xsum_builder
  4883 ;; This function is called by:
  4884 ;;		_send_end_of_transmission
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text25
  4889  0018C4                     __ptext25:
  4890                           	opt stack 0
  4891  0018C4                     _command_builder1:
  4892                           	opt stack 21
  4893                           
  4894                           ;SlaveComm_PIC18.c: 463: command_builder_add_char( send_buffer, '#' );
  4895                           
  4896                           ;incstack = 0
  4897  0018C4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4898  0018C8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4899  0018CC  0E23               	movlw	35
  4900  0018CE  6E15               	movwf	command_builder_add_char@data,c
  4901  0018D0  EC34  F00C         	call	_command_builder_add_char	;wreg free
  4902                           
  4903                           ;SlaveComm_PIC18.c: 464: command_builder_add_char( send_buffer, '!' );
  4904  0018D4  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4905  0018D8  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4906  0018DC  0E21               	movlw	33
  4907  0018DE  6E15               	movwf	command_builder_add_char@data,c
  4908  0018E0  EC34  F00C         	call	_command_builder_add_char	;wreg free
  4909                           
  4910                           ;SlaveComm_PIC18.c: 465: int xsum = 0;
  4911  0018E4  0E00               	movlw	0
  4912  0018E6  6E34               	movwf	command_builder1@xsum+1,c
  4913  0018E8  0E00               	movlw	0
  4914  0018EA  6E33               	movwf	command_builder1@xsum,c
  4915                           
  4916                           ;SlaveComm_PIC18.c: 466: xsum += command_builder_add_string( send_buffer, data1 );
  4917  0018EC  C02F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4918  0018F0  C030  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4919  0018F4  C031  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  4920  0018F8  C032  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4921  0018FC  ECC7  F00A         	call	_command_builder_add_string	;wreg free
  4922  001900  5017               	movf	?_command_builder_add_string,w,c
  4923  001902  2633               	addwf	command_builder1@xsum,f,c
  4924  001904  5018               	movf	?_command_builder_add_string+1,w,c
  4925  001906  2234               	addwfc	command_builder1@xsum+1,f,c
  4926                           
  4927                           ;SlaveComm_PIC18.c: 467: xsum_builder( send_buffer, xsum );
  4928  001908  C02F  F02B         	movff	command_builder1@send_buffer,xsum_builder@send_buffer
  4929  00190C  C030  F02C         	movff	command_builder1@send_buffer+1,xsum_builder@send_buffer+1
  4930  001910  C033  F02D         	movff	command_builder1@xsum,xsum_builder@xsum
  4931  001914  C034  F02E         	movff	command_builder1@xsum+1,xsum_builder@xsum+1
  4932  001918  EC03  F00C         	call	_xsum_builder	;wreg free
  4933  00191C  0012               	return	
  4934  00191E                     __end_of_command_builder1:
  4935                           	opt stack 0
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           intcon2	equ	0xFF1
  4944                           intcon3	equ	0xFF0
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           postinc1	equ	0xFE6
  4948                           postdec1	equ	0xFE5
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _com_command_setEnergyUsed *****************
  4958 ;; Defined at:
  4959 ;;		line 698 in file "SlaveComm_PIC18.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4962 ;;		 -> communications@send_buffer(42), 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  temp           12   16[BANK0 ] unsigned char [12]
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         2       0       0       0       0       0       0
  4975 ;;      Locals:         0      12       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0
  4977 ;;      Totals:         2      12       0       0       0       0       0
  4978 ;;Total ram usage:       14 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    6
  4981 ;; This function calls:
  4982 ;;		_command_builder3
  4983 ;;		_ultoa
  4984 ;; This function is called by:
  4985 ;;		_resetCommunications
  4986 ;;		_process_data_parameters
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text26
  4991  001AAE                     __ptext26:
  4992                           	opt stack 0
  4993  001AAE                     _com_command_setEnergyUsed:
  4994                           	opt stack 22
  4995                           
  4996                           ;SlaveComm_PIC18.c: 700: char temp[12];
  4997                           ;SlaveComm_PIC18.c: 702: ultoa(temp, meterEnergyUsed, 10);
  4998                           
  4999                           ;incstack = 0
  5000  001AAE  0E70               	movlw	low com_command_setEnergyUsed@temp
  5001  001AB0  6E20               	movwf	ultoa@buf,c
  5002  001AB2  0E00               	movlw	high com_command_setEnergyUsed@temp
  5003  001AB4  6E21               	movwf	ultoa@buf+1,c
  5004  001AB6  C0C7  F022         	movff	_meterEnergyUsed,ultoa@val
  5005  001ABA  C0C8  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  5006  001ABE  C0C9  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  5007  001AC2  C0CA  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  5008  001AC6  0E00               	movlw	0
  5009  001AC8  6E27               	movwf	ultoa@base+1,c
  5010  001ACA  0E0A               	movlw	10
  5011  001ACC  6E26               	movwf	ultoa@base,c
  5012  001ACE  EC4D  F007         	call	_ultoa	;wreg free
  5013                           
  5014                           ;SlaveComm_PIC18.c: 704: command_builder3(send_buffer, "Set", "EnUsed", temp);
  5015  001AD2  C039  F02F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  5016  001AD6  C03A  F030         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  5017  001ADA  0E57               	movlw	low STR_2
  5018  001ADC  6E31               	movwf	command_builder3@data1,c
  5019  001ADE  0E06               	movlw	high STR_2
  5020  001AE0  6E32               	movwf	command_builder3@data1+1,c
  5021  001AE2  0E17               	movlw	low STR_4
  5022  001AE4  6E33               	movwf	command_builder3@data2,c
  5023  001AE6  0E06               	movlw	high STR_4
  5024  001AE8  6E34               	movwf	command_builder3@data2+1,c
  5025  001AEA  0E70               	movlw	low com_command_setEnergyUsed@temp
  5026  001AEC  6E35               	movwf	command_builder3@data3,c
  5027  001AEE  0E00               	movlw	high com_command_setEnergyUsed@temp
  5028  001AF0  6E36               	movwf	command_builder3@data3+1,c
  5029  001AF2  ECA9  F008         	call	_command_builder3	;wreg free
  5030  001AF6  0012               	return	
  5031  001AF8                     __end_of_com_command_setEnergyUsed:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           intcon3	equ	0xFF0
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postinc1	equ	0xFE6
  5045                           postdec1	equ	0xFE5
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           postinc2	equ	0xFDE
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function _ultoa *****************
  5055 ;; Defined at:
  5056 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  buf             2   31[COMRAM] PTR unsigned char 
  5059 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  5060 ;;  val             4   33[COMRAM] unsigned long 
  5061 ;;  base            2   37[COMRAM] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  v               4   39[COMRAM] unsigned long 
  5064 ;;  c               1   43[COMRAM] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2   31[COMRAM] PTR unsigned char 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5074 ;;      Params:         8       0       0       0       0       0       0
  5075 ;;      Locals:         5       0       0       0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0
  5077 ;;      Totals:        13       0       0       0       0       0       0
  5078 ;;Total ram usage:       13 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    2
  5081 ;; This function calls:
  5082 ;;		___lldiv
  5083 ;;		___llmod
  5084 ;; This function is called by:
  5085 ;;		_com_command_setPower
  5086 ;;		_com_command_setEnergyUsed
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text27
  5091  000E9A                     __ptext27:
  5092                           	opt stack 0
  5093  000E9A                     _ultoa:
  5094                           	opt stack 25
  5095                           
  5096                           ;incstack = 0
  5097  000E9A  C022  F028         	movff	ultoa@val,ultoa@v
  5098  000E9E  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  5099  000EA2  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  5100  000EA6  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  5101  000EAA  C028  F013         	movff	ultoa@v,___lldiv@dividend
  5102  000EAE  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  5103  000EB2  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  5104  000EB6  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  5105  000EBA  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5106  000EBE  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5107  000EC2  0E00               	movlw	0
  5108  000EC4  BE18               	btfsc	___lldiv@divisor+1,7,c
  5109  000EC6  0EFF               	movlw	-1
  5110  000EC8  6E19               	movwf	___lldiv@divisor+2,c
  5111  000ECA  6E1A               	movwf	___lldiv@divisor+3,c
  5112  000ECC  EC59  F00B         	call	___lldiv	;wreg free
  5113  000ED0  C013  F028         	movff	?___lldiv,ultoa@v
  5114  000ED4  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  5115  000ED8  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  5116  000EDC  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  5117  000EE0  4A20               	infsnz	ultoa@buf,f,c
  5118  000EE2  2A21               	incf	ultoa@buf+1,f,c
  5119  000EE4  5028               	movf	ultoa@v,w,c
  5120  000EE6  1029               	iorwf	ultoa@v+1,w,c
  5121  000EE8  102A               	iorwf	ultoa@v+2,w,c
  5122  000EEA  102B               	iorwf	ultoa@v+3,w,c
  5123  000EEC  A4D8               	btfss	status,2,c
  5124  000EEE  D7DD               	goto	l918
  5125  000EF0  C020  FFD9         	movff	ultoa@buf,fsr2l
  5126  000EF4  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5127  000EF8  0E00               	movlw	0
  5128  000EFA  6EDF               	movwf	indf2,c
  5129  000EFC  0620               	decf	ultoa@buf,f,c
  5130  000EFE  A0D8               	btfss	status,0,c
  5131  000F00  0621               	decf	ultoa@buf+1,f,c
  5132  000F02  C022  F013         	movff	ultoa@val,___llmod@dividend
  5133  000F06  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  5134  000F0A  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  5135  000F0E  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  5136  000F12  C026  F017         	movff	ultoa@base,___llmod@divisor
  5137  000F16  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  5138  000F1A  0E00               	movlw	0
  5139  000F1C  BE18               	btfsc	___llmod@divisor+1,7,c
  5140  000F1E  0EFF               	movlw	-1
  5141  000F20  6E19               	movwf	___llmod@divisor+2,c
  5142  000F22  6E1A               	movwf	___llmod@divisor+3,c
  5143  000F24  ECD0  F00B         	call	___llmod	;wreg free
  5144  000F28  5013               	movf	?___llmod,w,c
  5145  000F2A  6E2C               	movwf	ultoa@c,c
  5146  000F2C  C022  F013         	movff	ultoa@val,___lldiv@dividend
  5147  000F30  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  5148  000F34  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  5149  000F38  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  5150  000F3C  C026  F017         	movff	ultoa@base,___lldiv@divisor
  5151  000F40  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  5152  000F44  0E00               	movlw	0
  5153  000F46  BE18               	btfsc	___lldiv@divisor+1,7,c
  5154  000F48  0EFF               	movlw	-1
  5155  000F4A  6E19               	movwf	___lldiv@divisor+2,c
  5156  000F4C  6E1A               	movwf	___lldiv@divisor+3,c
  5157  000F4E  EC59  F00B         	call	___lldiv	;wreg free
  5158  000F52  C013  F022         	movff	?___lldiv,ultoa@val
  5159  000F56  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  5160  000F5A  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  5161  000F5E  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  5162  000F62  0E09               	movlw	9
  5163  000F64  642C               	cpfsgt	ultoa@c,c
  5164  000F66  D002               	goto	l921
  5165  000F68  0E07               	movlw	7
  5166  000F6A  262C               	addwf	ultoa@c,f,c
  5167  000F6C                     l921:
  5168  000F6C  0E30               	movlw	48
  5169  000F6E  262C               	addwf	ultoa@c,f,c
  5170  000F70  C020  FFD9         	movff	ultoa@buf,fsr2l
  5171  000F74  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  5172  000F78  C02C  FFDF         	movff	ultoa@c,indf2
  5173  000F7C  0620               	decf	ultoa@buf,f,c
  5174  000F7E  A0D8               	btfss	status,0,c
  5175  000F80  0621               	decf	ultoa@buf+1,f,c
  5176  000F82  5022               	movf	ultoa@val,w,c
  5177  000F84  1023               	iorwf	ultoa@val+1,w,c
  5178  000F86  1024               	iorwf	ultoa@val+2,w,c
  5179  000F88  1025               	iorwf	ultoa@val+3,w,c
  5180  000F8A  B4D8               	btfsc	status,2,c
  5181  000F8C  0012               	return	
  5182  000F8E  D7B9               	goto	l920
  5183  000F90                     __end_of_ultoa:
  5184                           	opt stack 0
  5185                           tblptru	equ	0xFF8
  5186                           tblptrh	equ	0xFF7
  5187                           tblptrl	equ	0xFF6
  5188                           tablat	equ	0xFF5
  5189                           prodh	equ	0xFF4
  5190                           prodl	equ	0xFF3
  5191                           intcon	equ	0xFF2
  5192                           intcon2	equ	0xFF1
  5193                           intcon3	equ	0xFF0
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           postinc1	equ	0xFE6
  5197                           postdec1	equ	0xFE5
  5198                           fsr1h	equ	0xFE2
  5199                           fsr1l	equ	0xFE1
  5200                           indf2	equ	0xFDF
  5201                           postinc2	equ	0xFDE
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function ___llmod *****************
  5207 ;; Defined at:
  5208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  dividend        4   18[COMRAM] unsigned long 
  5211 ;;  divisor         4   22[COMRAM] unsigned long 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  counter         1   26[COMRAM] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4   18[COMRAM] unsigned long 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5223 ;;      Params:         8       0       0       0       0       0       0
  5224 ;;      Locals:         1       0       0       0       0       0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0
  5226 ;;      Totals:         9       0       0       0       0       0       0
  5227 ;;Total ram usage:        9 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    1
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_ultoa
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text28
  5238  0017A0                     __ptext28:
  5239                           	opt stack 0
  5240  0017A0                     ___llmod:
  5241                           	opt stack 25
  5242                           
  5243                           ;incstack = 0
  5244  0017A0  5017               	movf	___llmod@divisor,w,c
  5245  0017A2  1018               	iorwf	___llmod@divisor+1,w,c
  5246  0017A4  1019               	iorwf	___llmod@divisor+2,w,c
  5247  0017A6  101A               	iorwf	___llmod@divisor+3,w,c
  5248  0017A8  B4D8               	btfsc	status,2,c
  5249  0017AA  D024               	goto	l880
  5250  0017AC  0E01               	movlw	1
  5251  0017AE  6E1B               	movwf	___llmod@counter,c
  5252  0017B0  D006               	goto	l875
  5253  0017B2  90D8               	bcf	status,0,c
  5254  0017B4  3617               	rlcf	___llmod@divisor,f,c
  5255  0017B6  3618               	rlcf	___llmod@divisor+1,f,c
  5256  0017B8  3619               	rlcf	___llmod@divisor+2,f,c
  5257  0017BA  361A               	rlcf	___llmod@divisor+3,f,c
  5258  0017BC  2A1B               	incf	___llmod@counter,f,c
  5259  0017BE                     l875:
  5260  0017BE  AE1A               	btfss	___llmod@divisor+3,7,c
  5261  0017C0  D7F8               	goto	l876
  5262  0017C2                     u2490:
  5263  0017C2  5017               	movf	___llmod@divisor,w,c
  5264  0017C4  5C13               	subwf	___llmod@dividend,w,c
  5265  0017C6  5018               	movf	___llmod@divisor+1,w,c
  5266  0017C8  5814               	subwfb	___llmod@dividend+1,w,c
  5267  0017CA  5019               	movf	___llmod@divisor+2,w,c
  5268  0017CC  5815               	subwfb	___llmod@dividend+2,w,c
  5269  0017CE  501A               	movf	___llmod@divisor+3,w,c
  5270  0017D0  5816               	subwfb	___llmod@dividend+3,w,c
  5271  0017D2  A0D8               	btfss	status,0,c
  5272  0017D4  D008               	goto	l879
  5273  0017D6  5017               	movf	___llmod@divisor,w,c
  5274  0017D8  5E13               	subwf	___llmod@dividend,f,c
  5275  0017DA  5018               	movf	___llmod@divisor+1,w,c
  5276  0017DC  5A14               	subwfb	___llmod@dividend+1,f,c
  5277  0017DE  5019               	movf	___llmod@divisor+2,w,c
  5278  0017E0  5A15               	subwfb	___llmod@dividend+2,f,c
  5279  0017E2  501A               	movf	___llmod@divisor+3,w,c
  5280  0017E4  5A16               	subwfb	___llmod@dividend+3,f,c
  5281  0017E6                     l879:
  5282  0017E6  90D8               	bcf	status,0,c
  5283  0017E8  321A               	rrcf	___llmod@divisor+3,f,c
  5284  0017EA  3219               	rrcf	___llmod@divisor+2,f,c
  5285  0017EC  3218               	rrcf	___llmod@divisor+1,f,c
  5286  0017EE  3217               	rrcf	___llmod@divisor,f,c
  5287  0017F0  2E1B               	decfsz	___llmod@counter,f,c
  5288  0017F2  D7E7               	goto	u2490
  5289  0017F4                     l880:
  5290  0017F4  C013  F013         	movff	___llmod@dividend,?___llmod
  5291  0017F8  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  5292  0017FC  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  5293  001800  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  5294  001804  0012               	return		;funcret
  5295  001806                     __end_of___llmod:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           prodh	equ	0xFF4
  5302                           prodl	equ	0xFF3
  5303                           intcon	equ	0xFF2
  5304                           intcon2	equ	0xFF1
  5305                           intcon3	equ	0xFF0
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           postinc1	equ	0xFE6
  5309                           postdec1	equ	0xFE5
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           indf2	equ	0xFDF
  5313                           postinc2	equ	0xFDE
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function ___lldiv *****************
  5319 ;; Defined at:
  5320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  dividend        4   18[COMRAM] unsigned long 
  5323 ;;  divisor         4   22[COMRAM] unsigned long 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  quotient        4   26[COMRAM] unsigned long 
  5326 ;;  counter         1   30[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  4   18[COMRAM] unsigned long 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5336 ;;      Params:         8       0       0       0       0       0       0
  5337 ;;      Locals:         5       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0
  5339 ;;      Totals:        13       0       0       0       0       0       0
  5340 ;;Total ram usage:       13 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_powerPulseCheck
  5347 ;;		_ultoa
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text29
  5352  0016B2                     __ptext29:
  5353                           	opt stack 0
  5354  0016B2                     ___lldiv:
  5355                           	opt stack 28
  5356                           
  5357                           ;incstack = 0
  5358  0016B2  0E00               	movlw	0
  5359  0016B4  6E1B               	movwf	___lldiv@quotient,c
  5360  0016B6  0E00               	movlw	0
  5361  0016B8  6E1C               	movwf	___lldiv@quotient+1,c
  5362  0016BA  0E00               	movlw	0
  5363  0016BC  6E1D               	movwf	___lldiv@quotient+2,c
  5364  0016BE  0E00               	movlw	0
  5365  0016C0  6E1E               	movwf	___lldiv@quotient+3,c
  5366  0016C2  5017               	movf	___lldiv@divisor,w,c
  5367  0016C4  1018               	iorwf	___lldiv@divisor+1,w,c
  5368  0016C6  1019               	iorwf	___lldiv@divisor+2,w,c
  5369  0016C8  101A               	iorwf	___lldiv@divisor+3,w,c
  5370  0016CA  B4D8               	btfsc	status,2,c
  5371  0016CC  D02A               	goto	l870
  5372  0016CE  0E01               	movlw	1
  5373  0016D0  6E1F               	movwf	___lldiv@counter,c
  5374  0016D2  D006               	goto	l865
  5375  0016D4  90D8               	bcf	status,0,c
  5376  0016D6  3617               	rlcf	___lldiv@divisor,f,c
  5377  0016D8  3618               	rlcf	___lldiv@divisor+1,f,c
  5378  0016DA  3619               	rlcf	___lldiv@divisor+2,f,c
  5379  0016DC  361A               	rlcf	___lldiv@divisor+3,f,c
  5380  0016DE  2A1F               	incf	___lldiv@counter,f,c
  5381  0016E0                     l865:
  5382  0016E0  AE1A               	btfss	___lldiv@divisor+3,7,c
  5383  0016E2  D7F8               	goto	l866
  5384  0016E4                     u2460:
  5385  0016E4  90D8               	bcf	status,0,c
  5386  0016E6  361B               	rlcf	___lldiv@quotient,f,c
  5387  0016E8  361C               	rlcf	___lldiv@quotient+1,f,c
  5388  0016EA  361D               	rlcf	___lldiv@quotient+2,f,c
  5389  0016EC  361E               	rlcf	___lldiv@quotient+3,f,c
  5390  0016EE  5017               	movf	___lldiv@divisor,w,c
  5391  0016F0  5C13               	subwf	___lldiv@dividend,w,c
  5392  0016F2  5018               	movf	___lldiv@divisor+1,w,c
  5393  0016F4  5814               	subwfb	___lldiv@dividend+1,w,c
  5394  0016F6  5019               	movf	___lldiv@divisor+2,w,c
  5395  0016F8  5815               	subwfb	___lldiv@dividend+2,w,c
  5396  0016FA  501A               	movf	___lldiv@divisor+3,w,c
  5397  0016FC  5816               	subwfb	___lldiv@dividend+3,w,c
  5398  0016FE  A0D8               	btfss	status,0,c
  5399  001700  D009               	goto	l869
  5400  001702  5017               	movf	___lldiv@divisor,w,c
  5401  001704  5E13               	subwf	___lldiv@dividend,f,c
  5402  001706  5018               	movf	___lldiv@divisor+1,w,c
  5403  001708  5A14               	subwfb	___lldiv@dividend+1,f,c
  5404  00170A  5019               	movf	___lldiv@divisor+2,w,c
  5405  00170C  5A15               	subwfb	___lldiv@dividend+2,f,c
  5406  00170E  501A               	movf	___lldiv@divisor+3,w,c
  5407  001710  5A16               	subwfb	___lldiv@dividend+3,f,c
  5408  001712  801B               	bsf	___lldiv@quotient,0,c
  5409  001714                     l869:
  5410  001714  90D8               	bcf	status,0,c
  5411  001716  321A               	rrcf	___lldiv@divisor+3,f,c
  5412  001718  3219               	rrcf	___lldiv@divisor+2,f,c
  5413  00171A  3218               	rrcf	___lldiv@divisor+1,f,c
  5414  00171C  3217               	rrcf	___lldiv@divisor,f,c
  5415  00171E  2E1F               	decfsz	___lldiv@counter,f,c
  5416  001720  D7E1               	goto	u2460
  5417  001722                     l870:
  5418  001722  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  5419  001726  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  5420  00172A  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  5421  00172E  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  5422  001732  0012               	return		;funcret
  5423  001734                     __end_of___lldiv:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           intcon2	equ	0xFF1
  5433                           intcon3	equ	0xFF0
  5434                           postinc0	equ	0xFEE
  5435                           wreg	equ	0xFE8
  5436                           postinc1	equ	0xFE6
  5437                           postdec1	equ	0xFE5
  5438                           fsr1h	equ	0xFE2
  5439                           fsr1l	equ	0xFE1
  5440                           indf2	equ	0xFDF
  5441                           postinc2	equ	0xFDE
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _command_builder3 *****************
  5447 ;; Defined at:
  5448 ;;		line 486 in file "SlaveComm_PIC18.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  5451 ;;		 -> communications@send_buffer(42), 
  5452 ;;  data1           2   48[COMRAM] PTR unsigned char 
  5453 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  5454 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  5455 ;;  data2           2   50[COMRAM] PTR unsigned char 
  5456 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  5457 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  5458 ;;  data3           2   52[COMRAM] PTR unsigned char 
  5459 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  5460 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  xsum            2   54[COMRAM] int 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5472 ;;      Params:         8       0       0       0       0       0       0
  5473 ;;      Locals:         2       0       0       0       0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0
  5475 ;;      Totals:        10       0       0       0       0       0       0
  5476 ;;Total ram usage:       10 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    5
  5479 ;; This function calls:
  5480 ;;		_command_builder_add_char
  5481 ;;		_command_builder_add_string
  5482 ;;		_xsum_builder
  5483 ;; This function is called by:
  5484 ;;		_process_data_parameters
  5485 ;;		_com_command_setPower
  5486 ;;		_com_command_setEnergyUsed
  5487 ;;		_com_command_setVersion
  5488 ;;		_com_command_setVolts
  5489 ;;		_com_command_setAmps
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text30
  5494  001152                     __ptext30:
  5495                           	opt stack 0
  5496  001152                     _command_builder3:
  5497                           	opt stack 22
  5498                           
  5499                           ;SlaveComm_PIC18.c: 488: command_builder_add_char( send_buffer, '#' );
  5500                           
  5501                           ;incstack = 0
  5502  001152  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5503  001156  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5504  00115A  0E23               	movlw	35
  5505  00115C  6E15               	movwf	command_builder_add_char@data,c
  5506  00115E  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5507                           
  5508                           ;SlaveComm_PIC18.c: 489: command_builder_add_char( send_buffer, '!' );
  5509  001162  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5510  001166  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5511  00116A  0E21               	movlw	33
  5512  00116C  6E15               	movwf	command_builder_add_char@data,c
  5513  00116E  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5514                           
  5515                           ;SlaveComm_PIC18.c: 490: int xsum = 0;
  5516  001172  0E00               	movlw	0
  5517  001174  6E38               	movwf	command_builder3@xsum+1,c
  5518  001176  0E00               	movlw	0
  5519  001178  6E37               	movwf	command_builder3@xsum,c
  5520                           
  5521                           ;SlaveComm_PIC18.c: 491: xsum += command_builder_add_string( send_buffer, data1 );
  5522  00117A  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5523  00117E  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5524  001182  C031  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  5525  001186  C032  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  5526  00118A  ECC7  F00A         	call	_command_builder_add_string	;wreg free
  5527  00118E  5017               	movf	?_command_builder_add_string,w,c
  5528  001190  2637               	addwf	command_builder3@xsum,f,c
  5529  001192  5018               	movf	?_command_builder_add_string+1,w,c
  5530  001194  2238               	addwfc	command_builder3@xsum+1,f,c
  5531                           
  5532                           ;SlaveComm_PIC18.c: 492: xsum += command_builder_add_char( send_buffer, ';' );
  5533  001196  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5534  00119A  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5535  00119E  0E3B               	movlw	59
  5536  0011A0  6E15               	movwf	command_builder_add_char@data,c
  5537  0011A2  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5538  0011A6  5013               	movf	?_command_builder_add_char,w,c
  5539  0011A8  2637               	addwf	command_builder3@xsum,f,c
  5540  0011AA  5014               	movf	?_command_builder_add_char+1,w,c
  5541  0011AC  2238               	addwfc	command_builder3@xsum+1,f,c
  5542                           
  5543                           ;SlaveComm_PIC18.c: 493: xsum += command_builder_add_string( send_buffer, data2 );
  5544  0011AE  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5545  0011B2  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5546  0011B6  C033  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  5547  0011BA  C034  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  5548  0011BE  ECC7  F00A         	call	_command_builder_add_string	;wreg free
  5549  0011C2  5017               	movf	?_command_builder_add_string,w,c
  5550  0011C4  2637               	addwf	command_builder3@xsum,f,c
  5551  0011C6  5018               	movf	?_command_builder_add_string+1,w,c
  5552  0011C8  2238               	addwfc	command_builder3@xsum+1,f,c
  5553                           
  5554                           ;SlaveComm_PIC18.c: 494: xsum += command_builder_add_char( send_buffer, ';' );
  5555  0011CA  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  5556  0011CE  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  5557  0011D2  0E3B               	movlw	59
  5558  0011D4  6E15               	movwf	command_builder_add_char@data,c
  5559  0011D6  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5560  0011DA  5013               	movf	?_command_builder_add_char,w,c
  5561  0011DC  2637               	addwf	command_builder3@xsum,f,c
  5562  0011DE  5014               	movf	?_command_builder_add_char+1,w,c
  5563  0011E0  2238               	addwfc	command_builder3@xsum+1,f,c
  5564                           
  5565                           ;SlaveComm_PIC18.c: 495: xsum += command_builder_add_string( send_buffer, data3 );
  5566  0011E2  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  5567  0011E6  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  5568  0011EA  C035  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  5569  0011EE  C036  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  5570  0011F2  ECC7  F00A         	call	_command_builder_add_string	;wreg free
  5571  0011F6  5017               	movf	?_command_builder_add_string,w,c
  5572  0011F8  2637               	addwf	command_builder3@xsum,f,c
  5573  0011FA  5018               	movf	?_command_builder_add_string+1,w,c
  5574  0011FC  2238               	addwfc	command_builder3@xsum+1,f,c
  5575                           
  5576                           ;SlaveComm_PIC18.c: 496: xsum_builder( send_buffer, xsum );
  5577  0011FE  C02F  F02B         	movff	command_builder3@send_buffer,xsum_builder@send_buffer
  5578  001202  C030  F02C         	movff	command_builder3@send_buffer+1,xsum_builder@send_buffer+1
  5579  001206  C037  F02D         	movff	command_builder3@xsum,xsum_builder@xsum
  5580  00120A  C038  F02E         	movff	command_builder3@xsum+1,xsum_builder@xsum+1
  5581  00120E  EC03  F00C         	call	_xsum_builder	;wreg free
  5582  001212  0012               	return	
  5583  001214                     __end_of_command_builder3:
  5584                           	opt stack 0
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           intcon2	equ	0xFF1
  5593                           intcon3	equ	0xFF0
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           postinc1	equ	0xFE6
  5597                           postdec1	equ	0xFE5
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function _xsum_builder *****************
  5607 ;; Defined at:
  5608 ;;		line 518 in file "SlaveComm_PIC18.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  send_buffer     2   42[COMRAM] PTR struct buffer
  5611 ;;		 -> communications@send_buffer(42), 
  5612 ;;  xsum            2   44[COMRAM] int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  xsumBuf        16    0[BANK0 ] unsigned char [16]
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5624 ;;      Params:         4       0       0       0       0       0       0
  5625 ;;      Locals:         0      16       0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0
  5627 ;;      Totals:         4      16       0       0       0       0       0
  5628 ;;Total ram usage:       20 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    4
  5631 ;; This function calls:
  5632 ;;		_command_builder_add_char
  5633 ;;		_command_builder_add_string
  5634 ;;		_itoa
  5635 ;; This function is called by:
  5636 ;;		_command_builder1
  5637 ;;		_command_builder3
  5638 ;;		_command_builder2
  5639 ;;		_command_builder4
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text31
  5644  001806                     __ptext31:
  5645                           	opt stack 0
  5646  001806                     _xsum_builder:
  5647                           	opt stack 22
  5648                           
  5649                           ;SlaveComm_PIC18.c: 520: command_builder_add_char( send_buffer, ';' );
  5650                           
  5651                           ;incstack = 0
  5652  001806  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5653  00180A  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5654  00180E  0E3B               	movlw	59
  5655  001810  6E15               	movwf	command_builder_add_char@data,c
  5656  001812  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5657                           
  5658                           ;SlaveComm_PIC18.c: 521: command_builder_add_char( send_buffer, '$' );
  5659  001816  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5660  00181A  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5661  00181E  0E24               	movlw	36
  5662  001820  6E15               	movwf	command_builder_add_char@data,c
  5663  001822  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5664                           
  5665                           ;SlaveComm_PIC18.c: 522: char xsumBuf[16];
  5666                           ;SlaveComm_PIC18.c: 523: itoa( xsumBuf, xsum, 10 );
  5667  001826  0E60               	movlw	low xsum_builder@xsumBuf
  5668  001828  6E23               	movwf	itoa@buf,c
  5669  00182A  0E00               	movlw	high xsum_builder@xsumBuf
  5670  00182C  6E24               	movwf	itoa@buf+1,c
  5671  00182E  C02D  F025         	movff	xsum_builder@xsum,itoa@val
  5672  001832  C02E  F026         	movff	xsum_builder@xsum+1,itoa@val+1
  5673  001836  0E00               	movlw	0
  5674  001838  6E28               	movwf	itoa@base+1,c
  5675  00183A  0E0A               	movlw	10
  5676  00183C  6E27               	movwf	itoa@base,c
  5677  00183E  ECA0  F00D         	call	_itoa	;wreg free
  5678                           
  5679                           ;SlaveComm_PIC18.c: 524: command_builder_add_string( send_buffer, xsumBuf );
  5680  001842  C02B  F017         	movff	xsum_builder@send_buffer,command_builder_add_string@send_buffer
  5681  001846  C02C  F018         	movff	xsum_builder@send_buffer+1,command_builder_add_string@send_buffer+1
  5682  00184A  0E60               	movlw	low xsum_builder@xsumBuf
  5683  00184C  6E19               	movwf	command_builder_add_string@data_string,c
  5684  00184E  0E00               	movlw	high xsum_builder@xsumBuf
  5685  001850  6E1A               	movwf	command_builder_add_string@data_string+1,c
  5686  001852  ECC7  F00A         	call	_command_builder_add_string	;wreg free
  5687                           
  5688                           ;SlaveComm_PIC18.c: 526: command_builder_add_char( send_buffer, '*' );
  5689  001856  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  5690  00185A  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  5691  00185E  0E2A               	movlw	42
  5692  001860  6E15               	movwf	command_builder_add_char@data,c
  5693  001862  EC34  F00C         	call	_command_builder_add_char	;wreg free
  5694  001866  0012               	return	
  5695  001868                     __end_of_xsum_builder:
  5696                           	opt stack 0
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           prodh	equ	0xFF4
  5702                           prodl	equ	0xFF3
  5703                           intcon	equ	0xFF2
  5704                           intcon2	equ	0xFF1
  5705                           intcon3	equ	0xFF0
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           postinc1	equ	0xFE6
  5709                           postdec1	equ	0xFE5
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           indf2	equ	0xFDF
  5713                           postinc2	equ	0xFDE
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _itoa *****************
  5719 ;; Defined at:
  5720 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  buf             2   34[COMRAM] PTR unsigned char 
  5723 ;;		 -> xsum_builder@xsumBuf(16), 
  5724 ;;  val             2   36[COMRAM] int 
  5725 ;;  base            2   38[COMRAM] int 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  cp              2   40[COMRAM] PTR unsigned char 
  5728 ;;		 -> xsum_builder@xsumBuf(16), 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  2   34[COMRAM] PTR unsigned char 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         6       0       0       0       0       0       0
  5739 ;;      Locals:         2       0       0       0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0
  5741 ;;      Totals:         8       0       0       0       0       0       0
  5742 ;;Total ram usage:        8 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    3
  5745 ;; This function calls:
  5746 ;;		_utoa
  5747 ;; This function is called by:
  5748 ;;		_xsum_builder
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text32
  5753  001B40                     __ptext32:
  5754                           	opt stack 0
  5755  001B40                     _itoa:
  5756                           	opt stack 22
  5757                           
  5758                           ;incstack = 0
  5759  001B40  C023  F029         	movff	itoa@buf,itoa@cp
  5760  001B44  C024  F02A         	movff	itoa@buf+1,itoa@cp+1
  5761  001B48  AE26               	btfss	itoa@val+1,7,c
  5762  001B4A  D00C               	goto	l831
  5763  001B4C  C023  FFD9         	movff	itoa@buf,fsr2l
  5764  001B50  C024  FFDA         	movff	itoa@buf+1,fsr2h
  5765  001B54  0E2D               	movlw	45
  5766  001B56  6EDF               	movwf	indf2,c
  5767  001B58  4A23               	infsnz	itoa@buf,f,c
  5768  001B5A  2A24               	incf	itoa@buf+1,f,c
  5769  001B5C  6C25               	negf	itoa@val,c
  5770  001B5E  1E26               	comf	itoa@val+1,f,c
  5771  001B60  B0D8               	btfsc	status,0,c
  5772  001B62  2A26               	incf	itoa@val+1,f,c
  5773  001B64                     l831:
  5774  001B64  C023  F01A         	movff	itoa@buf,utoa@buf
  5775  001B68  C024  F01B         	movff	itoa@buf+1,utoa@buf+1
  5776  001B6C  C025  F01C         	movff	itoa@val,utoa@val
  5777  001B70  C026  F01D         	movff	itoa@val+1,utoa@val+1
  5778  001B74  C027  F01E         	movff	itoa@base,utoa@base
  5779  001B78  C028  F01F         	movff	itoa@base+1,utoa@base+1
  5780  001B7C  EC26  F00A         	call	_utoa	;wreg free
  5781  001B80  0012               	return	
  5782  001B82                     __end_of_itoa:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           intcon2	equ	0xFF1
  5792                           intcon3	equ	0xFF0
  5793                           postinc0	equ	0xFEE
  5794                           wreg	equ	0xFE8
  5795                           postinc1	equ	0xFE6
  5796                           postdec1	equ	0xFE5
  5797                           fsr1h	equ	0xFE2
  5798                           fsr1l	equ	0xFE1
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function _utoa *****************
  5806 ;; Defined at:
  5807 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  buf             2   25[COMRAM] PTR unsigned char 
  5810 ;;		 -> xsum_builder@xsumBuf(16), 
  5811 ;;  val             2   27[COMRAM] unsigned int 
  5812 ;;  base            2   29[COMRAM] int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  v               2   31[COMRAM] unsigned int 
  5815 ;;  c               1   33[COMRAM] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  2   25[COMRAM] PTR unsigned char 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5825 ;;      Params:         6       0       0       0       0       0       0
  5826 ;;      Locals:         3       0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0
  5828 ;;      Totals:         9       0       0       0       0       0       0
  5829 ;;Total ram usage:        9 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    2
  5832 ;; This function calls:
  5833 ;;		___lwdiv
  5834 ;;		___lwmod
  5835 ;; This function is called by:
  5836 ;;		_itoa
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text33
  5841  00144C                     __ptext33:
  5842                           	opt stack 0
  5843  00144C                     _utoa:
  5844                           	opt stack 22
  5845                           
  5846                           ;incstack = 0
  5847  00144C  C01C  F020         	movff	utoa@val,utoa@v
  5848  001450  C01D  F021         	movff	utoa@val+1,utoa@v+1
  5849  001454  C020  F013         	movff	utoa@v,___lwdiv@dividend
  5850  001458  C021  F014         	movff	utoa@v+1,___lwdiv@dividend+1
  5851  00145C  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  5852  001460  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  5853  001464  ECE3  F00C         	call	___lwdiv	;wreg free
  5854  001468  C013  F020         	movff	?___lwdiv,utoa@v
  5855  00146C  C014  F021         	movff	?___lwdiv+1,utoa@v+1
  5856  001470  4A1A               	infsnz	utoa@buf,f,c
  5857  001472  2A1B               	incf	utoa@buf+1,f,c
  5858  001474  5020               	movf	utoa@v,w,c
  5859  001476  1021               	iorwf	utoa@v+1,w,c
  5860  001478  A4D8               	btfss	status,2,c
  5861  00147A  D7EC               	goto	l835
  5862  00147C  C01A  FFD9         	movff	utoa@buf,fsr2l
  5863  001480  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  5864  001484  0E00               	movlw	0
  5865  001486  6EDF               	movwf	indf2,c
  5866  001488  061A               	decf	utoa@buf,f,c
  5867  00148A  A0D8               	btfss	status,0,c
  5868  00148C  061B               	decf	utoa@buf+1,f,c
  5869  00148E  C01C  F013         	movff	utoa@val,___lwmod@dividend
  5870  001492  C01D  F014         	movff	utoa@val+1,___lwmod@dividend+1
  5871  001496  C01E  F015         	movff	utoa@base,___lwmod@divisor
  5872  00149A  C01F  F016         	movff	utoa@base+1,___lwmod@divisor+1
  5873  00149E  ECC1  F00D         	call	___lwmod	;wreg free
  5874  0014A2  5013               	movf	?___lwmod,w,c
  5875  0014A4  6E22               	movwf	utoa@c,c
  5876  0014A6  C01C  F013         	movff	utoa@val,___lwdiv@dividend
  5877  0014AA  C01D  F014         	movff	utoa@val+1,___lwdiv@dividend+1
  5878  0014AE  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  5879  0014B2  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  5880  0014B6  ECE3  F00C         	call	___lwdiv	;wreg free
  5881  0014BA  C013  F01C         	movff	?___lwdiv,utoa@val
  5882  0014BE  C014  F01D         	movff	?___lwdiv+1,utoa@val+1
  5883  0014C2  0E09               	movlw	9
  5884  0014C4  6422               	cpfsgt	utoa@c,c
  5885  0014C6  D002               	goto	l838
  5886  0014C8  0E07               	movlw	7
  5887  0014CA  2622               	addwf	utoa@c,f,c
  5888  0014CC                     l838:
  5889  0014CC  0E30               	movlw	48
  5890  0014CE  2622               	addwf	utoa@c,f,c
  5891  0014D0  C01A  FFD9         	movff	utoa@buf,fsr2l
  5892  0014D4  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  5893  0014D8  C022  FFDF         	movff	utoa@c,indf2
  5894  0014DC  061A               	decf	utoa@buf,f,c
  5895  0014DE  A0D8               	btfss	status,0,c
  5896  0014E0  061B               	decf	utoa@buf+1,f,c
  5897  0014E2  501C               	movf	utoa@val,w,c
  5898  0014E4  101D               	iorwf	utoa@val+1,w,c
  5899  0014E6  A4D8               	btfss	status,2,c
  5900  0014E8  D7D2               	goto	l837
  5901                           
  5902                           ;	Return value of _utoa is never used
  5903  0014EA  4A1A               	infsnz	utoa@buf,f,c
  5904  0014EC  2A1B               	incf	utoa@buf+1,f,c
  5905  0014EE  0012               	return	
  5906  0014F0                     __end_of_utoa:
  5907                           	opt stack 0
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           prodh	equ	0xFF4
  5913                           prodl	equ	0xFF3
  5914                           intcon	equ	0xFF2
  5915                           intcon2	equ	0xFF1
  5916                           intcon3	equ	0xFF0
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           postinc1	equ	0xFE6
  5920                           postdec1	equ	0xFE5
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function ___lwmod *****************
  5930 ;; Defined at:
  5931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  dividend        2   18[COMRAM] unsigned int 
  5934 ;;  divisor         2   20[COMRAM] unsigned int 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  counter         1   22[COMRAM] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  2   18[COMRAM] unsigned int 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5946 ;;      Params:         4       0       0       0       0       0       0
  5947 ;;      Locals:         1       0       0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0
  5949 ;;      Totals:         5       0       0       0       0       0       0
  5950 ;;Total ram usage:        5 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    1
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_utoa
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text34
  5961  001B82                     __ptext34:
  5962                           	opt stack 0
  5963  001B82                     ___lwmod:
  5964                           	opt stack 22
  5965                           
  5966                           ;incstack = 0
  5967  001B82  5015               	movf	___lwmod@divisor,w,c
  5968  001B84  1016               	iorwf	___lwmod@divisor+1,w,c
  5969  001B86  B4D8               	btfsc	status,2,c
  5970  001B88  D018               	goto	l947
  5971  001B8A  0E01               	movlw	1
  5972  001B8C  6E17               	movwf	___lwmod@counter,c
  5973  001B8E  D004               	goto	l942
  5974  001B90  90D8               	bcf	status,0,c
  5975  001B92  3615               	rlcf	___lwmod@divisor,f,c
  5976  001B94  3616               	rlcf	___lwmod@divisor+1,f,c
  5977  001B96  2A17               	incf	___lwmod@counter,f,c
  5978  001B98                     l942:
  5979  001B98  AE16               	btfss	___lwmod@divisor+1,7,c
  5980  001B9A  D7FA               	goto	l943
  5981  001B9C                     u2350:
  5982  001B9C  5015               	movf	___lwmod@divisor,w,c
  5983  001B9E  5C13               	subwf	___lwmod@dividend,w,c
  5984  001BA0  5016               	movf	___lwmod@divisor+1,w,c
  5985  001BA2  5814               	subwfb	___lwmod@dividend+1,w,c
  5986  001BA4  A0D8               	btfss	status,0,c
  5987  001BA6  D004               	goto	l946
  5988  001BA8  5015               	movf	___lwmod@divisor,w,c
  5989  001BAA  5E13               	subwf	___lwmod@dividend,f,c
  5990  001BAC  5016               	movf	___lwmod@divisor+1,w,c
  5991  001BAE  5A14               	subwfb	___lwmod@dividend+1,f,c
  5992  001BB0                     l946:
  5993  001BB0  90D8               	bcf	status,0,c
  5994  001BB2  3216               	rrcf	___lwmod@divisor+1,f,c
  5995  001BB4  3215               	rrcf	___lwmod@divisor,f,c
  5996  001BB6  2E17               	decfsz	___lwmod@counter,f,c
  5997  001BB8  D7F1               	goto	u2350
  5998  001BBA                     l947:
  5999  001BBA  C013  F013         	movff	___lwmod@dividend,?___lwmod
  6000  001BBE  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  6001  001BC2  0012               	return		;funcret
  6002  001BC4                     __end_of___lwmod:
  6003                           	opt stack 0
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           intcon	equ	0xFF2
  6011                           intcon2	equ	0xFF1
  6012                           intcon3	equ	0xFF0
  6013                           postinc0	equ	0xFEE
  6014                           wreg	equ	0xFE8
  6015                           postinc1	equ	0xFE6
  6016                           postdec1	equ	0xFE5
  6017                           fsr1h	equ	0xFE2
  6018                           fsr1l	equ	0xFE1
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           fsr2h	equ	0xFDA
  6022                           fsr2l	equ	0xFD9
  6023                           status	equ	0xFD8
  6024                           
  6025 ;; *************** function ___lwdiv *****************
  6026 ;; Defined at:
  6027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  dividend        2   18[COMRAM] unsigned int 
  6030 ;;  divisor         2   20[COMRAM] unsigned int 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  quotient        2   23[COMRAM] unsigned int 
  6033 ;;  counter         1   22[COMRAM] unsigned char 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  2   18[COMRAM] unsigned int 
  6036 ;; Registers used:
  6037 ;;		wreg, status,2, status,0
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6043 ;;      Params:         4       0       0       0       0       0       0
  6044 ;;      Locals:         3       0       0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0
  6046 ;;      Totals:         7       0       0       0       0       0       0
  6047 ;;Total ram usage:        7 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    1
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_utoa
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text35
  6058  0019C6                     __ptext35:
  6059                           	opt stack 0
  6060  0019C6                     ___lwdiv:
  6061                           	opt stack 22
  6062                           
  6063                           ;incstack = 0
  6064  0019C6  0E00               	movlw	0
  6065  0019C8  6E19               	movwf	___lwdiv@quotient+1,c
  6066  0019CA  0E00               	movlw	0
  6067  0019CC  6E18               	movwf	___lwdiv@quotient,c
  6068  0019CE  5015               	movf	___lwdiv@divisor,w,c
  6069  0019D0  1016               	iorwf	___lwdiv@divisor+1,w,c
  6070  0019D2  B4D8               	btfsc	status,2,c
  6071  0019D4  D01C               	goto	l937
  6072  0019D6  0E01               	movlw	1
  6073  0019D8  6E17               	movwf	___lwdiv@counter,c
  6074  0019DA  D004               	goto	l932
  6075  0019DC  90D8               	bcf	status,0,c
  6076  0019DE  3615               	rlcf	___lwdiv@divisor,f,c
  6077  0019E0  3616               	rlcf	___lwdiv@divisor+1,f,c
  6078  0019E2  2A17               	incf	___lwdiv@counter,f,c
  6079  0019E4                     l932:
  6080  0019E4  AE16               	btfss	___lwdiv@divisor+1,7,c
  6081  0019E6  D7FA               	goto	l933
  6082  0019E8                     u2320:
  6083  0019E8  90D8               	bcf	status,0,c
  6084  0019EA  3618               	rlcf	___lwdiv@quotient,f,c
  6085  0019EC  3619               	rlcf	___lwdiv@quotient+1,f,c
  6086  0019EE  5015               	movf	___lwdiv@divisor,w,c
  6087  0019F0  5C13               	subwf	___lwdiv@dividend,w,c
  6088  0019F2  5016               	movf	___lwdiv@divisor+1,w,c
  6089  0019F4  5814               	subwfb	___lwdiv@dividend+1,w,c
  6090  0019F6  A0D8               	btfss	status,0,c
  6091  0019F8  D005               	goto	l936
  6092  0019FA  5015               	movf	___lwdiv@divisor,w,c
  6093  0019FC  5E13               	subwf	___lwdiv@dividend,f,c
  6094  0019FE  5016               	movf	___lwdiv@divisor+1,w,c
  6095  001A00  5A14               	subwfb	___lwdiv@dividend+1,f,c
  6096  001A02  8018               	bsf	___lwdiv@quotient,0,c
  6097  001A04                     l936:
  6098  001A04  90D8               	bcf	status,0,c
  6099  001A06  3216               	rrcf	___lwdiv@divisor+1,f,c
  6100  001A08  3215               	rrcf	___lwdiv@divisor,f,c
  6101  001A0A  2E17               	decfsz	___lwdiv@counter,f,c
  6102  001A0C  D7ED               	goto	u2320
  6103  001A0E                     l937:
  6104  001A0E  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  6105  001A12  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6106  001A16  0012               	return		;funcret
  6107  001A18                     __end_of___lwdiv:
  6108                           	opt stack 0
  6109                           tblptru	equ	0xFF8
  6110                           tblptrh	equ	0xFF7
  6111                           tblptrl	equ	0xFF6
  6112                           tablat	equ	0xFF5
  6113                           prodh	equ	0xFF4
  6114                           prodl	equ	0xFF3
  6115                           intcon	equ	0xFF2
  6116                           intcon2	equ	0xFF1
  6117                           intcon3	equ	0xFF0
  6118                           postinc0	equ	0xFEE
  6119                           wreg	equ	0xFE8
  6120                           postinc1	equ	0xFE6
  6121                           postdec1	equ	0xFE5
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _command_builder_add_string *****************
  6131 ;; Defined at:
  6132 ;;		line 543 in file "SlaveComm_PIC18.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  6135 ;;		 -> communications@send_buffer(42), 
  6136 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  6137 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  6138 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  6139 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  6140 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  6141 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  6142 ;;		 -> xsum_builder@xsumBuf(16), STR_15(3), STR_14(5), STR_13(4), 
  6143 ;;		 -> STR_11(4), STR_10(5), STR_9(4), 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  inx             2   30[COMRAM] int 
  6146 ;;  xsum            2   28[COMRAM] int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  2   22[COMRAM] int 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6156 ;;      Params:         4       0       0       0       0       0       0
  6157 ;;      Locals:         4       0       0       0       0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0
  6159 ;;      Totals:        10       0       0       0       0       0       0
  6160 ;;Total ram usage:       10 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    2
  6163 ;; This function calls:
  6164 ;;		_command_builder_add_char
  6165 ;; This function is called by:
  6166 ;;		_command_builder1
  6167 ;;		_command_builder3
  6168 ;;		_xsum_builder
  6169 ;;		_command_builder2
  6170 ;;		_command_builder4
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text36
  6175  00158E                     __ptext36:
  6176                           	opt stack 0
  6177  00158E                     _command_builder_add_string:
  6178                           	opt stack 23
  6179                           
  6180                           ;SlaveComm_PIC18.c: 545: int xsum = 0;
  6181                           
  6182                           ;incstack = 0
  6183  00158E  0E00               	movlw	0
  6184  001590  6E1E               	movwf	command_builder_add_string@xsum+1,c
  6185  001592  0E00               	movlw	0
  6186  001594  6E1D               	movwf	command_builder_add_string@xsum,c
  6187                           
  6188                           ;SlaveComm_PIC18.c: 546: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  6189  001596  0E00               	movlw	0
  6190  001598  6E20               	movwf	command_builder_add_string@inx+1,c
  6191  00159A  0E00               	movlw	0
  6192  00159C  6E1F               	movwf	command_builder_add_string@inx,c
  6193  00159E  D023               	goto	l400
  6194  0015A0                     
  6195                           ;SlaveComm_PIC18.c: 547: {
  6196                           ;SlaveComm_PIC18.c: 548: xsum += command_builder_add_char( send_buffer, data_string[inx]
      +                           );
  6197  0015A0  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  6198  0015A4  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  6199  0015A8  501F               	movf	command_builder_add_string@inx,w,c
  6200  0015AA  2419               	addwf	command_builder_add_string@data_string,w,c
  6201  0015AC  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  6202  0015AE  5020               	movf	command_builder_add_string@inx+1,w,c
  6203  0015B0  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  6204  0015B2  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  6205  0015B4  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  6206  0015B8  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  6207  0015BC  6AF8               	clrf	tblptru,c
  6208  0015BE  0E05               	movlw	(high __ramtop+-1)
  6209  0015C0  64F7               	cpfsgt	tblptrh,c
  6210  0015C2  D003               	bra	u2417
  6211  0015C4  0008               	tblrd		*
  6212  0015C6  50F5               	movf	tablat,w,c
  6213  0015C8  D005               	bra	u2410
  6214  0015CA                     u2417:
  6215  0015CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  6216  0015CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  6217  0015D2  50E7               	movf	indf1,w,c
  6218  0015D4                     u2410:
  6219  0015D4  6E15               	movwf	command_builder_add_char@data,c
  6220  0015D6  EC34  F00C         	call	_command_builder_add_char	;wreg free
  6221  0015DA  5013               	movf	?_command_builder_add_char,w,c
  6222  0015DC  261D               	addwf	command_builder_add_string@xsum,f,c
  6223  0015DE  5014               	movf	?_command_builder_add_char+1,w,c
  6224  0015E0  221E               	addwfc	command_builder_add_string@xsum+1,f,c
  6225  0015E2  4A1F               	infsnz	command_builder_add_string@inx,f,c
  6226  0015E4  2A20               	incf	command_builder_add_string@inx+1,f,c
  6227  0015E6                     l400:
  6228  0015E6  501F               	movf	command_builder_add_string@inx,w,c
  6229  0015E8  2419               	addwf	command_builder_add_string@data_string,w,c
  6230  0015EA  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  6231  0015EC  5020               	movf	command_builder_add_string@inx+1,w,c
  6232  0015EE  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  6233  0015F0  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  6234  0015F2  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  6235  0015F6  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  6236  0015FA  6AF8               	clrf	tblptru,c
  6237  0015FC  0E05               	movlw	(high __ramtop+-1)
  6238  0015FE  64F7               	cpfsgt	tblptrh,c
  6239  001600  D003               	bra	u2427
  6240  001602  0008               	tblrd		*
  6241  001604  50F5               	movf	tablat,w,c
  6242  001606  D005               	bra	u2420
  6243  001608                     u2427:
  6244  001608  CFF6 FFE1          	movff	tblptrl,fsr1l
  6245  00160C  CFF7 FFE2          	movff	tblptrh,fsr1h
  6246  001610  50E7               	movf	indf1,w,c
  6247  001612                     u2420:
  6248  001612  0900               	iorlw	0
  6249  001614  A4D8               	btfss	status,2,c
  6250  001616  D7C4               	goto	l401
  6251                           
  6252                           ;SlaveComm_PIC18.c: 549: }
  6253                           ;SlaveComm_PIC18.c: 551: return xsum;
  6254  001618  C01D  F017         	movff	command_builder_add_string@xsum,?_command_builder_add_string
  6255  00161C  C01E  F018         	movff	command_builder_add_string@xsum+1,?_command_builder_add_string+1
  6256  001620  0012               	return		;funcret
  6257  001622                     __end_of_command_builder_add_string:
  6258                           	opt stack 0
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           intcon2	equ	0xFF1
  6267                           intcon3	equ	0xFF0
  6268                           postinc0	equ	0xFEE
  6269                           wreg	equ	0xFE8
  6270                           indf1	equ	0xFE7
  6271                           postinc1	equ	0xFE6
  6272                           postdec1	equ	0xFE5
  6273                           fsr1h	equ	0xFE2
  6274                           fsr1l	equ	0xFE1
  6275                           indf2	equ	0xFDF
  6276                           postinc2	equ	0xFDE
  6277                           fsr2h	equ	0xFDA
  6278                           fsr2l	equ	0xFD9
  6279                           status	equ	0xFD8
  6280                           
  6281 ;; *************** function _command_builder_add_char *****************
  6282 ;; Defined at:
  6283 ;;		line 530 in file "SlaveComm_PIC18.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  6286 ;;		 -> communications@send_buffer(42), 
  6287 ;;  data            1   20[COMRAM] unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  2   18[COMRAM] int 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6299 ;;      Params:         3       0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0
  6301 ;;      Temps:          1       0       0       0       0       0       0
  6302 ;;      Totals:         4       0       0       0       0       0       0
  6303 ;;Total ram usage:        4 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    1
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_command_builder1
  6310 ;;		_command_builder3
  6311 ;;		_xsum_builder
  6312 ;;		_command_builder_add_string
  6313 ;;		_command_builder2
  6314 ;;		_command_builder4
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text37
  6319  001868                     __ptext37:
  6320                           	opt stack 0
  6321  001868                     _command_builder_add_char:
  6322                           	opt stack 23
  6323                           
  6324                           ;SlaveComm_PIC18.c: 532: send_buffer->data_buffer[send_buffer->write_position] = data;
  6325                           
  6326                           ;incstack = 0
  6327  001868  EE20 F028          	lfsr	2,40
  6328  00186C  5013               	movf	command_builder_add_char@send_buffer,w,c
  6329  00186E  26D9               	addwf	fsr2l,f,c
  6330  001870  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  6331  001872  22DA               	addwfc	fsr2h,f,c
  6332  001874  50DF               	movf	indf2,w,c
  6333  001876  6E16               	movwf	??_command_builder_add_char& (0+255),c
  6334  001878  5016               	movf	??_command_builder_add_char,w,c
  6335  00187A  0D01               	mullw	1
  6336  00187C  50F3               	movf	prodl,w,c
  6337  00187E  2413               	addwf	command_builder_add_char@send_buffer,w,c
  6338  001880  6ED9               	movwf	fsr2l,c
  6339  001882  50F4               	movf	prodh,w,c
  6340  001884  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  6341  001886  6EDA               	movwf	fsr2h,c
  6342  001888  C015  FFDF         	movff	command_builder_add_char@data,indf2
  6343                           
  6344                           ;SlaveComm_PIC18.c: 534: send_buffer->write_position++;
  6345  00188C  EE20 F028          	lfsr	2,40
  6346  001890  5013               	movf	command_builder_add_char@send_buffer,w,c
  6347  001892  26D9               	addwf	fsr2l,f,c
  6348  001894  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  6349  001896  22DA               	addwfc	fsr2h,f,c
  6350  001898  2ADF               	incf	indf2,f,c
  6351                           
  6352                           ;SlaveComm_PIC18.c: 535: if( send_buffer->write_position >= 40 )
  6353  00189A  EE20 F028          	lfsr	2,40
  6354  00189E  5013               	movf	command_builder_add_char@send_buffer,w,c
  6355  0018A0  26D9               	addwf	fsr2l,f,c
  6356  0018A2  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  6357  0018A4  22DA               	addwfc	fsr2h,f,c
  6358  0018A6  0E27               	movlw	39
  6359  0018A8  64DF               	cpfsgt	indf2,c
  6360  0018AA  D008               	goto	l396
  6361                           
  6362                           ;SlaveComm_PIC18.c: 536: {
  6363                           ;SlaveComm_PIC18.c: 537: send_buffer->write_position = 0;
  6364  0018AC  EE20 F028          	lfsr	2,40
  6365  0018B0  5013               	movf	command_builder_add_char@send_buffer,w,c
  6366  0018B2  26D9               	addwf	fsr2l,f,c
  6367  0018B4  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  6368  0018B6  22DA               	addwfc	fsr2h,f,c
  6369  0018B8  0E00               	movlw	0
  6370  0018BA  6EDF               	movwf	indf2,c
  6371  0018BC                     l396:
  6372                           
  6373                           ;SlaveComm_PIC18.c: 538: }
  6374                           ;SlaveComm_PIC18.c: 540: return data;
  6375  0018BC  C015  F013         	movff	command_builder_add_char@data,?_command_builder_add_char
  6376  0018C0  6A14               	clrf	?_command_builder_add_char+1,c
  6377  0018C2  0012               	return	
  6378  0018C4                     __end_of_command_builder_add_char:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           intcon2	equ	0xFF1
  6388                           intcon3	equ	0xFF0
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           indf1	equ	0xFE7
  6392                           postinc1	equ	0xFE6
  6393                           postdec1	equ	0xFE5
  6394                           fsr1h	equ	0xFE2
  6395                           fsr1l	equ	0xFE1
  6396                           indf2	equ	0xFDF
  6397                           postinc2	equ	0xFDE
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _atol *****************
  6403 ;; Defined at:
  6404 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  s               2   30[COMRAM] PTR const unsigned char 
  6407 ;;		 -> process_data@parameters(50), 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  a               4   39[COMRAM] long 
  6410 ;;  c               1   43[COMRAM] unsigned char 
  6411 ;;  sign            1   38[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  4   30[COMRAM] long 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6421 ;;      Params:         4       0       0       0       0       0       0
  6422 ;;      Locals:         6       0       0       0       0       0       0
  6423 ;;      Temps:          4       0       0       0       0       0       0
  6424 ;;      Totals:        14       0       0       0       0       0       0
  6425 ;;Total ram usage:       14 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    2
  6428 ;; This function calls:
  6429 ;;		___lmul
  6430 ;;		_isdigit
  6431 ;; This function is called by:
  6432 ;;		_process_data_parameters
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text38
  6437  000F90                     __ptext38:
  6438                           	opt stack 0
  6439  000F90                     _atol:
  6440                           	opt stack 25
  6441                           
  6442                           ;incstack = 0
  6443  000F90  C01F  FFD9         	movff	atol@s,fsr2l
  6444  000F94  C020  FFDA         	movff	atol@s+1,fsr2h
  6445  000F98  50DF               	movf	indf2,w,c
  6446  000F9A  6E2C               	movwf	atol@c,c
  6447  000F9C  4A1F               	infsnz	atol@s,f,c
  6448  000F9E  2A20               	incf	atol@s+1,f,c
  6449  000FA0  0E20               	movlw	32
  6450  000FA2  182C               	xorwf	atol@c,w,c
  6451  000FA4  B4D8               	btfsc	status,2,c
  6452  000FA6  D7F4               	goto	_atol
  6453  000FA8  0E09               	movlw	9
  6454  000FAA  182C               	xorwf	atol@c,w,c
  6455  000FAC  B4D8               	btfsc	status,2,c
  6456  000FAE  D7F0               	goto	_atol
  6457  000FB0  0E00               	movlw	0
  6458  000FB2  6E28               	movwf	atol@a,c
  6459  000FB4  0E00               	movlw	0
  6460  000FB6  6E29               	movwf	atol@a+1,c
  6461  000FB8  0E00               	movlw	0
  6462  000FBA  6E2A               	movwf	atol@a+2,c
  6463  000FBC  0E00               	movlw	0
  6464  000FBE  6E2B               	movwf	atol@a+3,c
  6465  000FC0  0E00               	movlw	0
  6466  000FC2  6E27               	movwf	atol@sign,c
  6467  000FC4  0E2D               	movlw	45
  6468  000FC6  182C               	xorwf	atol@c,w,c
  6469  000FC8  A4D8               	btfss	status,2,c
  6470  000FCA  D002               	goto	l647
  6471  000FCC  2A27               	incf	atol@sign,f,c
  6472  000FCE  D027               	goto	L3
  6473  000FD0                     l647:
  6474  000FD0  0E2B               	movlw	43
  6475  000FD2  182C               	xorwf	atol@c,w,c
  6476  000FD4  A4D8               	btfss	status,2,c
  6477  000FD6  D02B               	goto	l650
  6478  000FD8  D022               	goto	L3
  6479  000FDA  C028  F013         	movff	atol@a,___lmul@multiplier
  6480  000FDE  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  6481  000FE2  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  6482  000FE6  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  6483  000FEA  0E0A               	movlw	10
  6484  000FEC  6E17               	movwf	___lmul@multiplicand,c
  6485  000FEE  0E00               	movlw	0
  6486  000FF0  6E18               	movwf	___lmul@multiplicand+1,c
  6487  000FF2  0E00               	movlw	0
  6488  000FF4  6E19               	movwf	___lmul@multiplicand+2,c
  6489  000FF6  0E00               	movlw	0
  6490  000FF8  6E1A               	movwf	___lmul@multiplicand+3,c
  6491  000FFA  EC8F  F00C         	call	___lmul	;wreg free
  6492  000FFE  C02C  F023         	movff	atol@c,??_atol
  6493  001002  0ED0               	movlw	208
  6494  001004  2623               	addwf	??_atol,f,c
  6495  001006  5023               	movf	??_atol,w,c
  6496  001008  2413               	addwf	?___lmul,w,c
  6497  00100A  6E28               	movwf	atol@a,c
  6498  00100C  0E00               	movlw	0
  6499  00100E  2014               	addwfc	?___lmul+1,w,c
  6500  001010  6E29               	movwf	atol@a+1,c
  6501  001012  0E00               	movlw	0
  6502  001014  2015               	addwfc	?___lmul+2,w,c
  6503  001016  6E2A               	movwf	atol@a+2,c
  6504  001018  0E00               	movlw	0
  6505  00101A  2016               	addwfc	?___lmul+3,w,c
  6506  00101C  6E2B               	movwf	atol@a+3,c
  6507  00101E                     L3:
  6508  00101E  C01F  FFD9         	movff	atol@s,fsr2l
  6509  001022  C020  FFDA         	movff	atol@s+1,fsr2h
  6510  001026  50DF               	movf	indf2,w,c
  6511  001028  6E2C               	movwf	atol@c,c
  6512  00102A  4A1F               	infsnz	atol@s,f,c
  6513  00102C  2A20               	incf	atol@s+1,f,c
  6514  00102E                     l650:
  6515  00102E  502C               	movf	atol@c,w,c
  6516  001030  EC97  F00E         	call	_isdigit
  6517  001034  B0D8               	btfsc	status,0,c
  6518  001036  D7D1               	goto	l651
  6519  001038  5027               	movf	atol@sign,w,c
  6520  00103A  B4D8               	btfsc	status,2,c
  6521  00103C  D01A               	goto	l653
  6522  00103E  C028  F023         	movff	atol@a,??_atol
  6523  001042  C029  F024         	movff	atol@a+1,??_atol+1
  6524  001046  C02A  F025         	movff	atol@a+2,??_atol+2
  6525  00104A  C02B  F026         	movff	atol@a+3,??_atol+3
  6526  00104E  1E23               	comf	??_atol,f,c
  6527  001050  1E24               	comf	??_atol+1,f,c
  6528  001052  1E25               	comf	??_atol+2,f,c
  6529  001054  1E26               	comf	??_atol+3,f,c
  6530  001056  2A23               	incf	??_atol,f,c
  6531  001058  0E00               	movlw	0
  6532  00105A  2224               	addwfc	??_atol+1,f,c
  6533  00105C  2225               	addwfc	??_atol+2,f,c
  6534  00105E  2226               	addwfc	??_atol+3,f,c
  6535  001060  C023  F01F         	movff	??_atol,?_atol
  6536  001064  C024  F020         	movff	??_atol+1,?_atol+1
  6537  001068  C025  F021         	movff	??_atol+2,?_atol+2
  6538  00106C  C026  F022         	movff	??_atol+3,?_atol+3
  6539  001070  0012               	return	
  6540  001072                     l653:
  6541  001072  C028  F01F         	movff	atol@a,?_atol
  6542  001076  C029  F020         	movff	atol@a+1,?_atol+1
  6543  00107A  C02A  F021         	movff	atol@a+2,?_atol+2
  6544  00107E  C02B  F022         	movff	atol@a+3,?_atol+3
  6545  001082  0012               	return		;funcret
  6546  001084                     __end_of_atol:
  6547                           	opt stack 0
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           prodh	equ	0xFF4
  6553                           prodl	equ	0xFF3
  6554                           intcon	equ	0xFF2
  6555                           intcon2	equ	0xFF1
  6556                           intcon3	equ	0xFF0
  6557                           postinc0	equ	0xFEE
  6558                           wreg	equ	0xFE8
  6559                           indf1	equ	0xFE7
  6560                           postinc1	equ	0xFE6
  6561                           postdec1	equ	0xFE5
  6562                           fsr1h	equ	0xFE2
  6563                           fsr1l	equ	0xFE1
  6564                           indf2	equ	0xFDF
  6565                           postinc2	equ	0xFDE
  6566                           fsr2h	equ	0xFDA
  6567                           fsr2l	equ	0xFD9
  6568                           status	equ	0xFD8
  6569                           
  6570 ;; *************** function _isdigit *****************
  6571 ;; Defined at:
  6572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  c               1    wreg     unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  c               1   20[COMRAM] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;		None               void
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6586 ;;      Params:         0       0       0       0       0       0       0
  6587 ;;      Locals:         2       0       0       0       0       0       0
  6588 ;;      Temps:          1       0       0       0       0       0       0
  6589 ;;      Totals:         3       0       0       0       0       0       0
  6590 ;;Total ram usage:        3 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    1
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_atoi
  6597 ;;		_atol
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text39
  6602  001D2E                     __ptext39:
  6603                           	opt stack 0
  6604  001D2E                     _isdigit:
  6605                           	opt stack 26
  6606                           
  6607                           ;incstack = 0
  6608                           ;isdigit@c stored from wreg
  6609  001D2E  6E15               	movwf	isdigit@c,c
  6610  001D30  0E00               	movlw	0
  6611  001D32  6E14               	movwf	_isdigit$2334,c
  6612  001D34  0E3A               	movlw	58
  6613  001D36  6015               	cpfslt	isdigit@c,c
  6614  001D38  D005               	goto	l825
  6615  001D3A  0E2F               	movlw	47
  6616  001D3C  6415               	cpfsgt	isdigit@c,c
  6617  001D3E  D002               	goto	l825
  6618  001D40  0E01               	movlw	1
  6619  001D42  6E14               	movwf	_isdigit$2334,c
  6620  001D44                     l825:
  6621  001D44  C014  F013         	movff	_isdigit$2334,??_isdigit
  6622  001D48  3013               	rrcf	??_isdigit,w,c
  6623  001D4A  0012               	return	
  6624  001D4C                     __end_of_isdigit:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           prodh	equ	0xFF4
  6631                           prodl	equ	0xFF3
  6632                           intcon	equ	0xFF2
  6633                           intcon2	equ	0xFF1
  6634                           intcon3	equ	0xFF0
  6635                           postinc0	equ	0xFEE
  6636                           wreg	equ	0xFE8
  6637                           indf1	equ	0xFE7
  6638                           postinc1	equ	0xFE6
  6639                           postdec1	equ	0xFE5
  6640                           fsr1h	equ	0xFE2
  6641                           fsr1l	equ	0xFE1
  6642                           indf2	equ	0xFDF
  6643                           postinc2	equ	0xFDE
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function ___lmul *****************
  6649 ;; Defined at:
  6650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  multiplier      4   18[COMRAM] unsigned long 
  6653 ;;  multiplicand    4   22[COMRAM] unsigned long 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  product         4   26[COMRAM] unsigned long 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  4   18[COMRAM] unsigned long 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6665 ;;      Params:         8       0       0       0       0       0       0
  6666 ;;      Locals:         4       0       0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0
  6668 ;;      Totals:        12       0       0       0       0       0       0
  6669 ;;Total ram usage:       12 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_powerPulseCheck
  6676 ;;		_atol
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text40
  6681  00191E                     __ptext40:
  6682                           	opt stack 0
  6683  00191E                     ___lmul:
  6684                           	opt stack 28
  6685                           
  6686                           ;incstack = 0
  6687  00191E  0E00               	movlw	0
  6688  001920  6E1B               	movwf	___lmul@product,c
  6689  001922  0E00               	movlw	0
  6690  001924  6E1C               	movwf	___lmul@product+1,c
  6691  001926  0E00               	movlw	0
  6692  001928  6E1D               	movwf	___lmul@product+2,c
  6693  00192A  0E00               	movlw	0
  6694  00192C  6E1E               	movwf	___lmul@product+3,c
  6695  00192E  A013               	btfss	___lmul@multiplier,0,c
  6696  001930  D008               	goto	l479
  6697  001932  5017               	movf	___lmul@multiplicand,w,c
  6698  001934  261B               	addwf	___lmul@product,f,c
  6699  001936  5018               	movf	___lmul@multiplicand+1,w,c
  6700  001938  221C               	addwfc	___lmul@product+1,f,c
  6701  00193A  5019               	movf	___lmul@multiplicand+2,w,c
  6702  00193C  221D               	addwfc	___lmul@product+2,f,c
  6703  00193E  501A               	movf	___lmul@multiplicand+3,w,c
  6704  001940  221E               	addwfc	___lmul@product+3,f,c
  6705  001942                     l479:
  6706  001942  90D8               	bcf	status,0,c
  6707  001944  3617               	rlcf	___lmul@multiplicand,f,c
  6708  001946  3618               	rlcf	___lmul@multiplicand+1,f,c
  6709  001948  3619               	rlcf	___lmul@multiplicand+2,f,c
  6710  00194A  361A               	rlcf	___lmul@multiplicand+3,f,c
  6711  00194C  90D8               	bcf	status,0,c
  6712  00194E  3216               	rrcf	___lmul@multiplier+3,f,c
  6713  001950  3215               	rrcf	___lmul@multiplier+2,f,c
  6714  001952  3214               	rrcf	___lmul@multiplier+1,f,c
  6715  001954  3213               	rrcf	___lmul@multiplier,f,c
  6716  001956  5013               	movf	___lmul@multiplier,w,c
  6717  001958  1014               	iorwf	___lmul@multiplier+1,w,c
  6718  00195A  1015               	iorwf	___lmul@multiplier+2,w,c
  6719  00195C  1016               	iorwf	___lmul@multiplier+3,w,c
  6720  00195E  A4D8               	btfss	status,2,c
  6721  001960  D7E6               	goto	l478
  6722  001962  C01B  F013         	movff	___lmul@product,?___lmul
  6723  001966  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  6724  00196A  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  6725  00196E  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  6726  001972  0012               	return		;funcret
  6727  001974                     __end_of___lmul:
  6728                           	opt stack 0
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           prodh	equ	0xFF4
  6734                           prodl	equ	0xFF3
  6735                           intcon	equ	0xFF2
  6736                           intcon2	equ	0xFF1
  6737                           intcon3	equ	0xFF0
  6738                           postinc0	equ	0xFEE
  6739                           wreg	equ	0xFE8
  6740                           indf1	equ	0xFE7
  6741                           postinc1	equ	0xFE6
  6742                           postdec1	equ	0xFE5
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           indf2	equ	0xFDF
  6746                           postinc2	equ	0xFDE
  6747                           fsr2h	equ	0xFDA
  6748                           fsr2l	equ	0xFD9
  6749                           status	equ	0xFD8
  6750                           
  6751 ;; *************** function _process_data_parameterize *****************
  6752 ;; Defined at:
  6753 ;;		line 311 in file "SlaveComm_PIC18.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  6756 ;;		 -> process_data@parameters(50), 
  6757 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  6758 ;;		 -> communications@receive_buffer(42), 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  inx             2   31[COMRAM] int 
  6761 ;;  parameter_po    1   34[COMRAM] unsigned char 
  6762 ;;  parameter_in    1   33[COMRAM] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      void 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6772 ;;      Params:         4       0       0       0       0       0       0
  6773 ;;      Locals:         4       0       0       0       0       0       0
  6774 ;;      Temps:          3       0       0       0       0       0       0
  6775 ;;      Totals:        11       0       0       0       0       0       0
  6776 ;;Total ram usage:       11 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    2
  6779 ;; This function calls:
  6780 ;;		___wmul
  6781 ;; This function is called by:
  6782 ;;		_process_data
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text41
  6787  000AC0                     __ptext41:
  6788                           	opt stack 0
  6789  000AC0                     _process_data_parameterize:
  6790                           	opt stack 26
  6791                           
  6792                           ;SlaveComm_PIC18.c: 313: unsigned char parameter_position = 0;
  6793                           
  6794                           ;incstack = 0
  6795  000AC0  0E00               	movlw	0
  6796  000AC2  6E23               	movwf	process_data_parameterize@parameter_position,c
  6797                           
  6798                           ;SlaveComm_PIC18.c: 314: unsigned char parameter_index = 0;
  6799  000AC4  0E00               	movlw	0
  6800  000AC6  6E22               	movwf	process_data_parameterize@parameter_index,c
  6801                           
  6802                           ;SlaveComm_PIC18.c: 323: for (int inx = 0; inx < 5; inx++)
  6803  000AC8  0E00               	movlw	0
  6804  000ACA  6E21               	movwf	process_data_parameterize@inx+1,c
  6805  000ACC  0E00               	movlw	0
  6806  000ACE  6E20               	movwf	process_data_parameterize@inx,c
  6807  000AD0  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6808  000AD2  D008               	goto	l334
  6809  000AD4  5021               	movf	process_data_parameterize@inx+1,w,c
  6810  000AD6  E105               	bnz	u2810
  6811  000AD8  0E05               	movlw	5
  6812  000ADA  5C20               	subwf	process_data_parameterize@inx,w,c
  6813  000ADC  B0D8               	btfsc	status,0,c
  6814  000ADE  D082               	goto	l336
  6815  000AE0  D001               	goto	l334
  6816  000AE2                     u2810:
  6817  000AE2  D080               	goto	l336
  6818  000AE4                     l334:
  6819                           
  6820                           ;SlaveComm_PIC18.c: 324: {
  6821                           ;SlaveComm_PIC18.c: 325: parameters[inx][0] = '\0';
  6822  000AE4  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  6823  000AE8  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  6824  000AEC  0E00               	movlw	0
  6825  000AEE  6E16               	movwf	___wmul@multiplicand+1,c
  6826  000AF0  0E0A               	movlw	10
  6827  000AF2  6E15               	movwf	___wmul@multiplicand,c
  6828  000AF4  EC53  F00E         	call	___wmul	;wreg free
  6829  000AF8  5013               	movf	?___wmul,w,c
  6830  000AFA  2419               	addwf	process_data_parameterize@parameters,w,c
  6831  000AFC  6ED9               	movwf	fsr2l,c
  6832  000AFE  5014               	movf	?___wmul+1,w,c
  6833  000B00  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  6834  000B02  6EDA               	movwf	fsr2h,c
  6835  000B04  0E00               	movlw	0
  6836  000B06  6EDF               	movwf	indf2,c
  6837  000B08  4A20               	infsnz	process_data_parameterize@inx,f,c
  6838  000B0A  2A21               	incf	process_data_parameterize@inx+1,f,c
  6839  000B0C  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  6840  000B0E  D7EA               	goto	l334
  6841  000B10  5021               	movf	process_data_parameterize@inx+1,w,c
  6842  000B12  E168               	bnz	l3432
  6843  000B14  D7E1               	goto	L2
  6844  000B16                     
  6845                           ;SlaveComm_PIC18.c: 337: parameter_position = 0;
  6846  000B16  0E00               	movlw	0
  6847  000B18  6E23               	movwf	process_data_parameterize@parameter_position,c
  6848                           
  6849                           ;SlaveComm_PIC18.c: 338: parameter_index++;
  6850  000B1A  2A22               	incf	process_data_parameterize@parameter_index,f,c
  6851                           
  6852                           ;SlaveComm_PIC18.c: 340: if (parameter_index >= 5)
  6853  000B1C  0E04               	movlw	4
  6854  000B1E  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  6855  000B20  D05A               	goto	l340
  6856                           
  6857                           ;SlaveComm_PIC18.c: 341: {
  6858                           ;SlaveComm_PIC18.c: 344: parameter_index = (5 - 1);
  6859  000B22  0E04               	movlw	4
  6860  000B24  6E22               	movwf	process_data_parameterize@parameter_index,c
  6861                           
  6862                           ;SlaveComm_PIC18.c: 345: }
  6863                           ;SlaveComm_PIC18.c: 347: break;
  6864  000B26  D057               	goto	l340
  6865  000B28                     
  6866                           ;SlaveComm_PIC18.c: 350: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  6867  000B28  EE20 F029          	lfsr	2,41
  6868  000B2C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6869  000B2E  26D9               	addwf	fsr2l,f,c
  6870  000B30  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6871  000B32  22DA               	addwfc	fsr2h,f,c
  6872  000B34  50DF               	movf	indf2,w,c
  6873  000B36  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6874  000B38  501D               	movf	??_process_data_parameterize,w,c
  6875  000B3A  0D01               	mullw	1
  6876  000B3C  50F3               	movf	prodl,w,c
  6877  000B3E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6878  000B40  6ED9               	movwf	fsr2l,c
  6879  000B42  50F4               	movf	prodh,w,c
  6880  000B44  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6881  000B46  6EDA               	movwf	fsr2h,c
  6882  000B48  5022               	movf	process_data_parameterize@parameter_index,w,c
  6883  000B4A  0D0A               	mullw	10
  6884  000B4C  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  6885  000B50  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  6886  000B54  50F3               	movf	prodl,w,c
  6887  000B56  261E               	addwf	??_process_data_parameterize+1,f,c
  6888  000B58  50F4               	movf	prodh,w,c
  6889  000B5A  221F               	addwfc	??_process_data_parameterize+2,f,c
  6890  000B5C  5023               	movf	process_data_parameterize@parameter_position,w,c
  6891  000B5E  0D01               	mullw	1
  6892  000B60  50F3               	movf	prodl,w,c
  6893  000B62  241E               	addwf	??_process_data_parameterize+1,w,c
  6894  000B64  6EE1               	movwf	fsr1l,c
  6895  000B66  50F4               	movf	prodh,w,c
  6896  000B68  201F               	addwfc	??_process_data_parameterize+2,w,c
  6897  000B6A  6EE2               	movwf	fsr1h,c
  6898  000B6C  CFDF FFE7          	movff	indf2,indf1
  6899                           
  6900                           ;SlaveComm_PIC18.c: 351: parameter_position++;
  6901  000B70  2A23               	incf	process_data_parameterize@parameter_position,f,c
  6902                           
  6903                           ;SlaveComm_PIC18.c: 352: if (parameter_position >= 10)
  6904  000B72  0E09               	movlw	9
  6905  000B74  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  6906  000B76  D002               	goto	l344
  6907                           
  6908                           ;SlaveComm_PIC18.c: 353: {
  6909                           ;SlaveComm_PIC18.c: 356: parameter_position = (10 - 1);
  6910  000B78  0E09               	movlw	9
  6911  000B7A  6E23               	movwf	process_data_parameterize@parameter_position,c
  6912  000B7C                     l344:
  6913                           
  6914                           ;SlaveComm_PIC18.c: 357: }
  6915                           ;SlaveComm_PIC18.c: 360: parameters[parameter_index][parameter_position] = '\0';
  6916  000B7C  5022               	movf	process_data_parameterize@parameter_index,w,c
  6917  000B7E  0D0A               	mullw	10
  6918  000B80  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  6919  000B84  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  6920  000B88  50F3               	movf	prodl,w,c
  6921  000B8A  261D               	addwf	??_process_data_parameterize,f,c
  6922  000B8C  50F4               	movf	prodh,w,c
  6923  000B8E  221E               	addwfc	??_process_data_parameterize+1,f,c
  6924  000B90  5023               	movf	process_data_parameterize@parameter_position,w,c
  6925  000B92  0D01               	mullw	1
  6926  000B94  50F3               	movf	prodl,w,c
  6927  000B96  241D               	addwf	??_process_data_parameterize,w,c
  6928  000B98  6ED9               	movwf	fsr2l,c
  6929  000B9A  50F4               	movf	prodh,w,c
  6930  000B9C  201E               	addwfc	??_process_data_parameterize+1,w,c
  6931  000B9E  6EDA               	movwf	fsr2h,c
  6932  000BA0  0E00               	movlw	0
  6933  000BA2  6EDF               	movwf	indf2,c
  6934                           
  6935                           ;SlaveComm_PIC18.c: 362: }
  6936                           
  6937                           ;SlaveComm_PIC18.c: 361: break;
  6938  000BA4  D018               	goto	l340
  6939  000BA6  EE20 F029          	lfsr	2,41
  6940  000BAA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6941  000BAC  26D9               	addwf	fsr2l,f,c
  6942  000BAE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6943  000BB0  22DA               	addwfc	fsr2h,f,c
  6944  000BB2  50DF               	movf	indf2,w,c
  6945  000BB4  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6946  000BB6  501D               	movf	??_process_data_parameterize,w,c
  6947  000BB8  0D01               	mullw	1
  6948  000BBA  50F3               	movf	prodl,w,c
  6949  000BBC  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6950  000BBE  6ED9               	movwf	fsr2l,c
  6951  000BC0  50F4               	movf	prodh,w,c
  6952  000BC2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6953  000BC4  6EDA               	movwf	fsr2h,c
  6954  000BC6  50DF               	movf	indf2,w,c
  6955                           
  6956                           ; Switch size 1, requested type "space"
  6957                           ; Number of cases is 2, Range of values is 33 to 59
  6958                           ; switch strategies available:
  6959                           ; Name         Instructions Cycles
  6960                           ; simple_byte            7     4 (average)
  6961                           ;	Chosen strategy is simple_byte
  6962  000BC8  0A21               	xorlw	33	; case 33
  6963  000BCA  B4D8               	btfsc	status,2,c
  6964  000BCC  D004               	goto	l340
  6965  000BCE  0A1A               	xorlw	26	; case 59
  6966  000BD0  B4D8               	btfsc	status,2,c
  6967  000BD2  D7A1               	goto	l341
  6968  000BD4  D7A9               	goto	l343
  6969  000BD6                     l340:
  6970                           
  6971                           ;SlaveComm_PIC18.c: 364: buffer_to_parameterize->read_position++;
  6972  000BD6  EE20 F029          	lfsr	2,41
  6973  000BDA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6974  000BDC  26D9               	addwf	fsr2l,f,c
  6975  000BDE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6976  000BE0  22DA               	addwfc	fsr2h,f,c
  6977  000BE2  2ADF               	incf	indf2,f,c
  6978  000BE4                     l336:
  6979  000BE4                     l3432:
  6980  000BE4  EE20 F029          	lfsr	2,41
  6981  000BE8  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  6982  000BEA  26D9               	addwf	fsr2l,f,c
  6983  000BEC  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  6984  000BEE  22DA               	addwfc	fsr2h,f,c
  6985  000BF0  50DF               	movf	indf2,w,c
  6986  000BF2  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  6987  000BF4  501D               	movf	??_process_data_parameterize,w,c
  6988  000BF6  0D01               	mullw	1
  6989  000BF8  50F3               	movf	prodl,w,c
  6990  000BFA  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  6991  000BFC  6ED9               	movwf	fsr2l,c
  6992  000BFE  50F4               	movf	prodh,w,c
  6993  000C00  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  6994  000C02  6EDA               	movwf	fsr2h,c
  6995  000C04  0E2A               	movlw	42
  6996  000C06  18DE               	xorwf	postinc2,w,c
  6997  000C08  B4D8               	btfsc	status,2,c
  6998  000C0A  0012               	return	
  6999  000C0C  EE20 F029          	lfsr	2,41
  7000  000C10  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7001  000C12  26D9               	addwf	fsr2l,f,c
  7002  000C14  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7003  000C16  22DA               	addwfc	fsr2h,f,c
  7004  000C18  0E28               	movlw	40
  7005  000C1A  60DF               	cpfslt	indf2,c
  7006  000C1C  0012               	return	
  7007  000C1E  EE20 F028          	lfsr	2,40
  7008  000C22  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7009  000C24  26D9               	addwf	fsr2l,f,c
  7010  000C26  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7011  000C28  22DA               	addwfc	fsr2h,f,c
  7012  000C2A  EE10 F029          	lfsr	1,41
  7013  000C2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  7014  000C30  26E1               	addwf	fsr1l,f,c
  7015  000C32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  7016  000C34  22E2               	addwfc	fsr1h,f,c
  7017  000C36  50DE               	movf	postinc2,w,c
  7018  000C38  18E6               	xorwf	postinc1,w,c
  7019  000C3A  B4D8               	btfsc	status,2,c
  7020  000C3C  0012               	return	
  7021  000C3E  D7B3               	goto	l338
  7022  000C40                     __end_of_process_data_parameterize:
  7023                           	opt stack 0
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           intcon2	equ	0xFF1
  7032                           intcon3	equ	0xFF0
  7033                           postinc0	equ	0xFEE
  7034                           wreg	equ	0xFE8
  7035                           indf1	equ	0xFE7
  7036                           postinc1	equ	0xFE6
  7037                           postdec1	equ	0xFE5
  7038                           fsr1h	equ	0xFE2
  7039                           fsr1l	equ	0xFE1
  7040                           indf2	equ	0xFDF
  7041                           postinc2	equ	0xFDE
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function ___wmul *****************
  7047 ;; Defined at:
  7048 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  multiplier      2   18[COMRAM] unsigned int 
  7051 ;;  multiplicand    2   20[COMRAM] unsigned int 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  product         2   22[COMRAM] unsigned int 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  2   18[COMRAM] unsigned int 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0, prodl, prodh
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7063 ;;      Params:         4       0       0       0       0       0       0
  7064 ;;      Locals:         2       0       0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0
  7066 ;;      Totals:         6       0       0       0       0       0       0
  7067 ;;Total ram usage:        6 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_process_data_parameterize
  7074 ;;		_atoi
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text42
  7079  001CA6                     __ptext42:
  7080                           	opt stack 0
  7081  001CA6                     ___wmul:
  7082                           	opt stack 26
  7083                           
  7084                           ;incstack = 0
  7085  001CA6  5013               	movf	___wmul@multiplier,w,c
  7086  001CA8  0215               	mulwf	___wmul@multiplicand,c
  7087  001CAA  CFF3 F017          	movff	prodl,___wmul@product
  7088  001CAE  CFF4 F018          	movff	prodh,___wmul@product+1
  7089  001CB2  5013               	movf	___wmul@multiplier,w,c
  7090  001CB4  0216               	mulwf	___wmul@multiplicand+1,c
  7091  001CB6  50F3               	movf	prodl,w,c
  7092  001CB8  2618               	addwf	___wmul@product+1,f,c
  7093  001CBA  5014               	movf	___wmul@multiplier+1,w,c
  7094  001CBC  0215               	mulwf	___wmul@multiplicand,c
  7095  001CBE  50F3               	movf	prodl,w,c
  7096  001CC0  2618               	addwf	___wmul@product+1,f,c
  7097  001CC2  C017  F013         	movff	___wmul@product,?___wmul
  7098  001CC6  C018  F014         	movff	___wmul@product+1,?___wmul+1
  7099  001CCA  0012               	return	
  7100  001CCC                     __end_of___wmul:
  7101                           	opt stack 0
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           intcon	equ	0xFF2
  7109                           intcon2	equ	0xFF1
  7110                           intcon3	equ	0xFF0
  7111                           postinc0	equ	0xFEE
  7112                           wreg	equ	0xFE8
  7113                           indf1	equ	0xFE7
  7114                           postinc1	equ	0xFE6
  7115                           postdec1	equ	0xFE5
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           fsr2h	equ	0xFDA
  7121                           fsr2l	equ	0xFD9
  7122                           status	equ	0xFD8
  7123                           
  7124 ;; *************** function _SPISlaveInit *****************
  7125 ;; Defined at:
  7126 ;;		line 738 in file "SlaveComm_PIC18.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7140 ;;      Params:         0       0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0
  7143 ;;      Totals:         0       0       0       0       0       0       0
  7144 ;;Total ram usage:        0 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_communications
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text43
  7155  001AF8                     __ptext43:
  7156                           	opt stack 0
  7157  001AF8                     _SPISlaveInit:
  7158                           	opt stack 28
  7159                           
  7160                           ;SlaveComm_PIC18.c: 741: TRISAbits.TRISA0 = 0;
  7161                           
  7162                           ;incstack = 0
  7163  001AF8  9092               	bcf	3986,0,c	;volatile
  7164                           
  7165                           ;SlaveComm_PIC18.c: 742: TRISAbits.TRISA1 = 1;
  7166  001AFA  8292               	bsf	3986,1,c	;volatile
  7167                           
  7168                           ;SlaveComm_PIC18.c: 744: TRISCbits.TRISC3 = 0;
  7169  001AFC  9694               	bcf	3988,3,c	;volatile
  7170                           
  7171                           ;SlaveComm_PIC18.c: 745: TRISCbits.TRISC5 = 0;
  7172  001AFE  9A94               	bcf	3988,5,c	;volatile
  7173                           
  7174                           ;SlaveComm_PIC18.c: 746: TRISCbits.TRISC6 = 0;
  7175  001B00  9C94               	bcf	3988,6,c	;volatile
  7176                           
  7177                           ;SlaveComm_PIC18.c: 747: TRISCbits.TRISC7 = 0;
  7178  001B02  9E94               	bcf	3988,7,c	;volatile
  7179                           
  7180                           ;SlaveComm_PIC18.c: 748: ANSELAbits.ANSA1 = 0b0;
  7181  001B04  010F               	movlb	15	; () banked
  7182  001B06  9338               	bcf	56,1,b	;volatile
  7183                           
  7184                           ;SlaveComm_PIC18.c: 750: LATCbits.LATC6 = 1;
  7185  001B08  8C8B               	bsf	3979,6,c	;volatile
  7186                           
  7187                           ;SlaveComm_PIC18.c: 751: LATCbits.LATC3 = 1;
  7188  001B0A  868B               	bsf	3979,3,c	;volatile
  7189                           
  7190                           ;SlaveComm_PIC18.c: 752: LATCbits.LATC5 = 1;
  7191  001B0C  8A8B               	bsf	3979,5,c	;volatile
  7192                           
  7193                           ;SlaveComm_PIC18.c: 753: LATCbits.LATC7 = 1;
  7194  001B0E  8E8B               	bsf	3979,7,c	;volatile
  7195                           
  7196                           ;SlaveComm_PIC18.c: 756: SSP2CON1bits.SSPEN = 0;
  7197  001B10  9A6C               	bcf	3948,5,c	;volatile
  7198                           
  7199                           ;SlaveComm_PIC18.c: 758: ANSELBbits.ANSB0 = 0b0;
  7200  001B12  9139               	bcf	57,0,b	;volatile
  7201                           
  7202                           ;SlaveComm_PIC18.c: 759: ANSELBbits.ANSB1 = 0b0;
  7203  001B14  9339               	bcf	57,1,b	;volatile
  7204                           
  7205                           ;SlaveComm_PIC18.c: 760: ANSELBbits.ANSB2 = 0b0;
  7206  001B16  9539               	bcf	57,2,b	;volatile
  7207                           
  7208                           ;SlaveComm_PIC18.c: 761: ANSELBbits.ANSB3 = 0b0;
  7209  001B18  9739               	bcf	57,3,b	;volatile
  7210                           
  7211                           ;SlaveComm_PIC18.c: 763: TRISBbits.RB0 = 0b1;
  7212  001B1A  8093               	bsf	3987,0,c	;volatile
  7213                           
  7214                           ;SlaveComm_PIC18.c: 764: TRISBbits.RB1 = 0b1;
  7215  001B1C  8293               	bsf	3987,1,c	;volatile
  7216                           
  7217                           ;SlaveComm_PIC18.c: 765: TRISBbits.RB2 = 0b1;
  7218  001B1E  8493               	bsf	3987,2,c	;volatile
  7219                           
  7220                           ;SlaveComm_PIC18.c: 766: TRISBbits.RB3 = 0b0;
  7221  001B20  9693               	bcf	3987,3,c	;volatile
  7222                           
  7223                           ;SlaveComm_PIC18.c: 768: SSP2STATbits.SMP = 0;
  7224  001B22  9E6D               	bcf	3949,7,c	;volatile
  7225                           
  7226                           ;SlaveComm_PIC18.c: 769: SSP2STATbits.CKE = 1;
  7227  001B24  8C6D               	bsf	3949,6,c	;volatile
  7228                           
  7229                           ;SlaveComm_PIC18.c: 771: SSP2CON1bits.WCOL = 0;
  7230  001B26  9E6C               	bcf	3948,7,c	;volatile
  7231                           
  7232                           ;SlaveComm_PIC18.c: 772: SSP2CON1bits.SSPOV = 0;
  7233  001B28  9C6C               	bcf	3948,6,c	;volatile
  7234                           
  7235                           ;SlaveComm_PIC18.c: 773: SSP2CON1bits.SSPEN = 0;
  7236  001B2A  9A6C               	bcf	3948,5,c	;volatile
  7237                           
  7238                           ;SlaveComm_PIC18.c: 774: SSP2CON1bits.CKP = 1;
  7239  001B2C  886C               	bsf	3948,4,c	;volatile
  7240                           
  7241                           ; BSR set to: 15
  7242                           ;SlaveComm_PIC18.c: 775: SSP2CON1bits.SSPM = 0b0100;
  7243  001B2E  506C               	movf	3948,w,c	;volatile
  7244  001B30  0BF0               	andlw	-16
  7245  001B32  0904               	iorlw	4
  7246  001B34  6E6C               	movwf	3948,c	;volatile
  7247                           
  7248                           ;SlaveComm_PIC18.c: 778: SSP2CON3 = 0x00;
  7249  001B36  0E00               	movlw	0
  7250  001B38  6E69               	movwf	3945,c	;volatile
  7251                           
  7252                           ; BSR set to: 15
  7253                           ;SlaveComm_PIC18.c: 779: SSP2CON3bits.BOEN = 0b0;
  7254  001B3A  9869               	bcf	3945,4,c	;volatile
  7255                           
  7256                           ; BSR set to: 15
  7257                           ;SlaveComm_PIC18.c: 781: SSP2CON1bits.SSPEN = 1;
  7258  001B3C  8A6C               	bsf	3948,5,c	;volatile
  7259  001B3E  0012               	return	
  7260  001B40                     __end_of_SPISlaveInit:
  7261                           	opt stack 0
  7262                           tblptru	equ	0xFF8
  7263                           tblptrh	equ	0xFF7
  7264                           tblptrl	equ	0xFF6
  7265                           tablat	equ	0xFF5
  7266                           prodh	equ	0xFF4
  7267                           prodl	equ	0xFF3
  7268                           intcon	equ	0xFF2
  7269                           intcon2	equ	0xFF1
  7270                           intcon3	equ	0xFF0
  7271                           postinc0	equ	0xFEE
  7272                           wreg	equ	0xFE8
  7273                           indf1	equ	0xFE7
  7274                           postinc1	equ	0xFE6
  7275                           postdec1	equ	0xFE5
  7276                           fsr1h	equ	0xFE2
  7277                           fsr1l	equ	0xFE1
  7278                           indf2	equ	0xFDF
  7279                           postinc2	equ	0xFDE
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _Timer0_ISR *****************
  7285 ;; Defined at:
  7286 ;;		line 221 in file "Current_Sense_Main.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7300 ;;      Params:         0       0       0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0
  7302 ;;      Temps:         18       0       0       0       0       0       0
  7303 ;;      Totals:        18       0       0       0       0       0       0
  7304 ;;Total ram usage:       18 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		Interrupt level 2
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	intcode
  7314  000008                     __pintcode:
  7315                           	opt stack 0
  7316  000008                     _Timer0_ISR:
  7317                           	opt stack 21
  7318                           
  7319                           ; BSR set to: 15
  7320                           ;incstack = 0
  7321  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7322  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  7323  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  7324  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  7325  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  7326  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  7327  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  7328  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  7329  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  7330  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  7331  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  7332  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  7333  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  7334  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  7335  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  7336  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  7337  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  7338  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  7339  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  7340                           
  7341                           ;Current_Sense_Main.c: 224: INTCONbits.TMR0IF = 0;
  7342  000052  94F2               	bcf	intcon,2,c	;volatile
  7343                           
  7344                           ;Current_Sense_Main.c: 226: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  7345  000054  0EFC               	movlw	252
  7346  000056  6ED7               	movwf	4055,c	;volatile
  7347                           
  7348                           ;Current_Sense_Main.c: 227: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  7349  000058  0E18               	movlw	24
  7350  00005A  6ED6               	movwf	4054,c	;volatile
  7351                           
  7352                           ;Current_Sense_Main.c: 229: timerCountHF++;
  7353  00005C  0E01               	movlw	1
  7354  00005E  2642               	addwf	_timerCountHF,f,c	;volatile
  7355  000060  0E00               	movlw	0
  7356  000062  2243               	addwfc	_timerCountHF+1,f,c	;volatile
  7357  000064  2244               	addwfc	_timerCountHF+2,f,c	;volatile
  7358  000066  2245               	addwfc	_timerCountHF+3,f,c	;volatile
  7359                           
  7360                           ;Current_Sense_Main.c: 230: timerCountLF++;
  7361  000068  0E01               	movlw	1
  7362  00006A  0100               	movlb	0	; () banked
  7363  00006C  27C3               	addwf	_timerCountLF& (0+255),f,b	;volatile
  7364  00006E  0E00               	movlw	0
  7365  000070  23C4               	addwfc	(_timerCountLF+1)& (0+255),f,b	;volatile
  7366  000072  23C5               	addwfc	(_timerCountLF+2)& (0+255),f,b	;volatile
  7367  000074  23C6               	addwfc	(_timerCountLF+3)& (0+255),f,b	;volatile
  7368                           
  7369                           ; BSR set to: 0
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;Current_Sense_Main.c: 232: return;
  7373  000076  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  7374  00007A  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  7375  00007E  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  7376  000082  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  7377  000086  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  7378  00008A  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  7379  00008E  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  7380  000092  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  7381  000096  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  7382  00009A  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  7383  00009E  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  7384  0000A2  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  7385  0000A6  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  7386  0000AA  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  7387  0000AE  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  7388  0000B2  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  7389  0000B6  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  7390  0000BA  C001  FFFA         	movff	??_Timer0_ISR,pclath
  7391  0000BE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7392  0000C0  0011               	retfie		f
  7393  0000C2                     __end_of_Timer0_ISR:
  7394                           	opt stack 0
  7395                           pclatu	equ	0xFFB
  7396                           pclath	equ	0xFFA
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           intcon3	equ	0xFF0
  7406                           postinc0	equ	0xFEE
  7407                           fsr0h	equ	0xFEA
  7408                           fsr0l	equ	0xFE9
  7409                           wreg	equ	0xFE8
  7410                           indf1	equ	0xFE7
  7411                           postinc1	equ	0xFE6
  7412                           postdec1	equ	0xFE5
  7413                           fsr1h	equ	0xFE2
  7414                           fsr1l	equ	0xFE1
  7415                           indf2	equ	0xFDF
  7416                           postinc2	equ	0xFDE
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           pclatu	equ	0xFFB
  7421                           pclath	equ	0xFFA
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon2	equ	0xFF1
  7430                           intcon3	equ	0xFF0
  7431                           postinc0	equ	0xFEE
  7432                           fsr0h	equ	0xFEA
  7433                           fsr0l	equ	0xFE9
  7434                           wreg	equ	0xFE8
  7435                           indf1	equ	0xFE7
  7436                           postinc1	equ	0xFE6
  7437                           postdec1	equ	0xFE5
  7438                           fsr1h	equ	0xFE2
  7439                           fsr1l	equ	0xFE1
  7440                           indf2	equ	0xFDF
  7441                           postinc2	equ	0xFDE
  7442                           fsr2h	equ	0xFDA
  7443                           fsr2l	equ	0xFD9
  7444                           status	equ	0xFD8
  7445                           
  7446                           	psect	rparam
  7447  0000                     pclatu	equ	0xFFB
  7448                           pclath	equ	0xFFA
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           intcon2	equ	0xFF1
  7457                           intcon3	equ	0xFF0
  7458                           postinc0	equ	0xFEE
  7459                           fsr0h	equ	0xFEA
  7460                           fsr0l	equ	0xFE9
  7461                           wreg	equ	0xFE8
  7462                           indf1	equ	0xFE7
  7463                           postinc1	equ	0xFE6
  7464                           postdec1	equ	0xFE5
  7465                           fsr1h	equ	0xFE2
  7466                           fsr1l	equ	0xFE1
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473                           	psect	temp
  7474  00004D                     btemp:
  7475                           	opt stack 0
  7476  00004D                     	ds	1
  7477  0000                     int$flags	set	btemp
  7478  0000                     wtemp6	set	btemp+1
  7479                           pclatu	equ	0xFFB
  7480                           pclath	equ	0xFFA
  7481                           tblptru	equ	0xFF8
  7482                           tblptrh	equ	0xFF7
  7483                           tblptrl	equ	0xFF6
  7484                           tablat	equ	0xFF5
  7485                           prodh	equ	0xFF4
  7486                           prodl	equ	0xFF3
  7487                           intcon	equ	0xFF2
  7488                           intcon2	equ	0xFF1
  7489                           intcon3	equ	0xFF0
  7490                           postinc0	equ	0xFEE
  7491                           fsr0h	equ	0xFEA
  7492                           fsr0l	equ	0xFE9
  7493                           wreg	equ	0xFE8
  7494                           indf1	equ	0xFE7
  7495                           postinc1	equ	0xFE6
  7496                           postdec1	equ	0xFE5
  7497                           fsr1h	equ	0xFE2
  7498                           fsr1l	equ	0xFE1
  7499                           indf2	equ	0xFDF
  7500                           postinc2	equ	0xFDE
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     95     156
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> xSumMatches@recXsumbuf(BANK0[16]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> xsum_builder@xsumBuf(BANK0[16]), STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    xsum_builder@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    xSumMatches@buffer_to_chk	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _xSumMatches->_atoi
    _atoi->___wmul
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _receive_data->_SPI_receive_data
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_xsum_builder
    _com_command_setEnergyUsed->_command_builder3
    _ultoa->___lldiv
    _command_builder3->_xsum_builder
    _xsum_builder->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _command_builder1->_xsum_builder
    _command_builder3->_xsum_builder

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  166585
                                             90 BANK0      5     5      0
                     _communications
                          _delayMS10
                               _init
                        _initMCPFout
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1597
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     426
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMCPFout                                          1     1      0     426
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (2) _delayMS10                                            5     3      2     426
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0  163537
                                             88 BANK0      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
                        _xSumMatches
 ---------------------------------------------------------------------------------
 (2) _xSumMatches                                         29    27      2    1919
                                             31 COMRAM     4     2      2
                                              0 BANK0     25    25      0
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1115
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   78911
                                             28 BANK0      4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   24402
                                             56 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   27042
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     443
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   81929
                                             33 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   80062
                                             28 BANK0      5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   22314
                                             52 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     6     2      4   21743
                                             46 COMRAM     6     2      4
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   27132
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2560
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                    10     2      8   24281
                                             46 COMRAM    10     2      8
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (5) _xsum_builder                                        20    16      4   12279
                                             42 COMRAM     4     0      4
                                              0 BANK0     16    16      0
           _command_builder_add_char
         _command_builder_add_string
                               _itoa
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    2226
                                             34 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 9     3      6    1723
                                             25 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     412
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     601
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_string                          10     6      4    5635
                                             22 COMRAM    10     6      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (7) _command_builder_add_char                             4     1      3    3457
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1481
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     592
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Timer0_ISR                                         18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
           _xsum_builder
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
     _send_data
       _SPI_send_data
     _xSumMatches
       _atoi
         ___wmul
         _isdigit
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initMCPFout
     _delayMS10
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      2A       6       16.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5F      9C       4       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112       9        0.0%
DATA                 0      0     112      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Dec 05 10:55:08 2019

                                       _SPISlaveInit 1AF8                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l113 1232                                                  l115 1266  
                                                l300 0CBE                                                  l302 0D2E  
                                                l118 12B0                                                  l311 1566  
                                                l303 0D36                                                  l127 1CE8  
                                                l400 15E6                                                  l312 1534  
                                                l160 0ABA                                                  l152 0994  
                                                l401 15A0                                                  l305 0D6A  
                                                l129 1CE4                                                  l322 12E0  
                                                l314 1542                                                  l170 1BCE  
                                                l162 0A94                                                  l154 0998  
                                                l315 1550                                                  l163 0A78  
                                                l340 0BD6                                                  l420 0DE6  
                                                l324 1324                                                  l316 155C  
                                                l341 0B16                                                  l157 0A2C  
                                                l334 0AE4                                                  l326 137E  
                                                l406 164E                                                  l158 0A3E  
                                                l343 0B28                                                  l351 0688  
                                                l327 1390                                                  l159 0A56  
                                                l336 0BE4                                                  l344 0B7C  
                                                l416 0DEA                                                  l360 07F2  
                                                l432 1C78                                                  l417 0D80  
                                                l353 0712                                                  l433 1C7C  
                                                l409 16AE                                                  l281 13BC  
                                                l169 1BE0                                                  l338 0BA6  
                                                l426 0E58                                                  l418 0DB4  
                                                l362 07AC                                                  l371 0896  
                                                l283 1404                                                  l428 0E90  
                                                l292 1432                                                  l373 08C4  
                                                l437 1D08                                                  l285 1418  
                                                l630 108A                                                  l294 1444  
                                                l375 08F2                                                  l367 083A  
                                                l631 1086                                                  l287 13CE  
                                                l377 091E                                                  l369 0868  
                                                l633 10CA                                                  l650 102E  
                                                l651 0FDA                                                  l299 0C70  
                                                l396 18BC                                                  l636 1116  
                                                l653 1072                                                  l637 10DC  
                                                l478 192E                                                  l479 1942  
                                                l647 0FD0                                                  l831 1B64  
                                                l639 1148                                                  l920 0F02  
                                                l825 1D44                                                  l921 0F6C  
                                                l835 1454                                                  l932 19E4  
                                                l933 19DC                                                  l837 148E  
                                                l942 1B98                                                  l838 14CC  
                                                l870 1722                                                  l918 0EAA  
                                                l943 1B90                                                  l936 1A04  
                                                l880 17F4                                                  l937 1A0E  
                                                l865 16E0                                                  l946 1BB0  
                                                l866 16D4                                                  l947 1BBA  
                                                l875 17BE                                                  l876 17B2  
                                                l869 1714                                                  l879 17E6  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 007E                                         ?_initMCPFout 0001  
                                               l3432 0BE4                                                 l3380 1112  
                                               l3712 12A0                                                 l3652 0A78  
                                               l3638 0A2C                                                 l3690 1256  
                                               l3678 1222                                                 l3696 1266  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2320 19E8                                                 u2410 15D4  
                                               u2420 1612                                                 u2350 1B9C  
                                               u3240 1256                                                 u2417 15CA  
                                               u2427 1608                                                 u3307 175A  
                                               u2460 16E4                                                 u3260 128E  
                                               u3317 1770                                                 _IPR1 000F9F  
                                               u2550 0E22                                                 _IPR2 000FA2  
                                               u3327 1786                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 u3337 1BD4  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               u2810 0AE2                                                 u2490 17C2  
                                               _PIE4 000F7A                                                 u3347 14FA  
                                               _PIE5 000F7D                                                 u2670 1C50  
                                               u2680 1C52                                                 u3297 1748  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atoi 1084  
                                               _atol 0F90                                                 _main 1214  
                                               _init 1D92                                                 _itoa 1B40  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                                 _utoa 144C  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C2                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 00B9                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                 __end_of_xsum_builder 1868  
                                     _communications 1394                                         main@inx_1084 00BD  
                                              ?_atoi 0019                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              ?_itoa 0023                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1734                                                ?_utoa 001A  
                                    __end_of___llmod 1806                                       __CFG_DEBUG$OFF 000000  
                                    __end_of___lwdiv 1A18                                      __end_of___lwmod 1BC4  
                                  ?_command_builder1 002F                                    ?_command_builder3 002F  
                                       main@initDone 00BA                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                  _initInterruptsClear 1A18  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0033                                   ??_command_builder3 0037  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 007E  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 1D7C                                     ?_powerPulseCheck 0001  
                                    __end_of_isdigit 1D4C                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atoi@a 001E                                                atol@a 0028  
                                              atol@c 002C                                                atoi@s 0019  
                                              atol@s 001F                                                _ultoa 0E9A  
                                              pclath 000FFA                                                tablat 000FF5  
                                              utoa@c 0022                                                utoa@v 0020  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0E9A                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 0039                                 ?_initInterruptsClear 0001  
                      command_builder_add_string@inx 001F                                         ?_xSumMatches 0020  
                                    __initialization 1974                             xSumMatches@xsumRecieving 0074  
                                       __end_of_atoi 1152                                         __end_of_atol 1084  
                                       __end_of_main 12D4                                         __end_of_init 1DA4  
                                       __end_of_itoa 1B82                               __end_of_communications 144C  
                                       __end_of_utoa 14F0                               _com_command_setVersion 1C80  
                __size_of_command_builder_add_string 0094                                     _SPI_receive_data 1C58  
                       command_builder_add_char@data 0015                                               ??_atoi 001B  
                                             ??_atol 0023                                               ??_main 003B  
                                             ??_init 0019                                               ??_itoa 0029  
                                      _SPI_send_data 1CF0                                               ??_utoa 0020  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                ??_initInterruptsClear 0013  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___lmul 191E                                               ___wmul 1CA6  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                          ??___lwdiv 0017                                            ??___lwmod 0017  
                                             _initIO 1D10                                               clear_0 199A  
                                             clear_1 19A6                                               clear_2 19B2  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 0039  
                                          ??_initOSC 0013                            _process_data_parameterize 0AC0  
                                             itoa@cp 0029                                         __pdataCOMRAM 0046  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0070                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 1C58  
                                   xsum_builder@xsum 002D                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 19B8  
                               __size_of_initMCPFout 006C                      powerPulseCheck@timerCountHFLast 0049  
                    com_command_setPower@send_buffer 0039                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                __size_of_xsum_builder 0062  
                                     __pcstackCOMRAM 0001                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0F90  
                          ??_process_data_parameters 003B                   powerPulseCheck@meterEnergyUsedPart 00BF  
                       communications@receive_buffer 0100                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 1622                           _command_builder_add_string 158E  
                                 xSumMatches@matches 0075                                              ??_ultoa 0028  
                                 xSumMatches@recXsum 0072                                           __pbssBANK0 00BF  
                                         __pbssBANK1 0100                                       ??_receive_data 0018  
                                       _xsum_builder 1806                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                  _pulseFoutPassThru 1CCC                                              ?___lmul 0013  
                               command_builder1@xsum 0033                                              ?___wmul 0013  
                               command_builder3@xsum 0037                                   __CFG_CCP3MX$PORTB5 000000  
                               __size_of_xSumMatches 012E                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 0013                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 0080  
         communications@end_of_transmission_received 00D1                                       ___lmul@product 001B  
                        __end_of_resetCommunications 158E                                      _meterEnergyUsed 00C7  
                                ??_pulseFoutPassThru 0013                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 1AAE  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1D7C  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 1868  
                                  __end_of_delayMS10 1BF6                      __end_of_process_data_parameters 0924  
                           __end_of_SPI_receive_data 1C80                            __size_of_command_builder1 005A  
                          __size_of_command_builder3 00C2                            __end_of_pulseFoutPassThru 1CF0  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0039  
                                            __Lparam 0000                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 16B2  
                                    __size_of___wmul 0026                                              ___llmod 17A0  
                                            ___lwdiv 19C6                                              ___lwmod 1B82  
                                       __psmallconst 0600                                 SPI_receive_data@data 0013  
                                    __size_of_initIO 001E                                              __pcinit 1974  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 1214                                              __ptext1 1CCC  
                                            __ptext2 0924                                              __ptext3 1D4C  
                                            __ptext4 1D92                                              __ptext5 1D64  
                                            __ptext6 1734                                              __ptext7 1BC4  
                                            __ptext8 1A18                                              __ptext9 1D10  
                                         _meterWatts 00CB                                            _T0CONbits 000FD5  
                                            _initOSC 1D64                                    __end_of_initTimer 1D64  
                                            _isdigit 1D2E                                  __size_of_Timer0_ISR 00BA  
                                            main@inx 00BB                                              _strcmp2 0D6E  
                               end_of_initialization 19B8                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 16B2                            powerPulseCheck@firstPulse 0048  
                                            itoa@buf 0023                                              itoa@val 0025  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 1CA6  
                           __size_of_powerPulseCheck 019C                                     ??_communications 003B  
                                    ___lldiv@divisor 0017                                      ___lldiv@counter 001F  
        process_data_parameterize@parameter_position 0023                                              postdec1 000FE5  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                              utoa@buf 001A  
                                            utoa@val 001C                            xSumMatches@recXsumPointer 0076  
                              receive_data@my_status 003D                                 __end_of_receive_data 1394  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                                            _PORTCbits 000F82  
                    communications@last_state_active 00CF                          ??_com_command_setEnergyUsed 003B  
                                      ?_process_data 0081                                xSumMatches@recXsumbuf 0060  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                     powerPulseCheck@timerCountHFCheck 0046  
                           xSumMatches@buffer_to_chk 0020                           process_data@receive_buffer 0081  
                        __end_of_initInterruptsClear 1A64                    __end_of_process_data_parameterize 0C40  
                         __size_of_pulseFoutPassThru 0024                                 _com_command_setPower 1A64  
                communications@receive_current_state 00D0                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1974                                       __end_of___wmul 1CCC  
                                      __pidataCOMRAM 1DA4                command_builder_add_string@send_buffer 0017  
                                     __end_of_initIO 1D2E                                       ??_process_data 003B  
                        ?_command_builder_add_string 0017                                  start_initialization 1974  
                                      ??_initMCPFout 0018                         resetCommunications@commState 003B  
                                   _command_builder1 18C4                                     _command_builder3 1152  
                          _com_command_setEnergyUsed 1AAE                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0039  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 0039                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0035                                    ??_powerPulseCheck 0020  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0037  
                         ??_command_builder_add_char 0016                                          __pbssCOMRAM 003B  
                                      __pcstackBANK0 0060                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C2                                         _isdigit$2334 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 1BC4                                  __end_of_initMCPFout 17A0  
                      com_command_setEnergyUsed@temp 0070                                        ??_xSumMatches 0022  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                                   ___lwdiv@dividend 0013                                command_builder1@data1 0031  
                        command_builder1@send_buffer 002F                             ?_process_data_parameters 007C  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 0031                                command_builder3@data2 0033  
                              command_builder3@data3 0035                                             ?___lldiv 0013  
                                           ?___llmod 0013                                             ?___lwdiv 0013  
                                           ?___lwmod 0013                                __end_of_SPI_send_data 1D10  
                                           ?_initOSC 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 007C                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                              xsum_builder@send_buffer 002B  
                                  send_data@send_end 0019                                            _initTimer 1D4C  
                                   ___lwdiv@quotient 0018                                             ?_strcmp2 0013  
                       __size_of_resetCommunications 009E                                       __size_of_ultoa 00F6  
                                     strmatch@result 0022                  process_data_parameterize@parameters 0019  
                           pulseFoutPassThru@runonce 0041                                         _receive_data 12D4  
                                     ___wmul@product 0017                                             _LATAbits 000F89  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                                         ?_delayMS10 0013                                 __end_of_process_data 1C28  
                                          _send_data 1622                               ??_com_command_setPower 003B  
                  process_data_parameters@parameters 007C                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                __end_of_xSumMatches 0D6E                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1B40                                            copy_data0 1988  
                                        _initMCPFout 1734             process_data@end_of_transmission_received 00B7  
                                    xSumMatches@xsum 0070                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 002F  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 004A  
                   __end_of_send_end_of_transmission 1D92                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                                     __size_of___lwdiv 0052  
                                   __size_of___lwmod 0042                     __end_of_command_builder_add_char 18C4  
                           __end_of_command_builder1 191E                             __end_of_command_builder3 1214  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                    ___lwdiv@divisor 0015                                      ___lwdiv@counter 0017  
                                           __ptext10 1394                                             __ptext11 0C40  
                                           __ptext20 1BF6                                             __ptext12 1084  
                                           __ptext21 0660                                             __ptext13 1622  
                                           __ptext30 1152                                             __ptext22 1C28  
                                           __ptext14 1CF0                                             __ptext31 1806  
                                           __ptext23 0D6E                                             __ptext15 14F0  
                                           __ptext40 191E                                             __ptext32 1B40  
                                           __ptext24 1D7C                                             __ptext16 1C80  
                                           __ptext41 0AC0                                             __ptext33 144C  
                                           __ptext25 18C4                                             __ptext17 1A64  
                                           __ptext42 1CA6                                             __ptext34 1B82  
                                           __ptext26 1AAE                                             __ptext18 12D4  
                                           __ptext43 1AF8                                             __ptext35 19C6  
                                           __ptext27 0E9A                                             __ptext19 1C58  
                                           __ptext36 158E                                             __ptext28 17A0  
                                           __ptext37 1868                                             __ptext29 16B2  
                                           __ptext38 0F90                                             __ptext39 1D2E  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                      ?_xsum_builder 002B                       command_builder_add_string@xsum 001D  
                                    _powerPulseCheck 0924                                        __size_of_atoi 00CE  
                                      __size_of_atol 00F4                                        __size_of_main 00C0  
                                      strmatch@match 0024                                        __size_of_init 0012  
                                      __size_of_itoa 0042                          powerPulseCheck@mcpHFoutLast 0040  
                                      __size_of_utoa 00A4                                          ??_delayMS10 0015  
                         ?_process_data_parameterize 0019                         __size_of_initInterruptsClear 004C  
                                        _xSumMatches 0C40                          powerPulseCheck@mcpLFoutLast 003F  
                                           int$flags 004D                                             atoi@sign 001D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 1AF8  
                            __size_of_communications 00B8                                             _strmatch 1C28  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 0083  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                           itoa@base 0027                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 003B                                       ??_xsum_builder 002F  
                              __size_of_process_data 0032                                             intlevel2 0000  
                             process_data@parameters 0085                                         _timerCountHF 0042  
                                       _timerCountLF 00C3                                     ___lwmod@dividend 0013  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 00B8  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                _resetCommunications 14F0                            __size_of_SPI_receive_data 0028  
                                           utoa@base 001E                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 1BF6                                    _SPI_transmit_wait 003E  
                                    ___lwmod@divisor 0015                                __size_of_SPISlaveInit 0048  
                          communications@send_buffer 00D2                                      ___lwmod@counter 0017  
                   __size_of_process_data_parameters 02C4                                    __CFG_T3CMX$PORTC0 000000  
                             xSumMatches@currentData 0078                              __end_of_powerPulseCheck 0AC0  
                               ?_resetCommunications 007C                    __size_of_send_end_of_transmission 0016  
                          ?_send_end_of_transmission 0035                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 005C                            ?_command_builder_add_char 0013  
                                xsum_builder@xsumBuf 0060  
