

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Mar 03 12:32:27 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 1.45
    80                           ; Generated 16/11/2017 GMT
    81                           ; 
    82                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F25K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     _ANSELC	set	3898
   114  0000                     _ANSELB	set	3897
   115  0000                     _ANSELA	set	3896
   116  0000                     _ANSELBbits	set	3897
   117  0000                     _ANSELAbits	set	3896
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR0H	set	4055
   120  0000                     _INTCONbits	set	4082
   121  0000                     _T0CONbits	set	4053
   122  0000                     _PORTAbits	set	3968
   123  0000                     _IPR5	set	3967
   124  0000                     _IPR4	set	3964
   125  0000                     _IPR3	set	4005
   126  0000                     _IPR2	set	4002
   127  0000                     _IPR1	set	3999
   128  0000                     _PIE5	set	3965
   129  0000                     _PIE4	set	3962
   130  0000                     _PIE3	set	4003
   131  0000                     _PIE2	set	4000
   132  0000                     _PIE1	set	3997
   133  0000                     _PIR5	set	3966
   134  0000                     _PIR4	set	3963
   135  0000                     _PIR3	set	4004
   136  0000                     _PIR2	set	4001
   137  0000                     _PIR1	set	3998
   138  0000                     _RCONbits	set	4048
   139  0000                     _INTCON3	set	4080
   140  0000                     _INTCON2	set	4081
   141  0000                     _INTCON	set	4082
   142  0000                     _ADCON0bits	set	4034
   143  0000                     _OSCTUNEbits	set	3995
   144  0000                     _OSCCON2bits	set	4050
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _SSP2CON3bits	set	3945
   147  0000                     _SSP2CON3	set	3945
   148  0000                     _TRISAbits	set	3986
   149  0000                     _SSP2BUF	set	3951
   150  0000                     _SSP2STATbits	set	3949
   151  0000                     _SSP2CON1bits	set	3948
   152  0000                     _PORTCbits	set	3970
   153  0000                     _PORTBbits	set	3969
   154  0000                     _LATCbits	set	3979
   155  0000                     _LATBbits	set	3978
   156  0000                     _TRISCbits	set	3988
   157  0000                     _TRISBbits	set	3987
   158                           
   159                           	psect	smallconst
   160  000600                     __psmallconst:
   161                           	opt stack 0
   162  000600  00                 	db	0
   163  000601                     STR_3:
   164                           
   165                           ; BSR set to: 0
   166  000601  43                 	db	67	;'C'
   167  000602  61                 	db	97	;'a'
   168  000603  6C                 	db	108	;'l'
   169  000604  69                 	db	105	;'i'
   170  000605  62                 	db	98	;'b'
   171  000606  72                 	db	114	;'r'
   172  000607  61                 	db	97	;'a'
   173  000608  74                 	db	116	;'t'
   174  000609  69                 	db	105	;'i'
   175  00060A  6F                 	db	111	;'o'
   176  00060B  6E                 	db	110	;'n'
   177  00060C  00                 	db	0
   178  00060D                     STR_11:
   179                           
   180                           ; BSR set to: 0
   181  00060D  50                 	db	80	;'P'
   182  00060E  53                 	db	83	;'S'
   183  00060F  56                 	db	86	;'V'
   184  000610  65                 	db	101	;'e'
   185  000611  72                 	db	114	;'r'
   186  000612  73                 	db	115	;'s'
   187  000613  69                 	db	105	;'i'
   188  000614  6F                 	db	111	;'o'
   189  000615  6E                 	db	110	;'n'
   190  000616  00                 	db	0
   191  000617                     STR_4:
   192                           
   193                           ; BSR set to: 0
   194  000617  45                 	db	69	;'E'
   195  000618  6E                 	db	110	;'n'
   196  000619  55                 	db	85	;'U'
   197  00061A  73                 	db	115	;'s'
   198  00061B  65                 	db	101	;'e'
   199  00061C  64                 	db	100	;'d'
   200  00061D  00                 	db	0
   201  00061E                     STR_9:
   202                           
   203                           ; BSR set to: 0
   204  00061E  56                 	db	86	;'V'
   205  00061F  6F                 	db	111	;'o'
   206  000620  6C                 	db	108	;'l'
   207  000621  74                 	db	116	;'t'
   208  000622  73                 	db	115	;'s'
   209  000623  00                 	db	0
   210  000624                     STR_7:
   211                           
   212                           ; BSR set to: 0
   213  000624  57                 	db	87	;'W'
   214  000625  61                 	db	97	;'a'
   215  000626  74                 	db	116	;'t'
   216  000627  74                 	db	116	;'t'
   217  000628  73                 	db	115	;'s'
   218  000629  00                 	db	0
   219  00062A                     
   220                           ; BSR set to: 0
   221  00062A  4C                 	db	76	;'L'
   222  00062B  45                 	db	69	;'E'
   223  00062C  44                 	db	68	;'D'
   224  00062D  42                 	db	66	;'B'
   225  00062E  00                 	db	0
   226  00062F                     STR_5:
   227                           
   228                           ; BSR set to: 0
   229  00062F  52                 	db	82	;'R'
   230  000630  65                 	db	101	;'e'
   231  000631  61                 	db	97	;'a'
   232  000632  64                 	db	100	;'d'
   233  000633  00                 	db	0
   234  000634                     STR_6:
   235                           
   236                           ; BSR set to: 0
   237  000634  43                 	db	67	;'C'
   238  000635  6F                 	db	111	;'o'
   239  000636  6E                 	db	110	;'n'
   240  000637  66                 	db	102	;'f'
   241  000638  00                 	db	0
   242  000639                     STR_10:
   243                           
   244                           ; BSR set to: 0
   245  000639  41                 	db	65	;'A'
   246  00063A  6D                 	db	109	;'m'
   247  00063B  70                 	db	112	;'p'
   248  00063C  73                 	db	115	;'s'
   249  00063D  00                 	db	0
   250  00063E                     
   251                           ; BSR set to: 0
   252  00063E  32                 	db	50	;'2'
   253  00063F  32                 	db	50	;'2'
   254  000640  32                 	db	50	;'2'
   255  000641  00                 	db	0
   256  000642                     
   257                           ; BSR set to: 0
   258  000642  33                 	db	51	;'3'
   259  000643  33                 	db	51	;'3'
   260  000644  33                 	db	51	;'3'
   261  000645  00                 	db	0
   262  000646                     STR_29:
   263                           
   264                           ; BSR set to: 0
   265  000646  34                 	db	52	;'4'
   266  000647  34                 	db	52	;'4'
   267  000648  34                 	db	52	;'4'
   268  000649  00                 	db	0
   269  00064A                     STR_1:
   270                           
   271                           ; BSR set to: 0
   272  00064A  45                 	db	69	;'E'
   273  00064B  4E                 	db	78	;'N'
   274  00064C  44                 	db	68	;'D'
   275  00064D  00                 	db	0
   276  00064E                     STR_2:
   277                           
   278                           ; BSR set to: 0
   279  00064E  53                 	db	83	;'S'
   280  00064F  65                 	db	101	;'e'
   281  000650  74                 	db	116	;'t'
   282  000651  00                 	db	0
   283  0000                     
   284                           ; #config settings
   285  000652  00                 	db	0	; dummy byte at the end
   286  0000                     
   287                           	psect	cinit
   288  001EE2                     __pcinit:
   289                           	opt stack 0
   290  001EE2                     start_initialization:
   291                           	opt stack 0
   292  001EE2                     __initialization:
   293                           	opt stack 0
   294                           
   295                           ; Clear objects allocated to BANK1 (84 bytes)
   296  001EE2  EE01  F000         	lfsr	0,__pbssBANK1
   297  001EE6  0E54               	movlw	84
   298  001EE8                     clear_0:
   299  001EE8  6AEE               	clrf	postinc0,c
   300  001EEA  06E8               	decf	wreg,f,c
   301  001EEC  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK0 (32 bytes)
   304  001EEE  EE00  F0E0         	lfsr	0,__pbssBANK0
   305  001EF2  0E20               	movlw	32
   306  001EF4                     clear_1:
   307  001EF4  6AEE               	clrf	postinc0,c
   308  001EF6  06E8               	decf	wreg,f,c
   309  001EF8  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to COMRAM (16 bytes)
   312  001EFA  EE00  F03D         	lfsr	0,__pbssCOMRAM
   313  001EFE  0E10               	movlw	16
   314  001F00                     clear_2:
   315  001F00  6AEE               	clrf	postinc0,c
   316  001F02  06E8               	decf	wreg,f,c
   317  001F04  E1FD               	bnz	clear_2
   318  001F06                     end_of_initialization:
   319                           	opt stack 0
   320  001F06                     __end_of__initialization:
   321                           	opt stack 0
   322  001F06  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323  001F08  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324  001F0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   325  001F0C  6EF8               	movwf	tblptru,c
   326  001F0E  0100               	movlb	0
   327  001F10  EF1C  F007         	goto	_main	;jump to C main() function
   328                           tblptru	equ	0xFF8
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           
   332                           	psect	bssCOMRAM
   333  00003D                     __pbssCOMRAM:
   334                           	opt stack 0
   335  00003D                     _meterEnergyUsed_global:
   336                           	opt stack 0
   337  00003D                     	ds	4
   338  000041                     	ds	2
   339  000043                     mcpUpdatePower@meterWattsLF:
   340                           	opt stack 0
   341  000043                     	ds	2
   342  000045                     mcpUpdatePower@meterWattsHF:
   343                           	opt stack 0
   344  000045                     	ds	2
   345  000047                     resetCommunications@commState:
   346                           	opt stack 0
   347  000047                     	ds	2
   348  000049                     mcpUpdatePower@oneShotLFout:
   349                           	opt stack 0
   350  000049                     	ds	1
   351  00004A                     mcpUpdatePower@oneShotHFout:
   352                           	opt stack 0
   353  00004A                     	ds	1
   354  00004B                     receive_data@my_status:
   355                           	opt stack 0
   356  00004B                     	ds	1
   357  00004C                     _SPI_transmit_wait:
   358                           	opt stack 0
   359  00004C                     	ds	1
   360                           tblptru	equ	0xFF8
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           
   364                           	psect	bssBANK0
   365  0000E0                     __pbssBANK0:
   366                           	opt stack 0
   367  0000E0                     _timerCount_ms:
   368                           	opt stack 0
   369  0000E0                     	ds	16
   370  0000F0                     mcpUpdatePower@timerHFoutLast_ms:
   371                           	opt stack 0
   372  0000F0                     	ds	4
   373  0000F4                     _meterEnergyUsedPart:
   374                           	opt stack 0
   375  0000F4                     	ds	4
   376  0000F8                     _meterWatts_global:
   377                           	opt stack 0
   378  0000F8                     	ds	4
   379  0000FC                     main@oneShot:
   380                           	opt stack 0
   381  0000FC                     	ds	1
   382  0000FD                     communications@last_state_active:
   383                           	opt stack 0
   384  0000FD                     	ds	1
   385  0000FE                     communications@receive_current_state:
   386                           	opt stack 0
   387  0000FE                     	ds	1
   388  0000FF                     communications@end_of_transmission_received:
   389                           	opt stack 0
   390  0000FF                     	ds	1
   391                           tblptru	equ	0xFF8
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           
   395                           	psect	bssBANK1
   396  000100                     __pbssBANK1:
   397                           	opt stack 0
   398  000100                     communications@send_buffer:
   399                           	opt stack 0
   400  000100                     	ds	42
   401  00012A                     communications@receive_buffer:
   402                           	opt stack 0
   403  00012A                     	ds	42
   404                           tblptru	equ	0xFF8
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           
   408                           	psect	cstackBANK1
   409  000154                     __pcstackBANK1:
   410                           	opt stack 0
   411  000154                     communications@no_more_to_send:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x0
   415  000154                     	ds	1
   416  000155                     communications@firstTime:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x1
   420  000155                     	ds	1
   421  000156                     main@timerHeartbeat:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x2
   425  000156                     	ds	4
   426  00015A                     main@inx:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x6
   430  00015A                     	ds	2
   431                           tblptru	equ	0xFF8
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           
   435                           	psect	cstackBANK0
   436  000060                     __pcstackBANK0:
   437                           	opt stack 0
   438  000060                     xsum_builder@xsumBuf:
   439                           	opt stack 0
   440  000060                     xSumMatches@buffer_to_chk:
   441                           	opt stack 0
   442                           
   443                           ; 42 bytes @ 0x0
   444  000060                     	ds	16
   445  000070                     com_command_setPower@temp:
   446                           	opt stack 0
   447  000070                     com_command_setEnergyUsed@temp:
   448                           	opt stack 0
   449                           
   450                           ; 12 bytes @ 0x10
   451  000070                     	ds	12
   452  00007C                     ??_resetCommunications:
   453  00007C                     process_data_parameters@parameters:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x1C
   457  00007C                     	ds	2
   458  00007E                     process_data_parameters@send_buffer:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1E
   462  00007E                     	ds	12
   463  00008A                     xSumMatches@recXsumbuf:
   464                           	opt stack 0
   465                           
   466                           ; 16 bytes @ 0x2A
   467  00008A                     	ds	16
   468  00009A                     xSumMatches@xsum:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x3A
   472  00009A                     	ds	2
   473  00009C                     xSumMatches@recXsum:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x3C
   477  00009C                     	ds	2
   478  00009E                     xSumMatches@xsumRecieving:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x3E
   482  00009E                     	ds	1
   483  00009F                     xSumMatches@matches:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x3F
   487  00009F                     	ds	1
   488  0000A0                     xSumMatches@recXsumPointer:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x40
   492  0000A0                     	ds	2
   493  0000A2                     xSumMatches@data:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x42
   497  0000A2                     	ds	2
   498  0000A4                     xSumMatches@currentData:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x44
   502  0000A4                     	ds	1
   503  0000A5                     xSumMatches@i:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x45
   507  0000A5                     	ds	2
   508  0000A7                     process_data@receive_buffer:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x47
   512  0000A7                     	ds	2
   513  0000A9                     process_data@send_buffer:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x49
   517  0000A9                     	ds	2
   518  0000AB                     process_data@xSumMatches:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x4B
   522  0000AB                     	ds	1
   523  0000AC                     process_data@parameters:
   524                           	opt stack 0
   525                           
   526                           ; 50 bytes @ 0x4C
   527  0000AC                     	ds	50
   528  0000DE                     process_data@end_of_transmission_received:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x7E
   532  0000DE                     	ds	1
   533  0000DF                     ??_main:
   534                           
   535                           ; 1 bytes @ 0x7F
   536  0000DF                     	ds	1
   537                           tblptru	equ	0xFF8
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           
   541                           	psect	cstackCOMRAM
   542  000001                     __pcstackCOMRAM:
   543                           	opt stack 0
   544  000001                     ??_Timer0_ISR:
   545                           
   546                           ; 1 bytes @ 0x0
   547  000001                     	ds	18
   548  000013                     ??_isdigit:
   549  000013                     ?_command_builder_add_char:
   550                           	opt stack 0
   551  000013                     ?_strcmp2:
   552                           	opt stack 0
   553  000013                     ?___wmul:
   554                           	opt stack 0
   555  000013                     ?___awdiv:
   556                           	opt stack 0
   557  000013                     ?___lwdiv:
   558                           	opt stack 0
   559  000013                     ?___lwmod:
   560                           	opt stack 0
   561  000013                     ?_timerGetCount:
   562                           	opt stack 0
   563  000013                     ?___lmul:
   564                           	opt stack 0
   565  000013                     ?___lldiv:
   566                           	opt stack 0
   567  000013                     ?___llmod:
   568                           	opt stack 0
   569  000013                     SPI_send_data@data:
   570                           	opt stack 0
   571  000013                     ledSet@ledNum:
   572                           	opt stack 0
   573  000013                     command_builder_add_char@send_buffer:
   574                           	opt stack 0
   575  000013                     strcmp2@a:
   576                           	opt stack 0
   577  000013                     SPI_receive_data@data:
   578                           	opt stack 0
   579  000013                     timerGetCount@timerIndex:
   580                           	opt stack 0
   581  000013                     timerResetCount@timerIndex:
   582                           	opt stack 0
   583  000013                     delayMS10@count:
   584                           	opt stack 0
   585  000013                     ___wmul@multiplier:
   586                           	opt stack 0
   587  000013                     ___awdiv@dividend:
   588                           	opt stack 0
   589  000013                     ___lwdiv@dividend:
   590                           	opt stack 0
   591  000013                     ___lwmod@dividend:
   592                           	opt stack 0
   593  000013                     ___lmul@multiplier:
   594                           	opt stack 0
   595  000013                     ___lldiv@dividend:
   596                           	opt stack 0
   597  000013                     ___llmod@dividend:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x12
   601  000013                     	ds	1
   602  000014                     SPI_send_data@sendGood:
   603                           	opt stack 0
   604  000014                     _isdigit$2440:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x13
   608  000014                     	ds	1
   609  000015                     ??_delayMS10:
   610  000015                     ??_timerResetCount:
   611  000015                     command_builder_add_char@data:
   612                           	opt stack 0
   613  000015                     SPI_receive_data@recvGood:
   614                           	opt stack 0
   615  000015                     isdigit@c:
   616                           	opt stack 0
   617  000015                     ledSet@setValue:
   618                           	opt stack 0
   619  000015                     send_data@send_buffer:
   620                           	opt stack 0
   621  000015                     strcmp2@b:
   622                           	opt stack 0
   623  000015                     ___wmul@multiplicand:
   624                           	opt stack 0
   625  000015                     ___awdiv@divisor:
   626                           	opt stack 0
   627  000015                     ___lwdiv@divisor:
   628                           	opt stack 0
   629  000015                     ___lwmod@divisor:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000015                     	ds	1
   634  000016                     ??_command_builder_add_char:
   635  000016                     receive_data@receive_buffer:
   636                           	opt stack 0
   637  000016                     delayMS10@inx:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x15
   641  000016                     	ds	1
   642  000017                     ??_send_data:
   643  000017                     ??_strcmp2:
   644  000017                     ??_timerGetCount:
   645  000017                     ??_ledSet:
   646  000017                     ?_command_builder_add_string:
   647                           	opt stack 0
   648  000017                     ___awdiv@counter:
   649                           	opt stack 0
   650  000017                     ___lwdiv@counter:
   651                           	opt stack 0
   652  000017                     ___lwmod@counter:
   653                           	opt stack 0
   654  000017                     command_builder_add_string@send_buffer:
   655                           	opt stack 0
   656  000017                     ___wmul@product:
   657                           	opt stack 0
   658  000017                     ___lmul@multiplicand:
   659                           	opt stack 0
   660  000017                     ___lldiv@divisor:
   661                           	opt stack 0
   662  000017                     ___llmod@divisor:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0x16
   666  000017                     	ds	1
   667  000018                     ??_receive_data:
   668  000018                     ??_mcpInitF:
   669  000018                     ___awdiv@sign:
   670                           	opt stack 0
   671  000018                     ___lwdiv@quotient:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x17
   675  000018                     	ds	1
   676  000019                     ?_atoi:
   677                           	opt stack 0
   678  000019                     receive_data@data:
   679                           	opt stack 0
   680  000019                     send_data@send_end:
   681                           	opt stack 0
   682  000019                     ledSetAll@led1Value:
   683                           	opt stack 0
   684  000019                     ledToggle@ledNum:
   685                           	opt stack 0
   686  000019                     process_data_parameterize@parameters:
   687                           	opt stack 0
   688  000019                     command_builder_add_string@data_string:
   689                           	opt stack 0
   690  000019                     atoi@s:
   691                           	opt stack 0
   692  000019                     ___awdiv@quotient:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x18
   696  000019                     	ds	1
   697  00001A                     strcmp2@match:
   698                           	opt stack 0
   699  00001A                     utoa@buf:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x19
   703  00001A                     	ds	1
   704  00001B                     ??_atoi:
   705  00001B                     ??_command_builder_add_string:
   706  00001B                     ??_ledToggle:
   707  00001B                     ___llmod@counter:
   708                           	opt stack 0
   709  00001B                     ledSetAll@led2Value:
   710                           	opt stack 0
   711  00001B                     process_data_parameterize@buffer_to_parameterize:
   712                           	opt stack 0
   713  00001B                     ___lmul@product:
   714                           	opt stack 0
   715  00001B                     ___lldiv@quotient:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x1A
   719  00001B                     	ds	1
   720  00001C                     strcmp2@inx:
   721                           	opt stack 0
   722  00001C                     utoa@val:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1B
   726  00001C                     	ds	1
   727  00001D                     ??_process_data_parameterize:
   728  00001D                     atoi@sign:
   729                           	opt stack 0
   730  00001D                     ledSetAll@led3Value:
   731                           	opt stack 0
   732  00001D                     ledToggle@setValue:
   733                           	opt stack 0
   734  00001D                     command_builder_add_string@xsumAdd:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1C
   738  00001D                     	ds	1
   739  00001E                     strmatch@a:
   740                           	opt stack 0
   741  00001E                     atoi@a:
   742                           	opt stack 0
   743  00001E                     utoa@base:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x1D
   747  00001E                     	ds	1
   748  00001F                     ?_atol:
   749                           	opt stack 0
   750  00001F                     ___lldiv@counter:
   751                           	opt stack 0
   752  00001F                     ledToggle@getValue:
   753                           	opt stack 0
   754  00001F                     ledRunUp@ledRunDelay:
   755                           	opt stack 0
   756  00001F                     ledRunDown@ledRunDelay:
   757                           	opt stack 0
   758  00001F                     command_builder_add_string@inx:
   759                           	opt stack 0
   760  00001F                     atol@s:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x1E
   764  00001F                     	ds	1
   765  000020                     ?_powerCalculateWatts:
   766                           	opt stack 0
   767  000020                     process_data_parameterize@inx:
   768                           	opt stack 0
   769  000020                     strmatch@b:
   770                           	opt stack 0
   771  000020                     utoa@v:
   772                           	opt stack 0
   773  000020                     ultoa@buf:
   774                           	opt stack 0
   775  000020                     powerCalculateWatts@timer_ms:
   776                           	opt stack 0
   777  000020                     powerReduction@timerLast_ms:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x1F
   781  000020                     	ds	1
   782  000021                     ledTestToggle@ledNum:
   783                           	opt stack 0
   784  000021                     ledGoToggle@ledNum:
   785                           	opt stack 0
   786  000021                     ledRunUp@delay10ms:
   787                           	opt stack 0
   788  000021                     ledRunDown@delay10ms:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x20
   792  000021                     	ds	1
   793  000022                     process_data_parameterize@parameter_index:
   794                           	opt stack 0
   795  000022                     utoa@c:
   796                           	opt stack 0
   797  000022                     strmatch@result:
   798                           	opt stack 0
   799  000022                     ultoa@val:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x21
   803  000022                     	ds	1
   804  000023                     ??_atol:
   805  000023                     process_data_parameterize@parameter_position:
   806                           	opt stack 0
   807  000023                     ledRun@ledRunDelay:
   808                           	opt stack 0
   809  000023                     itoa@buf:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x22
   813  000023                     	ds	1
   814  000024                     strmatch@match:
   815                           	opt stack 0
   816  000024                     powerCalculateWatts@outHF:
   817                           	opt stack 0
   818  000024                     powerReduction@timerReduce_ms:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x23
   822  000024                     	ds	1
   823  000025                     powerCalculateWatts@calcWatts:
   824                           	opt stack 0
   825  000025                     itoa@val:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x24
   829  000025                     	ds	1
   830  000026                     ultoa@base:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x25
   834  000026                     	ds	1
   835  000027                     atol@sign:
   836                           	opt stack 0
   837  000027                     itoa@base:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x26
   841  000027                     	ds	1
   842  000028                     mcpUpdatePower@timerLFout_ms:
   843                           	opt stack 0
   844  000028                     atol@a:
   845                           	opt stack 0
   846  000028                     ultoa@v:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x27
   850  000028                     	ds	1
   851  000029                     itoa@cp:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x28
   855  000029                     	ds	2
   856  00002B                     xsum_builder@send_buffer:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x2A
   860  00002B                     	ds	1
   861  00002C                     atol@c:
   862                           	opt stack 0
   863  00002C                     ultoa@c:
   864                           	opt stack 0
   865  00002C                     mcpUpdatePower@timerHFout_ms:
   866                           	opt stack 0
   867                           
   868                           ; 4 bytes @ 0x2B
   869  00002C                     	ds	1
   870  00002D                     xsum_builder@xsum:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x2C
   874  00002D                     	ds	2
   875  00002F                     command_builder1@send_buffer:
   876                           	opt stack 0
   877  00002F                     command_builder3@send_buffer:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0x2E
   881  00002F                     	ds	2
   882  000031                     command_builder1@data1:
   883                           	opt stack 0
   884  000031                     command_builder3@data1:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x30
   888  000031                     	ds	2
   889  000033                     command_builder1@xsum:
   890                           	opt stack 0
   891  000033                     command_builder3@data2:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x32
   895  000033                     	ds	2
   896  000035                     command_builder3@data3:
   897                           	opt stack 0
   898  000035                     send_end_of_transmission@send_buffer:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x34
   902  000035                     	ds	2
   903  000037                     command_builder3@xsum:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x36
   907  000037                     	ds	2
   908  000039                     com_command_setPower@send_buffer:
   909                           	opt stack 0
   910  000039                     com_command_setEnergyUsed@send_buffer:
   911                           	opt stack 0
   912  000039                     com_command_setVersion@send_buffer:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x38
   916  000039                     	ds	2
   917  00003B                     process_data_parameters@end_of_transmission_received:
   918                           	opt stack 0
   919  00003B                     resetCommunications@send_buffer:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x3A
   923  00003B                     	ds	1
   924  00003C                     
   925                           ; 1 bytes @ 0x3B
   926  00003C                     	ds	1
   927  00003D                     tblptru	equ	0xFF8
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           
   931                           ; 1 bytes @ 0x3C
   932 ;;
   933 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   934 ;;
   935 ;; *************** function _main *****************
   936 ;; Defined at:
   937 ;;		line 48 in file "Main_PowerSense.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  timerHeartbe    4    2[BANK1 ] unsigned long 
   942 ;;  inx             2    6[BANK1 ] int 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   952 ;;      Params:         0       0       0       0       0       0       0
   953 ;;      Locals:         0       0       6       0       0       0       0
   954 ;;      Temps:          0       1       0       0       0       0       0
   955 ;;      Totals:         0       1       6       0       0       0       0
   956 ;;Total ram usage:        7 bytes
   957 ;; Hardware stack levels required when called:   11
   958 ;; This function calls:
   959 ;;		___llmod
   960 ;;		_commInit
   961 ;;		_commRun
   962 ;;		_initIO
   963 ;;		_initInterruptsClear
   964 ;;		_initOSC
   965 ;;		_ledInit
   966 ;;		_ledRun
   967 ;;		_ledSetAllOff
   968 ;;		_ledSetAllOn
   969 ;;		_ledTestToggle
   970 ;;		_mcpInit
   971 ;;		_mcpUpdatePower
   972 ;;		_timerGetCount
   973 ;;		_timerInit
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text0
   980  000E38                     __ptext0:
   981                           	opt stack 0
   982  000E38                     _main:
   983                           	opt stack 20
   984                           
   985                           ;Main_PowerSense.c: 83: initOSC( );
   986                           
   987                           ;incstack = 0
   988  000E38  EC82  F010         	call	_initOSC	;wreg free
   989                           
   990                           ;Main_PowerSense.c: 84: initIO( );
   991  000E3C  EC99  F010         	call	_initIO	;wreg free
   992                           
   993                           ;Main_PowerSense.c: 85: ledInit( );
   994  000E40  ECA9  F010         	call	_ledInit	;wreg free
   995                           
   996                           ;Main_PowerSense.c: 87: ledSetAllOff( );
   997  000E44  EC57  F010         	call	_ledSetAllOff	;wreg free
   998                           
   999                           ;Main_PowerSense.c: 89: initInterruptsClear( );
  1000  000E48  EC5E  F00E         	call	_initInterruptsClear	;wreg free
  1001                           
  1002                           ;Main_PowerSense.c: 90: timerInit( );
  1003  000E4C  EC26  F00D         	call	_timerInit	;wreg free
  1004                           
  1005                           ;Main_PowerSense.c: 92: mcpInit( );
  1006  000E50  ECE9  F00F         	call	_mcpInit	;wreg free
  1007                           
  1008                           ;Main_PowerSense.c: 95: for( int inx = 0; inx < 5; inx++ )
  1009  000E54  0E00               	movlw	0
  1010  000E56  0101               	movlb	1	; () banked
  1011  000E58  6F5B               	movwf	(main@inx+1)& (0+255),b
  1012  000E5A  0E00               	movlw	0
  1013  000E5C  6F5A               	movwf	main@inx& (0+255),b
  1014  000E5E  BF5B               	btfsc	(main@inx+1)& (0+255),7,b
  1015  000E60  D006               	goto	l475
  1016  000E62  515B               	movf	(main@inx+1)& (0+255),w,b
  1017  000E64  E11E               	bnz	l4719
  1018  000E66  0E05               	movlw	5
  1019  000E68  5D5A               	subwf	main@inx& (0+255),w,b
  1020  000E6A  B0D8               	btfsc	status,0,c
  1021  000E6C  D01A               	goto	u3580
  1022  000E6E                     l475:
  1023                           
  1024                           ; BSR set to: 1
  1025                           ;Main_PowerSense.c: 96: {
  1026                           ;Main_PowerSense.c: 97: ledSetAllOn( );
  1027                           
  1028                           ; BSR set to: 1
  1029  000E6E  EC48  F010         	call	_ledSetAllOn	;wreg free
  1030                           
  1031                           ;Main_PowerSense.c: 98: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1032  000E72  0E34               	movlw	52
  1033  000E74  0100               	movlb	0	; () banked
  1034  000E76  6FDF               	movwf	??_main& (0+255),b
  1035  000E78  0EF1               	movlw	241
  1036  000E7A                     u3617:
  1037  000E7A  2EE8               	decfsz	wreg,f,c
  1038  000E7C  D7FE               	bra	u3617
  1039  000E7E  2FDF               	decfsz	??_main& (0+255),f,b
  1040  000E80  D7FC               	bra	u3617
  1041  000E82  D000               	nop2	
  1042                           
  1043                           ;Main_PowerSense.c: 99: ledSetAllOff( );
  1044  000E84  EC57  F010         	call	_ledSetAllOff	;wreg free
  1045                           
  1046                           ;Main_PowerSense.c: 100: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1047  000E88  0E34               	movlw	52
  1048  000E8A  0100               	movlb	0	; () banked
  1049  000E8C  6FDF               	movwf	??_main& (0+255),b
  1050  000E8E  0EF1               	movlw	241
  1051  000E90                     u3627:
  1052  000E90  2EE8               	decfsz	wreg,f,c
  1053  000E92  D7FE               	bra	u3627
  1054  000E94  2FDF               	decfsz	??_main& (0+255),f,b
  1055  000E96  D7FC               	bra	u3627
  1056  000E98  D000               	nop2	
  1057  000E9A  0101               	movlb	1	; () banked
  1058  000E9C  4B5A               	infsnz	main@inx& (0+255),f,b
  1059  000E9E  2B5B               	incf	(main@inx+1)& (0+255),f,b
  1060  000EA0  D7DE               	goto	L1
  1061  000EA2                     u3580:
  1062  000EA2                     l4719:
  1063                           
  1064                           ; BSR set to: 1
  1065                           ;Main_PowerSense.c: 101: }
  1066                           ;Main_PowerSense.c: 104: commInit( );
  1067  000EA2  ECB3  F010         	call	_commInit	;wreg free
  1068                           
  1069                           ;Main_PowerSense.c: 106: ledRun( 100 );
  1070  000EA6  0E00               	movlw	0
  1071  000EA8  6E24               	movwf	ledRun@ledRunDelay+1,c
  1072  000EAA  0E64               	movlw	100
  1073  000EAC  6E23               	movwf	ledRun@ledRunDelay,c
  1074  000EAE  EC75  F010         	call	_ledRun	;wreg free
  1075  000EB2                     
  1076                           ;Main_PowerSense.c: 109: {
  1077                           ;Main_PowerSense.c: 110: mcpUpdatePower( );
  1078  000EB2  EC0F  F004         	call	_mcpUpdatePower	;wreg free
  1079                           
  1080                           ;Main_PowerSense.c: 111: commRun( );
  1081  000EB6  ECAF  F010         	call	_commRun	;wreg free
  1082                           
  1083                           ;Main_PowerSense.c: 114: {
  1084                           ;Main_PowerSense.c: 115: static bool oneShot = 0;
  1085                           ;Main_PowerSense.c: 116: unsigned long timerHeartbeat;
  1086                           ;Main_PowerSense.c: 117: timerHeartbeat = timerGetCount( 3 );
  1087  000EBA  0E00               	movlw	0
  1088  000EBC  6E14               	movwf	timerGetCount@timerIndex+1,c
  1089  000EBE  0E03               	movlw	3
  1090  000EC0  6E13               	movwf	timerGetCount@timerIndex,c
  1091  000EC2  EC8A  F00F         	call	_timerGetCount	;wreg free
  1092  000EC6  C013  F156         	movff	?_timerGetCount,main@timerHeartbeat
  1093  000ECA  C014  F157         	movff	?_timerGetCount+1,main@timerHeartbeat+1
  1094  000ECE  C015  F158         	movff	?_timerGetCount+2,main@timerHeartbeat+2
  1095  000ED2  C016  F159         	movff	?_timerGetCount+3,main@timerHeartbeat+3
  1096                           
  1097                           ;Main_PowerSense.c: 118: if( (timerHeartbeat % 500) == 0 )
  1098  000ED6  C156  F013         	movff	main@timerHeartbeat,___llmod@dividend
  1099  000EDA  C157  F014         	movff	main@timerHeartbeat+1,___llmod@dividend+1
  1100  000EDE  C158  F015         	movff	main@timerHeartbeat+2,___llmod@dividend+2
  1101  000EE2  C159  F016         	movff	main@timerHeartbeat+3,___llmod@dividend+3
  1102  000EE6  0EF4               	movlw	244
  1103  000EE8  6E17               	movwf	___llmod@divisor,c
  1104  000EEA  0E01               	movlw	1
  1105  000EEC  6E18               	movwf	___llmod@divisor+1,c
  1106  000EEE  0E00               	movlw	0
  1107  000EF0  6E19               	movwf	___llmod@divisor+2,c
  1108  000EF2  0E00               	movlw	0
  1109  000EF4  6E1A               	movwf	___llmod@divisor+3,c
  1110  000EF6  ECF3  F00C         	call	___llmod	;wreg free
  1111  000EFA  5013               	movf	?___llmod,w,c
  1112  000EFC  1014               	iorwf	?___llmod+1,w,c
  1113  000EFE  1015               	iorwf	?___llmod+2,w,c
  1114  000F00  1016               	iorwf	?___llmod+3,w,c
  1115  000F02  A4D8               	btfss	status,2,c
  1116  000F04  D00D               	goto	l480
  1117                           
  1118                           ;Main_PowerSense.c: 119: {
  1119                           ;Main_PowerSense.c: 120: if( oneShot == 0 )
  1120  000F06  0100               	movlb	0	; () banked
  1121  000F08  51FC               	movf	main@oneShot& (0+255),w,b
  1122  000F0A  A4D8               	btfss	status,2,c
  1123  000F0C  D7D2               	goto	l477
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;Main_PowerSense.c: 121: {
  1127                           ;Main_PowerSense.c: 122: oneShot = 1;
  1128  000F0E  0E01               	movlw	1
  1129  000F10  6FFC               	movwf	main@oneShot& (0+255),b
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;Main_PowerSense.c: 123: ledTestToggle( 1 );
  1133  000F12  0E00               	movlw	0
  1134  000F14  6E22               	movwf	ledTestToggle@ledNum+1,c
  1135  000F16  0E01               	movlw	1
  1136  000F18  6E21               	movwf	ledTestToggle@ledNum,c
  1137  000F1A  ECA2  F010         	call	_ledTestToggle	;wreg free
  1138                           
  1139                           ;Main_PowerSense.c: 124: }
  1140                           ;Main_PowerSense.c: 126: }
  1141  000F1E  D7C9               	goto	l477
  1142  000F20                     l480:
  1143                           
  1144                           ;Main_PowerSense.c: 127: else
  1145                           ;Main_PowerSense.c: 128: {
  1146                           ;Main_PowerSense.c: 129: oneShot = 0;
  1147  000F20  0E00               	movlw	0
  1148  000F22  0100               	movlb	0	; () banked
  1149  000F24  6FFC               	movwf	main@oneShot& (0+255),b
  1150                           
  1151                           ; BSR set to: 0
  1152                           
  1153                           ; BSR set to: 0
  1154  000F26  D7C5               	goto	l477
  1155  000F28                     __end_of_main:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           status	equ	0xFD8
  1161                           
  1162 ;; *************** function _timerInit *****************
  1163 ;; Defined at:
  1164 ;;		line 53 in file "Timer.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1178 ;;      Params:         0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text1
  1193  001A4C                     __ptext1:
  1194                           	opt stack 0
  1195  001A4C                     _timerInit:
  1196                           	opt stack 29
  1197                           
  1198                           ;Timer.c: 56: T0CONbits.TMR0ON = 0;
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;incstack = 0
  1202  001A4C  9ED5               	bcf	4053,7,c	;volatile
  1203                           
  1204                           ;Timer.c: 57: T0CONbits.T08BIT = 0;
  1205  001A4E  9CD5               	bcf	4053,6,c	;volatile
  1206                           
  1207                           ;Timer.c: 58: T0CONbits.T0CS = 0;
  1208  001A50  9AD5               	bcf	4053,5,c	;volatile
  1209                           
  1210                           ;Timer.c: 59: T0CONbits.PSA = 0;
  1211  001A52  96D5               	bcf	4053,3,c	;volatile
  1212                           
  1213                           ;Timer.c: 60: T0CONbits.T0PS = 0b001;
  1214  001A54  50D5               	movf	4053,w,c	;volatile
  1215  001A56  0BF8               	andlw	-8
  1216  001A58  0901               	iorlw	1
  1217  001A5A  6ED5               	movwf	4053,c	;volatile
  1218                           
  1219                           ;Timer.c: 62: INTCONbits.TMR0IE = 1;
  1220  001A5C  8AF2               	bsf	intcon,5,c	;volatile
  1221                           
  1222                           ;Timer.c: 63: INTCONbits.GIE = 1;
  1223  001A5E  8EF2               	bsf	intcon,7,c	;volatile
  1224                           
  1225                           ;Timer.c: 64: T0CONbits.TMR0ON = 1;
  1226  001A60  8ED5               	bsf	4053,7,c	;volatile
  1227                           
  1228                           ;Timer.c: 68: timerCount_ms[0] = 0;
  1229  001A62  0E00               	movlw	0
  1230  001A64  0100               	movlb	0	; () banked
  1231  001A66  6FE0               	movwf	_timerCount_ms& (0+255),b	;volatile
  1232  001A68  0E00               	movlw	0
  1233  001A6A  6FE1               	movwf	(_timerCount_ms+1)& (0+255),b	;volatile
  1234  001A6C  0E00               	movlw	0
  1235  001A6E  6FE2               	movwf	(_timerCount_ms+2)& (0+255),b	;volatile
  1236  001A70  0E00               	movlw	0
  1237  001A72  6FE3               	movwf	(_timerCount_ms+3)& (0+255),b	;volatile
  1238                           
  1239                           ;Timer.c: 69: timerCount_ms[1] = 0;
  1240  001A74  0E00               	movlw	0
  1241  001A76  6FE4               	movwf	(_timerCount_ms+4)& (0+255),b	;volatile
  1242  001A78  0E00               	movlw	0
  1243  001A7A  6FE5               	movwf	(_timerCount_ms+5)& (0+255),b	;volatile
  1244  001A7C  0E00               	movlw	0
  1245  001A7E  6FE6               	movwf	(_timerCount_ms+6)& (0+255),b	;volatile
  1246  001A80  0E00               	movlw	0
  1247  001A82  6FE7               	movwf	(_timerCount_ms+7)& (0+255),b	;volatile
  1248                           
  1249                           ;Timer.c: 70: timerCount_ms[2] = 0;
  1250  001A84  0E00               	movlw	0
  1251  001A86  6FE8               	movwf	(_timerCount_ms+8)& (0+255),b	;volatile
  1252  001A88  0E00               	movlw	0
  1253  001A8A  6FE9               	movwf	(_timerCount_ms+9)& (0+255),b	;volatile
  1254  001A8C  0E00               	movlw	0
  1255  001A8E  6FEA               	movwf	(_timerCount_ms+10)& (0+255),b	;volatile
  1256  001A90  0E00               	movlw	0
  1257  001A92  6FEB               	movwf	(_timerCount_ms+11)& (0+255),b	;volatile
  1258                           
  1259                           ;Timer.c: 71: timerCount_ms[3] = 0;
  1260  001A94  0E00               	movlw	0
  1261  001A96  6FEC               	movwf	(_timerCount_ms+12)& (0+255),b	;volatile
  1262  001A98  0E00               	movlw	0
  1263  001A9A  6FED               	movwf	(_timerCount_ms+13)& (0+255),b	;volatile
  1264  001A9C  0E00               	movlw	0
  1265  001A9E  6FEE               	movwf	(_timerCount_ms+14)& (0+255),b	;volatile
  1266  001AA0  0E00               	movlw	0
  1267  001AA2  6FEF               	movwf	(_timerCount_ms+15)& (0+255),b	;volatile
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;Timer.c: 73: INTCONbits.TMR0IF = 0;
  1271  001AA4  94F2               	bcf	intcon,2,c	;volatile
  1272                           
  1273                           ;Timer.c: 75: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  1274  001AA6  0EFC               	movlw	252
  1275  001AA8  6ED7               	movwf	4055,c	;volatile
  1276                           
  1277                           ;Timer.c: 76: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  1278  001AAA  0E18               	movlw	24
  1279  001AAC  6ED6               	movwf	4054,c	;volatile
  1280                           
  1281                           ; BSR set to: 0
  1282  001AAE  0012               	return		;funcret
  1283  001AB0                     __end_of_timerInit:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           intcon	equ	0xFF2
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           status	equ	0xFD8
  1290                           
  1291 ;; *************** function _mcpUpdatePower *****************
  1292 ;; Defined at:
  1293 ;;		line 206 in file "MCP3909_Interface.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  timerLFout_m    4   39[COMRAM] unsigned long 
  1298 ;;  timerHFout_m    4   43[COMRAM] unsigned long 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1308 ;;      Params:         0       0       0       0       0       0       0
  1309 ;;      Locals:         8       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0
  1311 ;;      Totals:         8       0       0       0       0       0       0
  1312 ;;Total ram usage:        8 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    4
  1315 ;; This function calls:
  1316 ;;		_ledGoToggle
  1317 ;;		_powerCalculateWatts
  1318 ;;		_powerReduction
  1319 ;;		_timerGetCount
  1320 ;;		_timerResetCount
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text2
  1327  00081E                     __ptext2:
  1328                           	opt stack 0
  1329  00081E                     _mcpUpdatePower:
  1330                           	opt stack 26
  1331                           
  1332                           ;MCP3909_Interface.c: 220: static int meterWattsHF = 0;
  1333                           ;MCP3909_Interface.c: 221: static unsigned long timerHFoutLast_ms = 0;
  1334                           ;MCP3909_Interface.c: 223: static bool oneShotHFout = 0;
  1335                           ;MCP3909_Interface.c: 225: if( PORTAbits.RA3 == 0 )
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;incstack = 0
  1339  00081E  B680               	btfsc	3968,3,c	;volatile
  1340  000820  D03E               	goto	l539
  1341                           
  1342                           ;MCP3909_Interface.c: 226: {
  1343                           ;MCP3909_Interface.c: 227: if( oneShotHFout == 0 )
  1344  000822  504A               	movf	mcpUpdatePower@oneShotHFout,w,c
  1345  000824  A4D8               	btfss	status,2,c
  1346  000826  D03D               	goto	l541
  1347                           
  1348                           ;MCP3909_Interface.c: 228: {
  1349                           ;MCP3909_Interface.c: 230: ledGoToggle( 0 );
  1350  000828  0E00               	movlw	0
  1351  00082A  6E22               	movwf	ledGoToggle@ledNum+1,c
  1352  00082C  0E00               	movlw	0
  1353  00082E  6E21               	movwf	ledGoToggle@ledNum,c
  1354  000830  ECB7  F010         	call	_ledGoToggle	;wreg free
  1355                           
  1356                           ;MCP3909_Interface.c: 232: oneShotHFout = 1;
  1357  000834  0E01               	movlw	1
  1358  000836  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1359                           
  1360                           ;MCP3909_Interface.c: 234: unsigned long timerHFout_ms;
  1361                           ;MCP3909_Interface.c: 235: timerHFout_ms = timerGetCount( 0 );
  1362  000838  0E00               	movlw	0
  1363  00083A  6E14               	movwf	timerGetCount@timerIndex+1,c
  1364  00083C  0E00               	movlw	0
  1365  00083E  6E13               	movwf	timerGetCount@timerIndex,c
  1366  000840  EC8A  F00F         	call	_timerGetCount	;wreg free
  1367  000844  C013  F02C         	movff	?_timerGetCount,mcpUpdatePower@timerHFout_ms
  1368  000848  C014  F02D         	movff	?_timerGetCount+1,mcpUpdatePower@timerHFout_ms+1
  1369  00084C  C015  F02E         	movff	?_timerGetCount+2,mcpUpdatePower@timerHFout_ms+2
  1370  000850  C016  F02F         	movff	?_timerGetCount+3,mcpUpdatePower@timerHFout_ms+3
  1371                           
  1372                           ;MCP3909_Interface.c: 236: timerResetCount( 0 );
  1373  000854  0E00               	movlw	0
  1374  000856  6E14               	movwf	timerResetCount@timerIndex+1,c
  1375  000858  0E00               	movlw	0
  1376  00085A  6E13               	movwf	timerResetCount@timerIndex,c
  1377  00085C  ECD4  F00F         	call	_timerResetCount	;wreg free
  1378                           
  1379                           ;MCP3909_Interface.c: 237: timerResetCount( 2 );
  1380  000860  0E00               	movlw	0
  1381  000862  6E14               	movwf	timerResetCount@timerIndex+1,c
  1382  000864  0E02               	movlw	2
  1383  000866  6E13               	movwf	timerResetCount@timerIndex,c
  1384  000868  ECD4  F00F         	call	_timerResetCount	;wreg free
  1385                           
  1386                           ;MCP3909_Interface.c: 239: meterWattsHF = powerCalculateWatts( timerHFout_ms, 1 );
  1387  00086C  C02C  F020         	movff	mcpUpdatePower@timerHFout_ms,powerCalculateWatts@timer_ms
  1388  000870  C02D  F021         	movff	mcpUpdatePower@timerHFout_ms+1,powerCalculateWatts@timer_ms+1
  1389  000874  C02E  F022         	movff	mcpUpdatePower@timerHFout_ms+2,powerCalculateWatts@timer_ms+2
  1390  000878  C02F  F023         	movff	mcpUpdatePower@timerHFout_ms+3,powerCalculateWatts@timer_ms+3
  1391  00087C  0E01               	movlw	1
  1392  00087E  6E24               	movwf	powerCalculateWatts@outHF,c
  1393  000880  EC87  F00C         	call	_powerCalculateWatts	;wreg free
  1394  000884  C020  F045         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsHF
  1395  000888  C021  F046         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsHF+1
  1396                           
  1397                           ;MCP3909_Interface.c: 241: timerHFoutLast_ms = timerHFout_ms;
  1398  00088C  C02C  F0F0         	movff	mcpUpdatePower@timerHFout_ms,mcpUpdatePower@timerHFoutLast_ms
  1399  000890  C02D  F0F1         	movff	mcpUpdatePower@timerHFout_ms+1,mcpUpdatePower@timerHFoutLast_ms+1
  1400  000894  C02E  F0F2         	movff	mcpUpdatePower@timerHFout_ms+2,mcpUpdatePower@timerHFoutLast_ms+2
  1401  000898  C02F  F0F3         	movff	mcpUpdatePower@timerHFout_ms+3,mcpUpdatePower@timerHFoutLast_ms+3
  1402                           
  1403                           ;MCP3909_Interface.c: 242: }
  1404                           ;MCP3909_Interface.c: 243: }
  1405  00089C  D002               	goto	l541
  1406  00089E                     l539:
  1407                           
  1408                           ;MCP3909_Interface.c: 244: else
  1409                           ;MCP3909_Interface.c: 245: {
  1410                           ;MCP3909_Interface.c: 246: oneShotHFout = 0;
  1411  00089E  0E00               	movlw	0
  1412  0008A0  6E4A               	movwf	mcpUpdatePower@oneShotHFout,c
  1413  0008A2                     l541:
  1414                           
  1415                           ;MCP3909_Interface.c: 247: }
  1416                           ;MCP3909_Interface.c: 251: static int meterWattsLF = 0;
  1417                           ;MCP3909_Interface.c: 253: static bool oneShotLFout = 0;
  1418                           ;MCP3909_Interface.c: 255: if( (PORTAbits.RA2 == 0) || (PORTAbits.RA4 == 0) )
  1419  0008A2  A480               	btfss	3968,2,c	;volatile
  1420  0008A4  D002               	goto	u3530
  1421  0008A6  B880               	btfsc	3968,4,c	;volatile
  1422  0008A8  D058               	goto	l546
  1423  0008AA                     u3530:
  1424                           
  1425                           ;MCP3909_Interface.c: 256: {
  1426                           ;MCP3909_Interface.c: 257: if( oneShotLFout == 0 )
  1427  0008AA  5049               	movf	mcpUpdatePower@oneShotLFout,w,c
  1428  0008AC  A4D8               	btfss	status,2,c
  1429  0008AE  D057               	goto	l553
  1430                           
  1431                           ;MCP3909_Interface.c: 258: {
  1432                           ;MCP3909_Interface.c: 260: ledGoToggle( 1 );
  1433  0008B0  0E00               	movlw	0
  1434  0008B2  6E22               	movwf	ledGoToggle@ledNum+1,c
  1435  0008B4  0E01               	movlw	1
  1436  0008B6  6E21               	movwf	ledGoToggle@ledNum,c
  1437  0008B8  ECB7  F010         	call	_ledGoToggle	;wreg free
  1438                           
  1439                           ;MCP3909_Interface.c: 262: oneShotLFout = 1;
  1440  0008BC  0E01               	movlw	1
  1441  0008BE  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1442                           
  1443                           ;MCP3909_Interface.c: 264: unsigned long timerLFout_ms;
  1444                           ;MCP3909_Interface.c: 265: timerLFout_ms = timerGetCount( 1 );
  1445  0008C0  0E00               	movlw	0
  1446  0008C2  6E14               	movwf	timerGetCount@timerIndex+1,c
  1447  0008C4  0E01               	movlw	1
  1448  0008C6  6E13               	movwf	timerGetCount@timerIndex,c
  1449  0008C8  EC8A  F00F         	call	_timerGetCount	;wreg free
  1450  0008CC  C013  F028         	movff	?_timerGetCount,mcpUpdatePower@timerLFout_ms
  1451  0008D0  C014  F029         	movff	?_timerGetCount+1,mcpUpdatePower@timerLFout_ms+1
  1452  0008D4  C015  F02A         	movff	?_timerGetCount+2,mcpUpdatePower@timerLFout_ms+2
  1453  0008D8  C016  F02B         	movff	?_timerGetCount+3,mcpUpdatePower@timerLFout_ms+3
  1454                           
  1455                           ;MCP3909_Interface.c: 266: timerResetCount( 1 );
  1456  0008DC  0E00               	movlw	0
  1457  0008DE  6E14               	movwf	timerResetCount@timerIndex+1,c
  1458  0008E0  0E01               	movlw	1
  1459  0008E2  6E13               	movwf	timerResetCount@timerIndex,c
  1460  0008E4  ECD4  F00F         	call	_timerResetCount	;wreg free
  1461                           
  1462                           ;MCP3909_Interface.c: 267: timerResetCount( 2 );
  1463  0008E8  0E00               	movlw	0
  1464  0008EA  6E14               	movwf	timerResetCount@timerIndex+1,c
  1465  0008EC  0E02               	movlw	2
  1466  0008EE  6E13               	movwf	timerResetCount@timerIndex,c
  1467  0008F0  ECD4  F00F         	call	_timerResetCount	;wreg free
  1468                           
  1469                           ;MCP3909_Interface.c: 270: meterWattsLF = powerCalculateWatts( timerLFout_ms, 0 );
  1470  0008F4  C028  F020         	movff	mcpUpdatePower@timerLFout_ms,powerCalculateWatts@timer_ms
  1471  0008F8  C029  F021         	movff	mcpUpdatePower@timerLFout_ms+1,powerCalculateWatts@timer_ms+1
  1472  0008FC  C02A  F022         	movff	mcpUpdatePower@timerLFout_ms+2,powerCalculateWatts@timer_ms+2
  1473  000900  C02B  F023         	movff	mcpUpdatePower@timerLFout_ms+3,powerCalculateWatts@timer_ms+3
  1474  000904  0E00               	movlw	0
  1475  000906  6E24               	movwf	powerCalculateWatts@outHF,c
  1476  000908  EC87  F00C         	call	_powerCalculateWatts	;wreg free
  1477  00090C  C020  F043         	movff	?_powerCalculateWatts,mcpUpdatePower@meterWattsLF
  1478  000910  C021  F044         	movff	?_powerCalculateWatts+1,mcpUpdatePower@meterWattsLF+1
  1479                           
  1480                           ;MCP3909_Interface.c: 273: meterEnergyUsedPart += 27000 * (unsigned long) 16;
  1481  000914  0E80               	movlw	128
  1482  000916  0100               	movlb	0	; () banked
  1483  000918  27F4               	addwf	_meterEnergyUsedPart& (0+255),f,b
  1484  00091A  0E97               	movlw	151
  1485  00091C  23F5               	addwfc	(_meterEnergyUsedPart+1)& (0+255),f,b
  1486  00091E  0E06               	movlw	6
  1487  000920  23F6               	addwfc	(_meterEnergyUsedPart+2)& (0+255),f,b
  1488  000922  0E00               	movlw	0
  1489  000924  23F7               	addwfc	(_meterEnergyUsedPart+3)& (0+255),f,b
  1490                           
  1491                           ;MCP3909_Interface.c: 274: while( meterEnergyUsedPart > 100000 )
  1492  000926  D00E               	goto	l550
  1493  000928                     l4597:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;MCP3909_Interface.c: 275: {
  1497                           ;MCP3909_Interface.c: 276: meterEnergyUsed_global++;
  1498  000928  0E01               	movlw	1
  1499  00092A  263D               	addwf	_meterEnergyUsed_global,f,c
  1500  00092C  0E00               	movlw	0
  1501  00092E  223E               	addwfc	_meterEnergyUsed_global+1,f,c
  1502  000930  223F               	addwfc	_meterEnergyUsed_global+2,f,c
  1503  000932  2240               	addwfc	_meterEnergyUsed_global+3,f,c
  1504                           
  1505                           ;MCP3909_Interface.c: 277: meterEnergyUsedPart -= 100000;
  1506  000934  0EA0               	movlw	160
  1507  000936  5FF4               	subwf	_meterEnergyUsedPart& (0+255),f,b
  1508  000938  0E86               	movlw	134
  1509  00093A  5BF5               	subwfb	(_meterEnergyUsedPart+1)& (0+255),f,b
  1510  00093C  0E01               	movlw	1
  1511  00093E  5BF6               	subwfb	(_meterEnergyUsedPart+2)& (0+255),f,b
  1512  000940  0E00               	movlw	0
  1513  000942  5BF7               	subwfb	(_meterEnergyUsedPart+3)& (0+255),f,b
  1514  000944                     l550:
  1515                           
  1516                           ; BSR set to: 0
  1517  000944  51F7               	movf	(_meterEnergyUsedPart+3)& (0+255),w,b
  1518  000946  E1F0               	bnz	l4597
  1519  000948  0EA1               	movlw	161
  1520  00094A  5DF4               	subwf	_meterEnergyUsedPart& (0+255),w,b
  1521  00094C  0E86               	movlw	134
  1522  00094E  59F5               	subwfb	(_meterEnergyUsedPart+1)& (0+255),w,b
  1523  000950  0E01               	movlw	1
  1524  000952  59F6               	subwfb	(_meterEnergyUsedPart+2)& (0+255),w,b
  1525  000954  A0D8               	btfss	status,0,c
  1526  000956  D003               	goto	l553
  1527  000958  D7E7               	goto	l551
  1528  00095A                     l546:
  1529                           
  1530                           ;MCP3909_Interface.c: 281: else
  1531                           ;MCP3909_Interface.c: 282: {
  1532                           ;MCP3909_Interface.c: 283: oneShotLFout = 0;
  1533                           
  1534                           ; BSR set to: 0
  1535  00095A  0E00               	movlw	0
  1536  00095C  6E49               	movwf	mcpUpdatePower@oneShotLFout,c
  1537  00095E                     l553:
  1538                           
  1539                           ;MCP3909_Interface.c: 284: }
  1540                           ;MCP3909_Interface.c: 294: if( meterWattsLF > 500 )
  1541  00095E  BE44               	btfsc	mcpUpdatePower@meterWattsLF+1,7,c
  1542  000960  D00B               	goto	l554
  1543  000962  0EF5               	movlw	245
  1544  000964  5C43               	subwf	mcpUpdatePower@meterWattsLF,w,c
  1545  000966  0E01               	movlw	1
  1546  000968  5844               	subwfb	mcpUpdatePower@meterWattsLF+1,w,c
  1547  00096A  A0D8               	btfss	status,0,c
  1548  00096C  D005               	goto	l554
  1549                           
  1550                           ;MCP3909_Interface.c: 295: {
  1551                           ;MCP3909_Interface.c: 296: meterWatts_global = meterWattsLF;
  1552  00096E  C043  F0F8         	movff	mcpUpdatePower@meterWattsLF,_meterWatts_global
  1553  000972  C044  F0F9         	movff	mcpUpdatePower@meterWattsLF+1,_meterWatts_global+1
  1554  000976  D004               	goto	L2
  1555  000978                     l554:
  1556                           
  1557                           ;MCP3909_Interface.c: 298: else
  1558                           ;MCP3909_Interface.c: 299: {
  1559                           ;MCP3909_Interface.c: 300: meterWatts_global = meterWattsHF;
  1560                           
  1561                           ; BSR set to: 0
  1562  000978  C045  F0F8         	movff	mcpUpdatePower@meterWattsHF,_meterWatts_global
  1563  00097C  C046  F0F9         	movff	mcpUpdatePower@meterWattsHF+1,_meterWatts_global+1
  1564  000980                     L2:
  1565  000980  0100               	movlb	0	; () banked
  1566  000982  0E00               	movlw	0
  1567  000984  BFF9               	btfsc	(_meterWatts_global+1)& (0+255),7,b
  1568  000986  0EFF               	movlw	-1
  1569  000988  6FFA               	movwf	(_meterWatts_global+2)& (0+255),b
  1570  00098A  6FFB               	movwf	(_meterWatts_global+3)& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;MCP3909_Interface.c: 301: }
  1574                           ;MCP3909_Interface.c: 304: powerReduction( timerHFoutLast_ms );
  1575                           
  1576                           ; BSR set to: 0
  1577  00098C  C0F0  F020         	movff	mcpUpdatePower@timerHFoutLast_ms,powerReduction@timerLast_ms
  1578  000990  C0F1  F021         	movff	mcpUpdatePower@timerHFoutLast_ms+1,powerReduction@timerLast_ms+1
  1579  000994  C0F2  F022         	movff	mcpUpdatePower@timerHFoutLast_ms+2,powerReduction@timerLast_ms+2
  1580  000998  C0F3  F023         	movff	mcpUpdatePower@timerHFoutLast_ms+3,powerReduction@timerLast_ms+3
  1581  00099C  ECEA  F00A         	call	_powerReduction	;wreg free
  1582  0009A0  0012               	return	
  1583  0009A2                     __end_of_mcpUpdatePower:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           intcon	equ	0xFF2
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _timerResetCount *****************
  1592 ;; Defined at:
  1593 ;;		line 100 in file "Timer.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  timerIndex      2   18[COMRAM] int 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1607 ;;      Params:         2       0       0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0
  1609 ;;      Temps:          2       0       0       0       0       0       0
  1610 ;;      Totals:         4       0       0       0       0       0       0
  1611 ;;Total ram usage:        4 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:    1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_mcpUpdatePower
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text3
  1622  001FA8                     __ptext3:
  1623                           	opt stack 0
  1624  001FA8                     _timerResetCount:
  1625                           	opt stack 28
  1626                           
  1627                           ;Timer.c: 102: timerCount_ms[timerIndex] = 0;
  1628                           
  1629                           ;incstack = 0
  1630  001FA8  0EE0               	movlw	low _timerCount_ms
  1631  001FAA  6E15               	movwf	??_timerResetCount& (0+255),c
  1632  001FAC  0E00               	movlw	high _timerCount_ms
  1633  001FAE  6E16               	movwf	(??_timerResetCount+1)& (0+255),c
  1634  001FB0  90D8               	bcf	status,0,c
  1635  001FB2  3413               	rlcf	timerResetCount@timerIndex,w,c
  1636  001FB4  6ED9               	movwf	fsr2l,c
  1637  001FB6  3414               	rlcf	timerResetCount@timerIndex+1,w,c
  1638  001FB8  6EDA               	movwf	fsr2h,c
  1639  001FBA  90D8               	bcf	status,0,c
  1640  001FBC  36D9               	rlcf	fsr2l,f,c
  1641  001FBE  36DA               	rlcf	fsr2h,f,c
  1642  001FC0  5015               	movf	??_timerResetCount,w,c
  1643  001FC2  26D9               	addwf	fsr2l,f,c
  1644  001FC4  5016               	movf	??_timerResetCount+1,w,c
  1645  001FC6  22DA               	addwfc	fsr2h,f,c
  1646  001FC8  6ADE               	clrf	postinc2,c
  1647  001FCA  6ADE               	clrf	postinc2,c
  1648  001FCC  6ADE               	clrf	postinc2,c
  1649  001FCE  6ADD               	clrf	postdec2,c
  1650  001FD0  0012               	return	
  1651  001FD2                     __end_of_timerResetCount:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           intcon	equ	0xFF2
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           postinc2	equ	0xFDE
  1658                           postdec2	equ	0xFDD
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _powerReduction *****************
  1664 ;; Defined at:
  1665 ;;		line 331 in file "MCP3909_Interface.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  timerLast_ms    4   31[COMRAM] unsigned long 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  timerReduce_    4   35[COMRAM] unsigned long 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1679 ;;      Params:         4       0       0       0       0       0       0
  1680 ;;      Locals:         4       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0
  1682 ;;      Totals:         8       0       0       0       0       0       0
  1683 ;;Total ram usage:        8 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    2
  1686 ;; This function calls:
  1687 ;;		___lldiv
  1688 ;;		_timerGetCount
  1689 ;; This function is called by:
  1690 ;;		_mcpUpdatePower
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text4
  1695  0015D4                     __ptext4:
  1696                           	opt stack 0
  1697  0015D4                     _powerReduction:
  1698                           	opt stack 27
  1699                           
  1700                           ;MCP3909_Interface.c: 340: unsigned long timerReduce_ms;
  1701                           ;MCP3909_Interface.c: 341: static int countReduce = 0;
  1702                           ;MCP3909_Interface.c: 343: timerReduce_ms = timerGetCount( 2 );
  1703                           
  1704                           ;incstack = 0
  1705  0015D4  0E00               	movlw	0
  1706  0015D6  6E14               	movwf	timerGetCount@timerIndex+1,c
  1707  0015D8  0E02               	movlw	2
  1708  0015DA  6E13               	movwf	timerGetCount@timerIndex,c
  1709  0015DC  EC8A  F00F         	call	_timerGetCount	;wreg free
  1710  0015E0  C013  F024         	movff	?_timerGetCount,powerReduction@timerReduce_ms
  1711  0015E4  C014  F025         	movff	?_timerGetCount+1,powerReduction@timerReduce_ms+1
  1712  0015E8  C015  F026         	movff	?_timerGetCount+2,powerReduction@timerReduce_ms+2
  1713  0015EC  C016  F027         	movff	?_timerGetCount+3,powerReduction@timerReduce_ms+3
  1714                           
  1715                           ;MCP3909_Interface.c: 345: if( (timerReduce_ms > 90000) || (timerLast_ms == 0) )
  1716  0015F0  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1717  0015F2  E10E               	bnz	l4447
  1718  0015F4  0E91               	movlw	145
  1719  0015F6  5C24               	subwf	powerReduction@timerReduce_ms,w,c
  1720  0015F8  0E5F               	movlw	95
  1721  0015FA  5825               	subwfb	powerReduction@timerReduce_ms+1,w,c
  1722  0015FC  0E01               	movlw	1
  1723  0015FE  5826               	subwfb	powerReduction@timerReduce_ms+2,w,c
  1724  001600  B0D8               	btfsc	status,0,c
  1725  001602  D006               	goto	u3480
  1726  001604  5020               	movf	powerReduction@timerLast_ms,w,c
  1727  001606  1021               	iorwf	powerReduction@timerLast_ms+1,w,c
  1728  001608  1022               	iorwf	powerReduction@timerLast_ms+2,w,c
  1729  00160A  1023               	iorwf	powerReduction@timerLast_ms+3,w,c
  1730  00160C  A4D8               	btfss	status,2,c
  1731  00160E  D00A               	goto	l566
  1732  001610                     u3480:
  1733  001610                     l4447:
  1734                           
  1735                           ;MCP3909_Interface.c: 346: {
  1736                           ;MCP3909_Interface.c: 347: meterWatts_global = 0;
  1737  001610  0E00               	movlw	0
  1738  001612  0100               	movlb	0	; () banked
  1739  001614  6FF8               	movwf	_meterWatts_global& (0+255),b
  1740  001616  0E00               	movlw	0
  1741  001618  6FF9               	movwf	(_meterWatts_global+1)& (0+255),b
  1742  00161A  0E00               	movlw	0
  1743  00161C  6FFA               	movwf	(_meterWatts_global+2)& (0+255),b
  1744  00161E  0E00               	movlw	0
  1745  001620  6FFB               	movwf	(_meterWatts_global+3)& (0+255),b
  1746                           
  1747                           ;MCP3909_Interface.c: 348: }
  1748  001622  0012               	return	
  1749  001624                     l566:
  1750                           
  1751                           ;MCP3909_Interface.c: 349: else if( timerReduce_ms > timerLast_ms )
  1752                           
  1753                           ; BSR set to: 0
  1754  001624  5024               	movf	powerReduction@timerReduce_ms,w,c
  1755  001626  5C20               	subwf	powerReduction@timerLast_ms,w,c
  1756  001628  5025               	movf	powerReduction@timerReduce_ms+1,w,c
  1757  00162A  5821               	subwfb	powerReduction@timerLast_ms+1,w,c
  1758  00162C  5026               	movf	powerReduction@timerReduce_ms+2,w,c
  1759  00162E  5822               	subwfb	powerReduction@timerLast_ms+2,w,c
  1760  001630  5027               	movf	powerReduction@timerReduce_ms+3,w,c
  1761  001632  5823               	subwfb	powerReduction@timerLast_ms+3,w,c
  1762  001634  B0D8               	btfsc	status,0,c
  1763  001636  0012               	return	
  1764                           
  1765                           ;MCP3909_Interface.c: 350: {
  1766                           ;MCP3909_Interface.c: 351: meterWatts_global = (((((unsigned long) 27000 * (unsigned lon
      +                          g) 3600) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (uns
      +                          igned long) timerReduce_ms;
  1767  001638  0EE0               	movlw	224
  1768  00163A  6E13               	movwf	___lldiv@dividend,c
  1769  00163C  0ED4               	movlw	212
  1770  00163E  6E14               	movwf	___lldiv@dividend+1,c
  1771  001640  0E0E               	movlw	14
  1772  001642  6E15               	movwf	___lldiv@dividend+2,c
  1773  001644  0E00               	movlw	0
  1774  001646  6E16               	movwf	___lldiv@dividend+3,c
  1775  001648  C024  F017         	movff	powerReduction@timerReduce_ms,___lldiv@divisor
  1776  00164C  C025  F018         	movff	powerReduction@timerReduce_ms+1,___lldiv@divisor+1
  1777  001650  C026  F019         	movff	powerReduction@timerReduce_ms+2,___lldiv@divisor+2
  1778  001654  C027  F01A         	movff	powerReduction@timerReduce_ms+3,___lldiv@divisor+3
  1779  001658  EC0B  F00C         	call	___lldiv	;wreg free
  1780  00165C  C013  F0F8         	movff	?___lldiv,_meterWatts_global
  1781  001660  C014  F0F9         	movff	?___lldiv+1,_meterWatts_global+1
  1782  001664  C015  F0FA         	movff	?___lldiv+2,_meterWatts_global+2
  1783  001668  C016  F0FB         	movff	?___lldiv+3,_meterWatts_global+3
  1784  00166C  0012               	return	
  1785  00166E                     __end_of_powerReduction:
  1786                           	opt stack 0
  1787                           tblptru	equ	0xFF8
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postinc2	equ	0xFDE
  1792                           postdec2	equ	0xFDD
  1793                           fsr2h	equ	0xFDA
  1794                           fsr2l	equ	0xFD9
  1795                           status	equ	0xFD8
  1796                           
  1797 ;; *************** function _timerGetCount *****************
  1798 ;; Defined at:
  1799 ;;		line 95 in file "Timer.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  timerIndex      2   18[COMRAM] int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  4   18[COMRAM] unsigned long 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1813 ;;      Params:         4       0       0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0       0       0
  1815 ;;      Temps:          2       0       0       0       0       0       0
  1816 ;;      Totals:         6       0       0       0       0       0       0
  1817 ;;Total ram usage:        6 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;;		_mcpUpdatePower
  1825 ;;		_powerReduction
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text5
  1830  001F14                     __ptext5:
  1831                           	opt stack 0
  1832  001F14                     _timerGetCount:
  1833                           	opt stack 29
  1834                           
  1835                           ;Timer.c: 97: return timerCount_ms[timerIndex];
  1836                           
  1837                           ;incstack = 0
  1838  001F14  0EE0               	movlw	low _timerCount_ms
  1839  001F16  6E17               	movwf	??_timerGetCount& (0+255),c
  1840  001F18  0E00               	movlw	high _timerCount_ms
  1841  001F1A  6E18               	movwf	(??_timerGetCount+1)& (0+255),c
  1842  001F1C  90D8               	bcf	status,0,c
  1843  001F1E  3413               	rlcf	timerGetCount@timerIndex,w,c
  1844  001F20  6ED9               	movwf	fsr2l,c
  1845  001F22  3414               	rlcf	timerGetCount@timerIndex+1,w,c
  1846  001F24  6EDA               	movwf	fsr2h,c
  1847  001F26  90D8               	bcf	status,0,c
  1848  001F28  36D9               	rlcf	fsr2l,f,c
  1849  001F2A  36DA               	rlcf	fsr2h,f,c
  1850  001F2C  5017               	movf	??_timerGetCount,w,c
  1851  001F2E  26D9               	addwf	fsr2l,f,c
  1852  001F30  5018               	movf	??_timerGetCount+1,w,c
  1853  001F32  22DA               	addwfc	fsr2h,f,c
  1854  001F34  CFDE F013          	movff	postinc2,?_timerGetCount
  1855  001F38  CFDE F014          	movff	postinc2,?_timerGetCount+1
  1856  001F3C  CFDE F015          	movff	postinc2,?_timerGetCount+2
  1857  001F40  CFDE F016          	movff	postinc2,?_timerGetCount+3
  1858  001F44  0012               	return	
  1859  001F46                     __end_of_timerGetCount:
  1860                           	opt stack 0
  1861                           tblptru	equ	0xFF8
  1862                           intcon	equ	0xFF2
  1863                           postinc0	equ	0xFEE
  1864                           wreg	equ	0xFE8
  1865                           postinc2	equ	0xFDE
  1866                           postdec2	equ	0xFDD
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _powerCalculateWatts *****************
  1872 ;; Defined at:
  1873 ;;		line 309 in file "MCP3909_Interface.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  timer_ms        4   31[COMRAM] unsigned long 
  1876 ;;  outHF           1   35[COMRAM] unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  calcWatts       2   36[COMRAM] int 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  4   31[COMRAM] unsigned long 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         5       0       0       0       0       0       0
  1889 ;;      Locals:         2       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0
  1891 ;;      Totals:         7       0       0       0       0       0       0
  1892 ;;Total ram usage:        7 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		___lldiv
  1897 ;; This function is called by:
  1898 ;;		_mcpUpdatePower
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text6
  1903  00190E                     __ptext6:
  1904                           	opt stack 0
  1905  00190E                     _powerCalculateWatts:
  1906                           	opt stack 27
  1907                           
  1908                           ;MCP3909_Interface.c: 315: int calcWatts;
  1909                           ;MCP3909_Interface.c: 317: if( outHF == 1 )
  1910                           
  1911                           ;incstack = 0
  1912  00190E  0424               	decf	powerCalculateWatts@outHF,w,c
  1913  001910  A4D8               	btfss	status,2,c
  1914  001912  D013               	goto	l559
  1915                           
  1916                           ;MCP3909_Interface.c: 318: {
  1917                           ;MCP3909_Interface.c: 320: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1918  001914  0EE0               	movlw	224
  1919  001916  6E13               	movwf	___lldiv@dividend,c
  1920  001918  0ED4               	movlw	212
  1921  00191A  6E14               	movwf	___lldiv@dividend+1,c
  1922  00191C  0E0E               	movlw	14
  1923  00191E  6E15               	movwf	___lldiv@dividend+2,c
  1924  001920  0E00               	movlw	0
  1925  001922  6E16               	movwf	___lldiv@dividend+3,c
  1926  001924  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1927  001928  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1928  00192C  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1929  001930  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1930  001934  EC0B  F00C         	call	___lldiv	;wreg free
  1931  001938  D012               	goto	L3
  1932  00193A                     l559:
  1933                           
  1934                           ;MCP3909_Interface.c: 322: else
  1935                           ;MCP3909_Interface.c: 323: {
  1936                           ;MCP3909_Interface.c: 325: calcWatts = (((((unsigned long) 27000 * (unsigned long) 3600)
      +                           / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned lo
      +                          ng) timer_ms;
  1937  00193A  0EE0               	movlw	224
  1938  00193C  6E13               	movwf	___lldiv@dividend,c
  1939  00193E  0ED4               	movlw	212
  1940  001940  6E14               	movwf	___lldiv@dividend+1,c
  1941  001942  0E0E               	movlw	14
  1942  001944  6E15               	movwf	___lldiv@dividend+2,c
  1943  001946  0E00               	movlw	0
  1944  001948  6E16               	movwf	___lldiv@dividend+3,c
  1945  00194A  C020  F017         	movff	powerCalculateWatts@timer_ms,___lldiv@divisor
  1946  00194E  C021  F018         	movff	powerCalculateWatts@timer_ms+1,___lldiv@divisor+1
  1947  001952  C022  F019         	movff	powerCalculateWatts@timer_ms+2,___lldiv@divisor+2
  1948  001956  C023  F01A         	movff	powerCalculateWatts@timer_ms+3,___lldiv@divisor+3
  1949  00195A  EC0B  F00C         	call	___lldiv	;wreg free
  1950  00195E                     L3:
  1951  00195E  C013  F025         	movff	?___lldiv,powerCalculateWatts@calcWatts
  1952  001962  C014  F026         	movff	?___lldiv+1,powerCalculateWatts@calcWatts+1
  1953                           
  1954                           ;MCP3909_Interface.c: 326: }
  1955                           ;MCP3909_Interface.c: 328: return calcWatts;
  1956  001966  C025  F020         	movff	powerCalculateWatts@calcWatts,?_powerCalculateWatts
  1957  00196A  C026  F021         	movff	powerCalculateWatts@calcWatts+1,?_powerCalculateWatts+1
  1958  00196E  0E00               	movlw	0
  1959  001970  BE21               	btfsc	?_powerCalculateWatts+1,7,c
  1960  001972  0EFF               	movlw	-1
  1961  001974  6E22               	movwf	?_powerCalculateWatts+2,c
  1962  001976  6E23               	movwf	?_powerCalculateWatts+3,c
  1963  001978  0012               	return	
  1964  00197A                     __end_of_powerCalculateWatts:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           intcon	equ	0xFF2
  1968                           postinc0	equ	0xFEE
  1969                           wreg	equ	0xFE8
  1970                           postinc2	equ	0xFDE
  1971                           postdec2	equ	0xFDD
  1972                           fsr2h	equ	0xFDA
  1973                           fsr2l	equ	0xFD9
  1974                           status	equ	0xFD8
  1975                           
  1976 ;; *************** function _ledGoToggle *****************
  1977 ;; Defined at:
  1978 ;;		line 286 in file "LEDControl.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  ledNum          2   32[COMRAM] int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1992 ;;      Params:         2       0       0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		_ledToggle
  2001 ;; This function is called by:
  2002 ;;		_mcpUpdatePower
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text7
  2007  00216E                     __ptext7:
  2008                           	opt stack 0
  2009  00216E                     _ledGoToggle:
  2010                           	opt stack 26
  2011                           
  2012                           ;LEDControl.c: 288: if( 1 != 1 )
  2013                           
  2014                           ;incstack = 0
  2015  00216E  0012               	return	
  2016  002170                     __end_of_ledGoToggle:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           intcon	equ	0xFF2
  2020                           postinc0	equ	0xFEE
  2021                           wreg	equ	0xFE8
  2022                           postinc2	equ	0xFDE
  2023                           postdec2	equ	0xFDD
  2024                           fsr2h	equ	0xFDA
  2025                           fsr2l	equ	0xFD9
  2026                           status	equ	0xFD8
  2027                           
  2028 ;; *************** function _mcpInit *****************
  2029 ;; Defined at:
  2030 ;;		line 155 in file "MCP3909_Interface.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2044 ;;      Params:         0       0       0       0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0
  2047 ;;      Totals:         0       0       0       0       0       0       0
  2048 ;;Total ram usage:        0 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    3
  2051 ;; This function calls:
  2052 ;;		_delayMS10
  2053 ;;		_mcpInitF
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text8
  2060  001FD2                     __ptext8:
  2061                           	opt stack 0
  2062  001FD2                     _mcpInit:
  2063                           	opt stack 27
  2064                           
  2065                           ;MCP3909_Interface.c: 157: TRISAbits.TRISA3 = 1;
  2066                           
  2067                           ;incstack = 0
  2068  001FD2  8692               	bsf	3986,3,c	;volatile
  2069                           
  2070                           ;MCP3909_Interface.c: 158: TRISAbits.TRISA2 = 1;
  2071  001FD4  8492               	bsf	3986,2,c	;volatile
  2072                           
  2073                           ;MCP3909_Interface.c: 159: TRISAbits.TRISA4 = 1;
  2074  001FD6  8892               	bsf	3986,4,c	;volatile
  2075                           
  2076                           ;MCP3909_Interface.c: 161: meterEnergyUsedPart = 0;
  2077  001FD8  0E00               	movlw	0
  2078  001FDA  0100               	movlb	0	; () banked
  2079  001FDC  6FF4               	movwf	_meterEnergyUsedPart& (0+255),b
  2080  001FDE  0E00               	movlw	0
  2081  001FE0  6FF5               	movwf	(_meterEnergyUsedPart+1)& (0+255),b
  2082  001FE2  0E00               	movlw	0
  2083  001FE4  6FF6               	movwf	(_meterEnergyUsedPart+2)& (0+255),b
  2084  001FE6  0E00               	movlw	0
  2085  001FE8  6FF7               	movwf	(_meterEnergyUsedPart+3)& (0+255),b
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;MCP3909_Interface.c: 163: delayMS10( 100 );
  2089  001FEA  0E00               	movlw	0
  2090  001FEC  6E14               	movwf	delayMS10@count+1,c
  2091  001FEE  0E64               	movlw	100
  2092  001FF0  6E13               	movwf	delayMS10@count,c
  2093  001FF2  ECA3  F00F         	call	_delayMS10	;wreg free
  2094                           
  2095                           ;MCP3909_Interface.c: 165: mcpInitF( );
  2096  001FF6  ECBD  F00C         	call	_mcpInitF	;wreg free
  2097  001FFA  0012               	return	
  2098  001FFC                     __end_of_mcpInit:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           intcon	equ	0xFF2
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postinc2	equ	0xFDE
  2105                           postdec2	equ	0xFDD
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _mcpInitF *****************
  2111 ;; Defined at:
  2112 ;;		line 170 in file "MCP3909_Interface.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2126 ;;      Params:         0       0       0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0
  2129 ;;      Totals:         1       0       0       0       0       0       0
  2130 ;;Total ram usage:        1 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    2
  2133 ;; This function calls:
  2134 ;;		_delayMS10
  2135 ;; This function is called by:
  2136 ;;		_mcpInit
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text9
  2141  00197A                     __ptext9:
  2142                           	opt stack 0
  2143  00197A                     _mcpInitF:
  2144                           	opt stack 27
  2145                           
  2146                           ;MCP3909_Interface.c: 175: TRISCbits.TRISC6 = 0;
  2147                           
  2148                           ;incstack = 0
  2149  00197A  9C94               	bcf	3988,6,c	;volatile
  2150                           
  2151                           ;MCP3909_Interface.c: 176: TRISCbits.TRISC7 = 0;
  2152  00197C  9E94               	bcf	3988,7,c	;volatile
  2153                           
  2154                           ;MCP3909_Interface.c: 177: TRISCbits.TRISC4 = 0;
  2155  00197E  9894               	bcf	3988,4,c	;volatile
  2156                           
  2157                           ;MCP3909_Interface.c: 178: TRISCbits.TRISC3 = 0;
  2158  001980  9694               	bcf	3988,3,c	;volatile
  2159                           
  2160                           ;MCP3909_Interface.c: 181: LATCbits.LC7 = 0;
  2161  001982  9E8B               	bcf	3979,7,c	;volatile
  2162                           
  2163                           ;MCP3909_Interface.c: 182: LATCbits.LC4 = 0;
  2164  001984  988B               	bcf	3979,4,c	;volatile
  2165                           
  2166                           ;MCP3909_Interface.c: 183: LATCbits.LC4 = 0;
  2167  001986  988B               	bcf	3979,4,c	;volatile
  2168                           
  2169                           ;MCP3909_Interface.c: 185: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2170  001988  0E1A               	movlw	26
  2171  00198A  6E18               	movwf	??_mcpInitF& (0+255),c
  2172  00198C  0EF8               	movlw	248
  2173  00198E                     u3637:
  2174  00198E  2EE8               	decfsz	wreg,f,c
  2175  001990  D7FE               	bra	u3637
  2176  001992  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2177  001994  D7FC               	bra	u3637
  2178  001996  D000               	nop2	
  2179                           
  2180                           ;MCP3909_Interface.c: 186: LATCbits.LATC6 = 0;
  2181  001998  9C8B               	bcf	3979,6,c	;volatile
  2182                           
  2183                           ;MCP3909_Interface.c: 187: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2184  00199A  0E1A               	movlw	26
  2185  00199C  6E18               	movwf	??_mcpInitF& (0+255),c
  2186  00199E  0EF8               	movlw	248
  2187  0019A0                     u3647:
  2188  0019A0  2EE8               	decfsz	wreg,f,c
  2189  0019A2  D7FE               	bra	u3647
  2190  0019A4  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2191  0019A6  D7FC               	bra	u3647
  2192  0019A8  D000               	nop2	
  2193                           
  2194                           ;MCP3909_Interface.c: 189: LATCbits.LC7 = 0;
  2195  0019AA  9E8B               	bcf	3979,7,c	;volatile
  2196                           
  2197                           ;MCP3909_Interface.c: 190: LATCbits.LC4 = 0;
  2198  0019AC  988B               	bcf	3979,4,c	;volatile
  2199                           
  2200                           ;MCP3909_Interface.c: 191: LATCbits.LC4 = 0;
  2201  0019AE  988B               	bcf	3979,4,c	;volatile
  2202                           
  2203                           ;MCP3909_Interface.c: 193: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2204  0019B0  0E1A               	movlw	26
  2205  0019B2  6E18               	movwf	??_mcpInitF& (0+255),c
  2206  0019B4  0EF8               	movlw	248
  2207  0019B6                     u3657:
  2208  0019B6  2EE8               	decfsz	wreg,f,c
  2209  0019B8  D7FE               	bra	u3657
  2210  0019BA  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2211  0019BC  D7FC               	bra	u3657
  2212  0019BE  D000               	nop2	
  2213                           
  2214                           ;MCP3909_Interface.c: 195: LATCbits.LC7 = 1;
  2215  0019C0  8E8B               	bsf	3979,7,c	;volatile
  2216                           
  2217                           ;MCP3909_Interface.c: 196: LATCbits.LC4 = 1;
  2218  0019C2  888B               	bsf	3979,4,c	;volatile
  2219                           
  2220                           ;MCP3909_Interface.c: 197: LATCbits.LC4 = 1;
  2221  0019C4  888B               	bsf	3979,4,c	;volatile
  2222                           
  2223                           ;MCP3909_Interface.c: 199: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  2224  0019C6  0E1A               	movlw	26
  2225  0019C8  6E18               	movwf	??_mcpInitF& (0+255),c
  2226  0019CA  0EF8               	movlw	248
  2227  0019CC                     u3667:
  2228  0019CC  2EE8               	decfsz	wreg,f,c
  2229  0019CE  D7FE               	bra	u3667
  2230  0019D0  2E18               	decfsz	??_mcpInitF& (0+255),f,c
  2231  0019D2  D7FC               	bra	u3667
  2232  0019D4  D000               	nop2	
  2233                           
  2234                           ;MCP3909_Interface.c: 200: LATCbits.LATC6 = 1;
  2235  0019D6  8C8B               	bsf	3979,6,c	;volatile
  2236                           
  2237                           ;MCP3909_Interface.c: 201: delayMS10( 10 );
  2238  0019D8  0E00               	movlw	0
  2239  0019DA  6E14               	movwf	delayMS10@count+1,c
  2240  0019DC  0E0A               	movlw	10
  2241  0019DE  6E13               	movwf	delayMS10@count,c
  2242  0019E0  ECA3  F00F         	call	_delayMS10	;wreg free
  2243  0019E4  0012               	return	
  2244  0019E6                     __end_of_mcpInitF:
  2245                           	opt stack 0
  2246                           tblptru	equ	0xFF8
  2247                           intcon	equ	0xFF2
  2248                           postinc0	equ	0xFEE
  2249                           wreg	equ	0xFE8
  2250                           postinc2	equ	0xFDE
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function _ledTestToggle *****************
  2257 ;; Defined at:
  2258 ;;		line 276 in file "LEDControl.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  ledNum          2   32[COMRAM] int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         2       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0
  2275 ;;      Totals:         2       0       0       0       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		_ledToggle
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text10
  2287  002144                     __ptext10:
  2288                           	opt stack 0
  2289  002144                     _ledTestToggle:
  2290                           	opt stack 27
  2291                           
  2292                           ;LEDControl.c: 279: {
  2293                           ;LEDControl.c: 280: ledToggle( ledNum );
  2294                           
  2295                           ;incstack = 0
  2296  002144  C021  F019         	movff	ledTestToggle@ledNum,ledToggle@ledNum
  2297  002148  C022  F01A         	movff	ledTestToggle@ledNum+1,ledToggle@ledNum+1
  2298  00214C  EC4C  F00C         	call	_ledToggle	;wreg free
  2299  002150  0012               	return	
  2300  002152                     __end_of_ledTestToggle:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           intcon	equ	0xFF2
  2304                           postinc0	equ	0xFEE
  2305                           wreg	equ	0xFE8
  2306                           postinc2	equ	0xFDE
  2307                           postdec2	equ	0xFDD
  2308                           fsr2h	equ	0xFDA
  2309                           fsr2l	equ	0xFD9
  2310                           status	equ	0xFD8
  2311                           
  2312 ;; *************** function _ledToggle *****************
  2313 ;; Defined at:
  2314 ;;		line 243 in file "LEDControl.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  ledNum          2   24[COMRAM] int 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  getValue        2   30[COMRAM] int 
  2319 ;;  setValue        2   28[COMRAM] int 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2329 ;;      Params:         2       0       0       0       0       0       0
  2330 ;;      Locals:         4       0       0       0       0       0       0
  2331 ;;      Temps:          2       0       0       0       0       0       0
  2332 ;;      Totals:         8       0       0       0       0       0       0
  2333 ;;Total ram usage:        8 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    2
  2336 ;; This function calls:
  2337 ;;		_ledSet
  2338 ;; This function is called by:
  2339 ;;		_ledTestToggle
  2340 ;;		_ledGoToggle
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text11
  2345  001898                     __ptext11:
  2346                           	opt stack 0
  2347  001898                     _ledToggle:
  2348                           	opt stack 26
  2349                           
  2350                           ;LEDControl.c: 246: int getValue;
  2351                           ;LEDControl.c: 247: int setValue;
  2352                           ;LEDControl.c: 249: switch( ledNum )
  2353                           
  2354                           ;incstack = 0
  2355  001898  D011               	goto	l85
  2356  00189A                     
  2357                           ;LEDControl.c: 252: getValue = PORTBbits.RB4;
  2358  00189A  A881               	btfss	3969,4,c	;volatile
  2359  00189C  D00D               	goto	u3160
  2360  00189E  D009               	goto	u3161
  2361  0018A0                     u3148:
  2362  0018A0  501B               	movf	??_ledToggle,w,c
  2363  0018A2  6E1F               	movwf	ledToggle@getValue,c
  2364  0018A4  6A20               	clrf	ledToggle@getValue+1,c
  2365                           
  2366                           ;LEDControl.c: 253: break;
  2367  0018A6  D01C               	goto	l87
  2368  0018A8                     
  2369                           ;LEDControl.c: 255: getValue = PORTCbits.RC1;
  2370  0018A8  A282               	btfss	3970,1,c	;volatile
  2371  0018AA  D006               	goto	u3160
  2372  0018AC  D002               	goto	u3161
  2373  0018AE                     
  2374                           ;LEDControl.c: 258: getValue = PORTCbits.RC0;
  2375  0018AE  A082               	btfss	3970,0,c	;volatile
  2376  0018B0  D003               	goto	u3160
  2377  0018B2                     u3161:
  2378  0018B2  6A1B               	clrf	??_ledToggle& (0+255),c
  2379  0018B4  2A1B               	incf	??_ledToggle& (0+255),f,c
  2380  0018B6  D7F4               	goto	u3148
  2381  0018B8                     u3160:
  2382  0018B8  6A1B               	clrf	??_ledToggle& (0+255),c
  2383  0018BA  D7F2               	goto	u3148
  2384  0018BC                     l85:
  2385  0018BC  C019  F01B         	movff	ledToggle@ledNum,??_ledToggle
  2386  0018C0  C01A  F01C         	movff	ledToggle@ledNum+1,??_ledToggle+1
  2387                           
  2388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2389                           ; Switch size 1, requested type "space"
  2390                           ; Number of cases is 1, Range of values is 0 to 0
  2391                           ; switch strategies available:
  2392                           ; Name         Instructions Cycles
  2393                           ; simple_byte            4     3 (average)
  2394                           ;	Chosen strategy is simple_byte
  2395  0018C4  501C               	movf	??_ledToggle+1,w,c
  2396  0018C6  0A00               	xorlw	0	; case 0
  2397  0018C8  A4D8               	btfss	status,2,c
  2398  0018CA  D00A               	goto	l87
  2399                           
  2400                           ; Switch size 1, requested type "space"
  2401                           ; Number of cases is 3, Range of values is 1 to 3
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte           10     6 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406  0018CC  501B               	movf	??_ledToggle,w,c
  2407  0018CE  0A01               	xorlw	1	; case 1
  2408  0018D0  B4D8               	btfsc	status,2,c
  2409  0018D2  D7E3               	goto	l86
  2410  0018D4  0A03               	xorlw	3	; case 2
  2411  0018D6  B4D8               	btfsc	status,2,c
  2412  0018D8  D7E7               	goto	l88
  2413  0018DA  0A01               	xorlw	1	; case 3
  2414  0018DC  B4D8               	btfsc	status,2,c
  2415  0018DE  D7E7               	goto	l89
  2416  0018E0                     l87:
  2417                           
  2418                           ;LEDControl.c: 262: if( getValue == 0 )
  2419  0018E0  501F               	movf	ledToggle@getValue,w,c
  2420  0018E2  1020               	iorwf	ledToggle@getValue+1,w,c
  2421  0018E4  A4D8               	btfss	status,2,c
  2422  0018E6  D004               	goto	l90
  2423                           
  2424                           ;LEDControl.c: 263: {
  2425                           ;LEDControl.c: 264: setValue = 1;
  2426  0018E8  0E00               	movlw	0
  2427  0018EA  6E1E               	movwf	ledToggle@setValue+1,c
  2428  0018EC  0E01               	movlw	1
  2429  0018EE  D003               	goto	L4
  2430  0018F0                     l90:
  2431                           
  2432                           ;LEDControl.c: 266: else
  2433                           ;LEDControl.c: 267: {
  2434                           ;LEDControl.c: 268: setValue = 0;
  2435  0018F0  0E00               	movlw	0
  2436  0018F2  6E1E               	movwf	ledToggle@setValue+1,c
  2437  0018F4  0E00               	movlw	0
  2438  0018F6                     L4:
  2439  0018F6  6E1D               	movwf	ledToggle@setValue,c
  2440                           
  2441                           ;LEDControl.c: 269: }
  2442                           ;LEDControl.c: 271: ledSet( ledNum, setValue );
  2443  0018F8  C019  F013         	movff	ledToggle@ledNum,ledSet@ledNum
  2444  0018FC  C01A  F014         	movff	ledToggle@ledNum+1,ledSet@ledNum+1
  2445  001900  C01D  F015         	movff	ledToggle@setValue,ledSet@setValue
  2446  001904  C01E  F016         	movff	ledToggle@setValue+1,ledSet@setValue+1
  2447  001908  EC38  F00E         	call	_ledSet	;wreg free
  2448  00190C  0012               	return	
  2449  00190E                     __end_of_ledToggle:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           intcon	equ	0xFF2
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           postinc2	equ	0xFDE
  2456                           postdec2	equ	0xFDD
  2457                           fsr2h	equ	0xFDA
  2458                           fsr2l	equ	0xFD9
  2459                           status	equ	0xFD8
  2460                           
  2461 ;; *************** function _ledSetAllOn *****************
  2462 ;; Defined at:
  2463 ;;		line 187 in file "LEDControl.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		_ledSetAll
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;;		_ledTestSetAllOn
  2489 ;;		_ledGoSetAllOn
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text12
  2494  002090                     __ptext12:
  2495                           	opt stack 0
  2496  002090                     _ledSetAllOn:
  2497                           	opt stack 27
  2498                           
  2499                           ;LEDControl.c: 189: ledSetAll( 1, 1, 1 );
  2500                           
  2501                           ;incstack = 0
  2502  002090  0E00               	movlw	0
  2503  002092  6E1A               	movwf	ledSetAll@led1Value+1,c
  2504  002094  0E01               	movlw	1
  2505  002096  6E19               	movwf	ledSetAll@led1Value,c
  2506  002098  0E00               	movlw	0
  2507  00209A  6E1C               	movwf	ledSetAll@led2Value+1,c
  2508  00209C  0E01               	movlw	1
  2509  00209E  6E1B               	movwf	ledSetAll@led2Value,c
  2510  0020A0  0E00               	movlw	0
  2511  0020A2  6E1E               	movwf	ledSetAll@led3Value+1,c
  2512  0020A4  0E01               	movlw	1
  2513  0020A6  6E1D               	movwf	ledSetAll@led3Value,c
  2514  0020A8  EC34  F00F         	call	_ledSetAll	;wreg free
  2515  0020AC  0012               	return	
  2516  0020AE                     __end_of_ledSetAllOn:
  2517                           	opt stack 0
  2518                           tblptru	equ	0xFF8
  2519                           intcon	equ	0xFF2
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _ledRun *****************
  2529 ;; Defined at:
  2530 ;;		line 334 in file "LEDControl.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  ledRunDelay     2   34[COMRAM] int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2544 ;;      Params:         2       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0
  2547 ;;      Totals:         2       0       0       0       0       0       0
  2548 ;;Total ram usage:        2 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    4
  2551 ;; This function calls:
  2552 ;;		_ledRunDown
  2553 ;;		_ledRunUp
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text13
  2560  0020EA                     __ptext13:
  2561                           	opt stack 0
  2562  0020EA                     _ledRun:
  2563                           	opt stack 26
  2564                           
  2565                           ;LEDControl.c: 336: ledRunUp( ledRunDelay );
  2566                           
  2567                           ;incstack = 0
  2568  0020EA  C023  F01F         	movff	ledRun@ledRunDelay,ledRunUp@ledRunDelay
  2569  0020EE  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunUp@ledRunDelay+1
  2570  0020F2  EC8C  F009         	call	_ledRunUp	;wreg free
  2571                           
  2572                           ;LEDControl.c: 337: ledRunDown( ledRunDelay );
  2573  0020F6  C023  F01F         	movff	ledRun@ledRunDelay,ledRunDown@ledRunDelay
  2574  0020FA  C024  F020         	movff	ledRun@ledRunDelay+1,ledRunDown@ledRunDelay+1
  2575  0020FE  ECEB  F009         	call	_ledRunDown	;wreg free
  2576  002102  0012               	return	
  2577  002104                     __end_of_ledRun:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           intcon	equ	0xFF2
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postinc2	equ	0xFDE
  2584                           postdec2	equ	0xFDD
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _ledRunUp *****************
  2590 ;; Defined at:
  2591 ;;		line 296 in file "LEDControl.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  ledRunDelay     2   30[COMRAM] int 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  delay10ms       2   32[COMRAM] int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2605 ;;      Params:         2       0       0       0       0       0       0
  2606 ;;      Locals:         2       0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0
  2608 ;;      Totals:         4       0       0       0       0       0       0
  2609 ;;Total ram usage:        4 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    3
  2612 ;; This function calls:
  2613 ;;		___awdiv
  2614 ;;		_delayMS10
  2615 ;;		_ledSetAll
  2616 ;; This function is called by:
  2617 ;;		_ledRun
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text14
  2622  001318                     __ptext14:
  2623                           	opt stack 0
  2624  001318                     _ledRunUp:
  2625                           	opt stack 26
  2626                           
  2627                           ;LEDControl.c: 299: int delay10ms;
  2628                           ;LEDControl.c: 300: delay10ms = ledRunDelay / 10;
  2629                           
  2630                           ;incstack = 0
  2631  001318  C01F  F013         	movff	ledRunUp@ledRunDelay,___awdiv@dividend
  2632  00131C  C020  F014         	movff	ledRunUp@ledRunDelay+1,___awdiv@dividend+1
  2633  001320  0E00               	movlw	0
  2634  001322  6E16               	movwf	___awdiv@divisor+1,c
  2635  001324  0E0A               	movlw	10
  2636  001326  6E15               	movwf	___awdiv@divisor,c
  2637  001328  ECC9  F00B         	call	___awdiv	;wreg free
  2638  00132C  C013  F021         	movff	?___awdiv,ledRunUp@delay10ms
  2639  001330  C014  F022         	movff	?___awdiv+1,ledRunUp@delay10ms+1
  2640                           
  2641                           ;LEDControl.c: 304: ledSetAll( 0, 0, 0 );
  2642  001334  0E00               	movlw	0
  2643  001336  6E1A               	movwf	ledSetAll@led1Value+1,c
  2644  001338  0E00               	movlw	0
  2645  00133A  6E19               	movwf	ledSetAll@led1Value,c
  2646  00133C  0E00               	movlw	0
  2647  00133E  6E1C               	movwf	ledSetAll@led2Value+1,c
  2648  001340  0E00               	movlw	0
  2649  001342  6E1B               	movwf	ledSetAll@led2Value,c
  2650  001344  0E00               	movlw	0
  2651  001346  6E1E               	movwf	ledSetAll@led3Value+1,c
  2652  001348  0E00               	movlw	0
  2653  00134A  6E1D               	movwf	ledSetAll@led3Value,c
  2654  00134C  EC34  F00F         	call	_ledSetAll	;wreg free
  2655                           
  2656                           ;LEDControl.c: 305: delayMS10( delay10ms );
  2657  001350  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2658  001354  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2659  001358  ECA3  F00F         	call	_delayMS10	;wreg free
  2660                           
  2661                           ;LEDControl.c: 306: ledSetAll( 1, 0, 0 );
  2662  00135C  0E00               	movlw	0
  2663  00135E  6E1A               	movwf	ledSetAll@led1Value+1,c
  2664  001360  0E01               	movlw	1
  2665  001362  6E19               	movwf	ledSetAll@led1Value,c
  2666  001364  0E00               	movlw	0
  2667  001366  6E1C               	movwf	ledSetAll@led2Value+1,c
  2668  001368  0E00               	movlw	0
  2669  00136A  6E1B               	movwf	ledSetAll@led2Value,c
  2670  00136C  0E00               	movlw	0
  2671  00136E  6E1E               	movwf	ledSetAll@led3Value+1,c
  2672  001370  0E00               	movlw	0
  2673  001372  6E1D               	movwf	ledSetAll@led3Value,c
  2674  001374  EC34  F00F         	call	_ledSetAll	;wreg free
  2675                           
  2676                           ;LEDControl.c: 307: delayMS10( delay10ms );
  2677  001378  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2678  00137C  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2679  001380  ECA3  F00F         	call	_delayMS10	;wreg free
  2680                           
  2681                           ;LEDControl.c: 308: ledSetAll( 0, 1, 0 );
  2682  001384  0E00               	movlw	0
  2683  001386  6E1A               	movwf	ledSetAll@led1Value+1,c
  2684  001388  0E00               	movlw	0
  2685  00138A  6E19               	movwf	ledSetAll@led1Value,c
  2686  00138C  0E00               	movlw	0
  2687  00138E  6E1C               	movwf	ledSetAll@led2Value+1,c
  2688  001390  0E01               	movlw	1
  2689  001392  6E1B               	movwf	ledSetAll@led2Value,c
  2690  001394  0E00               	movlw	0
  2691  001396  6E1E               	movwf	ledSetAll@led3Value+1,c
  2692  001398  0E00               	movlw	0
  2693  00139A  6E1D               	movwf	ledSetAll@led3Value,c
  2694  00139C  EC34  F00F         	call	_ledSetAll	;wreg free
  2695                           
  2696                           ;LEDControl.c: 309: delayMS10( delay10ms );
  2697  0013A0  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2698  0013A4  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2699  0013A8  ECA3  F00F         	call	_delayMS10	;wreg free
  2700                           
  2701                           ;LEDControl.c: 310: ledSetAll( 0, 0, 1 );
  2702  0013AC  0E00               	movlw	0
  2703  0013AE  6E1A               	movwf	ledSetAll@led1Value+1,c
  2704  0013B0  0E00               	movlw	0
  2705  0013B2  6E19               	movwf	ledSetAll@led1Value,c
  2706  0013B4  0E00               	movlw	0
  2707  0013B6  6E1C               	movwf	ledSetAll@led2Value+1,c
  2708  0013B8  0E00               	movlw	0
  2709  0013BA  6E1B               	movwf	ledSetAll@led2Value,c
  2710  0013BC  0E00               	movlw	0
  2711  0013BE  6E1E               	movwf	ledSetAll@led3Value+1,c
  2712  0013C0  0E01               	movlw	1
  2713  0013C2  6E1D               	movwf	ledSetAll@led3Value,c
  2714  0013C4  EC34  F00F         	call	_ledSetAll	;wreg free
  2715                           
  2716                           ;LEDControl.c: 311: delayMS10( delay10ms );
  2717  0013C8  C021  F013         	movff	ledRunUp@delay10ms,delayMS10@count
  2718  0013CC  C022  F014         	movff	ledRunUp@delay10ms+1,delayMS10@count+1
  2719  0013D0  ECA3  F00F         	call	_delayMS10	;wreg free
  2720  0013D4  0012               	return	
  2721  0013D6                     __end_of_ledRunUp:
  2722                           	opt stack 0
  2723                           tblptru	equ	0xFF8
  2724                           intcon	equ	0xFF2
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _ledRunDown *****************
  2734 ;; Defined at:
  2735 ;;		line 316 in file "LEDControl.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  ledRunDelay     2   30[COMRAM] int 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  delay10ms       2   32[COMRAM] int 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2749 ;;      Params:         2       0       0       0       0       0       0
  2750 ;;      Locals:         2       0       0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0
  2752 ;;      Totals:         4       0       0       0       0       0       0
  2753 ;;Total ram usage:        4 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    3
  2756 ;; This function calls:
  2757 ;;		___awdiv
  2758 ;;		_delayMS10
  2759 ;;		_ledSetAll
  2760 ;; This function is called by:
  2761 ;;		_ledRun
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text15
  2766  0013D6                     __ptext15:
  2767                           	opt stack 0
  2768  0013D6                     _ledRunDown:
  2769                           	opt stack 26
  2770                           
  2771                           ;LEDControl.c: 319: int delay10ms;
  2772                           ;LEDControl.c: 320: delay10ms = ledRunDelay / 10;
  2773                           
  2774                           ;incstack = 0
  2775  0013D6  C01F  F013         	movff	ledRunDown@ledRunDelay,___awdiv@dividend
  2776  0013DA  C020  F014         	movff	ledRunDown@ledRunDelay+1,___awdiv@dividend+1
  2777  0013DE  0E00               	movlw	0
  2778  0013E0  6E16               	movwf	___awdiv@divisor+1,c
  2779  0013E2  0E0A               	movlw	10
  2780  0013E4  6E15               	movwf	___awdiv@divisor,c
  2781  0013E6  ECC9  F00B         	call	___awdiv	;wreg free
  2782  0013EA  C013  F021         	movff	?___awdiv,ledRunDown@delay10ms
  2783  0013EE  C014  F022         	movff	?___awdiv+1,ledRunDown@delay10ms+1
  2784                           
  2785                           ;LEDControl.c: 322: ledSetAll( 0, 0, 1 );
  2786  0013F2  0E00               	movlw	0
  2787  0013F4  6E1A               	movwf	ledSetAll@led1Value+1,c
  2788  0013F6  0E00               	movlw	0
  2789  0013F8  6E19               	movwf	ledSetAll@led1Value,c
  2790  0013FA  0E00               	movlw	0
  2791  0013FC  6E1C               	movwf	ledSetAll@led2Value+1,c
  2792  0013FE  0E00               	movlw	0
  2793  001400  6E1B               	movwf	ledSetAll@led2Value,c
  2794  001402  0E00               	movlw	0
  2795  001404  6E1E               	movwf	ledSetAll@led3Value+1,c
  2796  001406  0E01               	movlw	1
  2797  001408  6E1D               	movwf	ledSetAll@led3Value,c
  2798  00140A  EC34  F00F         	call	_ledSetAll	;wreg free
  2799                           
  2800                           ;LEDControl.c: 323: delayMS10( delay10ms );
  2801  00140E  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2802  001412  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2803  001416  ECA3  F00F         	call	_delayMS10	;wreg free
  2804                           
  2805                           ;LEDControl.c: 324: ledSetAll( 0, 1, 0 );
  2806  00141A  0E00               	movlw	0
  2807  00141C  6E1A               	movwf	ledSetAll@led1Value+1,c
  2808  00141E  0E00               	movlw	0
  2809  001420  6E19               	movwf	ledSetAll@led1Value,c
  2810  001422  0E00               	movlw	0
  2811  001424  6E1C               	movwf	ledSetAll@led2Value+1,c
  2812  001426  0E01               	movlw	1
  2813  001428  6E1B               	movwf	ledSetAll@led2Value,c
  2814  00142A  0E00               	movlw	0
  2815  00142C  6E1E               	movwf	ledSetAll@led3Value+1,c
  2816  00142E  0E00               	movlw	0
  2817  001430  6E1D               	movwf	ledSetAll@led3Value,c
  2818  001432  EC34  F00F         	call	_ledSetAll	;wreg free
  2819                           
  2820                           ;LEDControl.c: 325: delayMS10( delay10ms );
  2821  001436  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2822  00143A  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2823  00143E  ECA3  F00F         	call	_delayMS10	;wreg free
  2824                           
  2825                           ;LEDControl.c: 326: ledSetAll( 1, 0, 0 );
  2826  001442  0E00               	movlw	0
  2827  001444  6E1A               	movwf	ledSetAll@led1Value+1,c
  2828  001446  0E01               	movlw	1
  2829  001448  6E19               	movwf	ledSetAll@led1Value,c
  2830  00144A  0E00               	movlw	0
  2831  00144C  6E1C               	movwf	ledSetAll@led2Value+1,c
  2832  00144E  0E00               	movlw	0
  2833  001450  6E1B               	movwf	ledSetAll@led2Value,c
  2834  001452  0E00               	movlw	0
  2835  001454  6E1E               	movwf	ledSetAll@led3Value+1,c
  2836  001456  0E00               	movlw	0
  2837  001458  6E1D               	movwf	ledSetAll@led3Value,c
  2838  00145A  EC34  F00F         	call	_ledSetAll	;wreg free
  2839                           
  2840                           ;LEDControl.c: 327: delayMS10( delay10ms );
  2841  00145E  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2842  001462  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2843  001466  ECA3  F00F         	call	_delayMS10	;wreg free
  2844                           
  2845                           ;LEDControl.c: 328: ledSetAll( 0, 0, 0 );
  2846  00146A  0E00               	movlw	0
  2847  00146C  6E1A               	movwf	ledSetAll@led1Value+1,c
  2848  00146E  0E00               	movlw	0
  2849  001470  6E19               	movwf	ledSetAll@led1Value,c
  2850  001472  0E00               	movlw	0
  2851  001474  6E1C               	movwf	ledSetAll@led2Value+1,c
  2852  001476  0E00               	movlw	0
  2853  001478  6E1B               	movwf	ledSetAll@led2Value,c
  2854  00147A  0E00               	movlw	0
  2855  00147C  6E1E               	movwf	ledSetAll@led3Value+1,c
  2856  00147E  0E00               	movlw	0
  2857  001480  6E1D               	movwf	ledSetAll@led3Value,c
  2858  001482  EC34  F00F         	call	_ledSetAll	;wreg free
  2859                           
  2860                           ;LEDControl.c: 329: delayMS10( delay10ms );
  2861  001486  C021  F013         	movff	ledRunDown@delay10ms,delayMS10@count
  2862  00148A  C022  F014         	movff	ledRunDown@delay10ms+1,delayMS10@count+1
  2863  00148E  ECA3  F00F         	call	_delayMS10	;wreg free
  2864  001492  0012               	return	
  2865  001494                     __end_of_ledRunDown:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           intcon	equ	0xFF2
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _delayMS10 *****************
  2878 ;; Defined at:
  2879 ;;		line 111 in file "Timer.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  count           2   18[COMRAM] int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  inx             2   21[COMRAM] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2893 ;;      Params:         2       0       0       0       0       0       0
  2894 ;;      Locals:         2       0       0       0       0       0       0
  2895 ;;      Temps:          1       0       0       0       0       0       0
  2896 ;;      Totals:         5       0       0       0       0       0       0
  2897 ;;Total ram usage:        5 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_ledRunUp
  2904 ;;		_ledRunDown
  2905 ;;		_mcpInit
  2906 ;;		_mcpInitF
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text16
  2911  001F46                     __ptext16:
  2912                           	opt stack 0
  2913  001F46                     _delayMS10:
  2914                           	opt stack 27
  2915                           
  2916                           ;Timer.c: 113: for( int inx = 0; inx < count; inx++ )
  2917                           
  2918                           ;incstack = 0
  2919  001F46  0E00               	movlw	0
  2920  001F48  6E17               	movwf	delayMS10@inx+1,c
  2921  001F4A  0E00               	movlw	0
  2922  001F4C  6E16               	movwf	delayMS10@inx,c
  2923  001F4E  D009               	goto	l600
  2924  001F50                     
  2925                           ;Timer.c: 114: {
  2926                           ;Timer.c: 115: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  2927  001F50  0E34               	movlw	52
  2928  001F52  6E15               	movwf	??_delayMS10& (0+255),c
  2929  001F54  0EF2               	movlw	242
  2930  001F56                     u3677:
  2931  001F56  2EE8               	decfsz	wreg,f,c
  2932  001F58  D7FE               	bra	u3677
  2933  001F5A  2E15               	decfsz	??_delayMS10& (0+255),f,c
  2934  001F5C  D7FC               	bra	u3677
  2935  001F5E  4A16               	infsnz	delayMS10@inx,f,c
  2936  001F60  2A17               	incf	delayMS10@inx+1,f,c
  2937  001F62                     l600:
  2938  001F62  5013               	movf	delayMS10@count,w,c
  2939  001F64  5C16               	subwf	delayMS10@inx,w,c
  2940  001F66  5017               	movf	delayMS10@inx+1,w,c
  2941  001F68  0A80               	xorlw	128
  2942  001F6A  6E15               	movwf	??_delayMS10& (0+255),c
  2943  001F6C  5014               	movf	delayMS10@count+1,w,c
  2944  001F6E  0A80               	xorlw	128
  2945  001F70  5815               	subwfb	??_delayMS10& (0+255),w,c
  2946  001F72  B0D8               	btfsc	status,0,c
  2947  001F74  0012               	return	
  2948  001F76  D7EC               	goto	l601
  2949  001F78                     __end_of_delayMS10:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           intcon	equ	0xFF2
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           postinc2	equ	0xFDE
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function ___awdiv *****************
  2962 ;; Defined at:
  2963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  dividend        2   18[COMRAM] int 
  2966 ;;  divisor         2   20[COMRAM] int 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  quotient        2   24[COMRAM] int 
  2969 ;;  sign            1   23[COMRAM] unsigned char 
  2970 ;;  counter         1   22[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2   18[COMRAM] int 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2980 ;;      Params:         4       0       0       0       0       0       0
  2981 ;;      Locals:         4       0       0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0
  2983 ;;      Totals:         8       0       0       0       0       0       0
  2984 ;;Total ram usage:        8 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_ledRunUp
  2991 ;;		_ledRunDown
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text17
  2996  001792                     __ptext17:
  2997                           	opt stack 0
  2998  001792                     ___awdiv:
  2999                           	opt stack 27
  3000                           
  3001                           ;incstack = 0
  3002  001792  0E00               	movlw	0
  3003  001794  6E18               	movwf	___awdiv@sign,c
  3004  001796  AE16               	btfss	___awdiv@divisor+1,7,c
  3005  001798  D006               	goto	l800
  3006  00179A  6C15               	negf	___awdiv@divisor,c
  3007  00179C  1E16               	comf	___awdiv@divisor+1,f,c
  3008  00179E  B0D8               	btfsc	status,0,c
  3009  0017A0  2A16               	incf	___awdiv@divisor+1,f,c
  3010  0017A2  0E01               	movlw	1
  3011  0017A4  6E18               	movwf	___awdiv@sign,c
  3012  0017A6                     l800:
  3013  0017A6  AE14               	btfss	___awdiv@dividend+1,7,c
  3014  0017A8  D006               	goto	l801
  3015  0017AA  6C13               	negf	___awdiv@dividend,c
  3016  0017AC  1E14               	comf	___awdiv@dividend+1,f,c
  3017  0017AE  B0D8               	btfsc	status,0,c
  3018  0017B0  2A14               	incf	___awdiv@dividend+1,f,c
  3019  0017B2  0E01               	movlw	1
  3020  0017B4  1A18               	xorwf	___awdiv@sign,f,c
  3021  0017B6                     l801:
  3022  0017B6  0E00               	movlw	0
  3023  0017B8  6E1A               	movwf	___awdiv@quotient+1,c
  3024  0017BA  0E00               	movlw	0
  3025  0017BC  6E19               	movwf	___awdiv@quotient,c
  3026  0017BE  5015               	movf	___awdiv@divisor,w,c
  3027  0017C0  1016               	iorwf	___awdiv@divisor+1,w,c
  3028  0017C2  B4D8               	btfsc	status,2,c
  3029  0017C4  D01C               	goto	l808
  3030  0017C6  0E01               	movlw	1
  3031  0017C8  6E17               	movwf	___awdiv@counter,c
  3032  0017CA  D004               	goto	l803
  3033  0017CC  90D8               	bcf	status,0,c
  3034  0017CE  3615               	rlcf	___awdiv@divisor,f,c
  3035  0017D0  3616               	rlcf	___awdiv@divisor+1,f,c
  3036  0017D2  2A17               	incf	___awdiv@counter,f,c
  3037  0017D4                     l803:
  3038  0017D4  AE16               	btfss	___awdiv@divisor+1,7,c
  3039  0017D6  D7FA               	goto	l804
  3040  0017D8                     u3380:
  3041  0017D8  90D8               	bcf	status,0,c
  3042  0017DA  3619               	rlcf	___awdiv@quotient,f,c
  3043  0017DC  361A               	rlcf	___awdiv@quotient+1,f,c
  3044  0017DE  5015               	movf	___awdiv@divisor,w,c
  3045  0017E0  5C13               	subwf	___awdiv@dividend,w,c
  3046  0017E2  5016               	movf	___awdiv@divisor+1,w,c
  3047  0017E4  5814               	subwfb	___awdiv@dividend+1,w,c
  3048  0017E6  A0D8               	btfss	status,0,c
  3049  0017E8  D005               	goto	l807
  3050  0017EA  5015               	movf	___awdiv@divisor,w,c
  3051  0017EC  5E13               	subwf	___awdiv@dividend,f,c
  3052  0017EE  5016               	movf	___awdiv@divisor+1,w,c
  3053  0017F0  5A14               	subwfb	___awdiv@dividend+1,f,c
  3054  0017F2  8019               	bsf	___awdiv@quotient,0,c
  3055  0017F4                     l807:
  3056  0017F4  90D8               	bcf	status,0,c
  3057  0017F6  3216               	rrcf	___awdiv@divisor+1,f,c
  3058  0017F8  3215               	rrcf	___awdiv@divisor,f,c
  3059  0017FA  2E17               	decfsz	___awdiv@counter,f,c
  3060  0017FC  D7ED               	goto	u3380
  3061  0017FE                     l808:
  3062  0017FE  5018               	movf	___awdiv@sign,w,c
  3063  001800  B4D8               	btfsc	status,2,c
  3064  001802  D004               	goto	l809
  3065  001804  6C19               	negf	___awdiv@quotient,c
  3066  001806  1E1A               	comf	___awdiv@quotient+1,f,c
  3067  001808  B0D8               	btfsc	status,0,c
  3068  00180A  2A1A               	incf	___awdiv@quotient+1,f,c
  3069  00180C                     l809:
  3070  00180C  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3071  001810  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3072  001814  0012               	return	
  3073  001816                     __end_of___awdiv:
  3074                           	opt stack 0
  3075                           tblptru	equ	0xFF8
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           wreg	equ	0xFE8
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function _ledInit *****************
  3086 ;; Defined at:
  3087 ;;		line 71 in file "LEDControl.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3101 ;;      Params:         0       0       0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		_ledSetAllOff
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text18
  3116  002152                     __ptext18:
  3117                           	opt stack 0
  3118  002152                     _ledInit:
  3119                           	opt stack 26
  3120                           
  3121                           ;LEDControl.c: 73: TRISBbits.TRISB4 = 0;
  3122                           
  3123                           ;incstack = 0
  3124  002152  9893               	bcf	3987,4,c	;volatile
  3125                           
  3126                           ;LEDControl.c: 74: TRISCbits.TRISC1 = 0;
  3127  002154  9294               	bcf	3988,1,c	;volatile
  3128                           
  3129                           ;LEDControl.c: 75: TRISCbits.TRISC0 = 0;
  3130  002156  9094               	bcf	3988,0,c	;volatile
  3131                           
  3132                           ;LEDControl.c: 77: ledSetAllOff( );
  3133  002158  EC57  F010         	call	_ledSetAllOff	;wreg free
  3134  00215C  0012               	return	
  3135  00215E                     __end_of_ledInit:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           intcon	equ	0xFF2
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _ledSetAllOff *****************
  3148 ;; Defined at:
  3149 ;;		line 194 in file "LEDControl.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3163 ;;      Params:         0       0       0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    3
  3170 ;; This function calls:
  3171 ;;		_ledSetAll
  3172 ;; This function is called by:
  3173 ;;		_ledInit
  3174 ;;		_main
  3175 ;;		_ledTestSetAllOff
  3176 ;;		_ledGoSetAllOff
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text19
  3181  0020AE                     __ptext19:
  3182                           	opt stack 0
  3183  0020AE                     _ledSetAllOff:
  3184                           	opt stack 27
  3185                           
  3186                           ;LEDControl.c: 196: ledSetAll( 0, 0, 0 );
  3187                           
  3188                           ;incstack = 0
  3189  0020AE  0E00               	movlw	0
  3190  0020B0  6E1A               	movwf	ledSetAll@led1Value+1,c
  3191  0020B2  0E00               	movlw	0
  3192  0020B4  6E19               	movwf	ledSetAll@led1Value,c
  3193  0020B6  0E00               	movlw	0
  3194  0020B8  6E1C               	movwf	ledSetAll@led2Value+1,c
  3195  0020BA  0E00               	movlw	0
  3196  0020BC  6E1B               	movwf	ledSetAll@led2Value,c
  3197  0020BE  0E00               	movlw	0
  3198  0020C0  6E1E               	movwf	ledSetAll@led3Value+1,c
  3199  0020C2  0E00               	movlw	0
  3200  0020C4  6E1D               	movwf	ledSetAll@led3Value,c
  3201  0020C6  EC34  F00F         	call	_ledSetAll	;wreg free
  3202  0020CA  0012               	return	
  3203  0020CC                     __end_of_ledSetAllOff:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           postinc2	equ	0xFDE
  3210                           postdec2	equ	0xFDD
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _ledSetAll *****************
  3216 ;; Defined at:
  3217 ;;		line 158 in file "LEDControl.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  led1Value       2   24[COMRAM] int 
  3220 ;;  led2Value       2   26[COMRAM] int 
  3221 ;;  led3Value       2   28[COMRAM] int 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3233 ;;      Params:         6       0       0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0
  3236 ;;      Totals:         6       0       0       0       0       0       0
  3237 ;;Total ram usage:        6 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    2
  3240 ;; This function calls:
  3241 ;;		_ledSet
  3242 ;; This function is called by:
  3243 ;;		_ledSetAllOn
  3244 ;;		_ledSetAllOff
  3245 ;;		_ledRunUp
  3246 ;;		_ledRunDown
  3247 ;;		_ledTestSetAll
  3248 ;;		_ledGoSetAll
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text20
  3253  001E68                     __ptext20:
  3254                           	opt stack 0
  3255  001E68                     _ledSetAll:
  3256                           	opt stack 27
  3257                           
  3258                           ;LEDControl.c: 160: ledSet( 1, led1Value );
  3259                           
  3260                           ;incstack = 0
  3261  001E68  0E00               	movlw	0
  3262  001E6A  6E14               	movwf	ledSet@ledNum+1,c
  3263  001E6C  0E01               	movlw	1
  3264  001E6E  6E13               	movwf	ledSet@ledNum,c
  3265  001E70  C019  F015         	movff	ledSetAll@led1Value,ledSet@setValue
  3266  001E74  C01A  F016         	movff	ledSetAll@led1Value+1,ledSet@setValue+1
  3267  001E78  EC38  F00E         	call	_ledSet	;wreg free
  3268                           
  3269                           ;LEDControl.c: 161: ledSet( 2, led2Value );
  3270  001E7C  0E00               	movlw	0
  3271  001E7E  6E14               	movwf	ledSet@ledNum+1,c
  3272  001E80  0E02               	movlw	2
  3273  001E82  6E13               	movwf	ledSet@ledNum,c
  3274  001E84  C01B  F015         	movff	ledSetAll@led2Value,ledSet@setValue
  3275  001E88  C01C  F016         	movff	ledSetAll@led2Value+1,ledSet@setValue+1
  3276  001E8C  EC38  F00E         	call	_ledSet	;wreg free
  3277                           
  3278                           ;LEDControl.c: 162: ledSet( 3, led3Value );
  3279  001E90  0E00               	movlw	0
  3280  001E92  6E14               	movwf	ledSet@ledNum+1,c
  3281  001E94  0E03               	movlw	3
  3282  001E96  6E13               	movwf	ledSet@ledNum,c
  3283  001E98  C01D  F015         	movff	ledSetAll@led3Value,ledSet@setValue
  3284  001E9C  C01E  F016         	movff	ledSetAll@led3Value+1,ledSet@setValue+1
  3285  001EA0  EC38  F00E         	call	_ledSet	;wreg free
  3286  001EA4  0012               	return	
  3287  001EA6                     __end_of_ledSetAll:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           intcon	equ	0xFF2
  3291                           postinc0	equ	0xFEE
  3292                           wreg	equ	0xFE8
  3293                           postinc2	equ	0xFDE
  3294                           postdec2	equ	0xFDD
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _ledSet *****************
  3300 ;; Defined at:
  3301 ;;		line 82 in file "LEDControl.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  ledNum          2   18[COMRAM] int 
  3304 ;;  setValue        2   20[COMRAM] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3316 ;;      Params:         4       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0
  3318 ;;      Temps:          2       0       0       0       0       0       0
  3319 ;;      Totals:         6       0       0       0       0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_ledSetAll
  3327 ;;		_ledToggle
  3328 ;;		_ledSetOn
  3329 ;;		_ledSetOff
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text21
  3334  001C70                     __ptext21:
  3335                           	opt stack 0
  3336  001C70                     _ledSet:
  3337                           	opt stack 26
  3338                           
  3339                           ;LEDControl.c: 84: switch( ledNum )
  3340                           
  3341                           ;incstack = 0
  3342  001C70  D012               	goto	l22
  3343  001C72                     l23:
  3344                           
  3345                           ;LEDControl.c: 87: LATBbits.LATB4 = setValue;
  3346  001C72  B015               	btfsc	ledSet@setValue,0,c
  3347  001C74  D002               	bra	u2855
  3348  001C76  988A               	bcf	3978,4,c	;volatile
  3349  001C78  D001               	bra	u2856
  3350  001C7A                     u2855:
  3351  001C7A  888A               	bsf	3978,4,c	;volatile
  3352  001C7C                     u2856:
  3353                           
  3354                           ;LEDControl.c: 88: break;
  3355  001C7C  0012               	return	
  3356  001C7E                     l25:
  3357                           
  3358                           ;LEDControl.c: 90: LATCbits.LATC1 = setValue;
  3359  001C7E  B015               	btfsc	ledSet@setValue,0,c
  3360  001C80  D002               	bra	u2865
  3361  001C82  928B               	bcf	3979,1,c	;volatile
  3362  001C84  D001               	bra	u2866
  3363  001C86                     u2865:
  3364  001C86  828B               	bsf	3979,1,c	;volatile
  3365  001C88                     u2866:
  3366                           
  3367                           ;LEDControl.c: 91: break;
  3368  001C88  0012               	return	
  3369  001C8A                     l26:
  3370                           
  3371                           ;LEDControl.c: 93: LATCbits.LATC0 = setValue;
  3372  001C8A  B015               	btfsc	ledSet@setValue,0,c
  3373  001C8C  D002               	bra	u2875
  3374  001C8E  908B               	bcf	3979,0,c	;volatile
  3375  001C90  D001               	bra	u2876
  3376  001C92                     u2875:
  3377  001C92  808B               	bsf	3979,0,c	;volatile
  3378  001C94                     u2876:
  3379                           
  3380                           ;LEDControl.c: 95: }
  3381                           
  3382                           ;LEDControl.c: 94: break;
  3383  001C94  0012               	return	
  3384  001C96                     l22:
  3385  001C96  C013  F017         	movff	ledSet@ledNum,??_ledSet
  3386  001C9A  C014  F018         	movff	ledSet@ledNum+1,??_ledSet+1
  3387                           
  3388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3389                           ; Switch size 1, requested type "space"
  3390                           ; Number of cases is 1, Range of values is 0 to 0
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte            4     3 (average)
  3394                           ;	Chosen strategy is simple_byte
  3395  001C9E  5018               	movf	??_ledSet+1,w,c
  3396  001CA0  0A00               	xorlw	0	; case 0
  3397  001CA2  A4D8               	btfss	status,2,c
  3398  001CA4  0012               	return	
  3399                           
  3400                           ; Switch size 1, requested type "space"
  3401                           ; Number of cases is 3, Range of values is 1 to 3
  3402                           ; switch strategies available:
  3403                           ; Name         Instructions Cycles
  3404                           ; simple_byte           10     6 (average)
  3405                           ;	Chosen strategy is simple_byte
  3406  001CA6  5017               	movf	??_ledSet,w,c
  3407  001CA8  0A01               	xorlw	1	; case 1
  3408  001CAA  B4D8               	btfsc	status,2,c
  3409  001CAC  D7E2               	goto	l23
  3410  001CAE  0A03               	xorlw	3	; case 2
  3411  001CB0  B4D8               	btfsc	status,2,c
  3412  001CB2  D7E5               	goto	l25
  3413  001CB4  0A01               	xorlw	1	; case 3
  3414  001CB6  A4D8               	btfss	status,2,c
  3415  001CB8  0012               	return	
  3416  001CBA  D7E7               	goto	l26
  3417  001CBC                     __end_of_ledSet:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           intcon	equ	0xFF2
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           postinc2	equ	0xFDE
  3424                           postdec2	equ	0xFDD
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function _initOSC *****************
  3430 ;; Defined at:
  3431 ;;		line 136 in file "Main_PowerSense.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3445 ;;      Params:         0       0       0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text22
  3460  002104                     __ptext22:
  3461                           	opt stack 0
  3462  002104                     _initOSC:
  3463                           	opt stack 29
  3464                           
  3465                           ;Main_PowerSense.c: 139: OSCCONbits.IDLEN = 0;
  3466                           
  3467                           ;incstack = 0
  3468  002104  9ED3               	bcf	4051,7,c	;volatile
  3469                           
  3470                           ;Main_PowerSense.c: 140: OSCCONbits.IRCF = 0b111;
  3471  002106  88D3               	bsf	4051,4,c	;volatile
  3472  002108  8AD3               	bsf	4051,5,c	;volatile
  3473  00210A  8CD3               	bsf	4051,6,c	;volatile
  3474                           
  3475                           ;Main_PowerSense.c: 141: OSCCONbits.SCS = 0b11;
  3476  00210C  0E03               	movlw	3
  3477  00210E  12D3               	iorwf	4051,f,c	;volatile
  3478                           
  3479                           ;Main_PowerSense.c: 143: OSCCON2bits.MFIOSEL = 0;
  3480  002110  98D2               	bcf	4050,4,c	;volatile
  3481                           
  3482                           ;Main_PowerSense.c: 144: OSCCON2bits.SOSCGO = 0;
  3483  002112  96D2               	bcf	4050,3,c	;volatile
  3484                           
  3485                           ;Main_PowerSense.c: 145: OSCCON2bits.PRISD = 0;
  3486  002114  94D2               	bcf	4050,2,c	;volatile
  3487                           
  3488                           ;Main_PowerSense.c: 147: OSCTUNEbits.INTSRC = 1;
  3489  002116  8E9B               	bsf	3995,7,c	;volatile
  3490                           
  3491                           ;Main_PowerSense.c: 148: OSCTUNEbits.PLLEN = 0;
  3492  002118  9C9B               	bcf	3995,6,c	;volatile
  3493  00211A  0012               	return	
  3494  00211C                     __end_of_initOSC:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           intcon	equ	0xFF2
  3498                           postinc0	equ	0xFEE
  3499                           wreg	equ	0xFE8
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _initInterruptsClear *****************
  3507 ;; Defined at:
  3508 ;;		line 172 in file "Main_PowerSense.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3522 ;;      Params:         0       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text23
  3537  001CBC                     __ptext23:
  3538                           	opt stack 0
  3539  001CBC                     _initInterruptsClear:
  3540                           	opt stack 29
  3541                           
  3542                           ;Main_PowerSense.c: 175: INTCON = 0b00000000;
  3543                           
  3544                           ;incstack = 0
  3545  001CBC  0E00               	movlw	0
  3546  001CBE  6EF2               	movwf	intcon,c	;volatile
  3547                           
  3548                           ;Main_PowerSense.c: 176: INTCON2 = 0b00000000;
  3549  001CC0  0E00               	movlw	0
  3550  001CC2  6EF1               	movwf	intcon2,c	;volatile
  3551                           
  3552                           ;Main_PowerSense.c: 177: INTCON3 = 0b00000000;
  3553  001CC4  0E00               	movlw	0
  3554  001CC6  6EF0               	movwf	intcon3,c	;volatile
  3555                           
  3556                           ;Main_PowerSense.c: 179: RCONbits.IPEN = 0;
  3557  001CC8  9ED0               	bcf	4048,7,c	;volatile
  3558                           
  3559                           ;Main_PowerSense.c: 181: PIR1 = 0b00000000;
  3560  001CCA  0E00               	movlw	0
  3561  001CCC  6E9E               	movwf	3998,c	;volatile
  3562                           
  3563                           ;Main_PowerSense.c: 182: PIR2 = 0b00000000;
  3564  001CCE  0E00               	movlw	0
  3565  001CD0  6EA1               	movwf	4001,c	;volatile
  3566                           
  3567                           ;Main_PowerSense.c: 183: PIR3 = 0b00000000;
  3568  001CD2  0E00               	movlw	0
  3569  001CD4  6EA4               	movwf	4004,c	;volatile
  3570                           
  3571                           ;Main_PowerSense.c: 184: PIR4 = 0b00000000;
  3572  001CD6  0E00               	movlw	0
  3573  001CD8  6E7B               	movwf	3963,c	;volatile
  3574                           
  3575                           ;Main_PowerSense.c: 185: PIR5 = 0b00000000;
  3576  001CDA  0E00               	movlw	0
  3577  001CDC  6E7E               	movwf	3966,c	;volatile
  3578                           
  3579                           ;Main_PowerSense.c: 187: PIE1 = 0b00000000;
  3580  001CDE  0E00               	movlw	0
  3581  001CE0  6E9D               	movwf	3997,c	;volatile
  3582                           
  3583                           ;Main_PowerSense.c: 188: PIE2 = 0b00000000;
  3584  001CE2  0E00               	movlw	0
  3585  001CE4  6EA0               	movwf	4000,c	;volatile
  3586                           
  3587                           ;Main_PowerSense.c: 189: PIE3 = 0b00000000;
  3588  001CE6  0E00               	movlw	0
  3589  001CE8  6EA3               	movwf	4003,c	;volatile
  3590                           
  3591                           ;Main_PowerSense.c: 190: PIE4 = 0b00000000;
  3592  001CEA  0E00               	movlw	0
  3593  001CEC  6E7A               	movwf	3962,c	;volatile
  3594                           
  3595                           ;Main_PowerSense.c: 191: PIE5 = 0b00000000;
  3596  001CEE  0E00               	movlw	0
  3597  001CF0  6E7D               	movwf	3965,c	;volatile
  3598                           
  3599                           ;Main_PowerSense.c: 193: IPR1 = 0b00000000;
  3600  001CF2  0E00               	movlw	0
  3601  001CF4  6E9F               	movwf	3999,c	;volatile
  3602                           
  3603                           ;Main_PowerSense.c: 194: IPR2 = 0b00000000;
  3604  001CF6  0E00               	movlw	0
  3605  001CF8  6EA2               	movwf	4002,c	;volatile
  3606                           
  3607                           ;Main_PowerSense.c: 195: IPR3 = 0b00000000;
  3608  001CFA  0E00               	movlw	0
  3609  001CFC  6EA5               	movwf	4005,c	;volatile
  3610                           
  3611                           ;Main_PowerSense.c: 196: IPR4 = 0b00000000;
  3612  001CFE  0E00               	movlw	0
  3613  001D00  6E7C               	movwf	3964,c	;volatile
  3614                           
  3615                           ;Main_PowerSense.c: 197: IPR5 = 0b00000000;
  3616  001D02  0E00               	movlw	0
  3617  001D04  6E7F               	movwf	3967,c	;volatile
  3618  001D06  0012               	return	
  3619  001D08                     __end_of_initInterruptsClear:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           intcon	equ	0xFF2
  3623                           intcon2	equ	0xFF1
  3624                           intcon3	equ	0xFF0
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _initIO *****************
  3634 ;; Defined at:
  3635 ;;		line 153 in file "Main_PowerSense.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3649 ;;      Params:         0       0       0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text24
  3664  002132                     __ptext24:
  3665                           	opt stack 0
  3666  002132                     _initIO:
  3667                           	opt stack 29
  3668                           
  3669                           ;Main_PowerSense.c: 155: ADCON0bits.ADON = 0;
  3670                           
  3671                           ;incstack = 0
  3672  002132  90C2               	bcf	4034,0,c	;volatile
  3673                           
  3674                           ;Main_PowerSense.c: 156: ANSELA = 0b00000000;
  3675  002134  0E00               	movlw	0
  3676  002136  010F               	movlb	15	; () banked
  3677  002138  6F38               	movwf	56,b	;volatile
  3678                           
  3679                           ;Main_PowerSense.c: 157: ANSELB = 0b00000000;
  3680  00213A  0E00               	movlw	0
  3681  00213C  6F39               	movwf	57,b	;volatile
  3682                           
  3683                           ;Main_PowerSense.c: 158: ANSELC = 0b00000000;
  3684  00213E  0E00               	movlw	0
  3685  002140  6F3A               	movwf	58,b	;volatile
  3686  002142  0012               	return	
  3687  002144                     __end_of_initIO:
  3688                           	opt stack 0
  3689                           tblptru	equ	0xFF8
  3690                           intcon	equ	0xFF2
  3691                           intcon2	equ	0xFF1
  3692                           intcon3	equ	0xFF0
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           postinc2	equ	0xFDE
  3696                           postdec2	equ	0xFDD
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function _commRun *****************
  3702 ;; Defined at:
  3703 ;;		line 114 in file "SlaveComm.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3717 ;;      Params:         0       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:   10
  3724 ;; This function calls:
  3725 ;;		_communications
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text25
  3732  00215E                     __ptext25:
  3733                           	opt stack 0
  3734  00215E                     _commRun:
  3735                           	opt stack 20
  3736                           
  3737                           ;SlaveComm.c: 116: communications( 0 );
  3738                           
  3739                           ; BSR set to: 15
  3740                           ;incstack = 0
  3741  00215E  0E00               	movlw	0
  3742  002160  EC6A  F008         	call	_communications
  3743  002164  0012               	return	
  3744  002166                     __end_of_commRun:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           intcon	equ	0xFF2
  3748                           intcon2	equ	0xFF1
  3749                           intcon3	equ	0xFF0
  3750                           postinc0	equ	0xFEE
  3751                           wreg	equ	0xFE8
  3752                           postinc2	equ	0xFDE
  3753                           postdec2	equ	0xFDD
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _commInit *****************
  3759 ;; Defined at:
  3760 ;;		line 107 in file "SlaveComm.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3774 ;;      Params:         0       0       0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:   10
  3781 ;; This function calls:
  3782 ;;		_communications
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text26
  3789  002166                     __ptext26:
  3790                           	opt stack 0
  3791  002166                     _commInit:
  3792                           	opt stack 20
  3793                           
  3794                           ;SlaveComm.c: 109: communications( 1 );
  3795                           
  3796                           ;incstack = 0
  3797  002166  0E01               	movlw	1
  3798  002168  EC6A  F008         	call	_communications
  3799  00216C  0012               	return	
  3800  00216E                     __end_of_commInit:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           intcon	equ	0xFF2
  3804                           intcon2	equ	0xFF1
  3805                           intcon3	equ	0xFF0
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           postinc2	equ	0xFDE
  3809                           postdec2	equ	0xFDD
  3810                           fsr2h	equ	0xFDA
  3811                           fsr2l	equ	0xFD9
  3812                           status	equ	0xFD8
  3813                           
  3814 ;; *************** function _communications *****************
  3815 ;; Defined at:
  3816 ;;		line 121 in file "SlaveComm.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  firstTime       1    wreg     unsigned char 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  firstTime       1    1[BANK1 ] unsigned char 
  3821 ;;  no_more_to_s    1    0[BANK1 ] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3831 ;;      Params:         0       0       0       0       0       0       0
  3832 ;;      Locals:         0       0       2       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0
  3834 ;;      Totals:         0       0       2       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    9
  3838 ;; This function calls:
  3839 ;;		_SPISlaveInit
  3840 ;;		_process_data
  3841 ;;		_receive_data
  3842 ;;		_resetCommunications
  3843 ;;		_send_data
  3844 ;;		_xSumMatches
  3845 ;; This function is called by:
  3846 ;;		_commInit
  3847 ;;		_commRun
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text27
  3852  0010D4                     __ptext27:
  3853                           	opt stack 0
  3854  0010D4                     _communications:
  3855                           	opt stack 20
  3856                           
  3857                           ;incstack = 0
  3858                           ;communications@firstTime stored from wreg
  3859  0010D4  0101               	movlb	1	; () banked
  3860  0010D6  6F55               	movwf	communications@firstTime& (0+255),b
  3861                           
  3862                           ;SlaveComm.c: 123: static struct buffer receive_buffer;
  3863                           ;SlaveComm.c: 124: static struct buffer send_buffer;
  3864                           ;SlaveComm.c: 126: static bool end_of_transmission_received = 0;
  3865                           ;SlaveComm.c: 127: bool no_more_to_send;
  3866                           ;SlaveComm.c: 129: static enum receive_status receive_current_state;
  3867                           ;SlaveComm.c: 132: if( firstTime == 1 )
  3868  0010D8  0101               	movlb	1	; () banked
  3869  0010DA  0555               	decf	communications@firstTime& (0+255),w,b
  3870  0010DC  A4D8               	btfss	status,2,c
  3871  0010DE  D00E               	goto	l206
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;SlaveComm.c: 133: {
  3875                           ;SlaveComm.c: 134: SPISlaveInit( );
  3876  0010E0  ECCE  F00E         	call	_SPISlaveInit	;wreg free
  3877                           
  3878                           ;SlaveComm.c: 135: send_buffer.write_position = 0;
  3879  0010E4  0E00               	movlw	0
  3880  0010E6  0101               	movlb	1	; () banked
  3881  0010E8  6F28               	movwf	(communications@send_buffer+40)& (0+255),b
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;SlaveComm.c: 136: send_buffer.read_position = 0;
  3885  0010EA  0E00               	movlw	0
  3886  0010EC  6F29               	movwf	(communications@send_buffer+41)& (0+255),b
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;SlaveComm.c: 137: resetCommunications( &send_buffer );
  3890  0010EE  0E00               	movlw	low communications@send_buffer
  3891  0010F0  6E3B               	movwf	resetCommunications@send_buffer,c
  3892  0010F2  0E01               	movlw	high communications@send_buffer
  3893  0010F4  6E3C               	movwf	resetCommunications@send_buffer+1,c
  3894  0010F6  EC9C  F00A         	call	_resetCommunications	;wreg free
  3895                           
  3896                           ;SlaveComm.c: 138: }
  3897  0010FA  0012               	return	
  3898  0010FC                     l206:
  3899                           
  3900                           ;SlaveComm.c: 139: else
  3901                           ;SlaveComm.c: 140: {
  3902                           ;SlaveComm.c: 141: receive_current_state = receive_data( &receive_buffer );
  3903  0010FC  0E2A               	movlw	low communications@receive_buffer
  3904  0010FE  6E16               	movwf	receive_data@receive_buffer,c
  3905  001100  0E01               	movlw	high communications@receive_buffer
  3906  001102  6E17               	movwf	receive_data@receive_buffer+1,c
  3907  001104  EC2C  F009         	call	_receive_data	;wreg free
  3908  001108  0100               	movlb	0	; () banked
  3909  00110A  6FFE               	movwf	communications@receive_current_state& (0+255),b
  3910                           
  3911                           ;SlaveComm.c: 143: switch( receive_current_state )
  3912  00110C  D01E               	goto	l208
  3913  00110E                     
  3914                           ; BSR set to: 0
  3915                           ;SlaveComm.c: 153: if( process_data( &receive_buffer, &send_buffer, xSumMatches(receive_
      +                          buffer) ) == 1 )
  3916                           
  3917                           ; BSR set to: 0
  3918  00110E  0E2A               	movlw	low communications@receive_buffer
  3919  001110  6FA7               	movwf	process_data@receive_buffer& (0+255),b
  3920  001112  0E01               	movlw	high communications@receive_buffer
  3921  001114  6FA8               	movwf	(process_data@receive_buffer+1)& (0+255),b
  3922  001116  0E00               	movlw	low communications@send_buffer
  3923  001118  6FA9               	movwf	process_data@send_buffer& (0+255),b
  3924  00111A  0E01               	movlw	high communications@send_buffer
  3925  00111C  6FAA               	movwf	(process_data@send_buffer+1)& (0+255),b
  3926  00111E  EE21  F02A         	lfsr	2,communications@receive_buffer
  3927  001122  EE00  F060         	lfsr	0,xSumMatches@buffer_to_chk
  3928  001126  0E29               	movlw	41
  3929  001128                     u3421:
  3930  001128  CFDB FFEB          	movff	plusw2,plusw0
  3931  00112C  06E8               	decf	wreg,f,c
  3932  00112E  E2FC               	bc	u3421
  3933  001130  EC94  F007         	call	_xSumMatches	;wreg free
  3934  001134  0100               	movlb	0	; () banked
  3935  001136  6FAB               	movwf	process_data@xSumMatches& (0+255),b
  3936  001138  EC53  F00F         	call	_process_data	;wreg free
  3937  00113C  06E8               	decf	wreg,f,c
  3938  00113E  A4D8               	btfss	status,2,c
  3939  001140  D00E               	goto	l210
  3940                           
  3941                           ;SlaveComm.c: 154: {
  3942                           ;SlaveComm.c: 155: end_of_transmission_received = 1;
  3943  001142  0E01               	movlw	1
  3944  001144  0100               	movlb	0	; () banked
  3945  001146  6FFF               	movwf	communications@end_of_transmission_received& (0+255),b
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;SlaveComm.c: 159: }
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;SlaveComm.c: 156: }
  3952                           ;SlaveComm.c: 158: break;
  3953  001148  D00A               	goto	l210
  3954  00114A                     l208:
  3955                           
  3956                           ; BSR set to: 0
  3957                           
  3958                           ; BSR set to: 0
  3959  00114A  51FE               	movf	communications@receive_current_state& (0+255),w,b
  3960                           
  3961                           ; Switch size 1, requested type "space"
  3962                           ; Number of cases is 3, Range of values is 0 to 2
  3963                           ; switch strategies available:
  3964                           ; Name         Instructions Cycles
  3965                           ; simple_byte           10     6 (average)
  3966                           ;	Chosen strategy is simple_byte
  3967  00114C  0A00               	xorlw	0	; case 0
  3968  00114E  B4D8               	btfsc	status,2,c
  3969  001150  D006               	goto	l210
  3970  001152  0A01               	xorlw	1	; case 1
  3971  001154  B4D8               	btfsc	status,2,c
  3972  001156  D003               	goto	l210
  3973  001158  0A03               	xorlw	3	; case 2
  3974  00115A  B4D8               	btfsc	status,2,c
  3975  00115C  D7D8               	goto	l212
  3976  00115E                     l210:
  3977                           
  3978                           ;SlaveComm.c: 161: no_more_to_send = send_data( &send_buffer );
  3979                           
  3980                           ; BSR set to: 0
  3981  00115E  0E00               	movlw	low communications@send_buffer
  3982  001160  6E15               	movwf	send_data@send_buffer,c
  3983  001162  0E01               	movlw	high communications@send_buffer
  3984  001164  6E16               	movwf	send_data@send_buffer+1,c
  3985  001166  EC81  F00B         	call	_send_data	;wreg free
  3986  00116A  0101               	movlb	1	; () banked
  3987  00116C  6F54               	movwf	communications@no_more_to_send& (0+255),b
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;SlaveComm.c: 164: static bool last_state_active = 0;
  3991                           ;SlaveComm.c: 165: if( PORTBbits.SS2 == 0b1 )
  3992  00116E  A081               	btfss	3969,0,c	;volatile
  3993  001170  D004               	goto	l216
  3994                           
  3995                           ; BSR set to: 1
  3996                           ;SlaveComm.c: 166: {
  3997                           ;SlaveComm.c: 167: last_state_active = 0;
  3998  001172  0E00               	movlw	0
  3999  001174  0100               	movlb	0	; () banked
  4000  001176  6FFD               	movwf	communications@last_state_active& (0+255),b
  4001                           
  4002                           ;SlaveComm.c: 168: }
  4003  001178  0012               	return	
  4004  00117A                     l216:
  4005                           
  4006                           ;SlaveComm.c: 169: else
  4007                           ;SlaveComm.c: 170: {
  4008                           ;SlaveComm.c: 171: if( last_state_active == 0 )
  4009                           
  4010                           ; BSR set to: 0
  4011  00117A  0100               	movlb	0	; () banked
  4012  00117C  51FD               	movf	communications@last_state_active& (0+255),w,b
  4013  00117E  A4D8               	btfss	status,2,c
  4014  001180  D006               	goto	l218
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;SlaveComm.c: 172: {
  4018                           ;SlaveComm.c: 173: resetCommunications( &send_buffer );
  4019  001182  0E00               	movlw	low communications@send_buffer
  4020  001184  6E3B               	movwf	resetCommunications@send_buffer,c
  4021  001186  0E01               	movlw	high communications@send_buffer
  4022  001188  6E3C               	movwf	resetCommunications@send_buffer+1,c
  4023  00118A  EC9C  F00A         	call	_resetCommunications	;wreg free
  4024  00118E                     l218:
  4025                           
  4026                           ;SlaveComm.c: 174: }
  4027                           ;SlaveComm.c: 176: last_state_active = 1;
  4028  00118E  0E01               	movlw	1
  4029  001190  0100               	movlb	0	; () banked
  4030  001192  6FFD               	movwf	communications@last_state_active& (0+255),b
  4031                           
  4032                           ; BSR set to: 0
  4033                           
  4034                           ; BSR set to: 0
  4035  001194  0012               	return	
  4036  001196                     __end_of_communications:
  4037                           	opt stack 0
  4038                           tblptru	equ	0xFF8
  4039                           intcon	equ	0xFF2
  4040                           intcon2	equ	0xFF1
  4041                           intcon3	equ	0xFF0
  4042                           postinc0	equ	0xFEE
  4043                           plusw0	equ	0xFEB
  4044                           wreg	equ	0xFE8
  4045                           postinc2	equ	0xFDE
  4046                           postdec2	equ	0xFDD
  4047                           plusw2	equ	0xFDB
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _xSumMatches *****************
  4053 ;; Defined at:
  4054 ;;		line 413 in file "SlaveComm.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  buffer_to_ch   42    0[BANK0 ] struct buffer
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  recXsumbuf     16   42[BANK0 ] unsigned char [16]
  4059 ;;  i               2   69[BANK0 ] int 
  4060 ;;  data            2   66[BANK0 ] PTR unsigned char 
  4061 ;;		 -> buffer_to_chk.data_buffer(40), xSumMatches@buffer_to_chk(42), 
  4062 ;;  recXsumPoint    2   64[BANK0 ] int 
  4063 ;;  recXsum         2   60[BANK0 ] int 
  4064 ;;  xsum            2   58[BANK0 ] int 
  4065 ;;  currentData     1   68[BANK0 ] unsigned char 
  4066 ;;  matches         1   63[BANK0 ] unsigned char 
  4067 ;;  xsumRecievin    1   62[BANK0 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      unsigned char 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4077 ;;      Params:         0      42       0       0       0       0       0
  4078 ;;      Locals:         0      29       0       0       0       0       0
  4079 ;;      Temps:          1       0       0       0       0       0       0
  4080 ;;      Totals:         1      71       0       0       0       0       0
  4081 ;;Total ram usage:       72 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    3
  4084 ;; This function calls:
  4085 ;;		_atoi
  4086 ;; This function is called by:
  4087 ;;		_communications
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text28
  4092  000F28                     __ptext28:
  4093                           	opt stack 0
  4094  000F28                     _xSumMatches:
  4095                           	opt stack 25
  4096                           
  4097                           ;SlaveComm.c: 417: int xsum = 0;
  4098                           
  4099                           ;incstack = 0
  4100  000F28  0E00               	movlw	0
  4101  000F2A  0100               	movlb	0	; () banked
  4102  000F2C  6F9B               	movwf	(xSumMatches@xsum+1)& (0+255),b
  4103  000F2E  0E00               	movlw	0
  4104  000F30  6F9A               	movwf	xSumMatches@xsum& (0+255),b
  4105                           
  4106                           ;SlaveComm.c: 418: int recXsum = 0;
  4107  000F32  0E00               	movlw	0
  4108  000F34  6F9D               	movwf	(xSumMatches@recXsum+1)& (0+255),b
  4109  000F36  0E00               	movlw	0
  4110  000F38  6F9C               	movwf	xSumMatches@recXsum& (0+255),b
  4111                           
  4112                           ;SlaveComm.c: 419: char recXsumbuf[16];
  4113                           ;SlaveComm.c: 420: int recXsumPointer = 0;
  4114  000F3A  0E00               	movlw	0
  4115  000F3C  6FA1               	movwf	(xSumMatches@recXsumPointer+1)& (0+255),b
  4116  000F3E  0E00               	movlw	0
  4117  000F40  6FA0               	movwf	xSumMatches@recXsumPointer& (0+255),b
  4118                           
  4119                           ;SlaveComm.c: 421: bool xsumRecieving = 0;
  4120  000F42  0E00               	movlw	0
  4121  000F44  6F9E               	movwf	xSumMatches@xsumRecieving& (0+255),b
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;SlaveComm.c: 422: char currentData;
  4125                           ;SlaveComm.c: 423: char* data = buffer_to_chk.data_buffer;
  4126  000F46  0E60               	movlw	low xSumMatches@buffer_to_chk
  4127  000F48  6FA2               	movwf	xSumMatches@data& (0+255),b
  4128  000F4A  0E00               	movlw	high xSumMatches@buffer_to_chk
  4129  000F4C  6FA3               	movwf	(xSumMatches@data+1)& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;SlaveComm.c: 424: int i = 1;
  4133  000F4E  0E00               	movlw	0
  4134  000F50  6FA6               	movwf	(xSumMatches@i+1)& (0+255),b
  4135  000F52  0E01               	movlw	1
  4136  000F54  6FA5               	movwf	xSumMatches@i& (0+255),b
  4137                           
  4138                           ;SlaveComm.c: 427: while (currentData != '*'){
  4139  000F56  D03B               	goto	l293
  4140  000F58                     
  4141                           ; BSR set to: 0
  4142                           ;SlaveComm.c: 429: currentData = data[i];
  4143                           
  4144                           ; BSR set to: 0
  4145  000F58  51A5               	movf	xSumMatches@i& (0+255),w,b
  4146  000F5A  25A2               	addwf	xSumMatches@data& (0+255),w,b
  4147  000F5C  6ED9               	movwf	fsr2l,c
  4148  000F5E  51A6               	movf	(xSumMatches@i+1)& (0+255),w,b
  4149  000F60  21A3               	addwfc	(xSumMatches@data+1)& (0+255),w,b
  4150  000F62  6EDA               	movwf	fsr2h,c
  4151  000F64  50DF               	movf	indf2,w,c
  4152  000F66  6FA4               	movwf	xSumMatches@currentData& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;SlaveComm.c: 430: i++;
  4156  000F68  4BA5               	infsnz	xSumMatches@i& (0+255),f,b
  4157  000F6A  2BA6               	incf	(xSumMatches@i+1)& (0+255),f,b
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;SlaveComm.c: 432: if (xsumRecieving){
  4161  000F6C  519E               	movf	xSumMatches@xsumRecieving& (0+255),w,b
  4162  000F6E  B4D8               	btfsc	status,2,c
  4163  000F70  D00B               	goto	l290
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;SlaveComm.c: 433: recXsumbuf[recXsumPointer] = currentData;
  4167  000F72  0E8A               	movlw	low xSumMatches@recXsumbuf
  4168  000F74  25A0               	addwf	xSumMatches@recXsumPointer& (0+255),w,b
  4169  000F76  6ED9               	movwf	fsr2l,c
  4170  000F78  0E00               	movlw	high xSumMatches@recXsumbuf
  4171  000F7A  21A1               	addwfc	(xSumMatches@recXsumPointer+1)& (0+255),w,b
  4172  000F7C  6EDA               	movwf	fsr2h,c
  4173  000F7E  C0A4  FFDF         	movff	xSumMatches@currentData,indf2
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;SlaveComm.c: 434: recXsumPointer++;
  4177  000F82  4BA0               	infsnz	xSumMatches@recXsumPointer& (0+255),f,b
  4178  000F84  2BA1               	incf	(xSumMatches@recXsumPointer+1)& (0+255),f,b
  4179                           
  4180                           ;SlaveComm.c: 435: }
  4181  000F86  D023               	goto	l293
  4182  000F88                     l290:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;SlaveComm.c: 436: else{
  4186                           ;SlaveComm.c: 438: if (data[i] == '$'){
  4187                           
  4188                           ; BSR set to: 0
  4189  000F88  51A5               	movf	xSumMatches@i& (0+255),w,b
  4190  000F8A  25A2               	addwf	xSumMatches@data& (0+255),w,b
  4191  000F8C  6ED9               	movwf	fsr2l,c
  4192  000F8E  51A6               	movf	(xSumMatches@i+1)& (0+255),w,b
  4193  000F90  21A3               	addwfc	(xSumMatches@data+1)& (0+255),w,b
  4194  000F92  6EDA               	movwf	fsr2h,c
  4195  000F94  0E24               	movlw	36
  4196  000F96  18DE               	xorwf	postinc2,w,c
  4197  000F98  A4D8               	btfss	status,2,c
  4198  000F9A  D015               	goto	l292
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;SlaveComm.c: 439: data[i] = '\0';
  4202  000F9C  51A5               	movf	xSumMatches@i& (0+255),w,b
  4203  000F9E  25A2               	addwf	xSumMatches@data& (0+255),w,b
  4204  000FA0  6ED9               	movwf	fsr2l,c
  4205  000FA2  51A6               	movf	(xSumMatches@i+1)& (0+255),w,b
  4206  000FA4  21A3               	addwfc	(xSumMatches@data+1)& (0+255),w,b
  4207  000FA6  6EDA               	movwf	fsr2h,c
  4208  000FA8  0E00               	movlw	0
  4209  000FAA  6EDF               	movwf	indf2,c
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;SlaveComm.c: 440: xsumRecieving = 1;
  4213  000FAC  0E01               	movlw	1
  4214  000FAE  6F9E               	movwf	xSumMatches@xsumRecieving& (0+255),b
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;SlaveComm.c: 441: recXsumbuf[recXsumPointer] = '\0';
  4218  000FB0  0E8A               	movlw	low xSumMatches@recXsumbuf
  4219  000FB2  25A0               	addwf	xSumMatches@recXsumPointer& (0+255),w,b
  4220  000FB4  6ED9               	movwf	fsr2l,c
  4221  000FB6  0E00               	movlw	high xSumMatches@recXsumbuf
  4222  000FB8  21A1               	addwfc	(xSumMatches@recXsumPointer+1)& (0+255),w,b
  4223  000FBA  6EDA               	movwf	fsr2h,c
  4224  000FBC  0E00               	movlw	0
  4225  000FBE  6EDF               	movwf	indf2,c
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;SlaveComm.c: 442: i++;
  4229  000FC0  4BA5               	infsnz	xSumMatches@i& (0+255),f,b
  4230  000FC2  2BA6               	incf	(xSumMatches@i+1)& (0+255),f,b
  4231                           
  4232                           ;SlaveComm.c: 443: }
  4233  000FC4  D004               	goto	l293
  4234  000FC6                     l292:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;SlaveComm.c: 444: else{
  4238                           ;SlaveComm.c: 445: xsum += currentData;
  4239                           
  4240                           ; BSR set to: 0
  4241  000FC6  51A4               	movf	xSumMatches@currentData& (0+255),w,b
  4242  000FC8  279A               	addwf	xSumMatches@xsum& (0+255),f,b
  4243  000FCA  0E00               	movlw	0
  4244  000FCC  239B               	addwfc	(xSumMatches@xsum+1)& (0+255),f,b
  4245  000FCE                     l293:
  4246                           
  4247                           ; BSR set to: 0
  4248                           
  4249                           ; BSR set to: 0
  4250                           
  4251                           ; BSR set to: 0
  4252  000FCE  0E2A               	movlw	42
  4253  000FD0  19A4               	xorwf	xSumMatches@currentData& (0+255),w,b
  4254  000FD2  A4D8               	btfss	status,2,c
  4255  000FD4  D7C1               	goto	l289
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;SlaveComm.c: 446: }
  4259                           ;SlaveComm.c: 448: }
  4260                           ;SlaveComm.c: 450: }
  4261                           ;SlaveComm.c: 452: bool matches = 0;
  4262                           
  4263                           ; BSR set to: 0
  4264  000FD6  0E00               	movlw	0
  4265  000FD8  6F9F               	movwf	xSumMatches@matches& (0+255),b
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;SlaveComm.c: 454: recXsum = atoi (recXsumbuf);
  4269  000FDA  0E8A               	movlw	low xSumMatches@recXsumbuf
  4270  000FDC  6E19               	movwf	atoi@s,c
  4271  000FDE  0E00               	movlw	high xSumMatches@recXsumbuf
  4272  000FE0  6E1A               	movwf	atoi@s+1,c
  4273  000FE2  EC03  F008         	call	_atoi	;wreg free
  4274  000FE6  C019  F09C         	movff	?_atoi,xSumMatches@recXsum
  4275  000FEA  C01A  F09D         	movff	?_atoi+1,xSumMatches@recXsum+1
  4276                           
  4277                           ;SlaveComm.c: 455: if (xsum == recXsum){
  4278  000FEE  0100               	movlb	0	; () banked
  4279  000FF0  519C               	movf	xSumMatches@recXsum& (0+255),w,b
  4280  000FF2  199A               	xorwf	xSumMatches@xsum& (0+255),w,b
  4281  000FF4  E106               	bnz	l295
  4282  000FF6  519D               	movf	(xSumMatches@recXsum+1)& (0+255),w,b
  4283  000FF8  199B               	xorwf	(xSumMatches@xsum+1)& (0+255),w,b
  4284  000FFA  A4D8               	btfss	status,2,c
  4285  000FFC  D002               	goto	l295
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;SlaveComm.c: 456: matches = 1;
  4289  000FFE  0E01               	movlw	1
  4290  001000  6F9F               	movwf	xSumMatches@matches& (0+255),b
  4291  001002                     l295:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;SlaveComm.c: 457: }
  4295                           ;SlaveComm.c: 459: return matches;
  4296  001002  519F               	movf	xSumMatches@matches& (0+255),w,b
  4297  001004  0012               	return	
  4298  001006                     __end_of_xSumMatches:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           intcon	equ	0xFF2
  4302                           intcon2	equ	0xFF1
  4303                           intcon3	equ	0xFF0
  4304                           postinc0	equ	0xFEE
  4305                           plusw0	equ	0xFEB
  4306                           wreg	equ	0xFE8
  4307                           indf2	equ	0xFDF
  4308                           postinc2	equ	0xFDE
  4309                           postdec2	equ	0xFDD
  4310                           plusw2	equ	0xFDB
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function _atoi *****************
  4316 ;; Defined at:
  4317 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  s               2   24[COMRAM] PTR const unsigned char 
  4320 ;;		 -> xSumMatches@recXsumbuf(16), 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  a               2   29[COMRAM] int 
  4323 ;;  sign            1   28[COMRAM] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  2   24[COMRAM] int 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4333 ;;      Params:         2       0       0       0       0       0       0
  4334 ;;      Locals:         3       0       0       0       0       0       0
  4335 ;;      Temps:          2       0       0       0       0       0       0
  4336 ;;      Totals:         7       0       0       0       0       0       0
  4337 ;;Total ram usage:        7 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    2
  4340 ;; This function calls:
  4341 ;;		___wmul
  4342 ;;		_isdigit
  4343 ;; This function is called by:
  4344 ;;		_xSumMatches
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text29
  4349  001006                     __ptext29:
  4350                           	opt stack 0
  4351  001006                     _atoi:
  4352                           	opt stack 25
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;incstack = 0
  4356  001006  D002               	goto	l767
  4357  001008  4A19               	infsnz	atoi@s,f,c
  4358  00100A  2A1A               	incf	atoi@s+1,f,c
  4359  00100C                     l767:
  4360  00100C  C019  FFD9         	movff	atoi@s,fsr2l
  4361  001010  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4362  001014  0E20               	movlw	32
  4363  001016  18DE               	xorwf	postinc2,w,c
  4364  001018  B4D8               	btfsc	status,2,c
  4365  00101A  D7F6               	goto	l768
  4366  00101C  C019  FFD9         	movff	atoi@s,fsr2l
  4367  001020  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4368  001024  0E09               	movlw	9
  4369  001026  18DE               	xorwf	postinc2,w,c
  4370  001028  B4D8               	btfsc	status,2,c
  4371  00102A  D7EE               	goto	l768
  4372  00102C  0E00               	movlw	0
  4373  00102E  6E1F               	movwf	atoi@a+1,c
  4374  001030  0E00               	movlw	0
  4375  001032  6E1E               	movwf	atoi@a,c
  4376  001034  0E00               	movlw	0
  4377  001036  6E1D               	movwf	atoi@sign,c
  4378  001038  C019  FFD9         	movff	atoi@s,fsr2l
  4379  00103C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4380  001040  0E2D               	movlw	45
  4381  001042  18DE               	xorwf	postinc2,w,c
  4382  001044  A4D8               	btfss	status,2,c
  4383  001046  D002               	goto	l770
  4384  001048  2A1D               	incf	atoi@sign,f,c
  4385  00104A  D024               	goto	l4105
  4386  00104C                     l770:
  4387  00104C  C019  FFD9         	movff	atoi@s,fsr2l
  4388  001050  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4389  001054  0E2B               	movlw	43
  4390  001056  18DE               	xorwf	postinc2,w,c
  4391  001058  A4D8               	btfss	status,2,c
  4392  00105A  D01E               	goto	l773
  4393  00105C  D01B               	goto	l4105
  4394  00105E  C01E  F013         	movff	atoi@a,___wmul@multiplier
  4395  001062  C01F  F014         	movff	atoi@a+1,___wmul@multiplier+1
  4396  001066  0E00               	movlw	0
  4397  001068  6E16               	movwf	___wmul@multiplicand+1,c
  4398  00106A  0E0A               	movlw	10
  4399  00106C  6E15               	movwf	___wmul@multiplicand,c
  4400  00106E  EC25  F010         	call	___wmul	;wreg free
  4401  001072  C019  FFD9         	movff	atoi@s,fsr2l
  4402  001076  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4403  00107A  50DF               	movf	indf2,w,c
  4404  00107C  6E1B               	movwf	??_atoi& (0+255),c
  4405  00107E  6A1C               	clrf	(??_atoi+1)& (0+255),c
  4406  001080  5013               	movf	?___wmul,w,c
  4407  001082  261B               	addwf	??_atoi,f,c
  4408  001084  5014               	movf	?___wmul+1,w,c
  4409  001086  221C               	addwfc	??_atoi+1,f,c
  4410  001088  0ED0               	movlw	208
  4411  00108A  241B               	addwf	??_atoi,w,c
  4412  00108C  6E1E               	movwf	atoi@a,c
  4413  00108E  0EFF               	movlw	255
  4414  001090  201C               	addwfc	??_atoi+1,w,c
  4415  001092  6E1F               	movwf	atoi@a+1,c
  4416  001094                     l4105:
  4417  001094  4A19               	infsnz	atoi@s,f,c
  4418  001096  2A1A               	incf	atoi@s+1,f,c
  4419  001098                     l773:
  4420  001098  C019  FFD9         	movff	atoi@s,fsr2l
  4421  00109C  C01A  FFDA         	movff	atoi@s+1,fsr2h
  4422  0010A0  50DF               	movf	indf2,w,c
  4423  0010A2  EC66  F010         	call	_isdigit
  4424  0010A6  B0D8               	btfsc	status,0,c
  4425  0010A8  D7DA               	goto	l774
  4426  0010AA  501D               	movf	atoi@sign,w,c
  4427  0010AC  B4D8               	btfsc	status,2,c
  4428  0010AE  D00D               	goto	l776
  4429  0010B0  C01E  F01B         	movff	atoi@a,??_atoi
  4430  0010B4  C01F  F01C         	movff	atoi@a+1,??_atoi+1
  4431  0010B8  1E1B               	comf	??_atoi,f,c
  4432  0010BA  1E1C               	comf	??_atoi+1,f,c
  4433  0010BC  4A1B               	infsnz	??_atoi,f,c
  4434  0010BE  2A1C               	incf	??_atoi+1,f,c
  4435  0010C0  C01B  F019         	movff	??_atoi,?_atoi
  4436  0010C4  C01C  F01A         	movff	??_atoi+1,?_atoi+1
  4437  0010C8  0012               	return	
  4438  0010CA                     l776:
  4439  0010CA  C01E  F019         	movff	atoi@a,?_atoi
  4440  0010CE  C01F  F01A         	movff	atoi@a+1,?_atoi+1
  4441  0010D2  0012               	return		;funcret
  4442  0010D4                     __end_of_atoi:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           intcon	equ	0xFF2
  4446                           intcon2	equ	0xFF1
  4447                           intcon3	equ	0xFF0
  4448                           postinc0	equ	0xFEE
  4449                           plusw0	equ	0xFEB
  4450                           wreg	equ	0xFE8
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           plusw2	equ	0xFDB
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _send_data *****************
  4460 ;; Defined at:
  4461 ;;		line 558 in file "SlaveComm.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  4464 ;;		 -> communications@send_buffer(42), 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  send_end        1   24[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      unsigned char 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4476 ;;      Params:         2       0       0       0       0       0       0
  4477 ;;      Locals:         1       0       0       0       0       0       0
  4478 ;;      Temps:          2       0       0       0       0       0       0
  4479 ;;      Totals:         5       0       0       0       0       0       0
  4480 ;;Total ram usage:        5 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    2
  4483 ;; This function calls:
  4484 ;;		_SPI_send_data
  4485 ;; This function is called by:
  4486 ;;		_communications
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text30
  4491  001702                     __ptext30:
  4492                           	opt stack 0
  4493  001702                     _send_data:
  4494                           	opt stack 26
  4495                           
  4496                           ;SlaveComm.c: 560: bool send_end;
  4497                           ;SlaveComm.c: 562: if( send_buffer->read_position == send_buffer->write_position )
  4498                           
  4499                           ;incstack = 0
  4500  001702  EE20 F028          	lfsr	2,40
  4501  001706  5015               	movf	send_data@send_buffer,w,c
  4502  001708  26D9               	addwf	fsr2l,f,c
  4503  00170A  5016               	movf	send_data@send_buffer+1,w,c
  4504  00170C  22DA               	addwfc	fsr2h,f,c
  4505  00170E  EE10 F029          	lfsr	1,41
  4506  001712  5015               	movf	send_data@send_buffer,w,c
  4507  001714  26E1               	addwf	fsr1l,f,c
  4508  001716  5016               	movf	send_data@send_buffer+1,w,c
  4509  001718  22E2               	addwfc	fsr1h,f,c
  4510  00171A  50DE               	movf	postinc2,w,c
  4511  00171C  18E6               	xorwf	postinc1,w,c
  4512  00171E  A4D8               	btfss	status,2,c
  4513  001720  D006               	goto	l324
  4514                           
  4515                           ;SlaveComm.c: 563: {
  4516                           ;SlaveComm.c: 564: send_end = 1;
  4517  001722  0E01               	movlw	1
  4518  001724  6E19               	movwf	send_data@send_end,c
  4519                           
  4520                           ;SlaveComm.c: 565: SPI_send_data( '\0' );
  4521  001726  0E00               	movlw	0
  4522  001728  EC38  F010         	call	_SPI_send_data
  4523                           
  4524                           ;SlaveComm.c: 566: }
  4525  00172C  D030               	goto	l327
  4526  00172E                     l324:
  4527                           
  4528                           ;SlaveComm.c: 567: else
  4529                           ;SlaveComm.c: 568: {
  4530                           ;SlaveComm.c: 569: send_end = 0;
  4531  00172E  0E00               	movlw	0
  4532  001730  6E19               	movwf	send_data@send_end,c
  4533                           
  4534                           ;SlaveComm.c: 572: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_positio
      +                          n] ) == 1 )
  4535  001732  EE20 F029          	lfsr	2,41
  4536  001736  5015               	movf	send_data@send_buffer,w,c
  4537  001738  26D9               	addwf	fsr2l,f,c
  4538  00173A  5016               	movf	send_data@send_buffer+1,w,c
  4539  00173C  22DA               	addwfc	fsr2h,f,c
  4540  00173E  50DF               	movf	indf2,w,c
  4541  001740  6E17               	movwf	??_send_data& (0+255),c
  4542  001742  5017               	movf	??_send_data,w,c
  4543  001744  0D01               	mullw	1
  4544  001746  50F3               	movf	prodl,w,c
  4545  001748  2415               	addwf	send_data@send_buffer,w,c
  4546  00174A  6ED9               	movwf	fsr2l,c
  4547  00174C  50F4               	movf	prodh,w,c
  4548  00174E  2016               	addwfc	send_data@send_buffer+1,w,c
  4549  001750  6EDA               	movwf	fsr2h,c
  4550  001752  50DF               	movf	indf2,w,c
  4551  001754  EC38  F010         	call	_SPI_send_data
  4552  001758  06E8               	decf	wreg,f,c
  4553  00175A  A4D8               	btfss	status,2,c
  4554  00175C  D018               	goto	l327
  4555                           
  4556                           ;SlaveComm.c: 573: {
  4557                           ;SlaveComm.c: 575: send_buffer->read_position++;
  4558  00175E  EE20 F029          	lfsr	2,41
  4559  001762  5015               	movf	send_data@send_buffer,w,c
  4560  001764  26D9               	addwf	fsr2l,f,c
  4561  001766  5016               	movf	send_data@send_buffer+1,w,c
  4562  001768  22DA               	addwfc	fsr2h,f,c
  4563  00176A  2ADF               	incf	indf2,f,c
  4564                           
  4565                           ;SlaveComm.c: 576: if( send_buffer->read_position >= 40 )
  4566  00176C  EE20 F029          	lfsr	2,41
  4567  001770  5015               	movf	send_data@send_buffer,w,c
  4568  001772  26D9               	addwf	fsr2l,f,c
  4569  001774  5016               	movf	send_data@send_buffer+1,w,c
  4570  001776  22DA               	addwfc	fsr2h,f,c
  4571  001778  0E27               	movlw	39
  4572  00177A  64DF               	cpfsgt	indf2,c
  4573  00177C  D008               	goto	l327
  4574                           
  4575                           ;SlaveComm.c: 577: {
  4576                           ;SlaveComm.c: 578: send_buffer->read_position = 0;
  4577  00177E  EE20 F029          	lfsr	2,41
  4578  001782  5015               	movf	send_data@send_buffer,w,c
  4579  001784  26D9               	addwf	fsr2l,f,c
  4580  001786  5016               	movf	send_data@send_buffer+1,w,c
  4581  001788  22DA               	addwfc	fsr2h,f,c
  4582  00178A  0E00               	movlw	0
  4583  00178C  6EDF               	movwf	indf2,c
  4584  00178E                     l327:
  4585                           
  4586                           ;SlaveComm.c: 579: }
  4587                           ;SlaveComm.c: 580: }
  4588                           ;SlaveComm.c: 581: }
  4589                           ;SlaveComm.c: 583: return send_end;
  4590  00178E  5019               	movf	send_data@send_end,w,c
  4591  001790  0012               	return	
  4592  001792                     __end_of_send_data:
  4593                           	opt stack 0
  4594                           tblptru	equ	0xFF8
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           intcon2	equ	0xFF1
  4599                           intcon3	equ	0xFF0
  4600                           postinc0	equ	0xFEE
  4601                           plusw0	equ	0xFEB
  4602                           wreg	equ	0xFE8
  4603                           postinc1	equ	0xFE6
  4604                           fsr1h	equ	0xFE2
  4605                           fsr1l	equ	0xFE1
  4606                           indf2	equ	0xFDF
  4607                           postinc2	equ	0xFDE
  4608                           postdec2	equ	0xFDD
  4609                           plusw2	equ	0xFDB
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function _SPI_send_data *****************
  4615 ;; Defined at:
  4616 ;;		line 656 in file "SlaveComm.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  data            1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  data            1   18[COMRAM] unsigned char 
  4621 ;;  sendGood        1   19[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      unsigned char 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4631 ;;      Params:         0       0       0       0       0       0       0
  4632 ;;      Locals:         2       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0
  4634 ;;      Totals:         2       0       0       0       0       0       0
  4635 ;;Total ram usage:        2 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    1
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_send_data
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text31
  4646  002070                     __ptext31:
  4647                           	opt stack 0
  4648  002070                     _SPI_send_data:
  4649                           	opt stack 26
  4650                           
  4651                           ;incstack = 0
  4652                           ;SPI_send_data@data stored from wreg
  4653  002070  6E13               	movwf	SPI_send_data@data,c
  4654                           
  4655                           ;SlaveComm.c: 658: bool sendGood = 0;
  4656  002072  0E00               	movlw	0
  4657  002074  6E14               	movwf	SPI_send_data@sendGood,c
  4658                           
  4659                           ;SlaveComm.c: 660: if( SPI_transmit_wait == 0 )
  4660  002076  504C               	movf	_SPI_transmit_wait,w,c
  4661  002078  A4D8               	btfss	status,2,c
  4662  00207A  D006               	goto	l355
  4663                           
  4664                           ;SlaveComm.c: 661: {
  4665                           ;SlaveComm.c: 662: SSP2BUF = data;
  4666  00207C  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  4667                           
  4668                           ;SlaveComm.c: 663: SPI_transmit_wait = 1;
  4669  002080  0E01               	movlw	1
  4670  002082  6E4C               	movwf	_SPI_transmit_wait,c
  4671                           
  4672                           ;SlaveComm.c: 664: sendGood = 1;
  4673  002084  0E01               	movlw	1
  4674  002086  D001               	goto	L5
  4675  002088                     l355:
  4676                           
  4677                           ;SlaveComm.c: 666: else
  4678                           ;SlaveComm.c: 667: {
  4679                           ;SlaveComm.c: 668: sendGood = 0;
  4680  002088  0E00               	movlw	0
  4681  00208A                     L5:
  4682  00208A  6E14               	movwf	SPI_send_data@sendGood,c
  4683                           
  4684                           ;SlaveComm.c: 669: }
  4685                           ;SlaveComm.c: 671: return sendGood;
  4686  00208C  5014               	movf	SPI_send_data@sendGood,w,c
  4687  00208E  0012               	return	
  4688  002090                     __end_of_SPI_send_data:
  4689                           	opt stack 0
  4690                           tblptru	equ	0xFF8
  4691                           prodh	equ	0xFF4
  4692                           prodl	equ	0xFF3
  4693                           intcon	equ	0xFF2
  4694                           intcon2	equ	0xFF1
  4695                           intcon3	equ	0xFF0
  4696                           postinc0	equ	0xFEE
  4697                           plusw0	equ	0xFEB
  4698                           wreg	equ	0xFE8
  4699                           postinc1	equ	0xFE6
  4700                           fsr1h	equ	0xFE2
  4701                           fsr1l	equ	0xFE1
  4702                           indf2	equ	0xFDF
  4703                           postinc2	equ	0xFDE
  4704                           postdec2	equ	0xFDD
  4705                           plusw2	equ	0xFDB
  4706                           fsr2h	equ	0xFDA
  4707                           fsr2l	equ	0xFD9
  4708                           status	equ	0xFD8
  4709                           
  4710 ;; *************** function _resetCommunications *****************
  4711 ;; Defined at:
  4712 ;;		line 184 in file "SlaveComm.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  send_buffer     2   58[COMRAM] PTR struct buffer
  4715 ;;		 -> communications@send_buffer(42), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4727 ;;      Params:         2       0       0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0
  4729 ;;      Temps:          0       2       0       0       0       0       0
  4730 ;;      Totals:         2       2       0       0       0       0       0
  4731 ;;Total ram usage:        4 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    7
  4734 ;; This function calls:
  4735 ;;		_com_command_setEnergyUsed
  4736 ;;		_com_command_setPower
  4737 ;;		_com_command_setVersion
  4738 ;; This function is called by:
  4739 ;;		_communications
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text32
  4744  001538                     __ptext32:
  4745                           	opt stack 0
  4746  001538                     _resetCommunications:
  4747                           	opt stack 21
  4748                           
  4749                           ;SlaveComm.c: 187: static int commState = 0;
  4750                           ;SlaveComm.c: 190: SSP2CON1bits.SSPEN = 0;
  4751                           
  4752                           ;incstack = 0
  4753  001538  9A6C               	bcf	3948,5,c	;volatile
  4754                           
  4755                           ;SlaveComm.c: 191: _delay((unsigned long)((1)*(16000000UL/4000.0)));
  4756  00153A  0E06               	movlw	6
  4757  00153C  0100               	movlb	0	; () banked
  4758  00153E  6F7C               	movwf	??_resetCommunications& (0+255),b
  4759  001540  0E30               	movlw	48
  4760  001542                     u3687:
  4761  001542  2EE8               	decfsz	wreg,f,c
  4762  001544  D7FE               	bra	u3687
  4763  001546  2F7C               	decfsz	??_resetCommunications& (0+255),f,b
  4764  001548  D7FC               	bra	u3687
  4765  00154A  F000               	nop	
  4766                           
  4767                           ;SlaveComm.c: 192: SSP2CON1bits.SSPEN = 1;
  4768  00154C  8A6C               	bsf	3948,5,c	;volatile
  4769                           
  4770                           ;SlaveComm.c: 194: SSP2CON1bits.WCOL = 0;
  4771  00154E  9E6C               	bcf	3948,7,c	;volatile
  4772                           
  4773                           ;SlaveComm.c: 195: SPI_transmit_wait = 0;
  4774  001550  0E00               	movlw	0
  4775  001552  6E4C               	movwf	_SPI_transmit_wait,c
  4776                           
  4777                           ;SlaveComm.c: 197: send_buffer->read_position = 0;
  4778  001554  EE20 F029          	lfsr	2,41
  4779  001558  503B               	movf	resetCommunications@send_buffer,w,c
  4780  00155A  26D9               	addwf	fsr2l,f,c
  4781  00155C  503C               	movf	resetCommunications@send_buffer+1,w,c
  4782  00155E  22DA               	addwfc	fsr2h,f,c
  4783  001560  0E00               	movlw	0
  4784  001562  6EDF               	movwf	indf2,c
  4785                           
  4786                           ;SlaveComm.c: 198: send_buffer->write_position = 0;
  4787  001564  EE20 F028          	lfsr	2,40
  4788  001568  503B               	movf	resetCommunications@send_buffer,w,c
  4789  00156A  26D9               	addwf	fsr2l,f,c
  4790  00156C  503C               	movf	resetCommunications@send_buffer+1,w,c
  4791  00156E  22DA               	addwfc	fsr2h,f,c
  4792  001570  0E00               	movlw	0
  4793  001572  6EDF               	movwf	indf2,c
  4794                           
  4795                           ;SlaveComm.c: 203: commState++;
  4796  001574  4A47               	infsnz	resetCommunications@commState,f,c
  4797  001576  2A48               	incf	resetCommunications@commState+1,f,c
  4798                           
  4799                           ;SlaveComm.c: 204: switch( commState )
  4800  001578  D019               	goto	l224
  4801  00157A                     
  4802                           ;SlaveComm.c: 207: com_command_setVersion( send_buffer );
  4803  00157A  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  4804  00157E  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  4805  001582  EC12  F010         	call	_com_command_setVersion	;wreg free
  4806                           
  4807                           ;SlaveComm.c: 208: break;
  4808  001586  0012               	return	
  4809  001588                     
  4810                           ;SlaveComm.c: 210: com_command_setPower( send_buffer );
  4811  001588  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  4812  00158C  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  4813  001590  EC84  F00E         	call	_com_command_setPower	;wreg free
  4814                           
  4815                           ;SlaveComm.c: 211: break;
  4816  001594  0012               	return	
  4817  001596                     
  4818                           ;SlaveComm.c: 213: com_command_setEnergyUsed( send_buffer );
  4819  001596  C03B  F039         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  4820  00159A  C03C  F03A         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  4821  00159E  ECA9  F00E         	call	_com_command_setEnergyUsed	;wreg free
  4822  0015A2                     
  4823                           ;SlaveComm.c: 225: commState = 0;
  4824  0015A2  0E00               	movlw	0
  4825  0015A4  6E48               	movwf	resetCommunications@commState+1,c
  4826  0015A6  0E00               	movlw	0
  4827  0015A8  6E47               	movwf	resetCommunications@commState,c
  4828                           
  4829                           ;SlaveComm.c: 227: }
  4830                           
  4831                           ;SlaveComm.c: 226: break;
  4832  0015AA  0012               	return	
  4833  0015AC                     l224:
  4834  0015AC  C047  F07C         	movff	resetCommunications@commState,??_resetCommunications
  4835  0015B0  C048  F07D         	movff	resetCommunications@commState+1,??_resetCommunications+1
  4836                           
  4837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4838                           ; Switch size 1, requested type "space"
  4839                           ; Number of cases is 1, Range of values is 0 to 0
  4840                           ; switch strategies available:
  4841                           ; Name         Instructions Cycles
  4842                           ; simple_byte            4     3 (average)
  4843                           ;	Chosen strategy is simple_byte
  4844  0015B4  0100               	movlb	0	; () banked
  4845  0015B6  517D               	movf	(??_resetCommunications+1)& (0+255),w,b
  4846  0015B8  0A00               	xorlw	0	; case 0
  4847  0015BA  A4D8               	btfss	status,2,c
  4848  0015BC  D7F2               	goto	l229
  4849                           
  4850                           ; BSR set to: 0
  4851                           ; Switch size 1, requested type "space"
  4852                           ; Number of cases is 3, Range of values is 1 to 3
  4853                           ; switch strategies available:
  4854                           ; Name         Instructions Cycles
  4855                           ; simple_byte           10     6 (average)
  4856                           ;	Chosen strategy is simple_byte
  4857  0015BE  517C               	movf	??_resetCommunications& (0+255),w,b
  4858  0015C0  0A01               	xorlw	1	; case 1
  4859  0015C2  B4D8               	btfsc	status,2,c
  4860  0015C4  D7DA               	goto	l225
  4861  0015C6  0A03               	xorlw	3	; case 2
  4862  0015C8  B4D8               	btfsc	status,2,c
  4863  0015CA  D7DE               	goto	l227
  4864  0015CC  0A01               	xorlw	1	; case 3
  4865  0015CE  B4D8               	btfsc	status,2,c
  4866  0015D0  D7E2               	goto	l228
  4867  0015D2  D7E7               	goto	l229
  4868  0015D4                     __end_of_resetCommunications:
  4869                           	opt stack 0
  4870                           tblptru	equ	0xFF8
  4871                           prodh	equ	0xFF4
  4872                           prodl	equ	0xFF3
  4873                           intcon	equ	0xFF2
  4874                           intcon2	equ	0xFF1
  4875                           intcon3	equ	0xFF0
  4876                           postinc0	equ	0xFEE
  4877                           plusw0	equ	0xFEB
  4878                           wreg	equ	0xFE8
  4879                           postinc1	equ	0xFE6
  4880                           fsr1h	equ	0xFE2
  4881                           fsr1l	equ	0xFE1
  4882                           indf2	equ	0xFDF
  4883                           postinc2	equ	0xFDE
  4884                           postdec2	equ	0xFDD
  4885                           plusw2	equ	0xFDB
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _com_command_setVersion *****************
  4891 ;; Defined at:
  4892 ;;		line 735 in file "SlaveComm.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4895 ;;		 -> communications@send_buffer(42), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4907 ;;      Params:         2       0       0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0
  4910 ;;      Totals:         2       0       0       0       0       0       0
  4911 ;;Total ram usage:        2 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    6
  4914 ;; This function calls:
  4915 ;;		_command_builder3
  4916 ;; This function is called by:
  4917 ;;		_resetCommunications
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text33
  4922  002024                     __ptext33:
  4923                           	opt stack 0
  4924  002024                     _com_command_setVersion:
  4925                           	opt stack 21
  4926                           
  4927                           ;SlaveComm.c: 737: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  4928                           
  4929                           ;incstack = 0
  4930  002024  C039  F02F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  4931  002028  C03A  F030         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  4932  00202C  0E4E               	movlw	low STR_2
  4933  00202E  6E31               	movwf	command_builder3@data1,c
  4934  002030  0E06               	movlw	high STR_2
  4935  002032  6E32               	movwf	command_builder3@data1+1,c
  4936  002034  0E0D               	movlw	low STR_11
  4937  002036  6E33               	movwf	command_builder3@data2,c
  4938  002038  0E06               	movlw	high STR_11
  4939  00203A  6E34               	movwf	command_builder3@data2+1,c
  4940  00203C  0E46               	movlw	low STR_29
  4941  00203E  6E35               	movwf	command_builder3@data3,c
  4942  002040  0E06               	movlw	high STR_29
  4943  002042  6E36               	movwf	command_builder3@data3+1,c
  4944  002044  ECCB  F008         	call	_command_builder3	;wreg free
  4945  002048  0012               	return	
  4946  00204A                     __end_of_com_command_setVersion:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           intcon2	equ	0xFF1
  4953                           intcon3	equ	0xFF0
  4954                           postinc0	equ	0xFEE
  4955                           plusw0	equ	0xFEB
  4956                           wreg	equ	0xFE8
  4957                           postinc1	equ	0xFE6
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           indf2	equ	0xFDF
  4961                           postinc2	equ	0xFDE
  4962                           postdec2	equ	0xFDD
  4963                           plusw2	equ	0xFDB
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _com_command_setPower *****************
  4969 ;; Defined at:
  4970 ;;		line 691 in file "SlaveComm.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  4973 ;;		 -> communications@send_buffer(42), 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  temp           12   16[BANK0 ] unsigned char [12]
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4985 ;;      Params:         2       0       0       0       0       0       0
  4986 ;;      Locals:         0      12       0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0
  4988 ;;      Totals:         2      12       0       0       0       0       0
  4989 ;;Total ram usage:       14 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    6
  4992 ;; This function calls:
  4993 ;;		_command_builder3
  4994 ;;		_ultoa
  4995 ;; This function is called by:
  4996 ;;		_resetCommunications
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text34
  5001  001D08                     __ptext34:
  5002                           	opt stack 0
  5003  001D08                     _com_command_setPower:
  5004                           	opt stack 21
  5005                           
  5006                           ;SlaveComm.c: 695: char temp[12];
  5007                           ;SlaveComm.c: 697: ultoa( temp, meterWatts_global, 10 );
  5008                           
  5009                           ;incstack = 0
  5010  001D08  0E70               	movlw	low com_command_setPower@temp
  5011  001D0A  6E20               	movwf	ultoa@buf,c
  5012  001D0C  0E00               	movlw	high com_command_setPower@temp
  5013  001D0E  6E21               	movwf	ultoa@buf+1,c
  5014  001D10  C0F8  F022         	movff	_meterWatts_global,ultoa@val
  5015  001D14  C0F9  F023         	movff	_meterWatts_global+1,ultoa@val+1
  5016  001D18  C0FA  F024         	movff	_meterWatts_global+2,ultoa@val+2
  5017  001D1C  C0FB  F025         	movff	_meterWatts_global+3,ultoa@val+3
  5018  001D20  0E00               	movlw	0
  5019  001D22  6E27               	movwf	ultoa@base+1,c
  5020  001D24  0E0A               	movlw	10
  5021  001D26  6E26               	movwf	ultoa@base,c
  5022  001D28  EC27  F006         	call	_ultoa	;wreg free
  5023                           
  5024                           ;SlaveComm.c: 698: command_builder3( send_buffer, "Set", "Watts", temp );
  5025  001D2C  C039  F02F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  5026  001D30  C03A  F030         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  5027  001D34  0E4E               	movlw	low STR_2
  5028  001D36  6E31               	movwf	command_builder3@data1,c
  5029  001D38  0E06               	movlw	high STR_2
  5030  001D3A  6E32               	movwf	command_builder3@data1+1,c
  5031  001D3C  0E24               	movlw	low STR_7
  5032  001D3E  6E33               	movwf	command_builder3@data2,c
  5033  001D40  0E06               	movlw	high STR_7
  5034  001D42  6E34               	movwf	command_builder3@data2+1,c
  5035  001D44  0E70               	movlw	low com_command_setPower@temp
  5036  001D46  6E35               	movwf	command_builder3@data3,c
  5037  001D48  0E00               	movlw	high com_command_setPower@temp
  5038  001D4A  6E36               	movwf	command_builder3@data3+1,c
  5039  001D4C  ECCB  F008         	call	_command_builder3	;wreg free
  5040  001D50  0012               	return	
  5041  001D52                     __end_of_com_command_setPower:
  5042                           	opt stack 0
  5043                           tblptru	equ	0xFF8
  5044                           prodh	equ	0xFF4
  5045                           prodl	equ	0xFF3
  5046                           intcon	equ	0xFF2
  5047                           intcon2	equ	0xFF1
  5048                           intcon3	equ	0xFF0
  5049                           postinc0	equ	0xFEE
  5050                           plusw0	equ	0xFEB
  5051                           wreg	equ	0xFE8
  5052                           postinc1	equ	0xFE6
  5053                           fsr1h	equ	0xFE2
  5054                           fsr1l	equ	0xFE1
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           plusw2	equ	0xFDB
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _receive_data *****************
  5064 ;; Defined at:
  5065 ;;		line 231 in file "SlaveComm.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  5068 ;;		 -> communications@receive_buffer(42), 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  data            1   24[COMRAM] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      enum E6750
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5080 ;;      Params:         2       0       0       0       0       0       0
  5081 ;;      Locals:         1       0       0       0       0       0       0
  5082 ;;      Temps:          1       0       0       0       0       0       0
  5083 ;;      Totals:         4       0       0       0       0       0       0
  5084 ;;Total ram usage:        4 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    2
  5087 ;; This function calls:
  5088 ;;		_SPI_receive_data
  5089 ;; This function is called by:
  5090 ;;		_communications
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text35
  5095  001258                     __ptext35:
  5096                           	opt stack 0
  5097  001258                     _receive_data:
  5098                           	opt stack 26
  5099                           
  5100                           ;SlaveComm.c: 233: char data;
  5101                           ;SlaveComm.c: 235: static enum receive_status my_status = receive_waiting;
  5102                           ;SlaveComm.c: 237: if( my_status == receive_end_command )
  5103                           
  5104                           ;incstack = 0
  5105  001258  0E02               	movlw	2
  5106  00125A  184B               	xorwf	receive_data@my_status,w,c
  5107  00125C  A4D8               	btfss	status,2,c
  5108  00125E  D002               	goto	l235
  5109                           
  5110                           ;SlaveComm.c: 238: {
  5111                           ;SlaveComm.c: 239: my_status = receive_waiting;
  5112  001260  0E00               	movlw	0
  5113  001262  6E4B               	movwf	receive_data@my_status,c
  5114  001264                     l235:
  5115                           
  5116                           ;SlaveComm.c: 240: }
  5117                           ;SlaveComm.c: 242: if( SPI_receive_data( &data ) == 1 )
  5118  001264  0E19               	movlw	low receive_data@data
  5119  001266  6E13               	movwf	SPI_receive_data@data,c
  5120  001268  0E00               	movlw	high receive_data@data
  5121  00126A  6E14               	movwf	SPI_receive_data@data+1,c
  5122  00126C  ECFE  F00F         	call	_SPI_receive_data	;wreg free
  5123  001270  06E8               	decf	wreg,f,c
  5124  001272  A4D8               	btfss	status,2,c
  5125  001274  D04F               	goto	l240
  5126                           
  5127                           ;SlaveComm.c: 243: {
  5128                           ;SlaveComm.c: 244: if( (data == '!') && (my_status != receive_in_command) )
  5129  001276  0E21               	movlw	33
  5130  001278  1819               	xorwf	receive_data@data,w,c
  5131  00127A  A4D8               	btfss	status,2,c
  5132  00127C  D015               	goto	l237
  5133  00127E  044B               	decf	receive_data@my_status,w,c
  5134  001280  B4D8               	btfsc	status,2,c
  5135  001282  D012               	goto	l237
  5136                           
  5137                           ;SlaveComm.c: 245: {
  5138                           ;SlaveComm.c: 246: my_status = receive_in_command;
  5139  001284  0E01               	movlw	1
  5140  001286  6E4B               	movwf	receive_data@my_status,c
  5141                           
  5142                           ;SlaveComm.c: 247: receive_buffer->read_position = 0;
  5143  001288  EE20 F029          	lfsr	2,41
  5144  00128C  5016               	movf	receive_data@receive_buffer,w,c
  5145  00128E  26D9               	addwf	fsr2l,f,c
  5146  001290  5017               	movf	receive_data@receive_buffer+1,w,c
  5147  001292  22DA               	addwfc	fsr2h,f,c
  5148  001294  0E00               	movlw	0
  5149  001296  6EDF               	movwf	indf2,c
  5150                           
  5151                           ;SlaveComm.c: 248: receive_buffer->write_position = 0;
  5152  001298  EE20 F028          	lfsr	2,40
  5153  00129C  5016               	movf	receive_data@receive_buffer,w,c
  5154  00129E  26D9               	addwf	fsr2l,f,c
  5155  0012A0  5017               	movf	receive_data@receive_buffer+1,w,c
  5156  0012A2  22DA               	addwfc	fsr2h,f,c
  5157  0012A4  0E00               	movlw	0
  5158  0012A6  6EDF               	movwf	indf2,c
  5159  0012A8                     l237:
  5160                           
  5161                           ;SlaveComm.c: 249: }
  5162                           ;SlaveComm.c: 251: if( my_status == receive_in_command )
  5163  0012A8  044B               	decf	receive_data@my_status,w,c
  5164  0012AA  A4D8               	btfss	status,2,c
  5165  0012AC  D02A               	goto	l239
  5166                           
  5167                           ;SlaveComm.c: 252: {
  5168                           ;SlaveComm.c: 253: receive_buffer->data_buffer[ receive_buffer->write_position] = data;
  5169  0012AE  EE20 F028          	lfsr	2,40
  5170  0012B2  5016               	movf	receive_data@receive_buffer,w,c
  5171  0012B4  26D9               	addwf	fsr2l,f,c
  5172  0012B6  5017               	movf	receive_data@receive_buffer+1,w,c
  5173  0012B8  22DA               	addwfc	fsr2h,f,c
  5174  0012BA  50DF               	movf	indf2,w,c
  5175  0012BC  6E18               	movwf	??_receive_data& (0+255),c
  5176  0012BE  5018               	movf	??_receive_data,w,c
  5177  0012C0  0D01               	mullw	1
  5178  0012C2  50F3               	movf	prodl,w,c
  5179  0012C4  2416               	addwf	receive_data@receive_buffer,w,c
  5180  0012C6  6ED9               	movwf	fsr2l,c
  5181  0012C8  50F4               	movf	prodh,w,c
  5182  0012CA  2017               	addwfc	receive_data@receive_buffer+1,w,c
  5183  0012CC  6EDA               	movwf	fsr2h,c
  5184  0012CE  C019  FFDF         	movff	receive_data@data,indf2
  5185                           
  5186                           ;SlaveComm.c: 255: receive_buffer->write_position++;
  5187  0012D2  EE20 F028          	lfsr	2,40
  5188  0012D6  5016               	movf	receive_data@receive_buffer,w,c
  5189  0012D8  26D9               	addwf	fsr2l,f,c
  5190  0012DA  5017               	movf	receive_data@receive_buffer+1,w,c
  5191  0012DC  22DA               	addwfc	fsr2h,f,c
  5192  0012DE  2ADF               	incf	indf2,f,c
  5193                           
  5194                           ;SlaveComm.c: 256: if( receive_buffer->write_position >= 40 )
  5195  0012E0  EE20 F028          	lfsr	2,40
  5196  0012E4  5016               	movf	receive_data@receive_buffer,w,c
  5197  0012E6  26D9               	addwf	fsr2l,f,c
  5198  0012E8  5017               	movf	receive_data@receive_buffer+1,w,c
  5199  0012EA  22DA               	addwfc	fsr2h,f,c
  5200  0012EC  0E27               	movlw	39
  5201  0012EE  64DF               	cpfsgt	indf2,c
  5202  0012F0  D008               	goto	l239
  5203                           
  5204                           ;SlaveComm.c: 257: {
  5205                           ;SlaveComm.c: 258: receive_buffer->write_position = (40 - 1);
  5206  0012F2  EE20 F028          	lfsr	2,40
  5207  0012F6  5016               	movf	receive_data@receive_buffer,w,c
  5208  0012F8  26D9               	addwf	fsr2l,f,c
  5209  0012FA  5017               	movf	receive_data@receive_buffer+1,w,c
  5210  0012FC  22DA               	addwfc	fsr2h,f,c
  5211  0012FE  0E27               	movlw	39
  5212  001300  6EDF               	movwf	indf2,c
  5213  001302                     l239:
  5214                           
  5215                           ;SlaveComm.c: 259: }
  5216                           ;SlaveComm.c: 260: }
  5217                           ;SlaveComm.c: 262: if( (my_status == receive_in_command) && (data == '*') )
  5218  001302  044B               	decf	receive_data@my_status,w,c
  5219  001304  A4D8               	btfss	status,2,c
  5220  001306  D006               	goto	l240
  5221  001308  0E2A               	movlw	42
  5222  00130A  1819               	xorwf	receive_data@data,w,c
  5223  00130C  A4D8               	btfss	status,2,c
  5224  00130E  D002               	goto	l240
  5225                           
  5226                           ;SlaveComm.c: 263: {
  5227                           ;SlaveComm.c: 264: my_status = receive_end_command;
  5228  001310  0E02               	movlw	2
  5229  001312  6E4B               	movwf	receive_data@my_status,c
  5230  001314                     l240:
  5231                           
  5232                           ;SlaveComm.c: 265: }
  5233                           ;SlaveComm.c: 266: }
  5234                           ;SlaveComm.c: 268: return my_status;
  5235  001314  504B               	movf	receive_data@my_status,w,c
  5236  001316  0012               	return	
  5237  001318                     __end_of_receive_data:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           intcon	equ	0xFF2
  5243                           intcon2	equ	0xFF1
  5244                           intcon3	equ	0xFF0
  5245                           postinc0	equ	0xFEE
  5246                           plusw0	equ	0xFEB
  5247                           wreg	equ	0xFE8
  5248                           postinc1	equ	0xFE6
  5249                           fsr1h	equ	0xFE2
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _SPI_receive_data *****************
  5260 ;; Defined at:
  5261 ;;		line 635 in file "SlaveComm.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  data            2   18[COMRAM] PTR unsigned char 
  5264 ;;		 -> receive_data@data(1), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  recvGood        1   20[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         2       0       0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0
  5279 ;;      Totals:         3       0       0       0       0       0       0
  5280 ;;Total ram usage:        3 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_receive_data
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text36
  5291  001FFC                     __ptext36:
  5292                           	opt stack 0
  5293  001FFC                     _SPI_receive_data:
  5294                           	opt stack 26
  5295                           
  5296                           ;SlaveComm.c: 638: bool recvGood = 0;
  5297                           
  5298                           ;incstack = 0
  5299  001FFC  0E00               	movlw	0
  5300  001FFE  6E15               	movwf	SPI_receive_data@recvGood,c
  5301                           
  5302                           ;SlaveComm.c: 640: if( SSP2STATbits.BF == 1 )
  5303  002000  A06D               	btfss	3949,0,c	;volatile
  5304  002002  D00C               	goto	l350
  5305                           
  5306                           ;SlaveComm.c: 641: {
  5307                           ;SlaveComm.c: 642: *data = SSP2BUF;
  5308  002004  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  5309  002008  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  5310  00200C  CF6F FFDF          	movff	3951,indf2	;volatile
  5311                           
  5312                           ;SlaveComm.c: 643: recvGood = 1;
  5313  002010  0E01               	movlw	1
  5314  002012  6E15               	movwf	SPI_receive_data@recvGood,c
  5315                           
  5316                           ;SlaveComm.c: 644: SSP2CON1bits.WCOL = 0;
  5317  002014  9E6C               	bcf	3948,7,c	;volatile
  5318                           
  5319                           ;SlaveComm.c: 645: SPI_transmit_wait = 0;
  5320  002016  0E00               	movlw	0
  5321  002018  6E4C               	movwf	_SPI_transmit_wait,c
  5322                           
  5323                           ;SlaveComm.c: 646: }
  5324  00201A  D002               	goto	l351
  5325  00201C                     l350:
  5326                           
  5327                           ;SlaveComm.c: 647: else
  5328                           ;SlaveComm.c: 648: {
  5329                           ;SlaveComm.c: 649: recvGood = 0;
  5330  00201C  0E00               	movlw	0
  5331  00201E  6E15               	movwf	SPI_receive_data@recvGood,c
  5332  002020                     l351:
  5333                           
  5334                           ;SlaveComm.c: 650: }
  5335                           ;SlaveComm.c: 652: return recvGood;
  5336  002020  5015               	movf	SPI_receive_data@recvGood,w,c
  5337  002022  0012               	return	
  5338  002024                     __end_of_SPI_receive_data:
  5339                           	opt stack 0
  5340                           tblptru	equ	0xFF8
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           intcon2	equ	0xFF1
  5345                           intcon3	equ	0xFF0
  5346                           postinc0	equ	0xFEE
  5347                           plusw0	equ	0xFEB
  5348                           wreg	equ	0xFE8
  5349                           postinc1	equ	0xFE6
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           plusw2	equ	0xFDB
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function _process_data *****************
  5361 ;; Defined at:
  5362 ;;		line 271 in file "SlaveComm.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  receive_buff    2   71[BANK0 ] PTR struct buffer
  5365 ;;		 -> communications@receive_buffer(42), 
  5366 ;;  send_buffer     2   73[BANK0 ] PTR struct buffer
  5367 ;;		 -> communications@send_buffer(42), 
  5368 ;;  xSumMatches     1   75[BANK0 ] unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  parameters     50   76[BANK0 ] unsigned char [10][5]
  5371 ;;  end_of_trans    1  126[BANK0 ] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5381 ;;      Params:         0       5       0       0       0       0       0
  5382 ;;      Locals:         0      51       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0
  5384 ;;      Totals:         0      56       0       0       0       0       0
  5385 ;;Total ram usage:       56 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    8
  5388 ;; This function calls:
  5389 ;;		_process_data_parameterize
  5390 ;;		_process_data_parameters
  5391 ;; This function is called by:
  5392 ;;		_communications
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text37
  5397  001EA6                     __ptext37:
  5398                           	opt stack 0
  5399  001EA6                     _process_data:
  5400                           	opt stack 20
  5401                           
  5402                           ;SlaveComm.c: 273: bool end_of_transmission_received;
  5403                           ;SlaveComm.c: 278: char parameters[5][10];
  5404                           ;SlaveComm.c: 280: process_data_parameterize( parameters, receive_buffer );
  5405                           
  5406                           ;incstack = 0
  5407  001EA6  0EAC               	movlw	low process_data@parameters
  5408  001EA8  6E19               	movwf	process_data_parameterize@parameters,c
  5409  001EAA  0E00               	movlw	high process_data@parameters
  5410  001EAC  6E1A               	movwf	process_data_parameterize@parameters+1,c
  5411  001EAE  C0A7  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  5412  001EB2  C0A8  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  5413  001EB6  ECD1  F004         	call	_process_data_parameterize	;wreg free
  5414                           
  5415                           ;SlaveComm.c: 282: if (xSumMatches){
  5416  001EBA  0100               	movlb	0	; () banked
  5417  001EBC  51AB               	movf	process_data@xSumMatches& (0+255),w,b
  5418  001EBE  B4D8               	btfsc	status,2,c
  5419  001EC0  D00C               	goto	l244
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;SlaveComm.c: 283: end_of_transmission_received = process_data_parameters( parameters, s
      +                          end_buffer );
  5423  001EC2  0EAC               	movlw	low process_data@parameters
  5424  001EC4  6F7C               	movwf	process_data_parameters@parameters& (0+255),b
  5425  001EC6  0E00               	movlw	high process_data@parameters
  5426  001EC8  6F7D               	movwf	(process_data_parameters@parameters+1)& (0+255),b
  5427  001ECA  C0A9  F07E         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  5428  001ECE  C0AA  F07F         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  5429  001ED2  EC2A  F003         	call	_process_data_parameters	;wreg free
  5430  001ED6  0100               	movlb	0	; () banked
  5431  001ED8  D001               	goto	L6
  5432  001EDA                     l244:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;SlaveComm.c: 285: else{
  5436                           ;SlaveComm.c: 286: end_of_transmission_received = 1;
  5437                           
  5438                           ; BSR set to: 0
  5439  001EDA  0E01               	movlw	1
  5440  001EDC                     L6:
  5441  001EDC  6FDE               	movwf	process_data@end_of_transmission_received& (0+255),b
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;SlaveComm.c: 287: }
  5445                           ;SlaveComm.c: 289: return end_of_transmission_received;
  5446  001EDE  51DE               	movf	process_data@end_of_transmission_received& (0+255),w,b
  5447  001EE0  0012               	return	
  5448  001EE2                     __end_of_process_data:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           intcon2	equ	0xFF1
  5455                           intcon3	equ	0xFF0
  5456                           postinc0	equ	0xFEE
  5457                           plusw0	equ	0xFEB
  5458                           wreg	equ	0xFE8
  5459                           postinc1	equ	0xFE6
  5460                           fsr1h	equ	0xFE2
  5461                           fsr1l	equ	0xFE1
  5462                           indf2	equ	0xFDF
  5463                           postinc2	equ	0xFDE
  5464                           postdec2	equ	0xFDD
  5465                           plusw2	equ	0xFDB
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function _process_data_parameters *****************
  5471 ;; Defined at:
  5472 ;;		line 352 in file "SlaveComm.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  parameters      2   28[BANK0 ] PTR unsigned char [10]
  5475 ;;		 -> process_data@parameters(50), 
  5476 ;;  send_buffer     2   30[BANK0 ] PTR struct buffer
  5477 ;;		 -> communications@send_buffer(42), 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  end_of_trans    1   58[COMRAM] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      unsigned char 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5489 ;;      Params:         0       4       0       0       0       0       0
  5490 ;;      Locals:         1       0       0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0
  5492 ;;      Totals:         1       4       0       0       0       0       0
  5493 ;;Total ram usage:        5 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    7
  5496 ;; This function calls:
  5497 ;;		_atol
  5498 ;;		_com_command_setEnergyUsed
  5499 ;;		_send_end_of_transmission
  5500 ;;		_strmatch
  5501 ;; This function is called by:
  5502 ;;		_process_data
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text38
  5507  000654                     __ptext38:
  5508                           	opt stack 0
  5509  000654                     _process_data_parameters:
  5510                           	opt stack 20
  5511                           
  5512                           ;SlaveComm.c: 354: bool end_of_transmission_received = 0;
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;incstack = 0
  5516  000654  0E00               	movlw	0
  5517  000656  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5518                           
  5519                           ;SlaveComm.c: 357: if( strmatch( parameters[0], "END" ) == 1 )
  5520  000658  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5521  00065C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5522  000660  0E4A               	movlw	low STR_1
  5523  000662  6E20               	movwf	strmatch@b,c
  5524  000664  0E06               	movlw	high STR_1
  5525  000666  6E21               	movwf	strmatch@b+1,c
  5526  000668  ECBC  F00F         	call	_strmatch	;wreg free
  5527  00066C  06E8               	decf	wreg,f,c
  5528  00066E  A4D8               	btfss	status,2,c
  5529  000670  D003               	goto	l266
  5530                           
  5531                           ;SlaveComm.c: 358: {
  5532                           ;SlaveComm.c: 359: end_of_transmission_received = 1;
  5533  000672  0E01               	movlw	1
  5534  000674  6E3B               	movwf	process_data_parameters@end_of_transmission_received,c
  5535                           
  5536                           ;SlaveComm.c: 360: }
  5537  000676  D0D1               	goto	l284
  5538  000678                     l266:
  5539                           
  5540                           ;SlaveComm.c: 361: else if( strmatch( parameters[0], "Set" ) == 1 )
  5541  000678  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5542  00067C  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5543  000680  0E4E               	movlw	low STR_2
  5544  000682  6E20               	movwf	strmatch@b,c
  5545  000684  0E06               	movlw	high STR_2
  5546  000686  6E21               	movwf	strmatch@b+1,c
  5547  000688  ECBC  F00F         	call	_strmatch	;wreg free
  5548  00068C  06E8               	decf	wreg,f,c
  5549  00068E  A4D8               	btfss	status,2,c
  5550  000690  D038               	goto	l268
  5551                           
  5552                           ;SlaveComm.c: 362: {
  5553                           ;SlaveComm.c: 363: if( strmatch( parameters[1], "Calibration" ) == 1 )
  5554  000692  0E0A               	movlw	10
  5555  000694  0100               	movlb	0	; () banked
  5556  000696  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5557  000698  6E1E               	movwf	strmatch@a,c
  5558  00069A  0E00               	movlw	0
  5559  00069C  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5560  00069E  6E1F               	movwf	strmatch@a+1,c
  5561  0006A0  0E01               	movlw	low STR_3
  5562  0006A2  6E20               	movwf	strmatch@b,c
  5563  0006A4  0E06               	movlw	high STR_3
  5564  0006A6  6E21               	movwf	strmatch@b+1,c
  5565  0006A8  ECBC  F00F         	call	_strmatch	;wreg free
  5566  0006AC  06E8               	decf	wreg,f,c
  5567  0006AE  B4D8               	btfsc	status,2,c
  5568  0006B0  D0B4               	goto	l284
  5569                           
  5570                           ;SlaveComm.c: 367: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5571                           
  5572                           ;SlaveComm.c: 364: {
  5573                           ;SlaveComm.c: 366: }
  5574  0006B2  0E0A               	movlw	10
  5575  0006B4  0100               	movlb	0	; () banked
  5576  0006B6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5577  0006B8  6E1E               	movwf	strmatch@a,c
  5578  0006BA  0E00               	movlw	0
  5579  0006BC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5580  0006BE  6E1F               	movwf	strmatch@a+1,c
  5581  0006C0  0E17               	movlw	low STR_4
  5582  0006C2  6E20               	movwf	strmatch@b,c
  5583  0006C4  0E06               	movlw	high STR_4
  5584  0006C6  6E21               	movwf	strmatch@b+1,c
  5585  0006C8  ECBC  F00F         	call	_strmatch	;wreg free
  5586  0006CC  06E8               	decf	wreg,f,c
  5587  0006CE  A4D8               	btfss	status,2,c
  5588  0006D0  D0A4               	goto	l284
  5589                           
  5590                           ;SlaveComm.c: 368: {
  5591                           ;SlaveComm.c: 373: meterEnergyUsed_global = atol( parameters[2] );
  5592  0006D2  0E14               	movlw	20
  5593  0006D4  0100               	movlb	0	; () banked
  5594  0006D6  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5595  0006D8  6E1F               	movwf	atol@s,c
  5596  0006DA  0E00               	movlw	0
  5597  0006DC  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5598  0006DE  6E20               	movwf	atol@s+1,c
  5599  0006E0  ECA2  F006         	call	_atol	;wreg free
  5600  0006E4  C01F  F03D         	movff	?_atol,_meterEnergyUsed_global
  5601  0006E8  C020  F03E         	movff	?_atol+1,_meterEnergyUsed_global+1
  5602  0006EC  C021  F03F         	movff	?_atol+2,_meterEnergyUsed_global+2
  5603  0006F0  C022  F040         	movff	?_atol+3,_meterEnergyUsed_global+3
  5604                           
  5605                           ;SlaveComm.c: 374: com_command_setEnergyUsed( send_buffer );
  5606  0006F4  C07E  F039         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  5607  0006F8  C07F  F03A         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  5608  0006FC  ECA9  F00E         	call	_com_command_setEnergyUsed	;wreg free
  5609                           
  5610                           ;SlaveComm.c: 375: }
  5611                           ;SlaveComm.c: 376: }
  5612  000700  D08C               	goto	l284
  5613  000702                     l268:
  5614                           
  5615                           ;SlaveComm.c: 377: else if( strmatch( parameters[0], "Read" ) == 1 )
  5616  000702  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5617  000706  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5618  00070A  0E2F               	movlw	low STR_5
  5619  00070C  6E20               	movwf	strmatch@b,c
  5620  00070E  0E06               	movlw	high STR_5
  5621  000710  6E21               	movwf	strmatch@b+1,c
  5622  000712  ECBC  F00F         	call	_strmatch	;wreg free
  5623  000716  06E8               	decf	wreg,f,c
  5624  000718  B4D8               	btfsc	status,2,c
  5625  00071A  D07F               	goto	l284
  5626                           
  5627                           ;SlaveComm.c: 382: else if( strmatch( parameters[0], "Conf" ) == 1 )
  5628                           
  5629                           ;SlaveComm.c: 378: {
  5630                           ;SlaveComm.c: 381: }
  5631  00071C  C07C  F01E         	movff	process_data_parameters@parameters,strmatch@a
  5632  000720  C07D  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  5633  000724  0E34               	movlw	low STR_6
  5634  000726  6E20               	movwf	strmatch@b,c
  5635  000728  0E06               	movlw	high STR_6
  5636  00072A  6E21               	movwf	strmatch@b+1,c
  5637  00072C  ECBC  F00F         	call	_strmatch	;wreg free
  5638  000730  06E8               	decf	wreg,f,c
  5639  000732  A4D8               	btfss	status,2,c
  5640  000734  D072               	goto	l284
  5641                           
  5642                           ;SlaveComm.c: 383: {
  5643                           ;SlaveComm.c: 384: if( strmatch( parameters[1], "Watts" ) == 1 )
  5644  000736  0E0A               	movlw	10
  5645  000738  0100               	movlb	0	; () banked
  5646  00073A  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5647  00073C  6E1E               	movwf	strmatch@a,c
  5648  00073E  0E00               	movlw	0
  5649  000740  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5650  000742  6E1F               	movwf	strmatch@a+1,c
  5651  000744  0E24               	movlw	low STR_7
  5652  000746  6E20               	movwf	strmatch@b,c
  5653  000748  0E06               	movlw	high STR_7
  5654  00074A  6E21               	movwf	strmatch@b+1,c
  5655  00074C  ECBC  F00F         	call	_strmatch	;wreg free
  5656  000750  06E8               	decf	wreg,f,c
  5657  000752  A4D8               	btfss	status,2,c
  5658  000754  D007               	goto	l276
  5659                           
  5660                           ;SlaveComm.c: 385: {
  5661                           ;SlaveComm.c: 386: send_end_of_transmission( send_buffer );
  5662  000756  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5663  00075A  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5664  00075E  EC8E  F010         	call	_send_end_of_transmission	;wreg free
  5665                           
  5666                           ;SlaveComm.c: 387: }
  5667  000762  D05B               	goto	l284
  5668  000764                     l276:
  5669                           
  5670                           ;SlaveComm.c: 388: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  5671  000764  0E0A               	movlw	10
  5672  000766  0100               	movlb	0	; () banked
  5673  000768  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5674  00076A  6E1E               	movwf	strmatch@a,c
  5675  00076C  0E00               	movlw	0
  5676  00076E  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5677  000770  6E1F               	movwf	strmatch@a+1,c
  5678  000772  0E17               	movlw	low STR_4
  5679  000774  6E20               	movwf	strmatch@b,c
  5680  000776  0E06               	movlw	high STR_4
  5681  000778  6E21               	movwf	strmatch@b+1,c
  5682  00077A  ECBC  F00F         	call	_strmatch	;wreg free
  5683  00077E  06E8               	decf	wreg,f,c
  5684  000780  A4D8               	btfss	status,2,c
  5685  000782  D007               	goto	l278
  5686                           
  5687                           ;SlaveComm.c: 389: {
  5688                           ;SlaveComm.c: 390: send_end_of_transmission( send_buffer );
  5689  000784  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5690  000788  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5691  00078C  EC8E  F010         	call	_send_end_of_transmission	;wreg free
  5692                           
  5693                           ;SlaveComm.c: 391: }
  5694  000790  D044               	goto	l284
  5695  000792                     l278:
  5696                           
  5697                           ;SlaveComm.c: 392: else if( strmatch( parameters[1], "Volts" ) == 1 )
  5698  000792  0E0A               	movlw	10
  5699  000794  0100               	movlb	0	; () banked
  5700  000796  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5701  000798  6E1E               	movwf	strmatch@a,c
  5702  00079A  0E00               	movlw	0
  5703  00079C  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5704  00079E  6E1F               	movwf	strmatch@a+1,c
  5705  0007A0  0E1E               	movlw	low STR_9
  5706  0007A2  6E20               	movwf	strmatch@b,c
  5707  0007A4  0E06               	movlw	high STR_9
  5708  0007A6  6E21               	movwf	strmatch@b+1,c
  5709  0007A8  ECBC  F00F         	call	_strmatch	;wreg free
  5710  0007AC  06E8               	decf	wreg,f,c
  5711  0007AE  A4D8               	btfss	status,2,c
  5712  0007B0  D007               	goto	l280
  5713                           
  5714                           ;SlaveComm.c: 393: {
  5715                           ;SlaveComm.c: 394: send_end_of_transmission( send_buffer );
  5716  0007B2  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5717  0007B6  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5718  0007BA  EC8E  F010         	call	_send_end_of_transmission	;wreg free
  5719                           
  5720                           ;SlaveComm.c: 395: }
  5721  0007BE  D02D               	goto	l284
  5722  0007C0                     l280:
  5723                           
  5724                           ;SlaveComm.c: 396: else if( strmatch( parameters[1], "Amps" ) == 1 )
  5725  0007C0  0E0A               	movlw	10
  5726  0007C2  0100               	movlb	0	; () banked
  5727  0007C4  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5728  0007C6  6E1E               	movwf	strmatch@a,c
  5729  0007C8  0E00               	movlw	0
  5730  0007CA  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5731  0007CC  6E1F               	movwf	strmatch@a+1,c
  5732  0007CE  0E39               	movlw	low STR_10
  5733  0007D0  6E20               	movwf	strmatch@b,c
  5734  0007D2  0E06               	movlw	high STR_10
  5735  0007D4  6E21               	movwf	strmatch@b+1,c
  5736  0007D6  ECBC  F00F         	call	_strmatch	;wreg free
  5737  0007DA  06E8               	decf	wreg,f,c
  5738  0007DC  A4D8               	btfss	status,2,c
  5739  0007DE  D007               	goto	l282
  5740                           
  5741                           ;SlaveComm.c: 397: {
  5742                           ;SlaveComm.c: 398: send_end_of_transmission( send_buffer );
  5743  0007E0  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5744  0007E4  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5745  0007E8  EC8E  F010         	call	_send_end_of_transmission	;wreg free
  5746                           
  5747                           ;SlaveComm.c: 399: }
  5748  0007EC  D016               	goto	l284
  5749  0007EE                     l282:
  5750                           
  5751                           ;SlaveComm.c: 400: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  5752  0007EE  0E0A               	movlw	10
  5753  0007F0  0100               	movlb	0	; () banked
  5754  0007F2  257C               	addwf	process_data_parameters@parameters& (0+255),w,b
  5755  0007F4  6E1E               	movwf	strmatch@a,c
  5756  0007F6  0E00               	movlw	0
  5757  0007F8  217D               	addwfc	(process_data_parameters@parameters+1)& (0+255),w,b
  5758  0007FA  6E1F               	movwf	strmatch@a+1,c
  5759  0007FC  0E0D               	movlw	low STR_11
  5760  0007FE  6E20               	movwf	strmatch@b,c
  5761  000800  0E06               	movlw	high STR_11
  5762  000802  6E21               	movwf	strmatch@b+1,c
  5763  000804  ECBC  F00F         	call	_strmatch	;wreg free
  5764  000808  06E8               	decf	wreg,f,c
  5765  00080A  A4D8               	btfss	status,2,c
  5766  00080C  D006               	goto	l284
  5767                           
  5768                           ;SlaveComm.c: 401: {
  5769                           ;SlaveComm.c: 402: send_end_of_transmission( send_buffer );
  5770  00080E  C07E  F035         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  5771  000812  C07F  F036         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  5772  000816  EC8E  F010         	call	_send_end_of_transmission	;wreg free
  5773  00081A                     l284:
  5774                           
  5775                           ;SlaveComm.c: 403: }
  5776                           ;SlaveComm.c: 404: }
  5777                           ;SlaveComm.c: 410: return end_of_transmission_received;
  5778  00081A  503B               	movf	process_data_parameters@end_of_transmission_received,w,c
  5779  00081C  0012               	return	
  5780  00081E                     __end_of_process_data_parameters:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           prodh	equ	0xFF4
  5784                           prodl	equ	0xFF3
  5785                           intcon	equ	0xFF2
  5786                           intcon2	equ	0xFF1
  5787                           intcon3	equ	0xFF0
  5788                           postinc0	equ	0xFEE
  5789                           plusw0	equ	0xFEB
  5790                           wreg	equ	0xFE8
  5791                           postinc1	equ	0xFE6
  5792                           fsr1h	equ	0xFE2
  5793                           fsr1l	equ	0xFE1
  5794                           indf2	equ	0xFDF
  5795                           postinc2	equ	0xFDE
  5796                           postdec2	equ	0xFDD
  5797                           plusw2	equ	0xFDB
  5798                           fsr2h	equ	0xFDA
  5799                           fsr2l	equ	0xFD9
  5800                           status	equ	0xFD8
  5801                           
  5802 ;; *************** function _strmatch *****************
  5803 ;; Defined at:
  5804 ;;		line 586 in file "SlaveComm.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  a               2   29[COMRAM] PTR unsigned char 
  5807 ;;		 -> process_data@parameters(50), 
  5808 ;;  b               2   31[COMRAM] PTR unsigned char 
  5809 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5810 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5811 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  result          2   33[COMRAM] int 
  5814 ;;  match           1   35[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      unsigned char 
  5817 ;; Registers used:
  5818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5824 ;;      Params:         4       0       0       0       0       0       0
  5825 ;;      Locals:         3       0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0
  5827 ;;      Totals:         7       0       0       0       0       0       0
  5828 ;;Total ram usage:        7 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    2
  5831 ;; This function calls:
  5832 ;;		_strcmp2
  5833 ;; This function is called by:
  5834 ;;		_process_data_parameters
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text39
  5839  001F78                     __ptext39:
  5840                           	opt stack 0
  5841  001F78                     _strmatch:
  5842                           	opt stack 24
  5843                           
  5844                           ;SlaveComm.c: 588: int result;
  5845                           ;SlaveComm.c: 589: bool match;
  5846                           ;SlaveComm.c: 591: result = strcmp2( a, b );
  5847                           
  5848                           ;incstack = 0
  5849  001F78  C01E  F013         	movff	strmatch@a,strcmp2@a
  5850  001F7C  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  5851  001F80  C020  F015         	movff	strmatch@b,strcmp2@b
  5852  001F84  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  5853  001F88  EC91  F005         	call	_strcmp2	;wreg free
  5854  001F8C  C013  F022         	movff	?_strcmp2,strmatch@result
  5855  001F90  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  5856                           
  5857                           ;SlaveComm.c: 593: match = (result == 0) ? 1 : 0;
  5858  001F94  5022               	movf	strmatch@result,w,c
  5859  001F96  1023               	iorwf	strmatch@result+1,w,c
  5860  001F98  A4D8               	btfss	status,2,c
  5861  001F9A  D002               	goto	u2770
  5862  001F9C  0E01               	movlw	1
  5863  001F9E  D001               	goto	u2780
  5864  001FA0                     u2770:
  5865  001FA0  0E00               	movlw	0
  5866  001FA2                     u2780:
  5867  001FA2  6E24               	movwf	strmatch@match,c
  5868                           
  5869                           ;SlaveComm.c: 595: return match;
  5870  001FA4  5024               	movf	strmatch@match,w,c
  5871  001FA6  0012               	return	
  5872  001FA8                     __end_of_strmatch:
  5873                           	opt stack 0
  5874                           tblptru	equ	0xFF8
  5875                           prodh	equ	0xFF4
  5876                           prodl	equ	0xFF3
  5877                           intcon	equ	0xFF2
  5878                           intcon2	equ	0xFF1
  5879                           intcon3	equ	0xFF0
  5880                           postinc0	equ	0xFEE
  5881                           plusw0	equ	0xFEB
  5882                           wreg	equ	0xFE8
  5883                           postinc1	equ	0xFE6
  5884                           fsr1h	equ	0xFE2
  5885                           fsr1l	equ	0xFE1
  5886                           indf2	equ	0xFDF
  5887                           postinc2	equ	0xFDE
  5888                           postdec2	equ	0xFDD
  5889                           plusw2	equ	0xFDB
  5890                           fsr2h	equ	0xFDA
  5891                           fsr2l	equ	0xFD9
  5892                           status	equ	0xFD8
  5893                           
  5894 ;; *************** function _strcmp2 *****************
  5895 ;; Defined at:
  5896 ;;		line 598 in file "SlaveComm.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  a               2   18[COMRAM] PTR unsigned char 
  5899 ;;		 -> process_data@parameters(50), 
  5900 ;;  b               2   20[COMRAM] PTR unsigned char 
  5901 ;;		 -> STR_11(10), STR_10(5), STR_9(6), STR_8(7), 
  5902 ;;		 -> STR_7(6), STR_6(5), STR_5(5), STR_4(7), 
  5903 ;;		 -> STR_3(12), STR_2(4), STR_1(4), 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  inx             2   27[COMRAM] int 
  5906 ;;  match           2   25[COMRAM] int 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  2   18[COMRAM] int 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5916 ;;      Params:         4       0       0       0       0       0       0
  5917 ;;      Locals:         4       0       0       0       0       0       0
  5918 ;;      Temps:          3       0       0       0       0       0       0
  5919 ;;      Totals:        11       0       0       0       0       0       0
  5920 ;;Total ram usage:       11 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    1
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_strmatch
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text40
  5931  000B22                     __ptext40:
  5932                           	opt stack 0
  5933  000B22                     _strcmp2:
  5934                           	opt stack 24
  5935                           
  5936                           ;SlaveComm.c: 600: int inx = 0;
  5937                           
  5938                           ;incstack = 0
  5939  000B22  0E00               	movlw	0
  5940  000B24  6E1D               	movwf	strcmp2@inx+1,c
  5941  000B26  0E00               	movlw	0
  5942  000B28  6E1C               	movwf	strcmp2@inx,c
  5943                           
  5944                           ;SlaveComm.c: 601: int match = 0;
  5945  000B2A  0E00               	movlw	0
  5946  000B2C  6E1B               	movwf	strcmp2@match+1,c
  5947  000B2E  0E00               	movlw	0
  5948  000B30  6E1A               	movwf	strcmp2@match,c
  5949                           
  5950                           ;SlaveComm.c: 603: while( (a[inx] != '\0') && (b[inx] != '\0') && (match == 0) )
  5951  000B32  D035               	goto	l334
  5952  000B34                     
  5953                           ;SlaveComm.c: 604: {
  5954                           ;SlaveComm.c: 605: if( a[inx] > b[inx] )
  5955  000B34  501C               	movf	strcmp2@inx,w,c
  5956  000B36  2413               	addwf	strcmp2@a,w,c
  5957  000B38  6ED9               	movwf	fsr2l,c
  5958  000B3A  501D               	movf	strcmp2@inx+1,w,c
  5959  000B3C  2014               	addwfc	strcmp2@a+1,w,c
  5960  000B3E  6EDA               	movwf	fsr2h,c
  5961  000B40  501C               	movf	strcmp2@inx,w,c
  5962  000B42  2415               	addwf	strcmp2@b,w,c
  5963  000B44  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  5964  000B46  501D               	movf	strcmp2@inx+1,w,c
  5965  000B48  2016               	addwfc	strcmp2@b+1,w,c
  5966  000B4A  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  5967  000B4C  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  5968  000B50  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  5969  000B54                     	if	0	;tblptru may be non-zero
  5970  000B54                     	endif
  5971  000B54                     	if	0	;tblptru may be non-zero
  5972  000B54                     	endif
  5973  000B54  50DE               	movf	postinc2,w,c
  5974  000B56  0009               	tblrd		*+
  5975  000B58  5CF5               	subwf	tablat,w,c
  5976  000B5A  B0D8               	btfsc	status,0,c
  5977  000B5C  D005               	goto	l336
  5978                           
  5979                           ;SlaveComm.c: 606: {
  5980                           ;SlaveComm.c: 607: match = 1;
  5981  000B5E  0E00               	movlw	0
  5982  000B60  6E1B               	movwf	strcmp2@match+1,c
  5983  000B62  0E01               	movlw	1
  5984  000B64  6E1A               	movwf	strcmp2@match,c
  5985                           
  5986                           ;SlaveComm.c: 608: }
  5987  000B66  D019               	goto	l338
  5988  000B68                     l336:
  5989                           
  5990                           ;SlaveComm.c: 609: else if( a[inx] < b[inx] )
  5991  000B68  501C               	movf	strcmp2@inx,w,c
  5992  000B6A  2413               	addwf	strcmp2@a,w,c
  5993  000B6C  6ED9               	movwf	fsr2l,c
  5994  000B6E  501D               	movf	strcmp2@inx+1,w,c
  5995  000B70  2014               	addwfc	strcmp2@a+1,w,c
  5996  000B72  6EDA               	movwf	fsr2h,c
  5997  000B74  50DF               	movf	indf2,w,c
  5998  000B76  6E17               	movwf	??_strcmp2& (0+255),c
  5999  000B78  501C               	movf	strcmp2@inx,w,c
  6000  000B7A  2415               	addwf	strcmp2@b,w,c
  6001  000B7C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  6002  000B7E  501D               	movf	strcmp2@inx+1,w,c
  6003  000B80  2016               	addwfc	strcmp2@b+1,w,c
  6004  000B82  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  6005  000B84  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  6006  000B88  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  6007  000B8C                     	if	0	;tblptru may be non-zero
  6008  000B8C                     	endif
  6009  000B8C                     	if	0	;tblptru may be non-zero
  6010  000B8C                     	endif
  6011  000B8C  0008               	tblrd		*
  6012  000B8E  50F5               	movf	tablat,w,c
  6013  000B90  5C17               	subwf	??_strcmp2,w,c
  6014  000B92  B0D8               	btfsc	status,0,c
  6015  000B94  D002               	goto	l338
  6016                           
  6017                           ;SlaveComm.c: 610: {
  6018                           ;SlaveComm.c: 611: match = -1;
  6019  000B96  681A               	setf	strcmp2@match,c
  6020  000B98  681B               	setf	strcmp2@match+1,c
  6021  000B9A                     l338:
  6022                           
  6023                           ;SlaveComm.c: 616: }
  6024                           ;SlaveComm.c: 618: inx++;
  6025                           
  6026                           ;SlaveComm.c: 614: {
  6027  000B9A  4A1C               	infsnz	strcmp2@inx,f,c
  6028  000B9C  2A1D               	incf	strcmp2@inx+1,f,c
  6029  000B9E                     l334:
  6030  000B9E  501C               	movf	strcmp2@inx,w,c
  6031  000BA0  2413               	addwf	strcmp2@a,w,c
  6032  000BA2  6ED9               	movwf	fsr2l,c
  6033  000BA4  501D               	movf	strcmp2@inx+1,w,c
  6034  000BA6  2014               	addwfc	strcmp2@a+1,w,c
  6035  000BA8  6EDA               	movwf	fsr2h,c
  6036  000BAA  50DF               	movf	indf2,w,c
  6037  000BAC  B4D8               	btfsc	status,2,c
  6038  000BAE  D013               	goto	u2650
  6039  000BB0  501C               	movf	strcmp2@inx,w,c
  6040  000BB2  2415               	addwf	strcmp2@b,w,c
  6041  000BB4  6E17               	movwf	??_strcmp2& (0+255),c
  6042  000BB6  501D               	movf	strcmp2@inx+1,w,c
  6043  000BB8  2016               	addwfc	strcmp2@b+1,w,c
  6044  000BBA  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  6045  000BBC  C017  FFF6         	movff	??_strcmp2,tblptrl
  6046  000BC0  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  6047  000BC4                     	if	0	;tblptru may be non-zero
  6048  000BC4                     	endif
  6049  000BC4                     	if	0	;tblptru may be non-zero
  6050  000BC4                     	endif
  6051  000BC4  0008               	tblrd		*
  6052  000BC6  50F5               	movf	tablat,w,c
  6053  000BC8  0900               	iorlw	0
  6054  000BCA  B4D8               	btfsc	status,2,c
  6055  000BCC  D004               	goto	u2650
  6056  000BCE  501A               	movf	strcmp2@match,w,c
  6057  000BD0  101B               	iorwf	strcmp2@match+1,w,c
  6058  000BD2  B4D8               	btfsc	status,2,c
  6059  000BD4  D7AF               	goto	l335
  6060  000BD6                     u2650:
  6061                           
  6062                           ;SlaveComm.c: 619: }
  6063                           ;SlaveComm.c: 622: if( (a[inx] == '\0') && (b[inx] != '\0') )
  6064  000BD6  501C               	movf	strcmp2@inx,w,c
  6065  000BD8  2413               	addwf	strcmp2@a,w,c
  6066  000BDA  6ED9               	movwf	fsr2l,c
  6067  000BDC  501D               	movf	strcmp2@inx+1,w,c
  6068  000BDE  2014               	addwfc	strcmp2@a+1,w,c
  6069  000BE0  6EDA               	movwf	fsr2h,c
  6070  000BE2  50DF               	movf	indf2,w,c
  6071  000BE4  A4D8               	btfss	status,2,c
  6072  000BE6  D012               	goto	l344
  6073  000BE8  501C               	movf	strcmp2@inx,w,c
  6074  000BEA  2415               	addwf	strcmp2@b,w,c
  6075  000BEC  6E17               	movwf	??_strcmp2& (0+255),c
  6076  000BEE  501D               	movf	strcmp2@inx+1,w,c
  6077  000BF0  2016               	addwfc	strcmp2@b+1,w,c
  6078  000BF2  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  6079  000BF4  C017  FFF6         	movff	??_strcmp2,tblptrl
  6080  000BF8  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  6081  000BFC                     	if	0	;tblptru may be non-zero
  6082  000BFC                     	endif
  6083  000BFC                     	if	0	;tblptru may be non-zero
  6084  000BFC                     	endif
  6085  000BFC  0008               	tblrd		*
  6086  000BFE  50F5               	movf	tablat,w,c
  6087  000C00  0900               	iorlw	0
  6088  000C02  B4D8               	btfsc	status,2,c
  6089  000C04  D003               	goto	l344
  6090                           
  6091                           ;SlaveComm.c: 623: {
  6092                           ;SlaveComm.c: 624: match = -1;
  6093  000C06  681A               	setf	strcmp2@match,c
  6094  000C08  681B               	setf	strcmp2@match+1,c
  6095                           
  6096                           ;SlaveComm.c: 625: }
  6097  000C0A  D01C               	goto	l346
  6098  000C0C                     l344:
  6099                           
  6100                           ;SlaveComm.c: 626: else if( (a[inx] != '\0') && (b[inx] == '\0') )
  6101  000C0C  501C               	movf	strcmp2@inx,w,c
  6102  000C0E  2413               	addwf	strcmp2@a,w,c
  6103  000C10  6ED9               	movwf	fsr2l,c
  6104  000C12  501D               	movf	strcmp2@inx+1,w,c
  6105  000C14  2014               	addwfc	strcmp2@a+1,w,c
  6106  000C16  6EDA               	movwf	fsr2h,c
  6107  000C18  50DF               	movf	indf2,w,c
  6108  000C1A  B4D8               	btfsc	status,2,c
  6109  000C1C  D013               	goto	l346
  6110  000C1E  501C               	movf	strcmp2@inx,w,c
  6111  000C20  2415               	addwf	strcmp2@b,w,c
  6112  000C22  6E17               	movwf	??_strcmp2& (0+255),c
  6113  000C24  501D               	movf	strcmp2@inx+1,w,c
  6114  000C26  2016               	addwfc	strcmp2@b+1,w,c
  6115  000C28  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  6116  000C2A  C017  FFF6         	movff	??_strcmp2,tblptrl
  6117  000C2E  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  6118  000C32                     	if	0	;tblptru may be non-zero
  6119  000C32                     	endif
  6120  000C32                     	if	0	;tblptru may be non-zero
  6121  000C32                     	endif
  6122  000C32  0008               	tblrd		*
  6123  000C34  50F5               	movf	tablat,w,c
  6124  000C36  0900               	iorlw	0
  6125  000C38  A4D8               	btfss	status,2,c
  6126  000C3A  D004               	goto	l346
  6127                           
  6128                           ;SlaveComm.c: 627: {
  6129                           ;SlaveComm.c: 628: match = 1;
  6130  000C3C  0E00               	movlw	0
  6131  000C3E  6E1B               	movwf	strcmp2@match+1,c
  6132  000C40  0E01               	movlw	1
  6133  000C42  6E1A               	movwf	strcmp2@match,c
  6134  000C44                     l346:
  6135                           
  6136                           ;SlaveComm.c: 629: }
  6137                           ;SlaveComm.c: 631: return match;
  6138  000C44  C01A  F013         	movff	strcmp2@match,?_strcmp2
  6139  000C48  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  6140  000C4C  0012               	return	
  6141  000C4E                     __end_of_strcmp2:
  6142                           	opt stack 0
  6143                           tblptru	equ	0xFF8
  6144                           tblptrh	equ	0xFF7
  6145                           tblptrl	equ	0xFF6
  6146                           tablat	equ	0xFF5
  6147                           prodh	equ	0xFF4
  6148                           prodl	equ	0xFF3
  6149                           intcon	equ	0xFF2
  6150                           intcon2	equ	0xFF1
  6151                           intcon3	equ	0xFF0
  6152                           postinc0	equ	0xFEE
  6153                           plusw0	equ	0xFEB
  6154                           wreg	equ	0xFE8
  6155                           postinc1	equ	0xFE6
  6156                           fsr1h	equ	0xFE2
  6157                           fsr1l	equ	0xFE1
  6158                           indf2	equ	0xFDF
  6159                           postinc2	equ	0xFDE
  6160                           postdec2	equ	0xFDD
  6161                           plusw2	equ	0xFDB
  6162                           fsr2h	equ	0xFDA
  6163                           fsr2l	equ	0xFD9
  6164                           status	equ	0xFD8
  6165                           
  6166 ;; *************** function _send_end_of_transmission *****************
  6167 ;; Defined at:
  6168 ;;		line 677 in file "SlaveComm.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  send_buffer     2   52[COMRAM] PTR struct buffer
  6171 ;;		 -> communications@send_buffer(42), 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6183 ;;      Params:         2       0       0       0       0       0       0
  6184 ;;      Locals:         0       0       0       0       0       0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0
  6186 ;;      Totals:         2       0       0       0       0       0       0
  6187 ;;Total ram usage:        2 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    6
  6190 ;; This function calls:
  6191 ;;		_command_builder1
  6192 ;; This function is called by:
  6193 ;;		_process_data_parameters
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text41
  6198  00211C                     __ptext41:
  6199                           	opt stack 0
  6200  00211C                     _send_end_of_transmission:
  6201                           	opt stack 20
  6202                           
  6203                           ;SlaveComm.c: 679: command_builder1( send_buffer, "END" );
  6204                           
  6205                           ;incstack = 0
  6206  00211C  C035  F02F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  6207  002120  C036  F030         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  6208  002124  0E4A               	movlw	low STR_1
  6209  002126  6E31               	movwf	command_builder1@data1,c
  6210  002128  0E06               	movlw	high STR_1
  6211  00212A  6E32               	movwf	command_builder1@data1+1,c
  6212  00212C  ECB7  F00D         	call	_command_builder1	;wreg free
  6213  002130  0012               	return	
  6214  002132                     __end_of_send_end_of_transmission:
  6215                           	opt stack 0
  6216                           tblptru	equ	0xFF8
  6217                           tblptrh	equ	0xFF7
  6218                           tblptrl	equ	0xFF6
  6219                           tablat	equ	0xFF5
  6220                           prodh	equ	0xFF4
  6221                           prodl	equ	0xFF3
  6222                           intcon	equ	0xFF2
  6223                           intcon2	equ	0xFF1
  6224                           intcon3	equ	0xFF0
  6225                           postinc0	equ	0xFEE
  6226                           plusw0	equ	0xFEB
  6227                           wreg	equ	0xFE8
  6228                           postinc1	equ	0xFE6
  6229                           fsr1h	equ	0xFE2
  6230                           fsr1l	equ	0xFE1
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           plusw2	equ	0xFDB
  6235                           fsr2h	equ	0xFDA
  6236                           fsr2l	equ	0xFD9
  6237                           status	equ	0xFD8
  6238                           
  6239 ;; *************** function _command_builder1 *****************
  6240 ;; Defined at:
  6241 ;;		line 462 in file "SlaveComm.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  6244 ;;		 -> communications@send_buffer(42), 
  6245 ;;  data1           2   48[COMRAM] PTR unsigned char 
  6246 ;;		 -> STR_12(4), 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  xsum            2   50[COMRAM] int 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:         4       0       0       0       0       0       0
  6259 ;;      Locals:         2       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0
  6261 ;;      Totals:         6       0       0       0       0       0       0
  6262 ;;Total ram usage:        6 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    5
  6265 ;; This function calls:
  6266 ;;		_command_builder_add_char
  6267 ;;		_command_builder_add_string
  6268 ;;		_xsum_builder
  6269 ;; This function is called by:
  6270 ;;		_send_end_of_transmission
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text42
  6275  001B6E                     __ptext42:
  6276                           	opt stack 0
  6277  001B6E                     _command_builder1:
  6278                           	opt stack 20
  6279                           
  6280                           ;SlaveComm.c: 464: command_builder_add_char( send_buffer, '#' );
  6281                           
  6282                           ;incstack = 0
  6283  001B6E  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  6284  001B72  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  6285  001B76  0E23               	movlw	35
  6286  001B78  6E15               	movwf	command_builder_add_char@data,c
  6287  001B7A  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6288                           
  6289                           ;SlaveComm.c: 465: command_builder_add_char( send_buffer, '!' );
  6290  001B7E  C02F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  6291  001B82  C030  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  6292  001B86  0E21               	movlw	33
  6293  001B88  6E15               	movwf	command_builder_add_char@data,c
  6294  001B8A  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6295                           
  6296                           ;SlaveComm.c: 466: int xsum = 0;
  6297  001B8E  0E00               	movlw	0
  6298  001B90  6E34               	movwf	command_builder1@xsum+1,c
  6299  001B92  0E00               	movlw	0
  6300  001B94  6E33               	movwf	command_builder1@xsum,c
  6301                           
  6302                           ;SlaveComm.c: 467: xsum += command_builder_add_string( send_buffer, data1 );
  6303  001B96  C02F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  6304  001B9A  C030  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  6305  001B9E  C031  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  6306  001BA2  C032  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  6307  001BA6  EC37  F00B         	call	_command_builder_add_string	;wreg free
  6308  001BAA  5017               	movf	?_command_builder_add_string,w,c
  6309  001BAC  2633               	addwf	command_builder1@xsum,f,c
  6310  001BAE  5018               	movf	?_command_builder_add_string+1,w,c
  6311  001BB0  2234               	addwfc	command_builder1@xsum+1,f,c
  6312                           
  6313                           ;SlaveComm.c: 468: xsum_builder( send_buffer, xsum );
  6314  001BB2  C02F  F02B         	movff	command_builder1@send_buffer,xsum_builder@send_buffer
  6315  001BB6  C030  F02C         	movff	command_builder1@send_buffer+1,xsum_builder@send_buffer+1
  6316  001BBA  C033  F02D         	movff	command_builder1@xsum,xsum_builder@xsum
  6317  001BBE  C034  F02E         	movff	command_builder1@xsum+1,xsum_builder@xsum+1
  6318  001BC2  EC58  F00D         	call	_xsum_builder	;wreg free
  6319  001BC6  0012               	return	
  6320  001BC8                     __end_of_command_builder1:
  6321                           	opt stack 0
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           prodh	equ	0xFF4
  6327                           prodl	equ	0xFF3
  6328                           intcon	equ	0xFF2
  6329                           intcon2	equ	0xFF1
  6330                           intcon3	equ	0xFF0
  6331                           postinc0	equ	0xFEE
  6332                           plusw0	equ	0xFEB
  6333                           wreg	equ	0xFE8
  6334                           postinc1	equ	0xFE6
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           plusw2	equ	0xFDB
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function _com_command_setEnergyUsed *****************
  6346 ;; Defined at:
  6347 ;;		line 703 in file "SlaveComm.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  send_buffer     2   56[COMRAM] PTR struct buffer
  6350 ;;		 -> communications@send_buffer(42), 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  temp           12   16[BANK0 ] unsigned char [12]
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6362 ;;      Params:         2       0       0       0       0       0       0
  6363 ;;      Locals:         0      12       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0
  6365 ;;      Totals:         2      12       0       0       0       0       0
  6366 ;;Total ram usage:       14 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    6
  6369 ;; This function calls:
  6370 ;;		_command_builder3
  6371 ;;		_ultoa
  6372 ;; This function is called by:
  6373 ;;		_resetCommunications
  6374 ;;		_process_data_parameters
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text43
  6379  001D52                     __ptext43:
  6380                           	opt stack 0
  6381  001D52                     _com_command_setEnergyUsed:
  6382                           	opt stack 21
  6383                           
  6384                           ;SlaveComm.c: 705: char temp[12];
  6385                           ;SlaveComm.c: 707: ultoa( temp, meterEnergyUsed_global, 10 );
  6386                           
  6387                           ;incstack = 0
  6388  001D52  0E70               	movlw	low com_command_setEnergyUsed@temp
  6389  001D54  6E20               	movwf	ultoa@buf,c
  6390  001D56  0E00               	movlw	high com_command_setEnergyUsed@temp
  6391  001D58  6E21               	movwf	ultoa@buf+1,c
  6392  001D5A  C03D  F022         	movff	_meterEnergyUsed_global,ultoa@val
  6393  001D5E  C03E  F023         	movff	_meterEnergyUsed_global+1,ultoa@val+1
  6394  001D62  C03F  F024         	movff	_meterEnergyUsed_global+2,ultoa@val+2
  6395  001D66  C040  F025         	movff	_meterEnergyUsed_global+3,ultoa@val+3
  6396  001D6A  0E00               	movlw	0
  6397  001D6C  6E27               	movwf	ultoa@base+1,c
  6398  001D6E  0E0A               	movlw	10
  6399  001D70  6E26               	movwf	ultoa@base,c
  6400  001D72  EC27  F006         	call	_ultoa	;wreg free
  6401                           
  6402                           ;SlaveComm.c: 709: command_builder3( send_buffer, "Set", "EnUsed", temp );
  6403  001D76  C039  F02F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  6404  001D7A  C03A  F030         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  6405  001D7E  0E4E               	movlw	low STR_2
  6406  001D80  6E31               	movwf	command_builder3@data1,c
  6407  001D82  0E06               	movlw	high STR_2
  6408  001D84  6E32               	movwf	command_builder3@data1+1,c
  6409  001D86  0E17               	movlw	low STR_4
  6410  001D88  6E33               	movwf	command_builder3@data2,c
  6411  001D8A  0E06               	movlw	high STR_4
  6412  001D8C  6E34               	movwf	command_builder3@data2+1,c
  6413  001D8E  0E70               	movlw	low com_command_setEnergyUsed@temp
  6414  001D90  6E35               	movwf	command_builder3@data3,c
  6415  001D92  0E00               	movlw	high com_command_setEnergyUsed@temp
  6416  001D94  6E36               	movwf	command_builder3@data3+1,c
  6417  001D96  ECCB  F008         	call	_command_builder3	;wreg free
  6418  001D9A  0012               	return	
  6419  001D9C                     __end_of_com_command_setEnergyUsed:
  6420                           	opt stack 0
  6421                           tblptru	equ	0xFF8
  6422                           tblptrh	equ	0xFF7
  6423                           tblptrl	equ	0xFF6
  6424                           tablat	equ	0xFF5
  6425                           prodh	equ	0xFF4
  6426                           prodl	equ	0xFF3
  6427                           intcon	equ	0xFF2
  6428                           intcon2	equ	0xFF1
  6429                           intcon3	equ	0xFF0
  6430                           postinc0	equ	0xFEE
  6431                           plusw0	equ	0xFEB
  6432                           wreg	equ	0xFE8
  6433                           postinc1	equ	0xFE6
  6434                           fsr1h	equ	0xFE2
  6435                           fsr1l	equ	0xFE1
  6436                           indf2	equ	0xFDF
  6437                           postinc2	equ	0xFDE
  6438                           postdec2	equ	0xFDD
  6439                           plusw2	equ	0xFDB
  6440                           fsr2h	equ	0xFDA
  6441                           fsr2l	equ	0xFD9
  6442                           status	equ	0xFD8
  6443                           
  6444 ;; *************** function _ultoa *****************
  6445 ;; Defined at:
  6446 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  buf             2   31[COMRAM] PTR unsigned char 
  6449 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  6450 ;;  val             4   33[COMRAM] unsigned long 
  6451 ;;  base            2   37[COMRAM] int 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  v               4   39[COMRAM] unsigned long 
  6454 ;;  c               1   43[COMRAM] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  2   31[COMRAM] PTR unsigned char 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6464 ;;      Params:         8       0       0       0       0       0       0
  6465 ;;      Locals:         5       0       0       0       0       0       0
  6466 ;;      Temps:          0       0       0       0       0       0       0
  6467 ;;      Totals:        13       0       0       0       0       0       0
  6468 ;;Total ram usage:       13 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    2
  6471 ;; This function calls:
  6472 ;;		___lldiv
  6473 ;;		___llmod
  6474 ;; This function is called by:
  6475 ;;		_com_command_setPower
  6476 ;;		_com_command_setEnergyUsed
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text44
  6481  000C4E                     __ptext44:
  6482                           	opt stack 0
  6483  000C4E                     _ultoa:
  6484                           	opt stack 24
  6485                           
  6486                           ;incstack = 0
  6487  000C4E  C022  F028         	movff	ultoa@val,ultoa@v
  6488  000C52  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  6489  000C56  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  6490  000C5A  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  6491  000C5E  C028  F013         	movff	ultoa@v,___lldiv@dividend
  6492  000C62  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  6493  000C66  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  6494  000C6A  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  6495  000C6E  C026  F017         	movff	ultoa@base,___lldiv@divisor
  6496  000C72  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  6497  000C76  0E00               	movlw	0
  6498  000C78  BE18               	btfsc	___lldiv@divisor+1,7,c
  6499  000C7A  0EFF               	movlw	-1
  6500  000C7C  6E19               	movwf	___lldiv@divisor+2,c
  6501  000C7E  6E1A               	movwf	___lldiv@divisor+3,c
  6502  000C80  EC0B  F00C         	call	___lldiv	;wreg free
  6503  000C84  C013  F028         	movff	?___lldiv,ultoa@v
  6504  000C88  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  6505  000C8C  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  6506  000C90  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  6507  000C94  4A20               	infsnz	ultoa@buf,f,c
  6508  000C96  2A21               	incf	ultoa@buf+1,f,c
  6509  000C98  5028               	movf	ultoa@v,w,c
  6510  000C9A  1029               	iorwf	ultoa@v+1,w,c
  6511  000C9C  102A               	iorwf	ultoa@v+2,w,c
  6512  000C9E  102B               	iorwf	ultoa@v+3,w,c
  6513  000CA0  A4D8               	btfss	status,2,c
  6514  000CA2  D7DD               	goto	l1055
  6515  000CA4  C020  FFD9         	movff	ultoa@buf,fsr2l
  6516  000CA8  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  6517  000CAC  0E00               	movlw	0
  6518  000CAE  6EDF               	movwf	indf2,c
  6519  000CB0  0620               	decf	ultoa@buf,f,c
  6520  000CB2  A0D8               	btfss	status,0,c
  6521  000CB4  0621               	decf	ultoa@buf+1,f,c
  6522  000CB6  C022  F013         	movff	ultoa@val,___llmod@dividend
  6523  000CBA  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  6524  000CBE  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  6525  000CC2  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  6526  000CC6  C026  F017         	movff	ultoa@base,___llmod@divisor
  6527  000CCA  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  6528  000CCE  0E00               	movlw	0
  6529  000CD0  BE18               	btfsc	___llmod@divisor+1,7,c
  6530  000CD2  0EFF               	movlw	-1
  6531  000CD4  6E19               	movwf	___llmod@divisor+2,c
  6532  000CD6  6E1A               	movwf	___llmod@divisor+3,c
  6533  000CD8  ECF3  F00C         	call	___llmod	;wreg free
  6534  000CDC  5013               	movf	?___llmod,w,c
  6535  000CDE  6E2C               	movwf	ultoa@c,c
  6536  000CE0  C022  F013         	movff	ultoa@val,___lldiv@dividend
  6537  000CE4  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  6538  000CE8  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  6539  000CEC  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  6540  000CF0  C026  F017         	movff	ultoa@base,___lldiv@divisor
  6541  000CF4  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  6542  000CF8  0E00               	movlw	0
  6543  000CFA  BE18               	btfsc	___lldiv@divisor+1,7,c
  6544  000CFC  0EFF               	movlw	-1
  6545  000CFE  6E19               	movwf	___lldiv@divisor+2,c
  6546  000D00  6E1A               	movwf	___lldiv@divisor+3,c
  6547  000D02  EC0B  F00C         	call	___lldiv	;wreg free
  6548  000D06  C013  F022         	movff	?___lldiv,ultoa@val
  6549  000D0A  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  6550  000D0E  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  6551  000D12  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  6552  000D16  0E09               	movlw	9
  6553  000D18  642C               	cpfsgt	ultoa@c,c
  6554  000D1A  D002               	goto	l1058
  6555  000D1C  0E07               	movlw	7
  6556  000D1E  262C               	addwf	ultoa@c,f,c
  6557  000D20                     l1058:
  6558  000D20  0E30               	movlw	48
  6559  000D22  262C               	addwf	ultoa@c,f,c
  6560  000D24  C020  FFD9         	movff	ultoa@buf,fsr2l
  6561  000D28  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  6562  000D2C  C02C  FFDF         	movff	ultoa@c,indf2
  6563  000D30  0620               	decf	ultoa@buf,f,c
  6564  000D32  A0D8               	btfss	status,0,c
  6565  000D34  0621               	decf	ultoa@buf+1,f,c
  6566  000D36  5022               	movf	ultoa@val,w,c
  6567  000D38  1023               	iorwf	ultoa@val+1,w,c
  6568  000D3A  1024               	iorwf	ultoa@val+2,w,c
  6569  000D3C  1025               	iorwf	ultoa@val+3,w,c
  6570  000D3E  B4D8               	btfsc	status,2,c
  6571  000D40  0012               	return	
  6572  000D42  D7B9               	goto	l1057
  6573  000D44                     __end_of_ultoa:
  6574                           	opt stack 0
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           intcon2	equ	0xFF1
  6583                           intcon3	equ	0xFF0
  6584                           postinc0	equ	0xFEE
  6585                           plusw0	equ	0xFEB
  6586                           wreg	equ	0xFE8
  6587                           postinc1	equ	0xFE6
  6588                           fsr1h	equ	0xFE2
  6589                           fsr1l	equ	0xFE1
  6590                           indf2	equ	0xFDF
  6591                           postinc2	equ	0xFDE
  6592                           postdec2	equ	0xFDD
  6593                           plusw2	equ	0xFDB
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function ___llmod *****************
  6599 ;; Defined at:
  6600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  dividend        4   18[COMRAM] unsigned long 
  6603 ;;  divisor         4   22[COMRAM] unsigned long 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  counter         1   26[COMRAM] unsigned char 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  4   18[COMRAM] unsigned long 
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6615 ;;      Params:         8       0       0       0       0       0       0
  6616 ;;      Locals:         1       0       0       0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0
  6618 ;;      Totals:         9       0       0       0       0       0       0
  6619 ;;Total ram usage:        9 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    1
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_main
  6626 ;;		_ultoa
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text45
  6631  0019E6                     __ptext45:
  6632                           	opt stack 0
  6633  0019E6                     ___llmod:
  6634                           	opt stack 24
  6635                           
  6636                           ;incstack = 0
  6637  0019E6  5017               	movf	___llmod@divisor,w,c
  6638  0019E8  1018               	iorwf	___llmod@divisor+1,w,c
  6639  0019EA  1019               	iorwf	___llmod@divisor+2,w,c
  6640  0019EC  101A               	iorwf	___llmod@divisor+3,w,c
  6641  0019EE  B4D8               	btfsc	status,2,c
  6642  0019F0  D024               	goto	l1017
  6643  0019F2  0E01               	movlw	1
  6644  0019F4  6E1B               	movwf	___llmod@counter,c
  6645  0019F6  D006               	goto	l1012
  6646  0019F8  90D8               	bcf	status,0,c
  6647  0019FA  3617               	rlcf	___llmod@divisor,f,c
  6648  0019FC  3618               	rlcf	___llmod@divisor+1,f,c
  6649  0019FE  3619               	rlcf	___llmod@divisor+2,f,c
  6650  001A00  361A               	rlcf	___llmod@divisor+3,f,c
  6651  001A02  2A1B               	incf	___llmod@counter,f,c
  6652  001A04                     l1012:
  6653  001A04  AE1A               	btfss	___llmod@divisor+3,7,c
  6654  001A06  D7F8               	goto	l1013
  6655  001A08                     u2590:
  6656  001A08  5017               	movf	___llmod@divisor,w,c
  6657  001A0A  5C13               	subwf	___llmod@dividend,w,c
  6658  001A0C  5018               	movf	___llmod@divisor+1,w,c
  6659  001A0E  5814               	subwfb	___llmod@dividend+1,w,c
  6660  001A10  5019               	movf	___llmod@divisor+2,w,c
  6661  001A12  5815               	subwfb	___llmod@dividend+2,w,c
  6662  001A14  501A               	movf	___llmod@divisor+3,w,c
  6663  001A16  5816               	subwfb	___llmod@dividend+3,w,c
  6664  001A18  A0D8               	btfss	status,0,c
  6665  001A1A  D008               	goto	l1016
  6666  001A1C  5017               	movf	___llmod@divisor,w,c
  6667  001A1E  5E13               	subwf	___llmod@dividend,f,c
  6668  001A20  5018               	movf	___llmod@divisor+1,w,c
  6669  001A22  5A14               	subwfb	___llmod@dividend+1,f,c
  6670  001A24  5019               	movf	___llmod@divisor+2,w,c
  6671  001A26  5A15               	subwfb	___llmod@dividend+2,f,c
  6672  001A28  501A               	movf	___llmod@divisor+3,w,c
  6673  001A2A  5A16               	subwfb	___llmod@dividend+3,f,c
  6674  001A2C                     l1016:
  6675  001A2C  90D8               	bcf	status,0,c
  6676  001A2E  321A               	rrcf	___llmod@divisor+3,f,c
  6677  001A30  3219               	rrcf	___llmod@divisor+2,f,c
  6678  001A32  3218               	rrcf	___llmod@divisor+1,f,c
  6679  001A34  3217               	rrcf	___llmod@divisor,f,c
  6680  001A36  2E1B               	decfsz	___llmod@counter,f,c
  6681  001A38  D7E7               	goto	u2590
  6682  001A3A                     l1017:
  6683  001A3A  C013  F013         	movff	___llmod@dividend,?___llmod
  6684  001A3E  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  6685  001A42  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  6686  001A46  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  6687  001A4A  0012               	return		;funcret
  6688  001A4C                     __end_of___llmod:
  6689                           	opt stack 0
  6690                           tblptru	equ	0xFF8
  6691                           tblptrh	equ	0xFF7
  6692                           tblptrl	equ	0xFF6
  6693                           tablat	equ	0xFF5
  6694                           prodh	equ	0xFF4
  6695                           prodl	equ	0xFF3
  6696                           intcon	equ	0xFF2
  6697                           intcon2	equ	0xFF1
  6698                           intcon3	equ	0xFF0
  6699                           postinc0	equ	0xFEE
  6700                           plusw0	equ	0xFEB
  6701                           wreg	equ	0xFE8
  6702                           postinc1	equ	0xFE6
  6703                           fsr1h	equ	0xFE2
  6704                           fsr1l	equ	0xFE1
  6705                           indf2	equ	0xFDF
  6706                           postinc2	equ	0xFDE
  6707                           postdec2	equ	0xFDD
  6708                           plusw2	equ	0xFDB
  6709                           fsr2h	equ	0xFDA
  6710                           fsr2l	equ	0xFD9
  6711                           status	equ	0xFD8
  6712                           
  6713 ;; *************** function ___lldiv *****************
  6714 ;; Defined at:
  6715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  dividend        4   18[COMRAM] unsigned long 
  6718 ;;  divisor         4   22[COMRAM] unsigned long 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  quotient        4   26[COMRAM] unsigned long 
  6721 ;;  counter         1   30[COMRAM] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  4   18[COMRAM] unsigned long 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6731 ;;      Params:         8       0       0       0       0       0       0
  6732 ;;      Locals:         5       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0
  6734 ;;      Totals:        13       0       0       0       0       0       0
  6735 ;;Total ram usage:       13 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_powerCalculateWatts
  6742 ;;		_powerReduction
  6743 ;;		_ultoa
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text46
  6748  001816                     __ptext46:
  6749                           	opt stack 0
  6750  001816                     ___lldiv:
  6751                           	opt stack 27
  6752                           
  6753                           ;incstack = 0
  6754  001816  0E00               	movlw	0
  6755  001818  6E1B               	movwf	___lldiv@quotient,c
  6756  00181A  0E00               	movlw	0
  6757  00181C  6E1C               	movwf	___lldiv@quotient+1,c
  6758  00181E  0E00               	movlw	0
  6759  001820  6E1D               	movwf	___lldiv@quotient+2,c
  6760  001822  0E00               	movlw	0
  6761  001824  6E1E               	movwf	___lldiv@quotient+3,c
  6762  001826  5017               	movf	___lldiv@divisor,w,c
  6763  001828  1018               	iorwf	___lldiv@divisor+1,w,c
  6764  00182A  1019               	iorwf	___lldiv@divisor+2,w,c
  6765  00182C  101A               	iorwf	___lldiv@divisor+3,w,c
  6766  00182E  B4D8               	btfsc	status,2,c
  6767  001830  D02A               	goto	l1007
  6768  001832  0E01               	movlw	1
  6769  001834  6E1F               	movwf	___lldiv@counter,c
  6770  001836  D006               	goto	l1002
  6771  001838  90D8               	bcf	status,0,c
  6772  00183A  3617               	rlcf	___lldiv@divisor,f,c
  6773  00183C  3618               	rlcf	___lldiv@divisor+1,f,c
  6774  00183E  3619               	rlcf	___lldiv@divisor+2,f,c
  6775  001840  361A               	rlcf	___lldiv@divisor+3,f,c
  6776  001842  2A1F               	incf	___lldiv@counter,f,c
  6777  001844                     l1002:
  6778  001844  AE1A               	btfss	___lldiv@divisor+3,7,c
  6779  001846  D7F8               	goto	l1003
  6780  001848                     u2560:
  6781  001848  90D8               	bcf	status,0,c
  6782  00184A  361B               	rlcf	___lldiv@quotient,f,c
  6783  00184C  361C               	rlcf	___lldiv@quotient+1,f,c
  6784  00184E  361D               	rlcf	___lldiv@quotient+2,f,c
  6785  001850  361E               	rlcf	___lldiv@quotient+3,f,c
  6786  001852  5017               	movf	___lldiv@divisor,w,c
  6787  001854  5C13               	subwf	___lldiv@dividend,w,c
  6788  001856  5018               	movf	___lldiv@divisor+1,w,c
  6789  001858  5814               	subwfb	___lldiv@dividend+1,w,c
  6790  00185A  5019               	movf	___lldiv@divisor+2,w,c
  6791  00185C  5815               	subwfb	___lldiv@dividend+2,w,c
  6792  00185E  501A               	movf	___lldiv@divisor+3,w,c
  6793  001860  5816               	subwfb	___lldiv@dividend+3,w,c
  6794  001862  A0D8               	btfss	status,0,c
  6795  001864  D009               	goto	l1006
  6796  001866  5017               	movf	___lldiv@divisor,w,c
  6797  001868  5E13               	subwf	___lldiv@dividend,f,c
  6798  00186A  5018               	movf	___lldiv@divisor+1,w,c
  6799  00186C  5A14               	subwfb	___lldiv@dividend+1,f,c
  6800  00186E  5019               	movf	___lldiv@divisor+2,w,c
  6801  001870  5A15               	subwfb	___lldiv@dividend+2,f,c
  6802  001872  501A               	movf	___lldiv@divisor+3,w,c
  6803  001874  5A16               	subwfb	___lldiv@dividend+3,f,c
  6804  001876  801B               	bsf	___lldiv@quotient,0,c
  6805  001878                     l1006:
  6806  001878  90D8               	bcf	status,0,c
  6807  00187A  321A               	rrcf	___lldiv@divisor+3,f,c
  6808  00187C  3219               	rrcf	___lldiv@divisor+2,f,c
  6809  00187E  3218               	rrcf	___lldiv@divisor+1,f,c
  6810  001880  3217               	rrcf	___lldiv@divisor,f,c
  6811  001882  2E1F               	decfsz	___lldiv@counter,f,c
  6812  001884  D7E1               	goto	u2560
  6813  001886                     l1007:
  6814  001886  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  6815  00188A  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  6816  00188E  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  6817  001892  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  6818  001896  0012               	return		;funcret
  6819  001898                     __end_of___lldiv:
  6820                           	opt stack 0
  6821                           tblptru	equ	0xFF8
  6822                           tblptrh	equ	0xFF7
  6823                           tblptrl	equ	0xFF6
  6824                           tablat	equ	0xFF5
  6825                           prodh	equ	0xFF4
  6826                           prodl	equ	0xFF3
  6827                           intcon	equ	0xFF2
  6828                           intcon2	equ	0xFF1
  6829                           intcon3	equ	0xFF0
  6830                           postinc0	equ	0xFEE
  6831                           plusw0	equ	0xFEB
  6832                           wreg	equ	0xFE8
  6833                           postinc1	equ	0xFE6
  6834                           fsr1h	equ	0xFE2
  6835                           fsr1l	equ	0xFE1
  6836                           indf2	equ	0xFDF
  6837                           postinc2	equ	0xFDE
  6838                           postdec2	equ	0xFDD
  6839                           plusw2	equ	0xFDB
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function _command_builder3 *****************
  6845 ;; Defined at:
  6846 ;;		line 487 in file "SlaveComm.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  6849 ;;		 -> communications@send_buffer(42), 
  6850 ;;  data1           2   48[COMRAM] PTR unsigned char 
  6851 ;;		 -> STR_27(4), STR_22(4), STR_19(4), STR_17(4), 
  6852 ;;		 -> STR_15(4), 
  6853 ;;  data2           2   50[COMRAM] PTR unsigned char 
  6854 ;;		 -> STR_28(10), STR_23(5), STR_20(6), STR_18(7), 
  6855 ;;		 -> STR_16(6), 
  6856 ;;  data3           2   52[COMRAM] PTR unsigned char 
  6857 ;;		 -> STR_29(4), STR_24(4), STR_21(4), com_command_setEnergyUsed@temp(12), 
  6858 ;;		 -> com_command_setPower@temp(12), 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  xsum            2   54[COMRAM] int 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6870 ;;      Params:         8       0       0       0       0       0       0
  6871 ;;      Locals:         2       0       0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0
  6873 ;;      Totals:        10       0       0       0       0       0       0
  6874 ;;Total ram usage:       10 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    5
  6877 ;; This function calls:
  6878 ;;		_command_builder_add_char
  6879 ;;		_command_builder_add_string
  6880 ;;		_xsum_builder
  6881 ;; This function is called by:
  6882 ;;		_com_command_setPower
  6883 ;;		_com_command_setEnergyUsed
  6884 ;;		_com_command_setVersion
  6885 ;;		_com_command_setVolts
  6886 ;;		_com_command_setAmps
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text47
  6891  001196                     __ptext47:
  6892                           	opt stack 0
  6893  001196                     _command_builder3:
  6894                           	opt stack 21
  6895                           
  6896                           ;SlaveComm.c: 489: command_builder_add_char( send_buffer, '#' );
  6897                           
  6898                           ;incstack = 0
  6899  001196  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6900  00119A  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6901  00119E  0E23               	movlw	35
  6902  0011A0  6E15               	movwf	command_builder_add_char@data,c
  6903  0011A2  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6904                           
  6905                           ;SlaveComm.c: 490: command_builder_add_char( send_buffer, '!' );
  6906  0011A6  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6907  0011AA  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6908  0011AE  0E21               	movlw	33
  6909  0011B0  6E15               	movwf	command_builder_add_char@data,c
  6910  0011B2  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6911                           
  6912                           ;SlaveComm.c: 491: int xsum = 0;
  6913  0011B6  0E00               	movlw	0
  6914  0011B8  6E38               	movwf	command_builder3@xsum+1,c
  6915  0011BA  0E00               	movlw	0
  6916  0011BC  6E37               	movwf	command_builder3@xsum,c
  6917                           
  6918                           ;SlaveComm.c: 492: xsum += command_builder_add_string( send_buffer, data1 );
  6919  0011BE  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6920  0011C2  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6921  0011C6  C031  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  6922  0011CA  C032  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  6923  0011CE  EC37  F00B         	call	_command_builder_add_string	;wreg free
  6924  0011D2  5017               	movf	?_command_builder_add_string,w,c
  6925  0011D4  2637               	addwf	command_builder3@xsum,f,c
  6926  0011D6  5018               	movf	?_command_builder_add_string+1,w,c
  6927  0011D8  2238               	addwfc	command_builder3@xsum+1,f,c
  6928                           
  6929                           ;SlaveComm.c: 493: xsum += command_builder_add_char( send_buffer, ';' );
  6930  0011DA  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6931  0011DE  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6932  0011E2  0E3B               	movlw	59
  6933  0011E4  6E15               	movwf	command_builder_add_char@data,c
  6934  0011E6  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6935  0011EA  5013               	movf	?_command_builder_add_char,w,c
  6936  0011EC  2637               	addwf	command_builder3@xsum,f,c
  6937  0011EE  5014               	movf	?_command_builder_add_char+1,w,c
  6938  0011F0  2238               	addwfc	command_builder3@xsum+1,f,c
  6939                           
  6940                           ;SlaveComm.c: 494: xsum += command_builder_add_string( send_buffer, data2 );
  6941  0011F2  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6942  0011F6  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6943  0011FA  C033  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  6944  0011FE  C034  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  6945  001202  EC37  F00B         	call	_command_builder_add_string	;wreg free
  6946  001206  5017               	movf	?_command_builder_add_string,w,c
  6947  001208  2637               	addwf	command_builder3@xsum,f,c
  6948  00120A  5018               	movf	?_command_builder_add_string+1,w,c
  6949  00120C  2238               	addwfc	command_builder3@xsum+1,f,c
  6950                           
  6951                           ;SlaveComm.c: 495: xsum += command_builder_add_char( send_buffer, ';' );
  6952  00120E  C02F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  6953  001212  C030  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  6954  001216  0E3B               	movlw	59
  6955  001218  6E15               	movwf	command_builder_add_char@data,c
  6956  00121A  EC89  F00D         	call	_command_builder_add_char	;wreg free
  6957  00121E  5013               	movf	?_command_builder_add_char,w,c
  6958  001220  2637               	addwf	command_builder3@xsum,f,c
  6959  001222  5014               	movf	?_command_builder_add_char+1,w,c
  6960  001224  2238               	addwfc	command_builder3@xsum+1,f,c
  6961                           
  6962                           ;SlaveComm.c: 496: xsum += command_builder_add_string( send_buffer, data3 );
  6963  001226  C02F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  6964  00122A  C030  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  6965  00122E  C035  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  6966  001232  C036  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  6967  001236  EC37  F00B         	call	_command_builder_add_string	;wreg free
  6968  00123A  5017               	movf	?_command_builder_add_string,w,c
  6969  00123C  2637               	addwf	command_builder3@xsum,f,c
  6970  00123E  5018               	movf	?_command_builder_add_string+1,w,c
  6971  001240  2238               	addwfc	command_builder3@xsum+1,f,c
  6972                           
  6973                           ;SlaveComm.c: 497: xsum_builder( send_buffer, xsum );
  6974  001242  C02F  F02B         	movff	command_builder3@send_buffer,xsum_builder@send_buffer
  6975  001246  C030  F02C         	movff	command_builder3@send_buffer+1,xsum_builder@send_buffer+1
  6976  00124A  C037  F02D         	movff	command_builder3@xsum,xsum_builder@xsum
  6977  00124E  C038  F02E         	movff	command_builder3@xsum+1,xsum_builder@xsum+1
  6978  001252  EC58  F00D         	call	_xsum_builder	;wreg free
  6979  001256  0012               	return	
  6980  001258                     __end_of_command_builder3:
  6981                           	opt stack 0
  6982                           tblptru	equ	0xFF8
  6983                           tblptrh	equ	0xFF7
  6984                           tblptrl	equ	0xFF6
  6985                           tablat	equ	0xFF5
  6986                           prodh	equ	0xFF4
  6987                           prodl	equ	0xFF3
  6988                           intcon	equ	0xFF2
  6989                           intcon2	equ	0xFF1
  6990                           intcon3	equ	0xFF0
  6991                           postinc0	equ	0xFEE
  6992                           plusw0	equ	0xFEB
  6993                           wreg	equ	0xFE8
  6994                           postinc1	equ	0xFE6
  6995                           fsr1h	equ	0xFE2
  6996                           fsr1l	equ	0xFE1
  6997                           indf2	equ	0xFDF
  6998                           postinc2	equ	0xFDE
  6999                           postdec2	equ	0xFDD
  7000                           plusw2	equ	0xFDB
  7001                           fsr2h	equ	0xFDA
  7002                           fsr2l	equ	0xFD9
  7003                           status	equ	0xFD8
  7004                           
  7005 ;; *************** function _xsum_builder *****************
  7006 ;; Defined at:
  7007 ;;		line 519 in file "SlaveComm.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  send_buffer     2   42[COMRAM] PTR struct buffer
  7010 ;;		 -> communications@send_buffer(42), 
  7011 ;;  xsum            2   44[COMRAM] int 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  xsumBuf        16    0[BANK0 ] unsigned char [16]
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7023 ;;      Params:         4       0       0       0       0       0       0
  7024 ;;      Locals:         0      16       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0
  7026 ;;      Totals:         4      16       0       0       0       0       0
  7027 ;;Total ram usage:       20 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    4
  7030 ;; This function calls:
  7031 ;;		_command_builder_add_char
  7032 ;;		_command_builder_add_string
  7033 ;;		_itoa
  7034 ;; This function is called by:
  7035 ;;		_command_builder1
  7036 ;;		_command_builder3
  7037 ;;		_command_builder2
  7038 ;;		_command_builder4
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text48
  7043  001AB0                     __ptext48:
  7044                           	opt stack 0
  7045  001AB0                     _xsum_builder:
  7046                           	opt stack 21
  7047                           
  7048                           ;SlaveComm.c: 522: command_builder_add_char( send_buffer, ';' );
  7049                           
  7050                           ;incstack = 0
  7051  001AB0  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  7052  001AB4  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  7053  001AB8  0E3B               	movlw	59
  7054  001ABA  6E15               	movwf	command_builder_add_char@data,c
  7055  001ABC  EC89  F00D         	call	_command_builder_add_char	;wreg free
  7056                           
  7057                           ;SlaveComm.c: 523: command_builder_add_char( send_buffer, '$' );
  7058  001AC0  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  7059  001AC4  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  7060  001AC8  0E24               	movlw	36
  7061  001ACA  6E15               	movwf	command_builder_add_char@data,c
  7062  001ACC  EC89  F00D         	call	_command_builder_add_char	;wreg free
  7063                           
  7064                           ;SlaveComm.c: 524: char xsumBuf[16];
  7065                           ;SlaveComm.c: 525: itoa( xsumBuf, xsum, 10 );
  7066  001AD0  0E60               	movlw	low xsum_builder@xsumBuf
  7067  001AD2  6E23               	movwf	itoa@buf,c
  7068  001AD4  0E00               	movlw	high xsum_builder@xsumBuf
  7069  001AD6  6E24               	movwf	itoa@buf+1,c
  7070  001AD8  C02D  F025         	movff	xsum_builder@xsum,itoa@val
  7071  001ADC  C02E  F026         	movff	xsum_builder@xsum+1,itoa@val+1
  7072  001AE0  0E00               	movlw	0
  7073  001AE2  6E28               	movwf	itoa@base+1,c
  7074  001AE4  0E0A               	movlw	10
  7075  001AE6  6E27               	movwf	itoa@base,c
  7076  001AE8  ECF2  F00E         	call	_itoa	;wreg free
  7077                           
  7078                           ;SlaveComm.c: 526: command_builder_add_string( send_buffer, xsumBuf );
  7079  001AEC  C02B  F017         	movff	xsum_builder@send_buffer,command_builder_add_string@send_buffer
  7080  001AF0  C02C  F018         	movff	xsum_builder@send_buffer+1,command_builder_add_string@send_buffer+1
  7081  001AF4  0E60               	movlw	low xsum_builder@xsumBuf
  7082  001AF6  6E19               	movwf	command_builder_add_string@data_string,c
  7083  001AF8  0E00               	movlw	high xsum_builder@xsumBuf
  7084  001AFA  6E1A               	movwf	command_builder_add_string@data_string+1,c
  7085  001AFC  EC37  F00B         	call	_command_builder_add_string	;wreg free
  7086                           
  7087                           ;SlaveComm.c: 528: command_builder_add_char( send_buffer, '*' );
  7088  001B00  C02B  F013         	movff	xsum_builder@send_buffer,command_builder_add_char@send_buffer
  7089  001B04  C02C  F014         	movff	xsum_builder@send_buffer+1,command_builder_add_char@send_buffer+1
  7090  001B08  0E2A               	movlw	42
  7091  001B0A  6E15               	movwf	command_builder_add_char@data,c
  7092  001B0C  EC89  F00D         	call	_command_builder_add_char	;wreg free
  7093  001B10  0012               	return	
  7094  001B12                     __end_of_xsum_builder:
  7095                           	opt stack 0
  7096                           tblptru	equ	0xFF8
  7097                           tblptrh	equ	0xFF7
  7098                           tblptrl	equ	0xFF6
  7099                           tablat	equ	0xFF5
  7100                           prodh	equ	0xFF4
  7101                           prodl	equ	0xFF3
  7102                           intcon	equ	0xFF2
  7103                           intcon2	equ	0xFF1
  7104                           intcon3	equ	0xFF0
  7105                           postinc0	equ	0xFEE
  7106                           plusw0	equ	0xFEB
  7107                           wreg	equ	0xFE8
  7108                           postinc1	equ	0xFE6
  7109                           fsr1h	equ	0xFE2
  7110                           fsr1l	equ	0xFE1
  7111                           indf2	equ	0xFDF
  7112                           postinc2	equ	0xFDE
  7113                           postdec2	equ	0xFDD
  7114                           plusw2	equ	0xFDB
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function _itoa *****************
  7120 ;; Defined at:
  7121 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  buf             2   34[COMRAM] PTR unsigned char 
  7124 ;;		 -> xsum_builder@xsumBuf(16), 
  7125 ;;  val             2   36[COMRAM] int 
  7126 ;;  base            2   38[COMRAM] int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  cp              2   40[COMRAM] PTR unsigned char 
  7129 ;;		 -> xsum_builder@xsumBuf(16), 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2   34[COMRAM] PTR unsigned char 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7139 ;;      Params:         6       0       0       0       0       0       0
  7140 ;;      Locals:         2       0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0
  7142 ;;      Totals:         8       0       0       0       0       0       0
  7143 ;;Total ram usage:        8 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    3
  7146 ;; This function calls:
  7147 ;;		_utoa
  7148 ;; This function is called by:
  7149 ;;		_xsum_builder
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text49
  7154  001DE4                     __ptext49:
  7155                           	opt stack 0
  7156  001DE4                     _itoa:
  7157                           	opt stack 21
  7158                           
  7159                           ;incstack = 0
  7160  001DE4  C023  F029         	movff	itoa@buf,itoa@cp
  7161  001DE8  C024  F02A         	movff	itoa@buf+1,itoa@cp+1
  7162  001DEC  AE26               	btfss	itoa@val+1,7,c
  7163  001DEE  D00C               	goto	l968
  7164  001DF0  C023  FFD9         	movff	itoa@buf,fsr2l
  7165  001DF4  C024  FFDA         	movff	itoa@buf+1,fsr2h
  7166  001DF8  0E2D               	movlw	45
  7167  001DFA  6EDF               	movwf	indf2,c
  7168  001DFC  4A23               	infsnz	itoa@buf,f,c
  7169  001DFE  2A24               	incf	itoa@buf+1,f,c
  7170  001E00  6C25               	negf	itoa@val,c
  7171  001E02  1E26               	comf	itoa@val+1,f,c
  7172  001E04  B0D8               	btfsc	status,0,c
  7173  001E06  2A26               	incf	itoa@val+1,f,c
  7174  001E08                     l968:
  7175  001E08  C023  F01A         	movff	itoa@buf,utoa@buf
  7176  001E0C  C024  F01B         	movff	itoa@buf+1,utoa@buf+1
  7177  001E10  C025  F01C         	movff	itoa@val,utoa@val
  7178  001E14  C026  F01D         	movff	itoa@val+1,utoa@val+1
  7179  001E18  C027  F01E         	movff	itoa@base,utoa@base
  7180  001E1C  C028  F01F         	movff	itoa@base+1,utoa@base+1
  7181  001E20  EC4A  F00A         	call	_utoa	;wreg free
  7182  001E24  0012               	return	
  7183  001E26                     __end_of_itoa:
  7184                           	opt stack 0
  7185                           tblptru	equ	0xFF8
  7186                           tblptrh	equ	0xFF7
  7187                           tblptrl	equ	0xFF6
  7188                           tablat	equ	0xFF5
  7189                           prodh	equ	0xFF4
  7190                           prodl	equ	0xFF3
  7191                           intcon	equ	0xFF2
  7192                           intcon2	equ	0xFF1
  7193                           intcon3	equ	0xFF0
  7194                           postinc0	equ	0xFEE
  7195                           plusw0	equ	0xFEB
  7196                           wreg	equ	0xFE8
  7197                           postinc1	equ	0xFE6
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           plusw2	equ	0xFDB
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function _utoa *****************
  7209 ;; Defined at:
  7210 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7213 ;;		 -> xsum_builder@xsumBuf(16), 
  7214 ;;  val             2   27[COMRAM] unsigned int 
  7215 ;;  base            2   29[COMRAM] int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  v               2   31[COMRAM] unsigned int 
  7218 ;;  c               1   33[COMRAM] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2   25[COMRAM] PTR unsigned char 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7228 ;;      Params:         6       0       0       0       0       0       0
  7229 ;;      Locals:         3       0       0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0
  7231 ;;      Totals:         9       0       0       0       0       0       0
  7232 ;;Total ram usage:        9 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    2
  7235 ;; This function calls:
  7236 ;;		___lwdiv
  7237 ;;		___lwmod
  7238 ;; This function is called by:
  7239 ;;		_itoa
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text50
  7244  001494                     __ptext50:
  7245                           	opt stack 0
  7246  001494                     _utoa:
  7247                           	opt stack 21
  7248                           
  7249                           ;incstack = 0
  7250  001494  C01C  F020         	movff	utoa@val,utoa@v
  7251  001498  C01D  F021         	movff	utoa@val+1,utoa@v+1
  7252  00149C  C020  F013         	movff	utoa@v,___lwdiv@dividend
  7253  0014A0  C021  F014         	movff	utoa@v+1,___lwdiv@dividend+1
  7254  0014A4  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  7255  0014A8  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  7256  0014AC  EC0F  F00E         	call	___lwdiv	;wreg free
  7257  0014B0  C013  F020         	movff	?___lwdiv,utoa@v
  7258  0014B4  C014  F021         	movff	?___lwdiv+1,utoa@v+1
  7259  0014B8  4A1A               	infsnz	utoa@buf,f,c
  7260  0014BA  2A1B               	incf	utoa@buf+1,f,c
  7261  0014BC  5020               	movf	utoa@v,w,c
  7262  0014BE  1021               	iorwf	utoa@v+1,w,c
  7263  0014C0  A4D8               	btfss	status,2,c
  7264  0014C2  D7EC               	goto	l972
  7265  0014C4  C01A  FFD9         	movff	utoa@buf,fsr2l
  7266  0014C8  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  7267  0014CC  0E00               	movlw	0
  7268  0014CE  6EDF               	movwf	indf2,c
  7269  0014D0  061A               	decf	utoa@buf,f,c
  7270  0014D2  A0D8               	btfss	status,0,c
  7271  0014D4  061B               	decf	utoa@buf+1,f,c
  7272  0014D6  C01C  F013         	movff	utoa@val,___lwmod@dividend
  7273  0014DA  C01D  F014         	movff	utoa@val+1,___lwmod@dividend+1
  7274  0014DE  C01E  F015         	movff	utoa@base,___lwmod@divisor
  7275  0014E2  C01F  F016         	movff	utoa@base+1,___lwmod@divisor+1
  7276  0014E6  EC13  F00F         	call	___lwmod	;wreg free
  7277  0014EA  5013               	movf	?___lwmod,w,c
  7278  0014EC  6E22               	movwf	utoa@c,c
  7279  0014EE  C01C  F013         	movff	utoa@val,___lwdiv@dividend
  7280  0014F2  C01D  F014         	movff	utoa@val+1,___lwdiv@dividend+1
  7281  0014F6  C01E  F015         	movff	utoa@base,___lwdiv@divisor
  7282  0014FA  C01F  F016         	movff	utoa@base+1,___lwdiv@divisor+1
  7283  0014FE  EC0F  F00E         	call	___lwdiv	;wreg free
  7284  001502  C013  F01C         	movff	?___lwdiv,utoa@val
  7285  001506  C014  F01D         	movff	?___lwdiv+1,utoa@val+1
  7286  00150A  0E09               	movlw	9
  7287  00150C  6422               	cpfsgt	utoa@c,c
  7288  00150E  D002               	goto	l975
  7289  001510  0E07               	movlw	7
  7290  001512  2622               	addwf	utoa@c,f,c
  7291  001514                     l975:
  7292  001514  0E30               	movlw	48
  7293  001516  2622               	addwf	utoa@c,f,c
  7294  001518  C01A  FFD9         	movff	utoa@buf,fsr2l
  7295  00151C  C01B  FFDA         	movff	utoa@buf+1,fsr2h
  7296  001520  C022  FFDF         	movff	utoa@c,indf2
  7297  001524  061A               	decf	utoa@buf,f,c
  7298  001526  A0D8               	btfss	status,0,c
  7299  001528  061B               	decf	utoa@buf+1,f,c
  7300  00152A  501C               	movf	utoa@val,w,c
  7301  00152C  101D               	iorwf	utoa@val+1,w,c
  7302  00152E  A4D8               	btfss	status,2,c
  7303  001530  D7D2               	goto	l974
  7304                           
  7305                           ;	Return value of _utoa is never used
  7306  001532  4A1A               	infsnz	utoa@buf,f,c
  7307  001534  2A1B               	incf	utoa@buf+1,f,c
  7308  001536  0012               	return	
  7309  001538                     __end_of_utoa:
  7310                           	opt stack 0
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           intcon2	equ	0xFF1
  7319                           intcon3	equ	0xFF0
  7320                           postinc0	equ	0xFEE
  7321                           plusw0	equ	0xFEB
  7322                           wreg	equ	0xFE8
  7323                           postinc1	equ	0xFE6
  7324                           fsr1h	equ	0xFE2
  7325                           fsr1l	equ	0xFE1
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           plusw2	equ	0xFDB
  7330                           fsr2h	equ	0xFDA
  7331                           fsr2l	equ	0xFD9
  7332                           status	equ	0xFD8
  7333                           
  7334 ;; *************** function ___lwmod *****************
  7335 ;; Defined at:
  7336 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  dividend        2   18[COMRAM] unsigned int 
  7339 ;;  divisor         2   20[COMRAM] unsigned int 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  counter         1   22[COMRAM] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  2   18[COMRAM] unsigned int 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7351 ;;      Params:         4       0       0       0       0       0       0
  7352 ;;      Locals:         1       0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0
  7354 ;;      Totals:         5       0       0       0       0       0       0
  7355 ;;Total ram usage:        5 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_utoa
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text51
  7366  001E26                     __ptext51:
  7367                           	opt stack 0
  7368  001E26                     ___lwmod:
  7369                           	opt stack 21
  7370                           
  7371                           ;incstack = 0
  7372  001E26  5015               	movf	___lwmod@divisor,w,c
  7373  001E28  1016               	iorwf	___lwmod@divisor+1,w,c
  7374  001E2A  B4D8               	btfsc	status,2,c
  7375  001E2C  D018               	goto	l1084
  7376  001E2E  0E01               	movlw	1
  7377  001E30  6E17               	movwf	___lwmod@counter,c
  7378  001E32  D004               	goto	l1079
  7379  001E34  90D8               	bcf	status,0,c
  7380  001E36  3615               	rlcf	___lwmod@divisor,f,c
  7381  001E38  3616               	rlcf	___lwmod@divisor+1,f,c
  7382  001E3A  2A17               	incf	___lwmod@counter,f,c
  7383  001E3C                     l1079:
  7384  001E3C  AE16               	btfss	___lwmod@divisor+1,7,c
  7385  001E3E  D7FA               	goto	l1080
  7386  001E40                     u2450:
  7387  001E40  5015               	movf	___lwmod@divisor,w,c
  7388  001E42  5C13               	subwf	___lwmod@dividend,w,c
  7389  001E44  5016               	movf	___lwmod@divisor+1,w,c
  7390  001E46  5814               	subwfb	___lwmod@dividend+1,w,c
  7391  001E48  A0D8               	btfss	status,0,c
  7392  001E4A  D004               	goto	l1083
  7393  001E4C  5015               	movf	___lwmod@divisor,w,c
  7394  001E4E  5E13               	subwf	___lwmod@dividend,f,c
  7395  001E50  5016               	movf	___lwmod@divisor+1,w,c
  7396  001E52  5A14               	subwfb	___lwmod@dividend+1,f,c
  7397  001E54                     l1083:
  7398  001E54  90D8               	bcf	status,0,c
  7399  001E56  3216               	rrcf	___lwmod@divisor+1,f,c
  7400  001E58  3215               	rrcf	___lwmod@divisor,f,c
  7401  001E5A  2E17               	decfsz	___lwmod@counter,f,c
  7402  001E5C  D7F1               	goto	u2450
  7403  001E5E                     l1084:
  7404  001E5E  C013  F013         	movff	___lwmod@dividend,?___lwmod
  7405  001E62  C014  F014         	movff	___lwmod@dividend+1,?___lwmod+1
  7406  001E66  0012               	return		;funcret
  7407  001E68                     __end_of___lwmod:
  7408                           	opt stack 0
  7409                           tblptru	equ	0xFF8
  7410                           tblptrh	equ	0xFF7
  7411                           tblptrl	equ	0xFF6
  7412                           tablat	equ	0xFF5
  7413                           prodh	equ	0xFF4
  7414                           prodl	equ	0xFF3
  7415                           intcon	equ	0xFF2
  7416                           intcon2	equ	0xFF1
  7417                           intcon3	equ	0xFF0
  7418                           postinc0	equ	0xFEE
  7419                           plusw0	equ	0xFEB
  7420                           wreg	equ	0xFE8
  7421                           postinc1	equ	0xFE6
  7422                           fsr1h	equ	0xFE2
  7423                           fsr1l	equ	0xFE1
  7424                           indf2	equ	0xFDF
  7425                           postinc2	equ	0xFDE
  7426                           postdec2	equ	0xFDD
  7427                           plusw2	equ	0xFDB
  7428                           fsr2h	equ	0xFDA
  7429                           fsr2l	equ	0xFD9
  7430                           status	equ	0xFD8
  7431                           
  7432 ;; *************** function ___lwdiv *****************
  7433 ;; Defined at:
  7434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  dividend        2   18[COMRAM] unsigned int 
  7437 ;;  divisor         2   20[COMRAM] unsigned int 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  quotient        2   23[COMRAM] unsigned int 
  7440 ;;  counter         1   22[COMRAM] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  2   18[COMRAM] unsigned int 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2, status,0
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7450 ;;      Params:         4       0       0       0       0       0       0
  7451 ;;      Locals:         3       0       0       0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0
  7453 ;;      Totals:         7       0       0       0       0       0       0
  7454 ;;Total ram usage:        7 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_utoa
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text52
  7465  001C1E                     __ptext52:
  7466                           	opt stack 0
  7467  001C1E                     ___lwdiv:
  7468                           	opt stack 21
  7469                           
  7470                           ;incstack = 0
  7471  001C1E  0E00               	movlw	0
  7472  001C20  6E19               	movwf	___lwdiv@quotient+1,c
  7473  001C22  0E00               	movlw	0
  7474  001C24  6E18               	movwf	___lwdiv@quotient,c
  7475  001C26  5015               	movf	___lwdiv@divisor,w,c
  7476  001C28  1016               	iorwf	___lwdiv@divisor+1,w,c
  7477  001C2A  B4D8               	btfsc	status,2,c
  7478  001C2C  D01C               	goto	l1074
  7479  001C2E  0E01               	movlw	1
  7480  001C30  6E17               	movwf	___lwdiv@counter,c
  7481  001C32  D004               	goto	l1069
  7482  001C34  90D8               	bcf	status,0,c
  7483  001C36  3615               	rlcf	___lwdiv@divisor,f,c
  7484  001C38  3616               	rlcf	___lwdiv@divisor+1,f,c
  7485  001C3A  2A17               	incf	___lwdiv@counter,f,c
  7486  001C3C                     l1069:
  7487  001C3C  AE16               	btfss	___lwdiv@divisor+1,7,c
  7488  001C3E  D7FA               	goto	l1070
  7489  001C40                     u2420:
  7490  001C40  90D8               	bcf	status,0,c
  7491  001C42  3618               	rlcf	___lwdiv@quotient,f,c
  7492  001C44  3619               	rlcf	___lwdiv@quotient+1,f,c
  7493  001C46  5015               	movf	___lwdiv@divisor,w,c
  7494  001C48  5C13               	subwf	___lwdiv@dividend,w,c
  7495  001C4A  5016               	movf	___lwdiv@divisor+1,w,c
  7496  001C4C  5814               	subwfb	___lwdiv@dividend+1,w,c
  7497  001C4E  A0D8               	btfss	status,0,c
  7498  001C50  D005               	goto	l1073
  7499  001C52  5015               	movf	___lwdiv@divisor,w,c
  7500  001C54  5E13               	subwf	___lwdiv@dividend,f,c
  7501  001C56  5016               	movf	___lwdiv@divisor+1,w,c
  7502  001C58  5A14               	subwfb	___lwdiv@dividend+1,f,c
  7503  001C5A  8018               	bsf	___lwdiv@quotient,0,c
  7504  001C5C                     l1073:
  7505  001C5C  90D8               	bcf	status,0,c
  7506  001C5E  3216               	rrcf	___lwdiv@divisor+1,f,c
  7507  001C60  3215               	rrcf	___lwdiv@divisor,f,c
  7508  001C62  2E17               	decfsz	___lwdiv@counter,f,c
  7509  001C64  D7ED               	goto	u2420
  7510  001C66                     l1074:
  7511  001C66  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  7512  001C6A  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7513  001C6E  0012               	return		;funcret
  7514  001C70                     __end_of___lwdiv:
  7515                           	opt stack 0
  7516                           tblptru	equ	0xFF8
  7517                           tblptrh	equ	0xFF7
  7518                           tblptrl	equ	0xFF6
  7519                           tablat	equ	0xFF5
  7520                           prodh	equ	0xFF4
  7521                           prodl	equ	0xFF3
  7522                           intcon	equ	0xFF2
  7523                           intcon2	equ	0xFF1
  7524                           intcon3	equ	0xFF0
  7525                           postinc0	equ	0xFEE
  7526                           plusw0	equ	0xFEB
  7527                           wreg	equ	0xFE8
  7528                           postinc1	equ	0xFE6
  7529                           fsr1h	equ	0xFE2
  7530                           fsr1l	equ	0xFE1
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           plusw2	equ	0xFDB
  7535                           fsr2h	equ	0xFDA
  7536                           fsr2l	equ	0xFD9
  7537                           status	equ	0xFD8
  7538                           
  7539 ;; *************** function _command_builder_add_string *****************
  7540 ;; Defined at:
  7541 ;;		line 546 in file "SlaveComm.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  7544 ;;		 -> communications@send_buffer(42), 
  7545 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  7546 ;;		 -> STR_29(4), STR_28(10), STR_27(4), STR_26(12), 
  7547 ;;		 -> STR_25(5), STR_24(4), STR_23(5), STR_22(4), 
  7548 ;;		 -> STR_21(4), STR_20(6), STR_19(4), STR_18(7), 
  7549 ;;		 -> STR_17(4), com_command_setEnergyUsed@temp(12), STR_16(6), STR_15(4), 
  7550 ;;		 -> com_command_setPower@temp(12), STR_14(5), STR_13(5), STR_12(4), 
  7551 ;;		 -> xsum_builder@xsumBuf(16), 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  inx             2   30[COMRAM] int 
  7554 ;;  xsumAdd         2   28[COMRAM] int 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  2   22[COMRAM] int 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7564 ;;      Params:         4       0       0       0       0       0       0
  7565 ;;      Locals:         4       0       0       0       0       0       0
  7566 ;;      Temps:          2       0       0       0       0       0       0
  7567 ;;      Totals:        10       0       0       0       0       0       0
  7568 ;;Total ram usage:       10 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    2
  7571 ;; This function calls:
  7572 ;;		_command_builder_add_char
  7573 ;; This function is called by:
  7574 ;;		_command_builder1
  7575 ;;		_command_builder3
  7576 ;;		_xsum_builder
  7577 ;;		_command_builder2
  7578 ;;		_command_builder4
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text53
  7583  00166E                     __ptext53:
  7584                           	opt stack 0
  7585  00166E                     _command_builder_add_string:
  7586                           	opt stack 22
  7587                           
  7588                           ;SlaveComm.c: 548: int xsumAdd = 0;
  7589                           
  7590                           ;incstack = 0
  7591  00166E  0E00               	movlw	0
  7592  001670  6E1E               	movwf	command_builder_add_string@xsumAdd+1,c
  7593  001672  0E00               	movlw	0
  7594  001674  6E1D               	movwf	command_builder_add_string@xsumAdd,c
  7595                           
  7596                           ;SlaveComm.c: 550: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  7597  001676  0E00               	movlw	0
  7598  001678  6E20               	movwf	command_builder_add_string@inx+1,c
  7599  00167A  0E00               	movlw	0
  7600  00167C  6E1F               	movwf	command_builder_add_string@inx,c
  7601  00167E  D023               	goto	l318
  7602  001680                     
  7603                           ;SlaveComm.c: 551: {
  7604                           ;SlaveComm.c: 552: xsumAdd += command_builder_add_char( send_buffer, data_string[inx] );
  7605  001680  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  7606  001684  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  7607  001688  501F               	movf	command_builder_add_string@inx,w,c
  7608  00168A  2419               	addwf	command_builder_add_string@data_string,w,c
  7609  00168C  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7610  00168E  5020               	movf	command_builder_add_string@inx+1,w,c
  7611  001690  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7612  001692  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7613  001694  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7614  001698  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7615  00169C  6AF8               	clrf	tblptru,c
  7616  00169E  0E05               	movlw	(high __ramtop+-1)
  7617  0016A0  64F7               	cpfsgt	tblptrh,c
  7618  0016A2  D003               	bra	u2517
  7619  0016A4  0008               	tblrd		*
  7620  0016A6  50F5               	movf	tablat,w,c
  7621  0016A8  D005               	bra	u2510
  7622  0016AA                     u2517:
  7623  0016AA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7624  0016AE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7625  0016B2  50EF               	movf	indf0,w,c
  7626  0016B4                     u2510:
  7627  0016B4  6E15               	movwf	command_builder_add_char@data,c
  7628  0016B6  EC89  F00D         	call	_command_builder_add_char	;wreg free
  7629  0016BA  5013               	movf	?_command_builder_add_char,w,c
  7630  0016BC  261D               	addwf	command_builder_add_string@xsumAdd,f,c
  7631  0016BE  5014               	movf	?_command_builder_add_char+1,w,c
  7632  0016C0  221E               	addwfc	command_builder_add_string@xsumAdd+1,f,c
  7633  0016C2  4A1F               	infsnz	command_builder_add_string@inx,f,c
  7634  0016C4  2A20               	incf	command_builder_add_string@inx+1,f,c
  7635  0016C6                     l318:
  7636  0016C6  501F               	movf	command_builder_add_string@inx,w,c
  7637  0016C8  2419               	addwf	command_builder_add_string@data_string,w,c
  7638  0016CA  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  7639  0016CC  5020               	movf	command_builder_add_string@inx+1,w,c
  7640  0016CE  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  7641  0016D0  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  7642  0016D2  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  7643  0016D6  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  7644  0016DA  6AF8               	clrf	tblptru,c
  7645  0016DC  0E05               	movlw	(high __ramtop+-1)
  7646  0016DE  64F7               	cpfsgt	tblptrh,c
  7647  0016E0  D003               	bra	u2527
  7648  0016E2  0008               	tblrd		*
  7649  0016E4  50F5               	movf	tablat,w,c
  7650  0016E6  D005               	bra	u2520
  7651  0016E8                     u2527:
  7652  0016E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7653  0016EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7654  0016F0  50EF               	movf	indf0,w,c
  7655  0016F2                     u2520:
  7656  0016F2  0900               	iorlw	0
  7657  0016F4  A4D8               	btfss	status,2,c
  7658  0016F6  D7C4               	goto	l319
  7659                           
  7660                           ;SlaveComm.c: 553: }
  7661                           ;SlaveComm.c: 555: return xsumAdd;
  7662  0016F8  C01D  F017         	movff	command_builder_add_string@xsumAdd,?_command_builder_add_string
  7663  0016FC  C01E  F018         	movff	command_builder_add_string@xsumAdd+1,?_command_builder_add_string+1
  7664  001700  0012               	return		;funcret
  7665  001702                     __end_of_command_builder_add_string:
  7666                           	opt stack 0
  7667                           tblptru	equ	0xFF8
  7668                           tblptrh	equ	0xFF7
  7669                           tblptrl	equ	0xFF6
  7670                           tablat	equ	0xFF5
  7671                           prodh	equ	0xFF4
  7672                           prodl	equ	0xFF3
  7673                           intcon	equ	0xFF2
  7674                           intcon2	equ	0xFF1
  7675                           intcon3	equ	0xFF0
  7676                           indf0	equ	0xFEF
  7677                           postinc0	equ	0xFEE
  7678                           plusw0	equ	0xFEB
  7679                           fsr0h	equ	0xFEA
  7680                           fsr0l	equ	0xFE9
  7681                           wreg	equ	0xFE8
  7682                           postinc1	equ	0xFE6
  7683                           fsr1h	equ	0xFE2
  7684                           fsr1l	equ	0xFE1
  7685                           indf2	equ	0xFDF
  7686                           postinc2	equ	0xFDE
  7687                           postdec2	equ	0xFDD
  7688                           plusw2	equ	0xFDB
  7689                           fsr2h	equ	0xFDA
  7690                           fsr2l	equ	0xFD9
  7691                           status	equ	0xFD8
  7692                           
  7693 ;; *************** function _command_builder_add_char *****************
  7694 ;; Defined at:
  7695 ;;		line 533 in file "SlaveComm.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  7698 ;;		 -> communications@send_buffer(42), 
  7699 ;;  data            1   20[COMRAM] unsigned char 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2   18[COMRAM] int 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7711 ;;      Params:         3       0       0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0       0
  7713 ;;      Temps:          1       0       0       0       0       0       0
  7714 ;;      Totals:         4       0       0       0       0       0       0
  7715 ;;Total ram usage:        4 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_command_builder1
  7722 ;;		_command_builder3
  7723 ;;		_xsum_builder
  7724 ;;		_command_builder_add_string
  7725 ;;		_command_builder2
  7726 ;;		_command_builder4
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           	psect	text54
  7731  001B12                     __ptext54:
  7732                           	opt stack 0
  7733  001B12                     _command_builder_add_char:
  7734                           	opt stack 22
  7735                           
  7736                           ;SlaveComm.c: 535: send_buffer->data_buffer[send_buffer->write_position] = data;
  7737                           
  7738                           ;incstack = 0
  7739  001B12  EE20 F028          	lfsr	2,40
  7740  001B16  5013               	movf	command_builder_add_char@send_buffer,w,c
  7741  001B18  26D9               	addwf	fsr2l,f,c
  7742  001B1A  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7743  001B1C  22DA               	addwfc	fsr2h,f,c
  7744  001B1E  50DF               	movf	indf2,w,c
  7745  001B20  6E16               	movwf	??_command_builder_add_char& (0+255),c
  7746  001B22  5016               	movf	??_command_builder_add_char,w,c
  7747  001B24  0D01               	mullw	1
  7748  001B26  50F3               	movf	prodl,w,c
  7749  001B28  2413               	addwf	command_builder_add_char@send_buffer,w,c
  7750  001B2A  6ED9               	movwf	fsr2l,c
  7751  001B2C  50F4               	movf	prodh,w,c
  7752  001B2E  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  7753  001B30  6EDA               	movwf	fsr2h,c
  7754  001B32  C015  FFDF         	movff	command_builder_add_char@data,indf2
  7755                           
  7756                           ;SlaveComm.c: 537: send_buffer->write_position++;
  7757  001B36  EE20 F028          	lfsr	2,40
  7758  001B3A  5013               	movf	command_builder_add_char@send_buffer,w,c
  7759  001B3C  26D9               	addwf	fsr2l,f,c
  7760  001B3E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7761  001B40  22DA               	addwfc	fsr2h,f,c
  7762  001B42  2ADF               	incf	indf2,f,c
  7763                           
  7764                           ;SlaveComm.c: 538: if( send_buffer->write_position >= 40 )
  7765  001B44  EE20 F028          	lfsr	2,40
  7766  001B48  5013               	movf	command_builder_add_char@send_buffer,w,c
  7767  001B4A  26D9               	addwf	fsr2l,f,c
  7768  001B4C  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7769  001B4E  22DA               	addwfc	fsr2h,f,c
  7770  001B50  0E27               	movlw	39
  7771  001B52  64DF               	cpfsgt	indf2,c
  7772  001B54  D008               	goto	l314
  7773                           
  7774                           ;SlaveComm.c: 539: {
  7775                           ;SlaveComm.c: 540: send_buffer->write_position = 0;
  7776  001B56  EE20 F028          	lfsr	2,40
  7777  001B5A  5013               	movf	command_builder_add_char@send_buffer,w,c
  7778  001B5C  26D9               	addwf	fsr2l,f,c
  7779  001B5E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  7780  001B60  22DA               	addwfc	fsr2h,f,c
  7781  001B62  0E00               	movlw	0
  7782  001B64  6EDF               	movwf	indf2,c
  7783  001B66                     l314:
  7784                           
  7785                           ;SlaveComm.c: 541: }
  7786                           ;SlaveComm.c: 543: return data;
  7787  001B66  C015  F013         	movff	command_builder_add_char@data,?_command_builder_add_char
  7788  001B6A  6A14               	clrf	?_command_builder_add_char+1,c
  7789  001B6C  0012               	return	
  7790  001B6E                     __end_of_command_builder_add_char:
  7791                           	opt stack 0
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           intcon2	equ	0xFF1
  7800                           intcon3	equ	0xFF0
  7801                           indf0	equ	0xFEF
  7802                           postinc0	equ	0xFEE
  7803                           plusw0	equ	0xFEB
  7804                           fsr0h	equ	0xFEA
  7805                           fsr0l	equ	0xFE9
  7806                           wreg	equ	0xFE8
  7807                           postinc1	equ	0xFE6
  7808                           fsr1h	equ	0xFE2
  7809                           fsr1l	equ	0xFE1
  7810                           indf2	equ	0xFDF
  7811                           postinc2	equ	0xFDE
  7812                           postdec2	equ	0xFDD
  7813                           plusw2	equ	0xFDB
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _atol *****************
  7819 ;; Defined at:
  7820 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  s               2   30[COMRAM] PTR const unsigned char 
  7823 ;;		 -> process_data@parameters(50), 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  a               4   39[COMRAM] long 
  7826 ;;  c               1   43[COMRAM] unsigned char 
  7827 ;;  sign            1   38[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4   30[COMRAM] long 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7837 ;;      Params:         4       0       0       0       0       0       0
  7838 ;;      Locals:         6       0       0       0       0       0       0
  7839 ;;      Temps:          4       0       0       0       0       0       0
  7840 ;;      Totals:        14       0       0       0       0       0       0
  7841 ;;Total ram usage:       14 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    2
  7844 ;; This function calls:
  7845 ;;		___lmul
  7846 ;;		_isdigit
  7847 ;; This function is called by:
  7848 ;;		_process_data_parameters
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text55
  7853  000D44                     __ptext55:
  7854                           	opt stack 0
  7855  000D44                     _atol:
  7856                           	opt stack 24
  7857                           
  7858                           ;incstack = 0
  7859  000D44  C01F  FFD9         	movff	atol@s,fsr2l
  7860  000D48  C020  FFDA         	movff	atol@s+1,fsr2h
  7861  000D4C  50DF               	movf	indf2,w,c
  7862  000D4E  6E2C               	movwf	atol@c,c
  7863  000D50  4A1F               	infsnz	atol@s,f,c
  7864  000D52  2A20               	incf	atol@s+1,f,c
  7865  000D54  0E20               	movlw	32
  7866  000D56  182C               	xorwf	atol@c,w,c
  7867  000D58  B4D8               	btfsc	status,2,c
  7868  000D5A  D7F4               	goto	_atol
  7869  000D5C  0E09               	movlw	9
  7870  000D5E  182C               	xorwf	atol@c,w,c
  7871  000D60  B4D8               	btfsc	status,2,c
  7872  000D62  D7F0               	goto	_atol
  7873  000D64  0E00               	movlw	0
  7874  000D66  6E28               	movwf	atol@a,c
  7875  000D68  0E00               	movlw	0
  7876  000D6A  6E29               	movwf	atol@a+1,c
  7877  000D6C  0E00               	movlw	0
  7878  000D6E  6E2A               	movwf	atol@a+2,c
  7879  000D70  0E00               	movlw	0
  7880  000D72  6E2B               	movwf	atol@a+3,c
  7881  000D74  0E00               	movlw	0
  7882  000D76  6E27               	movwf	atol@sign,c
  7883  000D78  0E2D               	movlw	45
  7884  000D7A  182C               	xorwf	atol@c,w,c
  7885  000D7C  A4D8               	btfss	status,2,c
  7886  000D7E  D002               	goto	l784
  7887  000D80  2A27               	incf	atol@sign,f,c
  7888  000D82  D027               	goto	L8
  7889  000D84                     l784:
  7890  000D84  0E2B               	movlw	43
  7891  000D86  182C               	xorwf	atol@c,w,c
  7892  000D88  A4D8               	btfss	status,2,c
  7893  000D8A  D02B               	goto	l787
  7894  000D8C  D022               	goto	L8
  7895  000D8E  C028  F013         	movff	atol@a,___lmul@multiplier
  7896  000D92  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  7897  000D96  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  7898  000D9A  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  7899  000D9E  0E0A               	movlw	10
  7900  000DA0  6E17               	movwf	___lmul@multiplicand,c
  7901  000DA2  0E00               	movlw	0
  7902  000DA4  6E18               	movwf	___lmul@multiplicand+1,c
  7903  000DA6  0E00               	movlw	0
  7904  000DA8  6E19               	movwf	___lmul@multiplicand+2,c
  7905  000DAA  0E00               	movlw	0
  7906  000DAC  6E1A               	movwf	___lmul@multiplicand+3,c
  7907  000DAE  ECE4  F00D         	call	___lmul	;wreg free
  7908  000DB2  C02C  F023         	movff	atol@c,??_atol
  7909  000DB6  0ED0               	movlw	208
  7910  000DB8  2623               	addwf	??_atol,f,c
  7911  000DBA  5023               	movf	??_atol,w,c
  7912  000DBC  2413               	addwf	?___lmul,w,c
  7913  000DBE  6E28               	movwf	atol@a,c
  7914  000DC0  0E00               	movlw	0
  7915  000DC2  2014               	addwfc	?___lmul+1,w,c
  7916  000DC4  6E29               	movwf	atol@a+1,c
  7917  000DC6  0E00               	movlw	0
  7918  000DC8  2015               	addwfc	?___lmul+2,w,c
  7919  000DCA  6E2A               	movwf	atol@a+2,c
  7920  000DCC  0E00               	movlw	0
  7921  000DCE  2016               	addwfc	?___lmul+3,w,c
  7922  000DD0  6E2B               	movwf	atol@a+3,c
  7923  000DD2                     L8:
  7924  000DD2  C01F  FFD9         	movff	atol@s,fsr2l
  7925  000DD6  C020  FFDA         	movff	atol@s+1,fsr2h
  7926  000DDA  50DF               	movf	indf2,w,c
  7927  000DDC  6E2C               	movwf	atol@c,c
  7928  000DDE  4A1F               	infsnz	atol@s,f,c
  7929  000DE0  2A20               	incf	atol@s+1,f,c
  7930  000DE2                     l787:
  7931  000DE2  502C               	movf	atol@c,w,c
  7932  000DE4  EC66  F010         	call	_isdigit
  7933  000DE8  B0D8               	btfsc	status,0,c
  7934  000DEA  D7D1               	goto	l788
  7935  000DEC  5027               	movf	atol@sign,w,c
  7936  000DEE  B4D8               	btfsc	status,2,c
  7937  000DF0  D01A               	goto	l790
  7938  000DF2  C028  F023         	movff	atol@a,??_atol
  7939  000DF6  C029  F024         	movff	atol@a+1,??_atol+1
  7940  000DFA  C02A  F025         	movff	atol@a+2,??_atol+2
  7941  000DFE  C02B  F026         	movff	atol@a+3,??_atol+3
  7942  000E02  1E23               	comf	??_atol,f,c
  7943  000E04  1E24               	comf	??_atol+1,f,c
  7944  000E06  1E25               	comf	??_atol+2,f,c
  7945  000E08  1E26               	comf	??_atol+3,f,c
  7946  000E0A  2A23               	incf	??_atol,f,c
  7947  000E0C  0E00               	movlw	0
  7948  000E0E  2224               	addwfc	??_atol+1,f,c
  7949  000E10  2225               	addwfc	??_atol+2,f,c
  7950  000E12  2226               	addwfc	??_atol+3,f,c
  7951  000E14  C023  F01F         	movff	??_atol,?_atol
  7952  000E18  C024  F020         	movff	??_atol+1,?_atol+1
  7953  000E1C  C025  F021         	movff	??_atol+2,?_atol+2
  7954  000E20  C026  F022         	movff	??_atol+3,?_atol+3
  7955  000E24  0012               	return	
  7956  000E26                     l790:
  7957  000E26  C028  F01F         	movff	atol@a,?_atol
  7958  000E2A  C029  F020         	movff	atol@a+1,?_atol+1
  7959  000E2E  C02A  F021         	movff	atol@a+2,?_atol+2
  7960  000E32  C02B  F022         	movff	atol@a+3,?_atol+3
  7961  000E36  0012               	return		;funcret
  7962  000E38                     __end_of_atol:
  7963                           	opt stack 0
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           intcon2	equ	0xFF1
  7972                           intcon3	equ	0xFF0
  7973                           indf0	equ	0xFEF
  7974                           postinc0	equ	0xFEE
  7975                           plusw0	equ	0xFEB
  7976                           fsr0h	equ	0xFEA
  7977                           fsr0l	equ	0xFE9
  7978                           wreg	equ	0xFE8
  7979                           postinc1	equ	0xFE6
  7980                           fsr1h	equ	0xFE2
  7981                           fsr1l	equ	0xFE1
  7982                           indf2	equ	0xFDF
  7983                           postinc2	equ	0xFDE
  7984                           postdec2	equ	0xFDD
  7985                           plusw2	equ	0xFDB
  7986                           fsr2h	equ	0xFDA
  7987                           fsr2l	equ	0xFD9
  7988                           status	equ	0xFD8
  7989                           
  7990 ;; *************** function _isdigit *****************
  7991 ;; Defined at:
  7992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  c               1    wreg     unsigned char 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  c               1   20[COMRAM] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;		None               void
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8006 ;;      Params:         0       0       0       0       0       0       0
  8007 ;;      Locals:         2       0       0       0       0       0       0
  8008 ;;      Temps:          1       0       0       0       0       0       0
  8009 ;;      Totals:         3       0       0       0       0       0       0
  8010 ;;Total ram usage:        3 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_atoi
  8017 ;;		_atol
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text56
  8022  0020CC                     __ptext56:
  8023                           	opt stack 0
  8024  0020CC                     _isdigit:
  8025                           	opt stack 25
  8026                           
  8027                           ;incstack = 0
  8028                           ;isdigit@c stored from wreg
  8029  0020CC  6E15               	movwf	isdigit@c,c
  8030  0020CE  0E00               	movlw	0
  8031  0020D0  6E14               	movwf	_isdigit$2440,c
  8032  0020D2  0E3A               	movlw	58
  8033  0020D4  6015               	cpfslt	isdigit@c,c
  8034  0020D6  D005               	goto	l962
  8035  0020D8  0E2F               	movlw	47
  8036  0020DA  6415               	cpfsgt	isdigit@c,c
  8037  0020DC  D002               	goto	l962
  8038  0020DE  0E01               	movlw	1
  8039  0020E0  6E14               	movwf	_isdigit$2440,c
  8040  0020E2                     l962:
  8041  0020E2  C014  F013         	movff	_isdigit$2440,??_isdigit
  8042  0020E6  3013               	rrcf	??_isdigit,w,c
  8043  0020E8  0012               	return	
  8044  0020EA                     __end_of_isdigit:
  8045                           	opt stack 0
  8046                           tblptru	equ	0xFF8
  8047                           tblptrh	equ	0xFF7
  8048                           tblptrl	equ	0xFF6
  8049                           tablat	equ	0xFF5
  8050                           prodh	equ	0xFF4
  8051                           prodl	equ	0xFF3
  8052                           intcon	equ	0xFF2
  8053                           intcon2	equ	0xFF1
  8054                           intcon3	equ	0xFF0
  8055                           indf0	equ	0xFEF
  8056                           postinc0	equ	0xFEE
  8057                           plusw0	equ	0xFEB
  8058                           fsr0h	equ	0xFEA
  8059                           fsr0l	equ	0xFE9
  8060                           wreg	equ	0xFE8
  8061                           postinc1	equ	0xFE6
  8062                           fsr1h	equ	0xFE2
  8063                           fsr1l	equ	0xFE1
  8064                           indf2	equ	0xFDF
  8065                           postinc2	equ	0xFDE
  8066                           postdec2	equ	0xFDD
  8067                           plusw2	equ	0xFDB
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8
  8071                           
  8072 ;; *************** function ___lmul *****************
  8073 ;; Defined at:
  8074 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  multiplier      4   18[COMRAM] unsigned long 
  8077 ;;  multiplicand    4   22[COMRAM] unsigned long 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  product         4   26[COMRAM] unsigned long 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  4   18[COMRAM] unsigned long 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8089 ;;      Params:         8       0       0       0       0       0       0
  8090 ;;      Locals:         4       0       0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0
  8092 ;;      Totals:        12       0       0       0       0       0       0
  8093 ;;Total ram usage:       12 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    1
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_atol
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text57
  8104  001BC8                     __ptext57:
  8105                           	opt stack 0
  8106  001BC8                     ___lmul:
  8107                           	opt stack 24
  8108                           
  8109                           ;incstack = 0
  8110  001BC8  0E00               	movlw	0
  8111  001BCA  6E1B               	movwf	___lmul@product,c
  8112  001BCC  0E00               	movlw	0
  8113  001BCE  6E1C               	movwf	___lmul@product+1,c
  8114  001BD0  0E00               	movlw	0
  8115  001BD2  6E1D               	movwf	___lmul@product+2,c
  8116  001BD4  0E00               	movlw	0
  8117  001BD6  6E1E               	movwf	___lmul@product+3,c
  8118  001BD8  A013               	btfss	___lmul@multiplier,0,c
  8119  001BDA  D008               	goto	l616
  8120  001BDC  5017               	movf	___lmul@multiplicand,w,c
  8121  001BDE  261B               	addwf	___lmul@product,f,c
  8122  001BE0  5018               	movf	___lmul@multiplicand+1,w,c
  8123  001BE2  221C               	addwfc	___lmul@product+1,f,c
  8124  001BE4  5019               	movf	___lmul@multiplicand+2,w,c
  8125  001BE6  221D               	addwfc	___lmul@product+2,f,c
  8126  001BE8  501A               	movf	___lmul@multiplicand+3,w,c
  8127  001BEA  221E               	addwfc	___lmul@product+3,f,c
  8128  001BEC                     l616:
  8129  001BEC  90D8               	bcf	status,0,c
  8130  001BEE  3617               	rlcf	___lmul@multiplicand,f,c
  8131  001BF0  3618               	rlcf	___lmul@multiplicand+1,f,c
  8132  001BF2  3619               	rlcf	___lmul@multiplicand+2,f,c
  8133  001BF4  361A               	rlcf	___lmul@multiplicand+3,f,c
  8134  001BF6  90D8               	bcf	status,0,c
  8135  001BF8  3216               	rrcf	___lmul@multiplier+3,f,c
  8136  001BFA  3215               	rrcf	___lmul@multiplier+2,f,c
  8137  001BFC  3214               	rrcf	___lmul@multiplier+1,f,c
  8138  001BFE  3213               	rrcf	___lmul@multiplier,f,c
  8139  001C00  5013               	movf	___lmul@multiplier,w,c
  8140  001C02  1014               	iorwf	___lmul@multiplier+1,w,c
  8141  001C04  1015               	iorwf	___lmul@multiplier+2,w,c
  8142  001C06  1016               	iorwf	___lmul@multiplier+3,w,c
  8143  001C08  A4D8               	btfss	status,2,c
  8144  001C0A  D7E6               	goto	l615
  8145  001C0C  C01B  F013         	movff	___lmul@product,?___lmul
  8146  001C10  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  8147  001C14  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  8148  001C18  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  8149  001C1C  0012               	return		;funcret
  8150  001C1E                     __end_of___lmul:
  8151                           	opt stack 0
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           intcon2	equ	0xFF1
  8160                           intcon3	equ	0xFF0
  8161                           indf0	equ	0xFEF
  8162                           postinc0	equ	0xFEE
  8163                           plusw0	equ	0xFEB
  8164                           fsr0h	equ	0xFEA
  8165                           fsr0l	equ	0xFE9
  8166                           wreg	equ	0xFE8
  8167                           postinc1	equ	0xFE6
  8168                           fsr1h	equ	0xFE2
  8169                           fsr1l	equ	0xFE1
  8170                           indf2	equ	0xFDF
  8171                           postinc2	equ	0xFDE
  8172                           postdec2	equ	0xFDD
  8173                           plusw2	equ	0xFDB
  8174                           fsr2h	equ	0xFDA
  8175                           fsr2l	equ	0xFD9
  8176                           status	equ	0xFD8
  8177                           
  8178 ;; *************** function _process_data_parameterize *****************
  8179 ;; Defined at:
  8180 ;;		line 293 in file "SlaveComm.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  8183 ;;		 -> process_data@parameters(50), 
  8184 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  8185 ;;		 -> communications@receive_buffer(42), 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  inx             2   31[COMRAM] int 
  8188 ;;  parameter_po    1   34[COMRAM] unsigned char 
  8189 ;;  parameter_in    1   33[COMRAM] unsigned char 
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8199 ;;      Params:         4       0       0       0       0       0       0
  8200 ;;      Locals:         4       0       0       0       0       0       0
  8201 ;;      Temps:          3       0       0       0       0       0       0
  8202 ;;      Totals:        11       0       0       0       0       0       0
  8203 ;;Total ram usage:       11 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    2
  8206 ;; This function calls:
  8207 ;;		___wmul
  8208 ;; This function is called by:
  8209 ;;		_process_data
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text58
  8214  0009A2                     __ptext58:
  8215                           	opt stack 0
  8216  0009A2                     _process_data_parameterize:
  8217                           	opt stack 25
  8218                           
  8219                           ;SlaveComm.c: 295: unsigned char parameter_position = 0;
  8220                           
  8221                           ;incstack = 0
  8222  0009A2  0E00               	movlw	0
  8223  0009A4  6E23               	movwf	process_data_parameterize@parameter_position,c
  8224                           
  8225                           ;SlaveComm.c: 296: unsigned char parameter_index = 0;
  8226  0009A6  0E00               	movlw	0
  8227  0009A8  6E22               	movwf	process_data_parameterize@parameter_index,c
  8228                           
  8229                           ;SlaveComm.c: 305: for( int inx = 0; inx < 5; inx++ )
  8230  0009AA  0E00               	movlw	0
  8231  0009AC  6E21               	movwf	process_data_parameterize@inx+1,c
  8232  0009AE  0E00               	movlw	0
  8233  0009B0  6E20               	movwf	process_data_parameterize@inx,c
  8234  0009B2  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  8235  0009B4  D008               	goto	l249
  8236  0009B6  5021               	movf	process_data_parameterize@inx+1,w,c
  8237  0009B8  E105               	bnz	u2890
  8238  0009BA  0E05               	movlw	5
  8239  0009BC  5C20               	subwf	process_data_parameterize@inx,w,c
  8240  0009BE  B0D8               	btfsc	status,0,c
  8241  0009C0  D082               	goto	l251
  8242  0009C2  D001               	goto	l249
  8243  0009C4                     u2890:
  8244  0009C4  D080               	goto	l251
  8245  0009C6                     l249:
  8246                           
  8247                           ;SlaveComm.c: 306: {
  8248                           ;SlaveComm.c: 307: parameters[inx][0] = '\0';
  8249  0009C6  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  8250  0009CA  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  8251  0009CE  0E00               	movlw	0
  8252  0009D0  6E16               	movwf	___wmul@multiplicand+1,c
  8253  0009D2  0E0A               	movlw	10
  8254  0009D4  6E15               	movwf	___wmul@multiplicand,c
  8255  0009D6  EC25  F010         	call	___wmul	;wreg free
  8256  0009DA  5013               	movf	?___wmul,w,c
  8257  0009DC  2419               	addwf	process_data_parameterize@parameters,w,c
  8258  0009DE  6ED9               	movwf	fsr2l,c
  8259  0009E0  5014               	movf	?___wmul+1,w,c
  8260  0009E2  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  8261  0009E4  6EDA               	movwf	fsr2h,c
  8262  0009E6  0E00               	movlw	0
  8263  0009E8  6EDF               	movwf	indf2,c
  8264  0009EA  4A20               	infsnz	process_data_parameterize@inx,f,c
  8265  0009EC  2A21               	incf	process_data_parameterize@inx+1,f,c
  8266  0009EE  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  8267  0009F0  D7EA               	goto	l249
  8268  0009F2  5021               	movf	process_data_parameterize@inx+1,w,c
  8269  0009F4  E168               	bnz	l4031
  8270  0009F6  D7E1               	goto	L7
  8271  0009F8                     
  8272                           ;SlaveComm.c: 319: parameter_position = 0;
  8273  0009F8  0E00               	movlw	0
  8274  0009FA  6E23               	movwf	process_data_parameterize@parameter_position,c
  8275                           
  8276                           ;SlaveComm.c: 320: parameter_index++;
  8277  0009FC  2A22               	incf	process_data_parameterize@parameter_index,f,c
  8278                           
  8279                           ;SlaveComm.c: 322: if( parameter_index >= 5 )
  8280  0009FE  0E04               	movlw	4
  8281  000A00  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  8282  000A02  D05A               	goto	l255
  8283                           
  8284                           ;SlaveComm.c: 323: {
  8285                           ;SlaveComm.c: 326: parameter_index = (5 - 1);
  8286  000A04  0E04               	movlw	4
  8287  000A06  6E22               	movwf	process_data_parameterize@parameter_index,c
  8288                           
  8289                           ;SlaveComm.c: 327: }
  8290                           ;SlaveComm.c: 329: break;
  8291  000A08  D057               	goto	l255
  8292  000A0A                     
  8293                           ;SlaveComm.c: 332: parameters[parameter_index][parameter_position] = buffer_to_parameter
      +                          ize->data_buffer[buffer_to_parameterize->read_position];
  8294  000A0A  EE20 F029          	lfsr	2,41
  8295  000A0E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8296  000A10  26D9               	addwf	fsr2l,f,c
  8297  000A12  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8298  000A14  22DA               	addwfc	fsr2h,f,c
  8299  000A16  50DF               	movf	indf2,w,c
  8300  000A18  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8301  000A1A  501D               	movf	??_process_data_parameterize,w,c
  8302  000A1C  0D01               	mullw	1
  8303  000A1E  50F3               	movf	prodl,w,c
  8304  000A20  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8305  000A22  6ED9               	movwf	fsr2l,c
  8306  000A24  50F4               	movf	prodh,w,c
  8307  000A26  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8308  000A28  6EDA               	movwf	fsr2h,c
  8309  000A2A  5022               	movf	process_data_parameterize@parameter_index,w,c
  8310  000A2C  0D0A               	mullw	10
  8311  000A2E  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  8312  000A32  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  8313  000A36  50F3               	movf	prodl,w,c
  8314  000A38  261E               	addwf	??_process_data_parameterize+1,f,c
  8315  000A3A  50F4               	movf	prodh,w,c
  8316  000A3C  221F               	addwfc	??_process_data_parameterize+2,f,c
  8317  000A3E  5023               	movf	process_data_parameterize@parameter_position,w,c
  8318  000A40  0D01               	mullw	1
  8319  000A42  50F3               	movf	prodl,w,c
  8320  000A44  241E               	addwf	??_process_data_parameterize+1,w,c
  8321  000A46  6EE1               	movwf	fsr1l,c
  8322  000A48  50F4               	movf	prodh,w,c
  8323  000A4A  201F               	addwfc	??_process_data_parameterize+2,w,c
  8324  000A4C  6EE2               	movwf	fsr1h,c
  8325  000A4E  CFDF FFE7          	movff	indf2,indf1
  8326                           
  8327                           ;SlaveComm.c: 333: parameter_position++;
  8328  000A52  2A23               	incf	process_data_parameterize@parameter_position,f,c
  8329                           
  8330                           ;SlaveComm.c: 334: if( parameter_position >= 10 )
  8331  000A54  0E09               	movlw	9
  8332  000A56  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  8333  000A58  D002               	goto	l259
  8334                           
  8335                           ;SlaveComm.c: 335: {
  8336                           ;SlaveComm.c: 338: parameter_position = (10 - 1);
  8337  000A5A  0E09               	movlw	9
  8338  000A5C  6E23               	movwf	process_data_parameterize@parameter_position,c
  8339  000A5E                     l259:
  8340                           
  8341                           ;SlaveComm.c: 339: }
  8342                           ;SlaveComm.c: 342: parameters[parameter_index][parameter_position] = '\0';
  8343  000A5E  5022               	movf	process_data_parameterize@parameter_index,w,c
  8344  000A60  0D0A               	mullw	10
  8345  000A62  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  8346  000A66  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  8347  000A6A  50F3               	movf	prodl,w,c
  8348  000A6C  261D               	addwf	??_process_data_parameterize,f,c
  8349  000A6E  50F4               	movf	prodh,w,c
  8350  000A70  221E               	addwfc	??_process_data_parameterize+1,f,c
  8351  000A72  5023               	movf	process_data_parameterize@parameter_position,w,c
  8352  000A74  0D01               	mullw	1
  8353  000A76  50F3               	movf	prodl,w,c
  8354  000A78  241D               	addwf	??_process_data_parameterize,w,c
  8355  000A7A  6ED9               	movwf	fsr2l,c
  8356  000A7C  50F4               	movf	prodh,w,c
  8357  000A7E  201E               	addwfc	??_process_data_parameterize+1,w,c
  8358  000A80  6EDA               	movwf	fsr2h,c
  8359  000A82  0E00               	movlw	0
  8360  000A84  6EDF               	movwf	indf2,c
  8361                           
  8362                           ;SlaveComm.c: 344: }
  8363                           
  8364                           ;SlaveComm.c: 343: break;
  8365  000A86  D018               	goto	l255
  8366  000A88  EE20 F029          	lfsr	2,41
  8367  000A8C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8368  000A8E  26D9               	addwf	fsr2l,f,c
  8369  000A90  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8370  000A92  22DA               	addwfc	fsr2h,f,c
  8371  000A94  50DF               	movf	indf2,w,c
  8372  000A96  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8373  000A98  501D               	movf	??_process_data_parameterize,w,c
  8374  000A9A  0D01               	mullw	1
  8375  000A9C  50F3               	movf	prodl,w,c
  8376  000A9E  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8377  000AA0  6ED9               	movwf	fsr2l,c
  8378  000AA2  50F4               	movf	prodh,w,c
  8379  000AA4  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8380  000AA6  6EDA               	movwf	fsr2h,c
  8381  000AA8  50DF               	movf	indf2,w,c
  8382                           
  8383                           ; Switch size 1, requested type "space"
  8384                           ; Number of cases is 2, Range of values is 33 to 59
  8385                           ; switch strategies available:
  8386                           ; Name         Instructions Cycles
  8387                           ; simple_byte            7     4 (average)
  8388                           ;	Chosen strategy is simple_byte
  8389  000AAA  0A21               	xorlw	33	; case 33
  8390  000AAC  B4D8               	btfsc	status,2,c
  8391  000AAE  D004               	goto	l255
  8392  000AB0  0A1A               	xorlw	26	; case 59
  8393  000AB2  B4D8               	btfsc	status,2,c
  8394  000AB4  D7A1               	goto	l256
  8395  000AB6  D7A9               	goto	l258
  8396  000AB8                     l255:
  8397                           
  8398                           ;SlaveComm.c: 346: buffer_to_parameterize->read_position++;
  8399  000AB8  EE20 F029          	lfsr	2,41
  8400  000ABC  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8401  000ABE  26D9               	addwf	fsr2l,f,c
  8402  000AC0  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8403  000AC2  22DA               	addwfc	fsr2h,f,c
  8404  000AC4  2ADF               	incf	indf2,f,c
  8405  000AC6                     l251:
  8406  000AC6                     l4031:
  8407  000AC6  EE20 F029          	lfsr	2,41
  8408  000ACA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8409  000ACC  26D9               	addwf	fsr2l,f,c
  8410  000ACE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8411  000AD0  22DA               	addwfc	fsr2h,f,c
  8412  000AD2  50DF               	movf	indf2,w,c
  8413  000AD4  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  8414  000AD6  501D               	movf	??_process_data_parameterize,w,c
  8415  000AD8  0D01               	mullw	1
  8416  000ADA  50F3               	movf	prodl,w,c
  8417  000ADC  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  8418  000ADE  6ED9               	movwf	fsr2l,c
  8419  000AE0  50F4               	movf	prodh,w,c
  8420  000AE2  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  8421  000AE4  6EDA               	movwf	fsr2h,c
  8422  000AE6  0E2A               	movlw	42
  8423  000AE8  18DE               	xorwf	postinc2,w,c
  8424  000AEA  B4D8               	btfsc	status,2,c
  8425  000AEC  0012               	return	
  8426  000AEE  EE20 F029          	lfsr	2,41
  8427  000AF2  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8428  000AF4  26D9               	addwf	fsr2l,f,c
  8429  000AF6  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8430  000AF8  22DA               	addwfc	fsr2h,f,c
  8431  000AFA  0E28               	movlw	40
  8432  000AFC  60DF               	cpfslt	indf2,c
  8433  000AFE  0012               	return	
  8434  000B00  EE20 F028          	lfsr	2,40
  8435  000B04  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8436  000B06  26D9               	addwf	fsr2l,f,c
  8437  000B08  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8438  000B0A  22DA               	addwfc	fsr2h,f,c
  8439  000B0C  EE10 F029          	lfsr	1,41
  8440  000B10  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  8441  000B12  26E1               	addwf	fsr1l,f,c
  8442  000B14  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  8443  000B16  22E2               	addwfc	fsr1h,f,c
  8444  000B18  50DE               	movf	postinc2,w,c
  8445  000B1A  18E6               	xorwf	postinc1,w,c
  8446  000B1C  B4D8               	btfsc	status,2,c
  8447  000B1E  0012               	return	
  8448  000B20  D7B3               	goto	l253
  8449  000B22                     __end_of_process_data_parameterize:
  8450                           	opt stack 0
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           intcon	equ	0xFF2
  8458                           intcon2	equ	0xFF1
  8459                           intcon3	equ	0xFF0
  8460                           indf0	equ	0xFEF
  8461                           postinc0	equ	0xFEE
  8462                           plusw0	equ	0xFEB
  8463                           fsr0h	equ	0xFEA
  8464                           fsr0l	equ	0xFE9
  8465                           wreg	equ	0xFE8
  8466                           indf1	equ	0xFE7
  8467                           postinc1	equ	0xFE6
  8468                           fsr1h	equ	0xFE2
  8469                           fsr1l	equ	0xFE1
  8470                           indf2	equ	0xFDF
  8471                           postinc2	equ	0xFDE
  8472                           postdec2	equ	0xFDD
  8473                           plusw2	equ	0xFDB
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function ___wmul *****************
  8479 ;; Defined at:
  8480 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  multiplier      2   18[COMRAM] unsigned int 
  8483 ;;  multiplicand    2   20[COMRAM] unsigned int 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  product         2   22[COMRAM] unsigned int 
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  2   18[COMRAM] unsigned int 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, prodl, prodh
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8495 ;;      Params:         4       0       0       0       0       0       0
  8496 ;;      Locals:         2       0       0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0
  8498 ;;      Totals:         6       0       0       0       0       0       0
  8499 ;;Total ram usage:        6 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    1
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_process_data_parameterize
  8506 ;;		_atoi
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           	psect	text59
  8511  00204A                     __ptext59:
  8512                           	opt stack 0
  8513  00204A                     ___wmul:
  8514                           	opt stack 25
  8515                           
  8516                           ;incstack = 0
  8517  00204A  5013               	movf	___wmul@multiplier,w,c
  8518  00204C  0215               	mulwf	___wmul@multiplicand,c
  8519  00204E  CFF3 F017          	movff	prodl,___wmul@product
  8520  002052  CFF4 F018          	movff	prodh,___wmul@product+1
  8521  002056  5013               	movf	___wmul@multiplier,w,c
  8522  002058  0216               	mulwf	___wmul@multiplicand+1,c
  8523  00205A  50F3               	movf	prodl,w,c
  8524  00205C  2618               	addwf	___wmul@product+1,f,c
  8525  00205E  5014               	movf	___wmul@multiplier+1,w,c
  8526  002060  0215               	mulwf	___wmul@multiplicand,c
  8527  002062  50F3               	movf	prodl,w,c
  8528  002064  2618               	addwf	___wmul@product+1,f,c
  8529  002066  C017  F013         	movff	___wmul@product,?___wmul
  8530  00206A  C018  F014         	movff	___wmul@product+1,?___wmul+1
  8531  00206E  0012               	return	
  8532  002070                     __end_of___wmul:
  8533                           	opt stack 0
  8534                           tblptru	equ	0xFF8
  8535                           tblptrh	equ	0xFF7
  8536                           tblptrl	equ	0xFF6
  8537                           tablat	equ	0xFF5
  8538                           prodh	equ	0xFF4
  8539                           prodl	equ	0xFF3
  8540                           intcon	equ	0xFF2
  8541                           intcon2	equ	0xFF1
  8542                           intcon3	equ	0xFF0
  8543                           indf0	equ	0xFEF
  8544                           postinc0	equ	0xFEE
  8545                           plusw0	equ	0xFEB
  8546                           fsr0h	equ	0xFEA
  8547                           fsr0l	equ	0xFE9
  8548                           wreg	equ	0xFE8
  8549                           indf1	equ	0xFE7
  8550                           postinc1	equ	0xFE6
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           indf2	equ	0xFDF
  8554                           postinc2	equ	0xFDE
  8555                           postdec2	equ	0xFDD
  8556                           plusw2	equ	0xFDB
  8557                           fsr2h	equ	0xFDA
  8558                           fsr2l	equ	0xFD9
  8559                           status	equ	0xFD8
  8560                           
  8561 ;; *************** function _SPISlaveInit *****************
  8562 ;; Defined at:
  8563 ;;		line 742 in file "SlaveComm.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8577 ;;      Params:         0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_communications
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text60
  8592  001D9C                     __ptext60:
  8593                           	opt stack 0
  8594  001D9C                     _SPISlaveInit:
  8595                           	opt stack 27
  8596                           
  8597                           ;SlaveComm.c: 745: TRISAbits.TRISA0 = 0;
  8598                           
  8599                           ;incstack = 0
  8600  001D9C  9092               	bcf	3986,0,c	;volatile
  8601                           
  8602                           ;SlaveComm.c: 746: TRISAbits.TRISA1 = 1;
  8603  001D9E  8292               	bsf	3986,1,c	;volatile
  8604                           
  8605                           ;SlaveComm.c: 748: TRISCbits.TRISC3 = 0;
  8606  001DA0  9694               	bcf	3988,3,c	;volatile
  8607                           
  8608                           ;SlaveComm.c: 749: TRISCbits.TRISC5 = 0;
  8609  001DA2  9A94               	bcf	3988,5,c	;volatile
  8610                           
  8611                           ;SlaveComm.c: 750: TRISCbits.TRISC6 = 0;
  8612  001DA4  9C94               	bcf	3988,6,c	;volatile
  8613                           
  8614                           ;SlaveComm.c: 751: TRISCbits.TRISC7 = 0;
  8615  001DA6  9E94               	bcf	3988,7,c	;volatile
  8616                           
  8617                           ;SlaveComm.c: 752: ANSELAbits.ANSA1 = 0b0;
  8618  001DA8  010F               	movlb	15	; () banked
  8619  001DAA  9338               	bcf	56,1,b	;volatile
  8620                           
  8621                           ;SlaveComm.c: 754: LATCbits.LATC6 = 1;
  8622  001DAC  8C8B               	bsf	3979,6,c	;volatile
  8623                           
  8624                           ;SlaveComm.c: 755: LATCbits.LATC3 = 1;
  8625  001DAE  868B               	bsf	3979,3,c	;volatile
  8626                           
  8627                           ;SlaveComm.c: 756: LATCbits.LATC5 = 1;
  8628  001DB0  8A8B               	bsf	3979,5,c	;volatile
  8629                           
  8630                           ;SlaveComm.c: 757: LATCbits.LATC7 = 1;
  8631  001DB2  8E8B               	bsf	3979,7,c	;volatile
  8632                           
  8633                           ;SlaveComm.c: 760: SSP2CON1bits.SSPEN = 0;
  8634  001DB4  9A6C               	bcf	3948,5,c	;volatile
  8635                           
  8636                           ;SlaveComm.c: 762: ANSELBbits.ANSB0 = 0b0;
  8637  001DB6  9139               	bcf	57,0,b	;volatile
  8638                           
  8639                           ;SlaveComm.c: 763: ANSELBbits.ANSB1 = 0b0;
  8640  001DB8  9339               	bcf	57,1,b	;volatile
  8641                           
  8642                           ;SlaveComm.c: 764: ANSELBbits.ANSB2 = 0b0;
  8643  001DBA  9539               	bcf	57,2,b	;volatile
  8644                           
  8645                           ;SlaveComm.c: 765: ANSELBbits.ANSB3 = 0b0;
  8646  001DBC  9739               	bcf	57,3,b	;volatile
  8647                           
  8648                           ;SlaveComm.c: 767: TRISBbits.RB0 = 0b1;
  8649  001DBE  8093               	bsf	3987,0,c	;volatile
  8650                           
  8651                           ;SlaveComm.c: 768: TRISBbits.RB1 = 0b1;
  8652  001DC0  8293               	bsf	3987,1,c	;volatile
  8653                           
  8654                           ;SlaveComm.c: 769: TRISBbits.RB2 = 0b1;
  8655  001DC2  8493               	bsf	3987,2,c	;volatile
  8656                           
  8657                           ;SlaveComm.c: 770: TRISBbits.RB3 = 0b0;
  8658  001DC4  9693               	bcf	3987,3,c	;volatile
  8659                           
  8660                           ;SlaveComm.c: 772: SSP2STATbits.SMP = 0;
  8661  001DC6  9E6D               	bcf	3949,7,c	;volatile
  8662                           
  8663                           ;SlaveComm.c: 773: SSP2STATbits.CKE = 1;
  8664  001DC8  8C6D               	bsf	3949,6,c	;volatile
  8665                           
  8666                           ;SlaveComm.c: 775: SSP2CON1bits.WCOL = 0;
  8667  001DCA  9E6C               	bcf	3948,7,c	;volatile
  8668                           
  8669                           ;SlaveComm.c: 776: SSP2CON1bits.SSPOV = 0;
  8670  001DCC  9C6C               	bcf	3948,6,c	;volatile
  8671                           
  8672                           ;SlaveComm.c: 777: SSP2CON1bits.SSPEN = 0;
  8673  001DCE  9A6C               	bcf	3948,5,c	;volatile
  8674                           
  8675                           ;SlaveComm.c: 778: SSP2CON1bits.CKP = 1;
  8676  001DD0  886C               	bsf	3948,4,c	;volatile
  8677                           
  8678                           ; BSR set to: 15
  8679                           ;SlaveComm.c: 779: SSP2CON1bits.SSPM = 0b0100;
  8680  001DD2  506C               	movf	3948,w,c	;volatile
  8681  001DD4  0BF0               	andlw	-16
  8682  001DD6  0904               	iorlw	4
  8683  001DD8  6E6C               	movwf	3948,c	;volatile
  8684                           
  8685                           ;SlaveComm.c: 782: SSP2CON3 = 0x00;
  8686  001DDA  0E00               	movlw	0
  8687  001DDC  6E69               	movwf	3945,c	;volatile
  8688                           
  8689                           ; BSR set to: 15
  8690                           ;SlaveComm.c: 783: SSP2CON3bits.BOEN = 0b0;
  8691  001DDE  9869               	bcf	3945,4,c	;volatile
  8692                           
  8693                           ; BSR set to: 15
  8694                           ;SlaveComm.c: 785: SSP2CON1bits.SSPEN = 1;
  8695  001DE0  8A6C               	bsf	3948,5,c	;volatile
  8696  001DE2  0012               	return	
  8697  001DE4                     __end_of_SPISlaveInit:
  8698                           	opt stack 0
  8699                           tblptru	equ	0xFF8
  8700                           tblptrh	equ	0xFF7
  8701                           tblptrl	equ	0xFF6
  8702                           tablat	equ	0xFF5
  8703                           prodh	equ	0xFF4
  8704                           prodl	equ	0xFF3
  8705                           intcon	equ	0xFF2
  8706                           intcon2	equ	0xFF1
  8707                           intcon3	equ	0xFF0
  8708                           indf0	equ	0xFEF
  8709                           postinc0	equ	0xFEE
  8710                           plusw0	equ	0xFEB
  8711                           fsr0h	equ	0xFEA
  8712                           fsr0l	equ	0xFE9
  8713                           wreg	equ	0xFE8
  8714                           indf1	equ	0xFE7
  8715                           postinc1	equ	0xFE6
  8716                           fsr1h	equ	0xFE2
  8717                           fsr1l	equ	0xFE1
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           plusw2	equ	0xFDB
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function _Timer0_ISR *****************
  8727 ;; Defined at:
  8728 ;;		line 80 in file "Timer.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;		None
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8742 ;;      Params:         0       0       0       0       0       0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0
  8744 ;;      Temps:         18       0       0       0       0       0       0
  8745 ;;      Totals:        18       0       0       0       0       0       0
  8746 ;;Total ram usage:       18 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		Interrupt level 2
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	intcode
  8756  000008                     __pintcode:
  8757                           	opt stack 0
  8758  000008                     _Timer0_ISR:
  8759                           	opt stack 20
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;incstack = 0
  8763  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8764  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  8765  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  8766  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  8767  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  8768  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  8769  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  8770  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  8771  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  8772  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  8773  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  8774  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  8775  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  8776  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  8777  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  8778  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  8779  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  8780  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  8781  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  8782                           
  8783                           ;Timer.c: 82: INTCONbits.TMR0IF = 0;
  8784  000052  94F2               	bcf	intcon,2,c	;volatile
  8785                           
  8786                           ;Timer.c: 84: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  8787  000054  0EFC               	movlw	252
  8788  000056  6ED7               	movwf	4055,c	;volatile
  8789                           
  8790                           ;Timer.c: 85: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  8791  000058  0E18               	movlw	24
  8792  00005A  6ED6               	movwf	4054,c	;volatile
  8793                           
  8794                           ;Timer.c: 87: timerCount_ms[0]++;
  8795  00005C  0E01               	movlw	1
  8796  00005E  0100               	movlb	0	; () banked
  8797  000060  27E0               	addwf	_timerCount_ms& (0+255),f,b	;volatile
  8798  000062  0E00               	movlw	0
  8799  000064  23E1               	addwfc	(_timerCount_ms+1)& (0+255),f,b	;volatile
  8800  000066  23E2               	addwfc	(_timerCount_ms+2)& (0+255),f,b	;volatile
  8801  000068  23E3               	addwfc	(_timerCount_ms+3)& (0+255),f,b	;volatile
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;Timer.c: 88: timerCount_ms[1]++;
  8805  00006A  0E01               	movlw	1
  8806  00006C  27E4               	addwf	(_timerCount_ms+4)& (0+255),f,b	;volatile
  8807  00006E  0E00               	movlw	0
  8808  000070  23E5               	addwfc	(_timerCount_ms+5)& (0+255),f,b	;volatile
  8809  000072  23E6               	addwfc	(_timerCount_ms+6)& (0+255),f,b	;volatile
  8810  000074  23E7               	addwfc	(_timerCount_ms+7)& (0+255),f,b	;volatile
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;Timer.c: 89: timerCount_ms[2]++;
  8814  000076  0E01               	movlw	1
  8815  000078  27E8               	addwf	(_timerCount_ms+8)& (0+255),f,b	;volatile
  8816  00007A  0E00               	movlw	0
  8817  00007C  23E9               	addwfc	(_timerCount_ms+9)& (0+255),f,b	;volatile
  8818  00007E  23EA               	addwfc	(_timerCount_ms+10)& (0+255),f,b	;volatile
  8819  000080  23EB               	addwfc	(_timerCount_ms+11)& (0+255),f,b	;volatile
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;Timer.c: 90: timerCount_ms[3]++;
  8823  000082  0E01               	movlw	1
  8824  000084  27EC               	addwf	(_timerCount_ms+12)& (0+255),f,b	;volatile
  8825  000086  0E00               	movlw	0
  8826  000088  23ED               	addwfc	(_timerCount_ms+13)& (0+255),f,b	;volatile
  8827  00008A  23EE               	addwfc	(_timerCount_ms+14)& (0+255),f,b	;volatile
  8828  00008C  23EF               	addwfc	(_timerCount_ms+15)& (0+255),f,b	;volatile
  8829                           
  8830                           ; BSR set to: 0
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;Timer.c: 92: return;
  8834  00008E  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  8835  000092  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  8836  000096  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  8837  00009A  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  8838  00009E  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  8839  0000A2  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  8840  0000A6  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  8841  0000AA  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  8842  0000AE  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  8843  0000B2  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  8844  0000B6  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  8845  0000BA  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  8846  0000BE  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  8847  0000C2  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  8848  0000C6  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  8849  0000CA  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  8850  0000CE  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  8851  0000D2  C001  FFFA         	movff	??_Timer0_ISR,pclath
  8852  0000D6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8853  0000D8  0011               	retfie		f
  8854  0000DA                     __end_of_Timer0_ISR:
  8855                           	opt stack 0
  8856                           pclatu	equ	0xFFB
  8857                           pclath	equ	0xFFA
  8858                           tblptru	equ	0xFF8
  8859                           tblptrh	equ	0xFF7
  8860                           tblptrl	equ	0xFF6
  8861                           tablat	equ	0xFF5
  8862                           prodh	equ	0xFF4
  8863                           prodl	equ	0xFF3
  8864                           intcon	equ	0xFF2
  8865                           intcon2	equ	0xFF1
  8866                           intcon3	equ	0xFF0
  8867                           indf0	equ	0xFEF
  8868                           postinc0	equ	0xFEE
  8869                           plusw0	equ	0xFEB
  8870                           fsr0h	equ	0xFEA
  8871                           fsr0l	equ	0xFE9
  8872                           wreg	equ	0xFE8
  8873                           indf1	equ	0xFE7
  8874                           postinc1	equ	0xFE6
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           indf2	equ	0xFDF
  8878                           postinc2	equ	0xFDE
  8879                           postdec2	equ	0xFDD
  8880                           plusw2	equ	0xFDB
  8881                           fsr2h	equ	0xFDA
  8882                           fsr2l	equ	0xFD9
  8883                           status	equ	0xFD8
  8884                           pclatu	equ	0xFFB
  8885                           pclath	equ	0xFFA
  8886                           tblptru	equ	0xFF8
  8887                           tblptrh	equ	0xFF7
  8888                           tblptrl	equ	0xFF6
  8889                           tablat	equ	0xFF5
  8890                           prodh	equ	0xFF4
  8891                           prodl	equ	0xFF3
  8892                           intcon	equ	0xFF2
  8893                           intcon2	equ	0xFF1
  8894                           intcon3	equ	0xFF0
  8895                           indf0	equ	0xFEF
  8896                           postinc0	equ	0xFEE
  8897                           plusw0	equ	0xFEB
  8898                           fsr0h	equ	0xFEA
  8899                           fsr0l	equ	0xFE9
  8900                           wreg	equ	0xFE8
  8901                           indf1	equ	0xFE7
  8902                           postinc1	equ	0xFE6
  8903                           fsr1h	equ	0xFE2
  8904                           fsr1l	equ	0xFE1
  8905                           indf2	equ	0xFDF
  8906                           postinc2	equ	0xFDE
  8907                           postdec2	equ	0xFDD
  8908                           plusw2	equ	0xFDB
  8909                           fsr2h	equ	0xFDA
  8910                           fsr2l	equ	0xFD9
  8911                           status	equ	0xFD8
  8912                           
  8913                           	psect	rparam
  8914  0000                     pclatu	equ	0xFFB
  8915                           pclath	equ	0xFFA
  8916                           tblptru	equ	0xFF8
  8917                           tblptrh	equ	0xFF7
  8918                           tblptrl	equ	0xFF6
  8919                           tablat	equ	0xFF5
  8920                           prodh	equ	0xFF4
  8921                           prodl	equ	0xFF3
  8922                           intcon	equ	0xFF2
  8923                           intcon2	equ	0xFF1
  8924                           intcon3	equ	0xFF0
  8925                           indf0	equ	0xFEF
  8926                           postinc0	equ	0xFEE
  8927                           plusw0	equ	0xFEB
  8928                           fsr0h	equ	0xFEA
  8929                           fsr0l	equ	0xFE9
  8930                           wreg	equ	0xFE8
  8931                           indf1	equ	0xFE7
  8932                           postinc1	equ	0xFE6
  8933                           fsr1h	equ	0xFE2
  8934                           fsr1l	equ	0xFE1
  8935                           indf2	equ	0xFDF
  8936                           postinc2	equ	0xFDE
  8937                           postdec2	equ	0xFDD
  8938                           plusw2	equ	0xFDB
  8939                           fsr2h	equ	0xFDA
  8940                           fsr2l	equ	0xFD9
  8941                           status	equ	0xFD8
  8942                           
  8943                           	psect	temp
  8944  00004D                     btemp:
  8945                           	opt stack 0
  8946  00004D                     	ds	1
  8947  0000                     int$flags	set	btemp
  8948  0000                     wtemp6	set	btemp+1
  8949                           pclatu	equ	0xFFB
  8950                           pclath	equ	0xFFA
  8951                           tblptru	equ	0xFF8
  8952                           tblptrh	equ	0xFF7
  8953                           tblptrl	equ	0xFF6
  8954                           tablat	equ	0xFF5
  8955                           prodh	equ	0xFF4
  8956                           prodl	equ	0xFF3
  8957                           intcon	equ	0xFF2
  8958                           intcon2	equ	0xFF1
  8959                           intcon3	equ	0xFF0
  8960                           indf0	equ	0xFEF
  8961                           postinc0	equ	0xFEE
  8962                           plusw0	equ	0xFEB
  8963                           fsr0h	equ	0xFEA
  8964                           fsr0l	equ	0xFE9
  8965                           wreg	equ	0xFE8
  8966                           indf1	equ	0xFE7
  8967                           postinc1	equ	0xFE6
  8968                           fsr1h	equ	0xFE2
  8969                           fsr1l	equ	0xFE1
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           plusw2	equ	0xFDB
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      76
    BANK0           160    128     160
    BANK1           256      8      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> xSumMatches@recXsumbuf(BANK0[16]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[10]), STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), 
		 -> STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_29(CODE[4]), STR_28(CODE[10]), STR_27(CODE[4]), STR_26(CODE[12]), 
		 -> STR_25(CODE[5]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[4]), 
		 -> STR_21(CODE[4]), STR_20(CODE[6]), STR_19(CODE[4]), STR_18(CODE[7]), 
		 -> STR_17(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> xsum_builder@xsumBuf(BANK0[16]), 

    xsum_builder@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_29(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_28(CODE[10]), STR_23(CODE[5]), STR_20(CODE[6]), STR_18(CODE[7]), 
		 -> STR_16(CODE[6]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_27(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_17(CODE[4]), 
		 -> STR_15(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    xSumMatches@data	PTR unsigned char  size(2) Largest target is 42
		 -> buffer_to_chk.data_buffer(COMRAM[40]), xSumMatches@buffer_to_chk(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK1[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK1[42]), 


Critical Paths under _main in COMRAM

    _mcpUpdatePower->_powerReduction
    _powerReduction->___lldiv
    _powerCalculateWatts->___lldiv
    _ledGoToggle->_ledToggle
    _mcpInit->_mcpInitF
    _mcpInitF->_delayMS10
    _ledTestToggle->_ledToggle
    _ledToggle->_ledSet
    _ledSetAllOn->_ledSetAll
    _ledRun->_ledRunDown
    _ledRun->_ledRunUp
    _ledRunUp->_ledSetAll
    _ledRunDown->_ledSetAll
    _ledSetAllOff->_ledSetAll
    _ledSetAll->_ledSet
    _communications->_resetCommunications
    _xSumMatches->_atoi
    _atoi->___wmul
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_xsum_builder
    _com_command_setEnergyUsed->_command_builder3
    _ultoa->___lldiv
    _command_builder3->_xsum_builder
    _xsum_builder->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data->_xSumMatches
    _process_data_parameters->_com_command_setEnergyUsed
    _command_builder1->_xsum_builder
    _command_builder3->_xsum_builder

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _commRun->_communications
    _commInit->_communications

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  310356
                                            127 BANK0      1     1      0
                                              2 BANK1      6     6      0
                            ___llmod
                           _commInit
                            _commRun
                             _initIO
                _initInterruptsClear
                            _initOSC
                            _ledInit
                             _ledRun
                       _ledSetAllOff
                        _ledSetAllOn
                      _ledTestToggle
                            _mcpInit
                     _mcpUpdatePower
                      _timerGetCount
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcpUpdatePower                                       8     8      0    6026
                                             39 COMRAM     8     8      0
                        _ledGoToggle
                _powerCalculateWatts
                     _powerReduction
                      _timerGetCount
                    _timerResetCount
 ---------------------------------------------------------------------------------
 (2) _timerResetCount                                      4     2      2     391
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _powerReduction                                       8     4      4    1780
                                             31 COMRAM     8     4      4
                            ___lldiv
                      _timerGetCount
 ---------------------------------------------------------------------------------
 (1) _timerGetCount                                        6     2      4     391
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _powerCalculateWatts                                  7     2      5    1631
                                             31 COMRAM     7     2      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _ledGoToggle                                          2     0      2    1734
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (1) _mcpInit                                              0     0      0    1936
                          _delayMS10
                           _mcpInitF
 ---------------------------------------------------------------------------------
 (2) _mcpInitF                                             1     1      0     968
                                             23 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (1) _ledTestToggle                                        2     0      2    1644
                                             32 COMRAM     2     0      2
                          _ledToggle
 ---------------------------------------------------------------------------------
 (3) _ledToggle                                            8     6      2    1523
                                             24 COMRAM     8     6      2
                             _ledSet
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOn                                          0     0      0    4537
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (1) _ledRun                                               2     0      2   13268
                                             34 COMRAM     2     0      2
                         _ledRunDown
                           _ledRunUp
 ---------------------------------------------------------------------------------
 (2) _ledRunUp                                             4     2      2    6558
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledRunDown                                           4     2      2    6558
                                             30 COMRAM     4     2      2
                            ___awdiv
                          _delayMS10
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     968
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ledInit                                              0     0      0    4537
                       _ledSetAllOff
 ---------------------------------------------------------------------------------
 (1) _ledSetAllOff                                         0     0      0    4537
                          _ledSetAll
 ---------------------------------------------------------------------------------
 (2) _ledSetAll                                            6     0      6    4537
                                             24 COMRAM     6     0      6
                             _ledSet
 ---------------------------------------------------------------------------------
 (4) _ledSet                                               6     2      4    1204
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _commRun                                              0     0      0  136393
                     _communications
 ---------------------------------------------------------------------------------
 (1) _commInit                                             0     0      0  136393
                     _communications
 ---------------------------------------------------------------------------------
 (2) _communications                                       2     2      0  136393
                                              0 BANK1      2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
                        _xSumMatches
 ---------------------------------------------------------------------------------
 (3) _xSumMatches                                         72    30     42    1881
                                             31 COMRAM     1     1      0
                                              0 BANK0     71    29     42
                               _atoi
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    1115
                                             24 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (4) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _resetCommunications                                  4     2      2   77471
                                             58 COMRAM     2     0      2
                                             28 BANK0      2     2      0
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (4) _com_command_setVersion                               2     0      2   23682
                                             56 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (4) _com_command_setPower                                14    12      2   26682
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (3) _receive_data                                         4     2      2     598
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (4) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _process_data                                        56    51      5   55994
                                             71 BANK0     56    51      5
          _process_data_parameterize
            _process_data_parameters
                        _xSumMatches (ARG)
 ---------------------------------------------------------------------------------
 (4) _process_data_parameters                              5     1      4   54003
                                             58 COMRAM     1     1      0
                                             28 BANK0      4     0      4
                               _atol
          _com_command_setEnergyUsed
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (5) _strmatch                                             7     3      4    3117
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (6) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (5) _send_end_of_transmission                             2     0      2   22224
                                             52 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (6) _command_builder1                                     6     2      4   21743
                                             46 COMRAM     6     2      4
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (4) _com_command_setEnergyUsed                           14    12      2   26772
                                             56 COMRAM     2     0      2
                                             16 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    2920
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     592
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1141
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _command_builder3                                    10     2      8   23561
                                             46 COMRAM    10     2      8
           _command_builder_add_char
         _command_builder_add_string
                       _xsum_builder
 ---------------------------------------------------------------------------------
 (6) _xsum_builder                                        20    16      4   12279
                                             42 COMRAM     4     0      4
                                              0 BANK0     16    16      0
           _command_builder_add_char
         _command_builder_add_string
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2226
                                             34 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1723
                                             25 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     412
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     601
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _command_builder_add_string                          10     6      4    5635
                                             22 COMRAM    10     6      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (8) _command_builder_add_char                             4     1      3    3457
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _atol                                                14    10      4    1115
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     456
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _process_data_parameterize                           11     7      4    1481
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     592
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Timer0_ISR                                         18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___llmod
   _commInit
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
         _xSumMatches (ARG)
           _atoi
             ___wmul
             _isdigit
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
       _xSumMatches
         _atoi
           ___wmul
           _isdigit
   _commRun
     _communications
       _SPISlaveInit
       _process_data
         _process_data_parameterize
           ___wmul
         _process_data_parameters
           _atol
             ___lmul
             _isdigit
           _com_command_setEnergyUsed
             _command_builder3
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
             _ultoa
               ___lldiv
               ___llmod
           _send_end_of_transmission
             _command_builder1
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _xsum_builder
                 _command_builder_add_char
                 _command_builder_add_string
                   _command_builder_add_char
                 _itoa
                   _utoa
                     ___lwdiv
                     ___lwmod
           _strmatch
             _strcmp2
         _xSumMatches (ARG)
           _atoi
             ___wmul
             _isdigit
       _receive_data
         _SPI_receive_data
       _resetCommunications
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setPower
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
           _ultoa
             ___lldiv
             ___llmod
         _com_command_setVersion
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
             _xsum_builder
               _command_builder_add_char
               _command_builder_add_string
                 _command_builder_add_char
               _itoa
                 _utoa
                   ___lwdiv
                   ___lwmod
       _send_data
         _SPI_send_data
       _xSumMatches
         _atoi
           ___wmul
           _isdigit
   _initIO
   _initInterruptsClear
   _initOSC
   _ledInit
     _ledSetAllOff
       _ledSetAll
         _ledSet
   _ledRun
     _ledRunDown
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
     _ledRunUp
       ___awdiv
       _delayMS10
       _ledSetAll
         _ledSet
   _ledSetAllOff
     _ledSetAll
       _ledSet
   _ledSetAllOn
     _ledSetAll
       _ledSet
   _ledTestToggle
     _ledToggle
       _ledSet
   _mcpInit
     _delayMS10
     _mcpInitF
       _delayMS10
   _mcpUpdatePower
     _ledGoToggle
       _ledToggle
         _ledSet
     _powerCalculateWatts
       ___lldiv
     _powerReduction
       ___lldiv
       _timerGetCount
     _timerGetCount
     _timerResetCount
   _timerGetCount
   _timerInit

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      8      5C       6       35.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     80      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148       9        0.0%
DATA                 0      0     148      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Mar 03 12:32:27 2020

                                       _SPISlaveInit 1D9C                                                   l22 1C96  
                                                 l23 1C72                                                   l25 1C7E  
                                    ??_timerGetCount 0017                                                   l26 1C8A  
                                                 l90 18F0                                                   l85 18BC  
                                                 l86 189A                                                   l87 18E0  
                                                 l88 18A8                                                   l89 18AE  
                           __size_of_timerResetCount 002A                                         ___awdiv@sign 0018  
                                ___wmul@multiplicand 0015                                       ??_ledSetAllOff 001F  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l210 115E                                                  l212 110E  
                                                l206 10FC                                                  l240 1314  
                                                l224 15AC                                                  l216 117A  
                                                l208 114A                                                  l225 157A  
                                                l314 1B66                                                  l218 118E  
                                                l251 0AC6                                                  l235 1264  
                                                l227 1588                                                  l244 1EDA  
                                                l228 1596                                                  l324 172E  
                                                l253 0A88                                                  l237 12A8  
                                                l229 15A2                                                  l318 16C6  
                                                l334 0B9E                                                  l350 201C  
                                                l255 0AB8                                                  l319 1680  
                                                l335 0B34                                                  l351 2020  
                                                l239 1302                                                  l327 178E  
                                                l256 09F8                                                  l344 0C0C  
                                                l336 0B68                                                  l280 07C0  
                                                l600 1F62                                                  l249 09C6  
                                                l601 1F50                                                  l258 0A0A  
                                                l346 0C44                                                  l338 0B9A  
                                                l282 07EE                                                  l266 0678  
                                                l290 0F88                                                  l259 0A5E  
                                                l355 2088                                                  l284 081A  
                                                l276 0764                                                  l268 0702  
                                                l292 0FC6                                                  l293 0FCE  
                                                l541 08A2                                                  l278 0792  
                                                l550 0944                                                  l615 1BD8  
                                                l295 1002                                                  l551 0928  
                                                l616 1BEC                                                  l800 17A6  
                                                l480 0F20                                                  l289 0F58  
                                                l801 17B6                                                  l553 095E  
                                                l554 0978                                                  l546 095A  
                                                l803 17D4                                                  l539 089E  
                                                l475 0E6E                                                  l804 17CC  
                                                l477 0EB2                                                  l566 1624  
                                                l807 17F4                                                  l559 193A  
                                                l808 17FE                                                  l809 180C  
                                                l770 104C                                                  l773 1098  
                                                l790 0E26                                                  l774 105E  
                                                l767 100C                                                  l784 0D84  
                                                l776 10CA                                                  l768 1008  
                                                l962 20E2                                                  l787 0DE2  
                                                l788 0D8E                                                  l972 149C  
                                                l974 14D6                                                  l975 1514  
                                                l968 1E08                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                      ?_powerReduction 0020  
                                                wreg 000FE8                              __size_of_mcpUpdatePower 0184  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 007C  
                                               l1002 1844                                                 l1003 1838  
                                               l1012 1A04                                                 l1013 19F8  
                                               l1006 1878                                                 l1007 1886  
                                               l1016 1A2C                                                 l1017 1A3A  
                                               l1070 1C34                                                 l1055 0C5E  
                                               l1080 1E34                                                 l1073 1C5C  
                                               l1057 0CB6                                                 l1074 1C66  
                                               l1058 0D20                                                 l1083 1E54  
                                               l1084 1E5E                                                 l1069 1C3C  
                                               l1079 1E3C                                                 l4031 0AC6  
                                               l4105 1094                                                 l4447 1610  
                                               l4719 0EA2                                                 l4597 0928  
                                               STR_1 064A                                                 STR_2 064E  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 062F  
                                               STR_6 0634                                                 STR_7 0624  
                                               STR_8 0617                                                 STR_9 061E  
                                               u2420 1C40                                                 u2510 16B4  
                                               u2520 16F2                                                 u3160 18B8  
                                               u3161 18B2                                                 u2450 1E40  
                                               u3148 18A0                                                 u2517 16AA  
                                               u3421 1128                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 u2527 16E8  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               u2560 1848                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 u2650 0BD6  
                                               u3530 08AA                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u3380 17D8  
                                               u2590 1A08                                                 u3480 1610  
                                               u3617 0E7A                                                 u2770 1FA0  
                                               u3627 0E90                                                 u2780 1FA2  
                                               u3580 0EA2                                                 u3637 198E  
                                               u2855 1C7A                                                 u3647 19A0  
                                               u2856 1C7C                                                 u2865 1C86  
                                               u3657 19B6                                                 u2890 09C4  
                                               u2866 1C88                                                 u2875 1C92  
                                               u3667 19CC                                                 u2876 1C94  
                                               u3677 1F56                                                 u3687 1542  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                          main@oneShot 00FC  
                                               _atoi 1006                                                 _atol 0D44  
                                               _main 0E38                                                 _itoa 1DE4  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               indf0 000FEF                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                               _utoa 1494                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00DA  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0155  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                    mcpUpdatePower@timerHFoutLast_ms 00F0                                 __end_of_xsum_builder 1B12  
                                     _communications 10D4                                      ??_ledTestToggle 0023  
                                              ?_atoi 0019                                                ?_atol 001F  
                                              ?_main 0001                                                ?_itoa 0023  
                                    __end_of___awdiv 1816                                                STR_10 0639  
                                              STR_11 060D                                                STR_12 064A  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_15 064E                                                STR_16 0624  
                                              STR_24 0642                                                STR_17 064E  
                                              STR_18 0617                                                STR_27 064E  
                                              STR_28 060D                                                STR_29 0646  
                                    __end_of___lldiv 1898                                                ?_utoa 001A  
                                    ___awdiv@divisor 0015                                      __end_of___llmod 1A4C  
                                     __CFG_DEBUG$OFF 000000                                      __end_of___lwdiv 1C70  
                                    __end_of___lwmod 1E68                                    ?_command_builder1 002F  
                                  ?_command_builder3 002F                                      ___awdiv@counter 0017  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 1CBC                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0033  
                                 ??_command_builder3 0037                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                    __end_of_ledInit 215E                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                                      __end_of_commRun 2166  
                 process_data_parameters@send_buffer 007E                            powerReduction@countReduce 0041  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                      __end_of_mcpInit 1FFC  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 211C  
                                    __end_of_isdigit 20EA                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atoi@a 001E                                                atol@a 0028  
                                              atol@c 002C                                                atoi@s 0019  
                                              atol@s 001F                                                _ultoa 0C4E  
                                              pclath 000FFA                                   main@timerHeartbeat 0156  
                                              tablat 000FF5                                                plusw0 000FEB  
                                              plusw2 000FDB                                                utoa@c 0022  
                                              utoa@v 0020                                                status 000FD8  
                                              wtemp6 004E                                      __end_of_strcmp2 0C4E  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 0039  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 001F  
                                       ?_xSumMatches 0060                                      __initialization 1EE2  
                           xSumMatches@xsumRecieving 009E                                         __end_of_atoi 10D4  
                                       __end_of_atol 0E38                                         __end_of_main 0F28  
                                       __end_of_itoa 1E26                               __end_of_communications 1196  
                                       __end_of_utoa 1538                               _com_command_setVersion 2024  
                __size_of_command_builder_add_string 0094                                     _SPI_receive_data 1FFC  
                         powerReduction@timerLast_ms 0020                         command_builder_add_char@data 0015  
                                             ??_atoi 001B                                               ??_atol 0023  
                                             ??_main 00DF                                  ledRunUp@ledRunDelay 001F  
                                             ??_itoa 0029                                        _SPI_send_data 2070  
                                             ??_utoa 0020                                        __activetblptr 000002  
                            _process_data_parameters 0654                                    ??_timerResetCount 0015  
                               __size_of_ledGoToggle 0002                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                     ___awdiv@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                 __size_of_ledSetAllOn 001E  
                               __end_of_ledSetAllOff 20CC                                ??_initInterruptsClear 0013  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                   __end_of_commInit 216E                                     __end_of_ledRunUp 13D6  
                       powerCalculateWatts@calcWatts 0025                                     __end_of_mcpInitF 19E6  
                                             ___lmul 1BC8                                               ___wmul 204A  
                                          ??___awdiv 0017                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 001B  
                                          ??___llmod 001B                                            ??___lwdiv 0017  
                                             _ledSet 1C70                                            ??___lwmod 0017  
                                             _ledRun 20EA                                               _initIO 2132  
                                             clear_0 1EE8                                               clear_1 1EF4  
                                             clear_2 1F00                                     ___awdiv@quotient 0019  
                       powerReduction@timerReduce_ms 0024                                       ?_SPI_send_data 0001  
                                          ??_ledInit 001F                                            ??_commRun 003D  
                         ?_com_command_setEnergyUsed 0039                                            ??_mcpInit 0019  
                                          ??_initOSC 0013                            _process_data_parameterize 09A2  
                                             itoa@cp 0029                                            ??_isdigit 0013  
                                     _mcpUpdatePower 081E                                    ledToggle@getValue 001F  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 0070  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 1FA8                                     xsum_builder@xsum 002D  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 1F06                                    ledToggle@setValue 001D  
                    com_command_setPower@send_buffer 0039                              timerGetCount@timerIndex 0013  
                                      ___rparam_used 000001                                    SPI_send_data@data 0013  
                                  ledRunUp@delay10ms 0021                                __size_of_xsum_builder 0062  
                                     __pcstackCOMRAM 0001                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                     ??_powerReduction 0024  
                                      __end_of_ultoa 0D44                            ??_process_data_parameters 003B  
                       communications@receive_buffer 012A                               __end_of_mcpUpdatePower 09A2  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 1702  
                         _command_builder_add_string 166E                                   __size_of_ledSetAll 003E  
                                 __size_of_ledToggle 0076                                      ledToggle@ledNum 0019  
                                 xSumMatches@matches 009F                                              ??_ultoa 0028  
                                 xSumMatches@recXsum 009C                                           __pbssBANK0 00E0  
                                         __pbssBANK1 0100                                       ??_receive_data 0018  
                                       _xsum_builder 1AB0                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                         __size_of_powerCalculateWatts 006C  
                                            ?___lmul 0013                                 command_builder1@xsum 0033  
                                            ?___wmul 0013                                 command_builder3@xsum 0037  
                                 __CFG_CCP3MX$PORTB5 000000                                 __size_of_xSumMatches 00DE  
                                            ?_ledSet 0013                                      ??_SPI_send_data 0013  
                                            ?_ledRun 0023                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 003B  
         communications@end_of_transmission_received 00FF                                       ___lmul@product 001B  
                              __end_of_timerGetCount 1F46                                      ?_mcpUpdatePower 0001  
                        __end_of_resetCommunications 15D4                                   __size_of_timerInit 0064  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                                         _ledRunDown 13D6                         __end_of_com_command_setPower 1D52  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 211C  
                                            _SSP2BUF 000F6F                                __size_of_ledSetAllOff 001E  
                                          ?_commInit 0001                                            ?_ledRunUp 001F  
                           _command_builder_add_char 1B12                                            ?_mcpInitF 0001  
                                  __end_of_delayMS10 1F78                      __end_of_process_data_parameters 081E  
                           __end_of_SPI_receive_data 2024                            __size_of_command_builder1 005A  
                          __size_of_command_builder3 00C2                                  ledRunDown@delay10ms 0021  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0039  
                                            __Lparam 0000                                    __end_of_ledSetAll 1EA6  
                                  __end_of_ledToggle 190E                                      _timerResetCount 1FA8  
                                            ___awdiv 1792                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 1816  
                                    __size_of___wmul 0026                                              ___llmod 19E6  
                                            ___lwdiv 1C1E                                              ___lwmod 1E26  
                                       __psmallconst 0600                                      __size_of_ledSet 004C  
                                    __size_of_ledRun 001A                                 SPI_receive_data@data 0013  
                                    __size_of_initIO 0012                                              __pcinit 1EE2  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 0E38                                              __ptext1 1A4C  
                                            __ptext2 081E                                              __ptext3 1FA8  
                                            __ptext4 15D4                                              __ptext5 1F14  
                                            __ptext6 190E                                              _ledInit 2152  
                                            __ptext7 216E                                              __ptext8 1FD2  
                                            __ptext9 197A                                              _commRun 215E  
                                          _T0CONbits 000FD5                                         _ledSetAllOff 20AE  
                                            _mcpInit 1FD2                                              _initOSC 2104  
                              __end_of_ledTestToggle 2152                                              _isdigit 20CC  
                                __size_of_Timer0_ISR 00D2                                           ??_commInit 003D  
                                            main@inx 015A                                              _strcmp2 0B22  
                                         ??_ledRunUp 0021                                 end_of_initialization 1F06  
                                         ??_mcpInitF 0018                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 1792                                              itoa@buf 0023  
                                            itoa@val 0025                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 204A                                     ??_communications 003D  
                                  __end_of_timerInit 1AB0                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec2 000FDD                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                                            utoa@buf 001A                                              utoa@val 001C  
                          xSumMatches@recXsumPointer 00A0                                receive_data@my_status 004B  
                               __end_of_receive_data 1318                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                                        ??_ledGoToggle 0023  
                    communications@last_state_active 00FD                          ??_com_command_setEnergyUsed 003B  
                                      ?_process_data 00A7                                   ledSetAll@led1Value 0019  
                                 ledSetAll@led2Value 001B                                   ledSetAll@led3Value 001D  
                              xSumMatches@recXsumbuf 008A                                          ?_ledRunDown 001F  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                                        ??_ledSetAllOn 001F  
                           xSumMatches@buffer_to_chk 0060                           process_data@receive_buffer 00A7  
                        __end_of_initInterruptsClear 1D08                    __end_of_process_data_parameterize 0B22  
                            __end_of_timerResetCount 1FD2                                 _com_command_setPower 1D08  
                communications@receive_current_state 00FE                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1C1E                                       __end_of___wmul 2070  
                                     __end_of_ledSet 1CBC                                       __end_of_ledRun 2104  
              command_builder_add_string@send_buffer 0017                                       __end_of_initIO 2144  
                                     ??_process_data 003C                          ?_command_builder_add_string 0017  
                                start_initialization 1EE2                                  _powerCalculateWatts 190E  
                                __end_of_ledGoToggle 2170                         resetCommunications@commState 0047  
                                   _command_builder1 1B6E                                     _command_builder3 1196  
                          _com_command_setEnergyUsed 1D52                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0039  
                                __end_of_ledSetAllOn 20AE                                         ??_Timer0_ISR 0001  
                               send_data@send_buffer 0015                                         xSumMatches@i 00A5  
                              ?_com_command_setPower 0039                                  __size_of_ledRunDown 00BE  
                               ?_powerCalculateWatts 0020                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                     ??_mcpUpdatePower 0028  
                                           ??___wmul 0017                  send_end_of_transmission@send_buffer 0035  
                                           ??_ledSet 0017                                             ??_ledRun 0025  
                                           ??_initIO 0013                           ??_send_end_of_transmission 0037  
                         ??_command_builder_add_char 0016                                          __pbssCOMRAM 003D  
                                      __pcstackBANK0 0060                                        __pcstackBANK1 0154  
                           SPI_receive_data@recvGood 0015                                   __end_of_Timer0_ISR 00DA  
                                       _isdigit$2440 0014                                    __size_of_commInit 0008  
                                  __size_of_ledRunUp 00BE                                    __size_of_mcpInitF 006C  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 1F46                                     ?_timerResetCount 0013  
                      com_command_setEnergyUsed@temp 0070                             powerCalculateWatts@outHF 0024  
                                      ??_xSumMatches 0020                                   ??_SPI_receive_data 0015  
                                       delayMS10@inx 0016                                     ___lwdiv@dividend 0013  
                              ??_powerCalculateWatts 0025                                command_builder1@data1 0031  
                        command_builder1@send_buffer 002F                             ?_process_data_parameters 007C  
                              __size_of_receive_data 00C0                                            __pintcode 0008  
                              command_builder3@data1 0031                                command_builder3@data2 0033  
                              command_builder3@data3 0035                                             ?___awdiv 0013  
                                           ?___lldiv 0013                                ledRunDown@ledRunDelay 001F  
                                           ?___llmod 0013                                             ?___lwdiv 0013  
                                           ?___lwmod 0013                                            _ledSetAll 1E68  
                                          _ledToggle 1898                           mcpUpdatePower@meterWattsHF 0045  
                              __end_of_SPI_send_data 2090                           mcpUpdatePower@meterWattsLF 0043  
                                           ?_ledInit 0001                                             ?_commRun 0001  
                                           ?_mcpInit 0001                                             ?_initOSC 0001  
                                        __smallconst 0600                                          _ledGoToggle 216E  
                     resetCommunications@send_buffer 003B                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                              xsum_builder@send_buffer 002B  
                         mcpUpdatePower@oneShotHFout 004A                                    send_data@send_end 0019  
                         mcpUpdatePower@oneShotLFout 0049                              __size_of_powerReduction 009A  
                                   ___lwdiv@quotient 0018                                             ?_strcmp2 0013  
                       __size_of_resetCommunications 009C                                          _ledSetAllOn 2090  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                                         _receive_data 1258  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                               __size_of_timerGetCount 0032  
                                         ?_delayMS10 0013                                 __end_of_process_data 1EE2  
                                          _send_data 1702                               ??_com_command_setPower 003B  
                  process_data_parameters@parameters 007C                                  _meterEnergyUsedPart 00F4  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                          _timerInit 1A4C                                             _SSP2CON3 000F69  
                                         ?_ledSetAll 0019                                           ?_ledToggle 0019  
                                __end_of_xSumMatches 1006                                           _ADCON0bits 000FC2  
                                  ___wmul@multiplier 0013                  command_builder_add_char@send_buffer 0013  
                                       ??_ledRunDown 0021                                    ledGoToggle@ledNum 0021  
                                  ledRun@ledRunDelay 0023                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 1DE4                                      xSumMatches@data 00A2  
           process_data@end_of_transmission_received 00DE                                      xSumMatches@xsum 009A  
                                         ?_send_data 0015                                             __Hrparam 0000  
                             __size_of_ledTestToggle 000E                          mcpUpdatePower@timerHFout_ms 002C  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                                 __end_of_ledRunDown 1494                          command_builder3@send_buffer 002F  
                                  __CFG_P2BMX$PORTB5 000000                                           ?_timerInit 0001  
                        mcpUpdatePower@timerLFout_ms 0028                   __size_of_com_command_setEnergyUsed 004A  
                                   __size_of___awdiv 0084                     __end_of_send_end_of_transmission 2132  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 1B6E                             __end_of_command_builder1 1BC8  
                           __end_of_command_builder3 1258                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                        _timerGetCount 1F14  
                                   __size_of_ledInit 000C                                     __size_of_commRun 0008  
                                   __size_of_mcpInit 002A                                     __size_of_initOSC 0018  
                                         strcmp2@inx 001C                         process_data_parameterize@inx 0020  
                                   __size_of_isdigit 001E                                      ___lwdiv@divisor 0015  
                                      _timerCount_ms 00E0                                      ___lwdiv@counter 0017  
                                           __ptext10 2144                                             __ptext11 1898  
                                           __ptext20 1E68                                             __ptext12 2090  
                                           __ptext21 1C70                                             __ptext13 20EA  
                                           __ptext30 1702                                             __ptext22 2104  
                                           __ptext14 1318                                             __ptext31 2070  
                                           __ptext23 1CBC                                             __ptext15 13D6  
                                           __ptext40 0B22                                             __ptext32 1538  
                                           __ptext24 2132                                             __ptext16 1F46  
                                           __ptext41 211C                                             __ptext33 2024  
                                           __ptext25 215E                                             __ptext17 1792  
                                           __ptext50 1494                                             __ptext42 1B6E  
                                           __ptext34 1D08                                             __ptext26 2166  
                                           __ptext18 2152                                             __ptext51 1E26  
                                           __ptext43 1D52                                             __ptext35 1258  
                                           __ptext27 10D4                                             __ptext19 20AE  
                                           __ptext60 1D9C                                             __ptext52 1C1E  
                                           __ptext44 0C4E                                             __ptext36 1FFC  
                                           __ptext28 0F28                                             __ptext53 166E  
                                           __ptext45 19E6                                             __ptext37 1EA6  
                                           __ptext29 1006                                             __ptext54 1B12  
                                           __ptext46 1816                                             __ptext38 0654  
                                           __ptext55 0D44                                             __ptext47 1196  
                                           __ptext39 1F78                                             __ptext56 20CC  
                                           __ptext48 1AB0                                             __ptext57 1BC8  
                                           __ptext49 1DE4                                             __ptext58 09A2  
                                           __ptext59 204A                                             _commInit 2166  
                                           _ledRunUp 1318                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                             _mcpInitF 197A  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                      ?_xsum_builder 002B                              process_data@xSumMatches 00AB  
                                      __size_of_atoi 00CE                                        __size_of_atol 00F4  
                                      __size_of_main 00F0                                        strmatch@match 0024  
                                      __size_of_itoa 0042                          powerCalculateWatts@timer_ms 0020  
                                      __size_of_utoa 00A4                                  ledTestToggle@ledNum 0021  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                       __size_of_initInterruptsClear 004C                                          _xSumMatches 0F28  
                             _meterEnergyUsed_global 003D                                             int$flags 004D  
                                           atoi@sign 001D                            timerResetCount@timerIndex 0013  
                                           atol@sign 0027                                          ??_ledSetAll 001F  
                                        ??_ledToggle 001B                    __end_of_com_command_setEnergyUsed 1D9C  
                            __size_of_communications 00C2                                             _strmatch 1F78  
                                       _SSP2STATbits 000F6D                                       ?_timerGetCount 0013  
                            process_data@send_buffer 00A9                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                        _ledTestToggle 2144  
                                     _powerReduction 15D4                                             itoa@base 0027  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 003B                                       ??_xsum_builder 002F  
                              __size_of_process_data 003C                                             intlevel2 0000  
                             process_data@parameters 00AC                                     ___lwmod@dividend 0013  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 0154  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                  command_builder_add_string@xsumAdd 001D                                       ledSet@setValue 0015  
                                        ??_timerInit 0013                                  _resetCommunications 1538  
                          __size_of_SPI_receive_data 0028                                             utoa@base 001E  
                                           ultoa@buf 0020                                        ?_ledSetAllOff 0001  
                                           ultoa@val 0022                                         ?_ledGoToggle 0021  
                                           strcmp2@a 0013                                             strcmp2@b 0015  
                                     ?_ledTestToggle 0021                               __end_of_powerReduction 166E  
                                   ___lldiv@quotient 001B                                         _process_data 1EA6  
                                  _SPI_transmit_wait 004C                                      ___lwmod@divisor 0015  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 0100  
                                    ___lwmod@counter 0017                     __size_of_process_data_parameters 01CA  
                                  _meterWatts_global 00F8                                    __CFG_T3CMX$PORTC0 000000  
                             xSumMatches@currentData 00A4                                 ?_resetCommunications 003B  
                                       ?_ledSetAllOn 0001                                         ledSet@ledNum 0013  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0035  
                        __end_of_powerCalculateWatts 197A                                    __CFG_FOSC$INTIO67 000000  
                  __size_of_command_builder_add_char 005C                            ?_command_builder_add_char 0013  
                                xsum_builder@xsumBuf 0060  
