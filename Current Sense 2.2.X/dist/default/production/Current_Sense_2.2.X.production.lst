

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 09 21:12:22 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     _ADCON0bits	set	4034
    55  0000                     _ANSELA	set	3896
    56  0000                     _ANSELAbits	set	3896
    57  0000                     _ANSELB	set	3897
    58  0000                     _ANSELBbits	set	3897
    59  0000                     _ANSELC	set	3898
    60  0000                     _INTCON	set	4082
    61  0000                     _INTCON2	set	4081
    62  0000                     _INTCON3	set	4080
    63  0000                     _INTCONbits	set	4082
    64  0000                     _IPR1	set	3999
    65  0000                     _IPR2	set	4002
    66  0000                     _IPR3	set	4005
    67  0000                     _IPR4	set	3964
    68  0000                     _IPR5	set	3967
    69  0000                     _LATAbits	set	3977
    70  0000                     _LATBbits	set	3978
    71  0000                     _LATCbits	set	3979
    72  0000                     _OSCCON2bits	set	4050
    73  0000                     _OSCCONbits	set	4051
    74  0000                     _OSCTUNEbits	set	3995
    75  0000                     _PIE1	set	3997
    76  0000                     _PIE2	set	4000
    77  0000                     _PIE3	set	4003
    78  0000                     _PIE4	set	3962
    79  0000                     _PIE5	set	3965
    80  0000                     _PIR1	set	3998
    81  0000                     _PIR2	set	4001
    82  0000                     _PIR3	set	4004
    83  0000                     _PIR4	set	3963
    84  0000                     _PIR5	set	3966
    85  0000                     _PORTAbits	set	3968
    86  0000                     _PORTBbits	set	3969
    87  0000                     _PORTCbits	set	3970
    88  0000                     _RCONbits	set	4048
    89  0000                     _SSP2BUF	set	3951
    90  0000                     _SSP2CON1bits	set	3948
    91  0000                     _SSP2CON3	set	3945
    92  0000                     _SSP2CON3bits	set	3945
    93  0000                     _SSP2STATbits	set	3949
    94  0000                     _T0CONbits	set	4053
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISCbits	set	3988
   100                           
   101                           	psect	smallconst
   102  000600                     __psmallconst:
   103                           	opt stack 0
   104  000600  00                 	db	0
   105  000601                     __stringdata:
   106                           	opt stack 0
   107  000601                     STR_3:
   108  000601  43                 	db	67	;'C'
   109  000602  61                 	db	97	;'a'
   110  000603  6C                 	db	108	;'l'
   111  000604  69                 	db	105	;'i'
   112  000605  62                 	db	98	;'b'
   113  000606  72                 	db	114	;'r'
   114  000607  61                 	db	97	;'a'
   115  000608  74                 	db	116	;'t'
   116  000609  69                 	db	105	;'i'
   117  00060A  6F                 	db	111	;'o'
   118  00060B  6E                 	db	110	;'n'
   119  00060C  00                 	db	0
   120  00060D                     STR_22:
   121  00060D  50                 	db	80	;'P'
   122  00060E  53                 	db	83	;'S'
   123  00060F  56                 	db	86	;'V'
   124  000610  65                 	db	101	;'e'
   125  000611  72                 	db	114	;'r'
   126  000612  73                 	db	115	;'s'
   127  000613  69                 	db	105	;'i'
   128  000614  6F                 	db	111	;'o'
   129  000615  6E                 	db	110	;'n'
   130  000616  00                 	db	0
   131  000617                     STR_4:
   132  000617  45                 	db	69	;'E'
   133  000618  6E                 	db	110	;'n'
   134  000619  55                 	db	85	;'U'
   135  00061A  73                 	db	115	;'s'
   136  00061B  65                 	db	101	;'e'
   137  00061C  64                 	db	100	;'d'
   138  00061D  00                 	db	0
   139  00061E                     STR_20:
   140  00061E  56                 	db	86	;'V'
   141  00061F  6F                 	db	111	;'o'
   142  000620  6C                 	db	108	;'l'
   143  000621  74                 	db	116	;'t'
   144  000622  73                 	db	115	;'s'
   145  000623  00                 	db	0
   146  000624                     STR_18:
   147  000624  57                 	db	87	;'W'
   148  000625  61                 	db	97	;'a'
   149  000626  74                 	db	116	;'t'
   150  000627  74                 	db	116	;'t'
   151  000628  73                 	db	115	;'s'
   152  000629  00                 	db	0
   153  00062A                     STR_7:
   154  00062A  4C                 	db	76	;'L'
   155  00062B  45                 	db	69	;'E'
   156  00062C  44                 	db	68	;'D'
   157  00062D  42                 	db	66	;'B'
   158  00062E  00                 	db	0
   159  00062F                     STR_6:
   160  00062F  44                 	db	68	;'D'
   161  000630  61                 	db	97	;'a'
   162  000631  74                 	db	116	;'t'
   163  000632  61                 	db	97	;'a'
   164  000633  00                 	db	0
   165  000634                     STR_5:
   166  000634  52                 	db	82	;'R'
   167  000635  65                 	db	101	;'e'
   168  000636  61                 	db	97	;'a'
   169  000637  64                 	db	100	;'d'
   170  000638  00                 	db	0
   171  000639                     STR_16:
   172  000639  43                 	db	67	;'C'
   173  00063A  6F                 	db	111	;'o'
   174  00063B  6E                 	db	110	;'n'
   175  00063C  66                 	db	102	;'f'
   176  00063D  00                 	db	0
   177  00063E                     STR_21:
   178  00063E  41                 	db	65	;'A'
   179  00063F  6D                 	db	109	;'m'
   180  000640  70                 	db	112	;'p'
   181  000641  73                 	db	115	;'s'
   182  000642  00                 	db	0
   183  000643  32                 	db	50	;'2'
   184  000644  32                 	db	50	;'2'
   185  000645  32                 	db	50	;'2'
   186  000646  00                 	db	0
   187  000647  33                 	db	51	;'3'
   188  000648  33                 	db	51	;'3'
   189  000649  33                 	db	51	;'3'
   190  00064A  00                 	db	0
   191  00064B                     STR_40:
   192  00064B  34                 	db	52	;'4'
   193  00064C  34                 	db	52	;'4'
   194  00064D  34                 	db	52	;'4'
   195  00064E  00                 	db	0
   196  00064F                     STR_1:
   197  00064F  45                 	db	69	;'E'
   198  000650  4E                 	db	78	;'N'
   199  000651  44                 	db	68	;'D'
   200  000652  00                 	db	0
   201  000653                     STR_11:
   202  000653  4F                 	db	79	;'O'
   203  000654  66                 	db	102	;'f'
   204  000655  66                 	db	102	;'f'
   205  000656  00                 	db	0
   206  000657                     STR_2:
   207  000657  53                 	db	83	;'S'
   208  000658  65                 	db	101	;'e'
   209  000659  74                 	db	116	;'t'
   210  00065A  00                 	db	0
   211  00065B                     STR_8:
   212  00065B  4F                 	db	79	;'O'
   213  00065C  6E                 	db	110	;'n'
   214  00065D  00                 	db	0
   215  00065E                     __end_of__stringdata:
   216                           	opt stack 0
   217                           
   218                           ; #config settings
   219  00065E  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           	psect	cinit
   222  001970                     __pcinit:
   223                           	opt stack 0
   224  001970                     start_initialization:
   225                           	opt stack 0
   226  001970                     __initialization:
   227                           	opt stack 0
   228                           
   229                           ; Clear objects allocated to BANK0 (84 bytes)
   230  001970  EE00  F060         	lfsr	0,__pbssBANK0
   231  001974  0E54               	movlw	84
   232  001976                     clear_0:
   233  001976  6AEE               	clrf	postinc0,c
   234  001978  06E8               	decf	wreg,f,c
   235  00197A  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to COMRAM (24 bytes)
   238  00197C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   239  001980  0E18               	movlw	24
   240  001982                     clear_1:
   241  001982  6AEE               	clrf	postinc0,c
   242  001984  06E8               	decf	wreg,f,c
   243  001986  E1FD               	bnz	clear_1
   244  001988                     end_of_initialization:
   245                           	opt stack 0
   246  001988                     __end_of__initialization:
   247                           	opt stack 0
   248  001988  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  00198A  6EF8               	movwf	tblptru,c
   250  00198C  0100               	movlb	0
   251  00198E  EF6F  F00A         	goto	_main	;jump to C main() function
   252                           tblptru	equ	0xFF8
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           
   256                           	psect	bssCOMRAM
   257  00003A                     __pbssCOMRAM:
   258                           	opt stack 0
   259  00003A                     _meterEnergyUsed:
   260                           	opt stack 0
   261  00003A                     	ds	4
   262  00003E                     _meterWatts:
   263                           	opt stack 0
   264  00003E                     	ds	2
   265  000040                     resetCommunications@commState:
   266                           	opt stack 0
   267  000040                     	ds	2
   268  000042                     _SPI_transmit_wait:
   269                           	opt stack 0
   270  000042                     	ds	1
   271  000043                     communications@end_of_transmission_received:
   272                           	opt stack 0
   273  000043                     	ds	1
   274  000044                     communications@last_state_active:
   275                           	opt stack 0
   276  000044                     	ds	1
   277  000045                     communications@receive_current_state:
   278                           	opt stack 0
   279  000045                     	ds	1
   280  000046                     powerPulseCheck@mcpHFoutLast:
   281                           	opt stack 0
   282  000046                     	ds	1
   283  000047                     powerPulseCheck@mcpLFoutLast:
   284                           	opt stack 0
   285  000047                     	ds	1
   286  000048                     pulseFoutPassThru@runonce:
   287                           	opt stack 0
   288  000048                     	ds	1
   289  000049                     receive_data@my_status:
   290                           	opt stack 0
   291  000049                     	ds	1
   292  00004A                     _timerCountHF:
   293                           	opt stack 0
   294  00004A                     	ds	4
   295  00004E                     _timerCountLF:
   296                           	opt stack 0
   297  00004E                     	ds	4
   298                           tblptru	equ	0xFF8
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           
   302                           	psect	bssBANK0
   303  000060                     __pbssBANK0:
   304                           	opt stack 0
   305  000060                     communications@receive_buffer:
   306                           	opt stack 0
   307  000060                     	ds	42
   308  00008A                     communications@send_buffer:
   309                           	opt stack 0
   310  00008A                     	ds	42
   311                           tblptru	equ	0xFF8
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	cstackBANK0
   316  0000B4                     __pcstackBANK0:
   317                           	opt stack 0
   318  0000B4                     ??_process_data_parameters:
   319                           
   320                           ; 0 bytes @ 0x0
   321  0000B4                     	ds	2
   322  0000B6                     process_data_parameters@end_of_transmission_received:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x2
   326  0000B6                     	ds	1
   327  0000B7                     process_data@receive_buffer:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x3
   331  0000B7                     	ds	2
   332  0000B9                     process_data@send_buffer:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x5
   336  0000B9                     	ds	2
   337  0000BB                     process_data@parameters:
   338                           	opt stack 0
   339                           
   340                           ; 50 bytes @ 0x7
   341  0000BB                     	ds	50
   342  0000ED                     process_data@end_of_transmission_received:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x39
   346  0000ED                     	ds	1
   347  0000EE                     ??_communications:
   348                           
   349                           ; 0 bytes @ 0x3A
   350  0000EE                     	ds	1
   351  0000EF                     communications@no_more_to_send:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x3B
   355  0000EF                     	ds	1
   356  0000F0                     communications@firstTime:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x3C
   360  0000F0                     	ds	1
   361  0000F1                     main@inx:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x3D
   365  0000F1                     	ds	2
   366                           tblptru	equ	0xFF8
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	cstackCOMRAM
   371  000001                     __pcstackCOMRAM:
   372                           	opt stack 0
   373  000001                     ??_Timer0_ISR:
   374  000001                     
   375                           ; 1 bytes @ 0x0
   376  000001                     	ds	14
   377  00000F                     ??_isdigit:
   378  00000F                     ?_strcmp2:
   379                           	opt stack 0
   380  00000F                     ?___wmul:
   381                           	opt stack 0
   382  00000F                     ?___lwdiv:
   383                           	opt stack 0
   384  00000F                     ?___lwmod:
   385                           	opt stack 0
   386  00000F                     ?___lmul:
   387                           	opt stack 0
   388  00000F                     ?___lldiv:
   389                           	opt stack 0
   390  00000F                     ?___llmod:
   391                           	opt stack 0
   392  00000F                     SPI_send_data@data:
   393                           	opt stack 0
   394  00000F                     delayMS10@count:
   395                           	opt stack 0
   396  00000F                     command_builder_add_char@send_buffer:
   397                           	opt stack 0
   398  00000F                     strcmp2@a:
   399                           	opt stack 0
   400  00000F                     SPI_receive_data@data:
   401                           	opt stack 0
   402  00000F                     ___wmul@multiplier:
   403                           	opt stack 0
   404  00000F                     ___lwdiv@dividend:
   405                           	opt stack 0
   406  00000F                     ___lwmod@dividend:
   407                           	opt stack 0
   408  00000F                     ___lmul@multiplier:
   409                           	opt stack 0
   410  00000F                     ___lldiv@dividend:
   411                           	opt stack 0
   412  00000F                     ___llmod@dividend:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0xE
   416  00000F                     	ds	1
   417  000010                     SPI_send_data@sendGood:
   418                           	opt stack 0
   419  000010                     _isdigit$2569:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0xF
   423  000010                     	ds	1
   424  000011                     ??_delayMS10:
   425  000011                     command_builder_add_char@data:
   426                           	opt stack 0
   427  000011                     SPI_receive_data@recvGood:
   428                           	opt stack 0
   429  000011                     isdigit@c:
   430                           	opt stack 0
   431  000011                     send_data@send_buffer:
   432                           	opt stack 0
   433  000011                     strcmp2@b:
   434                           	opt stack 0
   435  000011                     ___wmul@multiplicand:
   436                           	opt stack 0
   437  000011                     ___lwdiv@divisor:
   438                           	opt stack 0
   439  000011                     ___lwmod@divisor:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x10
   443  000011                     	ds	1
   444  000012                     ??_command_builder_add_char:
   445  000012                     delayMS10@inx:
   446                           	opt stack 0
   447  000012                     receive_data@receive_buffer:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x11
   451  000012                     	ds	1
   452  000013                     ??_send_data:
   453  000013                     ??_strcmp2:
   454  000013                     ___lwdiv@counter:
   455                           	opt stack 0
   456  000013                     ___lwmod@counter:
   457                           	opt stack 0
   458  000013                     command_builder_add_string@send_buffer:
   459                           	opt stack 0
   460  000013                     ___wmul@product:
   461                           	opt stack 0
   462  000013                     ___lmul@multiplicand:
   463                           	opt stack 0
   464  000013                     ___lldiv@divisor:
   465                           	opt stack 0
   466  000013                     ___llmod@divisor:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x12
   470  000013                     	ds	1
   471  000014                     ??_initMCPFout:
   472  000014                     ??_receive_data:
   473  000014                     ___lwdiv@quotient:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x13
   477  000014                     	ds	1
   478  000015                     receive_data@data:
   479                           	opt stack 0
   480  000015                     send_data@send_end:
   481                           	opt stack 0
   482  000015                     process_data_parameterize@parameters:
   483                           	opt stack 0
   484  000015                     command_builder_add_string@data_string:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x14
   488  000015                     	ds	1
   489  000016                     strcmp2@match:
   490                           	opt stack 0
   491  000016                     utoa@buf:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x15
   495  000016                     	ds	1
   496  000017                     ??_command_builder_add_string:
   497  000017                     ___llmod@counter:
   498                           	opt stack 0
   499  000017                     process_data_parameterize@buffer_to_parameterize:
   500                           	opt stack 0
   501  000017                     ___lmul@product:
   502                           	opt stack 0
   503  000017                     ___lldiv@quotient:
   504                           	opt stack 0
   505                           
   506                           ; 4 bytes @ 0x16
   507  000017                     	ds	1
   508  000018                     strcmp2@inx:
   509                           	opt stack 0
   510  000018                     utoa@val:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x17
   514  000018                     	ds	1
   515  000019                     ??_process_data_parameterize:
   516  000019                     command_builder_add_string@inx:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x18
   520  000019                     	ds	1
   521  00001A                     strmatch@a:
   522                           	opt stack 0
   523  00001A                     utoa@base:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x19
   527  00001A                     	ds	1
   528  00001B                     ?_atol:
   529                           	opt stack 0
   530  00001B                     ___lldiv@counter:
   531                           	opt stack 0
   532  00001B                     command_builder1@send_buffer:
   533                           	opt stack 0
   534  00001B                     command_builder3@send_buffer:
   535                           	opt stack 0
   536  00001B                     atol@s:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1A
   540  00001B                     	ds	1
   541  00001C                     ??_powerPulseCheck:
   542  00001C                     process_data_parameterize@inx:
   543                           	opt stack 0
   544  00001C                     strmatch@b:
   545                           	opt stack 0
   546  00001C                     utoa@v:
   547                           	opt stack 0
   548  00001C                     ultoa@buf:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x1B
   552  00001C                     	ds	1
   553  00001D                     command_builder1@data1:
   554                           	opt stack 0
   555  00001D                     command_builder3@data1:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x1C
   559  00001D                     	ds	1
   560  00001E                     process_data_parameterize@parameter_index:
   561                           	opt stack 0
   562  00001E                     utoa@c:
   563                           	opt stack 0
   564  00001E                     strmatch@result:
   565                           	opt stack 0
   566  00001E                     ultoa@val:
   567                           	opt stack 0
   568                           
   569                           ; 4 bytes @ 0x1D
   570  00001E                     	ds	1
   571  00001F                     ??_atol:
   572  00001F                     process_data_parameterize@parameter_position:
   573                           	opt stack 0
   574  00001F                     command_builder3@data2:
   575                           	opt stack 0
   576  00001F                     send_end_of_transmission@send_buffer:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1E
   580  00001F                     	ds	1
   581  000020                     strmatch@match:
   582                           	opt stack 0
   583  000020                     powerPulseCheck@meterWattsLF:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x1F
   587  000020                     	ds	1
   588  000021                     command_builder3@data3:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x20
   592  000021                     	ds	1
   593  000022                     powerPulseCheck@checkWattsHFvsLF:
   594                           	opt stack 0
   595  000022                     ultoa@base:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x21
   599  000022                     	ds	1
   600  000023                     powerPulseCheck@meterWattsHF:
   601                           	opt stack 0
   602  000023                     com_command_setPower@send_buffer:
   603                           	opt stack 0
   604  000023                     com_command_setVersion@send_buffer:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x22
   608  000023                     	ds	1
   609  000024                     ??_ultoa:
   610  000024                     atol@sign:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x23
   614  000024                     	ds	1
   615  000025                     atol@a:
   616                           	opt stack 0
   617  000025                     com_command_setPower@temp:
   618                           	opt stack 0
   619                           
   620                           ; 7 bytes @ 0x24
   621  000025                     	ds	3
   622  000028                     ultoa@v:
   623                           	opt stack 0
   624                           
   625                           ; 4 bytes @ 0x27
   626  000028                     	ds	1
   627  000029                     atol@c:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x28
   631  000029                     	ds	3
   632  00002C                     ultoa@c:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x2B
   636  00002C                     	ds	1
   637  00002D                     com_command_setEnergyUsed@send_buffer:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x2C
   641  00002D                     	ds	2
   642  00002F                     com_command_setEnergyUsed@temp:
   643                           	opt stack 0
   644                           
   645                           ; 7 bytes @ 0x2E
   646  00002F                     	ds	7
   647  000036                     resetCommunications@send_buffer:
   648                           	opt stack 0
   649  000036                     process_data_parameters@parameters:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x35
   653  000036                     	ds	2
   654  000038                     ??_resetCommunications:
   655  000038                     process_data_parameters@send_buffer:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x37
   659  000038                     	ds	2
   660  00003A                     tblptru	equ	0xFF8
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           
   664                           ; 0 bytes @ 0x39
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 79 in file "Current_Sense_Main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  inx             2   61[BANK0 ] int 
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   684 ;;      Params:         0       0       0       0       0       0       0
   685 ;;      Locals:         0       2       0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0
   687 ;;      Totals:         0       2       0       0       0       0       0
   688 ;;Total ram usage:        2 bytes
   689 ;; Hardware stack levels required when called:    8
   690 ;; This function calls:
   691 ;;		_communications
   692 ;;		_delayMS10
   693 ;;		_init
   694 ;;		_initTimer
   695 ;;		_powerPulseCheck
   696 ;;		_pulseFoutPassThru
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703  0014DE                     __ptext0:
   704                           	opt stack 0
   705  0014DE                     _main:
   706                           	opt stack 23
   707                           
   708                           ;Current_Sense_Main.c: 81: init( );
   709                           
   710                           ;incstack = 0
   711  0014DE  EC1C  F00D         	call	_init	;wreg free
   712                           
   713                           ;Current_Sense_Main.c: 83: for( int inx = 0; inx < 10; inx++ )
   714  0014E2  0E00               	movlw	0
   715  0014E4  0100               	movlb	0	; () banked
   716  0014E6  6FF2               	movwf	(main@inx+1)& (0+255),b
   717  0014E8  0E00               	movlw	0
   718  0014EA  0100               	movlb	0	; () banked
   719  0014EC  6FF1               	movwf	main@inx& (0+255),b
   720  0014EE                     
   721                           ; BSR set to: 0
   722  0014EE  0100               	movlb	0	; () banked
   723  0014F0  51F2               	movf	(main@inx+1)& (0+255),w,b
   724  0014F2  0A80               	xorlw	128
   725  0014F4  0F80               	addlw	-128
   726  0014F6  0E0A               	movlw	10
   727  0014F8  B4D8               	btfsc	status,2,c
   728  0014FA  5DF1               	subwf	main@inx& (0+255),w,b
   729  0014FC  B0D8               	btfsc	status,0,c
   730  0014FE  D012               	goto	l3387
   731                           
   732                           ; BSR set to: 0
   733                           ;Current_Sense_Main.c: 84: {
   734                           ;Current_Sense_Main.c: 85: LATBbits.LATB4 = 1;
   735                           
   736                           ; BSR set to: 0
   737  001500  888A               	bsf	3978,4,c	;volatile
   738                           
   739                           ; BSR set to: 0
   740                           ;Current_Sense_Main.c: 86: delayMS10( 10 );
   741  001502  0E00               	movlw	0
   742  001504  6E10               	movwf	delayMS10@count+1,c
   743  001506  0E0A               	movlw	10
   744  001508  6E0F               	movwf	delayMS10@count,c
   745  00150A  EC3B  F00C         	call	_delayMS10	;wreg free
   746                           
   747                           ;Current_Sense_Main.c: 87: LATBbits.LATB4 = 0;
   748  00150E  988A               	bcf	3978,4,c	;volatile
   749                           
   750                           ;Current_Sense_Main.c: 88: delayMS10( 10 );
   751  001510  0E00               	movlw	0
   752  001512  6E10               	movwf	delayMS10@count+1,c
   753  001514  0E0A               	movlw	10
   754  001516  6E0F               	movwf	delayMS10@count,c
   755  001518  EC3B  F00C         	call	_delayMS10	;wreg free
   756  00151C  0100               	movlb	0	; () banked
   757  00151E  4BF1               	infsnz	main@inx& (0+255),f,b
   758  001520  2BF2               	incf	(main@inx+1)& (0+255),f,b
   759  001522  D7E5               	goto	L1
   760  001524                     l3387:
   761                           
   762                           ; BSR set to: 0
   763                           ;Current_Sense_Main.c: 89: }
   764                           ;Current_Sense_Main.c: 91: initTimer( );
   765  001524  ECF9  F00C         	call	_initTimer	;wreg free
   766                           
   767                           ;Current_Sense_Main.c: 119: communications( 1 );
   768  001528  0E01               	movlw	1
   769  00152A  ECC1  F007         	call	_communications
   770  00152E                     l3391:
   771                           
   772                           ;Current_Sense_Main.c: 129: {
   773                           ;Current_Sense_Main.c: 130: communications( 0 );
   774  00152E  0E00               	movlw	0
   775  001530  ECC1  F007         	call	_communications
   776                           
   777                           ;Current_Sense_Main.c: 131: pulseFoutPassThru( );
   778  001534  ECC9  F00C         	call	_pulseFoutPassThru	;wreg free
   779                           
   780                           ;Current_Sense_Main.c: 132: powerPulseCheck( );
   781  001538  EC78  F005         	call	_powerPulseCheck	;wreg free
   782  00153C  D7F8               	goto	l3391
   783  00153E                     __end_of_main:
   784                           	opt stack 0
   785                           tblptru	equ	0xFF8
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _pulseFoutPassThru *****************
   791 ;; Defined at:
   792 ;;		line 169 in file "Current_Sense_Main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   806 ;;      Params:         0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text1
   821  001992                     __ptext1:
   822                           	opt stack 0
   823  001992                     _pulseFoutPassThru:
   824                           	opt stack 29
   825                           
   826                           ;Current_Sense_Main.c: 172: static bool runonce = 0;
   827                           ;Current_Sense_Main.c: 174: if( PORTAbits.RA1 == 1 )
   828                           
   829                           ;incstack = 0
   830  001992  A280               	btfss	3968,1,c	;volatile
   831  001994  D00B               	goto	l121
   832                           
   833                           ;Current_Sense_Main.c: 175: {
   834                           ;Current_Sense_Main.c: 176: LATAbits.LATA0 = 1;
   835  001996  8089               	bsf	3977,0,c	;volatile
   836                           
   837                           ;Current_Sense_Main.c: 177: if( runonce == 0 )
   838  001998  6648               	tstfsz	pulseFoutPassThru@runonce,c
   839  00199A  0012               	return	
   840                           
   841                           ;Current_Sense_Main.c: 178: {
   842                           ;Current_Sense_Main.c: 179: runonce = 1;
   843  00199C  0E01               	movlw	1
   844  00199E  6E48               	movwf	pulseFoutPassThru@runonce,c
   845                           
   846                           ;Current_Sense_Main.c: 180: if( PORTBbits.RB4 == 1 )
   847  0019A0  A881               	btfss	3969,4,c	;volatile
   848  0019A2  D002               	goto	l123
   849                           
   850                           ;Current_Sense_Main.c: 181: {
   851                           ;Current_Sense_Main.c: 182: LATBbits.LATB4 = 0;
   852  0019A4  988A               	bcf	3978,4,c	;volatile
   853                           
   854                           ;Current_Sense_Main.c: 183: }
   855  0019A6  0012               	return	
   856  0019A8                     l123:
   857                           
   858                           ;Current_Sense_Main.c: 184: else
   859                           ;Current_Sense_Main.c: 185: {
   860                           ;Current_Sense_Main.c: 186: LATBbits.LATB4 = 1;
   861  0019A8  888A               	bsf	3978,4,c	;volatile
   862  0019AA  0012               	return	
   863  0019AC                     l121:
   864                           
   865                           ;Current_Sense_Main.c: 190: else
   866                           ;Current_Sense_Main.c: 191: {
   867                           ;Current_Sense_Main.c: 192: LATAbits.LATA0 = 0;
   868  0019AC  9089               	bcf	3977,0,c	;volatile
   869                           
   870                           ;Current_Sense_Main.c: 193: runonce = 0;
   871  0019AE  0E00               	movlw	0
   872  0019B0  6E48               	movwf	pulseFoutPassThru@runonce,c
   873  0019B2  0012               	return	
   874  0019B4                     __end_of_pulseFoutPassThru:
   875                           	opt stack 0
   876                           tblptru	equ	0xFF8
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           status	equ	0xFD8
   880                           
   881 ;; *************** function _powerPulseCheck *****************
   882 ;; Defined at:
   883 ;;		line 213 in file "Current_Sense_Main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  meterWattsHF    2   34[COMRAM] int 
   888 ;;  meterWattsLF    2   31[COMRAM] int 
   889 ;;  checkWattsHF    1   33[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;		None               void
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, prodl, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   899 ;;      Params:         0       0       0       0       0       0       0
   900 ;;      Locals:         5       0       0       0       0       0       0
   901 ;;      Temps:          4       0       0       0       0       0       0
   902 ;;      Totals:         9       0       0       0       0       0       0
   903 ;;Total ram usage:        9 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    2
   906 ;; This function calls:
   907 ;;		___lldiv
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text2
   914  000AF0                     __ptext2:
   915                           	opt stack 0
   916  000AF0                     _powerPulseCheck:
   917                           	opt stack 28
   918                           
   919                           ;Current_Sense_Main.c: 228: int meterWattsHF = 0;
   920                           
   921                           ;incstack = 0
   922  000AF0  0E00               	movlw	0
   923  000AF2  6E24               	movwf	powerPulseCheck@meterWattsHF+1,c
   924  000AF4  0E00               	movlw	0
   925  000AF6  6E23               	movwf	powerPulseCheck@meterWattsHF,c
   926                           
   927                           ;Current_Sense_Main.c: 229: int meterWattsLF = 0;
   928  000AF8  0E00               	movlw	0
   929  000AFA  6E21               	movwf	powerPulseCheck@meterWattsLF+1,c
   930  000AFC  0E00               	movlw	0
   931  000AFE  6E20               	movwf	powerPulseCheck@meterWattsLF,c
   932                           
   933                           ;Current_Sense_Main.c: 231: static bool mcpHFoutLast = 0;
   934                           ;Current_Sense_Main.c: 232: static bool mcpLFoutLast = 0;
   935                           ;Current_Sense_Main.c: 233: bool checkWattsHFvsLF = 0;
   936  000B00  0E00               	movlw	0
   937  000B02  6E22               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   938                           
   939                           ;Current_Sense_Main.c: 235: if( PORTCbits.RC2 == 0 )
   940  000B04  B482               	btfsc	3970,2,c	;volatile
   941  000B06  D02D               	goto	l3329
   942                           
   943                           ;Current_Sense_Main.c: 236: {
   944                           ;Current_Sense_Main.c: 237: if( mcpHFoutLast == 0 )
   945  000B08  6646               	tstfsz	powerPulseCheck@mcpHFoutLast,c
   946  000B0A  D02D               	goto	l3331
   947                           
   948                           ;Current_Sense_Main.c: 238: {
   949                           ;Current_Sense_Main.c: 239: mcpHFoutLast = 1;
   950  000B0C  0E01               	movlw	1
   951  000B0E  6E46               	movwf	powerPulseCheck@mcpHFoutLast,c
   952                           
   953                           ;Current_Sense_Main.c: 244: meterWattsHF = 1 / timerCountHF;
   954  000B10  0E01               	movlw	1
   955  000B12  6E0F               	movwf	___lldiv@dividend,c
   956  000B14  0E00               	movlw	0
   957  000B16  6E10               	movwf	___lldiv@dividend+1,c
   958  000B18  0E00               	movlw	0
   959  000B1A  6E11               	movwf	___lldiv@dividend+2,c
   960  000B1C  0E00               	movlw	0
   961  000B1E  6E12               	movwf	___lldiv@dividend+3,c
   962  000B20  C04A  F013         	movff	_timerCountHF,___lldiv@divisor	;volatile
   963  000B24  C04B  F014         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
   964  000B28  C04C  F015         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
   965  000B2C  C04D  F016         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
   966  000B30  ECFB  F009         	call	___lldiv	;wreg free
   967  000B34  C00F  F01C         	movff	?___lldiv,??_powerPulseCheck
   968  000B38  C010  F01D         	movff	?___lldiv+1,??_powerPulseCheck+1
   969  000B3C  C011  F01E         	movff	?___lldiv+2,??_powerPulseCheck+2
   970  000B40  C012  F01F         	movff	?___lldiv+3,??_powerPulseCheck+3
   971  000B44  C01C  F023         	movff	??_powerPulseCheck,powerPulseCheck@meterWattsHF
   972  000B48  C01D  F024         	movff	??_powerPulseCheck+1,powerPulseCheck@meterWattsHF+1
   973                           
   974                           ;Current_Sense_Main.c: 245: checkWattsHFvsLF = 1;
   975  000B4C  0E01               	movlw	1
   976  000B4E  6E22               	movwf	powerPulseCheck@checkWattsHFvsLF,c
   977                           
   978                           ;Current_Sense_Main.c: 246: timerCountHF = 0;
   979  000B50  0E00               	movlw	0
   980  000B52  6E4A               	movwf	_timerCountHF,c	;volatile
   981  000B54  0E00               	movlw	0
   982  000B56  6E4B               	movwf	_timerCountHF+1,c	;volatile
   983  000B58  0E00               	movlw	0
   984  000B5A  6E4C               	movwf	_timerCountHF+2,c	;volatile
   985  000B5C  0E00               	movlw	0
   986  000B5E  6E4D               	movwf	_timerCountHF+3,c	;volatile
   987  000B60  D002               	goto	l3331
   988  000B62                     l3329:
   989                           
   990                           ;Current_Sense_Main.c: 249: else
   991                           ;Current_Sense_Main.c: 250: {
   992                           ;Current_Sense_Main.c: 251: mcpHFoutLast = 0;
   993  000B62  0E00               	movlw	0
   994  000B64  6E46               	movwf	powerPulseCheck@mcpHFoutLast,c
   995  000B66                     l3331:
   996                           
   997                           ;Current_Sense_Main.c: 252: }
   998                           ;Current_Sense_Main.c: 255: if( PORTAbits.RA1 == 0 )
   999  000B66  B280               	btfsc	3968,1,c	;volatile
  1000  000B68  D032               	goto	l3345
  1001                           
  1002                           ;Current_Sense_Main.c: 256: {
  1003                           ;Current_Sense_Main.c: 257: if( mcpLFoutLast == 0 )
  1004  000B6A  6647               	tstfsz	powerPulseCheck@mcpLFoutLast,c
  1005  000B6C  D030               	goto	l3345
  1006                           
  1007                           ;Current_Sense_Main.c: 258: {
  1008                           ;Current_Sense_Main.c: 259: mcpLFoutLast = 1;
  1009  000B6E  0E01               	movlw	1
  1010  000B70  6E47               	movwf	powerPulseCheck@mcpLFoutLast,c
  1011                           
  1012                           ;Current_Sense_Main.c: 264: meterWattsLF = 5 / timerCountLF;
  1013  000B72  0E05               	movlw	5
  1014  000B74  6E0F               	movwf	___lldiv@dividend,c
  1015  000B76  0E00               	movlw	0
  1016  000B78  6E10               	movwf	___lldiv@dividend+1,c
  1017  000B7A  0E00               	movlw	0
  1018  000B7C  6E11               	movwf	___lldiv@dividend+2,c
  1019  000B7E  0E00               	movlw	0
  1020  000B80  6E12               	movwf	___lldiv@dividend+3,c
  1021  000B82  C04E  F013         	movff	_timerCountLF,___lldiv@divisor	;volatile
  1022  000B86  C04F  F014         	movff	_timerCountLF+1,___lldiv@divisor+1	;volatile
  1023  000B8A  C050  F015         	movff	_timerCountLF+2,___lldiv@divisor+2	;volatile
  1024  000B8E  C051  F016         	movff	_timerCountLF+3,___lldiv@divisor+3	;volatile
  1025  000B92  ECFB  F009         	call	___lldiv	;wreg free
  1026  000B96  C00F  F01C         	movff	?___lldiv,??_powerPulseCheck
  1027  000B9A  C010  F01D         	movff	?___lldiv+1,??_powerPulseCheck+1
  1028  000B9E  C011  F01E         	movff	?___lldiv+2,??_powerPulseCheck+2
  1029  000BA2  C012  F01F         	movff	?___lldiv+3,??_powerPulseCheck+3
  1030  000BA6  C01C  F020         	movff	??_powerPulseCheck,powerPulseCheck@meterWattsLF
  1031  000BAA  C01D  F021         	movff	??_powerPulseCheck+1,powerPulseCheck@meterWattsLF+1
  1032                           
  1033                           ;Current_Sense_Main.c: 266: meterEnergyUsed += 5;
  1034  000BAE  0E05               	movlw	5
  1035  000BB0  263A               	addwf	_meterEnergyUsed,f,c
  1036  000BB2  0E00               	movlw	0
  1037  000BB4  223B               	addwfc	_meterEnergyUsed+1,f,c
  1038  000BB6  223C               	addwfc	_meterEnergyUsed+2,f,c
  1039  000BB8  223D               	addwfc	_meterEnergyUsed+3,f,c
  1040                           
  1041                           ;Current_Sense_Main.c: 268: checkWattsHFvsLF = 1;
  1042  000BBA  0E01               	movlw	1
  1043  000BBC  6E22               	movwf	powerPulseCheck@checkWattsHFvsLF,c
  1044                           
  1045                           ;Current_Sense_Main.c: 269: timerCountLF = 0;
  1046  000BBE  0E00               	movlw	0
  1047  000BC0  6E4E               	movwf	_timerCountLF,c	;volatile
  1048  000BC2  0E00               	movlw	0
  1049  000BC4  6E4F               	movwf	_timerCountLF+1,c	;volatile
  1050  000BC6  0E00               	movlw	0
  1051  000BC8  6E50               	movwf	_timerCountLF+2,c	;volatile
  1052  000BCA  0E00               	movlw	0
  1053  000BCC  6E51               	movwf	_timerCountLF+3,c	;volatile
  1054  000BCE                     l3345:
  1055                           
  1056                           ;Current_Sense_Main.c: 270: }
  1057                           ;Current_Sense_Main.c: 271: }
  1058                           ;Current_Sense_Main.c: 278: if( checkWattsHFvsLF == 1 )
  1059  000BCE  0422               	decf	powerPulseCheck@checkWattsHFvsLF,w,c
  1060  000BD0  A4D8               	btfss	status,2,c
  1061  000BD2  D013               	goto	l3351
  1062                           
  1063                           ;Current_Sense_Main.c: 279: {
  1064                           ;Current_Sense_Main.c: 280: if( meterWattsHF <= -1 )
  1065  000BD4  5024               	movf	powerPulseCheck@meterWattsHF+1,w,c
  1066  000BD6  0A80               	xorlw	128
  1067  000BD8  6EF3               	movwf	prodl,c
  1068  000BDA  0E80               	movlw	128
  1069  000BDC  5CF3               	subwf	prodl,w,c
  1070  000BDE  0E00               	movlw	0
  1071  000BE0  B4D8               	btfsc	status,2,c
  1072  000BE2  5C23               	subwf	powerPulseCheck@meterWattsHF,w,c
  1073  000BE4  B0D8               	btfsc	status,0,c
  1074  000BE6  D005               	goto	l142
  1075                           
  1076                           ;Current_Sense_Main.c: 281: {
  1077                           ;Current_Sense_Main.c: 282: meterWatts = meterWattsHF;
  1078  000BE8  C023  F03E         	movff	powerPulseCheck@meterWattsHF,_meterWatts
  1079  000BEC  C024  F03F         	movff	powerPulseCheck@meterWattsHF+1,_meterWatts+1
  1080                           
  1081                           ;Current_Sense_Main.c: 283: }
  1082  000BF0  D004               	goto	l3351
  1083  000BF2                     l142:
  1084                           
  1085                           ;Current_Sense_Main.c: 284: else
  1086                           ;Current_Sense_Main.c: 285: {
  1087                           ;Current_Sense_Main.c: 286: meterWatts = meterWattsLF;
  1088  000BF2  C020  F03E         	movff	powerPulseCheck@meterWattsLF,_meterWatts
  1089  000BF6  C021  F03F         	movff	powerPulseCheck@meterWattsLF+1,_meterWatts+1
  1090  000BFA                     l3351:
  1091                           
  1092                           ;Current_Sense_Main.c: 287: }
  1093                           ;Current_Sense_Main.c: 288: }
  1094                           ;Current_Sense_Main.c: 298: if( timerCountLF > 10000)
  1095  000BFA  0E11               	movlw	17
  1096  000BFC  5C4E               	subwf	_timerCountLF,w,c	;volatile
  1097  000BFE  0E27               	movlw	39
  1098  000C00  584F               	subwfb	_timerCountLF+1,w,c	;volatile
  1099  000C02  0E00               	movlw	0
  1100  000C04  5850               	subwfb	_timerCountLF+2,w,c	;volatile
  1101  000C06  0E00               	movlw	0
  1102  000C08  5851               	subwfb	_timerCountLF+3,w,c	;volatile
  1103  000C0A  A0D8               	btfss	status,0,c
  1104  000C0C  D00E               	goto	l3357
  1105                           
  1106                           ;Current_Sense_Main.c: 299: {
  1107                           ;Current_Sense_Main.c: 300: meterEnergyUsed++;
  1108  000C0E  0E01               	movlw	1
  1109  000C10  263A               	addwf	_meterEnergyUsed,f,c
  1110  000C12  0E00               	movlw	0
  1111  000C14  223B               	addwfc	_meterEnergyUsed+1,f,c
  1112  000C16  223C               	addwfc	_meterEnergyUsed+2,f,c
  1113  000C18  223D               	addwfc	_meterEnergyUsed+3,f,c
  1114                           
  1115                           ;Current_Sense_Main.c: 301: timerCountLF = 0;
  1116  000C1A  0E00               	movlw	0
  1117  000C1C  6E4E               	movwf	_timerCountLF,c	;volatile
  1118  000C1E  0E00               	movlw	0
  1119  000C20  6E4F               	movwf	_timerCountLF+1,c	;volatile
  1120  000C22  0E00               	movlw	0
  1121  000C24  6E50               	movwf	_timerCountLF+2,c	;volatile
  1122  000C26  0E00               	movlw	0
  1123  000C28  6E51               	movwf	_timerCountLF+3,c	;volatile
  1124  000C2A                     l3357:
  1125                           
  1126                           ;Current_Sense_Main.c: 302: }
  1127                           ;Current_Sense_Main.c: 304: meterWatts = 64;
  1128  000C2A  0E00               	movlw	0
  1129  000C2C  6E3F               	movwf	_meterWatts+1,c
  1130  000C2E  0E40               	movlw	64
  1131  000C30  6E3E               	movwf	_meterWatts,c
  1132  000C32  0012               	return	
  1133  000C34                     __end_of_powerPulseCheck:
  1134                           	opt stack 0
  1135                           tblptru	equ	0xFF8
  1136                           prodl	equ	0xFF3
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           status	equ	0xFD8
  1140                           
  1141 ;; *************** function _initTimer *****************
  1142 ;; Defined at:
  1143 ;;		line 394 in file "Current_Sense_Main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;		None               void
  1150 ;; Registers used:
  1151 ;;		wreg, status,2
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0
  1160 ;;      Totals:         0       0       0       0       0       0       0
  1161 ;;Total ram usage:        0 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text3
  1172  0019F2                     __ptext3:
  1173                           	opt stack 0
  1174  0019F2                     _initTimer:
  1175                           	opt stack 29
  1176                           
  1177                           ;Current_Sense_Main.c: 397: T0CONbits.TMR0ON = 0;
  1178                           
  1179                           ;incstack = 0
  1180  0019F2  9ED5               	bcf	4053,7,c	;volatile
  1181                           
  1182                           ;Current_Sense_Main.c: 398: T0CONbits.T08BIT = 0;
  1183  0019F4  9CD5               	bcf	4053,6,c	;volatile
  1184                           
  1185                           ;Current_Sense_Main.c: 399: T0CONbits.T0CS = 0;
  1186  0019F6  9AD5               	bcf	4053,5,c	;volatile
  1187                           
  1188                           ;Current_Sense_Main.c: 400: T0CONbits.PSA = 0;
  1189  0019F8  96D5               	bcf	4053,3,c	;volatile
  1190                           
  1191                           ;Current_Sense_Main.c: 401: T0CONbits.T0PS = 0b001;
  1192  0019FA  50D5               	movf	4053,w,c	;volatile
  1193  0019FC  0BF8               	andlw	-8
  1194  0019FE  0901               	iorlw	1
  1195  001A00  6ED5               	movwf	4053,c	;volatile
  1196                           
  1197                           ;Current_Sense_Main.c: 403: INTCONbits.TMR0IE = 1;
  1198  001A02  8AF2               	bsf	intcon,5,c	;volatile
  1199                           
  1200                           ;Current_Sense_Main.c: 404: INTCONbits.GIE = 1;
  1201  001A04  8EF2               	bsf	intcon,7,c	;volatile
  1202                           
  1203                           ;Current_Sense_Main.c: 405: T0CONbits.TMR0ON = 1;
  1204  001A06  8ED5               	bsf	4053,7,c	;volatile
  1205  001A08  0012               	return	
  1206  001A0A                     __end_of_initTimer:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           prodl	equ	0xFF3
  1210                           intcon	equ	0xFF2
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           status	equ	0xFD8
  1214                           
  1215 ;; *************** function _init *****************
  1216 ;; Defined at:
  1217 ;;		line 318 in file "Current_Sense_Main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    3
  1238 ;; This function calls:
  1239 ;;		_initIO
  1240 ;;		_initInterruptsClear
  1241 ;;		_initMCPFout
  1242 ;;		_initOSC
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text4
  1249  001A38                     __ptext4:
  1250                           	opt stack 0
  1251  001A38                     _init:
  1252                           	opt stack 27
  1253                           
  1254                           ;Current_Sense_Main.c: 320: initOSC( );
  1255                           
  1256                           ;incstack = 0
  1257  001A38  EC05  F00D         	call	_initOSC	;wreg free
  1258                           
  1259                           ;Current_Sense_Main.c: 321: initIO( );
  1260  001A3C  ECA6  F00C         	call	_initIO	;wreg free
  1261                           
  1262                           ;Current_Sense_Main.c: 322: initInterruptsClear( );
  1263  001A40  EC71  F00B         	call	_initInterruptsClear	;wreg free
  1264                           
  1265                           ;Current_Sense_Main.c: 323: initMCPFout( );
  1266  001A44  EC1F  F00C         	call	_initMCPFout	;wreg free
  1267  001A48  0012               	return	
  1268  001A4A                     __end_of_init:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           prodl	equ	0xFF3
  1272                           intcon	equ	0xFF2
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function _initOSC *****************
  1278 ;; Defined at:
  1279 ;;		line 328 in file "Current_Sense_Main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg, status,2
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1293 ;;      Params:         0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_init
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text5
  1308  001A0A                     __ptext5:
  1309                           	opt stack 0
  1310  001A0A                     _initOSC:
  1311                           	opt stack 28
  1312                           
  1313                           ;Current_Sense_Main.c: 331: OSCCONbits.IDLEN = 0;
  1314                           
  1315                           ;incstack = 0
  1316  001A0A  9ED3               	bcf	4051,7,c	;volatile
  1317                           
  1318                           ;Current_Sense_Main.c: 332: OSCCONbits.IRCF = 0b111;
  1319  001A0C  88D3               	bsf	4051,4,c	;volatile
  1320  001A0E  8AD3               	bsf	4051,5,c	;volatile
  1321  001A10  8CD3               	bsf	4051,6,c	;volatile
  1322                           
  1323                           ;Current_Sense_Main.c: 333: OSCCONbits.SCS = 0b11;
  1324  001A12  0E03               	movlw	3
  1325  001A14  12D3               	iorwf	4051,f,c	;volatile
  1326                           
  1327                           ;Current_Sense_Main.c: 335: OSCCON2bits.MFIOSEL = 0;
  1328  001A16  98D2               	bcf	4050,4,c	;volatile
  1329                           
  1330                           ;Current_Sense_Main.c: 336: OSCCON2bits.SOSCGO = 0;
  1331  001A18  96D2               	bcf	4050,3,c	;volatile
  1332                           
  1333                           ;Current_Sense_Main.c: 337: OSCCON2bits.PRISD = 0;
  1334  001A1A  94D2               	bcf	4050,2,c	;volatile
  1335                           
  1336                           ;Current_Sense_Main.c: 339: OSCTUNEbits.INTSRC = 1;
  1337  001A1C  8E9B               	bsf	3995,7,c	;volatile
  1338                           
  1339                           ;Current_Sense_Main.c: 340: OSCTUNEbits.PLLEN = 0;
  1340  001A1E  9C9B               	bcf	3995,6,c	;volatile
  1341  001A20  0012               	return	
  1342  001A22                     __end_of_initOSC:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           prodl	equ	0xFF3
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           status	equ	0xFD8
  1350                           
  1351 ;; *************** function _initMCPFout *****************
  1352 ;; Defined at:
  1353 ;;		line 411 in file "Current_Sense_Main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;		None               void
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1367 ;;      Params:         0       0       0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0
  1369 ;;      Temps:          1       0       0       0       0       0       0
  1370 ;;      Totals:         1       0       0       0       0       0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    2
  1374 ;; This function calls:
  1375 ;;		_delayMS10
  1376 ;; This function is called by:
  1377 ;;		_init
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text6
  1382  00183E                     __ptext6:
  1383                           	opt stack 0
  1384  00183E                     _initMCPFout:
  1385                           	opt stack 27
  1386                           
  1387                           ;Current_Sense_Main.c: 416: LATCbits.LATC6 = 0;
  1388                           
  1389                           ;incstack = 0
  1390  00183E  9C8B               	bcf	3979,6,c	;volatile
  1391                           
  1392                           ;Current_Sense_Main.c: 417: _delay((unsigned long)((1)*(16000000/4000.0)));
  1393  001840  0E06               	movlw	6
  1394  001842  6E14               	movwf	??_initMCPFout& (0+255),c
  1395  001844  0E30               	movlw	48
  1396  001846                     u2867:
  1397  001846  2EE8               	decfsz	wreg,f,c
  1398  001848  D7FE               	goto	u2867
  1399  00184A  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1400  00184C  D7FC               	goto	u2867
  1401  00184E  D000               	nop2	
  1402                           
  1403                           ;Current_Sense_Main.c: 419: LATCbits.LATC7 = 1;
  1404  001850  8E8B               	bsf	3979,7,c	;volatile
  1405                           
  1406                           ;Current_Sense_Main.c: 420: LATCbits.LATC5 = 1;
  1407  001852  8A8B               	bsf	3979,5,c	;volatile
  1408                           
  1409                           ;Current_Sense_Main.c: 421: LATCbits.LATC3 = 1;
  1410  001854  868B               	bsf	3979,3,c	;volatile
  1411                           
  1412                           ;Current_Sense_Main.c: 423: _delay((unsigned long)((1)*(16000000/4000.0)));
  1413  001856  0E06               	movlw	6
  1414  001858  6E14               	movwf	??_initMCPFout& (0+255),c
  1415  00185A  0E30               	movlw	48
  1416  00185C                     u2877:
  1417  00185C  2EE8               	decfsz	wreg,f,c
  1418  00185E  D7FE               	goto	u2877
  1419  001860  2E14               	decfsz	??_initMCPFout& (0+255),f,c
  1420  001862  D7FC               	goto	u2877
  1421  001864  D000               	nop2	
  1422                           
  1423                           ;Current_Sense_Main.c: 424: LATCbits.LATC6 = 1;
  1424  001866  8C8B               	bsf	3979,6,c	;volatile
  1425                           
  1426                           ;Current_Sense_Main.c: 425: delayMS10( 10 );
  1427  001868  0E00               	movlw	0
  1428  00186A  6E10               	movwf	delayMS10@count+1,c
  1429  00186C  0E0A               	movlw	10
  1430  00186E  6E0F               	movwf	delayMS10@count,c
  1431  001870  EC3B  F00C         	call	_delayMS10	;wreg free
  1432  001874  0012               	return	
  1433  001876                     __end_of_initMCPFout:
  1434                           	opt stack 0
  1435                           tblptru	equ	0xFF8
  1436                           prodl	equ	0xFF3
  1437                           intcon	equ	0xFF2
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           status	equ	0xFD8
  1441                           
  1442 ;; *************** function _delayMS10 *****************
  1443 ;; Defined at:
  1444 ;;		line 309 in file "Current_Sense_Main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  count           2   14[COMRAM] int 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  inx             2   17[COMRAM] int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;		None               void
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1458 ;;      Params:         2       0       0       0       0       0       0
  1459 ;;      Locals:         2       0       0       0       0       0       0
  1460 ;;      Temps:          1       0       0       0       0       0       0
  1461 ;;      Totals:         5       0       0       0       0       0       0
  1462 ;;Total ram usage:        5 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;;		_initMCPFout
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text7
  1474  001876                     __ptext7:
  1475                           	opt stack 0
  1476  001876                     _delayMS10:
  1477                           	opt stack 27
  1478                           
  1479                           ;Current_Sense_Main.c: 311: for( int inx = 0; inx < count; inx++ )
  1480                           
  1481                           ;incstack = 0
  1482  001876  0E00               	movlw	0
  1483  001878  6E13               	movwf	delayMS10@inx+1,c
  1484  00187A  0E00               	movlw	0
  1485  00187C  6E12               	movwf	delayMS10@inx,c
  1486  00187E  D009               	goto	l148
  1487  001880                     l2945:
  1488                           
  1489                           ;Current_Sense_Main.c: 312: {
  1490                           ;Current_Sense_Main.c: 314: _delay((unsigned long)((10)*(16000000/4000.0)));
  1491  001880  0E34               	movlw	52
  1492  001882  6E11               	movwf	??_delayMS10& (0+255),c
  1493  001884  0EF2               	movlw	242
  1494  001886                     u2887:
  1495  001886  2EE8               	decfsz	wreg,f,c
  1496  001888  D7FE               	goto	u2887
  1497  00188A  2E11               	decfsz	??_delayMS10& (0+255),f,c
  1498  00188C  D7FC               	goto	u2887
  1499  00188E  4A12               	infsnz	delayMS10@inx,f,c
  1500  001890  2A13               	incf	delayMS10@inx+1,f,c
  1501  001892                     l148:
  1502  001892  5013               	movf	delayMS10@inx+1,w,c
  1503  001894  0A80               	xorlw	128
  1504  001896  6E11               	movwf	??_delayMS10& (0+255),c
  1505  001898  500F               	movf	delayMS10@count,w,c
  1506  00189A  5C12               	subwf	delayMS10@inx,w,c
  1507  00189C  5010               	movf	delayMS10@count+1,w,c
  1508  00189E  0A80               	xorlw	128
  1509  0018A0  5811               	subwfb	??_delayMS10& (0+255),w,c
  1510  0018A2  B0D8               	btfsc	status,0,c
  1511  0018A4  0012               	return	
  1512  0018A6  D7EC               	goto	l2945
  1513  0018A8                     __end_of_delayMS10:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           prodl	equ	0xFF3
  1517                           intcon	equ	0xFF2
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _initInterruptsClear *****************
  1523 ;; Defined at:
  1524 ;;		line 365 in file "Current_Sense_Main.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;		None               void
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1538 ;;      Params:         0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_init
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text8
  1553  0016E2                     __ptext8:
  1554                           	opt stack 0
  1555  0016E2                     _initInterruptsClear:
  1556                           	opt stack 28
  1557                           
  1558                           ;Current_Sense_Main.c: 368: INTCON = 0b00000000;
  1559                           
  1560                           ;incstack = 0
  1561  0016E2  0E00               	movlw	0
  1562  0016E4  6EF2               	movwf	intcon,c	;volatile
  1563                           
  1564                           ;Current_Sense_Main.c: 369: INTCON2 = 0b00000000;
  1565  0016E6  0E00               	movlw	0
  1566  0016E8  6EF1               	movwf	intcon2,c	;volatile
  1567                           
  1568                           ;Current_Sense_Main.c: 370: INTCON3 = 0b00000000;
  1569  0016EA  0E00               	movlw	0
  1570  0016EC  6EF0               	movwf	intcon3,c	;volatile
  1571                           
  1572                           ;Current_Sense_Main.c: 372: RCONbits.IPEN = 0;
  1573  0016EE  9ED0               	bcf	4048,7,c	;volatile
  1574                           
  1575                           ;Current_Sense_Main.c: 374: PIR1 = 0b00000000;
  1576  0016F0  0E00               	movlw	0
  1577  0016F2  6E9E               	movwf	3998,c	;volatile
  1578                           
  1579                           ;Current_Sense_Main.c: 375: PIR2 = 0b00000000;
  1580  0016F4  0E00               	movlw	0
  1581  0016F6  6EA1               	movwf	4001,c	;volatile
  1582                           
  1583                           ;Current_Sense_Main.c: 376: PIR3 = 0b00000000;
  1584  0016F8  0E00               	movlw	0
  1585  0016FA  6EA4               	movwf	4004,c	;volatile
  1586                           
  1587                           ;Current_Sense_Main.c: 377: PIR4 = 0b00000000;
  1588  0016FC  0E00               	movlw	0
  1589  0016FE  6E7B               	movwf	3963,c	;volatile
  1590                           
  1591                           ;Current_Sense_Main.c: 378: PIR5 = 0b00000000;
  1592  001700  0E00               	movlw	0
  1593  001702  6E7E               	movwf	3966,c	;volatile
  1594                           
  1595                           ;Current_Sense_Main.c: 380: PIE1 = 0b00000000;
  1596  001704  0E00               	movlw	0
  1597  001706  6E9D               	movwf	3997,c	;volatile
  1598                           
  1599                           ;Current_Sense_Main.c: 381: PIE2 = 0b00000000;
  1600  001708  0E00               	movlw	0
  1601  00170A  6EA0               	movwf	4000,c	;volatile
  1602                           
  1603                           ;Current_Sense_Main.c: 382: PIE3 = 0b00000000;
  1604  00170C  0E00               	movlw	0
  1605  00170E  6EA3               	movwf	4003,c	;volatile
  1606                           
  1607                           ;Current_Sense_Main.c: 383: PIE4 = 0b00000000;
  1608  001710  0E00               	movlw	0
  1609  001712  6E7A               	movwf	3962,c	;volatile
  1610                           
  1611                           ;Current_Sense_Main.c: 384: PIE5 = 0b00000000;
  1612  001714  0E00               	movlw	0
  1613  001716  6E7D               	movwf	3965,c	;volatile
  1614                           
  1615                           ;Current_Sense_Main.c: 386: IPR1 = 0b00000000;
  1616  001718  0E00               	movlw	0
  1617  00171A  6E9F               	movwf	3999,c	;volatile
  1618                           
  1619                           ;Current_Sense_Main.c: 387: IPR2 = 0b00000000;
  1620  00171C  0E00               	movlw	0
  1621  00171E  6EA2               	movwf	4002,c	;volatile
  1622                           
  1623                           ;Current_Sense_Main.c: 388: IPR3 = 0b00000000;
  1624  001720  0E00               	movlw	0
  1625  001722  6EA5               	movwf	4005,c	;volatile
  1626                           
  1627                           ;Current_Sense_Main.c: 389: IPR4 = 0b00000000;
  1628  001724  0E00               	movlw	0
  1629  001726  6E7C               	movwf	3964,c	;volatile
  1630                           
  1631                           ;Current_Sense_Main.c: 390: IPR5 = 0b00000000;
  1632  001728  0E00               	movlw	0
  1633  00172A  6E7F               	movwf	3967,c	;volatile
  1634  00172C  0012               	return	
  1635  00172E                     __end_of_initInterruptsClear:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           prodl	equ	0xFF3
  1639                           intcon	equ	0xFF2
  1640                           intcon2	equ	0xFF1
  1641                           intcon3	equ	0xFF0
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _initIO *****************
  1647 ;; Defined at:
  1648 ;;		line 345 in file "Current_Sense_Main.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;		None               void
  1655 ;; Registers used:
  1656 ;;		wreg, status,2
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         0       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_init
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text9
  1677  00194C                     __ptext9:
  1678                           	opt stack 0
  1679  00194C                     _initIO:
  1680                           	opt stack 28
  1681                           
  1682                           ;Current_Sense_Main.c: 347: ADCON0bits.ADON = 0;
  1683                           
  1684                           ;incstack = 0
  1685  00194C  90C2               	bcf	4034,0,c	;volatile
  1686                           
  1687                           ;Current_Sense_Main.c: 348: ANSELA = 0b00000000;
  1688  00194E  0E00               	movlw	0
  1689  001950  010F               	movlb	15	; () banked
  1690  001952  6F38               	movwf	56,b	;volatile
  1691                           
  1692                           ;Current_Sense_Main.c: 349: ANSELB = 0b00000000;
  1693  001954  0E00               	movlw	0
  1694  001956  010F               	movlb	15	; () banked
  1695  001958  6F39               	movwf	57,b	;volatile
  1696                           
  1697                           ;Current_Sense_Main.c: 350: ANSELC = 0b00000000;
  1698  00195A  0E00               	movlw	0
  1699  00195C  010F               	movlb	15	; () banked
  1700  00195E  6F3A               	movwf	58,b	;volatile
  1701                           
  1702                           ; BSR set to: 15
  1703                           ;Current_Sense_Main.c: 352: TRISBbits.TRISB4 = 0;
  1704  001960  9893               	bcf	3987,4,c	;volatile
  1705                           
  1706                           ; BSR set to: 15
  1707                           ;Current_Sense_Main.c: 353: LATBbits.LATB4 = 0;
  1708  001962  988A               	bcf	3978,4,c	;volatile
  1709                           
  1710                           ; BSR set to: 15
  1711                           ;Current_Sense_Main.c: 355: TRISCbits.TRISC2 = 1;
  1712  001964  8494               	bsf	3988,2,c	;volatile
  1713                           
  1714                           ; BSR set to: 15
  1715                           ;Current_Sense_Main.c: 356: TRISAbits.TRISA1 = 1;
  1716  001966  8292               	bsf	3986,1,c	;volatile
  1717                           
  1718                           ; BSR set to: 15
  1719                           ;Current_Sense_Main.c: 357: TRISAbits.TRISA0 = 0;
  1720  001968  9092               	bcf	3986,0,c	;volatile
  1721                           
  1722                           ; BSR set to: 15
  1723                           ;Current_Sense_Main.c: 358: LATAbits.LATA0 = 0;
  1724  00196A  9089               	bcf	3977,0,c	;volatile
  1725                           
  1726                           ; BSR set to: 15
  1727                           ;Current_Sense_Main.c: 360: TRISCbits.TRISC6 = 0;
  1728  00196C  9C94               	bcf	3988,6,c	;volatile
  1729  00196E  0012               	return	
  1730  001970                     __end_of_initIO:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           prodl	equ	0xFF3
  1734                           intcon	equ	0xFF2
  1735                           intcon2	equ	0xFF1
  1736                           intcon3	equ	0xFF0
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function _communications *****************
  1742 ;; Defined at:
  1743 ;;		line 89 in file "SlaveComm_PIC18.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  firstTime       1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  firstTime       1   60[BANK0 ] unsigned char 
  1748 ;;  no_more_to_s    1   59[BANK0 ] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         0       0       0       0       0       0       0
  1759 ;;      Locals:         0       2       0       0       0       0       0
  1760 ;;      Temps:          0       1       0       0       0       0       0
  1761 ;;      Totals:         0       3       0       0       0       0       0
  1762 ;;Total ram usage:        3 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    7
  1765 ;; This function calls:
  1766 ;;		_SPISlaveInit
  1767 ;;		_process_data
  1768 ;;		_receive_data
  1769 ;;		_resetCommunications
  1770 ;;		_send_data
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text10
  1777  000F82                     __ptext10:
  1778                           	opt stack 0
  1779  000F82                     _communications:
  1780                           	opt stack 23
  1781                           
  1782                           ; BSR set to: 15
  1783                           ;incstack = 0
  1784                           ;communications@firstTime stored from wreg
  1785  000F82  0100               	movlb	0	; () banked
  1786  000F84  6FF0               	movwf	communications@firstTime& (0+255),b
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;SlaveComm_PIC18.c: 91: static struct buffer receive_buffer;
  1790                           ;SlaveComm_PIC18.c: 92: static struct buffer send_buffer;
  1791                           ;SlaveComm_PIC18.c: 94: static bool end_of_transmission_received = 0;
  1792                           ;SlaveComm_PIC18.c: 95: bool no_more_to_send;
  1793                           ;SlaveComm_PIC18.c: 97: static enum receive_status receive_current_state;
  1794                           ;SlaveComm_PIC18.c: 100: if( firstTime == 1 )
  1795  000F86  0100               	movlb	0	; () banked
  1796  000F88  05F0               	decf	communications@firstTime& (0+255),w,b
  1797  000F8A  A4D8               	btfss	status,2,c
  1798  000F8C  D011               	goto	l3279
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;SlaveComm_PIC18.c: 101: {
  1802                           ;SlaveComm_PIC18.c: 102: SPISlaveInit( );
  1803  000F8E  EC49  F00B         	call	_SPISlaveInit	;wreg free
  1804                           
  1805                           ;SlaveComm_PIC18.c: 103: send_buffer.write_position = 0;
  1806  000F92  0E00               	movlw	0
  1807  000F94  0100               	movlb	0	; () banked
  1808  000F96  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;SlaveComm_PIC18.c: 104: send_buffer.read_position = 0;
  1812  000F98  0E00               	movlw	0
  1813  000F9A  0100               	movlb	0	; () banked
  1814  000F9C  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;SlaveComm_PIC18.c: 105: resetCommunications( &send_buffer );
  1818  000F9E  0100               	movlb	0	; () banked
  1819  000FA0  0E00               	movlw	high communications@send_buffer
  1820  000FA2  6E37               	movwf	resetCommunications@send_buffer+1,c
  1821  000FA4  0100               	movlb	0	; () banked
  1822  000FA6  0E8A               	movlw	low communications@send_buffer
  1823  000FA8  6E36               	movwf	resetCommunications@send_buffer,c
  1824  000FAA  EC25  F009         	call	_resetCommunications	;wreg free
  1825                           
  1826                           ;SlaveComm_PIC18.c: 106: }
  1827  000FAE  0012               	return	
  1828  000FB0                     l3279:
  1829                           
  1830                           ;SlaveComm_PIC18.c: 107: else
  1831                           ;SlaveComm_PIC18.c: 108: {
  1832                           ;SlaveComm_PIC18.c: 109: receive_current_state = receive_data( &receive_buffer );
  1833  000FB0  0100               	movlb	0	; () banked
  1834  000FB2  0E00               	movlw	high communications@receive_buffer
  1835  000FB4  6E13               	movwf	receive_data@receive_buffer+1,c
  1836  000FB6  0100               	movlb	0	; () banked
  1837  000FB8  0E60               	movlw	low communications@receive_buffer
  1838  000FBA  6E12               	movwf	receive_data@receive_buffer,c
  1839  000FBC  EC23  F008         	call	_receive_data	;wreg free
  1840  000FC0  6E45               	movwf	communications@receive_current_state,c
  1841                           
  1842                           ;SlaveComm_PIC18.c: 111: switch( receive_current_state )
  1843  000FC2  D01B               	goto	l3287
  1844  000FC4                     l3281:
  1845                           
  1846                           ;SlaveComm_PIC18.c: 121: if( process_data( &receive_buffer, &send_buffer ) == 1 )
  1847  000FC4  0100               	movlb	0	; () banked
  1848  000FC6  0E00               	movlw	high communications@receive_buffer
  1849  000FC8  0100               	movlb	0	; () banked
  1850  000FCA  6FB8               	movwf	(process_data@receive_buffer+1)& (0+255),b
  1851  000FCC  0100               	movlb	0	; () banked
  1852  000FCE  0E60               	movlw	low communications@receive_buffer
  1853  000FD0  0100               	movlb	0	; () banked
  1854  000FD2  6FB7               	movwf	process_data@receive_buffer& (0+255),b
  1855  000FD4  0100               	movlb	0	; () banked
  1856  000FD6  0E00               	movlw	high communications@send_buffer
  1857  000FD8  0100               	movlb	0	; () banked
  1858  000FDA  6FBA               	movwf	(process_data@send_buffer+1)& (0+255),b
  1859  000FDC  0100               	movlb	0	; () banked
  1860  000FDE  0E8A               	movlw	low communications@send_buffer
  1861  000FE0  0100               	movlb	0	; () banked
  1862  000FE2  6FB9               	movwf	process_data@send_buffer& (0+255),b
  1863  000FE4  ECFE  F00B         	call	_process_data	;wreg free
  1864  000FE8  0100               	movlb	0	; () banked
  1865  000FEA  6FEE               	movwf	??_communications& (0+255),b
  1866  000FEC  0100               	movlb	0	; () banked
  1867  000FEE  05EE               	decf	??_communications& (0+255),w,b
  1868  000FF0  A4D8               	btfss	status,2,c
  1869  000FF2  D00D               	goto	l3289
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;SlaveComm_PIC18.c: 122: {
  1873                           ;SlaveComm_PIC18.c: 123: end_of_transmission_received = 1;
  1874  000FF4  0E01               	movlw	1
  1875  000FF6  6E43               	movwf	communications@end_of_transmission_received,c
  1876  000FF8  D00A               	goto	l3289
  1877  000FFA                     l3287:
  1878  000FFA  5045               	movf	communications@receive_current_state,w,c
  1879                           
  1880                           ; Switch size 1, requested type "space"
  1881                           ; Number of cases is 3, Range of values is 0 to 2
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte           10     6 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886  000FFC  0A00               	xorlw	0	; case 0
  1887  000FFE  B4D8               	btfsc	status,2,c
  1888  001000  D006               	goto	l3289
  1889  001002  0A01               	xorlw	1	; case 1
  1890  001004  B4D8               	btfsc	status,2,c
  1891  001006  D003               	goto	l3289
  1892  001008  0A03               	xorlw	3	; case 2
  1893  00100A  B4D8               	btfsc	status,2,c
  1894  00100C  D7DB               	goto	l3281
  1895  00100E                     l3289:
  1896                           
  1897                           ;SlaveComm_PIC18.c: 129: no_more_to_send = send_data( &send_buffer );
  1898  00100E  0100               	movlb	0	; () banked
  1899  001010  0E00               	movlw	high communications@send_buffer
  1900  001012  6E12               	movwf	send_data@send_buffer+1,c
  1901  001014  0100               	movlb	0	; () banked
  1902  001016  0E8A               	movlw	low communications@send_buffer
  1903  001018  6E11               	movwf	send_data@send_buffer,c
  1904  00101A  EC71  F009         	call	_send_data	;wreg free
  1905  00101E  0100               	movlb	0	; () banked
  1906  001020  6FEF               	movwf	communications@no_more_to_send& (0+255),b
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;SlaveComm_PIC18.c: 132: static bool last_state_active = 0;
  1910                           ;SlaveComm_PIC18.c: 133: if( PORTBbits.SS2 == 0b1 )
  1911  001022  A081               	btfss	3969,0,c	;volatile
  1912  001024  D003               	goto	l264
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;SlaveComm_PIC18.c: 134: {
  1916                           ;SlaveComm_PIC18.c: 135: last_state_active = 0;
  1917  001026  0E00               	movlw	0
  1918  001028  6E44               	movwf	communications@last_state_active,c
  1919                           
  1920                           ;SlaveComm_PIC18.c: 136: }
  1921  00102A  0012               	return	
  1922  00102C                     l264:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;SlaveComm_PIC18.c: 137: else
  1926                           ;SlaveComm_PIC18.c: 138: {
  1927                           ;SlaveComm_PIC18.c: 139: if( last_state_active == 0 )
  1928  00102C  6644               	tstfsz	communications@last_state_active,c
  1929  00102E  D008               	goto	l3297
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;SlaveComm_PIC18.c: 140: {
  1933                           ;SlaveComm_PIC18.c: 141: resetCommunications( &send_buffer );
  1934  001030  0100               	movlb	0	; () banked
  1935  001032  0E00               	movlw	high communications@send_buffer
  1936  001034  6E37               	movwf	resetCommunications@send_buffer+1,c
  1937  001036  0100               	movlb	0	; () banked
  1938  001038  0E8A               	movlw	low communications@send_buffer
  1939  00103A  6E36               	movwf	resetCommunications@send_buffer,c
  1940  00103C  EC25  F009         	call	_resetCommunications	;wreg free
  1941  001040                     l3297:
  1942                           
  1943                           ;SlaveComm_PIC18.c: 142: }
  1944                           ;SlaveComm_PIC18.c: 144: last_state_active = 1;
  1945  001040  0E01               	movlw	1
  1946  001042  6E44               	movwf	communications@last_state_active,c
  1947  001044  0012               	return	
  1948  001046                     __end_of_communications:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           prodl	equ	0xFF3
  1952                           intcon	equ	0xFF2
  1953                           intcon2	equ	0xFF1
  1954                           intcon3	equ	0xFF0
  1955                           postinc0	equ	0xFEE
  1956                           wreg	equ	0xFE8
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function _send_data *****************
  1960 ;; Defined at:
  1961 ;;		line 485 in file "SlaveComm_PIC18.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  1964 ;;		 -> communications@send_buffer(42), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  send_end        1   20[COMRAM] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      unsigned char 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         2       0       0       0       0       0       0
  1977 ;;      Locals:         1       0       0       0       0       0       0
  1978 ;;      Temps:          2       0       0       0       0       0       0
  1979 ;;      Totals:         5       0       0       0       0       0       0
  1980 ;;Total ram usage:        5 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    2
  1983 ;; This function calls:
  1984 ;;		_SPI_send_data
  1985 ;; This function is called by:
  1986 ;;		_communications
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text11
  1991  0012E2                     __ptext11:
  1992                           	opt stack 0
  1993  0012E2                     _send_data:
  1994                           	opt stack 27
  1995                           
  1996                           ;SlaveComm_PIC18.c: 487: bool send_end;
  1997                           ;SlaveComm_PIC18.c: 489: if( send_buffer->read_position == send_buffer->write_position )
  1998                           
  1999                           ;incstack = 0
  2000  0012E2  EE20 F029          	lfsr	2,41
  2001  0012E6  5011               	movf	send_data@send_buffer,w,c
  2002  0012E8  26D9               	addwf	fsr2l,f,c
  2003  0012EA  5012               	movf	send_data@send_buffer+1,w,c
  2004  0012EC  22DA               	addwfc	fsr2h,f,c
  2005  0012EE  EE10 F028          	lfsr	1,40
  2006  0012F2  5011               	movf	send_data@send_buffer,w,c
  2007  0012F4  26E1               	addwf	fsr1l,f,c
  2008  0012F6  5012               	movf	send_data@send_buffer+1,w,c
  2009  0012F8  22E2               	addwfc	fsr1h,f,c
  2010  0012FA  50E7               	movf	indf1,w,c
  2011  0012FC  62DF               	cpfseq	indf2,c
  2012  0012FE  D006               	goto	l3241
  2013                           
  2014                           ;SlaveComm_PIC18.c: 490: {
  2015                           ;SlaveComm_PIC18.c: 491: send_end = 1;
  2016  001300  0E01               	movlw	1
  2017  001302  6E15               	movwf	send_data@send_end,c
  2018                           
  2019                           ;SlaveComm_PIC18.c: 492: SPI_send_data( '\0' );
  2020  001304  0E00               	movlw	0
  2021  001306  ECEA  F00C         	call	_SPI_send_data
  2022                           
  2023                           ;SlaveComm_PIC18.c: 493: }
  2024  00130A  D031               	goto	l3249
  2025  00130C                     l3241:
  2026                           
  2027                           ;SlaveComm_PIC18.c: 494: else
  2028                           ;SlaveComm_PIC18.c: 495: {
  2029                           ;SlaveComm_PIC18.c: 496: send_end = 0;
  2030  00130C  0E00               	movlw	0
  2031  00130E  6E15               	movwf	send_data@send_end,c
  2032                           
  2033                           ;SlaveComm_PIC18.c: 499: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
  2034  001310  EE20 F029          	lfsr	2,41
  2035  001314  5011               	movf	send_data@send_buffer,w,c
  2036  001316  26D9               	addwf	fsr2l,f,c
  2037  001318  5012               	movf	send_data@send_buffer+1,w,c
  2038  00131A  22DA               	addwfc	fsr2h,f,c
  2039  00131C  50DF               	movf	indf2,w,c
  2040  00131E  6E13               	movwf	??_send_data& (0+255),c
  2041  001320  5013               	movf	??_send_data,w,c
  2042  001322  0D01               	mullw	1
  2043  001324  50F3               	movf	prodl,w,c
  2044  001326  2411               	addwf	send_data@send_buffer,w,c
  2045  001328  6ED9               	movwf	fsr2l,c
  2046  00132A  50F4               	movf	prodh,w,c
  2047  00132C  2012               	addwfc	send_data@send_buffer+1,w,c
  2048  00132E  6EDA               	movwf	fsr2h,c
  2049  001330  50DF               	movf	indf2,w,c
  2050  001332  ECEA  F00C         	call	_SPI_send_data
  2051  001336  6E14               	movwf	(??_send_data+1)& (0+255),c
  2052  001338  0414               	decf	??_send_data+1,w,c
  2053  00133A  A4D8               	btfss	status,2,c
  2054  00133C  D018               	goto	l3249
  2055                           
  2056                           ;SlaveComm_PIC18.c: 500: {
  2057                           ;SlaveComm_PIC18.c: 502: send_buffer->read_position++;
  2058  00133E  EE20 F029          	lfsr	2,41
  2059  001342  5011               	movf	send_data@send_buffer,w,c
  2060  001344  26D9               	addwf	fsr2l,f,c
  2061  001346  5012               	movf	send_data@send_buffer+1,w,c
  2062  001348  22DA               	addwfc	fsr2h,f,c
  2063  00134A  2ADF               	incf	indf2,f,c
  2064                           
  2065                           ;SlaveComm_PIC18.c: 503: if( send_buffer->read_position >= 40 )
  2066  00134C  EE20 F029          	lfsr	2,41
  2067  001350  5011               	movf	send_data@send_buffer,w,c
  2068  001352  26D9               	addwf	fsr2l,f,c
  2069  001354  5012               	movf	send_data@send_buffer+1,w,c
  2070  001356  22DA               	addwfc	fsr2h,f,c
  2071  001358  0E27               	movlw	39
  2072  00135A  64DF               	cpfsgt	indf2,c
  2073  00135C  D008               	goto	l3249
  2074                           
  2075                           ;SlaveComm_PIC18.c: 504: {
  2076                           ;SlaveComm_PIC18.c: 505: send_buffer->read_position = 0;
  2077  00135E  EE20 F029          	lfsr	2,41
  2078  001362  5011               	movf	send_data@send_buffer,w,c
  2079  001364  26D9               	addwf	fsr2l,f,c
  2080  001366  5012               	movf	send_data@send_buffer+1,w,c
  2081  001368  22DA               	addwfc	fsr2h,f,c
  2082  00136A  0E00               	movlw	0
  2083  00136C  6EDF               	movwf	indf2,c
  2084  00136E                     l3249:
  2085                           
  2086                           ;SlaveComm_PIC18.c: 506: }
  2087                           ;SlaveComm_PIC18.c: 507: }
  2088                           ;SlaveComm_PIC18.c: 508: }
  2089                           ;SlaveComm_PIC18.c: 510: return send_end;
  2090  00136E  5015               	movf	send_data@send_end,w,c
  2091  001370  0012               	return	
  2092  001372                     __end_of_send_data:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           intcon2	equ	0xFF1
  2099                           intcon3	equ	0xFF0
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           indf1	equ	0xFE7
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           indf2	equ	0xFDF
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8
  2109                           
  2110 ;; *************** function _SPI_send_data *****************
  2111 ;; Defined at:
  2112 ;;		line 583 in file "SlaveComm_PIC18.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  data            1    wreg     unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  data            1   14[COMRAM] unsigned char 
  2117 ;;  sendGood        1   15[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      unsigned char 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2127 ;;      Params:         0       0       0       0       0       0       0
  2128 ;;      Locals:         2       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0
  2130 ;;      Totals:         2       0       0       0       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_send_data
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text12
  2142  0019D4                     __ptext12:
  2143                           	opt stack 0
  2144  0019D4                     _SPI_send_data:
  2145                           	opt stack 27
  2146                           
  2147                           ;incstack = 0
  2148                           ;SPI_send_data@data stored from wreg
  2149  0019D4  6E0F               	movwf	SPI_send_data@data,c
  2150                           
  2151                           ;SlaveComm_PIC18.c: 585: bool sendGood = 0;
  2152  0019D6  0E00               	movlw	0
  2153  0019D8  6E10               	movwf	SPI_send_data@sendGood,c
  2154                           
  2155                           ;SlaveComm_PIC18.c: 587: if( SPI_transmit_wait == 0 )
  2156  0019DA  6642               	tstfsz	_SPI_transmit_wait,c
  2157  0019DC  D006               	goto	l3089
  2158                           
  2159                           ;SlaveComm_PIC18.c: 588: {
  2160                           ;SlaveComm_PIC18.c: 589: SSP2BUF = data;
  2161  0019DE  C00F  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2162                           
  2163                           ;SlaveComm_PIC18.c: 590: SPI_transmit_wait = 1;
  2164  0019E2  0E01               	movlw	1
  2165  0019E4  6E42               	movwf	_SPI_transmit_wait,c
  2166                           
  2167                           ;SlaveComm_PIC18.c: 591: sendGood = 1;
  2168  0019E6  0E01               	movlw	1
  2169  0019E8  D001               	goto	L2
  2170  0019EA                     l3089:
  2171                           
  2172                           ;SlaveComm_PIC18.c: 593: else
  2173                           ;SlaveComm_PIC18.c: 594: {
  2174                           ;SlaveComm_PIC18.c: 595: sendGood = 0;
  2175  0019EA  0E00               	movlw	0
  2176  0019EC                     L2:
  2177  0019EC  6E10               	movwf	SPI_send_data@sendGood,c
  2178                           
  2179                           ;SlaveComm_PIC18.c: 596: }
  2180                           ;SlaveComm_PIC18.c: 598: return sendGood;
  2181  0019EE  5010               	movf	SPI_send_data@sendGood,w,c
  2182  0019F0  0012               	return	
  2183  0019F2                     __end_of_SPI_send_data:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           prodh	equ	0xFF4
  2187                           prodl	equ	0xFF3
  2188                           intcon	equ	0xFF2
  2189                           intcon2	equ	0xFF1
  2190                           intcon3	equ	0xFF0
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           indf1	equ	0xFE7
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           indf2	equ	0xFDF
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _resetCommunications *****************
  2202 ;; Defined at:
  2203 ;;		line 152 in file "SlaveComm_PIC18.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  send_buffer     2   53[COMRAM] PTR struct buffer
  2206 ;;		 -> communications@send_buffer(42), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;		None               void
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2218 ;;      Params:         2       0       0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0
  2220 ;;      Temps:          2       0       0       0       0       0       0
  2221 ;;      Totals:         4       0       0       0       0       0       0
  2222 ;;Total ram usage:        4 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    5
  2225 ;; This function calls:
  2226 ;;		_com_command_setEnergyUsed
  2227 ;;		_com_command_setPower
  2228 ;;		_com_command_setVersion
  2229 ;; This function is called by:
  2230 ;;		_communications
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text13
  2235  00124A                     __ptext13:
  2236                           	opt stack 0
  2237  00124A                     _resetCommunications:
  2238                           	opt stack 24
  2239                           
  2240                           ;SlaveComm_PIC18.c: 155: static int commState = 0;
  2241                           ;SlaveComm_PIC18.c: 158: SSP2CON1bits.SSPEN = 0;
  2242                           
  2243                           ;incstack = 0
  2244  00124A  9A6C               	bcf	3948,5,c	;volatile
  2245                           
  2246                           ;SlaveComm_PIC18.c: 159: _delay((unsigned long)((1)*(16000000/4000.0)));
  2247  00124C  0E06               	movlw	6
  2248  00124E  6E38               	movwf	??_resetCommunications& (0+255),c
  2249  001250  0E30               	movlw	48
  2250  001252                     u2897:
  2251  001252  2EE8               	decfsz	wreg,f,c
  2252  001254  D7FE               	goto	u2897
  2253  001256  2E38               	decfsz	??_resetCommunications& (0+255),f,c
  2254  001258  D7FC               	goto	u2897
  2255  00125A  D000               	nop2	
  2256                           
  2257                           ;SlaveComm_PIC18.c: 160: SSP2CON1bits.SSPEN = 1;
  2258  00125C  8A6C               	bsf	3948,5,c	;volatile
  2259                           
  2260                           ;SlaveComm_PIC18.c: 162: SSP2CON1bits.WCOL = 0;
  2261  00125E  9E6C               	bcf	3948,7,c	;volatile
  2262                           
  2263                           ;SlaveComm_PIC18.c: 163: SPI_transmit_wait = 0;
  2264  001260  0E00               	movlw	0
  2265  001262  6E42               	movwf	_SPI_transmit_wait,c
  2266                           
  2267                           ;SlaveComm_PIC18.c: 165: send_buffer->read_position = 0;
  2268  001264  EE20 F029          	lfsr	2,41
  2269  001268  5036               	movf	resetCommunications@send_buffer,w,c
  2270  00126A  26D9               	addwf	fsr2l,f,c
  2271  00126C  5037               	movf	resetCommunications@send_buffer+1,w,c
  2272  00126E  22DA               	addwfc	fsr2h,f,c
  2273  001270  0E00               	movlw	0
  2274  001272  6EDF               	movwf	indf2,c
  2275                           
  2276                           ;SlaveComm_PIC18.c: 166: send_buffer->write_position = 0;
  2277  001274  EE20 F028          	lfsr	2,40
  2278  001278  5036               	movf	resetCommunications@send_buffer,w,c
  2279  00127A  26D9               	addwf	fsr2l,f,c
  2280  00127C  5037               	movf	resetCommunications@send_buffer+1,w,c
  2281  00127E  22DA               	addwfc	fsr2h,f,c
  2282  001280  0E00               	movlw	0
  2283  001282  6EDF               	movwf	indf2,c
  2284                           
  2285                           ;SlaveComm_PIC18.c: 171: commState++;
  2286  001284  4A40               	infsnz	resetCommunications@commState,f,c
  2287  001286  2A41               	incf	resetCommunications@commState+1,f,c
  2288                           
  2289                           ;SlaveComm_PIC18.c: 172: switch( commState )
  2290  001288  D019               	goto	l3187
  2291  00128A                     l3177:
  2292                           
  2293                           ;SlaveComm_PIC18.c: 175: com_command_setVersion( send_buffer );
  2294  00128A  C037  F024         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2295  00128E  C036  F023         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2296  001292  EC80  F00C         	call	_com_command_setVersion	;wreg free
  2297                           
  2298                           ;SlaveComm_PIC18.c: 176: break;
  2299  001296  0012               	return	
  2300  001298                     l3179:
  2301                           
  2302                           ;SlaveComm_PIC18.c: 178: com_command_setPower( send_buffer );
  2303  001298  C037  F024         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2304  00129C  C036  F023         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2305  0012A0  ECBC  F00B         	call	_com_command_setPower	;wreg free
  2306                           
  2307                           ;SlaveComm_PIC18.c: 179: break;
  2308  0012A4  0012               	return	
  2309  0012A6                     l3181:
  2310                           
  2311                           ;SlaveComm_PIC18.c: 181: com_command_setEnergyUsed( send_buffer );
  2312  0012A6  C037  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2313  0012AA  C036  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2314  0012AE  EC97  F00B         	call	_com_command_setEnergyUsed	;wreg free
  2315  0012B2                     l3183:
  2316                           
  2317                           ;SlaveComm_PIC18.c: 193: commState = 0;
  2318  0012B2  0E00               	movlw	0
  2319  0012B4  6E41               	movwf	resetCommunications@commState+1,c
  2320  0012B6  0E00               	movlw	0
  2321  0012B8  6E40               	movwf	resetCommunications@commState,c
  2322                           
  2323                           ;SlaveComm_PIC18.c: 194: break;
  2324  0012BA  0012               	return	
  2325  0012BC                     l3187:
  2326  0012BC  C040  F038         	movff	resetCommunications@commState,??_resetCommunications
  2327  0012C0  C041  F039         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2328                           
  2329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2330                           ; Switch size 1, requested type "space"
  2331                           ; Number of cases is 1, Range of values is 0 to 0
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte            4     3 (average)
  2335                           ;	Chosen strategy is simple_byte
  2336  0012C4  5039               	movf	??_resetCommunications+1,w,c
  2337  0012C6  0A00               	xorlw	0	; case 0
  2338  0012C8  A4D8               	btfss	status,2,c
  2339  0012CA  D7F3               	goto	l3183
  2340                           
  2341                           ; Switch size 1, requested type "space"
  2342                           ; Number of cases is 3, Range of values is 1 to 3
  2343                           ; switch strategies available:
  2344                           ; Name         Instructions Cycles
  2345                           ; simple_byte           10     6 (average)
  2346                           ;	Chosen strategy is simple_byte
  2347  0012CC  5038               	movf	??_resetCommunications,w,c
  2348  0012CE  0A01               	xorlw	1	; case 1
  2349  0012D0  B4D8               	btfsc	status,2,c
  2350  0012D2  D7DB               	goto	l3177
  2351  0012D4  0A03               	xorlw	3	; case 2
  2352  0012D6  B4D8               	btfsc	status,2,c
  2353  0012D8  D7DF               	goto	l3179
  2354  0012DA  0A01               	xorlw	1	; case 3
  2355  0012DC  B4D8               	btfsc	status,2,c
  2356  0012DE  D7E3               	goto	l3181
  2357  0012E0  D7E8               	goto	l3183
  2358  0012E2                     __end_of_resetCommunications:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           prodh	equ	0xFF4
  2362                           prodl	equ	0xFF3
  2363                           intcon	equ	0xFF2
  2364                           intcon2	equ	0xFF1
  2365                           intcon3	equ	0xFF0
  2366                           postinc0	equ	0xFEE
  2367                           wreg	equ	0xFE8
  2368                           indf1	equ	0xFE7
  2369                           fsr1h	equ	0xFE2
  2370                           fsr1l	equ	0xFE1
  2371                           indf2	equ	0xFDF
  2372                           fsr2h	equ	0xFDA
  2373                           fsr2l	equ	0xFD9
  2374                           status	equ	0xFD8
  2375                           
  2376 ;; *************** function _com_command_setVersion *****************
  2377 ;; Defined at:
  2378 ;;		line 666 in file "SlaveComm_PIC18.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2381 ;;		 -> communications@send_buffer(42), 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;		None               void
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2393 ;;      Params:         2       0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0
  2396 ;;      Totals:         2       0       0       0       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    4
  2400 ;; This function calls:
  2401 ;;		_command_builder3
  2402 ;; This function is called by:
  2403 ;;		_resetCommunications
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text14
  2408  001900                     __ptext14:
  2409                           	opt stack 0
  2410  001900                     _com_command_setVersion:
  2411                           	opt stack 24
  2412                           
  2413                           ;SlaveComm_PIC18.c: 668: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  2414                           
  2415                           ;incstack = 0
  2416  001900  C024  F01C         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2417  001904  C023  F01B         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2418  001908  0E06               	movlw	high STR_2
  2419  00190A  6E1E               	movwf	command_builder3@data1+1,c
  2420  00190C  0E57               	movlw	low STR_2
  2421  00190E  6E1D               	movwf	command_builder3@data1,c
  2422  001910  0E06               	movlw	high STR_22
  2423  001912  6E20               	movwf	command_builder3@data2+1,c
  2424  001914  0E0D               	movlw	low STR_22
  2425  001916  6E1F               	movwf	command_builder3@data2,c
  2426  001918  0E06               	movlw	high STR_40
  2427  00191A  6E22               	movwf	command_builder3@data3+1,c
  2428  00191C  0E4B               	movlw	low STR_40
  2429  00191E  6E21               	movwf	command_builder3@data3,c
  2430  001920  ECD6  F008         	call	_command_builder3	;wreg free
  2431  001924  0012               	return	
  2432  001926                     __end_of_com_command_setVersion:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           intcon2	equ	0xFF1
  2439                           intcon3	equ	0xFF0
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           indf1	equ	0xFE7
  2443                           fsr1h	equ	0xFE2
  2444                           fsr1l	equ	0xFE1
  2445                           indf2	equ	0xFDF
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function _com_command_setPower *****************
  2451 ;; Defined at:
  2452 ;;		line 618 in file "SlaveComm_PIC18.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  2455 ;;		 -> communications@send_buffer(42), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  temp            7   36[COMRAM] unsigned char [7]
  2458 ;; Return value:  Size  Location     Type
  2459 ;;		None               void
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         2       0       0       0       0       0       0
  2468 ;;      Locals:         7       0       0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0
  2470 ;;      Totals:         9       0       0       0       0       0       0
  2471 ;;Total ram usage:        9 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    4
  2474 ;; This function calls:
  2475 ;;		_command_builder3
  2476 ;;		_utoa
  2477 ;; This function is called by:
  2478 ;;		_resetCommunications
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text15
  2483  001778                     __ptext15:
  2484                           	opt stack 0
  2485  001778                     _com_command_setPower:
  2486                           	opt stack 24
  2487                           
  2488                           ;SlaveComm_PIC18.c: 621: char temp[7];
  2489                           ;SlaveComm_PIC18.c: 623: utoa(temp, meterWatts, 10);
  2490                           
  2491                           ;incstack = 0
  2492  001778  0E00               	movlw	high com_command_setPower@temp
  2493  00177A  6E17               	movwf	utoa@buf+1,c
  2494  00177C  0E25               	movlw	low com_command_setPower@temp
  2495  00177E  6E16               	movwf	utoa@buf,c
  2496  001780  C03E  F018         	movff	_meterWatts,utoa@val
  2497  001784  C03F  F019         	movff	_meterWatts+1,utoa@val+1
  2498  001788  0E00               	movlw	0
  2499  00178A  6E1B               	movwf	utoa@base+1,c
  2500  00178C  0E0A               	movlw	10
  2501  00178E  6E1A               	movwf	utoa@base,c
  2502  001790  EC84  F008         	call	_utoa	;wreg free
  2503                           
  2504                           ;SlaveComm_PIC18.c: 625: command_builder3( send_buffer, "Set", "Watts", temp );
  2505  001794  C024  F01C         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2506  001798  C023  F01B         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2507  00179C  0E06               	movlw	high STR_2
  2508  00179E  6E1E               	movwf	command_builder3@data1+1,c
  2509  0017A0  0E57               	movlw	low STR_2
  2510  0017A2  6E1D               	movwf	command_builder3@data1,c
  2511  0017A4  0E06               	movlw	high STR_18
  2512  0017A6  6E20               	movwf	command_builder3@data2+1,c
  2513  0017A8  0E24               	movlw	low STR_18
  2514  0017AA  6E1F               	movwf	command_builder3@data2,c
  2515  0017AC  0E00               	movlw	high com_command_setPower@temp
  2516  0017AE  6E22               	movwf	command_builder3@data3+1,c
  2517  0017B0  0E25               	movlw	low com_command_setPower@temp
  2518  0017B2  6E21               	movwf	command_builder3@data3,c
  2519  0017B4  ECD6  F008         	call	_command_builder3	;wreg free
  2520  0017B8  0012               	return	
  2521  0017BA                     __end_of_com_command_setPower:
  2522                           	opt stack 0
  2523                           tblptru	equ	0xFF8
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           intcon2	equ	0xFF1
  2528                           intcon3	equ	0xFF0
  2529                           postinc0	equ	0xFEE
  2530                           wreg	equ	0xFE8
  2531                           indf1	equ	0xFE7
  2532                           fsr1h	equ	0xFE2
  2533                           fsr1l	equ	0xFE1
  2534                           indf2	equ	0xFDF
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _utoa *****************
  2540 ;; Defined at:
  2541 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\itoa.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2544 ;;		 -> com_command_setPower@temp(7), 
  2545 ;;  val             2   23[COMRAM] unsigned int 
  2546 ;;  base            2   25[COMRAM] int 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  v               2   27[COMRAM] unsigned int 
  2549 ;;  c               1   29[COMRAM] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   21[COMRAM] PTR unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2559 ;;      Params:         6       0       0       0       0       0       0
  2560 ;;      Locals:         3       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0
  2562 ;;      Totals:         9       0       0       0       0       0       0
  2563 ;;Total ram usage:        9 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    2
  2566 ;; This function calls:
  2567 ;;		___lwdiv
  2568 ;;		___lwmod
  2569 ;; This function is called by:
  2570 ;;		_com_command_setPower
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text16
  2575  001108                     __ptext16:
  2576                           	opt stack 0
  2577  001108                     _utoa:
  2578                           	opt stack 25
  2579                           
  2580                           ;incstack = 0
  2581  001108  C018  F01C         	movff	utoa@val,utoa@v
  2582  00110C  C019  F01D         	movff	utoa@val+1,utoa@v+1
  2583  001110                     l2909:
  2584  001110  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  2585  001114  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  2586  001118  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2587  00111C  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2588  001120  EC20  F00B         	call	___lwdiv	;wreg free
  2589  001124  C00F  F01C         	movff	?___lwdiv,utoa@v
  2590  001128  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2591  00112C  4A16               	infsnz	utoa@buf,f,c
  2592  00112E  2A17               	incf	utoa@buf+1,f,c
  2593  001130  501D               	movf	utoa@v+1,w,c
  2594  001132  101C               	iorwf	utoa@v,w,c
  2595  001134  A4D8               	btfss	status,2,c
  2596  001136  D7EC               	goto	l2909
  2597  001138  C016  FFD9         	movff	utoa@buf,fsr2l
  2598  00113C  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2599  001140  0E00               	movlw	0
  2600  001142  6EDF               	movwf	indf2,c
  2601  001144  0616               	decf	utoa@buf,f,c
  2602  001146  A0D8               	btfss	status,0,c
  2603  001148  0617               	decf	utoa@buf+1,f,c
  2604  00114A                     l2919:
  2605  00114A  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2606  00114E  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2607  001152  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2608  001156  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2609  00115A  ECDD  F00B         	call	___lwmod	;wreg free
  2610  00115E  500F               	movf	?___lwmod,w,c
  2611  001160  6E1E               	movwf	utoa@c,c
  2612  001162  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2613  001166  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2614  00116A  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2615  00116E  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2616  001172  EC20  F00B         	call	___lwdiv	;wreg free
  2617  001176  C00F  F018         	movff	?___lwdiv,utoa@val
  2618  00117A  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2619  00117E  0E09               	movlw	9
  2620  001180  641E               	cpfsgt	utoa@c,c
  2621  001182  D002               	goto	l878
  2622  001184  0E07               	movlw	7
  2623  001186  261E               	addwf	utoa@c,f,c
  2624  001188                     l878:
  2625  001188  0E30               	movlw	48
  2626  00118A  261E               	addwf	utoa@c,f,c
  2627  00118C  C016  FFD9         	movff	utoa@buf,fsr2l
  2628  001190  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2629  001194  C01E  FFDF         	movff	utoa@c,indf2
  2630  001198  0616               	decf	utoa@buf,f,c
  2631  00119A  A0D8               	btfss	status,0,c
  2632  00119C  0617               	decf	utoa@buf+1,f,c
  2633  00119E  5019               	movf	utoa@val+1,w,c
  2634  0011A0  1018               	iorwf	utoa@val,w,c
  2635  0011A2  A4D8               	btfss	status,2,c
  2636  0011A4  D7D2               	goto	l2919
  2637                           
  2638                           ;	Return value of _utoa is never used
  2639  0011A6  4A16               	infsnz	utoa@buf,f,c
  2640  0011A8  2A17               	incf	utoa@buf+1,f,c
  2641  0011AA  0012               	return	
  2642  0011AC                     __end_of_utoa:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           prodh	equ	0xFF4
  2646                           prodl	equ	0xFF3
  2647                           intcon	equ	0xFF2
  2648                           intcon2	equ	0xFF1
  2649                           intcon3	equ	0xFF0
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           indf1	equ	0xFE7
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           indf2	equ	0xFDF
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function ___lwmod *****************
  2661 ;; Defined at:
  2662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  dividend        2   14[COMRAM] unsigned int 
  2665 ;;  divisor         2   16[COMRAM] unsigned int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  counter         1   18[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2   14[COMRAM] unsigned int 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2677 ;;      Params:         4       0       0       0       0       0       0
  2678 ;;      Locals:         1       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0
  2680 ;;      Totals:         5       0       0       0       0       0       0
  2681 ;;Total ram usage:        5 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_utoa
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text17
  2692  0017BA                     __ptext17:
  2693                           	opt stack 0
  2694  0017BA                     ___lwmod:
  2695                           	opt stack 25
  2696                           
  2697                           ;incstack = 0
  2698  0017BA  5012               	movf	___lwmod@divisor+1,w,c
  2699  0017BC  1011               	iorwf	___lwmod@divisor,w,c
  2700  0017BE  B4D8               	btfsc	status,2,c
  2701  0017C0  D018               	goto	l996
  2702  0017C2  0E01               	movlw	1
  2703  0017C4  6E13               	movwf	___lwmod@counter,c
  2704  0017C6  D004               	goto	l2841
  2705  0017C8                     l2839:
  2706  0017C8  90D8               	bcf	status,0,c
  2707  0017CA  3611               	rlcf	___lwmod@divisor,f,c
  2708  0017CC  3612               	rlcf	___lwmod@divisor+1,f,c
  2709  0017CE  2A13               	incf	___lwmod@counter,f,c
  2710  0017D0                     l2841:
  2711  0017D0  AE12               	btfss	___lwmod@divisor+1,7,c
  2712  0017D2  D7FA               	goto	l2839
  2713  0017D4                     l2843:
  2714  0017D4  5011               	movf	___lwmod@divisor,w,c
  2715  0017D6  5C0F               	subwf	___lwmod@dividend,w,c
  2716  0017D8  5012               	movf	___lwmod@divisor+1,w,c
  2717  0017DA  5810               	subwfb	___lwmod@dividend+1,w,c
  2718  0017DC  A0D8               	btfss	status,0,c
  2719  0017DE  D004               	goto	l2847
  2720  0017E0  5011               	movf	___lwmod@divisor,w,c
  2721  0017E2  5E0F               	subwf	___lwmod@dividend,f,c
  2722  0017E4  5012               	movf	___lwmod@divisor+1,w,c
  2723  0017E6  5A10               	subwfb	___lwmod@dividend+1,f,c
  2724  0017E8                     l2847:
  2725  0017E8  90D8               	bcf	status,0,c
  2726  0017EA  3212               	rrcf	___lwmod@divisor+1,f,c
  2727  0017EC  3211               	rrcf	___lwmod@divisor,f,c
  2728  0017EE  2E13               	decfsz	___lwmod@counter,f,c
  2729  0017F0  D7F1               	goto	l2843
  2730  0017F2                     l996:
  2731  0017F2  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2732  0017F6  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2733  0017FA  0012               	return	
  2734  0017FC                     __end_of___lwmod:
  2735                           	opt stack 0
  2736                           tblptru	equ	0xFF8
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           intcon	equ	0xFF2
  2740                           intcon2	equ	0xFF1
  2741                           intcon3	equ	0xFF0
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           indf1	equ	0xFE7
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           indf2	equ	0xFDF
  2748                           fsr2h	equ	0xFDA
  2749                           fsr2l	equ	0xFD9
  2750                           status	equ	0xFD8
  2751                           
  2752 ;; *************** function ___lwdiv *****************
  2753 ;; Defined at:
  2754 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  dividend        2   14[COMRAM] unsigned int 
  2757 ;;  divisor         2   16[COMRAM] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  quotient        2   19[COMRAM] unsigned int 
  2760 ;;  counter         1   18[COMRAM] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2   14[COMRAM] unsigned int 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2770 ;;      Params:         4       0       0       0       0       0       0
  2771 ;;      Locals:         3       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0
  2773 ;;      Totals:         7       0       0       0       0       0       0
  2774 ;;Total ram usage:        7 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_utoa
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text18
  2785  001640                     __ptext18:
  2786                           	opt stack 0
  2787  001640                     ___lwdiv:
  2788                           	opt stack 25
  2789                           
  2790                           ;incstack = 0
  2791  001640  0E00               	movlw	0
  2792  001642  6E15               	movwf	___lwdiv@quotient+1,c
  2793  001644  0E00               	movlw	0
  2794  001646  6E14               	movwf	___lwdiv@quotient,c
  2795  001648  5012               	movf	___lwdiv@divisor+1,w,c
  2796  00164A  1011               	iorwf	___lwdiv@divisor,w,c
  2797  00164C  B4D8               	btfsc	status,2,c
  2798  00164E  D01C               	goto	l986
  2799  001650  0E01               	movlw	1
  2800  001652  6E13               	movwf	___lwdiv@counter,c
  2801  001654  D004               	goto	l2821
  2802  001656                     l2819:
  2803  001656  90D8               	bcf	status,0,c
  2804  001658  3611               	rlcf	___lwdiv@divisor,f,c
  2805  00165A  3612               	rlcf	___lwdiv@divisor+1,f,c
  2806  00165C  2A13               	incf	___lwdiv@counter,f,c
  2807  00165E                     l2821:
  2808  00165E  AE12               	btfss	___lwdiv@divisor+1,7,c
  2809  001660  D7FA               	goto	l2819
  2810  001662                     l2823:
  2811  001662  90D8               	bcf	status,0,c
  2812  001664  3614               	rlcf	___lwdiv@quotient,f,c
  2813  001666  3615               	rlcf	___lwdiv@quotient+1,f,c
  2814  001668  5011               	movf	___lwdiv@divisor,w,c
  2815  00166A  5C0F               	subwf	___lwdiv@dividend,w,c
  2816  00166C  5012               	movf	___lwdiv@divisor+1,w,c
  2817  00166E  5810               	subwfb	___lwdiv@dividend+1,w,c
  2818  001670  A0D8               	btfss	status,0,c
  2819  001672  D005               	goto	l2831
  2820  001674  5011               	movf	___lwdiv@divisor,w,c
  2821  001676  5E0F               	subwf	___lwdiv@dividend,f,c
  2822  001678  5012               	movf	___lwdiv@divisor+1,w,c
  2823  00167A  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2824  00167C  8014               	bsf	___lwdiv@quotient,0,c
  2825  00167E                     l2831:
  2826  00167E  90D8               	bcf	status,0,c
  2827  001680  3212               	rrcf	___lwdiv@divisor+1,f,c
  2828  001682  3211               	rrcf	___lwdiv@divisor,f,c
  2829  001684  2E13               	decfsz	___lwdiv@counter,f,c
  2830  001686  D7ED               	goto	l2823
  2831  001688                     l986:
  2832  001688  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2833  00168C  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2834  001690  0012               	return	
  2835  001692                     __end_of___lwdiv:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           intcon	equ	0xFF2
  2841                           intcon2	equ	0xFF1
  2842                           intcon3	equ	0xFF0
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           indf1	equ	0xFE7
  2846                           fsr1h	equ	0xFE2
  2847                           fsr1l	equ	0xFE1
  2848                           indf2	equ	0xFDF
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _receive_data *****************
  2854 ;; Defined at:
  2855 ;;		line 199 in file "SlaveComm_PIC18.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  receive_buff    2   17[COMRAM] PTR struct buffer
  2858 ;;		 -> communications@receive_buffer(42), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  data            1   20[COMRAM] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      enum E7617
  2863 ;; Registers used:
  2864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2870 ;;      Params:         2       0       0       0       0       0       0
  2871 ;;      Locals:         1       0       0       0       0       0       0
  2872 ;;      Temps:          1       0       0       0       0       0       0
  2873 ;;      Totals:         4       0       0       0       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		_SPI_receive_data
  2879 ;; This function is called by:
  2880 ;;		_communications
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text19
  2885  001046                     __ptext19:
  2886                           	opt stack 0
  2887  001046                     _receive_data:
  2888                           	opt stack 27
  2889                           
  2890                           ;SlaveComm_PIC18.c: 201: char data;
  2891                           ;SlaveComm_PIC18.c: 203: static enum receive_status my_status = receive_waiting;
  2892                           ;SlaveComm_PIC18.c: 205: if( my_status == receive_end_command )
  2893                           
  2894                           ;incstack = 0
  2895  001046  5049               	movf	receive_data@my_status,w,c
  2896  001048  0A02               	xorlw	2
  2897  00104A  A4D8               	btfss	status,2,c
  2898  00104C  D002               	goto	l3197
  2899                           
  2900                           ;SlaveComm_PIC18.c: 206: {
  2901                           ;SlaveComm_PIC18.c: 207: my_status = receive_waiting;
  2902  00104E  0E00               	movlw	0
  2903  001050  6E49               	movwf	receive_data@my_status,c
  2904  001052                     l3197:
  2905                           
  2906                           ;SlaveComm_PIC18.c: 208: }
  2907                           ;SlaveComm_PIC18.c: 210: if( SPI_receive_data( &data ) == 1 )
  2908  001052  0E00               	movlw	high receive_data@data
  2909  001054  6E10               	movwf	SPI_receive_data@data+1,c
  2910  001056  0E15               	movlw	low receive_data@data
  2911  001058  6E0F               	movwf	SPI_receive_data@data,c
  2912  00105A  EC6C  F00C         	call	_SPI_receive_data	;wreg free
  2913  00105E  6E14               	movwf	??_receive_data& (0+255),c
  2914  001060  0414               	decf	??_receive_data,w,c
  2915  001062  A4D8               	btfss	status,2,c
  2916  001064  D04F               	goto	l284
  2917                           
  2918                           ;SlaveComm_PIC18.c: 211: {
  2919                           ;SlaveComm_PIC18.c: 212: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2920  001066  5015               	movf	receive_data@data,w,c
  2921  001068  0A21               	xorlw	33
  2922  00106A  A4D8               	btfss	status,2,c
  2923  00106C  D015               	goto	l3209
  2924  00106E  0449               	decf	receive_data@my_status,w,c
  2925  001070  B4D8               	btfsc	status,2,c
  2926  001072  D012               	goto	l3209
  2927                           
  2928                           ;SlaveComm_PIC18.c: 213: {
  2929                           ;SlaveComm_PIC18.c: 214: my_status = receive_in_command;
  2930  001074  0E01               	movlw	1
  2931  001076  6E49               	movwf	receive_data@my_status,c
  2932                           
  2933                           ;SlaveComm_PIC18.c: 215: receive_buffer->read_position = 0;
  2934  001078  EE20 F029          	lfsr	2,41
  2935  00107C  5012               	movf	receive_data@receive_buffer,w,c
  2936  00107E  26D9               	addwf	fsr2l,f,c
  2937  001080  5013               	movf	receive_data@receive_buffer+1,w,c
  2938  001082  22DA               	addwfc	fsr2h,f,c
  2939  001084  0E00               	movlw	0
  2940  001086  6EDF               	movwf	indf2,c
  2941                           
  2942                           ;SlaveComm_PIC18.c: 216: receive_buffer->write_position = 0;
  2943  001088  EE20 F028          	lfsr	2,40
  2944  00108C  5012               	movf	receive_data@receive_buffer,w,c
  2945  00108E  26D9               	addwf	fsr2l,f,c
  2946  001090  5013               	movf	receive_data@receive_buffer+1,w,c
  2947  001092  22DA               	addwfc	fsr2h,f,c
  2948  001094  0E00               	movlw	0
  2949  001096  6EDF               	movwf	indf2,c
  2950  001098                     l3209:
  2951                           
  2952                           ;SlaveComm_PIC18.c: 217: }
  2953                           ;SlaveComm_PIC18.c: 219: if( my_status == receive_in_command )
  2954  001098  0449               	decf	receive_data@my_status,w,c
  2955  00109A  A4D8               	btfss	status,2,c
  2956  00109C  D02A               	goto	l3219
  2957                           
  2958                           ;SlaveComm_PIC18.c: 220: {
  2959                           ;SlaveComm_PIC18.c: 221: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2960  00109E  EE20 F028          	lfsr	2,40
  2961  0010A2  5012               	movf	receive_data@receive_buffer,w,c
  2962  0010A4  26D9               	addwf	fsr2l,f,c
  2963  0010A6  5013               	movf	receive_data@receive_buffer+1,w,c
  2964  0010A8  22DA               	addwfc	fsr2h,f,c
  2965  0010AA  50DF               	movf	indf2,w,c
  2966  0010AC  6E14               	movwf	??_receive_data& (0+255),c
  2967  0010AE  5014               	movf	??_receive_data,w,c
  2968  0010B0  0D01               	mullw	1
  2969  0010B2  50F3               	movf	prodl,w,c
  2970  0010B4  2412               	addwf	receive_data@receive_buffer,w,c
  2971  0010B6  6ED9               	movwf	fsr2l,c
  2972  0010B8  50F4               	movf	prodh,w,c
  2973  0010BA  2013               	addwfc	receive_data@receive_buffer+1,w,c
  2974  0010BC  6EDA               	movwf	fsr2h,c
  2975  0010BE  C015  FFDF         	movff	receive_data@data,indf2
  2976                           
  2977                           ;SlaveComm_PIC18.c: 223: receive_buffer->write_position++;
  2978  0010C2  EE20 F028          	lfsr	2,40
  2979  0010C6  5012               	movf	receive_data@receive_buffer,w,c
  2980  0010C8  26D9               	addwf	fsr2l,f,c
  2981  0010CA  5013               	movf	receive_data@receive_buffer+1,w,c
  2982  0010CC  22DA               	addwfc	fsr2h,f,c
  2983  0010CE  2ADF               	incf	indf2,f,c
  2984                           
  2985                           ;SlaveComm_PIC18.c: 224: if( receive_buffer->write_position >= 40 )
  2986  0010D0  EE20 F028          	lfsr	2,40
  2987  0010D4  5012               	movf	receive_data@receive_buffer,w,c
  2988  0010D6  26D9               	addwf	fsr2l,f,c
  2989  0010D8  5013               	movf	receive_data@receive_buffer+1,w,c
  2990  0010DA  22DA               	addwfc	fsr2h,f,c
  2991  0010DC  0E27               	movlw	39
  2992  0010DE  64DF               	cpfsgt	indf2,c
  2993  0010E0  D008               	goto	l3219
  2994                           
  2995                           ;SlaveComm_PIC18.c: 225: {
  2996                           ;SlaveComm_PIC18.c: 226: receive_buffer->write_position = ( 40 - 1 );
  2997  0010E2  EE20 F028          	lfsr	2,40
  2998  0010E6  5012               	movf	receive_data@receive_buffer,w,c
  2999  0010E8  26D9               	addwf	fsr2l,f,c
  3000  0010EA  5013               	movf	receive_data@receive_buffer+1,w,c
  3001  0010EC  22DA               	addwfc	fsr2h,f,c
  3002  0010EE  0E27               	movlw	39
  3003  0010F0  6EDF               	movwf	indf2,c
  3004  0010F2                     l3219:
  3005                           
  3006                           ;SlaveComm_PIC18.c: 227: }
  3007                           ;SlaveComm_PIC18.c: 228: }
  3008                           ;SlaveComm_PIC18.c: 230: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  3009  0010F2  0449               	decf	receive_data@my_status,w,c
  3010  0010F4  A4D8               	btfss	status,2,c
  3011  0010F6  D006               	goto	l284
  3012  0010F8  5015               	movf	receive_data@data,w,c
  3013  0010FA  0A2A               	xorlw	42
  3014  0010FC  A4D8               	btfss	status,2,c
  3015  0010FE  D002               	goto	l284
  3016                           
  3017                           ;SlaveComm_PIC18.c: 231: {
  3018                           ;SlaveComm_PIC18.c: 232: my_status = receive_end_command;
  3019  001100  0E02               	movlw	2
  3020  001102  6E49               	movwf	receive_data@my_status,c
  3021  001104                     l284:
  3022                           
  3023                           ;SlaveComm_PIC18.c: 233: }
  3024                           ;SlaveComm_PIC18.c: 234: }
  3025                           ;SlaveComm_PIC18.c: 236: return my_status;
  3026  001104  5049               	movf	receive_data@my_status,w,c
  3027  001106  0012               	return	
  3028  001108                     __end_of_receive_data:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           intcon2	equ	0xFF1
  3035                           intcon3	equ	0xFF0
  3036                           postinc0	equ	0xFEE
  3037                           wreg	equ	0xFE8
  3038                           indf1	equ	0xFE7
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           fsr2h	equ	0xFDA
  3043                           fsr2l	equ	0xFD9
  3044                           status	equ	0xFD8
  3045                           
  3046 ;; *************** function _SPI_receive_data *****************
  3047 ;; Defined at:
  3048 ;;		line 562 in file "SlaveComm_PIC18.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  data            2   14[COMRAM] PTR unsigned char 
  3051 ;;		 -> receive_data@data(1), 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  recvGood        1   16[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr2l, fsr2h, status,2
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3063 ;;      Params:         2       0       0       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0
  3066 ;;      Totals:         3       0       0       0       0       0       0
  3067 ;;Total ram usage:        3 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_receive_data
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text20
  3078  0018D8                     __ptext20:
  3079                           	opt stack 0
  3080  0018D8                     _SPI_receive_data:
  3081                           	opt stack 27
  3082                           
  3083                           ;SlaveComm_PIC18.c: 565: bool recvGood = 0;
  3084                           
  3085                           ;incstack = 0
  3086  0018D8  0E00               	movlw	0
  3087  0018DA  6E11               	movwf	SPI_receive_data@recvGood,c
  3088                           
  3089                           ;SlaveComm_PIC18.c: 567: if( SSP2STATbits.BF == 1 )
  3090  0018DC  A06D               	btfss	3949,0,c	;volatile
  3091  0018DE  D00C               	goto	l2969
  3092                           
  3093                           ;SlaveComm_PIC18.c: 568: {
  3094                           ;SlaveComm_PIC18.c: 569: *data = SSP2BUF;
  3095  0018E0  C00F  FFD9         	movff	SPI_receive_data@data,fsr2l
  3096  0018E4  C010  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  3097  0018E8  CF6F FFDF          	movff	3951,indf2	;volatile
  3098                           
  3099                           ;SlaveComm_PIC18.c: 570: recvGood = 1;
  3100  0018EC  0E01               	movlw	1
  3101  0018EE  6E11               	movwf	SPI_receive_data@recvGood,c
  3102                           
  3103                           ;SlaveComm_PIC18.c: 571: SSP2CON1bits.WCOL = 0;
  3104  0018F0  9E6C               	bcf	3948,7,c	;volatile
  3105                           
  3106                           ;SlaveComm_PIC18.c: 572: SPI_transmit_wait = 0;
  3107  0018F2  0E00               	movlw	0
  3108  0018F4  6E42               	movwf	_SPI_transmit_wait,c
  3109                           
  3110                           ;SlaveComm_PIC18.c: 573: }
  3111  0018F6  D002               	goto	l391
  3112  0018F8                     l2969:
  3113                           
  3114                           ;SlaveComm_PIC18.c: 574: else
  3115                           ;SlaveComm_PIC18.c: 575: {
  3116                           ;SlaveComm_PIC18.c: 576: recvGood = 0;
  3117  0018F8  0E00               	movlw	0
  3118  0018FA  6E11               	movwf	SPI_receive_data@recvGood,c
  3119  0018FC                     l391:
  3120                           
  3121                           ;SlaveComm_PIC18.c: 577: }
  3122                           ;SlaveComm_PIC18.c: 579: return recvGood;
  3123  0018FC  5011               	movf	SPI_receive_data@recvGood,w,c
  3124  0018FE  0012               	return	
  3125  001900                     __end_of_SPI_receive_data:
  3126                           	opt stack 0
  3127                           tblptru	equ	0xFF8
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           intcon2	equ	0xFF1
  3132                           intcon3	equ	0xFF0
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           indf1	equ	0xFE7
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _process_data *****************
  3144 ;; Defined at:
  3145 ;;		line 239 in file "SlaveComm_PIC18.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  receive_buff    2    3[BANK0 ] PTR struct buffer
  3148 ;;		 -> communications@receive_buffer(42), 
  3149 ;;  send_buffer     2    5[BANK0 ] PTR struct buffer
  3150 ;;		 -> communications@send_buffer(42), 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  parameters     50    7[BANK0 ] unsigned char [10][5]
  3153 ;;  end_of_trans    1   57[BANK0 ] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      unsigned char 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3163 ;;      Params:         0       4       0       0       0       0       0
  3164 ;;      Locals:         0      51       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0
  3166 ;;      Totals:         0      55       0       0       0       0       0
  3167 ;;Total ram usage:       55 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    6
  3170 ;; This function calls:
  3171 ;;		_process_data_parameterize
  3172 ;;		_process_data_parameters
  3173 ;; This function is called by:
  3174 ;;		_communications
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text21
  3179  0017FC                     __ptext21:
  3180                           	opt stack 0
  3181  0017FC                     _process_data:
  3182                           	opt stack 23
  3183                           
  3184                           ;SlaveComm_PIC18.c: 241: bool end_of_transmission_received;
  3185                           ;SlaveComm_PIC18.c: 246: char parameters[5][10];
  3186                           ;SlaveComm_PIC18.c: 248: process_data_parameterize( parameters, receive_buffer );
  3187                           
  3188                           ;incstack = 0
  3189  0017FC  0100               	movlb	0	; () banked
  3190  0017FE  0E00               	movlw	high process_data@parameters
  3191  001800  6E16               	movwf	process_data_parameterize@parameters+1,c
  3192  001802  0100               	movlb	0	; () banked
  3193  001804  0EBB               	movlw	low process_data@parameters
  3194  001806  6E15               	movwf	process_data_parameterize@parameters,c
  3195  001808  0100               	movlb	0	; () banked
  3196  00180A  C0B8  F018         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  3197  00180E  0100               	movlb	0	; () banked
  3198  001810  C0B7  F017         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  3199  001814  ECBC  F004         	call	_process_data_parameterize	;wreg free
  3200                           
  3201                           ;SlaveComm_PIC18.c: 250: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  3202  001818  0100               	movlb	0	; () banked
  3203  00181A  0E00               	movlw	high process_data@parameters
  3204  00181C  6E37               	movwf	process_data_parameters@parameters+1,c
  3205  00181E  0100               	movlb	0	; () banked
  3206  001820  0EBB               	movlw	low process_data@parameters
  3207  001822  6E36               	movwf	process_data_parameters@parameters,c
  3208  001824  0100               	movlb	0	; () banked
  3209  001826  C0BA  F039         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  3210  00182A  0100               	movlb	0	; () banked
  3211  00182C  C0B9  F038         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  3212  001830  EC30  F003         	call	_process_data_parameters	;wreg free
  3213  001834  0100               	movlb	0	; () banked
  3214  001836  6FED               	movwf	process_data@end_of_transmission_received& (0+255),b
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;SlaveComm_PIC18.c: 252: return end_of_transmission_received;
  3218  001838  0100               	movlb	0	; () banked
  3219  00183A  51ED               	movf	process_data@end_of_transmission_received& (0+255),w,b
  3220  00183C  0012               	return	
  3221  00183E                     __end_of_process_data:
  3222                           	opt stack 0
  3223                           tblptru	equ	0xFF8
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           intcon	equ	0xFF2
  3227                           intcon2	equ	0xFF1
  3228                           intcon3	equ	0xFF0
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           indf1	equ	0xFE7
  3232                           fsr1h	equ	0xFE2
  3233                           fsr1l	equ	0xFE1
  3234                           indf2	equ	0xFDF
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _process_data_parameters *****************
  3240 ;; Defined at:
  3241 ;;		line 315 in file "SlaveComm_PIC18.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  parameters      2   53[COMRAM] PTR unsigned char [10]
  3244 ;;		 -> process_data@parameters(50), 
  3245 ;;  send_buffer     2   55[COMRAM] PTR struct buffer
  3246 ;;		 -> communications@send_buffer(42), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  end_of_trans    1    2[BANK0 ] unsigned char 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      unsigned char 
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3258 ;;      Params:         4       0       0       0       0       0       0
  3259 ;;      Locals:         0       1       0       0       0       0       0
  3260 ;;      Temps:          0       2       0       0       0       0       0
  3261 ;;      Totals:         4       3       0       0       0       0       0
  3262 ;;Total ram usage:        7 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    5
  3265 ;; This function calls:
  3266 ;;		_atol
  3267 ;;		_com_command_setEnergyUsed
  3268 ;;		_command_builder3
  3269 ;;		_send_end_of_transmission
  3270 ;;		_strmatch
  3271 ;; This function is called by:
  3272 ;;		_process_data
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text22
  3277  000660                     __ptext22:
  3278                           	opt stack 0
  3279  000660                     _process_data_parameters:
  3280                           	opt stack 23
  3281                           
  3282                           ;SlaveComm_PIC18.c: 317: bool end_of_transmission_received = 0;
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;incstack = 0
  3286  000660  0E00               	movlw	0
  3287  000662  0100               	movlb	0	; () banked
  3288  000664  6FB6               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;SlaveComm_PIC18.c: 320: if( strmatch( parameters[0], "END" ) == 1 )
  3292  000666  C037  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3293  00066A  C036  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3294  00066E  0E06               	movlw	high STR_1
  3295  000670  6E1D               	movwf	strmatch@b+1,c
  3296  000672  0E4F               	movlw	low STR_1
  3297  000674  6E1C               	movwf	strmatch@b,c
  3298  000676  EC54  F00C         	call	_strmatch	;wreg free
  3299  00067A  0100               	movlb	0	; () banked
  3300  00067C  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3301  00067E  0100               	movlb	0	; () banked
  3302  000680  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3303  000682  A4D8               	btfss	status,2,c
  3304  000684  D004               	goto	l3021
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;SlaveComm_PIC18.c: 321: {
  3308                           ;SlaveComm_PIC18.c: 331: end_of_transmission_received = 1;
  3309  000686  0E01               	movlw	1
  3310  000688  0100               	movlb	0	; () banked
  3311  00068A  6FB6               	movwf	process_data_parameters@end_of_transmission_received& (0+255),b
  3312                           
  3313                           ;SlaveComm_PIC18.c: 332: }
  3314  00068C  D172               	goto	l3075
  3315  00068E                     l3021:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;SlaveComm_PIC18.c: 333: else if( strmatch( parameters[0], "Set" ) == 1 )
  3319  00068E  C037  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3320  000692  C036  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3321  000696  0E06               	movlw	high STR_2
  3322  000698  6E1D               	movwf	strmatch@b+1,c
  3323  00069A  0E57               	movlw	low STR_2
  3324  00069C  6E1C               	movwf	strmatch@b,c
  3325  00069E  EC54  F00C         	call	_strmatch	;wreg free
  3326  0006A2  0100               	movlb	0	; () banked
  3327  0006A4  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3328  0006A6  0100               	movlb	0	; () banked
  3329  0006A8  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3330  0006AA  A4D8               	btfss	status,2,c
  3331  0006AC  D041               	goto	l3033
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;SlaveComm_PIC18.c: 334: {
  3335                           ;SlaveComm_PIC18.c: 335: if( strmatch( parameters[1], "Calibration" ) == 1 )
  3336  0006AE  0E0A               	movlw	10
  3337  0006B0  2436               	addwf	process_data_parameters@parameters,w,c
  3338  0006B2  6E1A               	movwf	strmatch@a,c
  3339  0006B4  0E00               	movlw	0
  3340  0006B6  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3341  0006B8  6E1B               	movwf	strmatch@a+1,c
  3342  0006BA  0E06               	movlw	high STR_3
  3343  0006BC  6E1D               	movwf	strmatch@b+1,c
  3344  0006BE  0E01               	movlw	low STR_3
  3345  0006C0  6E1C               	movwf	strmatch@b,c
  3346  0006C2  EC54  F00C         	call	_strmatch	;wreg free
  3347  0006C6  0100               	movlb	0	; () banked
  3348  0006C8  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3349  0006CA  0100               	movlb	0	; () banked
  3350  0006CC  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3351  0006CE  B4D8               	btfsc	status,2,c
  3352  0006D0  D150               	goto	l3075
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;SlaveComm_PIC18.c: 339: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3356                           
  3357                           ; BSR set to: 0
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;SlaveComm_PIC18.c: 336: {
  3361                           ;SlaveComm_PIC18.c: 338: }
  3362  0006D2  0E0A               	movlw	10
  3363  0006D4  2436               	addwf	process_data_parameters@parameters,w,c
  3364  0006D6  6E1A               	movwf	strmatch@a,c
  3365  0006D8  0E00               	movlw	0
  3366  0006DA  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3367  0006DC  6E1B               	movwf	strmatch@a+1,c
  3368  0006DE  0E06               	movlw	high STR_4
  3369  0006E0  6E1D               	movwf	strmatch@b+1,c
  3370  0006E2  0E17               	movlw	low STR_4
  3371  0006E4  6E1C               	movwf	strmatch@b,c
  3372  0006E6  EC54  F00C         	call	_strmatch	;wreg free
  3373  0006EA  0100               	movlb	0	; () banked
  3374  0006EC  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3375  0006EE  0100               	movlb	0	; () banked
  3376  0006F0  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3377  0006F2  A4D8               	btfss	status,2,c
  3378  0006F4  D13E               	goto	l3075
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;SlaveComm_PIC18.c: 340: {
  3382                           ;SlaveComm_PIC18.c: 345: meterEnergyUsed = atol( parameters[2] );
  3383  0006F6  0E14               	movlw	20
  3384  0006F8  2436               	addwf	process_data_parameters@parameters,w,c
  3385  0006FA  0100               	movlb	0	; () banked
  3386  0006FC  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3387  0006FE  0E00               	movlw	0
  3388  000700  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3389  000702  0100               	movlb	0	; () banked
  3390  000704  6FB5               	movwf	(??_process_data_parameters+1)& (0+255),b
  3391  000706  C0B4  F01B         	movff	??_process_data_parameters,atol@s
  3392  00070A  C0B5  F01C         	movff	??_process_data_parameters+1,atol@s+1
  3393  00070E  EC3F  F007         	call	_atol	;wreg free
  3394  000712  C01B  F03A         	movff	?_atol,_meterEnergyUsed
  3395  000716  C01C  F03B         	movff	?_atol+1,_meterEnergyUsed+1
  3396  00071A  C01D  F03C         	movff	?_atol+2,_meterEnergyUsed+2
  3397  00071E  C01E  F03D         	movff	?_atol+3,_meterEnergyUsed+3
  3398                           
  3399                           ;SlaveComm_PIC18.c: 346: com_command_setEnergyUsed( send_buffer );
  3400  000722  C039  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3401  000726  C038  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3402  00072A  EC97  F00B         	call	_com_command_setEnergyUsed	;wreg free
  3403  00072E  D121               	goto	l3075
  3404  000730                     l3033:
  3405                           
  3406                           ;SlaveComm_PIC18.c: 353: else if( strmatch( parameters[0], "Read" ) == 1 )
  3407  000730  C037  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3408  000734  C036  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3409  000738  0E06               	movlw	high STR_5
  3410  00073A  6E1D               	movwf	strmatch@b+1,c
  3411  00073C  0E34               	movlw	low STR_5
  3412  00073E  6E1C               	movwf	strmatch@b,c
  3413  000740  EC54  F00C         	call	_strmatch	;wreg free
  3414  000744  0100               	movlb	0	; () banked
  3415  000746  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3416  000748  0100               	movlb	0	; () banked
  3417  00074A  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3418  00074C  B4D8               	btfsc	status,2,c
  3419  00074E  D111               	goto	l3075
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;SlaveComm_PIC18.c: 357: else if( strmatch( parameters[0], "Data" ) == 1 )
  3423                           
  3424                           ; BSR set to: 0
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;SlaveComm_PIC18.c: 354: {
  3428                           ;SlaveComm_PIC18.c: 356: }
  3429  000750  C037  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3430  000754  C036  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3431  000758  0E06               	movlw	high STR_6
  3432  00075A  6E1D               	movwf	strmatch@b+1,c
  3433  00075C  0E2F               	movlw	low STR_6
  3434  00075E  6E1C               	movwf	strmatch@b,c
  3435  000760  EC54  F00C         	call	_strmatch	;wreg free
  3436  000764  0100               	movlb	0	; () banked
  3437  000766  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3438  000768  0100               	movlb	0	; () banked
  3439  00076A  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3440  00076C  A4D8               	btfss	status,2,c
  3441  00076E  D05C               	goto	l3049
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;SlaveComm_PIC18.c: 358: {
  3445                           ;SlaveComm_PIC18.c: 359: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3446  000770  0E0A               	movlw	10
  3447  000772  2436               	addwf	process_data_parameters@parameters,w,c
  3448  000774  6E1A               	movwf	strmatch@a,c
  3449  000776  0E00               	movlw	0
  3450  000778  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3451  00077A  6E1B               	movwf	strmatch@a+1,c
  3452  00077C  0E06               	movlw	high STR_7
  3453  00077E  6E1D               	movwf	strmatch@b+1,c
  3454  000780  0E2A               	movlw	low STR_7
  3455  000782  6E1C               	movwf	strmatch@b,c
  3456  000784  EC54  F00C         	call	_strmatch	;wreg free
  3457  000788  0100               	movlb	0	; () banked
  3458  00078A  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3459  00078C  0100               	movlb	0	; () banked
  3460  00078E  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3461  000790  A4D8               	btfss	status,2,c
  3462  000792  D0EF               	goto	l3075
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;SlaveComm_PIC18.c: 360: {
  3466                           ;SlaveComm_PIC18.c: 361: if( strmatch( parameters[2], "On" ) == 1 )
  3467  000794  0E14               	movlw	20
  3468  000796  2436               	addwf	process_data_parameters@parameters,w,c
  3469  000798  6E1A               	movwf	strmatch@a,c
  3470  00079A  0E00               	movlw	0
  3471  00079C  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3472  00079E  6E1B               	movwf	strmatch@a+1,c
  3473  0007A0  0E06               	movlw	high STR_8
  3474  0007A2  6E1D               	movwf	strmatch@b+1,c
  3475  0007A4  0E5B               	movlw	low STR_8
  3476  0007A6  6E1C               	movwf	strmatch@b,c
  3477  0007A8  EC54  F00C         	call	_strmatch	;wreg free
  3478  0007AC  0100               	movlb	0	; () banked
  3479  0007AE  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3480  0007B0  0100               	movlb	0	; () banked
  3481  0007B2  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3482  0007B4  A4D8               	btfss	status,2,c
  3483  0007B6  D013               	goto	l3045
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;SlaveComm_PIC18.c: 362: {
  3487                           ;SlaveComm_PIC18.c: 363: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  3488  0007B8  C039  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3489  0007BC  C038  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3490  0007C0  0E06               	movlw	high STR_2
  3491  0007C2  6E1E               	movwf	command_builder3@data1+1,c
  3492  0007C4  0E57               	movlw	low STR_2
  3493  0007C6  6E1D               	movwf	command_builder3@data1,c
  3494  0007C8  0E06               	movlw	high STR_7
  3495  0007CA  6E20               	movwf	command_builder3@data2+1,c
  3496  0007CC  0E2A               	movlw	low STR_7
  3497  0007CE  6E1F               	movwf	command_builder3@data2,c
  3498  0007D0  0E06               	movlw	high STR_11
  3499  0007D2  6E22               	movwf	command_builder3@data3+1,c
  3500  0007D4  0E53               	movlw	low STR_11
  3501  0007D6  6E21               	movwf	command_builder3@data3,c
  3502  0007D8  ECD6  F008         	call	_command_builder3	;wreg free
  3503                           
  3504                           ;SlaveComm_PIC18.c: 364: }
  3505  0007DC  D0CA               	goto	l3075
  3506  0007DE                     l3045:
  3507                           
  3508                           ;SlaveComm_PIC18.c: 365: else if( strmatch( parameters[2], "Off" ) == 1 )
  3509  0007DE  0E14               	movlw	20
  3510  0007E0  2436               	addwf	process_data_parameters@parameters,w,c
  3511  0007E2  6E1A               	movwf	strmatch@a,c
  3512  0007E4  0E00               	movlw	0
  3513  0007E6  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3514  0007E8  6E1B               	movwf	strmatch@a+1,c
  3515  0007EA  0E06               	movlw	high STR_11
  3516  0007EC  6E1D               	movwf	strmatch@b+1,c
  3517  0007EE  0E53               	movlw	low STR_11
  3518  0007F0  6E1C               	movwf	strmatch@b,c
  3519  0007F2  EC54  F00C         	call	_strmatch	;wreg free
  3520  0007F6  0100               	movlb	0	; () banked
  3521  0007F8  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3522  0007FA  0100               	movlb	0	; () banked
  3523  0007FC  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3524  0007FE  A4D8               	btfss	status,2,c
  3525  000800  D0B8               	goto	l3075
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;SlaveComm_PIC18.c: 366: {
  3529                           ;SlaveComm_PIC18.c: 367: command_builder3( send_buffer, "Set", "LEDB", "On" );
  3530  000802  C039  F01C         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3531  000806  C038  F01B         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3532  00080A  0E06               	movlw	high STR_2
  3533  00080C  6E1E               	movwf	command_builder3@data1+1,c
  3534  00080E  0E57               	movlw	low STR_2
  3535  000810  6E1D               	movwf	command_builder3@data1,c
  3536  000812  0E06               	movlw	high STR_7
  3537  000814  6E20               	movwf	command_builder3@data2+1,c
  3538  000816  0E2A               	movlw	low STR_7
  3539  000818  6E1F               	movwf	command_builder3@data2,c
  3540  00081A  0E06               	movlw	high STR_8
  3541  00081C  6E22               	movwf	command_builder3@data3+1,c
  3542  00081E  0E5B               	movlw	low STR_8
  3543  000820  6E21               	movwf	command_builder3@data3,c
  3544  000822  ECD6  F008         	call	_command_builder3	;wreg free
  3545  000826  D0A5               	goto	l3075
  3546  000828                     l3049:
  3547                           
  3548                           ;SlaveComm_PIC18.c: 371: else if( strmatch( parameters[0], "Conf" ) == 1 )
  3549  000828  C037  F01B         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3550  00082C  C036  F01A         	movff	process_data_parameters@parameters,strmatch@a
  3551  000830  0E06               	movlw	high STR_16
  3552  000832  6E1D               	movwf	strmatch@b+1,c
  3553  000834  0E39               	movlw	low STR_16
  3554  000836  6E1C               	movwf	strmatch@b,c
  3555  000838  EC54  F00C         	call	_strmatch	;wreg free
  3556  00083C  0100               	movlb	0	; () banked
  3557  00083E  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3558  000840  0100               	movlb	0	; () banked
  3559  000842  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3560  000844  A4D8               	btfss	status,2,c
  3561  000846  D095               	goto	l3075
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;SlaveComm_PIC18.c: 372: {
  3565                           ;SlaveComm_PIC18.c: 373: if( strmatch( parameters[1], "LEDB" ) == 1 )
  3566  000848  0E0A               	movlw	10
  3567  00084A  2436               	addwf	process_data_parameters@parameters,w,c
  3568  00084C  6E1A               	movwf	strmatch@a,c
  3569  00084E  0E00               	movlw	0
  3570  000850  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3571  000852  6E1B               	movwf	strmatch@a+1,c
  3572  000854  0E06               	movlw	high STR_7
  3573  000856  6E1D               	movwf	strmatch@b+1,c
  3574  000858  0E2A               	movlw	low STR_7
  3575  00085A  6E1C               	movwf	strmatch@b,c
  3576  00085C  EC54  F00C         	call	_strmatch	;wreg free
  3577  000860  0100               	movlb	0	; () banked
  3578  000862  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3579  000864  0100               	movlb	0	; () banked
  3580  000866  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3581  000868  A4D8               	btfss	status,2,c
  3582  00086A  D007               	goto	l3055
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;SlaveComm_PIC18.c: 374: {
  3586                           ;SlaveComm_PIC18.c: 375: send_end_of_transmission( send_buffer );
  3587  00086C  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3588  000870  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3589  000874  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3590                           
  3591                           ;SlaveComm_PIC18.c: 376: }
  3592  000878  D07C               	goto	l3075
  3593  00087A                     l3055:
  3594                           
  3595                           ;SlaveComm_PIC18.c: 377: else if( strmatch( parameters[1], "Watts" ) == 1 )
  3596  00087A  0E0A               	movlw	10
  3597  00087C  2436               	addwf	process_data_parameters@parameters,w,c
  3598  00087E  6E1A               	movwf	strmatch@a,c
  3599  000880  0E00               	movlw	0
  3600  000882  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3601  000884  6E1B               	movwf	strmatch@a+1,c
  3602  000886  0E06               	movlw	high STR_18
  3603  000888  6E1D               	movwf	strmatch@b+1,c
  3604  00088A  0E24               	movlw	low STR_18
  3605  00088C  6E1C               	movwf	strmatch@b,c
  3606  00088E  EC54  F00C         	call	_strmatch	;wreg free
  3607  000892  0100               	movlb	0	; () banked
  3608  000894  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3609  000896  0100               	movlb	0	; () banked
  3610  000898  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3611  00089A  A4D8               	btfss	status,2,c
  3612  00089C  D007               	goto	l3059
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;SlaveComm_PIC18.c: 378: {
  3616                           ;SlaveComm_PIC18.c: 379: send_end_of_transmission( send_buffer );
  3617  00089E  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3618  0008A2  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3619  0008A6  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3620                           
  3621                           ;SlaveComm_PIC18.c: 380: }
  3622  0008AA  D063               	goto	l3075
  3623  0008AC                     l3059:
  3624                           
  3625                           ;SlaveComm_PIC18.c: 381: else if( strmatch( parameters[1], "EnUsed" ) == 1 )
  3626  0008AC  0E0A               	movlw	10
  3627  0008AE  2436               	addwf	process_data_parameters@parameters,w,c
  3628  0008B0  6E1A               	movwf	strmatch@a,c
  3629  0008B2  0E00               	movlw	0
  3630  0008B4  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3631  0008B6  6E1B               	movwf	strmatch@a+1,c
  3632  0008B8  0E06               	movlw	high STR_4
  3633  0008BA  6E1D               	movwf	strmatch@b+1,c
  3634  0008BC  0E17               	movlw	low STR_4
  3635  0008BE  6E1C               	movwf	strmatch@b,c
  3636  0008C0  EC54  F00C         	call	_strmatch	;wreg free
  3637  0008C4  0100               	movlb	0	; () banked
  3638  0008C6  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3639  0008C8  0100               	movlb	0	; () banked
  3640  0008CA  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3641  0008CC  A4D8               	btfss	status,2,c
  3642  0008CE  D007               	goto	l3063
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;SlaveComm_PIC18.c: 382: {
  3646                           ;SlaveComm_PIC18.c: 383: send_end_of_transmission( send_buffer );
  3647  0008D0  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3648  0008D4  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3649  0008D8  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3650                           
  3651                           ;SlaveComm_PIC18.c: 384: }
  3652  0008DC  D04A               	goto	l3075
  3653  0008DE                     l3063:
  3654                           
  3655                           ;SlaveComm_PIC18.c: 385: else if( strmatch( parameters[1], "Volts" ) == 1 )
  3656  0008DE  0E0A               	movlw	10
  3657  0008E0  2436               	addwf	process_data_parameters@parameters,w,c
  3658  0008E2  6E1A               	movwf	strmatch@a,c
  3659  0008E4  0E00               	movlw	0
  3660  0008E6  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3661  0008E8  6E1B               	movwf	strmatch@a+1,c
  3662  0008EA  0E06               	movlw	high STR_20
  3663  0008EC  6E1D               	movwf	strmatch@b+1,c
  3664  0008EE  0E1E               	movlw	low STR_20
  3665  0008F0  6E1C               	movwf	strmatch@b,c
  3666  0008F2  EC54  F00C         	call	_strmatch	;wreg free
  3667  0008F6  0100               	movlb	0	; () banked
  3668  0008F8  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3669  0008FA  0100               	movlb	0	; () banked
  3670  0008FC  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3671  0008FE  A4D8               	btfss	status,2,c
  3672  000900  D007               	goto	l3067
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;SlaveComm_PIC18.c: 386: {
  3676                           ;SlaveComm_PIC18.c: 387: send_end_of_transmission( send_buffer );
  3677  000902  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3678  000906  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3679  00090A  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3680                           
  3681                           ;SlaveComm_PIC18.c: 388: }
  3682  00090E  D031               	goto	l3075
  3683  000910                     l3067:
  3684                           
  3685                           ;SlaveComm_PIC18.c: 389: else if( strmatch( parameters[1], "Amps" ) == 1 )
  3686  000910  0E0A               	movlw	10
  3687  000912  2436               	addwf	process_data_parameters@parameters,w,c
  3688  000914  6E1A               	movwf	strmatch@a,c
  3689  000916  0E00               	movlw	0
  3690  000918  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3691  00091A  6E1B               	movwf	strmatch@a+1,c
  3692  00091C  0E06               	movlw	high STR_21
  3693  00091E  6E1D               	movwf	strmatch@b+1,c
  3694  000920  0E3E               	movlw	low STR_21
  3695  000922  6E1C               	movwf	strmatch@b,c
  3696  000924  EC54  F00C         	call	_strmatch	;wreg free
  3697  000928  0100               	movlb	0	; () banked
  3698  00092A  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3699  00092C  0100               	movlb	0	; () banked
  3700  00092E  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3701  000930  A4D8               	btfss	status,2,c
  3702  000932  D007               	goto	l3071
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;SlaveComm_PIC18.c: 390: {
  3706                           ;SlaveComm_PIC18.c: 391: send_end_of_transmission( send_buffer );
  3707  000934  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3708  000938  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3709  00093C  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3710                           
  3711                           ;SlaveComm_PIC18.c: 392: }
  3712  000940  D018               	goto	l3075
  3713  000942                     l3071:
  3714                           
  3715                           ;SlaveComm_PIC18.c: 393: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  3716  000942  0E0A               	movlw	10
  3717  000944  2436               	addwf	process_data_parameters@parameters,w,c
  3718  000946  6E1A               	movwf	strmatch@a,c
  3719  000948  0E00               	movlw	0
  3720  00094A  2037               	addwfc	process_data_parameters@parameters+1,w,c
  3721  00094C  6E1B               	movwf	strmatch@a+1,c
  3722  00094E  0E06               	movlw	high STR_22
  3723  000950  6E1D               	movwf	strmatch@b+1,c
  3724  000952  0E0D               	movlw	low STR_22
  3725  000954  6E1C               	movwf	strmatch@b,c
  3726  000956  EC54  F00C         	call	_strmatch	;wreg free
  3727  00095A  0100               	movlb	0	; () banked
  3728  00095C  6FB4               	movwf	??_process_data_parameters& (0+255),b
  3729  00095E  0100               	movlb	0	; () banked
  3730  000960  05B4               	decf	??_process_data_parameters& (0+255),w,b
  3731  000962  A4D8               	btfss	status,2,c
  3732  000964  D006               	goto	l3075
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;SlaveComm_PIC18.c: 394: {
  3736                           ;SlaveComm_PIC18.c: 395: send_end_of_transmission( send_buffer );
  3737  000966  C039  F020         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3738  00096A  C038  F01F         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3739  00096E  EC11  F00D         	call	_send_end_of_transmission	;wreg free
  3740  000972                     l3075:
  3741                           
  3742                           ;SlaveComm_PIC18.c: 396: }
  3743                           ;SlaveComm_PIC18.c: 397: }
  3744                           ;SlaveComm_PIC18.c: 403: return end_of_transmission_received;
  3745  000972  0100               	movlb	0	; () banked
  3746  000974  51B6               	movf	process_data_parameters@end_of_transmission_received& (0+255),w,b
  3747  000976  0012               	return	
  3748  000978                     __end_of_process_data_parameters:
  3749                           	opt stack 0
  3750                           tblptru	equ	0xFF8
  3751                           prodh	equ	0xFF4
  3752                           prodl	equ	0xFF3
  3753                           intcon	equ	0xFF2
  3754                           intcon2	equ	0xFF1
  3755                           intcon3	equ	0xFF0
  3756                           postinc0	equ	0xFEE
  3757                           wreg	equ	0xFE8
  3758                           indf1	equ	0xFE7
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _strmatch *****************
  3767 ;; Defined at:
  3768 ;;		line 513 in file "SlaveComm_PIC18.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  a               2   25[COMRAM] PTR unsigned char 
  3771 ;;		 -> process_data@parameters(50), 
  3772 ;;  b               2   27[COMRAM] PTR unsigned char 
  3773 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3774 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3775 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3776 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  result          2   29[COMRAM] int 
  3779 ;;  match           1   31[COMRAM] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      unsigned char 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3789 ;;      Params:         4       0       0       0       0       0       0
  3790 ;;      Locals:         3       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0
  3792 ;;      Totals:         7       0       0       0       0       0       0
  3793 ;;Total ram usage:        7 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    2
  3796 ;; This function calls:
  3797 ;;		_strcmp2
  3798 ;; This function is called by:
  3799 ;;		_process_data_parameters
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text23
  3804  0018A8                     __ptext23:
  3805                           	opt stack 0
  3806  0018A8                     _strmatch:
  3807                           	opt stack 25
  3808                           
  3809                           ;SlaveComm_PIC18.c: 515: int result;
  3810                           ;SlaveComm_PIC18.c: 516: bool match;
  3811                           ;SlaveComm_PIC18.c: 518: result = strcmp2( a, b );
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;incstack = 0
  3815  0018A8  C01B  F010         	movff	strmatch@a+1,strcmp2@a+1
  3816  0018AC  C01A  F00F         	movff	strmatch@a,strcmp2@a
  3817  0018B0  C01D  F012         	movff	strmatch@b+1,strcmp2@b+1
  3818  0018B4  C01C  F011         	movff	strmatch@b,strcmp2@b
  3819  0018B8  EC1A  F006         	call	_strcmp2	;wreg free
  3820  0018BC  C00F  F01E         	movff	?_strcmp2,strmatch@result
  3821  0018C0  C010  F01F         	movff	?_strcmp2+1,strmatch@result+1
  3822                           
  3823                           ;SlaveComm_PIC18.c: 520: match = ( result == 0 ) ? 1 : 0;
  3824  0018C4  501F               	movf	strmatch@result+1,w,c
  3825  0018C6  101E               	iorwf	strmatch@result,w,c
  3826  0018C8  A4D8               	btfss	status,2,c
  3827  0018CA  D002               	goto	u2230
  3828  0018CC  0E01               	movlw	1
  3829  0018CE  D001               	goto	u2236
  3830  0018D0                     u2230:
  3831  0018D0  0E00               	movlw	0
  3832  0018D2                     u2236:
  3833  0018D2  6E20               	movwf	strmatch@match,c
  3834                           
  3835                           ;SlaveComm_PIC18.c: 522: return match;
  3836  0018D4  5020               	movf	strmatch@match,w,c
  3837  0018D6  0012               	return	
  3838  0018D8                     __end_of_strmatch:
  3839                           	opt stack 0
  3840                           tblptru	equ	0xFF8
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           intcon	equ	0xFF2
  3844                           intcon2	equ	0xFF1
  3845                           intcon3	equ	0xFF0
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf1	equ	0xFE7
  3849                           fsr1h	equ	0xFE2
  3850                           fsr1l	equ	0xFE1
  3851                           indf2	equ	0xFDF
  3852                           fsr2h	equ	0xFDA
  3853                           fsr2l	equ	0xFD9
  3854                           status	equ	0xFD8
  3855                           
  3856 ;; *************** function _strcmp2 *****************
  3857 ;; Defined at:
  3858 ;;		line 525 in file "SlaveComm_PIC18.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  a               2   14[COMRAM] PTR unsigned char 
  3861 ;;		 -> process_data@parameters(50), 
  3862 ;;  b               2   16[COMRAM] PTR unsigned char 
  3863 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3864 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3865 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3866 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  inx             2   23[COMRAM] int 
  3869 ;;  match           2   21[COMRAM] int 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2   14[COMRAM] int 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3879 ;;      Params:         4       0       0       0       0       0       0
  3880 ;;      Locals:         4       0       0       0       0       0       0
  3881 ;;      Temps:          3       0       0       0       0       0       0
  3882 ;;      Totals:        11       0       0       0       0       0       0
  3883 ;;Total ram usage:       11 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_strmatch
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text24
  3894  000C34                     __ptext24:
  3895                           	opt stack 0
  3896  000C34                     _strcmp2:
  3897                           	opt stack 25
  3898                           
  3899                           ;SlaveComm_PIC18.c: 527: int inx = 0;
  3900                           
  3901                           ;incstack = 0
  3902  000C34  0E00               	movlw	0
  3903  000C36  6E19               	movwf	strcmp2@inx+1,c
  3904  000C38  0E00               	movlw	0
  3905  000C3A  6E18               	movwf	strcmp2@inx,c
  3906                           
  3907                           ;SlaveComm_PIC18.c: 528: int match = 0;
  3908  000C3C  0E00               	movlw	0
  3909  000C3E  6E17               	movwf	strcmp2@match+1,c
  3910  000C40  0E00               	movlw	0
  3911  000C42  6E16               	movwf	strcmp2@match,c
  3912                           
  3913                           ;SlaveComm_PIC18.c: 530: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  3914  000C44  D03B               	goto	l2743
  3915  000C46                     l2731:
  3916                           
  3917                           ;SlaveComm_PIC18.c: 531: {
  3918                           ;SlaveComm_PIC18.c: 532: if( a[inx] > b[inx] )
  3919  000C46  C011  F013         	movff	strcmp2@b,??_strcmp2
  3920  000C4A  C012  F014         	movff	strcmp2@b+1,??_strcmp2+1
  3921  000C4E  5018               	movf	strcmp2@inx,w,c
  3922  000C50  2613               	addwf	??_strcmp2,f,c
  3923  000C52  5019               	movf	strcmp2@inx+1,w,c
  3924  000C54  2214               	addwfc	??_strcmp2+1,f,c
  3925  000C56  C013  FFF6         	movff	??_strcmp2,tblptrl
  3926  000C5A  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  3927  000C5E                     	if	0	;tblptru may be non-zero
  3928  000C5E                     	endif
  3929  000C5E                     	if	0	;tblptru may be non-zero
  3930  000C5E                     	endif
  3931  000C5E  0008               	tblrd		*
  3932  000C60  CFF5 F015          	movff	tablat,??_strcmp2+2
  3933  000C64  5018               	movf	strcmp2@inx,w,c
  3934  000C66  240F               	addwf	strcmp2@a,w,c
  3935  000C68  6ED9               	movwf	fsr2l,c
  3936  000C6A  5019               	movf	strcmp2@inx+1,w,c
  3937  000C6C  2010               	addwfc	strcmp2@a+1,w,c
  3938  000C6E  6EDA               	movwf	fsr2h,c
  3939  000C70  50DF               	movf	indf2,w,c
  3940  000C72  5C15               	subwf	??_strcmp2+2,w,c
  3941  000C74  B0D8               	btfsc	status,0,c
  3942  000C76  D005               	goto	l2735
  3943                           
  3944                           ;SlaveComm_PIC18.c: 533: {
  3945                           ;SlaveComm_PIC18.c: 534: match = 1;
  3946  000C78  0E00               	movlw	0
  3947  000C7A  6E17               	movwf	strcmp2@match+1,c
  3948  000C7C  0E01               	movlw	1
  3949  000C7E  6E16               	movwf	strcmp2@match,c
  3950                           
  3951                           ;SlaveComm_PIC18.c: 535: }
  3952  000C80  D01B               	goto	l2741
  3953  000C82                     l2735:
  3954                           
  3955                           ;SlaveComm_PIC18.c: 536: else if( a[inx] < b[inx] )
  3956  000C82  5018               	movf	strcmp2@inx,w,c
  3957  000C84  240F               	addwf	strcmp2@a,w,c
  3958  000C86  6ED9               	movwf	fsr2l,c
  3959  000C88  5019               	movf	strcmp2@inx+1,w,c
  3960  000C8A  2010               	addwfc	strcmp2@a+1,w,c
  3961  000C8C  6EDA               	movwf	fsr2h,c
  3962  000C8E  50DF               	movf	indf2,w,c
  3963  000C90  6E13               	movwf	??_strcmp2& (0+255),c
  3964  000C92  C011  F014         	movff	strcmp2@b,??_strcmp2+1
  3965  000C96  C012  F015         	movff	strcmp2@b+1,??_strcmp2+2
  3966  000C9A  5018               	movf	strcmp2@inx,w,c
  3967  000C9C  2614               	addwf	??_strcmp2+1,f,c
  3968  000C9E  5019               	movf	strcmp2@inx+1,w,c
  3969  000CA0  2215               	addwfc	??_strcmp2+2,f,c
  3970  000CA2  C014  FFF6         	movff	??_strcmp2+1,tblptrl
  3971  000CA6  C015  FFF7         	movff	??_strcmp2+2,tblptrh
  3972  000CAA                     	if	0	;tblptru may be non-zero
  3973  000CAA                     	endif
  3974  000CAA                     	if	0	;tblptru may be non-zero
  3975  000CAA                     	endif
  3976  000CAA  0008               	tblrd		*
  3977  000CAC  50F5               	movf	tablat,w,c
  3978  000CAE  5C13               	subwf	??_strcmp2,w,c
  3979  000CB0  B0D8               	btfsc	status,0,c
  3980  000CB2  D002               	goto	l2741
  3981                           
  3982                           ;SlaveComm_PIC18.c: 537: {
  3983                           ;SlaveComm_PIC18.c: 538: match = -1;
  3984  000CB4  6816               	setf	strcmp2@match,c
  3985  000CB6  6817               	setf	strcmp2@match+1,c
  3986  000CB8                     l2741:
  3987                           
  3988                           ;SlaveComm_PIC18.c: 543: }
  3989                           ;SlaveComm_PIC18.c: 545: inx++;
  3990  000CB8  4A18               	infsnz	strcmp2@inx,f,c
  3991  000CBA  2A19               	incf	strcmp2@inx+1,f,c
  3992  000CBC                     l2743:
  3993  000CBC  5018               	movf	strcmp2@inx,w,c
  3994  000CBE  240F               	addwf	strcmp2@a,w,c
  3995  000CC0  6ED9               	movwf	fsr2l,c
  3996  000CC2  5019               	movf	strcmp2@inx+1,w,c
  3997  000CC4  2010               	addwfc	strcmp2@a+1,w,c
  3998  000CC6  6EDA               	movwf	fsr2h,c
  3999  000CC8  50DF               	movf	indf2,w,c
  4000  000CCA  B4D8               	btfsc	status,2,c
  4001  000CCC  D015               	goto	l2749
  4002  000CCE  C011  F013         	movff	strcmp2@b,??_strcmp2
  4003  000CD2  C012  F014         	movff	strcmp2@b+1,??_strcmp2+1
  4004  000CD6  5018               	movf	strcmp2@inx,w,c
  4005  000CD8  2613               	addwf	??_strcmp2,f,c
  4006  000CDA  5019               	movf	strcmp2@inx+1,w,c
  4007  000CDC  2214               	addwfc	??_strcmp2+1,f,c
  4008  000CDE  C013  FFF6         	movff	??_strcmp2,tblptrl
  4009  000CE2  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4010  000CE6                     	if	0	;tblptru may be non-zero
  4011  000CE6                     	endif
  4012  000CE6                     	if	0	;tblptru may be non-zero
  4013  000CE6                     	endif
  4014  000CE6  0008               	tblrd		*
  4015  000CE8  50F5               	movf	tablat,w,c
  4016  000CEA  0900               	iorlw	0
  4017  000CEC  B4D8               	btfsc	status,2,c
  4018  000CEE  D004               	goto	l2749
  4019  000CF0  5017               	movf	strcmp2@match+1,w,c
  4020  000CF2  1016               	iorwf	strcmp2@match,w,c
  4021  000CF4  B4D8               	btfsc	status,2,c
  4022  000CF6  D7A7               	goto	l2731
  4023  000CF8                     l2749:
  4024                           
  4025                           ;SlaveComm_PIC18.c: 546: }
  4026                           ;SlaveComm_PIC18.c: 549: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  4027  000CF8  5018               	movf	strcmp2@inx,w,c
  4028  000CFA  240F               	addwf	strcmp2@a,w,c
  4029  000CFC  6ED9               	movwf	fsr2l,c
  4030  000CFE  5019               	movf	strcmp2@inx+1,w,c
  4031  000D00  2010               	addwfc	strcmp2@a+1,w,c
  4032  000D02  6EDA               	movwf	fsr2h,c
  4033  000D04  50DF               	movf	indf2,w,c
  4034  000D06  A4D8               	btfss	status,2,c
  4035  000D08  D014               	goto	l2755
  4036  000D0A  C011  F013         	movff	strcmp2@b,??_strcmp2
  4037  000D0E  C012  F014         	movff	strcmp2@b+1,??_strcmp2+1
  4038  000D12  5018               	movf	strcmp2@inx,w,c
  4039  000D14  2613               	addwf	??_strcmp2,f,c
  4040  000D16  5019               	movf	strcmp2@inx+1,w,c
  4041  000D18  2214               	addwfc	??_strcmp2+1,f,c
  4042  000D1A  C013  FFF6         	movff	??_strcmp2,tblptrl
  4043  000D1E  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4044  000D22                     	if	0	;tblptru may be non-zero
  4045  000D22                     	endif
  4046  000D22                     	if	0	;tblptru may be non-zero
  4047  000D22                     	endif
  4048  000D22  0008               	tblrd		*
  4049  000D24  50F5               	movf	tablat,w,c
  4050  000D26  0900               	iorlw	0
  4051  000D28  B4D8               	btfsc	status,2,c
  4052  000D2A  D003               	goto	l2755
  4053                           
  4054                           ;SlaveComm_PIC18.c: 550: {
  4055                           ;SlaveComm_PIC18.c: 551: match = -1;
  4056  000D2C  6816               	setf	strcmp2@match,c
  4057  000D2E  6817               	setf	strcmp2@match+1,c
  4058                           
  4059                           ;SlaveComm_PIC18.c: 552: }
  4060  000D30  D01E               	goto	l2761
  4061  000D32                     l2755:
  4062                           
  4063                           ;SlaveComm_PIC18.c: 553: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  4064  000D32  5018               	movf	strcmp2@inx,w,c
  4065  000D34  240F               	addwf	strcmp2@a,w,c
  4066  000D36  6ED9               	movwf	fsr2l,c
  4067  000D38  5019               	movf	strcmp2@inx+1,w,c
  4068  000D3A  2010               	addwfc	strcmp2@a+1,w,c
  4069  000D3C  6EDA               	movwf	fsr2h,c
  4070  000D3E  50DF               	movf	indf2,w,c
  4071  000D40  B4D8               	btfsc	status,2,c
  4072  000D42  D015               	goto	l2761
  4073  000D44  C011  F013         	movff	strcmp2@b,??_strcmp2
  4074  000D48  C012  F014         	movff	strcmp2@b+1,??_strcmp2+1
  4075  000D4C  5018               	movf	strcmp2@inx,w,c
  4076  000D4E  2613               	addwf	??_strcmp2,f,c
  4077  000D50  5019               	movf	strcmp2@inx+1,w,c
  4078  000D52  2214               	addwfc	??_strcmp2+1,f,c
  4079  000D54  C013  FFF6         	movff	??_strcmp2,tblptrl
  4080  000D58  C014  FFF7         	movff	??_strcmp2+1,tblptrh
  4081  000D5C                     	if	0	;tblptru may be non-zero
  4082  000D5C                     	endif
  4083  000D5C                     	if	0	;tblptru may be non-zero
  4084  000D5C                     	endif
  4085  000D5C  0008               	tblrd		*
  4086  000D5E  50F5               	movf	tablat,w,c
  4087  000D60  0900               	iorlw	0
  4088  000D62  A4D8               	btfss	status,2,c
  4089  000D64  D004               	goto	l2761
  4090                           
  4091                           ;SlaveComm_PIC18.c: 554: {
  4092                           ;SlaveComm_PIC18.c: 555: match = 1;
  4093  000D66  0E00               	movlw	0
  4094  000D68  6E17               	movwf	strcmp2@match+1,c
  4095  000D6A  0E01               	movlw	1
  4096  000D6C  6E16               	movwf	strcmp2@match,c
  4097  000D6E                     l2761:
  4098                           
  4099                           ;SlaveComm_PIC18.c: 556: }
  4100                           ;SlaveComm_PIC18.c: 558: return match;
  4101  000D6E  C016  F00F         	movff	strcmp2@match,?_strcmp2
  4102  000D72  C017  F010         	movff	strcmp2@match+1,?_strcmp2+1
  4103  000D76  0012               	return	
  4104  000D78                     __end_of_strcmp2:
  4105                           	opt stack 0
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           intcon2	equ	0xFF1
  4114                           intcon3	equ	0xFF0
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           fsr1h	equ	0xFE2
  4119                           fsr1l	equ	0xFE1
  4120                           indf2	equ	0xFDF
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _send_end_of_transmission *****************
  4126 ;; Defined at:
  4127 ;;		line 604 in file "SlaveComm_PIC18.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4130 ;;		 -> communications@send_buffer(42), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;		None               void
  4135 ;; Registers used:
  4136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         2       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0
  4145 ;;      Totals:         2       0       0       0       0       0       0
  4146 ;;Total ram usage:        2 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    4
  4149 ;; This function calls:
  4150 ;;		_command_builder1
  4151 ;; This function is called by:
  4152 ;;		_process_data_parameters
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text25
  4157  001A22                     __ptext25:
  4158                           	opt stack 0
  4159  001A22                     _send_end_of_transmission:
  4160                           	opt stack 23
  4161                           
  4162                           ;SlaveComm_PIC18.c: 606: command_builder1( send_buffer, "END" );
  4163                           
  4164                           ;incstack = 0
  4165  001A22  C020  F01C         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  4166  001A26  C01F  F01B         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  4167  001A2A  0E06               	movlw	high STR_1
  4168  001A2C  6E1E               	movwf	command_builder1@data1+1,c
  4169  001A2E  0E4F               	movlw	low STR_1
  4170  001A30  6E1D               	movwf	command_builder1@data1,c
  4171  001A32  EC9F  F00A         	call	_command_builder1	;wreg free
  4172  001A36  0012               	return	
  4173  001A38                     __end_of_send_end_of_transmission:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           intcon2	equ	0xFF1
  4183                           intcon3	equ	0xFF0
  4184                           postinc0	equ	0xFEE
  4185                           wreg	equ	0xFE8
  4186                           indf1	equ	0xFE7
  4187                           fsr1h	equ	0xFE2
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _command_builder1 *****************
  4195 ;; Defined at:
  4196 ;;		line 406 in file "SlaveComm_PIC18.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4199 ;;		 -> communications@send_buffer(42), 
  4200 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4201 ;;		 -> STR_23(4), 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;		None               void
  4206 ;; Registers used:
  4207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4213 ;;      Params:         4       0       0       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0
  4216 ;;      Totals:         4       0       0       0       0       0       0
  4217 ;;Total ram usage:        4 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    3
  4220 ;; This function calls:
  4221 ;;		_command_builder_add_char
  4222 ;;		_command_builder_add_string
  4223 ;; This function is called by:
  4224 ;;		_send_end_of_transmission
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text26
  4229  00153E                     __ptext26:
  4230                           	opt stack 0
  4231  00153E                     _command_builder1:
  4232                           	opt stack 23
  4233                           
  4234                           ;SlaveComm_PIC18.c: 408: command_builder_add_char( send_buffer, '#' );
  4235                           
  4236                           ;incstack = 0
  4237  00153E  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4238  001542  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4239  001546  0E23               	movlw	35
  4240  001548  6E11               	movwf	command_builder_add_char@data,c
  4241  00154A  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4242                           
  4243                           ;SlaveComm_PIC18.c: 409: command_builder_add_char( send_buffer, '#' );
  4244  00154E  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4245  001552  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4246  001556  0E23               	movlw	35
  4247  001558  6E11               	movwf	command_builder_add_char@data,c
  4248  00155A  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4249                           
  4250                           ;SlaveComm_PIC18.c: 410: command_builder_add_char( send_buffer, '!' );
  4251  00155E  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4252  001562  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4253  001566  0E21               	movlw	33
  4254  001568  6E11               	movwf	command_builder_add_char@data,c
  4255  00156A  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4256                           
  4257                           ;SlaveComm_PIC18.c: 411: command_builder_add_string( send_buffer, data1 );
  4258  00156E  C01C  F014         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  4259  001572  C01B  F013         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  4260  001576  C01E  F016         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  4261  00157A  C01D  F015         	movff	command_builder1@data1,command_builder_add_string@data_string
  4262  00157E  ECB9  F009         	call	_command_builder_add_string	;wreg free
  4263                           
  4264                           ;SlaveComm_PIC18.c: 412: command_builder_add_char( send_buffer, '*' );
  4265  001582  C01C  F010         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  4266  001586  C01B  F00F         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  4267  00158A  0E2A               	movlw	42
  4268  00158C  6E11               	movwf	command_builder_add_char@data,c
  4269  00158E  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4270  001592  0012               	return	
  4271  001594                     __end_of_command_builder1:
  4272                           	opt stack 0
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           intcon3	equ	0xFF0
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           indf1	equ	0xFE7
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           indf2	equ	0xFDF
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _com_command_setEnergyUsed *****************
  4293 ;; Defined at:
  4294 ;;		line 631 in file "SlaveComm_PIC18.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  4297 ;;		 -> communications@send_buffer(42), 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  newPowerAllo   12    0        unsigned char [12]
  4300 ;;  temp            7   46[COMRAM] unsigned char [7]
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4310 ;;      Params:         2       0       0       0       0       0       0
  4311 ;;      Locals:         7       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0
  4313 ;;      Totals:         9       0       0       0       0       0       0
  4314 ;;Total ram usage:        9 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    4
  4317 ;; This function calls:
  4318 ;;		_command_builder3
  4319 ;;		_ultoa
  4320 ;; This function is called by:
  4321 ;;		_resetCommunications
  4322 ;;		_process_data_parameters
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text27
  4327  00172E                     __ptext27:
  4328                           	opt stack 0
  4329  00172E                     _com_command_setEnergyUsed:
  4330                           	opt stack 24
  4331                           
  4332                           ;SlaveComm_PIC18.c: 633: char temp[7];
  4333                           ;SlaveComm_PIC18.c: 635: char newPowerAllocated[12];
  4334                           ;SlaveComm_PIC18.c: 636: ultoa(temp, meterEnergyUsed, 10);
  4335                           
  4336                           ;incstack = 0
  4337  00172E  0E00               	movlw	high com_command_setEnergyUsed@temp
  4338  001730  6E1D               	movwf	ultoa@buf+1,c
  4339  001732  0E2F               	movlw	low com_command_setEnergyUsed@temp
  4340  001734  6E1C               	movwf	ultoa@buf,c
  4341  001736  C03A  F01E         	movff	_meterEnergyUsed,ultoa@val
  4342  00173A  C03B  F01F         	movff	_meterEnergyUsed+1,ultoa@val+1
  4343  00173E  C03C  F020         	movff	_meterEnergyUsed+2,ultoa@val+2
  4344  001742  C03D  F021         	movff	_meterEnergyUsed+3,ultoa@val+3
  4345  001746  0E00               	movlw	0
  4346  001748  6E23               	movwf	ultoa@base+1,c
  4347  00174A  0E0A               	movlw	10
  4348  00174C  6E22               	movwf	ultoa@base,c
  4349  00174E  ECBC  F006         	call	_ultoa	;wreg free
  4350                           
  4351                           ;SlaveComm_PIC18.c: 638: command_builder3( send_buffer, "Set", "EnUsed", temp );
  4352  001752  C02E  F01C         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  4353  001756  C02D  F01B         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  4354  00175A  0E06               	movlw	high STR_2
  4355  00175C  6E1E               	movwf	command_builder3@data1+1,c
  4356  00175E  0E57               	movlw	low STR_2
  4357  001760  6E1D               	movwf	command_builder3@data1,c
  4358  001762  0E06               	movlw	high STR_4
  4359  001764  6E20               	movwf	command_builder3@data2+1,c
  4360  001766  0E17               	movlw	low STR_4
  4361  001768  6E1F               	movwf	command_builder3@data2,c
  4362  00176A  0E00               	movlw	high com_command_setEnergyUsed@temp
  4363  00176C  6E22               	movwf	command_builder3@data3+1,c
  4364  00176E  0E2F               	movlw	low com_command_setEnergyUsed@temp
  4365  001770  6E21               	movwf	command_builder3@data3,c
  4366  001772  ECD6  F008         	call	_command_builder3	;wreg free
  4367  001776  0012               	return	
  4368  001778                     __end_of_com_command_setEnergyUsed:
  4369                           	opt stack 0
  4370                           tblptru	equ	0xFF8
  4371                           tblptrh	equ	0xFF7
  4372                           tblptrl	equ	0xFF6
  4373                           tablat	equ	0xFF5
  4374                           prodh	equ	0xFF4
  4375                           prodl	equ	0xFF3
  4376                           intcon	equ	0xFF2
  4377                           intcon2	equ	0xFF1
  4378                           intcon3	equ	0xFF0
  4379                           postinc0	equ	0xFEE
  4380                           wreg	equ	0xFE8
  4381                           indf1	equ	0xFE7
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _ultoa *****************
  4390 ;; Defined at:
  4391 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ltoa.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  buf             2   27[COMRAM] PTR unsigned char 
  4394 ;;		 -> com_command_setEnergyUsed@temp(7), 
  4395 ;;  val             4   29[COMRAM] unsigned long 
  4396 ;;  base            2   33[COMRAM] int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  v               4   39[COMRAM] unsigned long 
  4399 ;;  c               1   43[COMRAM] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2   27[COMRAM] PTR unsigned char 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4409 ;;      Params:         8       0       0       0       0       0       0
  4410 ;;      Locals:         5       0       0       0       0       0       0
  4411 ;;      Temps:          4       0       0       0       0       0       0
  4412 ;;      Totals:        17       0       0       0       0       0       0
  4413 ;;Total ram usage:       17 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    2
  4416 ;; This function calls:
  4417 ;;		___lldiv
  4418 ;;		___llmod
  4419 ;; This function is called by:
  4420 ;;		_com_command_setEnergyUsed
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text28
  4425  000D78                     __ptext28:
  4426                           	opt stack 0
  4427  000D78                     _ultoa:
  4428                           	opt stack 25
  4429                           
  4430                           ;incstack = 0
  4431  000D78  C01E  F028         	movff	ultoa@val,ultoa@v
  4432  000D7C  C01F  F029         	movff	ultoa@val+1,ultoa@v+1
  4433  000D80  C020  F02A         	movff	ultoa@val+2,ultoa@v+2
  4434  000D84  C021  F02B         	movff	ultoa@val+3,ultoa@v+3
  4435  000D88                     l2767:
  4436  000D88  C028  F00F         	movff	ultoa@v,___lldiv@dividend
  4437  000D8C  C029  F010         	movff	ultoa@v+1,___lldiv@dividend+1
  4438  000D90  C02A  F011         	movff	ultoa@v+2,___lldiv@dividend+2
  4439  000D94  C02B  F012         	movff	ultoa@v+3,___lldiv@dividend+3
  4440  000D98  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4441  000D9C  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4442  000DA0  0E00               	movlw	0
  4443  000DA2  BE14               	btfsc	___lldiv@divisor+1,7,c
  4444  000DA4  0EFF               	movlw	-1
  4445  000DA6  6E15               	movwf	___lldiv@divisor+2,c
  4446  000DA8  6E16               	movwf	___lldiv@divisor+3,c
  4447  000DAA  ECFB  F009         	call	___lldiv	;wreg free
  4448  000DAE  C00F  F028         	movff	?___lldiv,ultoa@v
  4449  000DB2  C010  F029         	movff	?___lldiv+1,ultoa@v+1
  4450  000DB6  C011  F02A         	movff	?___lldiv+2,ultoa@v+2
  4451  000DBA  C012  F02B         	movff	?___lldiv+3,ultoa@v+3
  4452  000DBE  4A1C               	infsnz	ultoa@buf,f,c
  4453  000DC0  2A1D               	incf	ultoa@buf+1,f,c
  4454  000DC2  502B               	movf	ultoa@v+3,w,c
  4455  000DC4  1028               	iorwf	ultoa@v,w,c
  4456  000DC6  1029               	iorwf	ultoa@v+1,w,c
  4457  000DC8  102A               	iorwf	ultoa@v+2,w,c
  4458  000DCA  A4D8               	btfss	status,2,c
  4459  000DCC  D7DD               	goto	l2767
  4460  000DCE  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4461  000DD2  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4462  000DD6  0E00               	movlw	0
  4463  000DD8  6EDF               	movwf	indf2,c
  4464  000DDA  061C               	decf	ultoa@buf,f,c
  4465  000DDC  A0D8               	btfss	status,0,c
  4466  000DDE  061D               	decf	ultoa@buf+1,f,c
  4467  000DE0                     l2777:
  4468  000DE0  C01E  F00F         	movff	ultoa@val,___llmod@dividend
  4469  000DE4  C01F  F010         	movff	ultoa@val+1,___llmod@dividend+1
  4470  000DE8  C020  F011         	movff	ultoa@val+2,___llmod@dividend+2
  4471  000DEC  C021  F012         	movff	ultoa@val+3,___llmod@dividend+3
  4472  000DF0  C022  F013         	movff	ultoa@base,___llmod@divisor
  4473  000DF4  C023  F014         	movff	ultoa@base+1,___llmod@divisor+1
  4474  000DF8  0E00               	movlw	0
  4475  000DFA  BE14               	btfsc	___llmod@divisor+1,7,c
  4476  000DFC  0EFF               	movlw	-1
  4477  000DFE  6E15               	movwf	___llmod@divisor+2,c
  4478  000E00  6E16               	movwf	___llmod@divisor+3,c
  4479  000E02  EC3C  F00A         	call	___llmod	;wreg free
  4480  000E06  C00F  F024         	movff	?___llmod,??_ultoa
  4481  000E0A  C010  F025         	movff	?___llmod+1,??_ultoa+1
  4482  000E0E  C011  F026         	movff	?___llmod+2,??_ultoa+2
  4483  000E12  C012  F027         	movff	?___llmod+3,??_ultoa+3
  4484  000E16  5024               	movf	??_ultoa,w,c
  4485  000E18  6E2C               	movwf	ultoa@c,c
  4486  000E1A  C01E  F00F         	movff	ultoa@val,___lldiv@dividend
  4487  000E1E  C01F  F010         	movff	ultoa@val+1,___lldiv@dividend+1
  4488  000E22  C020  F011         	movff	ultoa@val+2,___lldiv@dividend+2
  4489  000E26  C021  F012         	movff	ultoa@val+3,___lldiv@dividend+3
  4490  000E2A  C022  F013         	movff	ultoa@base,___lldiv@divisor
  4491  000E2E  C023  F014         	movff	ultoa@base+1,___lldiv@divisor+1
  4492  000E32  0E00               	movlw	0
  4493  000E34  BE14               	btfsc	___lldiv@divisor+1,7,c
  4494  000E36  0EFF               	movlw	-1
  4495  000E38  6E15               	movwf	___lldiv@divisor+2,c
  4496  000E3A  6E16               	movwf	___lldiv@divisor+3,c
  4497  000E3C  ECFB  F009         	call	___lldiv	;wreg free
  4498  000E40  C00F  F01E         	movff	?___lldiv,ultoa@val
  4499  000E44  C010  F01F         	movff	?___lldiv+1,ultoa@val+1
  4500  000E48  C011  F020         	movff	?___lldiv+2,ultoa@val+2
  4501  000E4C  C012  F021         	movff	?___lldiv+3,ultoa@val+3
  4502  000E50  0E09               	movlw	9
  4503  000E52  642C               	cpfsgt	ultoa@c,c
  4504  000E54  D002               	goto	l971
  4505  000E56  0E07               	movlw	7
  4506  000E58  262C               	addwf	ultoa@c,f,c
  4507  000E5A                     l971:
  4508  000E5A  0E30               	movlw	48
  4509  000E5C  262C               	addwf	ultoa@c,f,c
  4510  000E5E  C01C  FFD9         	movff	ultoa@buf,fsr2l
  4511  000E62  C01D  FFDA         	movff	ultoa@buf+1,fsr2h
  4512  000E66  C02C  FFDF         	movff	ultoa@c,indf2
  4513  000E6A  061C               	decf	ultoa@buf,f,c
  4514  000E6C  A0D8               	btfss	status,0,c
  4515  000E6E  061D               	decf	ultoa@buf+1,f,c
  4516  000E70  5021               	movf	ultoa@val+3,w,c
  4517  000E72  101E               	iorwf	ultoa@val,w,c
  4518  000E74  101F               	iorwf	ultoa@val+1,w,c
  4519  000E76  1020               	iorwf	ultoa@val+2,w,c
  4520  000E78  B4D8               	btfsc	status,2,c
  4521                           
  4522                           ;	Return value of _ultoa is never used
  4523  000E7A  0012               	return	
  4524  000E7C  D7B1               	goto	l2777
  4525  000E7E                     __end_of_ultoa:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           intcon2	equ	0xFF1
  4535                           intcon3	equ	0xFF0
  4536                           postinc0	equ	0xFEE
  4537                           wreg	equ	0xFE8
  4538                           indf1	equ	0xFE7
  4539                           fsr1h	equ	0xFE2
  4540                           fsr1l	equ	0xFE1
  4541                           indf2	equ	0xFDF
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function ___llmod *****************
  4547 ;; Defined at:
  4548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  dividend        4   14[COMRAM] unsigned long 
  4551 ;;  divisor         4   18[COMRAM] unsigned long 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  counter         1   22[COMRAM] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  4   14[COMRAM] unsigned long 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4563 ;;      Params:         8       0       0       0       0       0       0
  4564 ;;      Locals:         1       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0
  4566 ;;      Totals:         9       0       0       0       0       0       0
  4567 ;;Total ram usage:        9 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_ultoa
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text29
  4578  001478                     __ptext29:
  4579                           	opt stack 0
  4580  001478                     ___llmod:
  4581                           	opt stack 25
  4582                           
  4583                           ;incstack = 0
  4584  001478  5016               	movf	___llmod@divisor+3,w,c
  4585  00147A  1013               	iorwf	___llmod@divisor,w,c
  4586  00147C  1014               	iorwf	___llmod@divisor+1,w,c
  4587  00147E  1015               	iorwf	___llmod@divisor+2,w,c
  4588  001480  B4D8               	btfsc	status,2,c
  4589  001482  D024               	goto	l919
  4590  001484  0E01               	movlw	1
  4591  001486  6E17               	movwf	___llmod@counter,c
  4592  001488  D006               	goto	l2699
  4593  00148A                     l2697:
  4594  00148A  90D8               	bcf	status,0,c
  4595  00148C  3613               	rlcf	___llmod@divisor,f,c
  4596  00148E  3614               	rlcf	___llmod@divisor+1,f,c
  4597  001490  3615               	rlcf	___llmod@divisor+2,f,c
  4598  001492  3616               	rlcf	___llmod@divisor+3,f,c
  4599  001494  2A17               	incf	___llmod@counter,f,c
  4600  001496                     l2699:
  4601  001496  AE16               	btfss	___llmod@divisor+3,7,c
  4602  001498  D7F8               	goto	l2697
  4603  00149A                     l2701:
  4604  00149A  5013               	movf	___llmod@divisor,w,c
  4605  00149C  5C0F               	subwf	___llmod@dividend,w,c
  4606  00149E  5014               	movf	___llmod@divisor+1,w,c
  4607  0014A0  5810               	subwfb	___llmod@dividend+1,w,c
  4608  0014A2  5015               	movf	___llmod@divisor+2,w,c
  4609  0014A4  5811               	subwfb	___llmod@dividend+2,w,c
  4610  0014A6  5016               	movf	___llmod@divisor+3,w,c
  4611  0014A8  5812               	subwfb	___llmod@dividend+3,w,c
  4612  0014AA  A0D8               	btfss	status,0,c
  4613  0014AC  D008               	goto	l2705
  4614  0014AE  5013               	movf	___llmod@divisor,w,c
  4615  0014B0  5E0F               	subwf	___llmod@dividend,f,c
  4616  0014B2  5014               	movf	___llmod@divisor+1,w,c
  4617  0014B4  5A10               	subwfb	___llmod@dividend+1,f,c
  4618  0014B6  5015               	movf	___llmod@divisor+2,w,c
  4619  0014B8  5A11               	subwfb	___llmod@dividend+2,f,c
  4620  0014BA  5016               	movf	___llmod@divisor+3,w,c
  4621  0014BC  5A12               	subwfb	___llmod@dividend+3,f,c
  4622  0014BE                     l2705:
  4623  0014BE  90D8               	bcf	status,0,c
  4624  0014C0  3216               	rrcf	___llmod@divisor+3,f,c
  4625  0014C2  3215               	rrcf	___llmod@divisor+2,f,c
  4626  0014C4  3214               	rrcf	___llmod@divisor+1,f,c
  4627  0014C6  3213               	rrcf	___llmod@divisor,f,c
  4628  0014C8  2E17               	decfsz	___llmod@counter,f,c
  4629  0014CA  D7E7               	goto	l2701
  4630  0014CC                     l919:
  4631  0014CC  C00F  F00F         	movff	___llmod@dividend,?___llmod
  4632  0014D0  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  4633  0014D4  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  4634  0014D8  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  4635  0014DC  0012               	return	
  4636  0014DE                     __end_of___llmod:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           intcon	equ	0xFF2
  4645                           intcon2	equ	0xFF1
  4646                           intcon3	equ	0xFF0
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           indf1	equ	0xFE7
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function ___lldiv *****************
  4658 ;; Defined at:
  4659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  dividend        4   14[COMRAM] unsigned long 
  4662 ;;  divisor         4   18[COMRAM] unsigned long 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  quotient        4   22[COMRAM] unsigned long 
  4665 ;;  counter         1   26[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  4   14[COMRAM] unsigned long 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4675 ;;      Params:         8       0       0       0       0       0       0
  4676 ;;      Locals:         5       0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0
  4678 ;;      Totals:        13       0       0       0       0       0       0
  4679 ;;Total ram usage:       13 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_powerPulseCheck
  4686 ;;		_ultoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text30
  4691  0013F6                     __ptext30:
  4692                           	opt stack 0
  4693  0013F6                     ___lldiv:
  4694                           	opt stack 28
  4695                           
  4696                           ;incstack = 0
  4697  0013F6  0E00               	movlw	0
  4698  0013F8  6E17               	movwf	___lldiv@quotient,c
  4699  0013FA  0E00               	movlw	0
  4700  0013FC  6E18               	movwf	___lldiv@quotient+1,c
  4701  0013FE  0E00               	movlw	0
  4702  001400  6E19               	movwf	___lldiv@quotient+2,c
  4703  001402  0E00               	movlw	0
  4704  001404  6E1A               	movwf	___lldiv@quotient+3,c
  4705  001406  5016               	movf	___lldiv@divisor+3,w,c
  4706  001408  1013               	iorwf	___lldiv@divisor,w,c
  4707  00140A  1014               	iorwf	___lldiv@divisor+1,w,c
  4708  00140C  1015               	iorwf	___lldiv@divisor+2,w,c
  4709  00140E  B4D8               	btfsc	status,2,c
  4710  001410  D02A               	goto	l909
  4711  001412  0E01               	movlw	1
  4712  001414  6E1B               	movwf	___lldiv@counter,c
  4713  001416  D006               	goto	l2679
  4714  001418                     l2677:
  4715  001418  90D8               	bcf	status,0,c
  4716  00141A  3613               	rlcf	___lldiv@divisor,f,c
  4717  00141C  3614               	rlcf	___lldiv@divisor+1,f,c
  4718  00141E  3615               	rlcf	___lldiv@divisor+2,f,c
  4719  001420  3616               	rlcf	___lldiv@divisor+3,f,c
  4720  001422  2A1B               	incf	___lldiv@counter,f,c
  4721  001424                     l2679:
  4722  001424  AE16               	btfss	___lldiv@divisor+3,7,c
  4723  001426  D7F8               	goto	l2677
  4724  001428                     l2681:
  4725  001428  90D8               	bcf	status,0,c
  4726  00142A  3617               	rlcf	___lldiv@quotient,f,c
  4727  00142C  3618               	rlcf	___lldiv@quotient+1,f,c
  4728  00142E  3619               	rlcf	___lldiv@quotient+2,f,c
  4729  001430  361A               	rlcf	___lldiv@quotient+3,f,c
  4730  001432  5013               	movf	___lldiv@divisor,w,c
  4731  001434  5C0F               	subwf	___lldiv@dividend,w,c
  4732  001436  5014               	movf	___lldiv@divisor+1,w,c
  4733  001438  5810               	subwfb	___lldiv@dividend+1,w,c
  4734  00143A  5015               	movf	___lldiv@divisor+2,w,c
  4735  00143C  5811               	subwfb	___lldiv@dividend+2,w,c
  4736  00143E  5016               	movf	___lldiv@divisor+3,w,c
  4737  001440  5812               	subwfb	___lldiv@dividend+3,w,c
  4738  001442  A0D8               	btfss	status,0,c
  4739  001444  D009               	goto	l2689
  4740  001446  5013               	movf	___lldiv@divisor,w,c
  4741  001448  5E0F               	subwf	___lldiv@dividend,f,c
  4742  00144A  5014               	movf	___lldiv@divisor+1,w,c
  4743  00144C  5A10               	subwfb	___lldiv@dividend+1,f,c
  4744  00144E  5015               	movf	___lldiv@divisor+2,w,c
  4745  001450  5A11               	subwfb	___lldiv@dividend+2,f,c
  4746  001452  5016               	movf	___lldiv@divisor+3,w,c
  4747  001454  5A12               	subwfb	___lldiv@dividend+3,f,c
  4748  001456  8017               	bsf	___lldiv@quotient,0,c
  4749  001458                     l2689:
  4750  001458  90D8               	bcf	status,0,c
  4751  00145A  3216               	rrcf	___lldiv@divisor+3,f,c
  4752  00145C  3215               	rrcf	___lldiv@divisor+2,f,c
  4753  00145E  3214               	rrcf	___lldiv@divisor+1,f,c
  4754  001460  3213               	rrcf	___lldiv@divisor,f,c
  4755  001462  2E1B               	decfsz	___lldiv@counter,f,c
  4756  001464  D7E1               	goto	l2681
  4757  001466                     l909:
  4758  001466  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  4759  00146A  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  4760  00146E  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  4761  001472  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  4762  001476  0012               	return	
  4763  001478                     __end_of___lldiv:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           intcon	equ	0xFF2
  4772                           intcon2	equ	0xFF1
  4773                           intcon3	equ	0xFF0
  4774                           postinc0	equ	0xFEE
  4775                           wreg	equ	0xFE8
  4776                           indf1	equ	0xFE7
  4777                           fsr1h	equ	0xFE2
  4778                           fsr1l	equ	0xFE1
  4779                           indf2	equ	0xFDF
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _command_builder3 *****************
  4785 ;; Defined at:
  4786 ;;		line 430 in file "SlaveComm_PIC18.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  send_buffer     2   26[COMRAM] PTR struct buffer
  4789 ;;		 -> communications@send_buffer(42), 
  4790 ;;  data1           2   28[COMRAM] PTR unsigned char 
  4791 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4792 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4793 ;;  data2           2   30[COMRAM] PTR unsigned char 
  4794 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4795 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4796 ;;  data3           2   32[COMRAM] PTR unsigned char 
  4797 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(7), 
  4798 ;;		 -> com_command_setPower@temp(7), STR_15(3), STR_11(4), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4810 ;;      Params:         8       0       0       0       0       0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0
  4813 ;;      Totals:         8       0       0       0       0       0       0
  4814 ;;Total ram usage:        8 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    3
  4817 ;; This function calls:
  4818 ;;		_command_builder_add_char
  4819 ;;		_command_builder_add_string
  4820 ;; This function is called by:
  4821 ;;		_process_data_parameters
  4822 ;;		_com_command_setPower
  4823 ;;		_com_command_setEnergyUsed
  4824 ;;		_com_command_setVersion
  4825 ;;		_com_command_setVolts
  4826 ;;		_com_command_setAmps
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text31
  4831  0011AC                     __ptext31:
  4832                           	opt stack 0
  4833  0011AC                     _command_builder3:
  4834                           	opt stack 24
  4835                           
  4836                           ;SlaveComm_PIC18.c: 432: command_builder_add_char( send_buffer, '#' );
  4837                           
  4838                           ;incstack = 0
  4839  0011AC  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4840  0011B0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4841  0011B4  0E23               	movlw	35
  4842  0011B6  6E11               	movwf	command_builder_add_char@data,c
  4843  0011B8  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4844                           
  4845                           ;SlaveComm_PIC18.c: 433: command_builder_add_char( send_buffer, '#' );
  4846  0011BC  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4847  0011C0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4848  0011C4  0E23               	movlw	35
  4849  0011C6  6E11               	movwf	command_builder_add_char@data,c
  4850  0011C8  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4851                           
  4852                           ;SlaveComm_PIC18.c: 434: command_builder_add_char( send_buffer, '!' );
  4853  0011CC  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4854  0011D0  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4855  0011D4  0E21               	movlw	33
  4856  0011D6  6E11               	movwf	command_builder_add_char@data,c
  4857  0011D8  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4858                           
  4859                           ;SlaveComm_PIC18.c: 435: command_builder_add_string( send_buffer, data1 );
  4860  0011DC  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4861  0011E0  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4862  0011E4  C01E  F016         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4863  0011E8  C01D  F015         	movff	command_builder3@data1,command_builder_add_string@data_string
  4864  0011EC  ECB9  F009         	call	_command_builder_add_string	;wreg free
  4865                           
  4866                           ;SlaveComm_PIC18.c: 436: command_builder_add_char( send_buffer, ';' );
  4867  0011F0  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4868  0011F4  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4869  0011F8  0E3B               	movlw	59
  4870  0011FA  6E11               	movwf	command_builder_add_char@data,c
  4871  0011FC  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4872                           
  4873                           ;SlaveComm_PIC18.c: 437: command_builder_add_string( send_buffer, data2 );
  4874  001200  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4875  001204  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4876  001208  C020  F016         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4877  00120C  C01F  F015         	movff	command_builder3@data2,command_builder_add_string@data_string
  4878  001210  ECB9  F009         	call	_command_builder_add_string	;wreg free
  4879                           
  4880                           ;SlaveComm_PIC18.c: 438: command_builder_add_char( send_buffer, ';' );
  4881  001214  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4882  001218  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4883  00121C  0E3B               	movlw	59
  4884  00121E  6E11               	movwf	command_builder_add_char@data,c
  4885  001220  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4886                           
  4887                           ;SlaveComm_PIC18.c: 439: command_builder_add_string( send_buffer, data3 );
  4888  001224  C01C  F014         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4889  001228  C01B  F013         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4890  00122C  C022  F016         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4891  001230  C021  F015         	movff	command_builder3@data3,command_builder_add_string@data_string
  4892  001234  ECB9  F009         	call	_command_builder_add_string	;wreg free
  4893                           
  4894                           ;SlaveComm_PIC18.c: 440: command_builder_add_char( send_buffer, '*' );
  4895  001238  C01C  F010         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4896  00123C  C01B  F00F         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4897  001240  0E2A               	movlw	42
  4898  001242  6E11               	movwf	command_builder_add_char@data,c
  4899  001244  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  4900  001248  0012               	return	
  4901  00124A                     __end_of_command_builder3:
  4902                           	opt stack 0
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           intcon2	equ	0xFF1
  4911                           intcon3	equ	0xFF0
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           indf1	equ	0xFE7
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           indf2	equ	0xFDF
  4918                           fsr2h	equ	0xFDA
  4919                           fsr2l	equ	0xFD9
  4920                           status	equ	0xFD8
  4921                           
  4922 ;; *************** function _command_builder_add_string *****************
  4923 ;; Defined at:
  4924 ;;		line 475 in file "SlaveComm_PIC18.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4927 ;;		 -> communications@send_buffer(42), 
  4928 ;;  data_string     2   20[COMRAM] PTR unsigned char 
  4929 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4930 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4931 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4932 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(7), STR_27(6), STR_26(4), 
  4933 ;;		 -> com_command_setPower@temp(7), STR_25(5), STR_24(5), STR_23(4), 
  4934 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4935 ;;		 -> STR_10(5), STR_9(4), 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  inx             2   24[COMRAM] int 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;		None               void
  4940 ;; Registers used:
  4941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4947 ;;      Params:         4       0       0       0       0       0       0
  4948 ;;      Locals:         2       0       0       0       0       0       0
  4949 ;;      Temps:          2       0       0       0       0       0       0
  4950 ;;      Totals:         8       0       0       0       0       0       0
  4951 ;;Total ram usage:        8 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    2
  4954 ;; This function calls:
  4955 ;;		_command_builder_add_char
  4956 ;; This function is called by:
  4957 ;;		_command_builder1
  4958 ;;		_command_builder3
  4959 ;;		_command_builder2
  4960 ;;		_command_builder4
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text32
  4965  001372                     __ptext32:
  4966                           	opt stack 0
  4967  001372                     _command_builder_add_string:
  4968                           	opt stack 24
  4969                           
  4970                           ;SlaveComm_PIC18.c: 477: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  4971                           
  4972                           ;incstack = 0
  4973  001372  0E00               	movlw	0
  4974  001374  6E1A               	movwf	command_builder_add_string@inx+1,c
  4975  001376  0E00               	movlw	0
  4976  001378  6E19               	movwf	command_builder_add_string@inx,c
  4977  00137A  D021               	goto	l2669
  4978  00137C                     l2665:
  4979                           
  4980                           ;SlaveComm_PIC18.c: 478: {
  4981                           ;SlaveComm_PIC18.c: 479: command_builder_add_char( send_buffer, data_string[inx] );
  4982  00137C  C014  F010         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4983  001380  C013  F00F         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4984  001384  C015  F017         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  4985  001388  C016  F018         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  4986  00138C  5019               	movf	command_builder_add_string@inx,w,c
  4987  00138E  2617               	addwf	??_command_builder_add_string,f,c
  4988  001390  501A               	movf	command_builder_add_string@inx+1,w,c
  4989  001392  2218               	addwfc	??_command_builder_add_string+1,f,c
  4990  001394  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  4991  001398  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4992  00139C  6AF8               	clrf	tblptru,c
  4993  00139E  0E05               	movlw	(high __ramtop+-1)
  4994  0013A0  64F7               	cpfsgt	tblptrh,c
  4995  0013A2  D003               	bra	u1927
  4996  0013A4  0008               	tblrd		*
  4997  0013A6  50F5               	movf	tablat,w,c
  4998  0013A8  D005               	bra	u1920
  4999  0013AA                     u1927:
  5000  0013AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5001  0013AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5002  0013B2  50E7               	movf	indf1,w,c
  5003  0013B4                     u1920:
  5004  0013B4  6E11               	movwf	command_builder_add_char@data,c
  5005  0013B6  ECCA  F00A         	call	_command_builder_add_char	;wreg free
  5006  0013BA  4A19               	infsnz	command_builder_add_string@inx,f,c
  5007  0013BC  2A1A               	incf	command_builder_add_string@inx+1,f,c
  5008  0013BE                     l2669:
  5009  0013BE  C015  F017         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  5010  0013C2  C016  F018         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  5011  0013C6  5019               	movf	command_builder_add_string@inx,w,c
  5012  0013C8  2617               	addwf	??_command_builder_add_string,f,c
  5013  0013CA  501A               	movf	command_builder_add_string@inx+1,w,c
  5014  0013CC  2218               	addwfc	??_command_builder_add_string+1,f,c
  5015  0013CE  C017  FFF6         	movff	??_command_builder_add_string,tblptrl
  5016  0013D2  C018  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  5017  0013D6  6AF8               	clrf	tblptru,c
  5018  0013D8  0E05               	movlw	(high __ramtop+-1)
  5019  0013DA  64F7               	cpfsgt	tblptrh,c
  5020  0013DC  D003               	bra	u1937
  5021  0013DE  0008               	tblrd		*
  5022  0013E0  50F5               	movf	tablat,w,c
  5023  0013E2  D005               	bra	u1930
  5024  0013E4                     u1937:
  5025  0013E4  CFF6 FFE1          	movff	tblptrl,fsr1l
  5026  0013E8  CFF7 FFE2          	movff	tblptrh,fsr1h
  5027  0013EC  50E7               	movf	indf1,w,c
  5028  0013EE                     u1930:
  5029  0013EE  0900               	iorlw	0
  5030  0013F0  B4D8               	btfsc	status,2,c
  5031                           
  5032                           ;SlaveComm_PIC18.c: 480: }
  5033                           ;SlaveComm_PIC18.c: 482: return;
  5034  0013F2  0012               	return	
  5035  0013F4  D7C3               	goto	l2665
  5036  0013F6                     __end_of_command_builder_add_string:
  5037                           	opt stack 0
  5038                           tblptru	equ	0xFF8
  5039                           tblptrh	equ	0xFF7
  5040                           tblptrl	equ	0xFF6
  5041                           tablat	equ	0xFF5
  5042                           prodh	equ	0xFF4
  5043                           prodl	equ	0xFF3
  5044                           intcon	equ	0xFF2
  5045                           intcon2	equ	0xFF1
  5046                           intcon3	equ	0xFF0
  5047                           postinc0	equ	0xFEE
  5048                           wreg	equ	0xFE8
  5049                           indf1	equ	0xFE7
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           indf2	equ	0xFDF
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _command_builder_add_char *****************
  5058 ;; Defined at:
  5059 ;;		line 462 in file "SlaveComm_PIC18.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  send_buffer     2   14[COMRAM] PTR struct buffer
  5062 ;;		 -> communications@send_buffer(42), 
  5063 ;;  data            1   16[COMRAM] unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5075 ;;      Params:         3       0       0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0       0       0
  5078 ;;      Totals:         4       0       0       0       0       0       0
  5079 ;;Total ram usage:        4 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_command_builder1
  5086 ;;		_command_builder3
  5087 ;;		_command_builder_add_string
  5088 ;;		_command_builder2
  5089 ;;		_command_builder4
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text33
  5094  001594                     __ptext33:
  5095                           	opt stack 0
  5096  001594                     _command_builder_add_char:
  5097                           	opt stack 24
  5098                           
  5099                           ;SlaveComm_PIC18.c: 464: send_buffer->data_buffer[send_buffer->write_position] = data;
  5100                           
  5101                           ;incstack = 0
  5102  001594  EE20 F028          	lfsr	2,40
  5103  001598  500F               	movf	command_builder_add_char@send_buffer,w,c
  5104  00159A  26D9               	addwf	fsr2l,f,c
  5105  00159C  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5106  00159E  22DA               	addwfc	fsr2h,f,c
  5107  0015A0  50DF               	movf	indf2,w,c
  5108  0015A2  6E12               	movwf	??_command_builder_add_char& (0+255),c
  5109  0015A4  5012               	movf	??_command_builder_add_char,w,c
  5110  0015A6  0D01               	mullw	1
  5111  0015A8  50F3               	movf	prodl,w,c
  5112  0015AA  240F               	addwf	command_builder_add_char@send_buffer,w,c
  5113  0015AC  6ED9               	movwf	fsr2l,c
  5114  0015AE  50F4               	movf	prodh,w,c
  5115  0015B0  2010               	addwfc	command_builder_add_char@send_buffer+1,w,c
  5116  0015B2  6EDA               	movwf	fsr2h,c
  5117  0015B4  C011  FFDF         	movff	command_builder_add_char@data,indf2
  5118                           
  5119                           ;SlaveComm_PIC18.c: 466: send_buffer->write_position++;
  5120  0015B8  EE20 F028          	lfsr	2,40
  5121  0015BC  500F               	movf	command_builder_add_char@send_buffer,w,c
  5122  0015BE  26D9               	addwf	fsr2l,f,c
  5123  0015C0  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5124  0015C2  22DA               	addwfc	fsr2h,f,c
  5125  0015C4  2ADF               	incf	indf2,f,c
  5126                           
  5127                           ;SlaveComm_PIC18.c: 467: if( send_buffer->write_position >= 40 )
  5128  0015C6  EE20 F028          	lfsr	2,40
  5129  0015CA  500F               	movf	command_builder_add_char@send_buffer,w,c
  5130  0015CC  26D9               	addwf	fsr2l,f,c
  5131  0015CE  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5132  0015D0  22DA               	addwfc	fsr2h,f,c
  5133  0015D2  0E27               	movlw	39
  5134  0015D4  64DF               	cpfsgt	indf2,c
  5135  0015D6  0012               	return	
  5136                           
  5137                           ;SlaveComm_PIC18.c: 468: {
  5138                           ;SlaveComm_PIC18.c: 469: send_buffer->write_position = 0;
  5139  0015D8  EE20 F028          	lfsr	2,40
  5140  0015DC  500F               	movf	command_builder_add_char@send_buffer,w,c
  5141  0015DE  26D9               	addwf	fsr2l,f,c
  5142  0015E0  5010               	movf	command_builder_add_char@send_buffer+1,w,c
  5143  0015E2  22DA               	addwfc	fsr2h,f,c
  5144  0015E4  0E00               	movlw	0
  5145  0015E6  6EDF               	movwf	indf2,c
  5146  0015E8  0012               	return	
  5147  0015EA                     __end_of_command_builder_add_char:
  5148                           	opt stack 0
  5149                           tblptru	equ	0xFF8
  5150                           tblptrh	equ	0xFF7
  5151                           tblptrl	equ	0xFF6
  5152                           tablat	equ	0xFF5
  5153                           prodh	equ	0xFF4
  5154                           prodl	equ	0xFF3
  5155                           intcon	equ	0xFF2
  5156                           intcon2	equ	0xFF1
  5157                           intcon3	equ	0xFF0
  5158                           postinc0	equ	0xFEE
  5159                           wreg	equ	0xFE8
  5160                           indf1	equ	0xFE7
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           indf2	equ	0xFDF
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _atol *****************
  5169 ;; Defined at:
  5170 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atol.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  s               2   26[COMRAM] PTR const unsigned char 
  5173 ;;		 -> process_data@parameters(50), 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  a               4   36[COMRAM] long 
  5176 ;;  c               1   40[COMRAM] unsigned char 
  5177 ;;  sign            1   35[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  4   26[COMRAM] long 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5187 ;;      Params:         4       0       0       0       0       0       0
  5188 ;;      Locals:         6       0       0       0       0       0       0
  5189 ;;      Temps:          5       0       0       0       0       0       0
  5190 ;;      Totals:        15       0       0       0       0       0       0
  5191 ;;Total ram usage:       15 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    2
  5194 ;; This function calls:
  5195 ;;		___lmul
  5196 ;;		_isdigit
  5197 ;; This function is called by:
  5198 ;;		_process_data_parameters
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text34
  5203  000E7E                     __ptext34:
  5204                           	opt stack 0
  5205  000E7E                     _atol:
  5206                           	opt stack 25
  5207  000E7E                     l600:
  5208  000E7E  C01B  FFD9         	movff	atol@s,fsr2l
  5209  000E82  C01C  FFDA         	movff	atol@s+1,fsr2h
  5210  000E86  50DF               	movf	indf2,w,c
  5211  000E88  6E29               	movwf	atol@c,c
  5212  000E8A  4A1B               	infsnz	atol@s,f,c
  5213  000E8C  2A1C               	incf	atol@s+1,f,c
  5214  000E8E  5029               	movf	atol@c,w,c
  5215  000E90  0A20               	xorlw	32
  5216  000E92  B4D8               	btfsc	status,2,c
  5217  000E94  D7F4               	goto	l600
  5218  000E96  5029               	movf	atol@c,w,c
  5219  000E98  0A09               	xorlw	9
  5220  000E9A  B4D8               	btfsc	status,2,c
  5221  000E9C  D7F0               	goto	l600
  5222  000E9E  0E00               	movlw	0
  5223  000EA0  6E25               	movwf	atol@a,c
  5224  000EA2  0E00               	movlw	0
  5225  000EA4  6E26               	movwf	atol@a+1,c
  5226  000EA6  0E00               	movlw	0
  5227  000EA8  6E27               	movwf	atol@a+2,c
  5228  000EAA  0E00               	movlw	0
  5229  000EAC  6E28               	movwf	atol@a+3,c
  5230  000EAE  0E00               	movlw	0
  5231  000EB0  6E24               	movwf	atol@sign,c
  5232  000EB2  5029               	movf	atol@c,w,c
  5233  000EB4  0A2D               	xorlw	45
  5234  000EB6  A4D8               	btfss	status,2,c
  5235  000EB8  D002               	goto	l2883
  5236  000EBA  2A24               	incf	atol@sign,f,c
  5237  000EBC  D02F               	goto	L3
  5238  000EBE                     l2883:
  5239  000EBE  5029               	movf	atol@c,w,c
  5240  000EC0  0A2B               	xorlw	43
  5241  000EC2  A4D8               	btfss	status,2,c
  5242  000EC4  D033               	goto	l2895
  5243  000EC6  D02A               	goto	L3
  5244  000EC8                     l2889:
  5245  000EC8  C025  F00F         	movff	atol@a,___lmul@multiplier
  5246  000ECC  C026  F010         	movff	atol@a+1,___lmul@multiplier+1
  5247  000ED0  C027  F011         	movff	atol@a+2,___lmul@multiplier+2
  5248  000ED4  C028  F012         	movff	atol@a+3,___lmul@multiplier+3
  5249  000ED8  0E0A               	movlw	10
  5250  000EDA  6E13               	movwf	___lmul@multiplicand,c
  5251  000EDC  0E00               	movlw	0
  5252  000EDE  6E14               	movwf	___lmul@multiplicand+1,c
  5253  000EE0  0E00               	movlw	0
  5254  000EE2  6E15               	movwf	___lmul@multiplicand+2,c
  5255  000EE4  0E00               	movlw	0
  5256  000EE6  6E16               	movwf	___lmul@multiplicand+3,c
  5257  000EE8  ECF5  F00A         	call	___lmul	;wreg free
  5258  000EEC  C00F  F01F         	movff	?___lmul,??_atol
  5259  000EF0  C010  F020         	movff	?___lmul+1,??_atol+1
  5260  000EF4  C011  F021         	movff	?___lmul+2,??_atol+2
  5261  000EF8  C012  F022         	movff	?___lmul+3,??_atol+3
  5262  000EFC  C029  F023         	movff	atol@c,??_atol+4
  5263  000F00  0ED0               	movlw	208
  5264  000F02  2623               	addwf	??_atol+4,f,c
  5265  000F04  5023               	movf	??_atol+4,w,c
  5266  000F06  241F               	addwf	??_atol,w,c
  5267  000F08  6E25               	movwf	atol@a,c
  5268  000F0A  0E00               	movlw	0
  5269  000F0C  2020               	addwfc	??_atol+1,w,c
  5270  000F0E  6E26               	movwf	atol@a+1,c
  5271  000F10  0E00               	movlw	0
  5272  000F12  2021               	addwfc	??_atol+2,w,c
  5273  000F14  6E27               	movwf	atol@a+2,c
  5274  000F16  0E00               	movlw	0
  5275  000F18  2022               	addwfc	??_atol+3,w,c
  5276  000F1A  6E28               	movwf	atol@a+3,c
  5277  000F1C                     L3:
  5278  000F1C  C01B  FFD9         	movff	atol@s,fsr2l
  5279  000F20  C01C  FFDA         	movff	atol@s+1,fsr2h
  5280  000F24  50DF               	movf	indf2,w,c
  5281  000F26  6E29               	movwf	atol@c,c
  5282  000F28  4A1B               	infsnz	atol@s,f,c
  5283  000F2A  2A1C               	incf	atol@s+1,f,c
  5284  000F2C                     l2895:
  5285  000F2C  5029               	movf	atol@c,w,c
  5286  000F2E  ECDA  F00C         	call	_isdigit
  5287  000F32  B0D8               	btfsc	status,0,c
  5288  000F34  D7C9               	goto	l2889
  5289  000F36  5024               	movf	atol@sign,w,c
  5290  000F38  B4D8               	btfsc	status,2,c
  5291  000F3A  D01A               	goto	l608
  5292  000F3C  C025  F01F         	movff	atol@a,??_atol
  5293  000F40  C026  F020         	movff	atol@a+1,??_atol+1
  5294  000F44  C027  F021         	movff	atol@a+2,??_atol+2
  5295  000F48  C028  F022         	movff	atol@a+3,??_atol+3
  5296  000F4C  1E1F               	comf	??_atol,f,c
  5297  000F4E  1E20               	comf	??_atol+1,f,c
  5298  000F50  1E21               	comf	??_atol+2,f,c
  5299  000F52  1E22               	comf	??_atol+3,f,c
  5300  000F54  2A1F               	incf	??_atol,f,c
  5301  000F56  0E00               	movlw	0
  5302  000F58  2220               	addwfc	??_atol+1,f,c
  5303  000F5A  2221               	addwfc	??_atol+2,f,c
  5304  000F5C  2222               	addwfc	??_atol+3,f,c
  5305  000F5E  C01F  F01B         	movff	??_atol,?_atol
  5306  000F62  C020  F01C         	movff	??_atol+1,?_atol+1
  5307  000F66  C021  F01D         	movff	??_atol+2,?_atol+2
  5308  000F6A  C022  F01E         	movff	??_atol+3,?_atol+3
  5309  000F6E  0012               	return	
  5310  000F70                     l608:
  5311  000F70  C025  F01B         	movff	atol@a,?_atol
  5312  000F74  C026  F01C         	movff	atol@a+1,?_atol+1
  5313  000F78  C027  F01D         	movff	atol@a+2,?_atol+2
  5314  000F7C  C028  F01E         	movff	atol@a+3,?_atol+3
  5315  000F80  0012               	return	
  5316  000F82                     __end_of_atol:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           intcon2	equ	0xFF1
  5326                           intcon3	equ	0xFF0
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           indf1	equ	0xFE7
  5330                           fsr1h	equ	0xFE2
  5331                           fsr1l	equ	0xFE1
  5332                           indf2	equ	0xFDF
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _isdigit *****************
  5338 ;; Defined at:
  5339 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  c               1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  c               1   16[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       0       0       0       0       0       0
  5354 ;;      Locals:         2       0       0       0       0       0       0
  5355 ;;      Temps:          1       0       0       0       0       0       0
  5356 ;;      Totals:         3       0       0       0       0       0       0
  5357 ;;Total ram usage:        3 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_atol
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text35
  5368  0019B4                     __ptext35:
  5369                           	opt stack 0
  5370  0019B4                     _isdigit:
  5371                           	opt stack 25
  5372                           
  5373                           ;incstack = 0
  5374                           ;isdigit@c stored from wreg
  5375  0019B4  6E11               	movwf	isdigit@c,c
  5376  0019B6  0E00               	movlw	0
  5377  0019B8  6E10               	movwf	_isdigit$2569,c
  5378  0019BA  0E3A               	movlw	58
  5379  0019BC  5C11               	subwf	isdigit@c,w,c
  5380  0019BE  B0D8               	btfsc	status,0,c
  5381  0019C0  D005               	goto	l2809
  5382  0019C2  0E2F               	movlw	47
  5383  0019C4  6411               	cpfsgt	isdigit@c,c
  5384  0019C6  D002               	goto	l2809
  5385  0019C8  0E01               	movlw	1
  5386  0019CA  6E10               	movwf	_isdigit$2569,c
  5387  0019CC                     l2809:
  5388  0019CC  C010  F00F         	movff	_isdigit$2569,??_isdigit
  5389  0019D0  300F               	rrcf	??_isdigit,w,c
  5390  0019D2  0012               	return	
  5391  0019D4                     __end_of_isdigit:
  5392                           	opt stack 0
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           intcon	equ	0xFF2
  5400                           intcon2	equ	0xFF1
  5401                           intcon3	equ	0xFF0
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           indf1	equ	0xFE7
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           indf2	equ	0xFDF
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function ___lmul *****************
  5413 ;; Defined at:
  5414 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  multiplier      4   14[COMRAM] unsigned long 
  5417 ;;  multiplicand    4   18[COMRAM] unsigned long 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  product         4   22[COMRAM] unsigned long 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  4   14[COMRAM] unsigned long 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5429 ;;      Params:         8       0       0       0       0       0       0
  5430 ;;      Locals:         4       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0
  5432 ;;      Totals:        12       0       0       0       0       0       0
  5433 ;;Total ram usage:       12 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    1
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_atol
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text36
  5444  0015EA                     __ptext36:
  5445                           	opt stack 0
  5446  0015EA                     ___lmul:
  5447                           	opt stack 25
  5448                           
  5449                           ;incstack = 0
  5450  0015EA  0E00               	movlw	0
  5451  0015EC  6E17               	movwf	___lmul@product,c
  5452  0015EE  0E00               	movlw	0
  5453  0015F0  6E18               	movwf	___lmul@product+1,c
  5454  0015F2  0E00               	movlw	0
  5455  0015F4  6E19               	movwf	___lmul@product+2,c
  5456  0015F6  0E00               	movlw	0
  5457  0015F8  6E1A               	movwf	___lmul@product+3,c
  5458  0015FA                     l2793:
  5459  0015FA  A00F               	btfss	___lmul@multiplier,0,c
  5460  0015FC  D008               	goto	l2797
  5461  0015FE  5013               	movf	___lmul@multiplicand,w,c
  5462  001600  2617               	addwf	___lmul@product,f,c
  5463  001602  5014               	movf	___lmul@multiplicand+1,w,c
  5464  001604  2218               	addwfc	___lmul@product+1,f,c
  5465  001606  5015               	movf	___lmul@multiplicand+2,w,c
  5466  001608  2219               	addwfc	___lmul@product+2,f,c
  5467  00160A  5016               	movf	___lmul@multiplicand+3,w,c
  5468  00160C  221A               	addwfc	___lmul@product+3,f,c
  5469  00160E                     l2797:
  5470  00160E  90D8               	bcf	status,0,c
  5471  001610  3613               	rlcf	___lmul@multiplicand,f,c
  5472  001612  3614               	rlcf	___lmul@multiplicand+1,f,c
  5473  001614  3615               	rlcf	___lmul@multiplicand+2,f,c
  5474  001616  3616               	rlcf	___lmul@multiplicand+3,f,c
  5475  001618  90D8               	bcf	status,0,c
  5476  00161A  3212               	rrcf	___lmul@multiplier+3,f,c
  5477  00161C  3211               	rrcf	___lmul@multiplier+2,f,c
  5478  00161E  3210               	rrcf	___lmul@multiplier+1,f,c
  5479  001620  320F               	rrcf	___lmul@multiplier,f,c
  5480  001622  5012               	movf	___lmul@multiplier+3,w,c
  5481  001624  100F               	iorwf	___lmul@multiplier,w,c
  5482  001626  1010               	iorwf	___lmul@multiplier+1,w,c
  5483  001628  1011               	iorwf	___lmul@multiplier+2,w,c
  5484  00162A  A4D8               	btfss	status,2,c
  5485  00162C  D7E6               	goto	l2793
  5486  00162E  C017  F00F         	movff	___lmul@product,?___lmul
  5487  001632  C018  F010         	movff	___lmul@product+1,?___lmul+1
  5488  001636  C019  F011         	movff	___lmul@product+2,?___lmul+2
  5489  00163A  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  5490  00163E  0012               	return	
  5491  001640                     __end_of___lmul:
  5492                           	opt stack 0
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           intcon2	equ	0xFF1
  5501                           intcon3	equ	0xFF0
  5502                           postinc0	equ	0xFEE
  5503                           wreg	equ	0xFE8
  5504                           indf1	equ	0xFE7
  5505                           fsr1h	equ	0xFE2
  5506                           fsr1l	equ	0xFE1
  5507                           indf2	equ	0xFDF
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _process_data_parameterize *****************
  5513 ;; Defined at:
  5514 ;;		line 256 in file "SlaveComm_PIC18.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  5517 ;;		 -> process_data@parameters(50), 
  5518 ;;  buffer_to_pa    2   22[COMRAM] PTR struct buffer
  5519 ;;		 -> communications@receive_buffer(42), 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;  inx             2   27[COMRAM] int 
  5522 ;;  parameter_po    1   30[COMRAM] unsigned char 
  5523 ;;  parameter_in    1   29[COMRAM] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;		None               void
  5526 ;; Registers used:
  5527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5533 ;;      Params:         4       0       0       0       0       0       0
  5534 ;;      Locals:         4       0       0       0       0       0       0
  5535 ;;      Temps:          3       0       0       0       0       0       0
  5536 ;;      Totals:        11       0       0       0       0       0       0
  5537 ;;Total ram usage:       11 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    2
  5540 ;; This function calls:
  5541 ;;		___wmul
  5542 ;; This function is called by:
  5543 ;;		_process_data
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text37
  5548  000978                     __ptext37:
  5549                           	opt stack 0
  5550  000978                     _process_data_parameterize:
  5551                           	opt stack 26
  5552                           
  5553                           ;SlaveComm_PIC18.c: 258: unsigned char parameter_position = 0;
  5554                           
  5555                           ;incstack = 0
  5556  000978  0E00               	movlw	0
  5557  00097A  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5558                           
  5559                           ;SlaveComm_PIC18.c: 259: unsigned char parameter_index = 0;
  5560  00097C  0E00               	movlw	0
  5561  00097E  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5562                           
  5563                           ;SlaveComm_PIC18.c: 268: for( int inx = 0; inx < 5; inx++ )
  5564  000980  0E00               	movlw	0
  5565  000982  6E1D               	movwf	process_data_parameterize@inx+1,c
  5566  000984  0E00               	movlw	0
  5567  000986  6E1C               	movwf	process_data_parameterize@inx,c
  5568  000988  501D               	movf	process_data_parameterize@inx+1,w,c
  5569  00098A  0A80               	xorlw	128
  5570  00098C  0F80               	addlw	-128
  5571  00098E  0E05               	movlw	5
  5572  000990  B4D8               	btfsc	status,2,c
  5573  000992  5C1C               	subwf	process_data_parameterize@inx,w,c
  5574  000994  B0D8               	btfsc	status,0,c
  5575  000996  D07C               	goto	l3009
  5576                           
  5577                           ;SlaveComm_PIC18.c: 269: {
  5578                           ;SlaveComm_PIC18.c: 270: parameters[inx][0] = '\0';
  5579  000998  C01C  F00F         	movff	process_data_parameterize@inx,___wmul@multiplier
  5580  00099C  C01D  F010         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5581  0009A0  0E00               	movlw	0
  5582  0009A2  6E12               	movwf	___wmul@multiplicand+1,c
  5583  0009A4  0E0A               	movlw	10
  5584  0009A6  6E11               	movwf	___wmul@multiplicand,c
  5585  0009A8  EC93  F00C         	call	___wmul	;wreg free
  5586  0009AC  500F               	movf	?___wmul,w,c
  5587  0009AE  2415               	addwf	process_data_parameterize@parameters,w,c
  5588  0009B0  6ED9               	movwf	fsr2l,c
  5589  0009B2  5010               	movf	?___wmul+1,w,c
  5590  0009B4  2016               	addwfc	process_data_parameterize@parameters+1,w,c
  5591  0009B6  6EDA               	movwf	fsr2h,c
  5592  0009B8  0E00               	movlw	0
  5593  0009BA  6EDF               	movwf	indf2,c
  5594  0009BC  4A1C               	infsnz	process_data_parameterize@inx,f,c
  5595  0009BE  2A1D               	incf	process_data_parameterize@inx+1,f,c
  5596  0009C0  D7E3               	goto	L4
  5597  0009C2                     l2985:
  5598                           
  5599                           ;SlaveComm_PIC18.c: 282: parameter_position = 0;
  5600  0009C2  0E00               	movlw	0
  5601  0009C4  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5602                           
  5603                           ;SlaveComm_PIC18.c: 283: parameter_index++;
  5604  0009C6  2A1E               	incf	process_data_parameterize@parameter_index,f,c
  5605                           
  5606                           ;SlaveComm_PIC18.c: 285: if( parameter_index >= 5 )
  5607  0009C8  0E04               	movlw	4
  5608  0009CA  641E               	cpfsgt	process_data_parameterize@parameter_index,c
  5609  0009CC  D05A               	goto	l3007
  5610                           
  5611                           ;SlaveComm_PIC18.c: 286: {
  5612                           ;SlaveComm_PIC18.c: 289: parameter_index = ( 5 - 1 );
  5613  0009CE  0E04               	movlw	4
  5614  0009D0  6E1E               	movwf	process_data_parameterize@parameter_index,c
  5615  0009D2  D057               	goto	l3007
  5616  0009D4                     l2993:
  5617                           
  5618                           ;SlaveComm_PIC18.c: 295: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5619  0009D4  EE20 F029          	lfsr	2,41
  5620  0009D8  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5621  0009DA  26D9               	addwf	fsr2l,f,c
  5622  0009DC  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5623  0009DE  22DA               	addwfc	fsr2h,f,c
  5624  0009E0  50DF               	movf	indf2,w,c
  5625  0009E2  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5626  0009E4  5019               	movf	??_process_data_parameterize,w,c
  5627  0009E6  0D01               	mullw	1
  5628  0009E8  50F3               	movf	prodl,w,c
  5629  0009EA  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5630  0009EC  6ED9               	movwf	fsr2l,c
  5631  0009EE  50F4               	movf	prodh,w,c
  5632  0009F0  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5633  0009F2  6EDA               	movwf	fsr2h,c
  5634  0009F4  501E               	movf	process_data_parameterize@parameter_index,w,c
  5635  0009F6  0D0A               	mullw	10
  5636  0009F8  C015  F01A         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5637  0009FC  C016  F01B         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5638  000A00  50F3               	movf	prodl,w,c
  5639  000A02  261A               	addwf	??_process_data_parameterize+1,f,c
  5640  000A04  50F4               	movf	prodh,w,c
  5641  000A06  221B               	addwfc	??_process_data_parameterize+2,f,c
  5642  000A08  501F               	movf	process_data_parameterize@parameter_position,w,c
  5643  000A0A  0D01               	mullw	1
  5644  000A0C  50F3               	movf	prodl,w,c
  5645  000A0E  241A               	addwf	??_process_data_parameterize+1,w,c
  5646  000A10  6EE1               	movwf	fsr1l,c
  5647  000A12  50F4               	movf	prodh,w,c
  5648  000A14  201B               	addwfc	??_process_data_parameterize+2,w,c
  5649  000A16  6EE2               	movwf	fsr1h,c
  5650  000A18  CFDF FFE7          	movff	indf2,indf1
  5651                           
  5652                           ;SlaveComm_PIC18.c: 296: parameter_position++;
  5653  000A1C  2A1F               	incf	process_data_parameterize@parameter_position,f,c
  5654                           
  5655                           ;SlaveComm_PIC18.c: 297: if( parameter_position >= 10 )
  5656  000A1E  0E09               	movlw	9
  5657  000A20  641F               	cpfsgt	process_data_parameterize@parameter_position,c
  5658  000A22  D002               	goto	l3001
  5659                           
  5660                           ;SlaveComm_PIC18.c: 298: {
  5661                           ;SlaveComm_PIC18.c: 301: parameter_position = ( 10 - 1 );
  5662  000A24  0E09               	movlw	9
  5663  000A26  6E1F               	movwf	process_data_parameterize@parameter_position,c
  5664  000A28                     l3001:
  5665                           
  5666                           ;SlaveComm_PIC18.c: 302: }
  5667                           ;SlaveComm_PIC18.c: 305: parameters[parameter_index][parameter_position] = '\0';
  5668  000A28  501E               	movf	process_data_parameterize@parameter_index,w,c
  5669  000A2A  0D0A               	mullw	10
  5670  000A2C  C015  F019         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5671  000A30  C016  F01A         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5672  000A34  50F3               	movf	prodl,w,c
  5673  000A36  2619               	addwf	??_process_data_parameterize,f,c
  5674  000A38  50F4               	movf	prodh,w,c
  5675  000A3A  221A               	addwfc	??_process_data_parameterize+1,f,c
  5676  000A3C  501F               	movf	process_data_parameterize@parameter_position,w,c
  5677  000A3E  0D01               	mullw	1
  5678  000A40  50F3               	movf	prodl,w,c
  5679  000A42  2419               	addwf	??_process_data_parameterize,w,c
  5680  000A44  6ED9               	movwf	fsr2l,c
  5681  000A46  50F4               	movf	prodh,w,c
  5682  000A48  201A               	addwfc	??_process_data_parameterize+1,w,c
  5683  000A4A  6EDA               	movwf	fsr2h,c
  5684  000A4C  0E00               	movlw	0
  5685  000A4E  6EDF               	movwf	indf2,c
  5686                           
  5687                           ;SlaveComm_PIC18.c: 306: break;
  5688  000A50  D018               	goto	l3007
  5689  000A52                     l3005:
  5690  000A52  EE20 F029          	lfsr	2,41
  5691  000A56  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5692  000A58  26D9               	addwf	fsr2l,f,c
  5693  000A5A  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5694  000A5C  22DA               	addwfc	fsr2h,f,c
  5695  000A5E  50DF               	movf	indf2,w,c
  5696  000A60  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5697  000A62  5019               	movf	??_process_data_parameterize,w,c
  5698  000A64  0D01               	mullw	1
  5699  000A66  50F3               	movf	prodl,w,c
  5700  000A68  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5701  000A6A  6ED9               	movwf	fsr2l,c
  5702  000A6C  50F4               	movf	prodh,w,c
  5703  000A6E  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5704  000A70  6EDA               	movwf	fsr2h,c
  5705  000A72  50DF               	movf	indf2,w,c
  5706                           
  5707                           ; Switch size 1, requested type "space"
  5708                           ; Number of cases is 2, Range of values is 33 to 59
  5709                           ; switch strategies available:
  5710                           ; Name         Instructions Cycles
  5711                           ; simple_byte            7     4 (average)
  5712                           ;	Chosen strategy is simple_byte
  5713  000A74  0A21               	xorlw	33	; case 33
  5714  000A76  B4D8               	btfsc	status,2,c
  5715  000A78  D004               	goto	l3007
  5716  000A7A  0A1A               	xorlw	26	; case 59
  5717  000A7C  B4D8               	btfsc	status,2,c
  5718  000A7E  D7A1               	goto	l2985
  5719  000A80  D7A9               	goto	l2993
  5720  000A82                     l3007:
  5721                           
  5722                           ;SlaveComm_PIC18.c: 309: buffer_to_parameterize->read_position++;
  5723  000A82  EE20 F029          	lfsr	2,41
  5724  000A86  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5725  000A88  26D9               	addwf	fsr2l,f,c
  5726  000A8A  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5727  000A8C  22DA               	addwfc	fsr2h,f,c
  5728  000A8E  2ADF               	incf	indf2,f,c
  5729  000A90                     l3009:
  5730  000A90  EE20 F029          	lfsr	2,41
  5731  000A94  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5732  000A96  26D9               	addwf	fsr2l,f,c
  5733  000A98  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5734  000A9A  22DA               	addwfc	fsr2h,f,c
  5735  000A9C  50DF               	movf	indf2,w,c
  5736  000A9E  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5737  000AA0  5019               	movf	??_process_data_parameterize,w,c
  5738  000AA2  0D01               	mullw	1
  5739  000AA4  50F3               	movf	prodl,w,c
  5740  000AA6  2417               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5741  000AA8  6ED9               	movwf	fsr2l,c
  5742  000AAA  50F4               	movf	prodh,w,c
  5743  000AAC  2018               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5744  000AAE  6EDA               	movwf	fsr2h,c
  5745  000AB0  50DF               	movf	indf2,w,c
  5746  000AB2  0A2A               	xorlw	42
  5747  000AB4  B4D8               	btfsc	status,2,c
  5748  000AB6  0012               	return	
  5749  000AB8  EE20 F029          	lfsr	2,41
  5750  000ABC  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5751  000ABE  26D9               	addwf	fsr2l,f,c
  5752  000AC0  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5753  000AC2  22DA               	addwfc	fsr2h,f,c
  5754  000AC4  50DF               	movf	indf2,w,c
  5755  000AC6  6E19               	movwf	??_process_data_parameterize& (0+255),c
  5756  000AC8  0E28               	movlw	40
  5757  000ACA  5C19               	subwf	??_process_data_parameterize,w,c
  5758  000ACC  B0D8               	btfsc	status,0,c
  5759  000ACE  0012               	return	
  5760  000AD0  EE20 F029          	lfsr	2,41
  5761  000AD4  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5762  000AD6  26D9               	addwf	fsr2l,f,c
  5763  000AD8  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5764  000ADA  22DA               	addwfc	fsr2h,f,c
  5765  000ADC  EE10 F028          	lfsr	1,40
  5766  000AE0  5017               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5767  000AE2  26E1               	addwf	fsr1l,f,c
  5768  000AE4  5018               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5769  000AE6  22E2               	addwfc	fsr1h,f,c
  5770  000AE8  50E7               	movf	indf1,w,c
  5771  000AEA  62DF               	cpfseq	indf2,c
  5772  000AEC  D7B2               	goto	l3005
  5773  000AEE  0012               	return	
  5774  000AF0                     __end_of_process_data_parameterize:
  5775                           	opt stack 0
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           intcon	equ	0xFF2
  5783                           intcon2	equ	0xFF1
  5784                           intcon3	equ	0xFF0
  5785                           postinc0	equ	0xFEE
  5786                           wreg	equ	0xFE8
  5787                           indf1	equ	0xFE7
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           indf2	equ	0xFDF
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function ___wmul *****************
  5796 ;; Defined at:
  5797 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  multiplier      2   14[COMRAM] unsigned int 
  5800 ;;  multiplicand    2   16[COMRAM] unsigned int 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  product         2   18[COMRAM] unsigned int 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2   14[COMRAM] unsigned int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, prodl, prodh
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5812 ;;      Params:         4       0       0       0       0       0       0
  5813 ;;      Locals:         2       0       0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0
  5815 ;;      Totals:         6       0       0       0       0       0       0
  5816 ;;Total ram usage:        6 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_process_data_parameterize
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text38
  5827  001926                     __ptext38:
  5828                           	opt stack 0
  5829  001926                     ___wmul:
  5830                           	opt stack 26
  5831                           
  5832                           ;incstack = 0
  5833  001926  500F               	movf	___wmul@multiplier,w,c
  5834  001928  0211               	mulwf	___wmul@multiplicand,c
  5835  00192A  CFF3 F013          	movff	prodl,___wmul@product
  5836  00192E  CFF4 F014          	movff	prodh,___wmul@product+1
  5837  001932  500F               	movf	___wmul@multiplier,w,c
  5838  001934  0212               	mulwf	___wmul@multiplicand+1,c
  5839  001936  50F3               	movf	prodl,w,c
  5840  001938  2614               	addwf	___wmul@product+1,f,c
  5841  00193A  5010               	movf	___wmul@multiplier+1,w,c
  5842  00193C  0211               	mulwf	___wmul@multiplicand,c
  5843  00193E  50F3               	movf	prodl,w,c
  5844  001940  2614               	addwf	___wmul@product+1,f,c
  5845  001942  C013  F00F         	movff	___wmul@product,?___wmul
  5846  001946  C014  F010         	movff	___wmul@product+1,?___wmul+1
  5847  00194A  0012               	return	
  5848  00194C                     __end_of___wmul:
  5849                           	opt stack 0
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           intcon	equ	0xFF2
  5857                           intcon2	equ	0xFF1
  5858                           intcon3	equ	0xFF0
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           indf1	equ	0xFE7
  5862                           fsr1h	equ	0xFE2
  5863                           fsr1l	equ	0xFE1
  5864                           indf2	equ	0xFDF
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _SPISlaveInit *****************
  5870 ;; Defined at:
  5871 ;;		line 672 in file "SlaveComm_PIC18.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;		None               void
  5878 ;; Registers used:
  5879 ;;		wreg, status,2
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5885 ;;      Params:         0       0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    1
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_communications
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text39
  5900  001692                     __ptext39:
  5901                           	opt stack 0
  5902  001692                     _SPISlaveInit:
  5903                           	opt stack 28
  5904                           
  5905                           ;SlaveComm_PIC18.c: 675: TRISAbits.TRISA0 = 0;
  5906                           
  5907                           ;incstack = 0
  5908  001692  9092               	bcf	3986,0,c	;volatile
  5909                           
  5910                           ;SlaveComm_PIC18.c: 676: TRISAbits.TRISA1 = 1;
  5911  001694  8292               	bsf	3986,1,c	;volatile
  5912                           
  5913                           ;SlaveComm_PIC18.c: 678: TRISCbits.TRISC3 = 0;
  5914  001696  9694               	bcf	3988,3,c	;volatile
  5915                           
  5916                           ;SlaveComm_PIC18.c: 679: TRISCbits.TRISC5 = 0;
  5917  001698  9A94               	bcf	3988,5,c	;volatile
  5918                           
  5919                           ;SlaveComm_PIC18.c: 680: TRISCbits.TRISC6 = 0;
  5920  00169A  9C94               	bcf	3988,6,c	;volatile
  5921                           
  5922                           ;SlaveComm_PIC18.c: 681: TRISCbits.TRISC7 = 0;
  5923  00169C  9E94               	bcf	3988,7,c	;volatile
  5924                           
  5925                           ;SlaveComm_PIC18.c: 682: ANSELAbits.ANSA1 = 0b0;
  5926  00169E  010F               	movlb	15	; () banked
  5927  0016A0  9338               	bcf	56,1,b	;volatile
  5928                           
  5929                           ;SlaveComm_PIC18.c: 684: LATCbits.LATC6 = 1;
  5930  0016A2  8C8B               	bsf	3979,6,c	;volatile
  5931                           
  5932                           ;SlaveComm_PIC18.c: 685: LATCbits.LATC3 = 1;
  5933  0016A4  868B               	bsf	3979,3,c	;volatile
  5934                           
  5935                           ;SlaveComm_PIC18.c: 686: LATCbits.LATC5 = 1;
  5936  0016A6  8A8B               	bsf	3979,5,c	;volatile
  5937                           
  5938                           ;SlaveComm_PIC18.c: 687: LATCbits.LATC7 = 1;
  5939  0016A8  8E8B               	bsf	3979,7,c	;volatile
  5940                           
  5941                           ;SlaveComm_PIC18.c: 690: SSP2CON1bits.SSPEN = 0;
  5942  0016AA  9A6C               	bcf	3948,5,c	;volatile
  5943                           
  5944                           ;SlaveComm_PIC18.c: 692: ANSELBbits.ANSB0 = 0b0;
  5945  0016AC  010F               	movlb	15	; () banked
  5946  0016AE  9139               	bcf	57,0,b	;volatile
  5947                           
  5948                           ;SlaveComm_PIC18.c: 693: ANSELBbits.ANSB1 = 0b0;
  5949  0016B0  010F               	movlb	15	; () banked
  5950  0016B2  9339               	bcf	57,1,b	;volatile
  5951                           
  5952                           ;SlaveComm_PIC18.c: 694: ANSELBbits.ANSB2 = 0b0;
  5953  0016B4  010F               	movlb	15	; () banked
  5954  0016B6  9539               	bcf	57,2,b	;volatile
  5955                           
  5956                           ;SlaveComm_PIC18.c: 695: ANSELBbits.ANSB3 = 0b0;
  5957  0016B8  010F               	movlb	15	; () banked
  5958  0016BA  9739               	bcf	57,3,b	;volatile
  5959                           
  5960                           ;SlaveComm_PIC18.c: 697: TRISBbits.RB0 = 0b1;
  5961  0016BC  8093               	bsf	3987,0,c	;volatile
  5962                           
  5963                           ;SlaveComm_PIC18.c: 698: TRISBbits.RB1 = 0b1;
  5964  0016BE  8293               	bsf	3987,1,c	;volatile
  5965                           
  5966                           ;SlaveComm_PIC18.c: 699: TRISBbits.RB2 = 0b1;
  5967  0016C0  8493               	bsf	3987,2,c	;volatile
  5968                           
  5969                           ;SlaveComm_PIC18.c: 700: TRISBbits.RB3 = 0b0;
  5970  0016C2  9693               	bcf	3987,3,c	;volatile
  5971                           
  5972                           ;SlaveComm_PIC18.c: 702: SSP2STATbits.SMP = 0;
  5973  0016C4  9E6D               	bcf	3949,7,c	;volatile
  5974                           
  5975                           ;SlaveComm_PIC18.c: 703: SSP2STATbits.CKE = 1;
  5976  0016C6  8C6D               	bsf	3949,6,c	;volatile
  5977                           
  5978                           ;SlaveComm_PIC18.c: 705: SSP2CON1bits.WCOL = 0;
  5979  0016C8  9E6C               	bcf	3948,7,c	;volatile
  5980                           
  5981                           ;SlaveComm_PIC18.c: 706: SSP2CON1bits.SSPOV = 0;
  5982  0016CA  9C6C               	bcf	3948,6,c	;volatile
  5983                           
  5984                           ;SlaveComm_PIC18.c: 707: SSP2CON1bits.SSPEN = 0;
  5985  0016CC  9A6C               	bcf	3948,5,c	;volatile
  5986                           
  5987                           ;SlaveComm_PIC18.c: 708: SSP2CON1bits.CKP = 1;
  5988  0016CE  886C               	bsf	3948,4,c	;volatile
  5989                           
  5990                           ; BSR set to: 15
  5991                           ;SlaveComm_PIC18.c: 709: SSP2CON1bits.SSPM = 0b0100;
  5992  0016D0  506C               	movf	3948,w,c	;volatile
  5993  0016D2  0BF0               	andlw	-16
  5994  0016D4  0904               	iorlw	4
  5995  0016D6  6E6C               	movwf	3948,c	;volatile
  5996                           
  5997                           ;SlaveComm_PIC18.c: 712: SSP2CON3 = 0x00;
  5998  0016D8  0E00               	movlw	0
  5999  0016DA  6E69               	movwf	3945,c	;volatile
  6000                           
  6001                           ; BSR set to: 15
  6002                           ;SlaveComm_PIC18.c: 713: SSP2CON3bits.BOEN = 0b0;
  6003  0016DC  9869               	bcf	3945,4,c	;volatile
  6004                           
  6005                           ; BSR set to: 15
  6006                           ;SlaveComm_PIC18.c: 715: SSP2CON1bits.SSPEN = 1;
  6007  0016DE  8A6C               	bsf	3948,5,c	;volatile
  6008  0016E0  0012               	return	
  6009  0016E2                     __end_of_SPISlaveInit:
  6010                           	opt stack 0
  6011                           tblptru	equ	0xFF8
  6012                           tblptrh	equ	0xFF7
  6013                           tblptrl	equ	0xFF6
  6014                           tablat	equ	0xFF5
  6015                           prodh	equ	0xFF4
  6016                           prodl	equ	0xFF3
  6017                           intcon	equ	0xFF2
  6018                           intcon2	equ	0xFF1
  6019                           intcon3	equ	0xFF0
  6020                           postinc0	equ	0xFEE
  6021                           wreg	equ	0xFE8
  6022                           indf1	equ	0xFE7
  6023                           fsr1h	equ	0xFE2
  6024                           fsr1l	equ	0xFE1
  6025                           indf2	equ	0xFDF
  6026                           fsr2h	equ	0xFDA
  6027                           fsr2l	equ	0xFD9
  6028                           status	equ	0xFD8
  6029                           
  6030 ;; *************** function _Timer0_ISR *****************
  6031 ;; Defined at:
  6032 ;;		line 199 in file "Current_Sense_Main.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;		None               void
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6046 ;;      Params:         0       0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0
  6048 ;;      Temps:         14       0       0       0       0       0       0
  6049 ;;      Totals:        14       0       0       0       0       0       0
  6050 ;;Total ram usage:       14 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		Interrupt level 2
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	intcode
  6060  000008                     __pintcode:
  6061                           	opt stack 0
  6062  000008                     _Timer0_ISR:
  6063                           	opt stack 23
  6064                           
  6065                           ; BSR set to: 15
  6066                           ;incstack = 0
  6067  000008  CFFA F001          	movff	pclath,??_Timer0_ISR
  6068  00000C  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  6069  000010  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  6070  000014  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  6071  000018  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  6072  00001C  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  6073  000020  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  6074  000024  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  6075  000028  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  6076  00002C  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  6077  000030  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  6078  000034  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  6079  000038  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  6080  00003C  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  6081                           
  6082                           ;Current_Sense_Main.c: 202: INTCONbits.TMR0IF = 0;
  6083  000040  94F2               	bcf	intcon,2,c	;volatile
  6084                           
  6085                           ;Current_Sense_Main.c: 204: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  6086  000042  0EFC               	movlw	252
  6087  000044  6ED7               	movwf	4055,c	;volatile
  6088                           
  6089                           ;Current_Sense_Main.c: 205: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  6090  000046  0E18               	movlw	24
  6091  000048  6ED6               	movwf	4054,c	;volatile
  6092                           
  6093                           ;Current_Sense_Main.c: 207: timerCountHF++;
  6094  00004A  0E01               	movlw	1
  6095  00004C  264A               	addwf	_timerCountHF,f,c	;volatile
  6096  00004E  0E00               	movlw	0
  6097  000050  224B               	addwfc	_timerCountHF+1,f,c	;volatile
  6098  000052  224C               	addwfc	_timerCountHF+2,f,c	;volatile
  6099  000054  224D               	addwfc	_timerCountHF+3,f,c	;volatile
  6100                           
  6101                           ;Current_Sense_Main.c: 208: timerCountLF++;
  6102  000056  0E01               	movlw	1
  6103  000058  264E               	addwf	_timerCountLF,f,c	;volatile
  6104  00005A  0E00               	movlw	0
  6105  00005C  224F               	addwfc	_timerCountLF+1,f,c	;volatile
  6106  00005E  2250               	addwfc	_timerCountLF+2,f,c	;volatile
  6107  000060  2251               	addwfc	_timerCountLF+3,f,c	;volatile
  6108                           
  6109                           ;Current_Sense_Main.c: 210: return;
  6110  000062  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  6111  000066  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  6112  00006A  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  6113  00006E  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  6114  000072  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  6115  000076  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  6116  00007A  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  6117  00007E  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  6118  000082  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  6119  000086  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  6120  00008A  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  6121  00008E  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  6122  000092  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  6123  000096  C001  FFFA         	movff	??_Timer0_ISR,pclath
  6124  00009A  0011               	retfie		f
  6125  00009C                     __end_of_Timer0_ISR:
  6126                           	opt stack 0
  6127                           pclatu	equ	0xFFB
  6128                           pclath	equ	0xFFA
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           intcon2	equ	0xFF1
  6137                           intcon3	equ	0xFF0
  6138                           postinc0	equ	0xFEE
  6139                           fsr0h	equ	0xFEA
  6140                           fsr0l	equ	0xFE9
  6141                           wreg	equ	0xFE8
  6142                           indf1	equ	0xFE7
  6143                           fsr1h	equ	0xFE2
  6144                           fsr1l	equ	0xFE1
  6145                           indf2	equ	0xFDF
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           pclatu	equ	0xFFB
  6150                           pclath	equ	0xFFA
  6151                           tblptru	equ	0xFF8
  6152                           tblptrh	equ	0xFF7
  6153                           tblptrl	equ	0xFF6
  6154                           tablat	equ	0xFF5
  6155                           prodh	equ	0xFF4
  6156                           prodl	equ	0xFF3
  6157                           intcon	equ	0xFF2
  6158                           intcon2	equ	0xFF1
  6159                           intcon3	equ	0xFF0
  6160                           postinc0	equ	0xFEE
  6161                           fsr0h	equ	0xFEA
  6162                           fsr0l	equ	0xFE9
  6163                           wreg	equ	0xFE8
  6164                           indf1	equ	0xFE7
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           indf2	equ	0xFDF
  6168                           fsr2h	equ	0xFDA
  6169                           fsr2l	equ	0xFD9
  6170                           status	equ	0xFD8
  6171                           
  6172                           	psect	rparam
  6173  0000                     pclatu	equ	0xFFB
  6174                           pclath	equ	0xFFA
  6175                           tblptru	equ	0xFF8
  6176                           tblptrh	equ	0xFF7
  6177                           tblptrl	equ	0xFF6
  6178                           tablat	equ	0xFF5
  6179                           prodh	equ	0xFF4
  6180                           prodl	equ	0xFF3
  6181                           intcon	equ	0xFF2
  6182                           intcon2	equ	0xFF1
  6183                           intcon3	equ	0xFF0
  6184                           postinc0	equ	0xFEE
  6185                           fsr0h	equ	0xFEA
  6186                           fsr0l	equ	0xFE9
  6187                           wreg	equ	0xFE8
  6188                           indf1	equ	0xFE7
  6189                           fsr1h	equ	0xFE2
  6190                           fsr1l	equ	0xFE1
  6191                           indf2	equ	0xFDF
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      81
    BANK0           160     63     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setEnergyUsed@temp(COMRAM[7]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    utoa@buf	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setEnergyUsed@temp(COMRAM[7]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> com_command_setPower@temp(COMRAM[7]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[7]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 7
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(COMRAM[7]), 
		 -> com_command_setPower@temp(COMRAM[7]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK0[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _powerPulseCheck->___lldiv
    _init->_initMCPFout
    _initMCPFout->_delayMS10
    _communications->_resetCommunications
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _utoa->___lwdiv
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_communications
    _communications->_process_data
    _process_data->_process_data_parameters

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   74166
                                             61 BANK0      2     2      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                  _pulseFoutPassThru
 ---------------------------------------------------------------------------------
 (1) _pulseFoutPassThru                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      9     9      0     906
                                             27 COMRAM     9     9      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     263
                             _initIO
                _initInterruptsClear
                        _initMCPFout
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initMCPFout                                          1     1      0     263
                                             19 COMRAM     1     1      0
                          _delayMS10
 ---------------------------------------------------------------------------------
 (3) _delayMS10                                            5     3      2     263
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _initInterruptsClear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _communications                                       3     3      0   72666
                                             58 BANK0      3     3      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     390
                                             16 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   34336
                                             53 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   10101
                                             34 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                 9     7      2   11814
                                             34 COMRAM     9     7      2
                   _command_builder3
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1633
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     362
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     501
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     548
                                             17 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     136
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   37358
                                              3 BANK0     55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              7     3      4   35821
                                             53 COMRAM     4     0      4
                                              0 BANK0      3     3      0
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    3167
                                             25 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     957
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    8550
                                             30 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    8129
                                             26 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           21    19      2   12136
                                             44 COMRAM     9     7      2
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               17     9      8    1890
                                             27 COMRAM    17     9      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     362
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     761
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   10005
                                             26 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    4637
                                             18 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    3176
                                             14 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                15    11      4     990
                                             26 COMRAM    15    11      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     356
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1201
                                             20 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     362
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _utoa
           ___lwdiv
           ___lwmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initIO
     _initInterruptsClear
     _initMCPFout
       _delayMS10
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
   _pulseFoutPassThru

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3F      93       4       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      51       1       85.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E4       9        0.0%
DATA                 0      0      E4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 09 21:12:22 2017

                                       _SPISlaveInit 1692                                  ___wmul@multiplicand 0011  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l121 19AC                                                  l123 19A8  
                                                l142 0BF2                                                  l148 1892  
                                                l600 0E7E                                                  l264 102C  
                                                l284 1104                                                  l391 18FC  
                                                l608 0F70                                                  l909 1466  
                                                l919 14CC                                                  l971 0E5A  
                                                l878 1188                                                  l986 1688  
                                                l996 17F2                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0038  
                                       ?_initMCPFout 0001                                                 l3001 0A28  
                                               l3005 0A52                                                 l3021 068E  
                                               l3007 0A82                                                 l3009 0A90  
                                               l3033 0730                                                 l3045 07DE  
                                               l3071 0942                                                 l3063 08DE  
                                               l3055 087A                                                 l3049 0828  
                                               l3209 1098                                                 l3241 130C  
                                               l3067 0910                                                 l3059 08AC  
                                               l3075 0972                                                 l3219 10F2  
                                               l3331 0B66                                                 l2701 149A  
                                               l3181 12A6                                                 l3183 12B2  
                                               l3351 0BFA                                                 l2705 14BE  
                                               l3177 128A                                                 l3089 19EA  
                                               l3249 136E                                                 l3281 0FC4  
                                               l3345 0BCE                                                 l3329 0B62  
                                               l2731 0C46                                                 l3179 1298  
                                               l3187 12BC                                                 l2741 0CB8  
                                               l3197 1052                                                 l2821 165E  
                                               l3357 0C2A                                                 l2735 0C82  
                                               l2743 0CBC                                                 l2831 167E  
                                               l2823 1662                                                 l3287 0FFA  
                                               l3279 0FB0                                                 l3391 152E  
                                               l2809 19CC                                                 l2665 137C  
                                               l2681 1428                                                 l2761 0D6E  
                                               l2841 17D0                                                 l3297 1040  
                                               l3289 100E                                                 l2755 0D32  
                                               l2819 1656                                                 l2843 17D4  
                                               l3387 1524                                                 l2669 13BE  
                                               l2677 1418                                                 l2749 0CF8  
                                               l2909 1110                                                 l2679 1424  
                                               l2767 0D88                                                 l2847 17E8  
                                               l2839 17C8                                                 l2919 114A  
                                               l2793 15FA                                                 l2689 1458  
                                               l2697 148A                                                 l2777 0DE0  
                                               l2945 1880                                                 l2883 0EBE  
                                               l2699 1496                                                 l2797 160E  
                                               l2895 0F2C                                                 l2993 09D4  
                                               l2985 09C2                                                 l2889 0EC8  
                                               l2969 18F8                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2230 18D0  
                                               u2236 18D2                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 u1920 13B4  
                                               _PIE2 000FA0                                                 _IPR4 000F7C  
                                               _PIE3 000FA3                                                 _IPR5 000F7F  
                                               u1930 13EE                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1927 13AA  
                                               u1937 13E4                                                 u2867 1846  
                                               u2877 185C                                                 u2887 1886  
                                               u2897 1252                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0E7E                                                 _main 14DE  
                                               _init 1A38                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr0l 000FE9  
                                               fsr2h 000FDA                                                 indf1 000FE7  
                                               fsr1l 000FE1                                                 indf2 000FDF  
                                               fsr2l 000FD9                                                 _utoa 1108  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 001E  
                                               pclat 000FFA                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 009C  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 00F0  
                      __size_of_com_command_setPower 0042                                       _communications 0F82  
                                              ?_atol 001B                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 1478                                                ?_utoa 0016  
                                    __end_of___llmod 14DE                                       __CFG_DEBUG$OFF 000000  
                                    __end_of___lwdiv 1692                                      __end_of___lwmod 17FC  
                                  ?_command_builder1 001B                                    ?_command_builder3 001B  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                _initInterruptsClear 16E2                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0013                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 0017                                   ??_command_builder1 001F  
                                 ??_command_builder3 0023                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0038                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 1A22  
                                   ?_powerPulseCheck 0001                          powerPulseCheck@meterWattsHF 0023  
                        powerPulseCheck@meterWattsLF 0020                                      __end_of_isdigit 19D4  
                                 __CFG_MCLRE$EXTMCLR 000000                                                atol@a 0025  
                                              atol@c 0029                                                atol@s 001B  
                                              _ultoa 0D78                                                tablat 000FF5  
                                              utoa@c 001E                                                utoa@v 001C  
                                              status 000FD8                                      __end_of_strcmp2 0D78  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 0019                 com_command_setEnergyUsed@send_buffer 002D  
                               ?_initInterruptsClear 0001                        command_builder_add_string@inx 0019  
                                    __initialization 1970                                         __end_of_atol 0F82  
                                       __end_of_main 153E                                         __end_of_init 1A4A  
                             __end_of_communications 1046                                         __end_of_utoa 11AC  
                             _com_command_setVersion 1900                  __size_of_command_builder_add_string 0084  
                                   _SPI_receive_data 18D8                         command_builder_add_char@data 0011  
                                             ??_atol 001F                                               ??_main 003A  
                                             ??_init 0015                                        _SPI_send_data 19D4  
                                             ??_utoa 001C                                        __activetblptr 000002  
                            _process_data_parameters 0660                                     receive_data@data 0015  
                                   ___llmod@dividend 000F                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 001C                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0010  
                              ??_initInterruptsClear 000F                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 15EA  
                                             ___wmul 1926                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 0017  
                                          ??___llmod 0017                                            ??___lwdiv 0013  
                                          ??___lwmod 0013                                               _initIO 194C  
                                             clear_0 1976                                               clear_1 1982  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 002D  
                                          ??_initOSC 000F                            _process_data_parameterize 0978  
                                          ??_isdigit 000F                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 0025                                               ultoa@v 0028  
                                          ??_strcmp2 0013                                     __end_of_strmatch 18D8  
                                      ?_receive_data 0012                                           __accesstop 0060  
                            __end_of__initialization 1988                                 __size_of_initMCPFout 0038  
                    com_command_setPower@send_buffer 0023                                    SPI_send_data@data 000F  
                                     __pcstackCOMRAM 0001                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0012                                        __end_of_ultoa 0E7E  
                          ??_process_data_parameters 00B4                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0015                   __end_of_command_builder_add_string 13F6  
                         _command_builder_add_string 1372                                              ??_ultoa 0024  
                                         __pbssBANK0 0060                                       ??_receive_data 0014  
                                    __CFG_PLLCFG$OFF 000000                                         strcmp2@match 0016  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                    _pulseFoutPassThru 1992  
                                            ?___lmul 000F                                              ?___wmul 000F  
                                 __CFG_CCP3MX$PORTB5 000000                                   ?_pulseFoutPassThru 0001  
                                    ??_SPI_send_data 000F                                   __size_of_send_data 0090  
                                            ?_initIO 0001  process_data_parameters@end_of_transmission_received 00B6  
         communications@end_of_transmission_received 0043                                       ___lmul@product 0017  
                        __end_of_resetCommunications 12E2                                      _meterEnergyUsed 003A  
                                ??_pulseFoutPassThru 000F                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 17BA  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1A22  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 1594  
                                  __end_of_delayMS10 18A8                      __end_of_process_data_parameters 0978  
                           __end_of_SPI_receive_data 1900                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E                            __end_of_pulseFoutPassThru 19B4  
    process_data_parameterize@buffer_to_parameterize 0017                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0023  
                                            __Lparam 0000                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 001E                                              ___lldiv 13F6  
                                    __size_of___wmul 0026                                              ___llmod 1478  
                                            ___lwdiv 1640                                              ___lwmod 17BA  
                                       __psmallconst 0600                                 SPI_receive_data@data 000F  
                                    __size_of_initIO 0024                                              __pcinit 1970  
                                            __ramtop 0600                                            ?_strmatch 001A  
                                            __ptext0 14DE                                              __ptext1 1992  
                                            __ptext2 0AF0                                              __ptext3 19F2  
                                            __ptext4 1A38                                              __ptext5 1A0A  
                                            __ptext6 183E                                              __ptext7 1876  
                                            __ptext8 16E2                                              __ptext9 194C  
                                         _meterWatts 003E                                            _T0CONbits 000FD5  
                                            _initOSC 1A0A                                    __end_of_initTimer 1A0A  
                                            _isdigit 19B4                                  __size_of_Timer0_ISR 0094  
                                            main@inx 00F1                                              _strcmp2 0C34  
                               end_of_initialization 1988                   __size_of_process_data_parameterize 0178  
                                  __end_of_send_data 1372                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1926                             __size_of_powerPulseCheck 0144  
                                   ??_communications 00EE                                      ___lldiv@divisor 0013  
                                    ___lldiv@counter 001B          process_data_parameterize@parameter_position 001F  
                                            postinc0 000FEE                                              utoa@buf 0016  
                                            utoa@val 0018                                receive_data@my_status 0049  
                               __end_of_receive_data 1108                                           ??_strmatch 001E  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                      communications@last_state_active 0044  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 00B7  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 00B7  
                        __end_of_initInterruptsClear 172E                    __end_of_process_data_parameterize 0AF0  
                         __size_of_pulseFoutPassThru 0022                                 _com_command_setPower 1778  
                communications@receive_current_state 0045                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1640                                       __end_of___wmul 194C  
              command_builder_add_string@send_buffer 0013                      powerPulseCheck@checkWattsHFvsLF 0022  
                                     __end_of_initIO 1970                                       ??_process_data 003A  
                        ?_command_builder_add_string 0013                                  start_initialization 1970  
                                      ??_initMCPFout 0014                         resetCommunications@commState 0040  
                                   _command_builder1 153E                                     _command_builder3 11AC  
                          _com_command_setEnergyUsed 172E                                      ___llmod@divisor 0013  
                                    ___llmod@counter 0017                    com_command_setVersion@send_buffer 0023  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0011  
                              ?_com_command_setPower 0023                                       ??_SPISlaveInit 000F  
                                           ??___lmul 0017                                             ??___wmul 0013  
                send_end_of_transmission@send_buffer 001F                                    ??_powerPulseCheck 001C  
                                           ??_initIO 000F                           ??_send_end_of_transmission 0021  
                         ??_command_builder_add_char 0012                                          __pbssCOMRAM 003A  
                                      __pcstackBANK0 00B4                             SPI_receive_data@recvGood 0011  
                                __end_of__stringdata 065E                                   __end_of_Timer0_ISR 009C  
                                       _isdigit$2569 0010                                       delayMS10@count 000F  
                                  ?_SPI_receive_data 000F                                            _delayMS10 1876  
                                __end_of_initMCPFout 1876                        com_command_setEnergyUsed@temp 002F  
                                 ??_SPI_receive_data 0011                                         delayMS10@inx 0012  
                                   ___lwdiv@dividend 000F                                command_builder1@data1 001D  
                        command_builder1@send_buffer 001B                             ?_process_data_parameters 0036  
                              __size_of_receive_data 00C2                                            __pintcode 0008  
                              command_builder3@data1 001D                                command_builder3@data2 001F  
                              command_builder3@data3 0021                                             ?___lldiv 000F  
                                           ?___llmod 000F                                             ?___lwdiv 000F  
                                           ?___lwmod 000F                                __end_of_SPI_send_data 19F2  
                                           ?_initOSC 0001                                          __smallconst 0600  
                     resetCommunications@send_buffer 0036                                             ?_isdigit 0001  
                                  __size_of_strmatch 0030                                    send_data@send_end 0015  
                                          _initTimer 19F2                                     ___lwdiv@quotient 0014  
                                           ?_strcmp2 000F                         __size_of_resetCommunications 0098  
                                     __size_of_ultoa 0106                                       strmatch@result 001E  
                process_data_parameterize@parameters 0015                             pulseFoutPassThru@runonce 0048  
                                       _receive_data 1046                                       ___wmul@product 0013  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 000F  
                               __end_of_process_data 183E                                            _send_data 12E2  
                             ??_com_command_setPower 0025                    process_data_parameters@parameters 0036  
                                           _RCONbits 000FD0                                     __CFG_WDTPS$32768 000000  
                                           _SSP2CON3 000F69                                           _ADCON0bits 000FC2  
                                        __stringdata 0601                                    ___wmul@multiplier 000F  
                command_builder_add_char@send_buffer 000F                                           ?_initTimer 0001  
                                  ___lmul@multiplier 000F                                 __end_of_SPISlaveInit 16E2  
                                        _initMCPFout 183E             process_data@end_of_transmission_received 00ED  
                                         ?_send_data 0011                                             __Hrparam 0000  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 001B                                    __CFG_P2BMX$PORTB5 000000  
                 __size_of_com_command_setEnergyUsed 004A                     __end_of_send_end_of_transmission 1A38  
                                   __size_of___lldiv 0082                                     __size_of___llmod 0066  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                   __end_of_command_builder_add_char 15EA                             __end_of_command_builder1 1594  
                           __end_of_command_builder3 124A                                           _ANSELAbits 000F38  
                                         _ANSELBbits 000F39                                     __size_of_initOSC 0018  
                                         strcmp2@inx 0018                         process_data_parameterize@inx 001C  
                                   __size_of_isdigit 0020                                      ___lwdiv@divisor 0011  
                                    ___lwdiv@counter 0013                                             __ptext10 0F82  
                                           __ptext11 12E2                                             __ptext20 18D8  
                                           __ptext12 19D4                                             __ptext21 17FC  
                                           __ptext13 124A                                             __ptext30 13F6  
                                           __ptext22 0660                                             __ptext14 1900  
                                           __ptext31 11AC                                             __ptext23 18A8  
                                           __ptext15 1778                                             __ptext32 1372  
                                           __ptext24 0C34                                             __ptext16 1108  
                                           __ptext33 1594                                             __ptext25 1A22  
                                           __ptext17 17BA                                             __ptext34 0E7E  
                                           __ptext26 153E                                             __ptext18 1640  
                                           __ptext35 19B4                                             __ptext27 172E  
                                           __ptext19 1046                                             __ptext36 15EA  
                                           __ptext28 0D78                                             __ptext37 0978  
                                           __ptext29 1478                                             __ptext38 1926  
                                           __ptext39 1692                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 0144  
                                        _OSCCON2bits 000FD2                                      _powerPulseCheck 0AF0  
                                      __size_of_atol 0104                                        __size_of_main 0060  
                                      strmatch@match 0020                                        __size_of_init 0012  
                        powerPulseCheck@mcpHFoutLast 0046                                        __size_of_utoa 00A4  
                                        ??_delayMS10 0011                           ?_process_data_parameterize 0015  
                       __size_of_initInterruptsClear 004C                          powerPulseCheck@mcpLFoutLast 0047  
                                           atol@sign 0024                    __end_of_com_command_setEnergyUsed 1778  
                            __size_of_communications 00C4                                             _strmatch 18A8  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 00B9  
                                        _OSCTUNEbits 000F9B                                           _INTCONbits 000FF2  
                                        ??_initTimer 000F                                             isdigit@c 0011  
                                          ultoa@base 0022                             ??_com_command_setVersion 0025  
                              __size_of_process_data 0042                                             intlevel2 0000  
                             process_data@parameters 00BB                                         _timerCountHF 004A  
                                       _timerCountLF 004E                                     ___lwmod@dividend 000F  
                                   ___lldiv@dividend 000F                        communications@no_more_to_send 00EF  
                                        ??_send_data 0013                                            strmatch@a 001A  
                                          strmatch@b 001C                                           _OSCCONbits 000FD3  
                                _resetCommunications 124A                            __size_of_SPI_receive_data 0028  
                                           utoa@base 001A                                             ultoa@buf 001C  
                                           ultoa@val 001E                                             strcmp2@a 000F  
                                           strcmp2@b 0011                                     ___lldiv@quotient 0017  
                                       _process_data 17FC                                    _SPI_transmit_wait 0042  
                                    ___lwmod@divisor 0011                                __size_of_SPISlaveInit 0050  
                          communications@send_buffer 008A                                      ___lwmod@counter 0013  
                   __size_of_process_data_parameters 0318                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0C34                                 ?_resetCommunications 0036  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 001F  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 000F  
