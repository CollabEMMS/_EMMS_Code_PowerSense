

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 10 00:45:49 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18LF25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     _ANSELAbits	set	3896
    41  0000                     _ANSELBbits	set	3897
    42  0000                     _LATBbits	set	3978
    43  0000                     _LATCbits	set	3979
    44  0000                     _PORTBbits	set	3969
    45  0000                     _SSP2BUF	set	3951
    46  0000                     _SSP2CON1bits	set	3948
    47  0000                     _SSP2CON3	set	3945
    48  0000                     _SSP2CON3bits	set	3945
    49  0000                     _SSP2STATbits	set	3949
    50  0000                     _TRISAbits	set	3986
    51  0000                     _TRISBbits	set	3987
    52  0000                     _TRISCbits	set	3988
    53                           
    54                           	psect	smallconst
    55  000600                     __psmallconst:
    56                           	opt stack 0
    57  000600  00                 	db	0
    58  000601                     __stringdata:
    59                           	opt stack 0
    60  000601                     STR_3:
    61                           
    62                           ; BSR set to: 15
    63  000601  43                 	db	67	;'C'
    64  000602  61                 	db	97	;'a'
    65  000603  6C                 	db	108	;'l'
    66  000604  69                 	db	105	;'i'
    67  000605  62                 	db	98	;'b'
    68  000606  72                 	db	114	;'r'
    69  000607  61                 	db	97	;'a'
    70  000608  74                 	db	116	;'t'
    71  000609  69                 	db	105	;'i'
    72  00060A  6F                 	db	111	;'o'
    73  00060B  6E                 	db	110	;'n'
    74  00060C  00                 	db	0
    75  00060D                     STR_20:
    76                           
    77                           ; BSR set to: 15
    78  00060D  50                 	db	80	;'P'
    79  00060E  53                 	db	83	;'S'
    80  00060F  56                 	db	86	;'V'
    81  000610  65                 	db	101	;'e'
    82  000611  72                 	db	114	;'r'
    83  000612  73                 	db	115	;'s'
    84  000613  69                 	db	105	;'i'
    85  000614  6F                 	db	111	;'o'
    86  000615  6E                 	db	110	;'n'
    87  000616  00                 	db	0
    88  000617                     STR_18:
    89                           
    90                           ; BSR set to: 15
    91  000617  56                 	db	86	;'V'
    92  000618  6F                 	db	111	;'o'
    93  000619  6C                 	db	108	;'l'
    94  00061A  74                 	db	116	;'t'
    95  00061B  73                 	db	115	;'s'
    96  00061C  00                 	db	0
    97  00061D                     STR_17:
    98                           
    99                           ; BSR set to: 15
   100  00061D  57                 	db	87	;'W'
   101  00061E  61                 	db	97	;'a'
   102  00061F  74                 	db	116	;'t'
   103  000620  74                 	db	116	;'t'
   104  000621  73                 	db	115	;'s'
   105  000622  00                 	db	0
   106  000623                     STR_6:
   107                           
   108                           ; BSR set to: 15
   109  000623  4C                 	db	76	;'L'
   110  000624  45                 	db	69	;'E'
   111  000625  44                 	db	68	;'D'
   112  000626  42                 	db	66	;'B'
   113  000627  00                 	db	0
   114  000628                     STR_5:
   115                           
   116                           ; BSR set to: 15
   117  000628  44                 	db	68	;'D'
   118  000629  61                 	db	97	;'a'
   119  00062A  74                 	db	116	;'t'
   120  00062B  61                 	db	97	;'a'
   121  00062C  00                 	db	0
   122  00062D                     STR_4:
   123                           
   124                           ; BSR set to: 15
   125  00062D  52                 	db	82	;'R'
   126  00062E  65                 	db	101	;'e'
   127  00062F  61                 	db	97	;'a'
   128  000630  64                 	db	100	;'d'
   129  000631  00                 	db	0
   130  000632                     STR_15:
   131                           
   132                           ; BSR set to: 15
   133  000632  43                 	db	67	;'C'
   134  000633  6F                 	db	111	;'o'
   135  000634  6E                 	db	110	;'n'
   136  000635  66                 	db	102	;'f'
   137  000636  00                 	db	0
   138  000637                     STR_19:
   139                           
   140                           ; BSR set to: 15
   141  000637  41                 	db	65	;'A'
   142  000638  6D                 	db	109	;'m'
   143  000639  70                 	db	112	;'p'
   144  00063A  73                 	db	115	;'s'
   145  00063B  00                 	db	0
   146  00063C                     STR_29:
   147                           
   148                           ; BSR set to: 15
   149  00063C  32                 	db	50	;'2'
   150  00063D  32                 	db	50	;'2'
   151  00063E  32                 	db	50	;'2'
   152  00063F  00                 	db	0
   153  000640                     STR_32:
   154                           
   155                           ; BSR set to: 15
   156  000640  33                 	db	51	;'3'
   157  000641  33                 	db	51	;'3'
   158  000642  33                 	db	51	;'3'
   159  000643  00                 	db	0
   160  000644                     STR_37:
   161                           
   162                           ; BSR set to: 15
   163  000644  34                 	db	52	;'4'
   164  000645  34                 	db	52	;'4'
   165  000646  34                 	db	52	;'4'
   166  000647  00                 	db	0
   167  000648                     STR_1:
   168                           
   169                           ; BSR set to: 15
   170  000648  45                 	db	69	;'E'
   171  000649  4E                 	db	78	;'N'
   172  00064A  44                 	db	68	;'D'
   173  00064B  00                 	db	0
   174  00064C                     STR_10:
   175                           
   176                           ; BSR set to: 15
   177  00064C  4F                 	db	79	;'O'
   178  00064D  66                 	db	102	;'f'
   179  00064E  66                 	db	102	;'f'
   180  00064F  00                 	db	0
   181  000650                     STR_2:
   182                           
   183                           ; BSR set to: 15
   184  000650  53                 	db	83	;'S'
   185  000651  65                 	db	101	;'e'
   186  000652  74                 	db	116	;'t'
   187  000653  00                 	db	0
   188  000654                     STR_26:
   189                           
   190                           ; BSR set to: 15
   191  000654  35                 	db	53	;'5'
   192  000655  34                 	db	52	;'4'
   193  000656  00                 	db	0
   194  000657                     STR_7:
   195                           
   196                           ; BSR set to: 15
   197  000657  4F                 	db	79	;'O'
   198  000658  6E                 	db	110	;'n'
   199  000659  00                 	db	0
   200  00065A                     __end_of__stringdata:
   201                           	opt stack 0
   202                           
   203                           ; #config settings
   204  00065A  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           	psect	cinit
   207  001274                     __pcinit:
   208                           	opt stack 0
   209  001274                     start_initialization:
   210                           	opt stack 0
   211  001274                     __initialization:
   212                           	opt stack 0
   213                           
   214                           ; Clear objects allocated to BANK0 (84 bytes)
   215  001274  EE00  F060         	lfsr	0,__pbssBANK0
   216  001278  0E54               	movlw	84
   217  00127A                     clear_0:
   218  00127A  6AEE               	clrf	postinc0,c
   219  00127C  06E8               	decf	wreg,f,c
   220  00127E  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to COMRAM (7 bytes)
   223  001280  EE00  F057         	lfsr	0,__pbssCOMRAM
   224  001284  0E07               	movlw	7
   225  001286                     clear_1:
   226  001286  6AEE               	clrf	postinc0,c
   227  001288  06E8               	decf	wreg,f,c
   228  00128A  E1FD               	bnz	clear_1
   229  00128C                     end_of_initialization:
   230                           	opt stack 0
   231  00128C                     __end_of__initialization:
   232                           	opt stack 0
   233  00128C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   234  00128E  6EF8               	movwf	tblptru,c
   235  001290  0100               	movlb	0
   236  001292  EF4B  F009         	goto	_main	;jump to C main() function
   237                           tblptru	equ	0xFF8
   238                           postinc0	equ	0xFEE
   239                           wreg	equ	0xFE8
   240                           
   241                           	psect	bssCOMRAM
   242  000057                     __pbssCOMRAM:
   243                           	opt stack 0
   244  000057                     resetCommunications@commState:
   245                           	opt stack 0
   246  000057                     	ds	2
   247  000059                     _SPI_transmit_wait:
   248                           	opt stack 0
   249  000059                     	ds	1
   250  00005A                     communications@end_of_transmission_received:
   251                           	opt stack 0
   252  00005A                     	ds	1
   253  00005B                     communications@last_state_active:
   254                           	opt stack 0
   255  00005B                     	ds	1
   256  00005C                     communications@receive_current_state:
   257                           	opt stack 0
   258  00005C                     	ds	1
   259  00005D                     receive_data@my_status:
   260                           	opt stack 0
   261  00005D                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	bssBANK0
   267  000060                     __pbssBANK0:
   268                           	opt stack 0
   269  000060                     communications@receive_buffer:
   270                           	opt stack 0
   271  000060                     	ds	42
   272  00008A                     communications@send_buffer:
   273                           	opt stack 0
   274  00008A                     	ds	42
   275                           tblptru	equ	0xFF8
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	cstackCOMRAM
   280  000001                     __pcstackCOMRAM:
   281                           	opt stack 0
   282  000001                     ?_strcmp2:
   283                           	opt stack 0
   284  000001                     ?___wmul:
   285                           	opt stack 0
   286  000001                     SPI_send_data@data:
   287                           	opt stack 0
   288  000001                     delayMS@a:
   289                           	opt stack 0
   290  000001                     command_builder_add_char@send_buffer:
   291                           	opt stack 0
   292  000001                     strcmp2@a:
   293                           	opt stack 0
   294  000001                     SPI_receive_data@data:
   295                           	opt stack 0
   296  000001                     ___wmul@multiplier:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x0
   300  000001                     	ds	1
   301  000002                     SPI_send_data@sendGood:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x1
   305  000002                     	ds	1
   306  000003                     command_builder_add_char@data:
   307                           	opt stack 0
   308  000003                     SPI_receive_data@recvGood:
   309                           	opt stack 0
   310  000003                     delayMS@i:
   311                           	opt stack 0
   312  000003                     send_data@send_buffer:
   313                           	opt stack 0
   314  000003                     strcmp2@b:
   315                           	opt stack 0
   316  000003                     ___wmul@multiplicand:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320  000003                     	ds	1
   321  000004                     ??_command_builder_add_char:
   322  000004                     receive_data@receive_buffer:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x3
   326  000004                     	ds	1
   327  000005                     ??_send_data:
   328  000005                     ??_strcmp2:
   329  000005                     delayMS@j:
   330                           	opt stack 0
   331  000005                     command_builder_add_string@send_buffer:
   332                           	opt stack 0
   333  000005                     ___wmul@product:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x4
   337  000005                     	ds	1
   338  000006                     ??_receive_data:
   339                           
   340                           ; 0 bytes @ 0x5
   341  000006                     	ds	1
   342  000007                     receive_data@data:
   343                           	opt stack 0
   344  000007                     send_data@send_end:
   345                           	opt stack 0
   346  000007                     init@i:
   347                           	opt stack 0
   348  000007                     process_data_parameterize@parameters:
   349                           	opt stack 0
   350  000007                     command_builder_add_string@data_string:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x6
   354  000007                     	ds	1
   355  000008                     strcmp2@match:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x7
   359  000008                     	ds	1
   360  000009                     ??_command_builder_add_string:
   361  000009                     process_data_parameterize@buffer_to_parameterize:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x8
   365  000009                     	ds	1
   366  00000A                     strcmp2@inx:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x9
   370  00000A                     	ds	1
   371  00000B                     ??_process_data_parameterize:
   372  00000B                     command_builder_add_string@inx:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376  00000B                     	ds	1
   377  00000C                     strmatch@a:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0xB
   381  00000C                     	ds	1
   382  00000D                     command_builder1@send_buffer:
   383                           	opt stack 0
   384  00000D                     command_builder2@send_buffer:
   385                           	opt stack 0
   386  00000D                     command_builder3@send_buffer:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0xC
   390  00000D                     	ds	1
   391  00000E                     process_data_parameterize@inx:
   392                           	opt stack 0
   393  00000E                     strmatch@b:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0xD
   397  00000E                     	ds	1
   398  00000F                     command_builder1@data1:
   399                           	opt stack 0
   400  00000F                     command_builder2@data1:
   401                           	opt stack 0
   402  00000F                     command_builder3@data1:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0xE
   406  00000F                     	ds	1
   407  000010                     process_data_parameterize@parameter_index:
   408                           	opt stack 0
   409  000010                     strmatch@result:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xF
   413  000010                     	ds	1
   414  000011                     process_data_parameterize@parameter_position:
   415                           	opt stack 0
   416  000011                     command_builder2@data2:
   417                           	opt stack 0
   418  000011                     command_builder3@data2:
   419                           	opt stack 0
   420  000011                     send_end_of_transmission@send_buffer:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x10
   424  000011                     	ds	1
   425  000012                     strmatch@match:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x11
   429  000012                     	ds	1
   430  000013                     command_builder3@data3:
   431                           	opt stack 0
   432  000013                     com_command_testLED@send_buffer:
   433                           	opt stack 0
   434  000013                     com_command_readCalibration@send_buffer:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x12
   438  000013                     	ds	2
   439  000015                     process_data_parameters@parameters:
   440                           	opt stack 0
   441  000015                     com_command_setPower@send_buffer:
   442                           	opt stack 0
   443  000015                     com_command_setVolts@send_buffer:
   444                           	opt stack 0
   445  000015                     com_command_setAmps@send_buffer:
   446                           	opt stack 0
   447  000015                     com_command_setVersion@send_buffer:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x14
   451  000015                     	ds	2
   452  000017                     resetCommunications@send_buffer:
   453                           	opt stack 0
   454  000017                     process_data_parameters@send_buffer:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x16
   458  000017                     	ds	2
   459  000019                     ??_resetCommunications:
   460  000019                     ??_process_data_parameters:
   461                           
   462                           ; 0 bytes @ 0x18
   463  000019                     	ds	1
   464  00001A                     process_data_parameters@end_of_transmission_received:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x19
   468  00001A                     	ds	1
   469  00001B                     process_data@receive_buffer:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1A
   473  00001B                     	ds	2
   474  00001D                     process_data@send_buffer:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x1C
   478  00001D                     	ds	2
   479  00001F                     process_data@parameters:
   480                           	opt stack 0
   481                           
   482                           ; 50 bytes @ 0x1E
   483  00001F                     	ds	50
   484  000051                     process_data@end_of_transmission_received:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x50
   488  000051                     	ds	1
   489  000052                     ??_communications:
   490                           
   491                           ; 0 bytes @ 0x51
   492  000052                     	ds	1
   493  000053                     communications@no_more_to_send:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x52
   497  000053                     	ds	1
   498  000054                     communications@firstTime:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x53
   502  000054                     	ds	1
   503  000055                     main@togglePulse:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x54
   507  000055                     	ds	2
   508                           tblptru	equ	0xFF8
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 157 in file "Current_Sense_Main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  togglePulse     2   84[COMRAM] unsigned int 
   522 ;; Return value:  Size  Location     Type
   523 ;;		None               void
   524 ;; Registers used:
   525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   531 ;;      Params:         0       0       0       0       0       0       0
   532 ;;      Locals:         2       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0
   534 ;;      Totals:         2       0       0       0       0       0       0
   535 ;;Total ram usage:        2 bytes
   536 ;; Hardware stack levels required when called:    7
   537 ;; This function calls:
   538 ;;		_SPISlaveInit
   539 ;;		_communications
   540 ;;		_init
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547  001296                     __ptext0:
   548                           	opt stack 0
   549  001296                     _main:
   550                           	opt stack 24
   551                           
   552                           ;Current_Sense_Main.c: 158: unsigned int togglePulse = 0;
   553                           
   554                           ; BSR set to: 15
   555                           ;incstack = 0
   556  001296  0E00               	movlw	0
   557  001298  6E56               	movwf	main@togglePulse+1,c
   558  00129A  0E00               	movlw	0
   559  00129C  6E55               	movwf	main@togglePulse,c
   560                           
   561                           ;Current_Sense_Main.c: 159: init();
   562  00129E  EC55  F008         	call	_init	;wreg free
   563                           
   564                           ;Current_Sense_Main.c: 161: SPISlaveInit( );
   565  0012A2  EC2C  F008         	call	_SPISlaveInit	;wreg free
   566                           
   567                           ;Current_Sense_Main.c: 185: communications( 1 );
   568  0012A6  0E01               	movlw	1
   569  0012A8  EC7D  F006         	call	_communications
   570  0012AC                     l1760:
   571                           
   572                           ;Current_Sense_Main.c: 189: communications( 0 );
   573  0012AC  0E00               	movlw	0
   574  0012AE  EC7D  F006         	call	_communications
   575  0012B2  D7FC               	goto	l1760
   576  0012B4                     __end_of_main:
   577                           	opt stack 0
   578                           tblptru	equ	0xFF8
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           
   582 ;; *************** function _init *****************
   583 ;; Defined at:
   584 ;;		line 213 in file "Current_Sense_Main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  i               2    6[COMRAM] unsigned int 
   589 ;; Return value:  Size  Location     Type
   590 ;;		None               void
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         0       0       0       0       0       0       0
   599 ;;      Locals:         2       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0
   601 ;;      Totals:         2       0       0       0       0       0       0
   602 ;;Total ram usage:        2 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		_delayMS
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text1
   613  0010AA                     __ptext1:
   614                           	opt stack 0
   615  0010AA                     _init:
   616                           	opt stack 29
   617                           
   618                           ;Current_Sense_Main.c: 214: TRISAbits.TRISA0 = 0;
   619                           
   620                           ;incstack = 0
   621  0010AA  9092               	bcf	3986,0,c	;volatile
   622                           
   623                           ;Current_Sense_Main.c: 215: TRISAbits.TRISA1 = 1;
   624  0010AC  8292               	bsf	3986,1,c	;volatile
   625                           
   626                           ;Current_Sense_Main.c: 216: TRISBbits.RB4 = 0;
   627  0010AE  9893               	bcf	3987,4,c	;volatile
   628                           
   629                           ;Current_Sense_Main.c: 217: TRISCbits.TRISC3 = 0;
   630  0010B0  9694               	bcf	3988,3,c	;volatile
   631                           
   632                           ;Current_Sense_Main.c: 218: TRISCbits.TRISC5 = 0;
   633  0010B2  9A94               	bcf	3988,5,c	;volatile
   634                           
   635                           ;Current_Sense_Main.c: 219: TRISCbits.TRISC6 = 0;
   636  0010B4  9C94               	bcf	3988,6,c	;volatile
   637                           
   638                           ;Current_Sense_Main.c: 220: TRISCbits.TRISC7 = 0;
   639  0010B6  9E94               	bcf	3988,7,c	;volatile
   640                           
   641                           ;Current_Sense_Main.c: 221: ANSELAbits.ANSA1 = 0b0;
   642  0010B8  010F               	movlb	15	; () banked
   643  0010BA  9338               	bcf	56,1,b	;volatile
   644                           
   645                           ;Current_Sense_Main.c: 223: LATCbits.LATC6 = 1;
   646  0010BC  8C8B               	bsf	3979,6,c	;volatile
   647                           
   648                           ;Current_Sense_Main.c: 224: LATCbits.LATC3 = 1;
   649  0010BE  868B               	bsf	3979,3,c	;volatile
   650                           
   651                           ;Current_Sense_Main.c: 225: LATCbits.LATC5 = 1;
   652  0010C0  8A8B               	bsf	3979,5,c	;volatile
   653                           
   654                           ;Current_Sense_Main.c: 226: LATCbits.LATC7 = 1;
   655  0010C2  8E8B               	bsf	3979,7,c	;volatile
   656                           
   657                           ; BSR set to: 15
   658                           ;Current_Sense_Main.c: 230: unsigned int i;
   659                           ;Current_Sense_Main.c: 231: for (i = 0; i < 5; i++) {
   660  0010C4  0E00               	movlw	0
   661  0010C6  6E08               	movwf	init@i+1,c
   662  0010C8  0E00               	movlw	0
   663  0010CA  6E07               	movwf	init@i,c
   664  0010CC                     
   665                           ; BSR set to: 15
   666  0010CC  0E05               	movlw	5
   667  0010CE  5C07               	subwf	init@i,w,c
   668  0010D0  0E00               	movlw	0
   669  0010D2  5808               	subwfb	init@i+1,w,c
   670  0010D4  B0D8               	btfsc	status,0,c
   671  0010D6  0012               	return	
   672                           
   673                           ;Current_Sense_Main.c: 232: LATBbits.LATB4 = 1;
   674                           
   675                           ; BSR set to: 15
   676  0010D8  888A               	bsf	3978,4,c	;volatile
   677                           
   678                           ;Current_Sense_Main.c: 233: delayMS(25);
   679  0010DA  0E00               	movlw	0
   680  0010DC  6E02               	movwf	delayMS@a+1,c
   681  0010DE  0E19               	movlw	25
   682  0010E0  6E01               	movwf	delayMS@a,c
   683  0010E2  EC7D  F008         	call	_delayMS	;wreg free
   684                           
   685                           ;Current_Sense_Main.c: 234: LATBbits.LATB4 = 0;
   686  0010E6  988A               	bcf	3978,4,c	;volatile
   687                           
   688                           ;Current_Sense_Main.c: 235: delayMS(25);
   689  0010E8  0E00               	movlw	0
   690  0010EA  6E02               	movwf	delayMS@a+1,c
   691  0010EC  0E19               	movlw	25
   692  0010EE  6E01               	movwf	delayMS@a,c
   693  0010F0  EC7D  F008         	call	_delayMS	;wreg free
   694  0010F4  4A07               	infsnz	init@i,f,c
   695  0010F6  2A08               	incf	init@i+1,f,c
   696  0010F8  D7E9               	goto	L1
   697  0010FA                     __end_of_init:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _communications *****************
   705 ;; Defined at:
   706 ;;		line 81 in file "SlaveComm_PIC18.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  firstTime       1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  firstTime       1   83[COMRAM] unsigned char 
   711 ;;  no_more_to_s    1   82[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;		None               void
   714 ;; Registers used:
   715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   721 ;;      Params:         0       0       0       0       0       0       0
   722 ;;      Locals:         2       0       0       0       0       0       0
   723 ;;      Temps:          1       0       0       0       0       0       0
   724 ;;      Totals:         3       0       0       0       0       0       0
   725 ;;Total ram usage:        3 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; Hardware stack levels required when called:    6
   728 ;; This function calls:
   729 ;;		_process_data
   730 ;;		_receive_data
   731 ;;		_resetCommunications
   732 ;;		_send_data
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739  000CFA                     __ptext2:
   740                           	opt stack 0
   741  000CFA                     _communications:
   742                           	opt stack 24
   743                           
   744                           ;incstack = 0
   745                           ;communications@firstTime stored from wreg
   746  000CFA  6E54               	movwf	communications@firstTime,c
   747                           
   748                           ;SlaveComm_PIC18.c: 83: static struct buffer receive_buffer;
   749                           ;SlaveComm_PIC18.c: 84: static struct buffer send_buffer;
   750                           ;SlaveComm_PIC18.c: 86: static bool end_of_transmission_received = 0;
   751                           ;SlaveComm_PIC18.c: 87: bool no_more_to_send;
   752                           ;SlaveComm_PIC18.c: 89: static enum receive_status receive_current_state;
   753                           ;SlaveComm_PIC18.c: 92: if( firstTime == 1 )
   754  000CFC  0454               	decf	communications@firstTime,w,c
   755  000CFE  A4D8               	btfss	status,2,c
   756  000D00  D00F               	goto	l1730
   757                           
   758                           ;SlaveComm_PIC18.c: 93: {
   759                           ;SlaveComm_PIC18.c: 94: send_buffer.write_position = 0;
   760  000D02  0E00               	movlw	0
   761  000D04  0100               	movlb	0	; () banked
   762  000D06  6FB2               	movwf	(communications@send_buffer+40)& (0+255),b
   763                           
   764                           ;SlaveComm_PIC18.c: 95: send_buffer.read_position = 0;
   765  000D08  0E00               	movlw	0
   766  000D0A  0100               	movlb	0	; () banked
   767  000D0C  6FB3               	movwf	(communications@send_buffer+41)& (0+255),b
   768                           
   769                           ; BSR set to: 0
   770                           ;SlaveComm_PIC18.c: 96: resetCommunications( &send_buffer );
   771  000D0E  0100               	movlb	0	; () banked
   772  000D10  0E00               	movlw	high communications@send_buffer
   773  000D12  6E18               	movwf	resetCommunications@send_buffer+1,c
   774  000D14  0100               	movlb	0	; () banked
   775  000D16  0E8A               	movlw	low communications@send_buffer
   776  000D18  6E17               	movwf	resetCommunications@send_buffer,c
   777  000D1A  ECB3  F005         	call	_resetCommunications	;wreg free
   778                           
   779                           ;SlaveComm_PIC18.c: 97: }
   780  000D1E  0012               	return	
   781  000D20                     l1730:
   782                           
   783                           ;SlaveComm_PIC18.c: 98: else
   784                           ;SlaveComm_PIC18.c: 99: {
   785                           ;SlaveComm_PIC18.c: 100: receive_current_state = receive_data( &receive_buffer );
   786  000D20  0100               	movlb	0	; () banked
   787  000D22  0E00               	movlw	high communications@receive_buffer
   788  000D24  6E05               	movwf	receive_data@receive_buffer+1,c
   789  000D26  0100               	movlb	0	; () banked
   790  000D28  0E60               	movlw	low communications@receive_buffer
   791  000D2A  6E04               	movwf	receive_data@receive_buffer,c
   792  000D2C  EC1C  F006         	call	_receive_data	;wreg free
   793  000D30  6E5C               	movwf	communications@receive_current_state,c
   794                           
   795                           ;SlaveComm_PIC18.c: 102: switch( receive_current_state )
   796  000D32  D015               	goto	l1738
   797  000D34                     l1732:
   798                           
   799                           ;SlaveComm_PIC18.c: 112: if( process_data( &receive_buffer, &send_buffer ) == 1 )
   800  000D34  0100               	movlb	0	; () banked
   801  000D36  0E00               	movlw	high communications@receive_buffer
   802  000D38  6E1C               	movwf	process_data@receive_buffer+1,c
   803  000D3A  0100               	movlb	0	; () banked
   804  000D3C  0E60               	movlw	low communications@receive_buffer
   805  000D3E  6E1B               	movwf	process_data@receive_buffer,c
   806  000D40  0100               	movlb	0	; () banked
   807  000D42  0E00               	movlw	high communications@send_buffer
   808  000D44  6E1E               	movwf	process_data@send_buffer+1,c
   809  000D46  0100               	movlb	0	; () banked
   810  000D48  0E8A               	movlw	low communications@send_buffer
   811  000D4A  6E1D               	movwf	process_data@send_buffer,c
   812  000D4C  ECB0  F008         	call	_process_data	;wreg free
   813  000D50  6E52               	movwf	??_communications& (0+255),c
   814  000D52  0452               	decf	??_communications,w,c
   815  000D54  A4D8               	btfss	status,2,c
   816  000D56  D00D               	goto	l1740
   817                           
   818                           ;SlaveComm_PIC18.c: 113: {
   819                           ;SlaveComm_PIC18.c: 114: end_of_transmission_received = 1;
   820  000D58  0E01               	movlw	1
   821  000D5A  6E5A               	movwf	communications@end_of_transmission_received,c
   822  000D5C  D00A               	goto	l1740
   823  000D5E                     l1738:
   824  000D5E  505C               	movf	communications@receive_current_state,w,c
   825                           
   826                           ; Switch size 1, requested type "space"
   827                           ; Number of cases is 3, Range of values is 0 to 2
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte           10     6 (average)
   831                           ;	Chosen strategy is simple_byte
   832  000D60  0A00               	xorlw	0	; case 0
   833  000D62  B4D8               	btfsc	status,2,c
   834  000D64  D006               	goto	l1740
   835  000D66  0A01               	xorlw	1	; case 1
   836  000D68  B4D8               	btfsc	status,2,c
   837  000D6A  D003               	goto	l1740
   838  000D6C  0A03               	xorlw	3	; case 2
   839  000D6E  B4D8               	btfsc	status,2,c
   840  000D70  D7E1               	goto	l1732
   841  000D72                     l1740:
   842                           
   843                           ;SlaveComm_PIC18.c: 120: no_more_to_send = send_data( &send_buffer );
   844  000D72  0100               	movlb	0	; () banked
   845  000D74  0E00               	movlw	high communications@send_buffer
   846  000D76  6E04               	movwf	send_data@send_buffer+1,c
   847  000D78  0100               	movlb	0	; () banked
   848  000D7A  0E8A               	movlw	low communications@send_buffer
   849  000D7C  6E03               	movwf	send_data@send_buffer,c
   850  000D7E  EC23  F007         	call	_send_data	;wreg free
   851  000D82  6E53               	movwf	communications@no_more_to_send,c
   852                           
   853                           ;SlaveComm_PIC18.c: 123: static bool last_state_active = 0;
   854                           ;SlaveComm_PIC18.c: 124: if( PORTBbits.SS2 == 0b1 )
   855  000D84  A081               	btfss	3969,0,c	;volatile
   856  000D86  D003               	goto	l130
   857                           
   858                           ;SlaveComm_PIC18.c: 125: {
   859                           ;SlaveComm_PIC18.c: 126: last_state_active = 0;
   860  000D88  0E00               	movlw	0
   861  000D8A  6E5B               	movwf	communications@last_state_active,c
   862                           
   863                           ;SlaveComm_PIC18.c: 127: }
   864  000D8C  0012               	return	
   865  000D8E                     l130:
   866                           
   867                           ;SlaveComm_PIC18.c: 128: else
   868                           ;SlaveComm_PIC18.c: 129: {
   869                           ;SlaveComm_PIC18.c: 130: if( last_state_active == 0 )
   870  000D8E  665B               	tstfsz	communications@last_state_active,c
   871  000D90  D008               	goto	l1748
   872                           
   873                           ;SlaveComm_PIC18.c: 131: {
   874                           ;SlaveComm_PIC18.c: 132: resetCommunications( &send_buffer );
   875  000D92  0100               	movlb	0	; () banked
   876  000D94  0E00               	movlw	high communications@send_buffer
   877  000D96  6E18               	movwf	resetCommunications@send_buffer+1,c
   878  000D98  0100               	movlb	0	; () banked
   879  000D9A  0E8A               	movlw	low communications@send_buffer
   880  000D9C  6E17               	movwf	resetCommunications@send_buffer,c
   881  000D9E  ECB3  F005         	call	_resetCommunications	;wreg free
   882  000DA2                     l1748:
   883                           
   884                           ;SlaveComm_PIC18.c: 133: }
   885                           ;SlaveComm_PIC18.c: 135: last_state_active = 1;
   886  000DA2  0E01               	movlw	1
   887  000DA4  6E5B               	movwf	communications@last_state_active,c
   888  000DA6  0012               	return	
   889  000DA8                     __end_of_communications:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _send_data *****************
   897 ;; Defined at:
   898 ;;		line 460 in file "SlaveComm_PIC18.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  send_buffer     2    2[COMRAM] PTR struct buffer
   901 ;;		 -> communications@send_buffer(42), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  send_end        1    6[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      unsigned char 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         2       0       0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0       0       0
   915 ;;      Temps:          2       0       0       0       0       0       0
   916 ;;      Totals:         5       0       0       0       0       0       0
   917 ;;Total ram usage:        5 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    1
   920 ;; This function calls:
   921 ;;		_SPI_send_data
   922 ;; This function is called by:
   923 ;;		_communications
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text3
   928  000E46                     __ptext3:
   929                           	opt stack 0
   930  000E46                     _send_data:
   931                           	opt stack 28
   932                           
   933                           ;SlaveComm_PIC18.c: 462: bool send_end;
   934                           ;SlaveComm_PIC18.c: 464: if( send_buffer->read_position == send_buffer->write_position )
   935                           
   936                           ;incstack = 0
   937  000E46  EE20 F029          	lfsr	2,41
   938  000E4A  5003               	movf	send_data@send_buffer,w,c
   939  000E4C  26D9               	addwf	fsr2l,f,c
   940  000E4E  5004               	movf	send_data@send_buffer+1,w,c
   941  000E50  22DA               	addwfc	fsr2h,f,c
   942  000E52  EE10 F028          	lfsr	1,40
   943  000E56  5003               	movf	send_data@send_buffer,w,c
   944  000E58  26E1               	addwf	fsr1l,f,c
   945  000E5A  5004               	movf	send_data@send_buffer+1,w,c
   946  000E5C  22E2               	addwfc	fsr1h,f,c
   947  000E5E  50E7               	movf	indf1,w,c
   948  000E60  62DF               	cpfseq	indf2,c
   949  000E62  D006               	goto	l1696
   950                           
   951                           ;SlaveComm_PIC18.c: 465: {
   952                           ;SlaveComm_PIC18.c: 466: send_end = 1;
   953  000E64  0E01               	movlw	1
   954  000E66  6E07               	movwf	send_data@send_end,c
   955                           
   956                           ;SlaveComm_PIC18.c: 467: SPI_send_data( '\0' );
   957  000E68  0E00               	movlw	0
   958  000E6A  EC5A  F009         	call	_SPI_send_data
   959                           
   960                           ;SlaveComm_PIC18.c: 468: }
   961  000E6E  D031               	goto	l1704
   962  000E70                     l1696:
   963                           
   964                           ;SlaveComm_PIC18.c: 469: else
   965                           ;SlaveComm_PIC18.c: 470: {
   966                           ;SlaveComm_PIC18.c: 471: send_end = 0;
   967  000E70  0E00               	movlw	0
   968  000E72  6E07               	movwf	send_data@send_end,c
   969                           
   970                           ;SlaveComm_PIC18.c: 474: if( SPI_send_data( send_buffer->data_buffer[send_buffer->read_p
      +                          osition] ) == 1 )
   971  000E74  EE20 F029          	lfsr	2,41
   972  000E78  5003               	movf	send_data@send_buffer,w,c
   973  000E7A  26D9               	addwf	fsr2l,f,c
   974  000E7C  5004               	movf	send_data@send_buffer+1,w,c
   975  000E7E  22DA               	addwfc	fsr2h,f,c
   976  000E80  50DF               	movf	indf2,w,c
   977  000E82  6E05               	movwf	??_send_data& (0+255),c
   978  000E84  5005               	movf	??_send_data,w,c
   979  000E86  0D01               	mullw	1
   980  000E88  50F3               	movf	prodl,w,c
   981  000E8A  2403               	addwf	send_data@send_buffer,w,c
   982  000E8C  6ED9               	movwf	fsr2l,c
   983  000E8E  50F4               	movf	prodh,w,c
   984  000E90  2004               	addwfc	send_data@send_buffer+1,w,c
   985  000E92  6EDA               	movwf	fsr2h,c
   986  000E94  50DF               	movf	indf2,w,c
   987  000E96  EC5A  F009         	call	_SPI_send_data
   988  000E9A  6E06               	movwf	(??_send_data+1)& (0+255),c
   989  000E9C  0406               	decf	??_send_data+1,w,c
   990  000E9E  A4D8               	btfss	status,2,c
   991  000EA0  D018               	goto	l1704
   992                           
   993                           ;SlaveComm_PIC18.c: 475: {
   994                           ;SlaveComm_PIC18.c: 477: send_buffer->read_position++;
   995  000EA2  EE20 F029          	lfsr	2,41
   996  000EA6  5003               	movf	send_data@send_buffer,w,c
   997  000EA8  26D9               	addwf	fsr2l,f,c
   998  000EAA  5004               	movf	send_data@send_buffer+1,w,c
   999  000EAC  22DA               	addwfc	fsr2h,f,c
  1000  000EAE  2ADF               	incf	indf2,f,c
  1001                           
  1002                           ;SlaveComm_PIC18.c: 478: if( send_buffer->read_position >= 40 )
  1003  000EB0  EE20 F029          	lfsr	2,41
  1004  000EB4  5003               	movf	send_data@send_buffer,w,c
  1005  000EB6  26D9               	addwf	fsr2l,f,c
  1006  000EB8  5004               	movf	send_data@send_buffer+1,w,c
  1007  000EBA  22DA               	addwfc	fsr2h,f,c
  1008  000EBC  0E27               	movlw	39
  1009  000EBE  64DF               	cpfsgt	indf2,c
  1010  000EC0  D008               	goto	l1704
  1011                           
  1012                           ;SlaveComm_PIC18.c: 479: {
  1013                           ;SlaveComm_PIC18.c: 480: send_buffer->read_position = 0;
  1014  000EC2  EE20 F029          	lfsr	2,41
  1015  000EC6  5003               	movf	send_data@send_buffer,w,c
  1016  000EC8  26D9               	addwf	fsr2l,f,c
  1017  000ECA  5004               	movf	send_data@send_buffer+1,w,c
  1018  000ECC  22DA               	addwfc	fsr2h,f,c
  1019  000ECE  0E00               	movlw	0
  1020  000ED0  6EDF               	movwf	indf2,c
  1021  000ED2                     l1704:
  1022                           
  1023                           ;SlaveComm_PIC18.c: 481: }
  1024                           ;SlaveComm_PIC18.c: 482: }
  1025                           ;SlaveComm_PIC18.c: 483: }
  1026                           ;SlaveComm_PIC18.c: 485: return send_end;
  1027  000ED2  5007               	movf	send_data@send_end,w,c
  1028  000ED4  0012               	return	
  1029  000ED6                     __end_of_send_data:
  1030                           	opt stack 0
  1031                           tblptru	equ	0xFF8
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           indf1	equ	0xFE7
  1037                           fsr1h	equ	0xFE2
  1038                           fsr1l	equ	0xFE1
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _SPI_send_data *****************
  1045 ;; Defined at:
  1046 ;;		line 558 in file "SlaveComm_PIC18.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  data            1    wreg     unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  data            1    0[COMRAM] unsigned char 
  1051 ;;  sendGood        1    1[COMRAM] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      unsigned char 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1061 ;;      Params:         0       0       0       0       0       0       0
  1062 ;;      Locals:         2       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0
  1064 ;;      Totals:         2       0       0       0       0       0       0
  1065 ;;Total ram usage:        2 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_send_data
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text4
  1075  0012B4                     __ptext4:
  1076                           	opt stack 0
  1077  0012B4                     _SPI_send_data:
  1078                           	opt stack 28
  1079                           
  1080                           ;incstack = 0
  1081                           ;SPI_send_data@data stored from wreg
  1082  0012B4  6E01               	movwf	SPI_send_data@data,c
  1083                           
  1084                           ;SlaveComm_PIC18.c: 560: bool sendGood = 0;
  1085  0012B6  0E00               	movlw	0
  1086  0012B8  6E02               	movwf	SPI_send_data@sendGood,c
  1087                           
  1088                           ;SlaveComm_PIC18.c: 562: if( SPI_transmit_wait == 0 )
  1089  0012BA  6659               	tstfsz	_SPI_transmit_wait,c
  1090  0012BC  D006               	goto	l1604
  1091                           
  1092                           ;SlaveComm_PIC18.c: 563: {
  1093                           ;SlaveComm_PIC18.c: 564: SSP2BUF = data;
  1094  0012BE  C001  FF6F         	movff	SPI_send_data@data,3951	;volatile
  1095                           
  1096                           ;SlaveComm_PIC18.c: 565: SPI_transmit_wait = 1;
  1097  0012C2  0E01               	movlw	1
  1098  0012C4  6E59               	movwf	_SPI_transmit_wait,c
  1099                           
  1100                           ;SlaveComm_PIC18.c: 566: sendGood = 1;
  1101  0012C6  0E01               	movlw	1
  1102  0012C8  D001               	goto	L2
  1103  0012CA                     l1604:
  1104                           
  1105                           ;SlaveComm_PIC18.c: 568: else
  1106                           ;SlaveComm_PIC18.c: 569: {
  1107                           ;SlaveComm_PIC18.c: 570: sendGood = 0;
  1108  0012CA  0E00               	movlw	0
  1109  0012CC                     L2:
  1110  0012CC  6E02               	movwf	SPI_send_data@sendGood,c
  1111                           
  1112                           ;SlaveComm_PIC18.c: 571: }
  1113                           ;SlaveComm_PIC18.c: 573: return sendGood;
  1114  0012CE  5002               	movf	SPI_send_data@sendGood,w,c
  1115  0012D0  0012               	return	
  1116  0012D2                     __end_of_SPI_send_data:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           prodh	equ	0xFF4
  1120                           prodl	equ	0xFF3
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           indf1	equ	0xFE7
  1124                           fsr1h	equ	0xFE2
  1125                           fsr1l	equ	0xFE1
  1126                           indf2	equ	0xFDF
  1127                           fsr2h	equ	0xFDA
  1128                           fsr2l	equ	0xFD9
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _resetCommunications *****************
  1132 ;; Defined at:
  1133 ;;		line 143 in file "SlaveComm_PIC18.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  1136 ;;		 -> communications@send_buffer(42), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1148 ;;      Params:         2       0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0
  1150 ;;      Temps:          2       0       0       0       0       0       0
  1151 ;;      Totals:         4       0       0       0       0       0       0
  1152 ;;Total ram usage:        4 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    4
  1155 ;; This function calls:
  1156 ;;		_com_command_readCalibration
  1157 ;;		_com_command_setAmps
  1158 ;;		_com_command_setPower
  1159 ;;		_com_command_setVersion
  1160 ;;		_com_command_setVolts
  1161 ;;		_com_command_testLED
  1162 ;;		_delayMS
  1163 ;; This function is called by:
  1164 ;;		_communications
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text5
  1169  000B66                     __ptext5:
  1170                           	opt stack 0
  1171  000B66                     _resetCommunications:
  1172                           	opt stack 25
  1173                           
  1174                           ;SlaveComm_PIC18.c: 146: static int commState = 0;
  1175                           ;SlaveComm_PIC18.c: 149: SSP2CON1bits.SSPEN = 0;
  1176                           
  1177                           ;incstack = 0
  1178  000B66  9A6C               	bcf	3948,5,c	;volatile
  1179                           
  1180                           ;SlaveComm_PIC18.c: 150: delayMS( 1 );
  1181  000B68  0E00               	movlw	0
  1182  000B6A  6E02               	movwf	delayMS@a+1,c
  1183  000B6C  0E01               	movlw	1
  1184  000B6E  6E01               	movwf	delayMS@a,c
  1185  000B70  EC7D  F008         	call	_delayMS	;wreg free
  1186                           
  1187                           ;SlaveComm_PIC18.c: 151: SSP2CON1bits.SSPEN = 1;
  1188  000B74  8A6C               	bsf	3948,5,c	;volatile
  1189                           
  1190                           ;SlaveComm_PIC18.c: 153: SSP2CON1bits.WCOL = 0;
  1191  000B76  9E6C               	bcf	3948,7,c	;volatile
  1192                           
  1193                           ;SlaveComm_PIC18.c: 154: SPI_transmit_wait = 0;
  1194  000B78  0E00               	movlw	0
  1195  000B7A  6E59               	movwf	_SPI_transmit_wait,c
  1196                           
  1197                           ;SlaveComm_PIC18.c: 156: send_buffer->read_position = 0;
  1198  000B7C  EE20 F029          	lfsr	2,41
  1199  000B80  5017               	movf	resetCommunications@send_buffer,w,c
  1200  000B82  26D9               	addwf	fsr2l,f,c
  1201  000B84  5018               	movf	resetCommunications@send_buffer+1,w,c
  1202  000B86  22DA               	addwfc	fsr2h,f,c
  1203  000B88  0E00               	movlw	0
  1204  000B8A  6EDF               	movwf	indf2,c
  1205                           
  1206                           ;SlaveComm_PIC18.c: 157: send_buffer->write_position = 0;
  1207  000B8C  EE20 F028          	lfsr	2,40
  1208  000B90  5017               	movf	resetCommunications@send_buffer,w,c
  1209  000B92  26D9               	addwf	fsr2l,f,c
  1210  000B94  5018               	movf	resetCommunications@send_buffer+1,w,c
  1211  000B96  22DA               	addwfc	fsr2h,f,c
  1212  000B98  0E00               	movlw	0
  1213  000B9A  6EDF               	movwf	indf2,c
  1214                           
  1215                           ;SlaveComm_PIC18.c: 162: commState++;
  1216  000B9C  4A57               	infsnz	resetCommunications@commState,f,c
  1217  000B9E  2A58               	incf	resetCommunications@commState+1,f,c
  1218                           
  1219                           ;SlaveComm_PIC18.c: 163: switch( commState )
  1220  000BA0  D02F               	goto	l1642
  1221  000BA2                     l1626:
  1222                           
  1223                           ;SlaveComm_PIC18.c: 166: com_command_setVersion( send_buffer );
  1224  000BA2  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  1225  000BA6  C017  F015         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  1226  000BAA  ECEE  F008         	call	_com_command_setVersion	;wreg free
  1227                           
  1228                           ;SlaveComm_PIC18.c: 167: break;
  1229  000BAE  0012               	return	
  1230  000BB0                     l1628:
  1231                           
  1232                           ;SlaveComm_PIC18.c: 169: com_command_setPower( send_buffer );
  1233  000BB0  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  1234  000BB4  C017  F015         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  1235  000BB8  EC01  F009         	call	_com_command_setPower	;wreg free
  1236                           
  1237                           ;SlaveComm_PIC18.c: 170: break;
  1238  000BBC  0012               	return	
  1239  000BBE                     l1630:
  1240                           
  1241                           ;SlaveComm_PIC18.c: 172: com_command_setVolts( send_buffer );
  1242  000BBE  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setVolts@send_buffer+1
  1243  000BC2  C017  F015         	movff	resetCommunications@send_buffer,com_command_setVolts@send_buffer
  1244  000BC6  ECDB  F008         	call	_com_command_setVolts	;wreg free
  1245                           
  1246                           ;SlaveComm_PIC18.c: 173: break;
  1247  000BCA  0012               	return	
  1248  000BCC                     l1632:
  1249                           
  1250                           ;SlaveComm_PIC18.c: 175: com_command_setAmps( send_buffer );
  1251  000BCC  C018  F016         	movff	resetCommunications@send_buffer+1,com_command_setAmps@send_buffer+1
  1252  000BD0  C017  F015         	movff	resetCommunications@send_buffer,com_command_setAmps@send_buffer
  1253  000BD4  EC14  F009         	call	_com_command_setAmps	;wreg free
  1254                           
  1255                           ;SlaveComm_PIC18.c: 176: break;
  1256  000BD8  0012               	return	
  1257  000BDA                     l1634:
  1258                           
  1259                           ;SlaveComm_PIC18.c: 178: com_command_readCalibration( send_buffer );
  1260  000BDA  C018  F014         	movff	resetCommunications@send_buffer+1,com_command_readCalibration@send_buffer+1
  1261  000BDE  C017  F013         	movff	resetCommunications@send_buffer,com_command_readCalibration@send_buffer
  1262  000BE2  EC78  F009         	call	_com_command_readCalibration	;wreg free
  1263                           
  1264                           ;SlaveComm_PIC18.c: 179: break;
  1265  000BE6  0012               	return	
  1266  000BE8                     l1636:
  1267                           
  1268                           ;SlaveComm_PIC18.c: 181: com_command_testLED( send_buffer );
  1269  000BE8  C018  F014         	movff	resetCommunications@send_buffer+1,com_command_testLED@send_buffer+1
  1270  000BEC  C017  F013         	movff	resetCommunications@send_buffer,com_command_testLED@send_buffer
  1271  000BF0  EC69  F009         	call	_com_command_testLED	;wreg free
  1272                           
  1273                           ;SlaveComm_PIC18.c: 182: break;
  1274  000BF4  0012               	return	
  1275  000BF6                     l1638:
  1276                           
  1277                           ;SlaveComm_PIC18.c: 184: commState = 0;
  1278  000BF6  0E00               	movlw	0
  1279  000BF8  6E58               	movwf	resetCommunications@commState+1,c
  1280  000BFA  0E00               	movlw	0
  1281  000BFC  6E57               	movwf	resetCommunications@commState,c
  1282                           
  1283                           ;SlaveComm_PIC18.c: 185: break;
  1284  000BFE  0012               	return	
  1285  000C00                     l1642:
  1286  000C00  C057  F019         	movff	resetCommunications@commState,??_resetCommunications
  1287  000C04  C058  F01A         	movff	resetCommunications@commState+1,??_resetCommunications+1
  1288                           
  1289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1290                           ; Switch size 1, requested type "space"
  1291                           ; Number of cases is 1, Range of values is 0 to 0
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            4     3 (average)
  1295                           ;	Chosen strategy is simple_byte
  1296  000C08  501A               	movf	??_resetCommunications+1,w,c
  1297  000C0A  0A00               	xorlw	0	; case 0
  1298  000C0C  A4D8               	btfss	status,2,c
  1299  000C0E  D7F3               	goto	l1638
  1300                           
  1301                           ; Switch size 1, requested type "space"
  1302                           ; Number of cases is 6, Range of values is 1 to 6
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte           19    10 (average)
  1306                           ;	Chosen strategy is simple_byte
  1307  000C10  5019               	movf	??_resetCommunications,w,c
  1308  000C12  0A01               	xorlw	1	; case 1
  1309  000C14  B4D8               	btfsc	status,2,c
  1310  000C16  D7C5               	goto	l1626
  1311  000C18  0A03               	xorlw	3	; case 2
  1312  000C1A  B4D8               	btfsc	status,2,c
  1313  000C1C  D7C9               	goto	l1628
  1314  000C1E  0A01               	xorlw	1	; case 3
  1315  000C20  B4D8               	btfsc	status,2,c
  1316  000C22  D7CD               	goto	l1630
  1317  000C24  0A07               	xorlw	7	; case 4
  1318  000C26  B4D8               	btfsc	status,2,c
  1319  000C28  D7D1               	goto	l1632
  1320  000C2A  0A01               	xorlw	1	; case 5
  1321  000C2C  B4D8               	btfsc	status,2,c
  1322  000C2E  D7D5               	goto	l1634
  1323  000C30  0A03               	xorlw	3	; case 6
  1324  000C32  B4D8               	btfsc	status,2,c
  1325  000C34  D7D9               	goto	l1636
  1326  000C36  D7DF               	goto	l1638
  1327  000C38                     __end_of_resetCommunications:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           prodh	equ	0xFF4
  1331                           prodl	equ	0xFF3
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           indf1	equ	0xFE7
  1335                           fsr1h	equ	0xFE2
  1336                           fsr1l	equ	0xFE1
  1337                           indf2	equ	0xFDF
  1338                           fsr2h	equ	0xFDA
  1339                           fsr2l	equ	0xFD9
  1340                           status	equ	0xFD8
  1341                           
  1342 ;; *************** function _delayMS *****************
  1343 ;; Defined at:
  1344 ;;		line 240 in file "Current_Sense_Main.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  a               2    0[COMRAM] unsigned int 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  j               2    4[COMRAM] unsigned int 
  1349 ;;  i               2    2[COMRAM] unsigned int 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1359 ;;      Params:         2       0       0       0       0       0       0
  1360 ;;      Locals:         4       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0
  1362 ;;      Totals:         6       0       0       0       0       0       0
  1363 ;;Total ram usage:        6 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_init
  1369 ;;		_resetCommunications
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text6
  1374  0010FA                     __ptext6:
  1375                           	opt stack 0
  1376  0010FA                     _delayMS:
  1377                           	opt stack 29
  1378                           
  1379                           ;Current_Sense_Main.c: 241: unsigned int i, j;
  1380                           ;Current_Sense_Main.c: 243: for (i = 0; i < a; i++)
  1381                           
  1382                           ;incstack = 0
  1383  0010FA  0E00               	movlw	0
  1384  0010FC  6E04               	movwf	delayMS@i+1,c
  1385  0010FE  0E00               	movlw	0
  1386  001100  6E03               	movwf	delayMS@i,c
  1387  001102  D00F               	goto	l1456
  1388  001104                     l1444:
  1389                           
  1390                           ;Current_Sense_Main.c: 244: for (j = 0; j < 100; j++);
  1391  001104  0E00               	movlw	0
  1392  001106  6E06               	movwf	delayMS@j+1,c
  1393  001108  0E00               	movlw	0
  1394  00110A  6E05               	movwf	delayMS@j,c
  1395  00110C  0E64               	movlw	100
  1396  00110E  5C05               	subwf	delayMS@j,w,c
  1397  001110  0E00               	movlw	0
  1398  001112  5806               	subwfb	delayMS@j+1,w,c
  1399  001114  B0D8               	btfsc	status,0,c
  1400  001116  D003               	goto	l1454
  1401  001118  4A05               	infsnz	delayMS@j,f,c
  1402  00111A  2A06               	incf	delayMS@j+1,f,c
  1403  00111C  D7F7               	goto	L3
  1404  00111E                     l1454:
  1405  00111E  4A03               	infsnz	delayMS@i,f,c
  1406  001120  2A04               	incf	delayMS@i+1,f,c
  1407  001122                     l1456:
  1408  001122  5001               	movf	delayMS@a,w,c
  1409  001124  5C03               	subwf	delayMS@i,w,c
  1410  001126  5002               	movf	delayMS@a+1,w,c
  1411  001128  5804               	subwfb	delayMS@i+1,w,c
  1412  00112A  B0D8               	btfsc	status,0,c
  1413  00112C  0012               	return	
  1414  00112E  D7EA               	goto	l1444
  1415  001130                     __end_of_delayMS:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           prodh	equ	0xFF4
  1419                           prodl	equ	0xFF3
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           indf1	equ	0xFE7
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           indf2	equ	0xFDF
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _com_command_testLED *****************
  1431 ;; Defined at:
  1432 ;;		line 586 in file "SlaveComm_PIC18.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1435 ;;		 -> communications@send_buffer(42), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;		None               void
  1440 ;; Registers used:
  1441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         2       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0
  1450 ;;      Totals:         2       0       0       0       0       0       0
  1451 ;;Total ram usage:        2 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    3
  1454 ;; This function calls:
  1455 ;;		_command_builder2
  1456 ;; This function is called by:
  1457 ;;		_resetCommunications
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text7
  1462  0012D2                     __ptext7:
  1463                           	opt stack 0
  1464  0012D2                     _com_command_testLED:
  1465                           	opt stack 25
  1466                           
  1467                           ;SlaveComm_PIC18.c: 588: command_builder2( send_buffer, "Read", "LEDB" );
  1468                           
  1469                           ;incstack = 0
  1470  0012D2  C014  F00E         	movff	com_command_testLED@send_buffer+1,command_builder2@send_buffer+1
  1471  0012D6  C013  F00D         	movff	com_command_testLED@send_buffer,command_builder2@send_buffer
  1472  0012DA  0E06               	movlw	high STR_4
  1473  0012DC  6E10               	movwf	command_builder2@data1+1,c
  1474  0012DE  0E2D               	movlw	low STR_4
  1475  0012E0  6E0F               	movwf	command_builder2@data1,c
  1476  0012E2  0E06               	movlw	high STR_6
  1477  0012E4  6E12               	movwf	command_builder2@data2+1,c
  1478  0012E6  0E23               	movlw	low STR_6
  1479  0012E8  6E11               	movwf	command_builder2@data2,c
  1480  0012EA  EC6B  F007         	call	_command_builder2	;wreg free
  1481  0012EE  0012               	return	
  1482  0012F0                     __end_of_com_command_testLED:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           prodh	equ	0xFF4
  1486                           prodl	equ	0xFF3
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           indf1	equ	0xFE7
  1490                           fsr1h	equ	0xFE2
  1491                           fsr1l	equ	0xFE1
  1492                           indf2	equ	0xFDF
  1493                           fsr2h	equ	0xFDA
  1494                           fsr2l	equ	0xFD9
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function _com_command_setVolts *****************
  1498 ;; Defined at:
  1499 ;;		line 600 in file "SlaveComm_PIC18.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1502 ;;		 -> communications@send_buffer(42), 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;		None               void
  1507 ;; Registers used:
  1508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1514 ;;      Params:         2       0       0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0
  1517 ;;      Totals:         2       0       0       0       0       0       0
  1518 ;;Total ram usage:        2 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    3
  1521 ;; This function calls:
  1522 ;;		_command_builder3
  1523 ;; This function is called by:
  1524 ;;		_resetCommunications
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text8
  1529  0011B6                     __ptext8:
  1530                           	opt stack 0
  1531  0011B6                     _com_command_setVolts:
  1532                           	opt stack 25
  1533                           
  1534                           ;SlaveComm_PIC18.c: 602: command_builder3( send_buffer, "Set", "Volts", "222" );
  1535                           
  1536                           ;incstack = 0
  1537  0011B6  C016  F00E         	movff	com_command_setVolts@send_buffer+1,command_builder3@send_buffer+1
  1538  0011BA  C015  F00D         	movff	com_command_setVolts@send_buffer,command_builder3@send_buffer
  1539  0011BE  0E06               	movlw	high STR_2
  1540  0011C0  6E10               	movwf	command_builder3@data1+1,c
  1541  0011C2  0E50               	movlw	low STR_2
  1542  0011C4  6E0F               	movwf	command_builder3@data1,c
  1543  0011C6  0E06               	movlw	high STR_18
  1544  0011C8  6E12               	movwf	command_builder3@data2+1,c
  1545  0011CA  0E17               	movlw	low STR_18
  1546  0011CC  6E11               	movwf	command_builder3@data2,c
  1547  0011CE  0E06               	movlw	high STR_29
  1548  0011D0  6E14               	movwf	command_builder3@data3+1,c
  1549  0011D2  0E3C               	movlw	low STR_29
  1550  0011D4  6E13               	movwf	command_builder3@data3,c
  1551  0011D6  ECD4  F006         	call	_command_builder3	;wreg free
  1552  0011DA  0012               	return	
  1553  0011DC                     __end_of_com_command_setVolts:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           indf1	equ	0xFE7
  1561                           fsr1h	equ	0xFE2
  1562                           fsr1l	equ	0xFE1
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _com_command_setVersion *****************
  1569 ;; Defined at:
  1570 ;;		line 621 in file "SlaveComm_PIC18.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1573 ;;		 -> communications@send_buffer(42), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;		None               void
  1578 ;; Registers used:
  1579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1585 ;;      Params:         2       0       0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0
  1588 ;;      Totals:         2       0       0       0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    3
  1592 ;; This function calls:
  1593 ;;		_command_builder3
  1594 ;; This function is called by:
  1595 ;;		_resetCommunications
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text9
  1600  0011DC                     __ptext9:
  1601                           	opt stack 0
  1602  0011DC                     _com_command_setVersion:
  1603                           	opt stack 25
  1604                           
  1605                           ;SlaveComm_PIC18.c: 623: command_builder3( send_buffer, "Set", "PSVersion", "444" );
  1606                           
  1607                           ;incstack = 0
  1608  0011DC  C016  F00E         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  1609  0011E0  C015  F00D         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  1610  0011E4  0E06               	movlw	high STR_2
  1611  0011E6  6E10               	movwf	command_builder3@data1+1,c
  1612  0011E8  0E50               	movlw	low STR_2
  1613  0011EA  6E0F               	movwf	command_builder3@data1,c
  1614  0011EC  0E06               	movlw	high STR_20
  1615  0011EE  6E12               	movwf	command_builder3@data2+1,c
  1616  0011F0  0E0D               	movlw	low STR_20
  1617  0011F2  6E11               	movwf	command_builder3@data2,c
  1618  0011F4  0E06               	movlw	high STR_37
  1619  0011F6  6E14               	movwf	command_builder3@data3+1,c
  1620  0011F8  0E44               	movlw	low STR_37
  1621  0011FA  6E13               	movwf	command_builder3@data3,c
  1622  0011FC  ECD4  F006         	call	_command_builder3	;wreg free
  1623  001200  0012               	return	
  1624  001202                     __end_of_com_command_setVersion:
  1625                           	opt stack 0
  1626                           tblptru	equ	0xFF8
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           postinc0	equ	0xFEE
  1630                           wreg	equ	0xFE8
  1631                           indf1	equ	0xFE7
  1632                           fsr1h	equ	0xFE2
  1633                           fsr1l	equ	0xFE1
  1634                           indf2	equ	0xFDF
  1635                           fsr2h	equ	0xFDA
  1636                           fsr2l	equ	0xFD9
  1637                           status	equ	0xFD8
  1638                           
  1639 ;; *************** function _com_command_setPower *****************
  1640 ;; Defined at:
  1641 ;;		line 593 in file "SlaveComm_PIC18.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1644 ;;		 -> communications@send_buffer(42), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;		None               void
  1649 ;; Registers used:
  1650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         2       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         2       0       0       0       0       0       0
  1660 ;;Total ram usage:        2 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		_command_builder3
  1665 ;; This function is called by:
  1666 ;;		_resetCommunications
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text10
  1671  001202                     __ptext10:
  1672                           	opt stack 0
  1673  001202                     _com_command_setPower:
  1674                           	opt stack 25
  1675                           
  1676                           ;SlaveComm_PIC18.c: 595: command_builder3( send_buffer, "Set", "Watts", "54" );
  1677                           
  1678                           ;incstack = 0
  1679  001202  C016  F00E         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  1680  001206  C015  F00D         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  1681  00120A  0E06               	movlw	high STR_2
  1682  00120C  6E10               	movwf	command_builder3@data1+1,c
  1683  00120E  0E50               	movlw	low STR_2
  1684  001210  6E0F               	movwf	command_builder3@data1,c
  1685  001212  0E06               	movlw	high STR_17
  1686  001214  6E12               	movwf	command_builder3@data2+1,c
  1687  001216  0E1D               	movlw	low STR_17
  1688  001218  6E11               	movwf	command_builder3@data2,c
  1689  00121A  0E06               	movlw	high STR_26
  1690  00121C  6E14               	movwf	command_builder3@data3+1,c
  1691  00121E  0E54               	movlw	low STR_26
  1692  001220  6E13               	movwf	command_builder3@data3,c
  1693  001222  ECD4  F006         	call	_command_builder3	;wreg free
  1694  001226  0012               	return	
  1695  001228                     __end_of_com_command_setPower:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           indf1	equ	0xFE7
  1703                           fsr1h	equ	0xFE2
  1704                           fsr1l	equ	0xFE1
  1705                           indf2	equ	0xFDF
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function _com_command_setAmps *****************
  1711 ;; Defined at:
  1712 ;;		line 607 in file "SlaveComm_PIC18.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1715 ;;		 -> communications@send_buffer(42), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1727 ;;      Params:         2       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    3
  1734 ;; This function calls:
  1735 ;;		_command_builder3
  1736 ;; This function is called by:
  1737 ;;		_resetCommunications
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text11
  1742  001228                     __ptext11:
  1743                           	opt stack 0
  1744  001228                     _com_command_setAmps:
  1745                           	opt stack 25
  1746                           
  1747                           ;SlaveComm_PIC18.c: 609: command_builder3( send_buffer, "Set", "Amps", "333" );
  1748                           
  1749                           ;incstack = 0
  1750  001228  C016  F00E         	movff	com_command_setAmps@send_buffer+1,command_builder3@send_buffer+1
  1751  00122C  C015  F00D         	movff	com_command_setAmps@send_buffer,command_builder3@send_buffer
  1752  001230  0E06               	movlw	high STR_2
  1753  001232  6E10               	movwf	command_builder3@data1+1,c
  1754  001234  0E50               	movlw	low STR_2
  1755  001236  6E0F               	movwf	command_builder3@data1,c
  1756  001238  0E06               	movlw	high STR_19
  1757  00123A  6E12               	movwf	command_builder3@data2+1,c
  1758  00123C  0E37               	movlw	low STR_19
  1759  00123E  6E11               	movwf	command_builder3@data2,c
  1760  001240  0E06               	movlw	high STR_32
  1761  001242  6E14               	movwf	command_builder3@data3+1,c
  1762  001244  0E40               	movlw	low STR_32
  1763  001246  6E13               	movwf	command_builder3@data3,c
  1764  001248  ECD4  F006         	call	_command_builder3	;wreg free
  1765  00124C  0012               	return	
  1766  00124E                     __end_of_com_command_setAmps:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           prodh	equ	0xFF4
  1770                           prodl	equ	0xFF3
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           indf1	equ	0xFE7
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           indf2	equ	0xFDF
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _com_command_readCalibration *****************
  1782 ;; Defined at:
  1783 ;;		line 614 in file "SlaveComm_PIC18.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  1786 ;;		 -> communications@send_buffer(42), 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;		None               void
  1791 ;; Registers used:
  1792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         2       0       0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         2       0       0       0       0       0       0
  1802 ;;Total ram usage:        2 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		_command_builder2
  1807 ;; This function is called by:
  1808 ;;		_resetCommunications
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text12
  1813  0012F0                     __ptext12:
  1814                           	opt stack 0
  1815  0012F0                     _com_command_readCalibration:
  1816                           	opt stack 25
  1817                           
  1818                           ;SlaveComm_PIC18.c: 616: command_builder2( send_buffer, "Read", "Calibration" );
  1819                           
  1820                           ;incstack = 0
  1821  0012F0  C014  F00E         	movff	com_command_readCalibration@send_buffer+1,command_builder2@send_buffer+1
  1822  0012F4  C013  F00D         	movff	com_command_readCalibration@send_buffer,command_builder2@send_buffer
  1823  0012F8  0E06               	movlw	high STR_4
  1824  0012FA  6E10               	movwf	command_builder2@data1+1,c
  1825  0012FC  0E2D               	movlw	low STR_4
  1826  0012FE  6E0F               	movwf	command_builder2@data1,c
  1827  001300  0E06               	movlw	high STR_3
  1828  001302  6E12               	movwf	command_builder2@data2+1,c
  1829  001304  0E01               	movlw	low STR_3
  1830  001306  6E11               	movwf	command_builder2@data2,c
  1831  001308  EC6B  F007         	call	_command_builder2	;wreg free
  1832  00130C  0012               	return	
  1833  00130E                     __end_of_com_command_readCalibration:
  1834                           	opt stack 0
  1835                           tblptru	equ	0xFF8
  1836                           prodh	equ	0xFF4
  1837                           prodl	equ	0xFF3
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf1	equ	0xFE7
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _command_builder2 *****************
  1849 ;; Defined at:
  1850 ;;		line 392 in file "SlaveComm_PIC18.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  1853 ;;		 -> communications@send_buffer(42), 
  1854 ;;  data1           2   14[COMRAM] PTR unsigned char 
  1855 ;;		 -> STR_33(5), STR_22(5), 
  1856 ;;  data2           2   16[COMRAM] PTR unsigned char 
  1857 ;;		 -> STR_34(12), STR_23(5), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;		None               void
  1862 ;; Registers used:
  1863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1869 ;;      Params:         6       0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0
  1872 ;;      Totals:         6       0       0       0       0       0       0
  1873 ;;Total ram usage:        6 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    2
  1876 ;; This function calls:
  1877 ;;		_command_builder_add_char
  1878 ;;		_command_builder_add_string
  1879 ;; This function is called by:
  1880 ;;		_com_command_testLED
  1881 ;;		_com_command_readCalibration
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text13
  1886  000ED6                     __ptext13:
  1887                           	opt stack 0
  1888  000ED6                     _command_builder2:
  1889                           	opt stack 25
  1890                           
  1891                           ;SlaveComm_PIC18.c: 394: command_builder_add_char( send_buffer, '#' );
  1892                           
  1893                           ;incstack = 0
  1894  000ED6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1895  000EDA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1896  000EDE  0E23               	movlw	35
  1897  000EE0  6E03               	movwf	command_builder_add_char@data,c
  1898  000EE2  EC01  F008         	call	_command_builder_add_char	;wreg free
  1899                           
  1900                           ;SlaveComm_PIC18.c: 395: command_builder_add_char( send_buffer, '#' );
  1901  000EE6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1902  000EEA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1903  000EEE  0E23               	movlw	35
  1904  000EF0  6E03               	movwf	command_builder_add_char@data,c
  1905  000EF2  EC01  F008         	call	_command_builder_add_char	;wreg free
  1906                           
  1907                           ;SlaveComm_PIC18.c: 396: command_builder_add_char( send_buffer, '!' );
  1908  000EF6  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1909  000EFA  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1910  000EFE  0E21               	movlw	33
  1911  000F00  6E03               	movwf	command_builder_add_char@data,c
  1912  000F02  EC01  F008         	call	_command_builder_add_char	;wreg free
  1913                           
  1914                           ;SlaveComm_PIC18.c: 397: command_builder_add_string( send_buffer, data1 );
  1915  000F06  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1916  000F0A  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1917  000F0E  C010  F008         	movff	command_builder2@data1+1,command_builder_add_string@data_string+1
  1918  000F12  C00F  F007         	movff	command_builder2@data1,command_builder_add_string@data_string
  1919  000F16  ECA8  F007         	call	_command_builder_add_string	;wreg free
  1920                           
  1921                           ;SlaveComm_PIC18.c: 398: command_builder_add_char( send_buffer, ';' );
  1922  000F1A  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1923  000F1E  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1924  000F22  0E3B               	movlw	59
  1925  000F24  6E03               	movwf	command_builder_add_char@data,c
  1926  000F26  EC01  F008         	call	_command_builder_add_char	;wreg free
  1927                           
  1928                           ;SlaveComm_PIC18.c: 399: command_builder_add_string( send_buffer, data2 );
  1929  000F2A  C00E  F006         	movff	command_builder2@send_buffer+1,command_builder_add_string@send_buffer+1
  1930  000F2E  C00D  F005         	movff	command_builder2@send_buffer,command_builder_add_string@send_buffer
  1931  000F32  C012  F008         	movff	command_builder2@data2+1,command_builder_add_string@data_string+1
  1932  000F36  C011  F007         	movff	command_builder2@data2,command_builder_add_string@data_string
  1933  000F3A  ECA8  F007         	call	_command_builder_add_string	;wreg free
  1934                           
  1935                           ;SlaveComm_PIC18.c: 400: command_builder_add_char( send_buffer, '*' );
  1936  000F3E  C00E  F002         	movff	command_builder2@send_buffer+1,command_builder_add_char@send_buffer+1
  1937  000F42  C00D  F001         	movff	command_builder2@send_buffer,command_builder_add_char@send_buffer
  1938  000F46  0E2A               	movlw	42
  1939  000F48  6E03               	movwf	command_builder_add_char@data,c
  1940  000F4A  EC01  F008         	call	_command_builder_add_char	;wreg free
  1941  000F4E  0012               	return	
  1942  000F50                     __end_of_command_builder2:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           indf1	equ	0xFE7
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _receive_data *****************
  1958 ;; Defined at:
  1959 ;;		line 190 in file "SlaveComm_PIC18.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  receive_buff    2    3[COMRAM] PTR struct buffer
  1962 ;;		 -> communications@receive_buffer(42), 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  data            1    6[COMRAM] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      enum E7493
  1967 ;; Registers used:
  1968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1974 ;;      Params:         2       0       0       0       0       0       0
  1975 ;;      Locals:         1       0       0       0       0       0       0
  1976 ;;      Temps:          1       0       0       0       0       0       0
  1977 ;;      Totals:         4       0       0       0       0       0       0
  1978 ;;Total ram usage:        4 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    1
  1981 ;; This function calls:
  1982 ;;		_SPI_receive_data
  1983 ;; This function is called by:
  1984 ;;		_communications
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text14
  1989  000C38                     __ptext14:
  1990                           	opt stack 0
  1991  000C38                     _receive_data:
  1992                           	opt stack 28
  1993                           
  1994                           ;SlaveComm_PIC18.c: 192: char data;
  1995                           ;SlaveComm_PIC18.c: 194: static enum receive_status my_status = receive_waiting;
  1996                           ;SlaveComm_PIC18.c: 196: if( my_status == receive_end_command )
  1997                           
  1998                           ;incstack = 0
  1999  000C38  505D               	movf	receive_data@my_status,w,c
  2000  000C3A  0A02               	xorlw	2
  2001  000C3C  A4D8               	btfss	status,2,c
  2002  000C3E  D002               	goto	l1652
  2003                           
  2004                           ;SlaveComm_PIC18.c: 197: {
  2005                           ;SlaveComm_PIC18.c: 198: my_status = receive_waiting;
  2006  000C40  0E00               	movlw	0
  2007  000C42  6E5D               	movwf	receive_data@my_status,c
  2008  000C44                     l1652:
  2009                           
  2010                           ;SlaveComm_PIC18.c: 199: }
  2011                           ;SlaveComm_PIC18.c: 201: if( SPI_receive_data( &data ) == 1 )
  2012  000C44  0E00               	movlw	high receive_data@data
  2013  000C46  6E02               	movwf	SPI_receive_data@data+1,c
  2014  000C48  0E07               	movlw	low receive_data@data
  2015  000C4A  6E01               	movwf	SPI_receive_data@data,c
  2016  000C4C  ECC7  F008         	call	_SPI_receive_data	;wreg free
  2017  000C50  6E06               	movwf	??_receive_data& (0+255),c
  2018  000C52  0406               	decf	??_receive_data,w,c
  2019  000C54  A4D8               	btfss	status,2,c
  2020  000C56  D04F               	goto	l153
  2021                           
  2022                           ;SlaveComm_PIC18.c: 202: {
  2023                           ;SlaveComm_PIC18.c: 203: if( ( data == '!' ) && ( my_status != receive_in_command ) )
  2024  000C58  5007               	movf	receive_data@data,w,c
  2025  000C5A  0A21               	xorlw	33
  2026  000C5C  A4D8               	btfss	status,2,c
  2027  000C5E  D015               	goto	l1664
  2028  000C60  045D               	decf	receive_data@my_status,w,c
  2029  000C62  B4D8               	btfsc	status,2,c
  2030  000C64  D012               	goto	l1664
  2031                           
  2032                           ;SlaveComm_PIC18.c: 204: {
  2033                           ;SlaveComm_PIC18.c: 205: my_status = receive_in_command;
  2034  000C66  0E01               	movlw	1
  2035  000C68  6E5D               	movwf	receive_data@my_status,c
  2036                           
  2037                           ;SlaveComm_PIC18.c: 206: receive_buffer->read_position = 0;
  2038  000C6A  EE20 F029          	lfsr	2,41
  2039  000C6E  5004               	movf	receive_data@receive_buffer,w,c
  2040  000C70  26D9               	addwf	fsr2l,f,c
  2041  000C72  5005               	movf	receive_data@receive_buffer+1,w,c
  2042  000C74  22DA               	addwfc	fsr2h,f,c
  2043  000C76  0E00               	movlw	0
  2044  000C78  6EDF               	movwf	indf2,c
  2045                           
  2046                           ;SlaveComm_PIC18.c: 207: receive_buffer->write_position = 0;
  2047  000C7A  EE20 F028          	lfsr	2,40
  2048  000C7E  5004               	movf	receive_data@receive_buffer,w,c
  2049  000C80  26D9               	addwf	fsr2l,f,c
  2050  000C82  5005               	movf	receive_data@receive_buffer+1,w,c
  2051  000C84  22DA               	addwfc	fsr2h,f,c
  2052  000C86  0E00               	movlw	0
  2053  000C88  6EDF               	movwf	indf2,c
  2054  000C8A                     l1664:
  2055                           
  2056                           ;SlaveComm_PIC18.c: 208: }
  2057                           ;SlaveComm_PIC18.c: 210: if( my_status == receive_in_command )
  2058  000C8A  045D               	decf	receive_data@my_status,w,c
  2059  000C8C  A4D8               	btfss	status,2,c
  2060  000C8E  D02A               	goto	l1674
  2061                           
  2062                           ;SlaveComm_PIC18.c: 211: {
  2063                           ;SlaveComm_PIC18.c: 212: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2064  000C90  EE20 F028          	lfsr	2,40
  2065  000C94  5004               	movf	receive_data@receive_buffer,w,c
  2066  000C96  26D9               	addwf	fsr2l,f,c
  2067  000C98  5005               	movf	receive_data@receive_buffer+1,w,c
  2068  000C9A  22DA               	addwfc	fsr2h,f,c
  2069  000C9C  50DF               	movf	indf2,w,c
  2070  000C9E  6E06               	movwf	??_receive_data& (0+255),c
  2071  000CA0  5006               	movf	??_receive_data,w,c
  2072  000CA2  0D01               	mullw	1
  2073  000CA4  50F3               	movf	prodl,w,c
  2074  000CA6  2404               	addwf	receive_data@receive_buffer,w,c
  2075  000CA8  6ED9               	movwf	fsr2l,c
  2076  000CAA  50F4               	movf	prodh,w,c
  2077  000CAC  2005               	addwfc	receive_data@receive_buffer+1,w,c
  2078  000CAE  6EDA               	movwf	fsr2h,c
  2079  000CB0  C007  FFDF         	movff	receive_data@data,indf2
  2080                           
  2081                           ;SlaveComm_PIC18.c: 214: receive_buffer->write_position++;
  2082  000CB4  EE20 F028          	lfsr	2,40
  2083  000CB8  5004               	movf	receive_data@receive_buffer,w,c
  2084  000CBA  26D9               	addwf	fsr2l,f,c
  2085  000CBC  5005               	movf	receive_data@receive_buffer+1,w,c
  2086  000CBE  22DA               	addwfc	fsr2h,f,c
  2087  000CC0  2ADF               	incf	indf2,f,c
  2088                           
  2089                           ;SlaveComm_PIC18.c: 215: if( receive_buffer->write_position >= 40 )
  2090  000CC2  EE20 F028          	lfsr	2,40
  2091  000CC6  5004               	movf	receive_data@receive_buffer,w,c
  2092  000CC8  26D9               	addwf	fsr2l,f,c
  2093  000CCA  5005               	movf	receive_data@receive_buffer+1,w,c
  2094  000CCC  22DA               	addwfc	fsr2h,f,c
  2095  000CCE  0E27               	movlw	39
  2096  000CD0  64DF               	cpfsgt	indf2,c
  2097  000CD2  D008               	goto	l1674
  2098                           
  2099                           ;SlaveComm_PIC18.c: 216: {
  2100                           ;SlaveComm_PIC18.c: 217: receive_buffer->write_position = ( 40 - 1 );
  2101  000CD4  EE20 F028          	lfsr	2,40
  2102  000CD8  5004               	movf	receive_data@receive_buffer,w,c
  2103  000CDA  26D9               	addwf	fsr2l,f,c
  2104  000CDC  5005               	movf	receive_data@receive_buffer+1,w,c
  2105  000CDE  22DA               	addwfc	fsr2h,f,c
  2106  000CE0  0E27               	movlw	39
  2107  000CE2  6EDF               	movwf	indf2,c
  2108  000CE4                     l1674:
  2109                           
  2110                           ;SlaveComm_PIC18.c: 218: }
  2111                           ;SlaveComm_PIC18.c: 219: }
  2112                           ;SlaveComm_PIC18.c: 221: if( ( my_status == receive_in_command ) && ( data == '*' ) )
  2113  000CE4  045D               	decf	receive_data@my_status,w,c
  2114  000CE6  A4D8               	btfss	status,2,c
  2115  000CE8  D006               	goto	l153
  2116  000CEA  5007               	movf	receive_data@data,w,c
  2117  000CEC  0A2A               	xorlw	42
  2118  000CEE  A4D8               	btfss	status,2,c
  2119  000CF0  D002               	goto	l153
  2120                           
  2121                           ;SlaveComm_PIC18.c: 222: {
  2122                           ;SlaveComm_PIC18.c: 223: my_status = receive_end_command;
  2123  000CF2  0E02               	movlw	2
  2124  000CF4  6E5D               	movwf	receive_data@my_status,c
  2125  000CF6                     l153:
  2126                           
  2127                           ;SlaveComm_PIC18.c: 224: }
  2128                           ;SlaveComm_PIC18.c: 225: }
  2129                           ;SlaveComm_PIC18.c: 227: return my_status;
  2130  000CF6  505D               	movf	receive_data@my_status,w,c
  2131  000CF8  0012               	return	
  2132  000CFA                     __end_of_receive_data:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           indf1	equ	0xFE7
  2140                           fsr1h	equ	0xFE2
  2141                           fsr1l	equ	0xFE1
  2142                           indf2	equ	0xFDF
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _SPI_receive_data *****************
  2148 ;; Defined at:
  2149 ;;		line 537 in file "SlaveComm_PIC18.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  data            2    0[COMRAM] PTR unsigned char 
  2152 ;;		 -> receive_data@data(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  recvGood        1    2[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         2       0       0       0       0       0       0
  2165 ;;      Locals:         1       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0
  2167 ;;      Totals:         3       0       0       0       0       0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_receive_data
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text15
  2178  00118E                     __ptext15:
  2179                           	opt stack 0
  2180  00118E                     _SPI_receive_data:
  2181                           	opt stack 28
  2182                           
  2183                           ;SlaveComm_PIC18.c: 540: bool recvGood = 0;
  2184                           
  2185                           ;incstack = 0
  2186  00118E  0E00               	movlw	0
  2187  001190  6E03               	movwf	SPI_receive_data@recvGood,c
  2188                           
  2189                           ;SlaveComm_PIC18.c: 542: if( SSP2STATbits.BF == 1 )
  2190  001192  A06D               	btfss	3949,0,c	;volatile
  2191  001194  D00C               	goto	l1492
  2192                           
  2193                           ;SlaveComm_PIC18.c: 543: {
  2194                           ;SlaveComm_PIC18.c: 544: *data = SSP2BUF;
  2195  001196  C001  FFD9         	movff	SPI_receive_data@data,fsr2l
  2196  00119A  C002  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2197  00119E  CF6F FFDF          	movff	3951,indf2	;volatile
  2198                           
  2199                           ;SlaveComm_PIC18.c: 545: recvGood = 1;
  2200  0011A2  0E01               	movlw	1
  2201  0011A4  6E03               	movwf	SPI_receive_data@recvGood,c
  2202                           
  2203                           ;SlaveComm_PIC18.c: 546: SSP2CON1bits.WCOL = 0;
  2204  0011A6  9E6C               	bcf	3948,7,c	;volatile
  2205                           
  2206                           ;SlaveComm_PIC18.c: 547: SPI_transmit_wait = 0;
  2207  0011A8  0E00               	movlw	0
  2208  0011AA  6E59               	movwf	_SPI_transmit_wait,c
  2209                           
  2210                           ;SlaveComm_PIC18.c: 548: }
  2211  0011AC  D002               	goto	l258
  2212  0011AE                     l1492:
  2213                           
  2214                           ;SlaveComm_PIC18.c: 549: else
  2215                           ;SlaveComm_PIC18.c: 550: {
  2216                           ;SlaveComm_PIC18.c: 551: recvGood = 0;
  2217  0011AE  0E00               	movlw	0
  2218  0011B0  6E03               	movwf	SPI_receive_data@recvGood,c
  2219  0011B2                     l258:
  2220                           
  2221                           ;SlaveComm_PIC18.c: 552: }
  2222                           ;SlaveComm_PIC18.c: 554: return recvGood;
  2223  0011B2  5003               	movf	SPI_receive_data@recvGood,w,c
  2224  0011B4  0012               	return	
  2225  0011B6                     __end_of_SPI_receive_data:
  2226                           	opt stack 0
  2227                           tblptru	equ	0xFF8
  2228                           prodh	equ	0xFF4
  2229                           prodl	equ	0xFF3
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           indf1	equ	0xFE7
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           indf2	equ	0xFDF
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _process_data *****************
  2241 ;; Defined at:
  2242 ;;		line 230 in file "SlaveComm_PIC18.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  receive_buff    2   26[COMRAM] PTR struct buffer
  2245 ;;		 -> communications@receive_buffer(42), 
  2246 ;;  send_buffer     2   28[COMRAM] PTR struct buffer
  2247 ;;		 -> communications@send_buffer(42), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  parameters     50   30[COMRAM] unsigned char [10][5]
  2250 ;;  end_of_trans    1   80[COMRAM] unsigned char 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      unsigned char 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2260 ;;      Params:         4       0       0       0       0       0       0
  2261 ;;      Locals:        51       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0
  2263 ;;      Totals:        55       0       0       0       0       0       0
  2264 ;;Total ram usage:       55 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    5
  2267 ;; This function calls:
  2268 ;;		_process_data_parameterize
  2269 ;;		_process_data_parameters
  2270 ;; This function is called by:
  2271 ;;		_communications
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text16
  2276  001160                     __ptext16:
  2277                           	opt stack 0
  2278  001160                     _process_data:
  2279                           	opt stack 24
  2280                           
  2281                           ;SlaveComm_PIC18.c: 232: bool end_of_transmission_received;
  2282                           ;SlaveComm_PIC18.c: 237: char parameters[5][10];
  2283                           ;SlaveComm_PIC18.c: 239: process_data_parameterize( parameters, receive_buffer );
  2284                           
  2285                           ;incstack = 0
  2286  001160  0E00               	movlw	high process_data@parameters
  2287  001162  6E08               	movwf	process_data_parameterize@parameters+1,c
  2288  001164  0E1F               	movlw	low process_data@parameters
  2289  001166  6E07               	movwf	process_data_parameterize@parameters,c
  2290  001168  C01C  F00A         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  2291  00116C  C01B  F009         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  2292  001170  EC55  F004         	call	_process_data_parameterize	;wreg free
  2293                           
  2294                           ;SlaveComm_PIC18.c: 241: end_of_transmission_received = process_data_parameters( paramet
      +                          ers, send_buffer );
  2295  001174  0E00               	movlw	high process_data@parameters
  2296  001176  6E16               	movwf	process_data_parameters@parameters+1,c
  2297  001178  0E1F               	movlw	low process_data@parameters
  2298  00117A  6E15               	movwf	process_data_parameters@parameters,c
  2299  00117C  C01E  F018         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  2300  001180  C01D  F017         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  2301  001184  EC2E  F003         	call	_process_data_parameters	;wreg free
  2302  001188  6E51               	movwf	process_data@end_of_transmission_received,c
  2303                           
  2304                           ;SlaveComm_PIC18.c: 243: return end_of_transmission_received;
  2305  00118A  5051               	movf	process_data@end_of_transmission_received,w,c
  2306  00118C  0012               	return	
  2307  00118E                     __end_of_process_data:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           prodh	equ	0xFF4
  2311                           prodl	equ	0xFF3
  2312                           postinc0	equ	0xFEE
  2313                           wreg	equ	0xFE8
  2314                           indf1	equ	0xFE7
  2315                           fsr1h	equ	0xFE2
  2316                           fsr1l	equ	0xFE1
  2317                           indf2	equ	0xFDF
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _process_data_parameters *****************
  2323 ;; Defined at:
  2324 ;;		line 306 in file "SlaveComm_PIC18.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  parameters      2   20[COMRAM] PTR unsigned char [10]
  2327 ;;		 -> process_data@parameters(50), 
  2328 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  2329 ;;		 -> communications@send_buffer(42), 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  end_of_trans    1   25[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      unsigned char 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2341 ;;      Params:         4       0       0       0       0       0       0
  2342 ;;      Locals:         1       0       0       0       0       0       0
  2343 ;;      Temps:          1       0       0       0       0       0       0
  2344 ;;      Totals:         6       0       0       0       0       0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    4
  2348 ;; This function calls:
  2349 ;;		_command_builder3
  2350 ;;		_send_end_of_transmission
  2351 ;;		_strmatch
  2352 ;; This function is called by:
  2353 ;;		_process_data
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text17
  2358  00065C                     __ptext17:
  2359                           	opt stack 0
  2360  00065C                     _process_data_parameters:
  2361                           	opt stack 24
  2362                           
  2363                           ;SlaveComm_PIC18.c: 308: bool end_of_transmission_received = 0;
  2364                           
  2365                           ;incstack = 0
  2366  00065C  0E00               	movlw	0
  2367  00065E  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  2368                           
  2369                           ;SlaveComm_PIC18.c: 311: if( strmatch( parameters[0], "END" ) == 1 )
  2370  000660  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2371  000664  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2372  000668  0E06               	movlw	high STR_1
  2373  00066A  6E0F               	movwf	strmatch@b+1,c
  2374  00066C  0E48               	movlw	low STR_1
  2375  00066E  6E0E               	movwf	strmatch@b,c
  2376  000670  EC98  F008         	call	_strmatch	;wreg free
  2377  000674  6E19               	movwf	??_process_data_parameters& (0+255),c
  2378  000676  0419               	decf	??_process_data_parameters,w,c
  2379  000678  A4D8               	btfss	status,2,c
  2380  00067A  D008               	goto	l1548
  2381                           
  2382                           ;SlaveComm_PIC18.c: 312: {
  2383                           ;SlaveComm_PIC18.c: 313: if( LATBbits.LATB4 == 1 )
  2384  00067C  A88A               	btfss	3978,4,c	;volatile
  2385  00067E  D002               	goto	l182
  2386                           
  2387                           ;SlaveComm_PIC18.c: 314: {
  2388                           ;SlaveComm_PIC18.c: 315: LATBbits.LATB4 = 0;
  2389  000680  988A               	bcf	3978,4,c	;volatile
  2390                           
  2391                           ;SlaveComm_PIC18.c: 316: }
  2392  000682  D001               	goto	l1546
  2393  000684                     l182:
  2394                           
  2395                           ;SlaveComm_PIC18.c: 317: else
  2396                           ;SlaveComm_PIC18.c: 318: {
  2397                           ;SlaveComm_PIC18.c: 319: LATBbits.LATB4 = 1;
  2398  000684  888A               	bsf	3978,4,c	;volatile
  2399  000686                     l1546:
  2400                           
  2401                           ;SlaveComm_PIC18.c: 320: }
  2402                           ;SlaveComm_PIC18.c: 322: end_of_transmission_received = 1;
  2403  000686  0E01               	movlw	1
  2404  000688  6E1A               	movwf	process_data_parameters@end_of_transmission_received,c
  2405                           
  2406                           ;SlaveComm_PIC18.c: 323: }
  2407  00068A  D10D               	goto	l1590
  2408  00068C                     l1548:
  2409                           
  2410                           ;SlaveComm_PIC18.c: 324: else if( strmatch( parameters[0], "Set" ) == 1 )
  2411  00068C  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2412  000690  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2413  000694  0E06               	movlw	high STR_2
  2414  000696  6E0F               	movwf	strmatch@b+1,c
  2415  000698  0E50               	movlw	low STR_2
  2416  00069A  6E0E               	movwf	strmatch@b,c
  2417  00069C  EC98  F008         	call	_strmatch	;wreg free
  2418  0006A0  6E19               	movwf	??_process_data_parameters& (0+255),c
  2419  0006A2  0419               	decf	??_process_data_parameters,w,c
  2420  0006A4  A4D8               	btfss	status,2,c
  2421  0006A6  D00D               	goto	l1552
  2422                           
  2423                           ;SlaveComm_PIC18.c: 325: {
  2424                           ;SlaveComm_PIC18.c: 326: if( strmatch( parameters[1], "Calibration" ) == 1 )
  2425  0006A8  0E0A               	movlw	10
  2426  0006AA  2415               	addwf	process_data_parameters@parameters,w,c
  2427  0006AC  6E0C               	movwf	strmatch@a,c
  2428  0006AE  0E00               	movlw	0
  2429  0006B0  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2430  0006B2  6E0D               	movwf	strmatch@a+1,c
  2431  0006B4  0E06               	movlw	high STR_3
  2432  0006B6  6E0F               	movwf	strmatch@b+1,c
  2433  0006B8  0E01               	movlw	low STR_3
  2434  0006BA  6E0E               	movwf	strmatch@b,c
  2435  0006BC  EC98  F008         	call	_strmatch	;wreg free
  2436  0006C0  D0F2               	goto	l1590
  2437  0006C2                     l1552:
  2438                           
  2439                           ;SlaveComm_PIC18.c: 332: else if( strmatch( parameters[0], "Read" ) == 1 )
  2440  0006C2  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2441  0006C6  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2442  0006CA  0E06               	movlw	high STR_4
  2443  0006CC  6E0F               	movwf	strmatch@b+1,c
  2444  0006CE  0E2D               	movlw	low STR_4
  2445  0006D0  6E0E               	movwf	strmatch@b,c
  2446  0006D2  EC98  F008         	call	_strmatch	;wreg free
  2447  0006D6  6E19               	movwf	??_process_data_parameters& (0+255),c
  2448  0006D8  0419               	decf	??_process_data_parameters,w,c
  2449  0006DA  B4D8               	btfsc	status,2,c
  2450  0006DC  D0E4               	goto	l1590
  2451                           
  2452                           ;SlaveComm_PIC18.c: 336: else if( strmatch( parameters[0], "Data" ) == 1 )
  2453                           
  2454                           ;SlaveComm_PIC18.c: 333: {
  2455                           ;SlaveComm_PIC18.c: 335: }
  2456  0006DE  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2457  0006E2  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2458  0006E6  0E06               	movlw	high STR_5
  2459  0006E8  6E0F               	movwf	strmatch@b+1,c
  2460  0006EA  0E28               	movlw	low STR_5
  2461  0006EC  6E0E               	movwf	strmatch@b,c
  2462  0006EE  EC98  F008         	call	_strmatch	;wreg free
  2463  0006F2  6E19               	movwf	??_process_data_parameters& (0+255),c
  2464  0006F4  0419               	decf	??_process_data_parameters,w,c
  2465  0006F6  A4D8               	btfss	status,2,c
  2466  0006F8  D056               	goto	l1568
  2467                           
  2468                           ;SlaveComm_PIC18.c: 337: {
  2469                           ;SlaveComm_PIC18.c: 338: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2470  0006FA  0E0A               	movlw	10
  2471  0006FC  2415               	addwf	process_data_parameters@parameters,w,c
  2472  0006FE  6E0C               	movwf	strmatch@a,c
  2473  000700  0E00               	movlw	0
  2474  000702  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2475  000704  6E0D               	movwf	strmatch@a+1,c
  2476  000706  0E06               	movlw	high STR_6
  2477  000708  6E0F               	movwf	strmatch@b+1,c
  2478  00070A  0E23               	movlw	low STR_6
  2479  00070C  6E0E               	movwf	strmatch@b,c
  2480  00070E  EC98  F008         	call	_strmatch	;wreg free
  2481  000712  6E19               	movwf	??_process_data_parameters& (0+255),c
  2482  000714  0419               	decf	??_process_data_parameters,w,c
  2483  000716  A4D8               	btfss	status,2,c
  2484  000718  D0C6               	goto	l1590
  2485                           
  2486                           ;SlaveComm_PIC18.c: 339: {
  2487                           ;SlaveComm_PIC18.c: 340: if( strmatch( parameters[2], "On" ) == 1 )
  2488  00071A  0E14               	movlw	20
  2489  00071C  2415               	addwf	process_data_parameters@parameters,w,c
  2490  00071E  6E0C               	movwf	strmatch@a,c
  2491  000720  0E00               	movlw	0
  2492  000722  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2493  000724  6E0D               	movwf	strmatch@a+1,c
  2494  000726  0E06               	movlw	high STR_7
  2495  000728  6E0F               	movwf	strmatch@b+1,c
  2496  00072A  0E57               	movlw	low STR_7
  2497  00072C  6E0E               	movwf	strmatch@b,c
  2498  00072E  EC98  F008         	call	_strmatch	;wreg free
  2499  000732  6E19               	movwf	??_process_data_parameters& (0+255),c
  2500  000734  0419               	decf	??_process_data_parameters,w,c
  2501  000736  A4D8               	btfss	status,2,c
  2502  000738  D013               	goto	l1564
  2503                           
  2504                           ;SlaveComm_PIC18.c: 341: {
  2505                           ;SlaveComm_PIC18.c: 342: command_builder3( send_buffer, "Set", "LEDB", "Off" );
  2506  00073A  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2507  00073E  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2508  000742  0E06               	movlw	high STR_2
  2509  000744  6E10               	movwf	command_builder3@data1+1,c
  2510  000746  0E50               	movlw	low STR_2
  2511  000748  6E0F               	movwf	command_builder3@data1,c
  2512  00074A  0E06               	movlw	high STR_6
  2513  00074C  6E12               	movwf	command_builder3@data2+1,c
  2514  00074E  0E23               	movlw	low STR_6
  2515  000750  6E11               	movwf	command_builder3@data2,c
  2516  000752  0E06               	movlw	high STR_10
  2517  000754  6E14               	movwf	command_builder3@data3+1,c
  2518  000756  0E4C               	movlw	low STR_10
  2519  000758  6E13               	movwf	command_builder3@data3,c
  2520  00075A  ECD4  F006         	call	_command_builder3	;wreg free
  2521                           
  2522                           ;SlaveComm_PIC18.c: 343: }
  2523  00075E  D0A3               	goto	l1590
  2524  000760                     l1564:
  2525                           
  2526                           ;SlaveComm_PIC18.c: 344: else if( strmatch( parameters[2], "Off" ) == 1 )
  2527  000760  0E14               	movlw	20
  2528  000762  2415               	addwf	process_data_parameters@parameters,w,c
  2529  000764  6E0C               	movwf	strmatch@a,c
  2530  000766  0E00               	movlw	0
  2531  000768  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2532  00076A  6E0D               	movwf	strmatch@a+1,c
  2533  00076C  0E06               	movlw	high STR_10
  2534  00076E  6E0F               	movwf	strmatch@b+1,c
  2535  000770  0E4C               	movlw	low STR_10
  2536  000772  6E0E               	movwf	strmatch@b,c
  2537  000774  EC98  F008         	call	_strmatch	;wreg free
  2538  000778  6E19               	movwf	??_process_data_parameters& (0+255),c
  2539  00077A  0419               	decf	??_process_data_parameters,w,c
  2540  00077C  A4D8               	btfss	status,2,c
  2541  00077E  D093               	goto	l1590
  2542                           
  2543                           ;SlaveComm_PIC18.c: 345: {
  2544                           ;SlaveComm_PIC18.c: 346: command_builder3( send_buffer, "Set", "LEDB", "On" );
  2545  000780  C018  F00E         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  2546  000784  C017  F00D         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  2547  000788  0E06               	movlw	high STR_2
  2548  00078A  6E10               	movwf	command_builder3@data1+1,c
  2549  00078C  0E50               	movlw	low STR_2
  2550  00078E  6E0F               	movwf	command_builder3@data1,c
  2551  000790  0E06               	movlw	high STR_6
  2552  000792  6E12               	movwf	command_builder3@data2+1,c
  2553  000794  0E23               	movlw	low STR_6
  2554  000796  6E11               	movwf	command_builder3@data2,c
  2555  000798  0E06               	movlw	high STR_7
  2556  00079A  6E14               	movwf	command_builder3@data3+1,c
  2557  00079C  0E57               	movlw	low STR_7
  2558  00079E  6E13               	movwf	command_builder3@data3,c
  2559  0007A0  ECD4  F006         	call	_command_builder3	;wreg free
  2560  0007A4  D080               	goto	l1590
  2561  0007A6                     l1568:
  2562                           
  2563                           ;SlaveComm_PIC18.c: 350: else if( strmatch( parameters[0], "Conf" ) == 1 )
  2564  0007A6  C016  F00D         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2565  0007AA  C015  F00C         	movff	process_data_parameters@parameters,strmatch@a
  2566  0007AE  0E06               	movlw	high STR_15
  2567  0007B0  6E0F               	movwf	strmatch@b+1,c
  2568  0007B2  0E32               	movlw	low STR_15
  2569  0007B4  6E0E               	movwf	strmatch@b,c
  2570  0007B6  EC98  F008         	call	_strmatch	;wreg free
  2571  0007BA  6E19               	movwf	??_process_data_parameters& (0+255),c
  2572  0007BC  0419               	decf	??_process_data_parameters,w,c
  2573  0007BE  A4D8               	btfss	status,2,c
  2574  0007C0  D072               	goto	l1590
  2575                           
  2576                           ;SlaveComm_PIC18.c: 351: {
  2577                           ;SlaveComm_PIC18.c: 352: if( strmatch( parameters[1], "LEDB" ) == 1 )
  2578  0007C2  0E0A               	movlw	10
  2579  0007C4  2415               	addwf	process_data_parameters@parameters,w,c
  2580  0007C6  6E0C               	movwf	strmatch@a,c
  2581  0007C8  0E00               	movlw	0
  2582  0007CA  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2583  0007CC  6E0D               	movwf	strmatch@a+1,c
  2584  0007CE  0E06               	movlw	high STR_6
  2585  0007D0  6E0F               	movwf	strmatch@b+1,c
  2586  0007D2  0E23               	movlw	low STR_6
  2587  0007D4  6E0E               	movwf	strmatch@b,c
  2588  0007D6  EC98  F008         	call	_strmatch	;wreg free
  2589  0007DA  6E19               	movwf	??_process_data_parameters& (0+255),c
  2590  0007DC  0419               	decf	??_process_data_parameters,w,c
  2591  0007DE  A4D8               	btfss	status,2,c
  2592  0007E0  D007               	goto	l1574
  2593                           
  2594                           ;SlaveComm_PIC18.c: 353: {
  2595                           ;SlaveComm_PIC18.c: 354: send_end_of_transmission( send_buffer );
  2596  0007E2  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2597  0007E6  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2598  0007EA  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2599                           
  2600                           ;SlaveComm_PIC18.c: 355: }
  2601  0007EE  D05B               	goto	l1590
  2602  0007F0                     l1574:
  2603                           
  2604                           ;SlaveComm_PIC18.c: 356: else if( strmatch( parameters[1], "Watts" ) == 1 )
  2605  0007F0  0E0A               	movlw	10
  2606  0007F2  2415               	addwf	process_data_parameters@parameters,w,c
  2607  0007F4  6E0C               	movwf	strmatch@a,c
  2608  0007F6  0E00               	movlw	0
  2609  0007F8  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2610  0007FA  6E0D               	movwf	strmatch@a+1,c
  2611  0007FC  0E06               	movlw	high STR_17
  2612  0007FE  6E0F               	movwf	strmatch@b+1,c
  2613  000800  0E1D               	movlw	low STR_17
  2614  000802  6E0E               	movwf	strmatch@b,c
  2615  000804  EC98  F008         	call	_strmatch	;wreg free
  2616  000808  6E19               	movwf	??_process_data_parameters& (0+255),c
  2617  00080A  0419               	decf	??_process_data_parameters,w,c
  2618  00080C  A4D8               	btfss	status,2,c
  2619  00080E  D007               	goto	l1578
  2620                           
  2621                           ;SlaveComm_PIC18.c: 357: {
  2622                           ;SlaveComm_PIC18.c: 358: send_end_of_transmission( send_buffer );
  2623  000810  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2624  000814  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2625  000818  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2626                           
  2627                           ;SlaveComm_PIC18.c: 359: }
  2628  00081C  D044               	goto	l1590
  2629  00081E                     l1578:
  2630                           
  2631                           ;SlaveComm_PIC18.c: 360: else if( strmatch( parameters[1], "Volts" ) == 1 )
  2632  00081E  0E0A               	movlw	10
  2633  000820  2415               	addwf	process_data_parameters@parameters,w,c
  2634  000822  6E0C               	movwf	strmatch@a,c
  2635  000824  0E00               	movlw	0
  2636  000826  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2637  000828  6E0D               	movwf	strmatch@a+1,c
  2638  00082A  0E06               	movlw	high STR_18
  2639  00082C  6E0F               	movwf	strmatch@b+1,c
  2640  00082E  0E17               	movlw	low STR_18
  2641  000830  6E0E               	movwf	strmatch@b,c
  2642  000832  EC98  F008         	call	_strmatch	;wreg free
  2643  000836  6E19               	movwf	??_process_data_parameters& (0+255),c
  2644  000838  0419               	decf	??_process_data_parameters,w,c
  2645  00083A  A4D8               	btfss	status,2,c
  2646  00083C  D007               	goto	l1582
  2647                           
  2648                           ;SlaveComm_PIC18.c: 361: {
  2649                           ;SlaveComm_PIC18.c: 362: send_end_of_transmission( send_buffer );
  2650  00083E  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2651  000842  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2652  000846  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2653                           
  2654                           ;SlaveComm_PIC18.c: 363: }
  2655  00084A  D02D               	goto	l1590
  2656  00084C                     l1582:
  2657                           
  2658                           ;SlaveComm_PIC18.c: 364: else if( strmatch( parameters[1], "Amps" ) == 1 )
  2659  00084C  0E0A               	movlw	10
  2660  00084E  2415               	addwf	process_data_parameters@parameters,w,c
  2661  000850  6E0C               	movwf	strmatch@a,c
  2662  000852  0E00               	movlw	0
  2663  000854  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2664  000856  6E0D               	movwf	strmatch@a+1,c
  2665  000858  0E06               	movlw	high STR_19
  2666  00085A  6E0F               	movwf	strmatch@b+1,c
  2667  00085C  0E37               	movlw	low STR_19
  2668  00085E  6E0E               	movwf	strmatch@b,c
  2669  000860  EC98  F008         	call	_strmatch	;wreg free
  2670  000864  6E19               	movwf	??_process_data_parameters& (0+255),c
  2671  000866  0419               	decf	??_process_data_parameters,w,c
  2672  000868  A4D8               	btfss	status,2,c
  2673  00086A  D007               	goto	l1586
  2674                           
  2675                           ;SlaveComm_PIC18.c: 365: {
  2676                           ;SlaveComm_PIC18.c: 366: send_end_of_transmission( send_buffer );
  2677  00086C  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2678  000870  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2679  000874  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2680                           
  2681                           ;SlaveComm_PIC18.c: 367: }
  2682  000878  D016               	goto	l1590
  2683  00087A                     l1586:
  2684                           
  2685                           ;SlaveComm_PIC18.c: 368: else if( strmatch( parameters[1], "PSVersion" ) == 1 )
  2686  00087A  0E0A               	movlw	10
  2687  00087C  2415               	addwf	process_data_parameters@parameters,w,c
  2688  00087E  6E0C               	movwf	strmatch@a,c
  2689  000880  0E00               	movlw	0
  2690  000882  2016               	addwfc	process_data_parameters@parameters+1,w,c
  2691  000884  6E0D               	movwf	strmatch@a+1,c
  2692  000886  0E06               	movlw	high STR_20
  2693  000888  6E0F               	movwf	strmatch@b+1,c
  2694  00088A  0E0D               	movlw	low STR_20
  2695  00088C  6E0E               	movwf	strmatch@b,c
  2696  00088E  EC98  F008         	call	_strmatch	;wreg free
  2697  000892  6E19               	movwf	??_process_data_parameters& (0+255),c
  2698  000894  0419               	decf	??_process_data_parameters,w,c
  2699  000896  A4D8               	btfss	status,2,c
  2700  000898  D006               	goto	l1590
  2701                           
  2702                           ;SlaveComm_PIC18.c: 369: {
  2703                           ;SlaveComm_PIC18.c: 370: send_end_of_transmission( send_buffer );
  2704  00089A  C018  F012         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  2705  00089E  C017  F011         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  2706  0008A2  EC87  F009         	call	_send_end_of_transmission	;wreg free
  2707  0008A6                     l1590:
  2708                           
  2709                           ;SlaveComm_PIC18.c: 371: }
  2710                           ;SlaveComm_PIC18.c: 372: }
  2711                           ;SlaveComm_PIC18.c: 378: return end_of_transmission_received;
  2712  0008A6  501A               	movf	process_data_parameters@end_of_transmission_received,w,c
  2713  0008A8  0012               	return	
  2714  0008AA                     __end_of_process_data_parameters:
  2715                           	opt stack 0
  2716                           tblptru	equ	0xFF8
  2717                           prodh	equ	0xFF4
  2718                           prodl	equ	0xFF3
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           indf1	equ	0xFE7
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           indf2	equ	0xFDF
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8
  2728                           
  2729 ;; *************** function _strmatch *****************
  2730 ;; Defined at:
  2731 ;;		line 488 in file "SlaveComm_PIC18.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  a               2   11[COMRAM] PTR unsigned char 
  2734 ;;		 -> process_data@parameters(50), 
  2735 ;;  b               2   13[COMRAM] PTR unsigned char 
  2736 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  2737 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  2738 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  2739 ;;		 -> STR_2(4), STR_1(4), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  result          2   15[COMRAM] int 
  2742 ;;  match           1   17[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      unsigned char 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2752 ;;      Params:         4       0       0       0       0       0       0
  2753 ;;      Locals:         3       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0
  2755 ;;      Totals:         7       0       0       0       0       0       0
  2756 ;;Total ram usage:        7 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    1
  2759 ;; This function calls:
  2760 ;;		_strcmp2
  2761 ;; This function is called by:
  2762 ;;		_process_data_parameters
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text18
  2767  001130                     __ptext18:
  2768                           	opt stack 0
  2769  001130                     _strmatch:
  2770                           	opt stack 26
  2771                           
  2772                           ;SlaveComm_PIC18.c: 490: int result;
  2773                           ;SlaveComm_PIC18.c: 491: bool match;
  2774                           ;SlaveComm_PIC18.c: 493: result = strcmp2( a, b );
  2775                           
  2776                           ;incstack = 0
  2777  001130  C00D  F002         	movff	strmatch@a+1,strcmp2@a+1
  2778  001134  C00C  F001         	movff	strmatch@a,strcmp2@a
  2779  001138  C00F  F004         	movff	strmatch@b+1,strcmp2@b+1
  2780  00113C  C00E  F003         	movff	strmatch@b,strcmp2@b
  2781  001140  EC11  F005         	call	_strcmp2	;wreg free
  2782  001144  C001  F010         	movff	?_strcmp2,strmatch@result
  2783  001148  C002  F011         	movff	?_strcmp2+1,strmatch@result+1
  2784                           
  2785                           ;SlaveComm_PIC18.c: 495: match = ( result == 0 ) ? 1 : 0;
  2786  00114C  5011               	movf	strmatch@result+1,w,c
  2787  00114E  1010               	iorwf	strmatch@result,w,c
  2788  001150  A4D8               	btfss	status,2,c
  2789  001152  D002               	goto	u670
  2790  001154  0E01               	movlw	1
  2791  001156  D001               	goto	u676
  2792  001158                     u670:
  2793  001158  0E00               	movlw	0
  2794  00115A                     u676:
  2795  00115A  6E12               	movwf	strmatch@match,c
  2796                           
  2797                           ;SlaveComm_PIC18.c: 497: return match;
  2798  00115C  5012               	movf	strmatch@match,w,c
  2799  00115E  0012               	return	
  2800  001160                     __end_of_strmatch:
  2801                           	opt stack 0
  2802                           tblptru	equ	0xFF8
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           indf1	equ	0xFE7
  2808                           fsr1h	equ	0xFE2
  2809                           fsr1l	equ	0xFE1
  2810                           indf2	equ	0xFDF
  2811                           fsr2h	equ	0xFDA
  2812                           fsr2l	equ	0xFD9
  2813                           status	equ	0xFD8
  2814                           
  2815 ;; *************** function _strcmp2 *****************
  2816 ;; Defined at:
  2817 ;;		line 500 in file "SlaveComm_PIC18.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  a               2    0[COMRAM] PTR unsigned char 
  2820 ;;		 -> process_data@parameters(50), 
  2821 ;;  b               2    2[COMRAM] PTR unsigned char 
  2822 ;;		 -> STR_20(10), STR_19(5), STR_18(6), STR_17(6), 
  2823 ;;		 -> STR_16(5), STR_15(5), STR_11(4), STR_7(3), 
  2824 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(12), 
  2825 ;;		 -> STR_2(4), STR_1(4), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  inx             2    9[COMRAM] int 
  2828 ;;  match           2    7[COMRAM] int 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2    0[COMRAM] int 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2838 ;;      Params:         4       0       0       0       0       0       0
  2839 ;;      Locals:         4       0       0       0       0       0       0
  2840 ;;      Temps:          3       0       0       0       0       0       0
  2841 ;;      Totals:        11       0       0       0       0       0       0
  2842 ;;Total ram usage:       11 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_strmatch
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text19
  2852  000A22                     __ptext19:
  2853                           	opt stack 0
  2854  000A22                     _strcmp2:
  2855                           	opt stack 26
  2856                           
  2857                           ;SlaveComm_PIC18.c: 502: int inx = 0;
  2858                           
  2859                           ;incstack = 0
  2860  000A22  0E00               	movlw	0
  2861  000A24  6E0B               	movwf	strcmp2@inx+1,c
  2862  000A26  0E00               	movlw	0
  2863  000A28  6E0A               	movwf	strcmp2@inx,c
  2864                           
  2865                           ;SlaveComm_PIC18.c: 503: int match = 0;
  2866  000A2A  0E00               	movlw	0
  2867  000A2C  6E09               	movwf	strcmp2@match+1,c
  2868  000A2E  0E00               	movlw	0
  2869  000A30  6E08               	movwf	strcmp2@match,c
  2870                           
  2871                           ;SlaveComm_PIC18.c: 505: while( ( a[inx] != '\0' ) && ( b[inx] != '\0' ) && ( match == 0
      +                           ) )
  2872  000A32  D03B               	goto	l1380
  2873  000A34                     l1368:
  2874                           
  2875                           ;SlaveComm_PIC18.c: 506: {
  2876                           ;SlaveComm_PIC18.c: 507: if( a[inx] > b[inx] )
  2877  000A34  C003  F005         	movff	strcmp2@b,??_strcmp2
  2878  000A38  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2879  000A3C  500A               	movf	strcmp2@inx,w,c
  2880  000A3E  2605               	addwf	??_strcmp2,f,c
  2881  000A40  500B               	movf	strcmp2@inx+1,w,c
  2882  000A42  2206               	addwfc	??_strcmp2+1,f,c
  2883  000A44  C005  FFF6         	movff	??_strcmp2,tblptrl
  2884  000A48  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2885  000A4C                     	if	0	;tblptru may be non-zero
  2886  000A4C                     	endif
  2887  000A4C                     	if	0	;tblptru may be non-zero
  2888  000A4C                     	endif
  2889  000A4C  0008               	tblrd		*
  2890  000A4E  CFF5 F007          	movff	tablat,??_strcmp2+2
  2891  000A52  500A               	movf	strcmp2@inx,w,c
  2892  000A54  2401               	addwf	strcmp2@a,w,c
  2893  000A56  6ED9               	movwf	fsr2l,c
  2894  000A58  500B               	movf	strcmp2@inx+1,w,c
  2895  000A5A  2002               	addwfc	strcmp2@a+1,w,c
  2896  000A5C  6EDA               	movwf	fsr2h,c
  2897  000A5E  50DF               	movf	indf2,w,c
  2898  000A60  5C07               	subwf	??_strcmp2+2,w,c
  2899  000A62  B0D8               	btfsc	status,0,c
  2900  000A64  D005               	goto	l1372
  2901                           
  2902                           ;SlaveComm_PIC18.c: 508: {
  2903                           ;SlaveComm_PIC18.c: 509: match = 1;
  2904  000A66  0E00               	movlw	0
  2905  000A68  6E09               	movwf	strcmp2@match+1,c
  2906  000A6A  0E01               	movlw	1
  2907  000A6C  6E08               	movwf	strcmp2@match,c
  2908                           
  2909                           ;SlaveComm_PIC18.c: 510: }
  2910  000A6E  D01B               	goto	l1378
  2911  000A70                     l1372:
  2912                           
  2913                           ;SlaveComm_PIC18.c: 511: else if( a[inx] < b[inx] )
  2914  000A70  500A               	movf	strcmp2@inx,w,c
  2915  000A72  2401               	addwf	strcmp2@a,w,c
  2916  000A74  6ED9               	movwf	fsr2l,c
  2917  000A76  500B               	movf	strcmp2@inx+1,w,c
  2918  000A78  2002               	addwfc	strcmp2@a+1,w,c
  2919  000A7A  6EDA               	movwf	fsr2h,c
  2920  000A7C  50DF               	movf	indf2,w,c
  2921  000A7E  6E05               	movwf	??_strcmp2& (0+255),c
  2922  000A80  C003  F006         	movff	strcmp2@b,??_strcmp2+1
  2923  000A84  C004  F007         	movff	strcmp2@b+1,??_strcmp2+2
  2924  000A88  500A               	movf	strcmp2@inx,w,c
  2925  000A8A  2606               	addwf	??_strcmp2+1,f,c
  2926  000A8C  500B               	movf	strcmp2@inx+1,w,c
  2927  000A8E  2207               	addwfc	??_strcmp2+2,f,c
  2928  000A90  C006  FFF6         	movff	??_strcmp2+1,tblptrl
  2929  000A94  C007  FFF7         	movff	??_strcmp2+2,tblptrh
  2930  000A98                     	if	0	;tblptru may be non-zero
  2931  000A98                     	endif
  2932  000A98                     	if	0	;tblptru may be non-zero
  2933  000A98                     	endif
  2934  000A98  0008               	tblrd		*
  2935  000A9A  50F5               	movf	tablat,w,c
  2936  000A9C  5C05               	subwf	??_strcmp2,w,c
  2937  000A9E  B0D8               	btfsc	status,0,c
  2938  000AA0  D002               	goto	l1378
  2939                           
  2940                           ;SlaveComm_PIC18.c: 512: {
  2941                           ;SlaveComm_PIC18.c: 513: match = -1;
  2942  000AA2  6808               	setf	strcmp2@match,c
  2943  000AA4  6809               	setf	strcmp2@match+1,c
  2944  000AA6                     l1378:
  2945                           
  2946                           ;SlaveComm_PIC18.c: 518: }
  2947                           ;SlaveComm_PIC18.c: 520: inx++;
  2948  000AA6  4A0A               	infsnz	strcmp2@inx,f,c
  2949  000AA8  2A0B               	incf	strcmp2@inx+1,f,c
  2950  000AAA                     l1380:
  2951  000AAA  500A               	movf	strcmp2@inx,w,c
  2952  000AAC  2401               	addwf	strcmp2@a,w,c
  2953  000AAE  6ED9               	movwf	fsr2l,c
  2954  000AB0  500B               	movf	strcmp2@inx+1,w,c
  2955  000AB2  2002               	addwfc	strcmp2@a+1,w,c
  2956  000AB4  6EDA               	movwf	fsr2h,c
  2957  000AB6  50DF               	movf	indf2,w,c
  2958  000AB8  B4D8               	btfsc	status,2,c
  2959  000ABA  D015               	goto	l1386
  2960  000ABC  C003  F005         	movff	strcmp2@b,??_strcmp2
  2961  000AC0  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2962  000AC4  500A               	movf	strcmp2@inx,w,c
  2963  000AC6  2605               	addwf	??_strcmp2,f,c
  2964  000AC8  500B               	movf	strcmp2@inx+1,w,c
  2965  000ACA  2206               	addwfc	??_strcmp2+1,f,c
  2966  000ACC  C005  FFF6         	movff	??_strcmp2,tblptrl
  2967  000AD0  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  2968  000AD4                     	if	0	;tblptru may be non-zero
  2969  000AD4                     	endif
  2970  000AD4                     	if	0	;tblptru may be non-zero
  2971  000AD4                     	endif
  2972  000AD4  0008               	tblrd		*
  2973  000AD6  50F5               	movf	tablat,w,c
  2974  000AD8  0900               	iorlw	0
  2975  000ADA  B4D8               	btfsc	status,2,c
  2976  000ADC  D004               	goto	l1386
  2977  000ADE  5009               	movf	strcmp2@match+1,w,c
  2978  000AE0  1008               	iorwf	strcmp2@match,w,c
  2979  000AE2  B4D8               	btfsc	status,2,c
  2980  000AE4  D7A7               	goto	l1368
  2981  000AE6                     l1386:
  2982                           
  2983                           ;SlaveComm_PIC18.c: 521: }
  2984                           ;SlaveComm_PIC18.c: 524: if( ( a[inx] == '\0' ) && ( b[inx] != '\0' ) )
  2985  000AE6  500A               	movf	strcmp2@inx,w,c
  2986  000AE8  2401               	addwf	strcmp2@a,w,c
  2987  000AEA  6ED9               	movwf	fsr2l,c
  2988  000AEC  500B               	movf	strcmp2@inx+1,w,c
  2989  000AEE  2002               	addwfc	strcmp2@a+1,w,c
  2990  000AF0  6EDA               	movwf	fsr2h,c
  2991  000AF2  50DF               	movf	indf2,w,c
  2992  000AF4  A4D8               	btfss	status,2,c
  2993  000AF6  D014               	goto	l1392
  2994  000AF8  C003  F005         	movff	strcmp2@b,??_strcmp2
  2995  000AFC  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  2996  000B00  500A               	movf	strcmp2@inx,w,c
  2997  000B02  2605               	addwf	??_strcmp2,f,c
  2998  000B04  500B               	movf	strcmp2@inx+1,w,c
  2999  000B06  2206               	addwfc	??_strcmp2+1,f,c
  3000  000B08  C005  FFF6         	movff	??_strcmp2,tblptrl
  3001  000B0C  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3002  000B10                     	if	0	;tblptru may be non-zero
  3003  000B10                     	endif
  3004  000B10                     	if	0	;tblptru may be non-zero
  3005  000B10                     	endif
  3006  000B10  0008               	tblrd		*
  3007  000B12  50F5               	movf	tablat,w,c
  3008  000B14  0900               	iorlw	0
  3009  000B16  B4D8               	btfsc	status,2,c
  3010  000B18  D003               	goto	l1392
  3011                           
  3012                           ;SlaveComm_PIC18.c: 525: {
  3013                           ;SlaveComm_PIC18.c: 526: match = -1;
  3014  000B1A  6808               	setf	strcmp2@match,c
  3015  000B1C  6809               	setf	strcmp2@match+1,c
  3016                           
  3017                           ;SlaveComm_PIC18.c: 527: }
  3018  000B1E  D01E               	goto	l1398
  3019  000B20                     l1392:
  3020                           
  3021                           ;SlaveComm_PIC18.c: 528: else if( ( a[inx] != '\0' ) && ( b[inx] == '\0' ) )
  3022  000B20  500A               	movf	strcmp2@inx,w,c
  3023  000B22  2401               	addwf	strcmp2@a,w,c
  3024  000B24  6ED9               	movwf	fsr2l,c
  3025  000B26  500B               	movf	strcmp2@inx+1,w,c
  3026  000B28  2002               	addwfc	strcmp2@a+1,w,c
  3027  000B2A  6EDA               	movwf	fsr2h,c
  3028  000B2C  50DF               	movf	indf2,w,c
  3029  000B2E  B4D8               	btfsc	status,2,c
  3030  000B30  D015               	goto	l1398
  3031  000B32  C003  F005         	movff	strcmp2@b,??_strcmp2
  3032  000B36  C004  F006         	movff	strcmp2@b+1,??_strcmp2+1
  3033  000B3A  500A               	movf	strcmp2@inx,w,c
  3034  000B3C  2605               	addwf	??_strcmp2,f,c
  3035  000B3E  500B               	movf	strcmp2@inx+1,w,c
  3036  000B40  2206               	addwfc	??_strcmp2+1,f,c
  3037  000B42  C005  FFF6         	movff	??_strcmp2,tblptrl
  3038  000B46  C006  FFF7         	movff	??_strcmp2+1,tblptrh
  3039  000B4A                     	if	0	;tblptru may be non-zero
  3040  000B4A                     	endif
  3041  000B4A                     	if	0	;tblptru may be non-zero
  3042  000B4A                     	endif
  3043  000B4A  0008               	tblrd		*
  3044  000B4C  50F5               	movf	tablat,w,c
  3045  000B4E  0900               	iorlw	0
  3046  000B50  A4D8               	btfss	status,2,c
  3047  000B52  D004               	goto	l1398
  3048                           
  3049                           ;SlaveComm_PIC18.c: 529: {
  3050                           ;SlaveComm_PIC18.c: 530: match = 1;
  3051  000B54  0E00               	movlw	0
  3052  000B56  6E09               	movwf	strcmp2@match+1,c
  3053  000B58  0E01               	movlw	1
  3054  000B5A  6E08               	movwf	strcmp2@match,c
  3055  000B5C                     l1398:
  3056                           
  3057                           ;SlaveComm_PIC18.c: 531: }
  3058                           ;SlaveComm_PIC18.c: 533: return match;
  3059  000B5C  C008  F001         	movff	strcmp2@match,?_strcmp2
  3060  000B60  C009  F002         	movff	strcmp2@match+1,?_strcmp2+1
  3061  000B64  0012               	return	
  3062  000B66                     __end_of_strcmp2:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf1	equ	0xFE7
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _send_end_of_transmission *****************
  3081 ;; Defined at:
  3082 ;;		line 579 in file "SlaveComm_PIC18.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  send_buffer     2   16[COMRAM] PTR struct buffer
  3085 ;;		 -> communications@send_buffer(42), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3097 ;;      Params:         2       0       0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0
  3100 ;;      Totals:         2       0       0       0       0       0       0
  3101 ;;Total ram usage:        2 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    3
  3104 ;; This function calls:
  3105 ;;		_command_builder1
  3106 ;; This function is called by:
  3107 ;;		_process_data_parameters
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text20
  3112  00130E                     __ptext20:
  3113                           	opt stack 0
  3114  00130E                     _send_end_of_transmission:
  3115                           	opt stack 24
  3116                           
  3117                           ;SlaveComm_PIC18.c: 581: command_builder1( send_buffer, "END" );
  3118                           
  3119                           ;incstack = 0
  3120  00130E  C012  F00E         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3121  001312  C011  F00D         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3122  001316  0E06               	movlw	high STR_1
  3123  001318  6E10               	movwf	command_builder1@data1+1,c
  3124  00131A  0E48               	movlw	low STR_1
  3125  00131C  6E0F               	movwf	command_builder1@data1,c
  3126  00131E  ECD6  F007         	call	_command_builder1	;wreg free
  3127  001322  0012               	return	
  3128  001324                     __end_of_send_end_of_transmission:
  3129                           	opt stack 0
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           indf1	equ	0xFE7
  3139                           fsr1h	equ	0xFE2
  3140                           fsr1l	equ	0xFE1
  3141                           indf2	equ	0xFDF
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function _command_builder1 *****************
  3147 ;; Defined at:
  3148 ;;		line 381 in file "SlaveComm_PIC18.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3151 ;;		 -> communications@send_buffer(42), 
  3152 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3153 ;;		 -> STR_21(4), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3165 ;;      Params:         4       0       0       0       0       0       0
  3166 ;;      Locals:         0       0       0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0       0       0
  3168 ;;      Totals:         4       0       0       0       0       0       0
  3169 ;;Total ram usage:        4 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		_command_builder_add_char
  3174 ;;		_command_builder_add_string
  3175 ;; This function is called by:
  3176 ;;		_send_end_of_transmission
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text21
  3181  000FAC                     __ptext21:
  3182                           	opt stack 0
  3183  000FAC                     _command_builder1:
  3184                           	opt stack 24
  3185                           
  3186                           ;SlaveComm_PIC18.c: 383: command_builder_add_char( send_buffer, '#' );
  3187                           
  3188                           ;incstack = 0
  3189  000FAC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3190  000FB0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3191  000FB4  0E23               	movlw	35
  3192  000FB6  6E03               	movwf	command_builder_add_char@data,c
  3193  000FB8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3194                           
  3195                           ;SlaveComm_PIC18.c: 384: command_builder_add_char( send_buffer, '#' );
  3196  000FBC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3197  000FC0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3198  000FC4  0E23               	movlw	35
  3199  000FC6  6E03               	movwf	command_builder_add_char@data,c
  3200  000FC8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3201                           
  3202                           ;SlaveComm_PIC18.c: 385: command_builder_add_char( send_buffer, '!' );
  3203  000FCC  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3204  000FD0  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3205  000FD4  0E21               	movlw	33
  3206  000FD6  6E03               	movwf	command_builder_add_char@data,c
  3207  000FD8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3208                           
  3209                           ;SlaveComm_PIC18.c: 386: command_builder_add_string( send_buffer, data1 );
  3210  000FDC  C00E  F006         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  3211  000FE0  C00D  F005         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  3212  000FE4  C010  F008         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  3213  000FE8  C00F  F007         	movff	command_builder1@data1,command_builder_add_string@data_string
  3214  000FEC  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3215                           
  3216                           ;SlaveComm_PIC18.c: 387: command_builder_add_char( send_buffer, '*' );
  3217  000FF0  C00E  F002         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3218  000FF4  C00D  F001         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3219  000FF8  0E2A               	movlw	42
  3220  000FFA  6E03               	movwf	command_builder_add_char@data,c
  3221  000FFC  EC01  F008         	call	_command_builder_add_char	;wreg free
  3222  001000  0012               	return	
  3223  001002                     __end_of_command_builder1:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodh	equ	0xFF4
  3230                           prodl	equ	0xFF3
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           indf1	equ	0xFE7
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           indf2	equ	0xFDF
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8
  3240                           
  3241 ;; *************** function _command_builder3 *****************
  3242 ;; Defined at:
  3243 ;;		line 405 in file "SlaveComm_PIC18.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  send_buffer     2   12[COMRAM] PTR struct buffer
  3246 ;;		 -> communications@send_buffer(42), 
  3247 ;;  data1           2   14[COMRAM] PTR unsigned char 
  3248 ;;		 -> STR_35(4), STR_30(4), STR_27(4), STR_24(4), 
  3249 ;;		 -> STR_12(4), STR_8(4), 
  3250 ;;  data2           2   16[COMRAM] PTR unsigned char 
  3251 ;;		 -> STR_36(10), STR_31(5), STR_28(6), STR_25(6), 
  3252 ;;		 -> STR_13(5), STR_9(5), 
  3253 ;;  data3           2   18[COMRAM] PTR unsigned char 
  3254 ;;		 -> STR_37(4), STR_32(4), STR_29(4), STR_26(3), 
  3255 ;;		 -> STR_14(3), STR_10(4), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3267 ;;      Params:         8       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0
  3270 ;;      Totals:         8       0       0       0       0       0       0
  3271 ;;Total ram usage:        8 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		_command_builder_add_char
  3276 ;;		_command_builder_add_string
  3277 ;; This function is called by:
  3278 ;;		_process_data_parameters
  3279 ;;		_com_command_setPower
  3280 ;;		_com_command_setVolts
  3281 ;;		_com_command_setAmps
  3282 ;;		_com_command_setVersion
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text22
  3287  000DA8                     __ptext22:
  3288                           	opt stack 0
  3289  000DA8                     _command_builder3:
  3290                           	opt stack 25
  3291                           
  3292                           ;SlaveComm_PIC18.c: 407: command_builder_add_char( send_buffer, '#' );
  3293                           
  3294                           ;incstack = 0
  3295  000DA8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3296  000DAC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3297  000DB0  0E23               	movlw	35
  3298  000DB2  6E03               	movwf	command_builder_add_char@data,c
  3299  000DB4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3300                           
  3301                           ;SlaveComm_PIC18.c: 408: command_builder_add_char( send_buffer, '#' );
  3302  000DB8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3303  000DBC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3304  000DC0  0E23               	movlw	35
  3305  000DC2  6E03               	movwf	command_builder_add_char@data,c
  3306  000DC4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3307                           
  3308                           ;SlaveComm_PIC18.c: 409: command_builder_add_char( send_buffer, '!' );
  3309  000DC8  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3310  000DCC  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3311  000DD0  0E21               	movlw	33
  3312  000DD2  6E03               	movwf	command_builder_add_char@data,c
  3313  000DD4  EC01  F008         	call	_command_builder_add_char	;wreg free
  3314                           
  3315                           ;SlaveComm_PIC18.c: 410: command_builder_add_string( send_buffer, data1 );
  3316  000DD8  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3317  000DDC  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3318  000DE0  C010  F008         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  3319  000DE4  C00F  F007         	movff	command_builder3@data1,command_builder_add_string@data_string
  3320  000DE8  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3321                           
  3322                           ;SlaveComm_PIC18.c: 411: command_builder_add_char( send_buffer, ';' );
  3323  000DEC  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3324  000DF0  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3325  000DF4  0E3B               	movlw	59
  3326  000DF6  6E03               	movwf	command_builder_add_char@data,c
  3327  000DF8  EC01  F008         	call	_command_builder_add_char	;wreg free
  3328                           
  3329                           ;SlaveComm_PIC18.c: 412: command_builder_add_string( send_buffer, data2 );
  3330  000DFC  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3331  000E00  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3332  000E04  C012  F008         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  3333  000E08  C011  F007         	movff	command_builder3@data2,command_builder_add_string@data_string
  3334  000E0C  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3335                           
  3336                           ;SlaveComm_PIC18.c: 413: command_builder_add_char( send_buffer, ';' );
  3337  000E10  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3338  000E14  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3339  000E18  0E3B               	movlw	59
  3340  000E1A  6E03               	movwf	command_builder_add_char@data,c
  3341  000E1C  EC01  F008         	call	_command_builder_add_char	;wreg free
  3342                           
  3343                           ;SlaveComm_PIC18.c: 414: command_builder_add_string( send_buffer, data3 );
  3344  000E20  C00E  F006         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  3345  000E24  C00D  F005         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  3346  000E28  C014  F008         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  3347  000E2C  C013  F007         	movff	command_builder3@data3,command_builder_add_string@data_string
  3348  000E30  ECA8  F007         	call	_command_builder_add_string	;wreg free
  3349                           
  3350                           ;SlaveComm_PIC18.c: 415: command_builder_add_char( send_buffer, '*' );
  3351  000E34  C00E  F002         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  3352  000E38  C00D  F001         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  3353  000E3C  0E2A               	movlw	42
  3354  000E3E  6E03               	movwf	command_builder_add_char@data,c
  3355  000E40  EC01  F008         	call	_command_builder_add_char	;wreg free
  3356  000E44  0012               	return	
  3357  000E46                     __end_of_command_builder3:
  3358                           	opt stack 0
  3359                           tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           prodh	equ	0xFF4
  3364                           prodl	equ	0xFF3
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf1	equ	0xFE7
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _command_builder_add_string *****************
  3376 ;; Defined at:
  3377 ;;		line 450 in file "SlaveComm_PIC18.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  send_buffer     2    4[COMRAM] PTR struct buffer
  3380 ;;		 -> communications@send_buffer(42), 
  3381 ;;  data_string     2    6[COMRAM] PTR unsigned char 
  3382 ;;		 -> STR_37(4), STR_36(10), STR_35(4), STR_34(12), 
  3383 ;;		 -> STR_33(5), STR_32(4), STR_31(5), STR_30(4), 
  3384 ;;		 -> STR_29(4), STR_28(6), STR_27(4), STR_26(3), 
  3385 ;;		 -> STR_25(6), STR_24(4), STR_23(5), STR_22(5), 
  3386 ;;		 -> STR_21(4), STR_14(3), STR_13(5), STR_12(4), 
  3387 ;;		 -> STR_10(4), STR_9(5), STR_8(4), 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  inx             2   10[COMRAM] int 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;		None               void
  3392 ;; Registers used:
  3393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3399 ;;      Params:         4       0       0       0       0       0       0
  3400 ;;      Locals:         2       0       0       0       0       0       0
  3401 ;;      Temps:          2       0       0       0       0       0       0
  3402 ;;      Totals:         8       0       0       0       0       0       0
  3403 ;;Total ram usage:        8 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    1
  3406 ;; This function calls:
  3407 ;;		_command_builder_add_char
  3408 ;; This function is called by:
  3409 ;;		_command_builder1
  3410 ;;		_command_builder2
  3411 ;;		_command_builder3
  3412 ;;		_command_builder4
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text23
  3417  000F50                     __ptext23:
  3418                           	opt stack 0
  3419  000F50                     _command_builder_add_string:
  3420                           	opt stack 25
  3421                           
  3422                           ;SlaveComm_PIC18.c: 452: for( int inx = 0; data_string[inx] != '\0'; inx++ )
  3423                           
  3424                           ;incstack = 0
  3425  000F50  0E00               	movlw	0
  3426  000F52  6E0C               	movwf	command_builder_add_string@inx+1,c
  3427  000F54  0E00               	movlw	0
  3428  000F56  6E0B               	movwf	command_builder_add_string@inx,c
  3429  000F58  D017               	goto	l1356
  3430  000F5A                     l1352:
  3431                           
  3432                           ;SlaveComm_PIC18.c: 453: {
  3433                           ;SlaveComm_PIC18.c: 454: command_builder_add_char( send_buffer, data_string[inx] );
  3434  000F5A  C006  F002         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  3435  000F5E  C005  F001         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  3436  000F62  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  3437  000F66  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  3438  000F6A  500B               	movf	command_builder_add_string@inx,w,c
  3439  000F6C  2609               	addwf	??_command_builder_add_string,f,c
  3440  000F6E  500C               	movf	command_builder_add_string@inx+1,w,c
  3441  000F70  220A               	addwfc	??_command_builder_add_string+1,f,c
  3442  000F72  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3443  000F76  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3444  000F7A                     	if	0	;tblptru may be non-zero
  3445  000F7A                     	endif
  3446  000F7A                     	if	0	;tblptru may be non-zero
  3447  000F7A                     	endif
  3448  000F7A  0008               	tblrd		*
  3449  000F7C  CFF5 F003          	movff	tablat,command_builder_add_char@data
  3450  000F80  EC01  F008         	call	_command_builder_add_char	;wreg free
  3451  000F84  4A0B               	infsnz	command_builder_add_string@inx,f,c
  3452  000F86  2A0C               	incf	command_builder_add_string@inx+1,f,c
  3453  000F88                     l1356:
  3454  000F88  C007  F009         	movff	command_builder_add_string@data_string,??_command_builder_add_string
  3455  000F8C  C008  F00A         	movff	command_builder_add_string@data_string+1,??_command_builder_add_string+1
  3456  000F90  500B               	movf	command_builder_add_string@inx,w,c
  3457  000F92  2609               	addwf	??_command_builder_add_string,f,c
  3458  000F94  500C               	movf	command_builder_add_string@inx+1,w,c
  3459  000F96  220A               	addwfc	??_command_builder_add_string+1,f,c
  3460  000F98  C009  FFF6         	movff	??_command_builder_add_string,tblptrl
  3461  000F9C  C00A  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  3462  000FA0                     	if	0	;tblptru may be non-zero
  3463  000FA0                     	endif
  3464  000FA0                     	if	0	;tblptru may be non-zero
  3465  000FA0                     	endif
  3466  000FA0  0008               	tblrd		*
  3467  000FA2  50F5               	movf	tablat,w,c
  3468  000FA4  0900               	iorlw	0
  3469  000FA6  B4D8               	btfsc	status,2,c
  3470                           
  3471                           ;SlaveComm_PIC18.c: 455: }
  3472                           ;SlaveComm_PIC18.c: 457: return;
  3473  000FA8  0012               	return	
  3474  000FAA  D7D7               	goto	l1352
  3475  000FAC                     __end_of_command_builder_add_string:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           prodh	equ	0xFF4
  3482                           prodl	equ	0xFF3
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           indf1	equ	0xFE7
  3486                           fsr1h	equ	0xFE2
  3487                           fsr1l	equ	0xFE1
  3488                           indf2	equ	0xFDF
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           
  3493 ;; *************** function _command_builder_add_char *****************
  3494 ;; Defined at:
  3495 ;;		line 437 in file "SlaveComm_PIC18.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  send_buffer     2    0[COMRAM] PTR struct buffer
  3498 ;;		 -> communications@send_buffer(42), 
  3499 ;;  data            1    2[COMRAM] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;		None               void
  3504 ;; Registers used:
  3505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3511 ;;      Params:         3       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0
  3513 ;;      Temps:          1       0       0       0       0       0       0
  3514 ;;      Totals:         4       0       0       0       0       0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_command_builder1
  3521 ;;		_command_builder2
  3522 ;;		_command_builder3
  3523 ;;		_command_builder_add_string
  3524 ;;		_command_builder4
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text24
  3529  001002                     __ptext24:
  3530                           	opt stack 0
  3531  001002                     _command_builder_add_char:
  3532                           	opt stack 25
  3533                           
  3534                           ;SlaveComm_PIC18.c: 439: send_buffer->data_buffer[send_buffer->write_position] = data;
  3535                           
  3536                           ;incstack = 0
  3537  001002  EE20 F028          	lfsr	2,40
  3538  001006  5001               	movf	command_builder_add_char@send_buffer,w,c
  3539  001008  26D9               	addwf	fsr2l,f,c
  3540  00100A  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3541  00100C  22DA               	addwfc	fsr2h,f,c
  3542  00100E  50DF               	movf	indf2,w,c
  3543  001010  6E04               	movwf	??_command_builder_add_char& (0+255),c
  3544  001012  5004               	movf	??_command_builder_add_char,w,c
  3545  001014  0D01               	mullw	1
  3546  001016  50F3               	movf	prodl,w,c
  3547  001018  2401               	addwf	command_builder_add_char@send_buffer,w,c
  3548  00101A  6ED9               	movwf	fsr2l,c
  3549  00101C  50F4               	movf	prodh,w,c
  3550  00101E  2002               	addwfc	command_builder_add_char@send_buffer+1,w,c
  3551  001020  6EDA               	movwf	fsr2h,c
  3552  001022  C003  FFDF         	movff	command_builder_add_char@data,indf2
  3553                           
  3554                           ;SlaveComm_PIC18.c: 441: send_buffer->write_position++;
  3555  001026  EE20 F028          	lfsr	2,40
  3556  00102A  5001               	movf	command_builder_add_char@send_buffer,w,c
  3557  00102C  26D9               	addwf	fsr2l,f,c
  3558  00102E  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3559  001030  22DA               	addwfc	fsr2h,f,c
  3560  001032  2ADF               	incf	indf2,f,c
  3561                           
  3562                           ;SlaveComm_PIC18.c: 442: if( send_buffer->write_position >= 40 )
  3563  001034  EE20 F028          	lfsr	2,40
  3564  001038  5001               	movf	command_builder_add_char@send_buffer,w,c
  3565  00103A  26D9               	addwf	fsr2l,f,c
  3566  00103C  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3567  00103E  22DA               	addwfc	fsr2h,f,c
  3568  001040  0E27               	movlw	39
  3569  001042  64DF               	cpfsgt	indf2,c
  3570  001044  0012               	return	
  3571                           
  3572                           ;SlaveComm_PIC18.c: 443: {
  3573                           ;SlaveComm_PIC18.c: 444: send_buffer->write_position = 0;
  3574  001046  EE20 F028          	lfsr	2,40
  3575  00104A  5001               	movf	command_builder_add_char@send_buffer,w,c
  3576  00104C  26D9               	addwf	fsr2l,f,c
  3577  00104E  5002               	movf	command_builder_add_char@send_buffer+1,w,c
  3578  001050  22DA               	addwfc	fsr2h,f,c
  3579  001052  0E00               	movlw	0
  3580  001054  6EDF               	movwf	indf2,c
  3581  001056  0012               	return	
  3582  001058                     __end_of_command_builder_add_char:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           prodh	equ	0xFF4
  3589                           prodl	equ	0xFF3
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           fsr1h	equ	0xFE2
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _process_data_parameterize *****************
  3601 ;; Defined at:
  3602 ;;		line 247 in file "SlaveComm_PIC18.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  parameters      2    6[COMRAM] PTR unsigned char [10]
  3605 ;;		 -> process_data@parameters(50), 
  3606 ;;  buffer_to_pa    2    8[COMRAM] PTR struct buffer
  3607 ;;		 -> communications@receive_buffer(42), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  inx             2   13[COMRAM] int 
  3610 ;;  parameter_po    1   16[COMRAM] unsigned char 
  3611 ;;  parameter_in    1   15[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;		None               void
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         4       0       0       0       0       0       0
  3622 ;;      Locals:         4       0       0       0       0       0       0
  3623 ;;      Temps:          3       0       0       0       0       0       0
  3624 ;;      Totals:        11       0       0       0       0       0       0
  3625 ;;Total ram usage:       11 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    1
  3628 ;; This function calls:
  3629 ;;		___wmul
  3630 ;; This function is called by:
  3631 ;;		_process_data
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text25
  3636  0008AA                     __ptext25:
  3637                           	opt stack 0
  3638  0008AA                     _process_data_parameterize:
  3639                           	opt stack 27
  3640                           
  3641                           ;SlaveComm_PIC18.c: 249: unsigned char parameter_position = 0;
  3642                           
  3643                           ;incstack = 0
  3644  0008AA  0E00               	movlw	0
  3645  0008AC  6E11               	movwf	process_data_parameterize@parameter_position,c
  3646                           
  3647                           ;SlaveComm_PIC18.c: 250: unsigned char parameter_index = 0;
  3648  0008AE  0E00               	movlw	0
  3649  0008B0  6E10               	movwf	process_data_parameterize@parameter_index,c
  3650                           
  3651                           ;SlaveComm_PIC18.c: 259: for( int inx = 0; inx < 5; inx++ )
  3652  0008B2  0E00               	movlw	0
  3653  0008B4  6E0F               	movwf	process_data_parameterize@inx+1,c
  3654  0008B6  0E00               	movlw	0
  3655  0008B8  6E0E               	movwf	process_data_parameterize@inx,c
  3656  0008BA  500F               	movf	process_data_parameterize@inx+1,w,c
  3657  0008BC  0A80               	xorlw	128
  3658  0008BE  0F80               	addlw	-128
  3659  0008C0  0E05               	movlw	5
  3660  0008C2  B4D8               	btfsc	status,2,c
  3661  0008C4  5C0E               	subwf	process_data_parameterize@inx,w,c
  3662  0008C6  B0D8               	btfsc	status,0,c
  3663  0008C8  D07C               	goto	l1532
  3664                           
  3665                           ;SlaveComm_PIC18.c: 260: {
  3666                           ;SlaveComm_PIC18.c: 261: parameters[inx][0] = '\0';
  3667  0008CA  C00E  F001         	movff	process_data_parameterize@inx,___wmul@multiplier
  3668  0008CE  C00F  F002         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  3669  0008D2  0E00               	movlw	0
  3670  0008D4  6E04               	movwf	___wmul@multiplicand+1,c
  3671  0008D6  0E0A               	movlw	10
  3672  0008D8  6E03               	movwf	___wmul@multiplicand,c
  3673  0008DA  EC27  F009         	call	___wmul	;wreg free
  3674  0008DE  5001               	movf	?___wmul,w,c
  3675  0008E0  2407               	addwf	process_data_parameterize@parameters,w,c
  3676  0008E2  6ED9               	movwf	fsr2l,c
  3677  0008E4  5002               	movf	?___wmul+1,w,c
  3678  0008E6  2008               	addwfc	process_data_parameterize@parameters+1,w,c
  3679  0008E8  6EDA               	movwf	fsr2h,c
  3680  0008EA  0E00               	movlw	0
  3681  0008EC  6EDF               	movwf	indf2,c
  3682  0008EE  4A0E               	infsnz	process_data_parameterize@inx,f,c
  3683  0008F0  2A0F               	incf	process_data_parameterize@inx+1,f,c
  3684  0008F2  D7E3               	goto	L4
  3685  0008F4                     l1508:
  3686                           
  3687                           ;SlaveComm_PIC18.c: 273: parameter_position = 0;
  3688  0008F4  0E00               	movlw	0
  3689  0008F6  6E11               	movwf	process_data_parameterize@parameter_position,c
  3690                           
  3691                           ;SlaveComm_PIC18.c: 274: parameter_index++;
  3692  0008F8  2A10               	incf	process_data_parameterize@parameter_index,f,c
  3693                           
  3694                           ;SlaveComm_PIC18.c: 276: if( parameter_index >= 5 )
  3695  0008FA  0E04               	movlw	4
  3696  0008FC  6410               	cpfsgt	process_data_parameterize@parameter_index,c
  3697  0008FE  D05A               	goto	l1530
  3698                           
  3699                           ;SlaveComm_PIC18.c: 277: {
  3700                           ;SlaveComm_PIC18.c: 280: parameter_index = ( 5 - 1 );
  3701  000900  0E04               	movlw	4
  3702  000902  6E10               	movwf	process_data_parameterize@parameter_index,c
  3703  000904  D057               	goto	l1530
  3704  000906                     l1516:
  3705                           
  3706                           ;SlaveComm_PIC18.c: 286: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  3707  000906  EE20 F029          	lfsr	2,41
  3708  00090A  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3709  00090C  26D9               	addwf	fsr2l,f,c
  3710  00090E  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3711  000910  22DA               	addwfc	fsr2h,f,c
  3712  000912  50DF               	movf	indf2,w,c
  3713  000914  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3714  000916  500B               	movf	??_process_data_parameterize,w,c
  3715  000918  0D01               	mullw	1
  3716  00091A  50F3               	movf	prodl,w,c
  3717  00091C  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3718  00091E  6ED9               	movwf	fsr2l,c
  3719  000920  50F4               	movf	prodh,w,c
  3720  000922  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3721  000924  6EDA               	movwf	fsr2h,c
  3722  000926  5010               	movf	process_data_parameterize@parameter_index,w,c
  3723  000928  0D0A               	mullw	10
  3724  00092A  C007  F00C         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  3725  00092E  C008  F00D         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  3726  000932  50F3               	movf	prodl,w,c
  3727  000934  260C               	addwf	??_process_data_parameterize+1,f,c
  3728  000936  50F4               	movf	prodh,w,c
  3729  000938  220D               	addwfc	??_process_data_parameterize+2,f,c
  3730  00093A  5011               	movf	process_data_parameterize@parameter_position,w,c
  3731  00093C  0D01               	mullw	1
  3732  00093E  50F3               	movf	prodl,w,c
  3733  000940  240C               	addwf	??_process_data_parameterize+1,w,c
  3734  000942  6EE1               	movwf	fsr1l,c
  3735  000944  50F4               	movf	prodh,w,c
  3736  000946  200D               	addwfc	??_process_data_parameterize+2,w,c
  3737  000948  6EE2               	movwf	fsr1h,c
  3738  00094A  CFDF FFE7          	movff	indf2,indf1
  3739                           
  3740                           ;SlaveComm_PIC18.c: 287: parameter_position++;
  3741  00094E  2A11               	incf	process_data_parameterize@parameter_position,f,c
  3742                           
  3743                           ;SlaveComm_PIC18.c: 288: if( parameter_position >= 10 )
  3744  000950  0E09               	movlw	9
  3745  000952  6411               	cpfsgt	process_data_parameterize@parameter_position,c
  3746  000954  D002               	goto	l1524
  3747                           
  3748                           ;SlaveComm_PIC18.c: 289: {
  3749                           ;SlaveComm_PIC18.c: 292: parameter_position = ( 10 - 1 );
  3750  000956  0E09               	movlw	9
  3751  000958  6E11               	movwf	process_data_parameterize@parameter_position,c
  3752  00095A                     l1524:
  3753                           
  3754                           ;SlaveComm_PIC18.c: 293: }
  3755                           ;SlaveComm_PIC18.c: 296: parameters[parameter_index][parameter_position] = '\0';
  3756  00095A  5010               	movf	process_data_parameterize@parameter_index,w,c
  3757  00095C  0D0A               	mullw	10
  3758  00095E  C007  F00B         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  3759  000962  C008  F00C         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  3760  000966  50F3               	movf	prodl,w,c
  3761  000968  260B               	addwf	??_process_data_parameterize,f,c
  3762  00096A  50F4               	movf	prodh,w,c
  3763  00096C  220C               	addwfc	??_process_data_parameterize+1,f,c
  3764  00096E  5011               	movf	process_data_parameterize@parameter_position,w,c
  3765  000970  0D01               	mullw	1
  3766  000972  50F3               	movf	prodl,w,c
  3767  000974  240B               	addwf	??_process_data_parameterize,w,c
  3768  000976  6ED9               	movwf	fsr2l,c
  3769  000978  50F4               	movf	prodh,w,c
  3770  00097A  200C               	addwfc	??_process_data_parameterize+1,w,c
  3771  00097C  6EDA               	movwf	fsr2h,c
  3772  00097E  0E00               	movlw	0
  3773  000980  6EDF               	movwf	indf2,c
  3774                           
  3775                           ;SlaveComm_PIC18.c: 297: break;
  3776  000982  D018               	goto	l1530
  3777  000984                     l1528:
  3778  000984  EE20 F029          	lfsr	2,41
  3779  000988  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3780  00098A  26D9               	addwf	fsr2l,f,c
  3781  00098C  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3782  00098E  22DA               	addwfc	fsr2h,f,c
  3783  000990  50DF               	movf	indf2,w,c
  3784  000992  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3785  000994  500B               	movf	??_process_data_parameterize,w,c
  3786  000996  0D01               	mullw	1
  3787  000998  50F3               	movf	prodl,w,c
  3788  00099A  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3789  00099C  6ED9               	movwf	fsr2l,c
  3790  00099E  50F4               	movf	prodh,w,c
  3791  0009A0  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3792  0009A2  6EDA               	movwf	fsr2h,c
  3793  0009A4  50DF               	movf	indf2,w,c
  3794                           
  3795                           ; Switch size 1, requested type "space"
  3796                           ; Number of cases is 2, Range of values is 33 to 59
  3797                           ; switch strategies available:
  3798                           ; Name         Instructions Cycles
  3799                           ; simple_byte            7     4 (average)
  3800                           ;	Chosen strategy is simple_byte
  3801  0009A6  0A21               	xorlw	33	; case 33
  3802  0009A8  B4D8               	btfsc	status,2,c
  3803  0009AA  D004               	goto	l1530
  3804  0009AC  0A1A               	xorlw	26	; case 59
  3805  0009AE  B4D8               	btfsc	status,2,c
  3806  0009B0  D7A1               	goto	l1508
  3807  0009B2  D7A9               	goto	l1516
  3808  0009B4                     l1530:
  3809                           
  3810                           ;SlaveComm_PIC18.c: 300: buffer_to_parameterize->read_position++;
  3811  0009B4  EE20 F029          	lfsr	2,41
  3812  0009B8  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3813  0009BA  26D9               	addwf	fsr2l,f,c
  3814  0009BC  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3815  0009BE  22DA               	addwfc	fsr2h,f,c
  3816  0009C0  2ADF               	incf	indf2,f,c
  3817  0009C2                     l1532:
  3818  0009C2  EE20 F029          	lfsr	2,41
  3819  0009C6  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3820  0009C8  26D9               	addwf	fsr2l,f,c
  3821  0009CA  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3822  0009CC  22DA               	addwfc	fsr2h,f,c
  3823  0009CE  50DF               	movf	indf2,w,c
  3824  0009D0  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3825  0009D2  500B               	movf	??_process_data_parameterize,w,c
  3826  0009D4  0D01               	mullw	1
  3827  0009D6  50F3               	movf	prodl,w,c
  3828  0009D8  2409               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  3829  0009DA  6ED9               	movwf	fsr2l,c
  3830  0009DC  50F4               	movf	prodh,w,c
  3831  0009DE  200A               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  3832  0009E0  6EDA               	movwf	fsr2h,c
  3833  0009E2  50DF               	movf	indf2,w,c
  3834  0009E4  0A2A               	xorlw	42
  3835  0009E6  B4D8               	btfsc	status,2,c
  3836  0009E8  0012               	return	
  3837  0009EA  EE20 F029          	lfsr	2,41
  3838  0009EE  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3839  0009F0  26D9               	addwf	fsr2l,f,c
  3840  0009F2  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3841  0009F4  22DA               	addwfc	fsr2h,f,c
  3842  0009F6  50DF               	movf	indf2,w,c
  3843  0009F8  6E0B               	movwf	??_process_data_parameterize& (0+255),c
  3844  0009FA  0E28               	movlw	40
  3845  0009FC  5C0B               	subwf	??_process_data_parameterize,w,c
  3846  0009FE  B0D8               	btfsc	status,0,c
  3847  000A00  0012               	return	
  3848  000A02  EE20 F029          	lfsr	2,41
  3849  000A06  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3850  000A08  26D9               	addwf	fsr2l,f,c
  3851  000A0A  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3852  000A0C  22DA               	addwfc	fsr2h,f,c
  3853  000A0E  EE10 F028          	lfsr	1,40
  3854  000A12  5009               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  3855  000A14  26E1               	addwf	fsr1l,f,c
  3856  000A16  500A               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  3857  000A18  22E2               	addwfc	fsr1h,f,c
  3858  000A1A  50E7               	movf	indf1,w,c
  3859  000A1C  62DF               	cpfseq	indf2,c
  3860  000A1E  D7B2               	goto	l1528
  3861  000A20  0012               	return	
  3862  000A22                     __end_of_process_data_parameterize:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           indf1	equ	0xFE7
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           indf2	equ	0xFDF
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function ___wmul *****************
  3881 ;; Defined at:
  3882 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  multiplier      2    0[COMRAM] unsigned int 
  3885 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  product         2    4[COMRAM] unsigned int 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    0[COMRAM] unsigned int 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0, prodl, prodh
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         4       0       0       0       0       0       0
  3898 ;;      Locals:         2       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         6       0       0       0       0       0       0
  3901 ;;Total ram usage:        6 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_process_data_parameterize
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text26
  3911  00124E                     __ptext26:
  3912                           	opt stack 0
  3913  00124E                     ___wmul:
  3914                           	opt stack 27
  3915                           
  3916                           ;incstack = 0
  3917  00124E  5001               	movf	___wmul@multiplier,w,c
  3918  001250  0203               	mulwf	___wmul@multiplicand,c
  3919  001252  CFF3 F005          	movff	prodl,___wmul@product
  3920  001256  CFF4 F006          	movff	prodh,___wmul@product+1
  3921  00125A  5001               	movf	___wmul@multiplier,w,c
  3922  00125C  0204               	mulwf	___wmul@multiplicand+1,c
  3923  00125E  50F3               	movf	prodl,w,c
  3924  001260  2606               	addwf	___wmul@product+1,f,c
  3925  001262  5002               	movf	___wmul@multiplier+1,w,c
  3926  001264  0203               	mulwf	___wmul@multiplicand,c
  3927  001266  50F3               	movf	prodl,w,c
  3928  001268  2606               	addwf	___wmul@product+1,f,c
  3929  00126A  C005  F001         	movff	___wmul@product,?___wmul
  3930  00126E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3931  001272  0012               	return	
  3932  001274                     __end_of___wmul:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           prodh	equ	0xFF4
  3939                           prodl	equ	0xFF3
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf1	equ	0xFE7
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _SPISlaveInit *****************
  3951 ;; Defined at:
  3952 ;;		line 627 in file "SlaveComm_PIC18.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3966 ;;      Params:         0       0       0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text27
  3980  001058                     __ptext27:
  3981                           	opt stack 0
  3982  001058                     _SPISlaveInit:
  3983                           	opt stack 30
  3984                           
  3985                           ;SlaveComm_PIC18.c: 630: TRISAbits.TRISA0 = 0;
  3986                           
  3987                           ;incstack = 0
  3988  001058  9092               	bcf	3986,0,c	;volatile
  3989                           
  3990                           ;SlaveComm_PIC18.c: 631: TRISAbits.TRISA1 = 1;
  3991  00105A  8292               	bsf	3986,1,c	;volatile
  3992                           
  3993                           ;SlaveComm_PIC18.c: 632: TRISBbits.RB4 = 0;
  3994  00105C  9893               	bcf	3987,4,c	;volatile
  3995                           
  3996                           ;SlaveComm_PIC18.c: 633: TRISCbits.TRISC3 = 0;
  3997  00105E  9694               	bcf	3988,3,c	;volatile
  3998                           
  3999                           ;SlaveComm_PIC18.c: 634: TRISCbits.TRISC5 = 0;
  4000  001060  9A94               	bcf	3988,5,c	;volatile
  4001                           
  4002                           ;SlaveComm_PIC18.c: 635: TRISCbits.TRISC6 = 0;
  4003  001062  9C94               	bcf	3988,6,c	;volatile
  4004                           
  4005                           ;SlaveComm_PIC18.c: 636: TRISCbits.TRISC7 = 0;
  4006  001064  9E94               	bcf	3988,7,c	;volatile
  4007                           
  4008                           ;SlaveComm_PIC18.c: 637: ANSELAbits.ANSA1 = 0b0;
  4009  001066  010F               	movlb	15	; () banked
  4010  001068  9338               	bcf	56,1,b	;volatile
  4011                           
  4012                           ;SlaveComm_PIC18.c: 639: LATCbits.LATC6 = 1;
  4013  00106A  8C8B               	bsf	3979,6,c	;volatile
  4014                           
  4015                           ;SlaveComm_PIC18.c: 640: LATCbits.LATC3 = 1;
  4016  00106C  868B               	bsf	3979,3,c	;volatile
  4017                           
  4018                           ;SlaveComm_PIC18.c: 641: LATCbits.LATC5 = 1;
  4019  00106E  8A8B               	bsf	3979,5,c	;volatile
  4020                           
  4021                           ;SlaveComm_PIC18.c: 642: LATCbits.LATC7 = 1;
  4022  001070  8E8B               	bsf	3979,7,c	;volatile
  4023                           
  4024                           ;SlaveComm_PIC18.c: 645: SSP2CON1bits.SSPEN = 0;
  4025  001072  9A6C               	bcf	3948,5,c	;volatile
  4026                           
  4027                           ;SlaveComm_PIC18.c: 647: ANSELBbits.ANSB0 = 0b0;
  4028  001074  010F               	movlb	15	; () banked
  4029  001076  9139               	bcf	57,0,b	;volatile
  4030                           
  4031                           ;SlaveComm_PIC18.c: 648: ANSELBbits.ANSB1 = 0b0;
  4032  001078  010F               	movlb	15	; () banked
  4033  00107A  9339               	bcf	57,1,b	;volatile
  4034                           
  4035                           ;SlaveComm_PIC18.c: 649: ANSELBbits.ANSB2 = 0b0;
  4036  00107C  010F               	movlb	15	; () banked
  4037  00107E  9539               	bcf	57,2,b	;volatile
  4038                           
  4039                           ;SlaveComm_PIC18.c: 650: ANSELBbits.ANSB3 = 0b0;
  4040  001080  010F               	movlb	15	; () banked
  4041  001082  9739               	bcf	57,3,b	;volatile
  4042                           
  4043                           ;SlaveComm_PIC18.c: 652: TRISBbits.RB0 = 0b1;
  4044  001084  8093               	bsf	3987,0,c	;volatile
  4045                           
  4046                           ;SlaveComm_PIC18.c: 653: TRISBbits.RB1 = 0b1;
  4047  001086  8293               	bsf	3987,1,c	;volatile
  4048                           
  4049                           ;SlaveComm_PIC18.c: 654: TRISBbits.RB2 = 0b1;
  4050  001088  8493               	bsf	3987,2,c	;volatile
  4051                           
  4052                           ;SlaveComm_PIC18.c: 655: TRISBbits.RB3 = 0b0;
  4053  00108A  9693               	bcf	3987,3,c	;volatile
  4054                           
  4055                           ;SlaveComm_PIC18.c: 657: SSP2STATbits.SMP = 0;
  4056  00108C  9E6D               	bcf	3949,7,c	;volatile
  4057                           
  4058                           ;SlaveComm_PIC18.c: 658: SSP2STATbits.CKE = 1;
  4059  00108E  8C6D               	bsf	3949,6,c	;volatile
  4060                           
  4061                           ;SlaveComm_PIC18.c: 660: SSP2CON1bits.WCOL = 0;
  4062  001090  9E6C               	bcf	3948,7,c	;volatile
  4063                           
  4064                           ;SlaveComm_PIC18.c: 661: SSP2CON1bits.SSPOV = 0;
  4065  001092  9C6C               	bcf	3948,6,c	;volatile
  4066                           
  4067                           ;SlaveComm_PIC18.c: 662: SSP2CON1bits.SSPEN = 0;
  4068  001094  9A6C               	bcf	3948,5,c	;volatile
  4069                           
  4070                           ;SlaveComm_PIC18.c: 663: SSP2CON1bits.CKP = 1;
  4071  001096  886C               	bsf	3948,4,c	;volatile
  4072                           
  4073                           ; BSR set to: 15
  4074                           ;SlaveComm_PIC18.c: 664: SSP2CON1bits.SSPM = 0b0100;
  4075  001098  506C               	movf	3948,w,c	;volatile
  4076  00109A  0BF0               	andlw	-16
  4077  00109C  0904               	iorlw	4
  4078  00109E  6E6C               	movwf	3948,c	;volatile
  4079                           
  4080                           ;SlaveComm_PIC18.c: 667: SSP2CON3 = 0x00;
  4081  0010A0  0E00               	movlw	0
  4082  0010A2  6E69               	movwf	3945,c	;volatile
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;SlaveComm_PIC18.c: 668: SSP2CON3bits.BOEN = 0b0;
  4086  0010A4  9869               	bcf	3945,4,c	;volatile
  4087                           
  4088                           ; BSR set to: 15
  4089                           ;SlaveComm_PIC18.c: 670: SSP2CON1bits.SSPEN = 1;
  4090  0010A6  8A6C               	bsf	3948,5,c	;volatile
  4091  0010A8  0012               	return	
  4092  0010AA                     __end_of_SPISlaveInit:
  4093                           	opt stack 0
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           postinc0	equ	0xFEE
  4101                           wreg	equ	0xFE8
  4102                           indf1	equ	0xFE7
  4103                           fsr1h	equ	0xFE2
  4104                           fsr1l	equ	0xFE1
  4105                           indf2	equ	0xFDF
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           postinc0	equ	0xFEE
  4116                           wreg	equ	0xFE8
  4117                           indf1	equ	0xFE7
  4118                           fsr1h	equ	0xFE2
  4119                           fsr1l	equ	0xFE1
  4120                           indf2	equ	0xFDF
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125                           	psect	rparam
  4126  0000                     tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           postinc0	equ	0xFEE
  4133                           wreg	equ	0xFE8
  4134                           indf1	equ	0xFE7
  4135                           fsr1h	equ	0xFE2
  4136                           fsr1l	equ	0xFE1
  4137                           indf2	equ	0xFDF
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8


Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      93
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_readCalibration@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setAmps@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setVolts@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_testLED@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_20(CODE[10]), STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_11(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[12]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[4]), STR_36(CODE[10]), STR_35(CODE[4]), STR_34(CODE[12]), 
		 -> STR_33(CODE[5]), STR_32(CODE[4]), STR_31(CODE[5]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_28(CODE[6]), STR_27(CODE[4]), STR_26(CODE[3]), 
		 -> STR_25(CODE[6]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[5]), 
		 -> STR_21(CODE[4]), STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[5]), STR_8(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 4
		 -> STR_37(CODE[4]), STR_32(CODE[4]), STR_29(CODE[4]), STR_26(CODE[3]), 
		 -> STR_14(CODE[3]), STR_10(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_36(CODE[10]), STR_31(CODE[5]), STR_28(CODE[6]), STR_25(CODE[6]), 
		 -> STR_13(CODE[5]), STR_9(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_35(CODE[4]), STR_30(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), 
		 -> STR_12(CODE[4]), STR_8(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder2@data2	PTR unsigned char  size(2) Largest target is 12
		 -> STR_34(CODE[12]), STR_23(CODE[5]), 

    command_builder2@data1	PTR unsigned char  size(2) Largest target is 5
		 -> STR_33(CODE[5]), STR_22(CODE[5]), 

    command_builder2@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_21(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(COMRAM[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _init->_delayMS
    _communications->_process_data
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setAmps
    _resetCommunications->_com_command_setPower
    _resetCommunications->_com_command_setVersion
    _resetCommunications->_com_command_setVolts
    _com_command_testLED->_command_builder2
    _com_command_setVolts->_command_builder3
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_command_builder3
    _com_command_setAmps->_command_builder3
    _com_command_readCalibration->_command_builder2
    _command_builder2->_command_builder_add_string
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_command_builder3
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _process_data_parameterize->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   65656
                                             84 COMRAM     2     2      0
                       _SPISlaveInit
                     _communications
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     297
                                              6 COMRAM     2     2      0
                            _delayMS
 ---------------------------------------------------------------------------------
 (1) _communications                                       3     3      0   65358
                                             81 COMRAM     3     3      0
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     278
                                              2 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46031
                                             22 COMRAM     4     2      2
        _com_command_readCalibration
                _com_command_setAmps
               _com_command_setPower
             _com_command_setVersion
               _com_command_setVolts
                _com_command_testLED
                            _delayMS
 ---------------------------------------------------------------------------------
 (2) _delayMS                                              6     4      2     251
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _com_command_testLED                                  2     0      2    6903
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (3) _com_command_setVolts                                 2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                 2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setAmps                                  2     0      2    7923
                                             20 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_readCalibration                          2     0      2    6903
                                             18 COMRAM     2     0      2
                   _command_builder2
 ---------------------------------------------------------------------------------
 (4) _command_builder2                                     6     0      6    6828
                                             12 COMRAM     6     0      6
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     397
                                              3 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     100
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   18629
                                             26 COMRAM    55    51      4
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              6     2      4   17536
                                             20 COMRAM     6     2      4
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    2259
                                             11 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4     685
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2    6837
                                             16 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4    6550
                                             12 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8    7848
                                             12 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    3742
                                              4 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    2570
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4     864
                                              6 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPISlaveInit
   _communications
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_readCalibration
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setAmps
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_setVolts
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _com_command_testLED
         _command_builder2
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
       _delayMS
     _send_data
       _SPI_send_data
   _init
     _delayMS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      54       4       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5D       1       97.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B1       9        0.0%
DATA                 0      0      B1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 10 00:45:49 2017

                                       _SPISlaveInit 1058                                  ___wmul@multiplicand 0003  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l130 0D8E                                                  l153 0CF6  
                                                l182 0684                                                  l258 11B2  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                u670 1158                                                  u676 115A  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0019                                                 l1352 0F5A  
                                               l1530 09B4                                                 l1524 095A  
                                               l1516 0906                                                 l1508 08F4  
                                               l1532 09C2                                                 l1356 0F88  
                                               l1372 0A70                                                 l1380 0AAA  
                                               l1444 1104                                                 l1604 12CA  
                                               l1454 111E                                                 l1630 0BBE  
                                               l1528 0984                                                 l1392 0B20  
                                               l1368 0A34                                                 l1552 06C2  
                                               l1456 1122                                                 l1632 0BCC  
                                               l1704 0ED2                                                 l1386 0AE6  
                                               l1378 0AA6                                                 l1546 0686  
                                               l1634 0BDA                                                 l1626 0BA2  
                                               l1642 0C00                                                 l1730 0D20  
                                               l1564 0760                                                 l1548 068C  
                                               l1492 11AE                                                 l1652 0C44  
                                               l1636 0BE8                                                 l1628 0BB0  
                                               l1732 0D34                                                 l1740 0D72  
                                               l1398 0B5C                                                 l1582 084C  
                                               l1574 07F0                                                 l1590 08A6  
                                               l1638 0BF6                                                 l1568 07A6  
                                               l1664 0C8A                                                 l1760 12AC  
                                               l1586 087A                                                 l1578 081E  
                                               l1674 0CE4                                                 l1738 0D5E  
                                               l1748 0DA2                                                 l1696 0E70  
                                               STR_1 0648                                                 STR_2 0650  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 062D                                                 STR_5 0628  
                                               STR_6 0623                                                 STR_7 0657  
                                               STR_8 0650                                                 STR_9 0623  
                                               _main 1296                                                 _init 10AA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               indf1 000FE7                                                 fsr1l 000FE1  
                                               indf2 000FDF                                                 fsr2l 000FD9  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 001E  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 0000                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 0054                        __size_of_com_command_setPower 0026  
                      __size_of_com_command_setVolts 0026                                       _communications 0CFA  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 064C                                                STR_11 064C  
                                              STR_12 0650                                                STR_20 060D  
                                              STR_13 0623                                                STR_21 0648  
                                              STR_22 062D                                                STR_14 0657  
                                              STR_30 0650                                                STR_23 0623  
                                              STR_31 0637                                                STR_15 0632  
                                              STR_16 0623                                                STR_24 0650  
                                              STR_32 0640                                                STR_33 062D  
                                              STR_25 061D                                                STR_17 061D  
                                              STR_34 0601                                                STR_26 0654  
                                              STR_18 0617                                                STR_35 0650  
                                              STR_27 0650                                                STR_19 0637  
                                              STR_36 060D                                                STR_28 0617  
                                              STR_37 0644                                                STR_29 063C  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 000D  
                                  ?_command_builder2 000D                                    ?_command_builder3 000D  
                                    __end_of_delayMS 1130                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 0009  
                                 ??_command_builder1 0011                                   ??_command_builder2 0013  
                                 ??_command_builder3 0015                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0017                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                   __CFG_MCLRE$EXTMCLR 000000  
                                              init@i 0007                                                tablat 000FF5  
                                              status 000FD8                                      __end_of_strcmp2 0B66  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 000B                        command_builder_add_string@inx 000B  
                                    __initialization 1274                                         __end_of_main 12B4  
                                       __end_of_init 10FA                               __end_of_communications 0DA8  
                             _com_command_setVersion 11DC                  __size_of_command_builder_add_string 005C  
                                   _SPI_receive_data 118E                         command_builder_add_char@data 0003  
                                             ??_main 0055                                               ??_init 0007  
                                      _SPI_send_data 12B4                                        __activetblptr 000002  
                            _process_data_parameters 065C                                     receive_data@data 0007  
                        __end_of_com_command_setAmps 124E                                       __CFG_WDTEN$OFF 000000  
                        __end_of_com_command_testLED 12F0                                SPI_send_data@sendGood 0002  
                                     __CFG_XINST$OFF 000000                                               ___wmul 124E  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                             clear_0 127A                                               clear_1 1286  
                                          ??_delayMS 0003                                       ?_SPI_send_data 0001  
                          _process_data_parameterize 08AA                  __end_of_com_command_readCalibration 130E  
                        _com_command_readCalibration 12F0                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                            ??_strcmp2 0005  
                                   __end_of_strmatch 1160                                        ?_receive_data 0004  
                                         __accesstop 0060                              __end_of__initialization 128C  
                    com_command_setPower@send_buffer 0015                                    SPI_send_data@data 0001  
                                     __pcstackCOMRAM 0001                           receive_data@receive_buffer 0004  
                          ??_process_data_parameters 0019                         communications@receive_buffer 0060  
              command_builder_add_string@data_string 0007                   __end_of_command_builder_add_string 0FAC  
                         _command_builder_add_string 0F50                                           __pbssBANK0 0060  
                                     ??_receive_data 0006                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 0008                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___wmul 0001                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0001                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 001A           communications@end_of_transmission_received 005A  
                        __end_of_resetCommunications 0C38                         __end_of_com_command_setPower 1228  
                       __end_of_com_command_setVolts 11DC                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 130E                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 1002                      __end_of_process_data_parameters 08AA  
                           __end_of_SPI_receive_data 11B6                            __size_of_command_builder1 0056  
                          __size_of_command_builder2 007A                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 0009                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0015  
                                            __Lparam 0000             process_data_parameterize@parameter_index 0010  
                                    __size_of___wmul 0026                                         __psmallconst 0600  
                               SPI_receive_data@data 0001                                              __pcinit 1274  
                                            _delayMS 10FA                                              __ramtop 0600  
                                          ?_strmatch 000C                                              __ptext0 1296  
                                            __ptext1 10AA                                              __ptext2 0CFA  
                                            __ptext3 0E46                                              __ptext4 12B4  
                                            __ptext5 0B66                                              __ptext6 10FA  
                                            __ptext7 12D2                                              __ptext8 11B6  
                                            __ptext9 11DC                                              _strcmp2 0A22  
                               end_of_initialization 128C                   __size_of_process_data_parameterize 0178  
                                  __end_of_send_data 0ED6                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 1202                                     ??_communications 0052  
        process_data_parameterize@parameter_position 0011                                              postinc0 000FEE  
                              receive_data@my_status 005D                                 __end_of_receive_data 0CFA  
                                         ??_strmatch 0010                                            _PORTBbits 000F81  
                    communications@last_state_active 005B                                        ?_process_data 001B  
                                          _TRISAbits 000F92                                            _TRISBbits 000F93  
                                          _TRISCbits 000F94                           process_data@receive_buffer 001B  
                  __end_of_process_data_parameterize 0A22                         __size_of_com_command_setAmps 0026  
                       __size_of_com_command_testLED 001E                                 _com_command_setPower 1202  
                               _com_command_setVolts 11B6                  communications@receive_current_state 005C  
                                      ?_SPISlaveInit 0001                                       __end_of___wmul 1274  
              command_builder_add_string@send_buffer 0005                                       ??_process_data 001F  
                        ?_command_builder_add_string 0005                                  start_initialization 1274  
                       resetCommunications@commState 0057                                     _command_builder1 0FAC  
                                   _command_builder2 0ED6                                     _command_builder3 0DA8  
                  com_command_setVersion@send_buffer 0015                                 send_data@send_buffer 0003  
                              ?_com_command_setPower 0015                                ?_com_command_setVolts 0015  
                                     ??_SPISlaveInit 0001                                             ??___wmul 0005  
                send_end_of_transmission@send_buffer 0011                           ??_send_end_of_transmission 0013  
                         ??_command_builder_add_char 0004                                          __pbssCOMRAM 0057  
                           SPI_receive_data@recvGood 0003                                  __end_of__stringdata 065A  
                                  ?_SPI_receive_data 0001                                   ??_SPI_receive_data 0003  
                     com_command_testLED@send_buffer 0013                                command_builder1@data1 000F  
                        command_builder1@send_buffer 000D                             ?_process_data_parameters 0015  
                              command_builder2@data1 000F                                command_builder2@data2 0011  
                              __size_of_receive_data 00C2                                command_builder3@data1 000F  
                              command_builder3@data2 0011                                command_builder3@data3 0013  
                                           ?_delayMS 0001                                __end_of_SPI_send_data 12D2  
                                        __smallconst 0600                       resetCommunications@send_buffer 0017  
                                  __size_of_strmatch 0030                                    send_data@send_end 0007  
                                           ?_strcmp2 0001                         __size_of_resetCommunications 00D2  
                                     strmatch@result 0010                  process_data_parameterize@parameters 0007  
                                       _receive_data 0C38                                       ___wmul@product 0005  
                                           _LATBbits 000F8A                                             _LATCbits 000F8B  
                               __end_of_process_data 118E                                            _send_data 0E46  
                             ??_com_command_setPower 0017                    process_data_parameters@parameters 0015  
                             ??_com_command_setVolts 0017                       com_command_setAmps@send_buffer 0015  
                                   __CFG_WDTPS$32768 000000                          command_builder2@send_buffer 000D  
                                           _SSP2CON3 000F69               com_command_readCalibration@send_buffer 0013  
                                        __stringdata 0601                                    ___wmul@multiplier 0001  
                command_builder_add_char@send_buffer 0001                         ?_com_command_readCalibration 0013  
                                _com_command_setAmps 1228                                  _com_command_testLED 12D2  
                               __end_of_SPISlaveInit 10AA             process_data@end_of_transmission_received 0051  
                                         ?_send_data 0003                                             __Hrparam 0000  
                               ?_com_command_setAmps 0015                                 ?_com_command_testLED 0013  
                                           __Lrparam 0000                                   __CFG_BOREN$SBORDIS 000000  
                        command_builder3@send_buffer 000D                                    __CFG_P2BMX$PORTB5 000000  
                   __end_of_send_end_of_transmission 1324                     __end_of_command_builder_add_char 1058  
                                   __size_of_delayMS 0036                             __end_of_command_builder1 1002  
                           __end_of_command_builder2 0F50                             __end_of_command_builder3 0E46  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                         strcmp2@inx 000A                         process_data_parameterize@inx 000E  
                      ??_com_command_readCalibration 0015                                             __ptext10 1202  
                                           __ptext11 1228                                             __ptext20 130E  
                                           __ptext12 12F0                                             __ptext21 0FAC  
                                           __ptext13 0ED6                                             __ptext22 0DA8  
                                           __ptext14 0C38                                             __ptext23 0F50  
                                           __ptext15 118E                                             __ptext24 1002  
                                           __ptext16 1160                                             __ptext25 08AA  
                                           __ptext17 065C                                             __ptext26 124E  
                                           __ptext18 1130                                             __ptext27 1058  
                                           __ptext19 0A22                                         _SSP2CON1bits 000F6C  
                                       _SSP2CON3bits 000F69                                     __size_of_strcmp2 0144  
                                      __size_of_main 001E                                        strmatch@match 0012  
                                      __size_of_init 0050                                             delayMS@a 0001  
                                           delayMS@i 0003                                             delayMS@j 0005  
                         ?_process_data_parameterize 0007                                ??_com_command_setAmps 0017  
                              ??_com_command_testLED 0015                      com_command_setVolts@send_buffer 0015  
                            __size_of_communications 00AE                                             _strmatch 1130  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 001D  
                           ??_com_command_setVersion 0017                                __size_of_process_data 002E  
                             process_data@parameters 001F                        communications@no_more_to_send 0053  
                                    main@togglePulse 0055                                          ??_send_data 0005  
                                          strmatch@a 000C                                            strmatch@b 000E  
               __size_of_com_command_readCalibration 001E                                  _resetCommunications 0B66  
                          __size_of_SPI_receive_data 0028                                             strcmp2@a 0001  
                                           strcmp2@b 0003                                         _process_data 1160  
                                  _SPI_transmit_wait 0059                                __size_of_SPISlaveInit 0052  
                          communications@send_buffer 008A                     __size_of_process_data_parameters 024E  
                                  __CFG_T3CMX$PORTC0 000000                                 ?_resetCommunications 0017  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0011  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0001  
