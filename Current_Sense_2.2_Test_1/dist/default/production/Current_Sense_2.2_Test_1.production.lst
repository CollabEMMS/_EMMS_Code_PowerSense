

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 29 20:24:55 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F25K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  001852                     __pidataCOMRAM:
    92                           	opt stack 0
    93                           
    94                           ;initializer for powerPulseCheck@timerCountHFCheck
    95  001852  0001               	dw	1
    96                           
    97                           ;initializer for powerPulseCheck@firstPulse
    98  001854  01                 	db	1
    99                           
   100                           	psect	idataBANK0
   101  00184E                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for powerPulseCheck@timerCountHFLast
   105  00184E  FFFF               	dw	65535
   106  001850  7FFF               	dw	32767
   107  0000                     _ANSELBbits	set	3897
   108  0000                     _ANSELAbits	set	3896
   109  0000                     _ANSELC	set	3898
   110  0000                     _ANSELB	set	3897
   111  0000                     _ANSELA	set	3896
   112  0000                     _SSP2CON3bits	set	3945
   113  0000                     _SSP2CON3	set	3945
   114  0000                     _SSP2BUF	set	3951
   115  0000                     _SSP2STATbits	set	3949
   116  0000                     _SSP2CON1bits	set	3948
   117  0000                     _T0CONbits	set	4053
   118  0000                     _IPR5	set	3967
   119  0000                     _IPR4	set	3964
   120  0000                     _IPR3	set	4005
   121  0000                     _IPR2	set	4002
   122  0000                     _IPR1	set	3999
   123  0000                     _PIE5	set	3965
   124  0000                     _PIE4	set	3962
   125  0000                     _PIE3	set	4003
   126  0000                     _PIE2	set	4000
   127  0000                     _PIE1	set	3997
   128  0000                     _PIR5	set	3966
   129  0000                     _PIR4	set	3963
   130  0000                     _PIR3	set	4004
   131  0000                     _PIR2	set	4001
   132  0000                     _PIR1	set	3998
   133  0000                     _RCONbits	set	4048
   134  0000                     _INTCON3	set	4080
   135  0000                     _INTCON2	set	4081
   136  0000                     _INTCON	set	4082
   137  0000                     _ADCON0bits	set	4034
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _OSCCON2bits	set	4050
   140  0000                     _OSCCONbits	set	4051
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR0H	set	4055
   143  0000                     _INTCONbits	set	4082
   144  0000                     _LATAbits	set	3977
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTAbits	set	3968
   147  0000                     _TRISAbits	set	3986
   148  0000                     _LATCbits	set	3979
   149  0000                     _LATBbits	set	3978
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TRISBbits	set	3987
   152                           
   153                           	psect	smallconst
   154  000600                     __psmallconst:
   155                           	opt stack 0
   156  000600  00                 	db	0
   157  000601                     STR_3:
   158  000601  43                 	db	67	;'C'
   159  000602  61                 	db	97	;'a'
   160  000603  6C                 	db	108	;'l'
   161  000604  69                 	db	105	;'i'
   162  000605  62                 	db	98	;'b'
   163  000606  72                 	db	114	;'r'
   164  000607  61                 	db	97	;'a'
   165  000608  74                 	db	116	;'t'
   166  000609  69                 	db	105	;'i'
   167  00060A  6F                 	db	111	;'o'
   168  00060B  6E                 	db	110	;'n'
   169  00060C  00                 	db	0
   170  00060D                     STR_22:
   171  00060D  50                 	db	80	;'P'
   172  00060E  53                 	db	83	;'S'
   173  00060F  56                 	db	86	;'V'
   174  000610  65                 	db	101	;'e'
   175  000611  72                 	db	114	;'r'
   176  000612  73                 	db	115	;'s'
   177  000613  69                 	db	105	;'i'
   178  000614  6F                 	db	111	;'o'
   179  000615  6E                 	db	110	;'n'
   180  000616  00                 	db	0
   181  000617                     STR_4:
   182  000617  45                 	db	69	;'E'
   183  000618  6E                 	db	110	;'n'
   184  000619  55                 	db	85	;'U'
   185  00061A  73                 	db	115	;'s'
   186  00061B  65                 	db	101	;'e'
   187  00061C  64                 	db	100	;'d'
   188  00061D  00                 	db	0
   189  00061E                     STR_20:
   190  00061E  56                 	db	86	;'V'
   191  00061F  6F                 	db	111	;'o'
   192  000620  6C                 	db	108	;'l'
   193  000621  74                 	db	116	;'t'
   194  000622  73                 	db	115	;'s'
   195  000623  00                 	db	0
   196  000624                     STR_18:
   197  000624  57                 	db	87	;'W'
   198  000625  61                 	db	97	;'a'
   199  000626  74                 	db	116	;'t'
   200  000627  74                 	db	116	;'t'
   201  000628  73                 	db	115	;'s'
   202  000629  00                 	db	0
   203  00062A                     STR_7:
   204  00062A  4C                 	db	76	;'L'
   205  00062B  45                 	db	69	;'E'
   206  00062C  44                 	db	68	;'D'
   207  00062D  42                 	db	66	;'B'
   208  00062E  00                 	db	0
   209  00062F                     STR_6:
   210  00062F  44                 	db	68	;'D'
   211  000630  61                 	db	97	;'a'
   212  000631  74                 	db	116	;'t'
   213  000632  61                 	db	97	;'a'
   214  000633  00                 	db	0
   215  000634                     STR_5:
   216  000634  52                 	db	82	;'R'
   217  000635  65                 	db	101	;'e'
   218  000636  61                 	db	97	;'a'
   219  000637  64                 	db	100	;'d'
   220  000638  00                 	db	0
   221  000639                     STR_16:
   222  000639  43                 	db	67	;'C'
   223  00063A  6F                 	db	111	;'o'
   224  00063B  6E                 	db	110	;'n'
   225  00063C  66                 	db	102	;'f'
   226  00063D  00                 	db	0
   227  00063E                     STR_21:
   228  00063E  41                 	db	65	;'A'
   229  00063F  6D                 	db	109	;'m'
   230  000640  70                 	db	112	;'p'
   231  000641  73                 	db	115	;'s'
   232  000642  00                 	db	0
   233  000643  32                 	db	50	;'2'
   234  000644  32                 	db	50	;'2'
   235  000645  32                 	db	50	;'2'
   236  000646  00                 	db	0
   237  000647  33                 	db	51	;'3'
   238  000648  33                 	db	51	;'3'
   239  000649  33                 	db	51	;'3'
   240  00064A  00                 	db	0
   241  00064B                     STR_40:
   242  00064B  34                 	db	52	;'4'
   243  00064C  34                 	db	52	;'4'
   244  00064D  34                 	db	52	;'4'
   245  00064E  00                 	db	0
   246  00064F                     STR_1:
   247  00064F  45                 	db	69	;'E'
   248  000650  4E                 	db	78	;'N'
   249  000651  44                 	db	68	;'D'
   250  000652  00                 	db	0
   251  000653                     STR_11:
   252  000653  4F                 	db	79	;'O'
   253  000654  66                 	db	102	;'f'
   254  000655  66                 	db	102	;'f'
   255  000656  00                 	db	0
   256  000657                     STR_2:
   257  000657  53                 	db	83	;'S'
   258  000658  65                 	db	101	;'e'
   259  000659  74                 	db	116	;'t'
   260  00065A  00                 	db	0
   261  00065B                     STR_8:
   262  00065B  4F                 	db	79	;'O'
   263  00065C  6E                 	db	110	;'n'
   264  00065D  00                 	db	0
   265  0000                     
   266                           ; #config settings
   267  00065E  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           	psect	cinit
   270  0013EC                     __pcinit:
   271                           	opt stack 0
   272  0013EC                     start_initialization:
   273                           	opt stack 0
   274  0013EC                     __initialization:
   275                           	opt stack 0
   276                           
   277                           ; Initialize objects allocated to BANK0 (4 bytes)
   278                           ; load TBLPTR registers with __pidataBANK0
   279  0013EC  0E4E               	movlw	low __pidataBANK0
   280  0013EE  6EF6               	movwf	tblptrl,c
   281  0013F0  0E18               	movlw	high __pidataBANK0
   282  0013F2  6EF7               	movwf	tblptrh,c
   283  0013F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   284  0013F6  6EF8               	movwf	tblptru,c
   285  0013F8  EE00  F0D0         	lfsr	0,__pdataBANK0
   286  0013FC  EE10 F004          	lfsr	1,4
   287  001400                     copy_data0:
   288  001400  0009               	tblrd		*+
   289  001402  CFF5 FFEE          	movff	tablat,postinc0
   290  001406  50E5               	movf	postdec1,w,c
   291  001408  50E1               	movf	fsr1l,w,c
   292  00140A  E1FA               	bnz	copy_data0
   293                           
   294                           ; Initialize objects allocated to COMRAM (3 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296  00140C  0E52               	movlw	low __pidataCOMRAM
   297  00140E  6EF6               	movwf	tblptrl,c
   298  001410  0E18               	movlw	high __pidataCOMRAM
   299  001412  6EF7               	movwf	tblptrh,c
   300  001414  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301  001416  6EF8               	movwf	tblptru,c
   302  001418  0009               	tblrd		*+	;fetch initializer
   303  00141A  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   304  00141E  0009               	tblrd		*+	;fetch initializer
   305  001420  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   306  001424  0009               	tblrd		*+	;fetch initializer
   307  001426  CFF5 F04C          	movff	tablat,__pdataCOMRAM+2
   308                           
   309                           ; Clear objects allocated to BANK0 (96 bytes)
   310  00142A  EE00  F060         	lfsr	0,__pbssBANK0
   311  00142E  0E60               	movlw	96
   312  001430                     clear_0:
   313  001430  6AEE               	clrf	postinc0,c
   314  001432  06E8               	decf	wreg,f,c
   315  001434  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to COMRAM (19 bytes)
   318  001436  EE00  F037         	lfsr	0,__pbssCOMRAM
   319  00143A  0E13               	movlw	19
   320  00143C                     clear_1:
   321  00143C  6AEE               	clrf	postinc0,c
   322  00143E  06E8               	decf	wreg,f,c
   323  001440  E1FD               	bnz	clear_1
   324  001442                     end_of_initialization:
   325                           	opt stack 0
   326  001442                     __end_of__initialization:
   327                           	opt stack 0
   328  001442  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  001444  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  001446  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  001448  6EF8               	movwf	tblptru,c
   332  00144A  0100               	movlb	0
   333  00144C  EF28  F00A         	goto	_main	;jump to C main() function
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	bssCOMRAM
   344  000037                     __pbssCOMRAM:
   345                           	opt stack 0
   346  000037                     _timerCountLF:
   347                           	opt stack 0
   348  000037                     	ds	4
   349  00003B                     resetCommunications@commState:
   350                           	opt stack 0
   351  00003B                     	ds	2
   352  00003D                     receive_data@my_status:
   353                           	opt stack 0
   354  00003D                     	ds	1
   355  00003E                     communications@last_state_active:
   356                           	opt stack 0
   357  00003E                     	ds	1
   358  00003F                     communications@receive_current_state:
   359                           	opt stack 0
   360  00003F                     	ds	1
   361  000040                     communications@end_of_transmission_received:
   362                           	opt stack 0
   363  000040                     	ds	1
   364  000041                     _SPI_transmit_wait:
   365                           	opt stack 0
   366  000041                     	ds	1
   367  000042                     powerPulseCheck@mcpLFoutLast:
   368                           	opt stack 0
   369  000042                     	ds	1
   370  000043                     powerPulseCheck@mcpHFoutLast:
   371                           	opt stack 0
   372  000043                     	ds	1
   373  000044                     pulseFoutPassThru@runonce:
   374                           	opt stack 0
   375  000044                     	ds	1
   376  000045                     _isLow:
   377                           	opt stack 0
   378  000045                     	ds	1
   379  000046                     _timerCountHF:
   380                           	opt stack 0
   381  000046                     	ds	4
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	dataCOMRAM
   392  00004A                     __pdataCOMRAM:
   393                           	opt stack 0
   394  00004A                     powerPulseCheck@timerCountHFCheck:
   395                           	opt stack 0
   396  00004A                     	ds	2
   397  00004C                     powerPulseCheck@firstPulse:
   398                           	opt stack 0
   399  00004C                     	ds	1
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409                           	psect	bssBANK0
   410  000060                     __pbssBANK0:
   411                           	opt stack 0
   412  000060                     powerPulseCheck@meterEnergyUsedPart:
   413                           	opt stack 0
   414  000060                     	ds	4
   415  000064                     _meterEnergyUsed:
   416                           	opt stack 0
   417  000064                     	ds	4
   418  000068                     _meterWatts:
   419                           	opt stack 0
   420  000068                     	ds	4
   421  00006C                     communications@send_buffer:
   422                           	opt stack 0
   423  00006C                     	ds	42
   424  000096                     communications@receive_buffer:
   425                           	opt stack 0
   426  000096                     	ds	42
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436                           	psect	dataBANK0
   437  0000D0                     __pdataBANK0:
   438                           	opt stack 0
   439  0000D0                     powerPulseCheck@timerCountHFLast:
   440                           	opt stack 0
   441  0000D0                     	ds	4
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackBANK1
   452  000100                     __pcstackBANK1:
   453                           	opt stack 0
   454  000100                     process_data@parameters:
   455                           	opt stack 0
   456                           
   457                           ; 50 bytes @ 0x0
   458  000100                     	ds	50
   459  000132                     process_data@end_of_transmission_received:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x32
   463  000132                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	cstackBANK0
   474  0000C0                     __pcstackBANK0:
   475                           	opt stack 0
   476  0000C0                     com_command_setPower@temp:
   477                           	opt stack 0
   478  0000C0                     com_command_setEnergyUsed@temp:
   479                           	opt stack 0
   480                           
   481                           ; 12 bytes @ 0x0
   482  0000C0                     	ds	12
   483  0000CC                     process_data@receive_buffer:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0xC
   487  0000CC                     	ds	2
   488  0000CE                     process_data@send_buffer:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xE
   492  0000CE                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	cstackCOMRAM
   503  000001                     __pcstackCOMRAM:
   504                           	opt stack 0
   505  000001                     ??_Timer0_ISR:
   506                           
   507                           ; 1 bytes @ 0x0
   508  000001                     	ds	18
   509  000013                     ??_isdigit:
   510  000013                     ?_strcmp2:
   511                           	opt stack 0
   512  000013                     ?___wmul:
   513                           	opt stack 0
   514  000013                     ?___lmul:
   515                           	opt stack 0
   516  000013                     ?___lldiv:
   517                           	opt stack 0
   518  000013                     ?___llmod:
   519                           	opt stack 0
   520  000013                     SPI_send_data@data:
   521                           	opt stack 0
   522  000013                     delayMS10@count:
   523                           	opt stack 0
   524  000013                     command_builder_add_char@send_buffer:
   525                           	opt stack 0
   526  000013                     strcmp2@a:
   527                           	opt stack 0
   528  000013                     SPI_receive_data@data:
   529                           	opt stack 0
   530  000013                     ___wmul@multiplier:
   531                           	opt stack 0
   532  000013                     ___lmul@multiplier:
   533                           	opt stack 0
   534  000013                     ___lldiv@dividend:
   535                           	opt stack 0
   536  000013                     ___llmod@dividend:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x12
   540  000013                     	ds	1
   541  000014                     SPI_send_data@sendGood:
   542                           	opt stack 0
   543  000014                     _isdigit$2124:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x13
   547  000014                     	ds	1
   548  000015                     ??_delayMS10:
   549  000015                     command_builder_add_char@data:
   550                           	opt stack 0
   551  000015                     SPI_receive_data@recvGood:
   552                           	opt stack 0
   553  000015                     isdigit@c:
   554                           	opt stack 0
   555  000015                     send_data@send_buffer:
   556                           	opt stack 0
   557  000015                     strcmp2@b:
   558                           	opt stack 0
   559  000015                     ___wmul@multiplicand:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x14
   563  000015                     	ds	1
   564  000016                     ??_command_builder_add_char:
   565  000016                     delayMS10@inx:
   566                           	opt stack 0
   567  000016                     receive_data@receive_buffer:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x15
   571  000016                     	ds	1
   572  000017                     ??_send_data:
   573  000017                     ??_strcmp2:
   574  000017                     command_builder_add_string@send_buffer:
   575                           	opt stack 0
   576  000017                     ___wmul@product:
   577                           	opt stack 0
   578  000017                     ___lmul@multiplicand:
   579                           	opt stack 0
   580  000017                     ___lldiv@divisor:
   581                           	opt stack 0
   582  000017                     ___llmod@divisor:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0x16
   586  000017                     	ds	1
   587  000018                     ??_receive_data:
   588                           
   589                           ; 1 bytes @ 0x17
   590  000018                     	ds	1
   591  000019                     receive_data@data:
   592                           	opt stack 0
   593  000019                     send_data@send_end:
   594                           	opt stack 0
   595  000019                     process_data_parameterize@parameters:
   596                           	opt stack 0
   597  000019                     command_builder_add_string@data_string:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x18
   601  000019                     	ds	1
   602  00001A                     strcmp2@match:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x19
   606  00001A                     	ds	1
   607  00001B                     ??_command_builder_add_string:
   608  00001B                     ___llmod@counter:
   609                           	opt stack 0
   610  00001B                     process_data_parameterize@buffer_to_parameterize:
   611                           	opt stack 0
   612  00001B                     ___lmul@product:
   613                           	opt stack 0
   614  00001B                     ___lldiv@quotient:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x1A
   618  00001B                     	ds	1
   619  00001C                     strcmp2@inx:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x1B
   623  00001C                     	ds	1
   624  00001D                     ??_process_data_parameterize:
   625  00001D                     command_builder_add_string@inx:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x1C
   629  00001D                     	ds	1
   630  00001E                     strmatch@a:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x1D
   634  00001E                     	ds	1
   635  00001F                     ?_atol:
   636                           	opt stack 0
   637  00001F                     ___lldiv@counter:
   638                           	opt stack 0
   639  00001F                     command_builder1@send_buffer:
   640                           	opt stack 0
   641  00001F                     command_builder3@send_buffer:
   642                           	opt stack 0
   643  00001F                     atol@s:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x1E
   647  00001F                     	ds	1
   648  000020                     process_data_parameterize@inx:
   649                           	opt stack 0
   650  000020                     strmatch@b:
   651                           	opt stack 0
   652  000020                     ultoa@buf:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x1F
   656  000020                     	ds	1
   657  000021                     command_builder1@data1:
   658                           	opt stack 0
   659  000021                     command_builder3@data1:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x20
   663  000021                     	ds	1
   664  000022                     process_data_parameterize@parameter_index:
   665                           	opt stack 0
   666  000022                     strmatch@result:
   667                           	opt stack 0
   668  000022                     ultoa@val:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x21
   672  000022                     	ds	1
   673  000023                     ??_atol:
   674  000023                     process_data_parameterize@parameter_position:
   675                           	opt stack 0
   676  000023                     command_builder3@data2:
   677                           	opt stack 0
   678  000023                     send_end_of_transmission@send_buffer:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x22
   682  000023                     	ds	1
   683  000024                     strmatch@match:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x23
   687  000024                     	ds	1
   688  000025                     command_builder3@data3:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x24
   692  000025                     	ds	1
   693  000026                     ultoa@base:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x25
   697  000026                     	ds	1
   698  000027                     atol@sign:
   699                           	opt stack 0
   700  000027                     com_command_setVersion@send_buffer:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x26
   704  000027                     	ds	1
   705  000028                     atol@a:
   706                           	opt stack 0
   707  000028                     ultoa@v:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x27
   711  000028                     	ds	1
   712  000029                     
   713                           ; 1 bytes @ 0x28
   714  000029                     	ds	3
   715  00002C                     atol@c:
   716                           	opt stack 0
   717  00002C                     ultoa@c:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x2B
   721  00002C                     	ds	1
   722  00002D                     com_command_setPower@send_buffer:
   723                           	opt stack 0
   724  00002D                     com_command_setEnergyUsed@send_buffer:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x2C
   728  00002D                     	ds	2
   729  00002F                     resetCommunications@send_buffer:
   730                           	opt stack 0
   731  00002F                     process_data_parameters@parameters:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x2E
   735  00002F                     	ds	2
   736  000031                     ??_resetCommunications:
   737  000031                     process_data_parameters@send_buffer:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x30
   741  000031                     	ds	2
   742  000033                     process_data_parameters@end_of_transmission_received:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x32
   746  000033                     	ds	1
   747  000034                     communications@no_more_to_send:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x33
   751  000034                     	ds	1
   752  000035                     communications@firstTime:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x34
   756  000035                     	ds	1
   757  000036                     main@isLow:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x35
   761  000036                     	ds	1
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1l	equ	0xFE1
   770                           
   771 ;;
   772 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   773 ;;
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 90 in file "Current_Sense_Main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  isLow           1   53[COMRAM] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   790 ;;      Params:         0       0       0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0
   793 ;;      Totals:         1       0       0       0       0       0       0
   794 ;;Total ram usage:        1 bytes
   795 ;; Hardware stack levels required when called:    8
   796 ;; This function calls:
   797 ;;		_communications
   798 ;;		_delayMS10
   799 ;;		_init
   800 ;;		_initTimer
   801 ;;		_powerPulseCheck
   802 ;;		_toggleBlue
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  001450                     __ptext0:
   810                           	opt stack 0
   811  001450                     _main:
   812                           	opt stack 23
   813                           
   814                           ;Current_Sense_Main.c: 92: init();
   815                           
   816                           ;incstack = 0
   817  001450  EC24  F00C         	call	_init	;wreg free
   818                           
   819                           ;Current_Sense_Main.c: 95: TRISBbits.TRISB4 = 0;
   820  001454  9893               	bcf	3987,4,c	;volatile
   821                           
   822                           ;Current_Sense_Main.c: 96: TRISCbits.TRISC0 = 0;
   823  001456  9094               	bcf	3988,0,c	;volatile
   824                           
   825                           ;Current_Sense_Main.c: 97: TRISCbits.TRISC1 = 0;
   826  001458  9294               	bcf	3988,1,c	;volatile
   827                           
   828                           ;Current_Sense_Main.c: 101: LATBbits.LATB4 = 1;
   829  00145A  888A               	bsf	3978,4,c	;volatile
   830                           
   831                           ;Current_Sense_Main.c: 102: LATCbits.LATC1 = 1;
   832  00145C  828B               	bsf	3979,1,c	;volatile
   833                           
   834                           ;Current_Sense_Main.c: 103: LATCbits.LATC0 = 1;
   835  00145E  808B               	bsf	3979,0,c	;volatile
   836                           
   837                           ;Current_Sense_Main.c: 106: TRISCbits.TRISC7 = 0;
   838  001460  9E94               	bcf	3988,7,c	;volatile
   839                           
   840                           ;Current_Sense_Main.c: 107: TRISCbits.TRISC4 = 0;
   841  001462  9894               	bcf	3988,4,c	;volatile
   842                           
   843                           ;Current_Sense_Main.c: 108: TRISCbits.TRISC3 = 0;
   844  001464  9694               	bcf	3988,3,c	;volatile
   845                           
   846                           ;Current_Sense_Main.c: 109: TRISCbits.TRISC6 = 0;
   847  001466  9C94               	bcf	3988,6,c	;volatile
   848                           
   849                           ;Current_Sense_Main.c: 110: ANSELA = 0b00000000;
   850  001468  0E00               	movlw	0
   851  00146A  010F               	movlb	15	; () banked
   852  00146C  6F38               	movwf	56,b	;volatile
   853                           
   854                           ; BSR set to: 15
   855                           ;Current_Sense_Main.c: 111: ANSELB = 0b00000000;
   856  00146E  0E00               	movlw	0
   857  001470  6F39               	movwf	57,b	;volatile
   858                           
   859                           ; BSR set to: 15
   860                           ;Current_Sense_Main.c: 112: ANSELC = 0b00000000;
   861  001472  0E00               	movlw	0
   862  001474  6F3A               	movwf	58,b	;volatile
   863                           
   864                           ; BSR set to: 15
   865                           ;Current_Sense_Main.c: 118: LATCbits.LATC6 = 1;
   866  001476  8C8B               	bsf	3979,6,c	;volatile
   867                           
   868                           ; BSR set to: 15
   869                           ;Current_Sense_Main.c: 119: LATCbits.LATC7 = 1;
   870  001478  8E8B               	bsf	3979,7,c	;volatile
   871                           
   872                           ; BSR set to: 15
   873                           ;Current_Sense_Main.c: 120: LATCbits.LATC4 = 1;
   874  00147A  888B               	bsf	3979,4,c	;volatile
   875                           
   876                           ; BSR set to: 15
   877                           ;Current_Sense_Main.c: 121: LATCbits.LATC3 = 0;
   878  00147C  968B               	bcf	3979,3,c	;volatile
   879                           
   880                           ; BSR set to: 15
   881                           ;Current_Sense_Main.c: 124: delayMS10(5);
   882  00147E  0E00               	movlw	0
   883  001480  6E14               	movwf	delayMS10@count+1,c
   884  001482  0E05               	movlw	5
   885  001484  6E13               	movwf	delayMS10@count,c
   886  001486  EC47  F00B         	call	_delayMS10	;wreg free
   887                           
   888                           ;Current_Sense_Main.c: 127: TRISAbits.TRISA2 = 1;
   889  00148A  8492               	bsf	3986,2,c	;volatile
   890                           
   891                           ;Current_Sense_Main.c: 129: LATBbits.LATB4 = 0;
   892  00148C  988A               	bcf	3978,4,c	;volatile
   893                           
   894                           ;Current_Sense_Main.c: 130: LATCbits.LATC1 = 0;
   895  00148E  928B               	bcf	3979,1,c	;volatile
   896                           
   897                           ;Current_Sense_Main.c: 131: LATCbits.LATC0 = 0;
   898  001490  908B               	bcf	3979,0,c	;volatile
   899                           
   900                           ;Current_Sense_Main.c: 133: bool isLow = 0;
   901  001492  0E00               	movlw	0
   902  001494  6E36               	movwf	main@isLow,c
   903                           
   904                           ;Current_Sense_Main.c: 134: communications(1);
   905  001496  0E01               	movlw	1
   906  001498  EC63  F008         	call	_communications
   907  00149C                     
   908                           ;Current_Sense_Main.c: 139: {
   909                           ;Current_Sense_Main.c: 150: toggleBlue();
   910  00149C  EC60  F00B         	call	_toggleBlue	;wreg free
   911                           
   912                           ;Current_Sense_Main.c: 187: initTimer();
   913  0014A0  EC01  F00C         	call	_initTimer	;wreg free
   914                           
   915                           ;Current_Sense_Main.c: 230: communications(0);
   916  0014A4  0E00               	movlw	0
   917  0014A6  EC63  F008         	call	_communications
   918                           
   919                           ;Current_Sense_Main.c: 244: powerPulseCheck();
   920  0014AA  EC83  F004         	call	_powerPulseCheck	;wreg free
   921  0014AE  D7F6               	goto	l107
   922  0014B0                     __end_of_main:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           postinc0	equ	0xFEE
   929                           wreg	equ	0xFE8
   930                           postdec1	equ	0xFE5
   931                           fsr1l	equ	0xFE1
   932                           
   933 ;; *************** function _toggleBlue *****************
   934 ;; Defined at:
   935 ;;		line 302 in file "Current_Sense_Main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   949 ;;      Params:         0       0       0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text1
   964  0016C0                     __ptext1:
   965                           	opt stack 0
   966  0016C0                     _toggleBlue:
   967                           	opt stack 29
   968                           
   969                           ;Current_Sense_Main.c: 305: if(PORTAbits.RA2 == 0) {
   970                           
   971                           ;incstack = 0
   972  0016C0  B480               	btfsc	3968,2,c	;volatile
   973  0016C2  D00D               	goto	l113
   974                           
   975                           ;Current_Sense_Main.c: 306: if(isLow == 0) {
   976  0016C4  5045               	movf	_isLow,w,c
   977  0016C6  A4D8               	btfss	status,2,c
   978  0016C8  D00C               	goto	l117
   979                           
   980                           ;Current_Sense_Main.c: 307: TRISBbits.TRISB4 = 1;
   981  0016CA  8893               	bsf	3987,4,c	;volatile
   982                           
   983                           ;Current_Sense_Main.c: 308: if (PORTBbits.RB4 == 0)
   984  0016CC  B881               	btfsc	3969,4,c	;volatile
   985  0016CE  D003               	goto	l115
   986                           
   987                           ;Current_Sense_Main.c: 309: {
   988                           ;Current_Sense_Main.c: 310: TRISBbits.TRISB4 = 0;
   989  0016D0  9893               	bcf	3987,4,c	;volatile
   990                           
   991                           ;Current_Sense_Main.c: 311: LATBbits.LATB4 = 1;
   992  0016D2  888A               	bsf	3978,4,c	;volatile
   993                           
   994                           ;Current_Sense_Main.c: 312: }
   995  0016D4  D002               	goto	l116
   996  0016D6                     l115:
   997                           
   998                           ;Current_Sense_Main.c: 313: else {
   999                           ;Current_Sense_Main.c: 314: TRISBbits.TRISB4 = 0;
  1000  0016D6  9893               	bcf	3987,4,c	;volatile
  1001                           
  1002                           ;Current_Sense_Main.c: 315: LATBbits.LATB4 = 0;
  1003  0016D8  988A               	bcf	3978,4,c	;volatile
  1004  0016DA                     l116:
  1005                           
  1006                           ;Current_Sense_Main.c: 316: }
  1007                           ;Current_Sense_Main.c: 317: isLow = 1;
  1008  0016DA  0E01               	movlw	1
  1009  0016DC  D001               	goto	L3
  1010  0016DE                     l113:
  1011                           
  1012                           ;Current_Sense_Main.c: 321: else{
  1013                           ;Current_Sense_Main.c: 322: isLow = 0;
  1014  0016DE  0E00               	movlw	0
  1015  0016E0                     L3:
  1016  0016E0  6E45               	movwf	_isLow,c
  1017  0016E2                     l117:
  1018                           
  1019                           ;Current_Sense_Main.c: 323: }
  1020                           ;Current_Sense_Main.c: 325: if(isLow) {
  1021  0016E2  5045               	movf	_isLow,w,c
  1022  0016E4  B4D8               	btfsc	status,2,c
  1023  0016E6  D002               	goto	l118
  1024                           
  1025                           ;Current_Sense_Main.c: 326: LATCbits.LATC1 = 0;
  1026  0016E8  928B               	bcf	3979,1,c	;volatile
  1027                           
  1028                           ;Current_Sense_Main.c: 327: } else {
  1029  0016EA  0012               	return	
  1030  0016EC                     l118:
  1031                           
  1032                           ;Current_Sense_Main.c: 328: LATCbits.LATC1 = 1;
  1033  0016EC  828B               	bsf	3979,1,c	;volatile
  1034  0016EE  0012               	return	
  1035  0016F0                     __end_of_toggleBlue:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           postdec1	equ	0xFE5
  1044                           fsr1l	equ	0xFE1
  1045                           status	equ	0xFD8
  1046                           
  1047 ;; *************** function _powerPulseCheck *****************
  1048 ;; Defined at:
  1049 ;;		line 412 in file "Current_Sense_Main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		___lldiv
  1072 ;;		___lmul
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text2
  1079  000906                     __ptext2:
  1080                           	opt stack 0
  1081  000906                     _powerPulseCheck:
  1082                           	opt stack 28
  1083                           
  1084                           ;Current_Sense_Main.c: 426: static unsigned long meterEnergyUsedPart = 0;
  1085                           ;Current_Sense_Main.c: 427: static unsigned long timerCountHFLast = 2147483647;
  1086                           ;Current_Sense_Main.c: 428: static unsigned int timerCountHFCheck = 1;
  1087                           ;Current_Sense_Main.c: 429: static bool firstPulse = 1;
  1088                           ;Current_Sense_Main.c: 432: static bool mcpHFoutLast = 0;
  1089                           ;Current_Sense_Main.c: 433: static bool mcpLFoutLast = 0;
  1090                           ;Current_Sense_Main.c: 437: if (PORTAbits.RA3 == 0)
  1091                           
  1092                           ;incstack = 0
  1093  000906  B680               	btfsc	3968,3,c	;volatile
  1094  000908  D036               	goto	l150
  1095                           
  1096                           ;Current_Sense_Main.c: 438: {
  1097                           ;Current_Sense_Main.c: 439: if (mcpHFoutLast == 0)
  1098  00090A  5043               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1099  00090C  A4D8               	btfss	status,2,c
  1100  00090E  D035               	goto	l152
  1101                           
  1102                           ;Current_Sense_Main.c: 440: {
  1103                           ;Current_Sense_Main.c: 441: mcpHFoutLast = 1;
  1104  000910  0E01               	movlw	1
  1105  000912  6E43               	movwf	powerPulseCheck@mcpHFoutLast,c
  1106                           
  1107                           ;Current_Sense_Main.c: 442: firstPulse = 0;
  1108  000914  0E00               	movlw	0
  1109  000916  6E4C               	movwf	powerPulseCheck@firstPulse,c
  1110                           
  1111                           ;Current_Sense_Main.c: 444: timerCountHFLast = timerCountHF;
  1112  000918  C046  F0D0         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1113  00091C  C047  F0D1         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1114  000920  C048  F0D2         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1115  000924  C049  F0D3         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1116                           
  1117                           ;Current_Sense_Main.c: 445: timerCountHF = 0;
  1118  000928  0E00               	movlw	0
  1119  00092A  6E46               	movwf	_timerCountHF,c	;volatile
  1120  00092C  0E00               	movlw	0
  1121  00092E  6E47               	movwf	_timerCountHF+1,c	;volatile
  1122  000930  0E00               	movlw	0
  1123  000932  6E48               	movwf	_timerCountHF+2,c	;volatile
  1124  000934  0E00               	movlw	0
  1125  000936  6E49               	movwf	_timerCountHF+3,c	;volatile
  1126                           
  1127                           ;Current_Sense_Main.c: 446: meterWatts = (((((unsigned long) 22124 * (unsigned long) 360
      +                          0) / ((unsigned long) 1000000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned
      +                           long) timerCountHFLast;
  1128  000938  0E1E               	movlw	30
  1129  00093A  6E13               	movwf	___lldiv@dividend,c
  1130  00093C  0E37               	movlw	55
  1131  00093E  6E14               	movwf	___lldiv@dividend+1,c
  1132  000940  0E01               	movlw	1
  1133  000942  6E15               	movwf	___lldiv@dividend+2,c
  1134  000944  0E00               	movlw	0
  1135  000946  6E16               	movwf	___lldiv@dividend+3,c
  1136  000948  C0D0  F017         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1137  00094C  C0D1  F018         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1138  000950  C0D2  F019         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1139  000954  C0D3  F01A         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1140  000958  EC44  F009         	call	___lldiv	;wreg free
  1141  00095C  C013  F068         	movff	?___lldiv,_meterWatts
  1142  000960  C014  F069         	movff	?___lldiv+1,_meterWatts+1
  1143  000964  C015  F06A         	movff	?___lldiv+2,_meterWatts+2
  1144  000968  C016  F06B         	movff	?___lldiv+3,_meterWatts+3
  1145                           
  1146                           ;Current_Sense_Main.c: 450: timerCountHFCheck = 1;
  1147  00096C  0E00               	movlw	0
  1148  00096E  6E4B               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1149  000970  0E01               	movlw	1
  1150  000972  6E4A               	movwf	powerPulseCheck@timerCountHFCheck,c
  1151                           
  1152                           ;Current_Sense_Main.c: 451: }
  1153                           ;Current_Sense_Main.c: 452: }
  1154  000974  D002               	goto	l152
  1155  000976                     l150:
  1156                           
  1157                           ;Current_Sense_Main.c: 453: else
  1158                           ;Current_Sense_Main.c: 454: {
  1159                           ;Current_Sense_Main.c: 455: mcpHFoutLast = 0;
  1160  000976  0E00               	movlw	0
  1161  000978  6E43               	movwf	powerPulseCheck@mcpHFoutLast,c
  1162  00097A                     l152:
  1163                           
  1164                           ;Current_Sense_Main.c: 456: }
  1165                           ;Current_Sense_Main.c: 464: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast))
  1166  00097A  504C               	movf	powerPulseCheck@firstPulse,w,c
  1167  00097C  A4D8               	btfss	status,2,c
  1168  00097E  D051               	goto	l156
  1169  000980  5046               	movf	_timerCountHF,w,c	;volatile
  1170  000982  0100               	movlb	0	; () banked
  1171  000984  5DD0               	subwf	powerPulseCheck@timerCountHFLast& (0+255),w,b
  1172  000986  5047               	movf	_timerCountHF+1,w,c	;volatile
  1173  000988  59D1               	subwfb	(powerPulseCheck@timerCountHFLast+1)& (0+255),w,b
  1174  00098A  5048               	movf	_timerCountHF+2,w,c	;volatile
  1175  00098C  59D2               	subwfb	(powerPulseCheck@timerCountHFLast+2)& (0+255),w,b
  1176  00098E  5049               	movf	_timerCountHF+3,w,c	;volatile
  1177  000990  59D3               	subwfb	(powerPulseCheck@timerCountHFLast+3)& (0+255),w,b
  1178  000992  B0D8               	btfsc	status,0,c
  1179  000994  D046               	goto	l156
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;Current_Sense_Main.c: 465: {
  1183                           ;Current_Sense_Main.c: 466: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1184  000996  C04A  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1185  00099A  C04B  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1186  00099E  6A15               	clrf	___lmul@multiplier+2,c
  1187  0009A0  6A16               	clrf	___lmul@multiplier+3,c
  1188  0009A2  0EE8               	movlw	232
  1189  0009A4  6E17               	movwf	___lmul@multiplicand,c
  1190  0009A6  0E03               	movlw	3
  1191  0009A8  6E18               	movwf	___lmul@multiplicand+1,c
  1192  0009AA  0E00               	movlw	0
  1193  0009AC  6E19               	movwf	___lmul@multiplicand+2,c
  1194  0009AE  0E00               	movlw	0
  1195  0009B0  6E1A               	movwf	___lmul@multiplicand+3,c
  1196  0009B2  ECAE  F00A         	call	___lmul	;wreg free
  1197  0009B6  5046               	movf	_timerCountHF,w,c	;volatile
  1198  0009B8  5C13               	subwf	?___lmul,w,c
  1199  0009BA  5047               	movf	_timerCountHF+1,w,c	;volatile
  1200  0009BC  5814               	subwfb	?___lmul+1,w,c
  1201  0009BE  5048               	movf	_timerCountHF+2,w,c	;volatile
  1202  0009C0  5815               	subwfb	?___lmul+2,w,c
  1203  0009C2  5049               	movf	_timerCountHF+3,w,c	;volatile
  1204  0009C4  5816               	subwfb	?___lmul+3,w,c
  1205  0009C6  B0D8               	btfsc	status,0,c
  1206  0009C8  D02C               	goto	l156
  1207                           
  1208                           ;Current_Sense_Main.c: 467: {
  1209                           ;Current_Sense_Main.c: 468: if (timerCountHFCheck < 90)
  1210  0009CA  504B               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1211  0009CC  E121               	bnz	l2985
  1212  0009CE  0E5A               	movlw	90
  1213  0009D0  5C4A               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1214  0009D2  B0D8               	btfsc	status,0,c
  1215  0009D4  D01D               	goto	l155
  1216                           
  1217                           ;Current_Sense_Main.c: 469: {
  1218                           ;Current_Sense_Main.c: 470: timerCountHFCheck++;
  1219  0009D6  4A4A               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1220  0009D8  2A4B               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1221                           
  1222                           ;Current_Sense_Main.c: 471: meterWatts = (((((unsigned long) 22124 * (unsigned long) 360
      +                          0) / ((unsigned long) 1000000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned
      +                           long) timerCountHF;
  1223  0009DA  0E1E               	movlw	30
  1224  0009DC  6E13               	movwf	___lldiv@dividend,c
  1225  0009DE  0E37               	movlw	55
  1226  0009E0  6E14               	movwf	___lldiv@dividend+1,c
  1227  0009E2  0E01               	movlw	1
  1228  0009E4  6E15               	movwf	___lldiv@dividend+2,c
  1229  0009E6  0E00               	movlw	0
  1230  0009E8  6E16               	movwf	___lldiv@dividend+3,c
  1231  0009EA  C046  F017         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1232  0009EE  C047  F018         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1233  0009F2  C048  F019         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1234  0009F6  C049  F01A         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1235  0009FA  EC44  F009         	call	___lldiv	;wreg free
  1236  0009FE  C013  F068         	movff	?___lldiv,_meterWatts
  1237  000A02  C014  F069         	movff	?___lldiv+1,_meterWatts+1
  1238  000A06  C015  F06A         	movff	?___lldiv+2,_meterWatts+2
  1239  000A0A  C016  F06B         	movff	?___lldiv+3,_meterWatts+3
  1240                           
  1241                           ;Current_Sense_Main.c: 472: }
  1242  000A0E  D009               	goto	l156
  1243  000A10                     l155:
  1244  000A10                     l2985:
  1245                           
  1246                           ;Current_Sense_Main.c: 473: else
  1247                           ;Current_Sense_Main.c: 474: {
  1248                           ;Current_Sense_Main.c: 475: meterWatts = 0;
  1249  000A10  0E00               	movlw	0
  1250  000A12  0100               	movlb	0	; () banked
  1251  000A14  6F68               	movwf	_meterWatts& (0+255),b
  1252  000A16  0E00               	movlw	0
  1253  000A18  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1254  000A1A  0E00               	movlw	0
  1255  000A1C  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1256  000A1E  0E00               	movlw	0
  1257  000A20  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1258  000A22                     l156:
  1259                           
  1260                           ;Current_Sense_Main.c: 476: }
  1261                           ;Current_Sense_Main.c: 478: }
  1262                           ;Current_Sense_Main.c: 479: }
  1263                           ;Current_Sense_Main.c: 481: if (firstPulse == 1)
  1264                           
  1265                           ; BSR set to: 0
  1266                           
  1267                           ; BSR set to: 0
  1268                           
  1269                           ; BSR set to: 0
  1270  000A22  044C               	decf	powerPulseCheck@firstPulse,w,c
  1271  000A24  A4D8               	btfss	status,2,c
  1272  000A26  D009               	goto	l157
  1273                           
  1274                           ;Current_Sense_Main.c: 482: {
  1275                           ;Current_Sense_Main.c: 483: meterWatts = 0;
  1276  000A28  0E00               	movlw	0
  1277  000A2A  0100               	movlb	0	; () banked
  1278  000A2C  6F68               	movwf	_meterWatts& (0+255),b
  1279  000A2E  0E00               	movlw	0
  1280  000A30  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1281  000A32  0E00               	movlw	0
  1282  000A34  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1283  000A36  0E00               	movlw	0
  1284  000A38  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1285  000A3A                     l157:
  1286                           
  1287                           ;Current_Sense_Main.c: 484: }
  1288                           ;Current_Sense_Main.c: 488: if (PORTAbits.RA2 == 0)
  1289                           
  1290                           ; BSR set to: 0
  1291  000A3A  B480               	btfsc	3968,2,c	;volatile
  1292  000A3C  D030               	goto	l158
  1293                           
  1294                           ;Current_Sense_Main.c: 489: {
  1295                           ;Current_Sense_Main.c: 490: if (mcpLFoutLast == 0)
  1296  000A3E  5042               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1297  000A40  A4D8               	btfss	status,2,c
  1298  000A42  0012               	return	
  1299                           
  1300                           ;Current_Sense_Main.c: 491: {
  1301                           ;Current_Sense_Main.c: 492: mcpLFoutLast = 1;
  1302  000A44  0E01               	movlw	1
  1303  000A46  6E42               	movwf	powerPulseCheck@mcpLFoutLast,c
  1304                           
  1305                           ;Current_Sense_Main.c: 493: timerCountLF = 0;
  1306  000A48  0E00               	movlw	0
  1307  000A4A  6E37               	movwf	_timerCountLF,c	;volatile
  1308  000A4C  0E00               	movlw	0
  1309  000A4E  6E38               	movwf	_timerCountLF+1,c	;volatile
  1310  000A50  0E00               	movlw	0
  1311  000A52  6E39               	movwf	_timerCountLF+2,c	;volatile
  1312  000A54  0E00               	movlw	0
  1313  000A56  6E3A               	movwf	_timerCountLF+3,c	;volatile
  1314                           
  1315                           ;Current_Sense_Main.c: 495: meterEnergyUsedPart += 22124 * (unsigned long) 16;
  1316  000A58  0EC0               	movlw	192
  1317  000A5A  0100               	movlb	0	; () banked
  1318  000A5C  2760               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1319  000A5E  0E66               	movlw	102
  1320  000A60  2361               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1321  000A62  0E05               	movlw	5
  1322  000A64  2362               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1323  000A66  0E00               	movlw	0
  1324  000A68  2363               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1325                           
  1326                           ;Current_Sense_Main.c: 496: while (meterEnergyUsedPart > 1000000)
  1327  000A6A  D00E               	goto	l160
  1328  000A6C                     l2999:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;Current_Sense_Main.c: 497: {
  1332                           ;Current_Sense_Main.c: 498: meterEnergyUsed++;
  1333  000A6C  0E01               	movlw	1
  1334  000A6E  2764               	addwf	_meterEnergyUsed& (0+255),f,b
  1335  000A70  0E00               	movlw	0
  1336  000A72  2365               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1337  000A74  2366               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1338  000A76  2367               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1339                           
  1340                           ;Current_Sense_Main.c: 499: meterEnergyUsedPart -= 1000000;
  1341  000A78  0E40               	movlw	64
  1342  000A7A  5F60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1343  000A7C  0E42               	movlw	66
  1344  000A7E  5B61               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1345  000A80  0E0F               	movlw	15
  1346  000A82  5B62               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1347  000A84  0E00               	movlw	0
  1348  000A86  5B63               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1349  000A88                     l160:
  1350                           
  1351                           ; BSR set to: 0
  1352  000A88  5163               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1353  000A8A  E1F0               	bnz	l2999
  1354  000A8C  0E41               	movlw	65
  1355  000A8E  5D60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1356  000A90  0E42               	movlw	66
  1357  000A92  5961               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1358  000A94  0E0F               	movlw	15
  1359  000A96  5962               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1360  000A98  A0D8               	btfss	status,0,c
  1361  000A9A  0012               	return	
  1362  000A9C  D7E7               	goto	l161
  1363  000A9E                     l158:
  1364                           
  1365                           ;Current_Sense_Main.c: 509: else if(timerCountLF >= 200000) {
  1366                           
  1367                           ; BSR set to: 0
  1368  000A9E  503A               	movf	_timerCountLF+3,w,c	;volatile
  1369  000AA0  E108               	bnz	u2530
  1370  000AA2  0E40               	movlw	64
  1371  000AA4  5C37               	subwf	_timerCountLF,w,c	;volatile
  1372  000AA6  0E0D               	movlw	13
  1373  000AA8  5838               	subwfb	_timerCountLF+1,w,c	;volatile
  1374  000AAA  0E03               	movlw	3
  1375  000AAC  5839               	subwfb	_timerCountLF+2,w,c	;volatile
  1376  000AAE  A0D8               	btfss	status,0,c
  1377  000AB0  D002               	goto	l164
  1378  000AB2                     u2530:
  1379                           
  1380                           ;Current_Sense_Main.c: 511: LATCbits.LATC1 = 1;
  1381  000AB2  828B               	bsf	3979,1,c	;volatile
  1382                           
  1383                           ;Current_Sense_Main.c: 513: }
  1384  000AB4  0012               	return	
  1385  000AB6                     l164:
  1386                           
  1387                           ;Current_Sense_Main.c: 515: else if(timerCountLF >= 50000) {
  1388  000AB6  503A               	movf	_timerCountLF+3,w,c	;volatile
  1389  000AB8  1039               	iorwf	_timerCountLF+2,w,c	;volatile
  1390  000ABA  E106               	bnz	u2540
  1391  000ABC  0E50               	movlw	80
  1392  000ABE  5C37               	subwf	_timerCountLF,w,c	;volatile
  1393  000AC0  0EC3               	movlw	195
  1394  000AC2  5838               	subwfb	_timerCountLF+1,w,c	;volatile
  1395  000AC4  A0D8               	btfss	status,0,c
  1396  000AC6  D002               	goto	l166
  1397  000AC8                     u2540:
  1398                           
  1399                           ;Current_Sense_Main.c: 517: LATCbits.LATC0 = 1;
  1400  000AC8  808B               	bsf	3979,0,c	;volatile
  1401                           
  1402                           ;Current_Sense_Main.c: 519: }
  1403  000ACA  0012               	return	
  1404  000ACC                     l166:
  1405                           
  1406                           ;Current_Sense_Main.c: 521: else
  1407                           ;Current_Sense_Main.c: 522: {
  1408                           ;Current_Sense_Main.c: 523: mcpLFoutLast = 0;
  1409  000ACC  0E00               	movlw	0
  1410  000ACE  6E42               	movwf	powerPulseCheck@mcpLFoutLast,c
  1411  000AD0  0012               	return	
  1412  000AD2                     __end_of_powerPulseCheck:
  1413                           	opt stack 0
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           postdec1	equ	0xFE5
  1421                           fsr1l	equ	0xFE1
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function _initTimer *****************
  1425 ;; Defined at:
  1426 ;;		line 613 in file "Current_Sense_Main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text3
  1455  001802                     __ptext3:
  1456                           	opt stack 0
  1457  001802                     _initTimer:
  1458                           	opt stack 29
  1459                           
  1460                           ;Current_Sense_Main.c: 616: T0CONbits.TMR0ON = 0;
  1461                           
  1462                           ;incstack = 0
  1463  001802  9ED5               	bcf	4053,7,c	;volatile
  1464                           
  1465                           ;Current_Sense_Main.c: 617: T0CONbits.T08BIT = 0;
  1466  001804  9CD5               	bcf	4053,6,c	;volatile
  1467                           
  1468                           ;Current_Sense_Main.c: 618: T0CONbits.T0CS = 0;
  1469  001806  9AD5               	bcf	4053,5,c	;volatile
  1470                           
  1471                           ;Current_Sense_Main.c: 619: T0CONbits.PSA = 0;
  1472  001808  96D5               	bcf	4053,3,c	;volatile
  1473                           
  1474                           ;Current_Sense_Main.c: 620: T0CONbits.T0PS = 0b001;
  1475  00180A  50D5               	movf	4053,w,c	;volatile
  1476  00180C  0BF8               	andlw	-8
  1477  00180E  0901               	iorlw	1
  1478  001810  6ED5               	movwf	4053,c	;volatile
  1479                           
  1480                           ;Current_Sense_Main.c: 622: INTCONbits.TMR0IE = 1;
  1481  001812  8AF2               	bsf	intcon,5,c	;volatile
  1482                           
  1483                           ;Current_Sense_Main.c: 623: INTCONbits.GIE = 1;
  1484  001814  8EF2               	bsf	intcon,7,c	;volatile
  1485                           
  1486                           ;Current_Sense_Main.c: 624: T0CONbits.TMR0ON = 1;
  1487  001816  8ED5               	bsf	4053,7,c	;volatile
  1488  001818  0012               	return		;funcret
  1489  00181A                     __end_of_initTimer:
  1490                           	opt stack 0
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           intcon	equ	0xFF2
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _init *****************
  1503 ;; Defined at:
  1504 ;;		line 539 in file "Current_Sense_Main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    2
  1525 ;; This function calls:
  1526 ;;		_initOSC
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text4
  1533  001848                     __ptext4:
  1534                           	opt stack 0
  1535  001848                     _init:
  1536                           	opt stack 28
  1537                           
  1538                           ;Current_Sense_Main.c: 541: initOSC();
  1539                           
  1540                           ;incstack = 0
  1541  001848  EC0D  F00C         	call	_initOSC	;wreg free
  1542  00184C  0012               	return	
  1543  00184E                     __end_of_init:
  1544                           	opt stack 0
  1545                           tblptru	equ	0xFF8
  1546                           tblptrh	equ	0xFF7
  1547                           tblptrl	equ	0xFF6
  1548                           tablat	equ	0xFF5
  1549                           intcon	equ	0xFF2
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           postdec1	equ	0xFE5
  1553                           fsr1l	equ	0xFE1
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function _initOSC *****************
  1557 ;; Defined at:
  1558 ;;		line 549 in file "Current_Sense_Main.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1572 ;;      Params:         0       0       0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_init
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text5
  1587  00181A                     __ptext5:
  1588                           	opt stack 0
  1589  00181A                     _initOSC:
  1590                           	opt stack 28
  1591                           
  1592                           ;Current_Sense_Main.c: 552: OSCCONbits.IDLEN = 0;
  1593                           
  1594                           ;incstack = 0
  1595  00181A  9ED3               	bcf	4051,7,c	;volatile
  1596                           
  1597                           ;Current_Sense_Main.c: 553: OSCCONbits.IRCF = 0b111;
  1598  00181C  88D3               	bsf	4051,4,c	;volatile
  1599  00181E  8AD3               	bsf	4051,5,c	;volatile
  1600  001820  8CD3               	bsf	4051,6,c	;volatile
  1601                           
  1602                           ;Current_Sense_Main.c: 554: OSCCONbits.SCS = 0b11;
  1603  001822  0E03               	movlw	3
  1604  001824  12D3               	iorwf	4051,f,c	;volatile
  1605                           
  1606                           ;Current_Sense_Main.c: 556: OSCCON2bits.MFIOSEL = 0;
  1607  001826  98D2               	bcf	4050,4,c	;volatile
  1608                           
  1609                           ;Current_Sense_Main.c: 557: OSCCON2bits.SOSCGO = 0;
  1610  001828  96D2               	bcf	4050,3,c	;volatile
  1611                           
  1612                           ;Current_Sense_Main.c: 558: OSCCON2bits.PRISD = 0;
  1613  00182A  94D2               	bcf	4050,2,c	;volatile
  1614                           
  1615                           ;Current_Sense_Main.c: 560: OSCTUNEbits.INTSRC = 1;
  1616  00182C  8E9B               	bsf	3995,7,c	;volatile
  1617                           
  1618                           ;Current_Sense_Main.c: 561: OSCTUNEbits.PLLEN = 0;
  1619  00182E  9C9B               	bcf	3995,6,c	;volatile
  1620  001830  0012               	return	
  1621  001832                     __end_of_initOSC:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1l	equ	0xFE1
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _delayMS10 *****************
  1635 ;; Defined at:
  1636 ;;		line 530 in file "Current_Sense_Main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  count           2   18[COMRAM] int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  inx             2   21[COMRAM] int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1650 ;;      Params:         2       0       0       0       0       0       0
  1651 ;;      Locals:         2       0       0       0       0       0       0
  1652 ;;      Temps:          1       0       0       0       0       0       0
  1653 ;;      Totals:         5       0       0       0       0       0       0
  1654 ;;Total ram usage:        5 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text6
  1665  00168E                     __ptext6:
  1666                           	opt stack 0
  1667  00168E                     _delayMS10:
  1668                           	opt stack 29
  1669                           
  1670                           ;Current_Sense_Main.c: 532: for (int inx = 0; inx < count; inx++)
  1671                           
  1672                           ;incstack = 0
  1673  00168E  0E00               	movlw	0
  1674  001690  6E17               	movwf	delayMS10@inx+1,c
  1675  001692  0E00               	movlw	0
  1676  001694  6E16               	movwf	delayMS10@inx,c
  1677  001696  D009               	goto	l171
  1678  001698                     
  1679                           ;Current_Sense_Main.c: 533: {
  1680                           ;Current_Sense_Main.c: 535: _delay((unsigned long)((10)*(16000000/4000.0)));
  1681  001698  0E34               	movlw	52
  1682  00169A  6E15               	movwf	??_delayMS10& (0+255),c
  1683  00169C  0EF2               	movlw	242
  1684  00169E                     u2557:
  1685  00169E  2EE8               	decfsz	wreg,f,c
  1686  0016A0  D7FE               	bra	u2557
  1687  0016A2  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1688  0016A4  D7FC               	bra	u2557
  1689  0016A6  4A16               	infsnz	delayMS10@inx,f,c
  1690  0016A8  2A17               	incf	delayMS10@inx+1,f,c
  1691  0016AA                     l171:
  1692  0016AA  5013               	movf	delayMS10@count,w,c
  1693  0016AC  5C16               	subwf	delayMS10@inx,w,c
  1694  0016AE  5017               	movf	delayMS10@inx+1,w,c
  1695  0016B0  0A80               	xorlw	128
  1696  0016B2  6E15               	movwf	??_delayMS10& (0+255),c
  1697  0016B4  5014               	movf	delayMS10@count+1,w,c
  1698  0016B6  0A80               	xorlw	128
  1699  0016B8  5815               	subwfb	??_delayMS10& (0+255),w,c
  1700  0016BA  B0D8               	btfsc	status,0,c
  1701  0016BC  0012               	return	
  1702  0016BE  D7EC               	goto	l172
  1703  0016C0                     __end_of_delayMS10:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           intcon	equ	0xFF2
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec1	equ	0xFE5
  1713                           fsr1l	equ	0xFE1
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _communications *****************
  1717 ;; Defined at:
  1718 ;;		line 90 in file "SlaveComm_PIC18.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  firstTime       1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  firstTime       1   52[COMRAM] unsigned char 
  1723 ;;  no_more_to_s    1   51[COMRAM] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1733 ;;      Params:         0       0       0       0       0       0       0
  1734 ;;      Locals:         2       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0
  1736 ;;      Totals:         2       0       0       0       0       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    7
  1740 ;; This function calls:
  1741 ;;		_SPISlaveInit
  1742 ;;		_process_data
  1743 ;;		_receive_data
  1744 ;;		_resetCommunications
  1745 ;;		_send_data
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text7
  1752  0010C6                     __ptext7:
  1753                           	opt stack 0
  1754  0010C6                     _communications:
  1755                           	opt stack 23
  1756                           
  1757                           ;incstack = 0
  1758                           ;communications@firstTime stored from wreg
  1759  0010C6  6E35               	movwf	communications@firstTime,c
  1760                           
  1761                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  1762                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  1763                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  1764                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  1765                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  1766                           ;SlaveComm_PIC18.c: 104: if (firstTime == 1)
  1767  0010C8  0435               	decf	communications@firstTime,w,c
  1768  0010CA  A4D8               	btfss	status,2,c
  1769  0010CC  D00E               	goto	l275
  1770                           
  1771                           ;SlaveComm_PIC18.c: 105: {
  1772                           ;SlaveComm_PIC18.c: 106: SPISlaveInit();
  1773  0010CE  EC23  F00B         	call	_SPISlaveInit	;wreg free
  1774                           
  1775                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  1776  0010D2  0E00               	movlw	0
  1777  0010D4  0100               	movlb	0	; () banked
  1778  0010D6  6F94               	movwf	(communications@send_buffer+40)& (0+255),b
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  1782  0010D8  0E00               	movlw	0
  1783  0010DA  6F95               	movwf	(communications@send_buffer+41)& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;SlaveComm_PIC18.c: 109: resetCommunications(&send_buffer);
  1787  0010DC  0E6C               	movlw	low communications@send_buffer
  1788  0010DE  6E2F               	movwf	resetCommunications@send_buffer,c
  1789  0010E0  0E00               	movlw	high communications@send_buffer
  1790  0010E2  6E30               	movwf	resetCommunications@send_buffer+1,c
  1791  0010E4  ECB0  F008         	call	_resetCommunications	;wreg free
  1792                           
  1793                           ;SlaveComm_PIC18.c: 110: }
  1794  0010E8  0012               	return	
  1795  0010EA                     l275:
  1796                           
  1797                           ;SlaveComm_PIC18.c: 111: else
  1798                           ;SlaveComm_PIC18.c: 112: {
  1799                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data(&receive_buffer);
  1800  0010EA  0E96               	movlw	low communications@receive_buffer
  1801  0010EC  6E16               	movwf	receive_data@receive_buffer,c
  1802  0010EE  0E00               	movlw	high communications@receive_buffer
  1803  0010F0  6E17               	movwf	receive_data@receive_buffer+1,c
  1804  0010F2  ECB4  F007         	call	_receive_data	;wreg free
  1805  0010F6  6E3F               	movwf	communications@receive_current_state,c
  1806                           
  1807                           ;SlaveComm_PIC18.c: 117: switch (receive_current_state)
  1808  0010F8  D011               	goto	l277
  1809  0010FA                     
  1810                           ;SlaveComm_PIC18.c: 127: if (process_data(&receive_buffer, &send_buffer) == 1)
  1811  0010FA  0E96               	movlw	low communications@receive_buffer
  1812  0010FC  0100               	movlb	0	; () banked
  1813  0010FE  6FCC               	movwf	process_data@receive_buffer& (0+255),b
  1814  001100  0E00               	movlw	high communications@receive_buffer
  1815  001102  6FCD               	movwf	(process_data@receive_buffer+1)& (0+255),b
  1816  001104  0E6C               	movlw	low communications@send_buffer
  1817  001106  6FCE               	movwf	process_data@send_buffer& (0+255),b
  1818  001108  0E00               	movlw	high communications@send_buffer
  1819  00110A  6FCF               	movwf	(process_data@send_buffer+1)& (0+255),b
  1820  00110C  EC78  F00B         	call	_process_data	;wreg free
  1821  001110  06E8               	decf	wreg,f,c
  1822  001112  A4D8               	btfss	status,2,c
  1823  001114  D00D               	goto	l279
  1824                           
  1825                           ;SlaveComm_PIC18.c: 128: {
  1826                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  1827  001116  0E01               	movlw	1
  1828  001118  6E40               	movwf	communications@end_of_transmission_received,c
  1829                           
  1830                           ;SlaveComm_PIC18.c: 133: }
  1831                           
  1832                           ;SlaveComm_PIC18.c: 130: }
  1833                           ;SlaveComm_PIC18.c: 132: break;
  1834  00111A  D00A               	goto	l279
  1835  00111C                     l277:
  1836  00111C  503F               	movf	communications@receive_current_state,w,c
  1837                           
  1838                           ; Switch size 1, requested type "space"
  1839                           ; Number of cases is 3, Range of values is 0 to 2
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte           10     6 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  00111E  0A00               	xorlw	0	; case 0
  1845  001120  B4D8               	btfsc	status,2,c
  1846  001122  D006               	goto	l279
  1847  001124  0A01               	xorlw	1	; case 1
  1848  001126  B4D8               	btfsc	status,2,c
  1849  001128  D003               	goto	l279
  1850  00112A  0A03               	xorlw	3	; case 2
  1851  00112C  B4D8               	btfsc	status,2,c
  1852  00112E  D7E5               	goto	l281
  1853  001130                     l279:
  1854                           
  1855                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data(&send_buffer);
  1856  001130  0E6C               	movlw	low communications@send_buffer
  1857  001132  6E15               	movwf	send_data@send_buffer,c
  1858  001134  0E00               	movlw	high communications@send_buffer
  1859  001136  6E16               	movwf	send_data@send_buffer+1,c
  1860  001138  ECFC  F008         	call	_send_data	;wreg free
  1861  00113C  6E34               	movwf	communications@no_more_to_send,c
  1862                           
  1863                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  1864                           ;SlaveComm_PIC18.c: 139: if (PORTBbits.SS2 == 0b1)
  1865  00113E  A081               	btfss	3969,0,c	;volatile
  1866  001140  D003               	goto	l285
  1867                           
  1868                           ;SlaveComm_PIC18.c: 140: {
  1869                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  1870  001142  0E00               	movlw	0
  1871  001144  6E3E               	movwf	communications@last_state_active,c
  1872                           
  1873                           ;SlaveComm_PIC18.c: 142: }
  1874  001146  0012               	return	
  1875  001148                     l285:
  1876                           
  1877                           ;SlaveComm_PIC18.c: 143: else
  1878                           ;SlaveComm_PIC18.c: 144: {
  1879                           ;SlaveComm_PIC18.c: 145: if (last_state_active == 0)
  1880  001148  503E               	movf	communications@last_state_active,w,c
  1881  00114A  A4D8               	btfss	status,2,c
  1882  00114C  D006               	goto	l287
  1883                           
  1884                           ;SlaveComm_PIC18.c: 146: {
  1885                           ;SlaveComm_PIC18.c: 147: resetCommunications(&send_buffer);
  1886  00114E  0E6C               	movlw	low communications@send_buffer
  1887  001150  6E2F               	movwf	resetCommunications@send_buffer,c
  1888  001152  0E00               	movlw	high communications@send_buffer
  1889  001154  6E30               	movwf	resetCommunications@send_buffer+1,c
  1890  001156  ECB0  F008         	call	_resetCommunications	;wreg free
  1891  00115A                     l287:
  1892                           
  1893                           ;SlaveComm_PIC18.c: 148: }
  1894                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  1895  00115A  0E01               	movlw	1
  1896  00115C  6E3E               	movwf	communications@last_state_active,c
  1897  00115E  0012               	return	
  1898  001160                     __end_of_communications:
  1899                           	opt stack 0
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _send_data *****************
  1912 ;; Defined at:
  1913 ;;		line 509 in file "SlaveComm_PIC18.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1916 ;;		 -> communications@send_buffer(42), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  send_end        1   24[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      unsigned char 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1928 ;;      Params:         2       0       0       0       0       0       0
  1929 ;;      Locals:         1       0       0       0       0       0       0
  1930 ;;      Temps:          2       0       0       0       0       0       0
  1931 ;;      Totals:         5       0       0       0       0       0       0
  1932 ;;Total ram usage:        5 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    2
  1935 ;; This function calls:
  1936 ;;		_SPI_send_data
  1937 ;; This function is called by:
  1938 ;;		_communications
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text8
  1943  0011F8                     __ptext8:
  1944                           	opt stack 0
  1945  0011F8                     _send_data:
  1946                           	opt stack 27
  1947                           
  1948                           ;SlaveComm_PIC18.c: 511: bool send_end;
  1949                           ;SlaveComm_PIC18.c: 513: if (send_buffer->read_position == send_buffer->write_position)
  1950                           
  1951                           ;incstack = 0
  1952  0011F8  EE20 F028          	lfsr	2,40
  1953  0011FC  5015               	movf	send_data@send_buffer,w,c
  1954  0011FE  26D9               	addwf	fsr2l,f,c
  1955  001200  5016               	movf	send_data@send_buffer+1,w,c
  1956  001202  22DA               	addwfc	fsr2h,f,c
  1957  001204  EE10 F029          	lfsr	1,41
  1958  001208  5015               	movf	send_data@send_buffer,w,c
  1959  00120A  26E1               	addwf	fsr1l,f,c
  1960  00120C  5016               	movf	send_data@send_buffer+1,w,c
  1961  00120E  22E2               	addwfc	fsr1h,f,c
  1962  001210  50DE               	movf	postinc2,w,c
  1963  001212  18E6               	xorwf	postinc1,w,c
  1964  001214  A4D8               	btfss	status,2,c
  1965  001216  D006               	goto	l386
  1966                           
  1967                           ;SlaveComm_PIC18.c: 514: {
  1968                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  1969  001218  0E01               	movlw	1
  1970  00121A  6E19               	movwf	send_data@send_end,c
  1971                           
  1972                           ;SlaveComm_PIC18.c: 516: SPI_send_data('\0');
  1973  00121C  0E00               	movlw	0
  1974  00121E  ECE2  F00B         	call	_SPI_send_data
  1975                           
  1976                           ;SlaveComm_PIC18.c: 517: }
  1977  001222  D030               	goto	l389
  1978  001224                     l386:
  1979                           
  1980                           ;SlaveComm_PIC18.c: 518: else
  1981                           ;SlaveComm_PIC18.c: 519: {
  1982                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  1983  001224  0E00               	movlw	0
  1984  001226  6E19               	movwf	send_data@send_end,c
  1985                           
  1986                           ;SlaveComm_PIC18.c: 523: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  1987  001228  EE20 F029          	lfsr	2,41
  1988  00122C  5015               	movf	send_data@send_buffer,w,c
  1989  00122E  26D9               	addwf	fsr2l,f,c
  1990  001230  5016               	movf	send_data@send_buffer+1,w,c
  1991  001232  22DA               	addwfc	fsr2h,f,c
  1992  001234  50DF               	movf	indf2,w,c
  1993  001236  6E17               	movwf	??_send_data& (0+255),c
  1994  001238  5017               	movf	??_send_data,w,c
  1995  00123A  0D01               	mullw	1
  1996  00123C  50F3               	movf	prodl,w,c
  1997  00123E  2415               	addwf	send_data@send_buffer,w,c
  1998  001240  6ED9               	movwf	fsr2l,c
  1999  001242  50F4               	movf	prodh,w,c
  2000  001244  2016               	addwfc	send_data@send_buffer+1,w,c
  2001  001246  6EDA               	movwf	fsr2h,c
  2002  001248  50DF               	movf	indf2,w,c
  2003  00124A  ECE2  F00B         	call	_SPI_send_data
  2004  00124E  06E8               	decf	wreg,f,c
  2005  001250  A4D8               	btfss	status,2,c
  2006  001252  D018               	goto	l389
  2007                           
  2008                           ;SlaveComm_PIC18.c: 524: {
  2009                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2010  001254  EE20 F029          	lfsr	2,41
  2011  001258  5015               	movf	send_data@send_buffer,w,c
  2012  00125A  26D9               	addwf	fsr2l,f,c
  2013  00125C  5016               	movf	send_data@send_buffer+1,w,c
  2014  00125E  22DA               	addwfc	fsr2h,f,c
  2015  001260  2ADF               	incf	indf2,f,c
  2016                           
  2017                           ;SlaveComm_PIC18.c: 527: if (send_buffer->read_position >= 40)
  2018  001262  EE20 F029          	lfsr	2,41
  2019  001266  5015               	movf	send_data@send_buffer,w,c
  2020  001268  26D9               	addwf	fsr2l,f,c
  2021  00126A  5016               	movf	send_data@send_buffer+1,w,c
  2022  00126C  22DA               	addwfc	fsr2h,f,c
  2023  00126E  0E27               	movlw	39
  2024  001270  64DF               	cpfsgt	indf2,c
  2025  001272  D008               	goto	l389
  2026                           
  2027                           ;SlaveComm_PIC18.c: 528: {
  2028                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2029  001274  EE20 F029          	lfsr	2,41
  2030  001278  5015               	movf	send_data@send_buffer,w,c
  2031  00127A  26D9               	addwf	fsr2l,f,c
  2032  00127C  5016               	movf	send_data@send_buffer+1,w,c
  2033  00127E  22DA               	addwfc	fsr2h,f,c
  2034  001280  0E00               	movlw	0
  2035  001282  6EDF               	movwf	indf2,c
  2036  001284                     l389:
  2037                           
  2038                           ;SlaveComm_PIC18.c: 530: }
  2039                           ;SlaveComm_PIC18.c: 531: }
  2040                           ;SlaveComm_PIC18.c: 532: }
  2041                           ;SlaveComm_PIC18.c: 534: return send_end;
  2042  001284  5019               	movf	send_data@send_end,w,c
  2043  001286  0012               	return	
  2044  001288                     __end_of_send_data:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           intcon	equ	0xFF2
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postinc1	equ	0xFE6
  2056                           postdec1	equ	0xFE5
  2057                           fsr1h	equ	0xFE2
  2058                           fsr1l	equ	0xFE1
  2059                           indf2	equ	0xFDF
  2060                           postinc2	equ	0xFDE
  2061                           fsr2h	equ	0xFDA
  2062                           fsr2l	equ	0xFD9
  2063                           status	equ	0xFD8
  2064                           
  2065 ;; *************** function _SPI_send_data *****************
  2066 ;; Defined at:
  2067 ;;		line 607 in file "SlaveComm_PIC18.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  data            1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  data            1   18[COMRAM] unsigned char 
  2072 ;;  sendGood        1   19[COMRAM] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         0       0       0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0
  2085 ;;      Totals:         2       0       0       0       0       0       0
  2086 ;;Total ram usage:        2 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_send_data
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text9
  2097  0017C4                     __ptext9:
  2098                           	opt stack 0
  2099  0017C4                     _SPI_send_data:
  2100                           	opt stack 27
  2101                           
  2102                           ;incstack = 0
  2103                           ;SPI_send_data@data stored from wreg
  2104  0017C4  6E13               	movwf	SPI_send_data@data,c
  2105                           
  2106                           ;SlaveComm_PIC18.c: 609: bool sendGood = 0;
  2107  0017C6  0E00               	movlw	0
  2108  0017C8  6E14               	movwf	SPI_send_data@sendGood,c
  2109                           
  2110                           ;SlaveComm_PIC18.c: 611: if (SPI_transmit_wait == 0)
  2111  0017CA  5041               	movf	_SPI_transmit_wait,w,c
  2112  0017CC  A4D8               	btfss	status,2,c
  2113  0017CE  D006               	goto	l417
  2114                           
  2115                           ;SlaveComm_PIC18.c: 612: {
  2116                           ;SlaveComm_PIC18.c: 613: SSP2BUF = data;
  2117  0017D0  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2118                           
  2119                           ;SlaveComm_PIC18.c: 614: SPI_transmit_wait = 1;
  2120  0017D4  0E01               	movlw	1
  2121  0017D6  6E41               	movwf	_SPI_transmit_wait,c
  2122                           
  2123                           ;SlaveComm_PIC18.c: 615: sendGood = 1;
  2124  0017D8  0E01               	movlw	1
  2125  0017DA  D001               	goto	L1
  2126  0017DC                     l417:
  2127                           
  2128                           ;SlaveComm_PIC18.c: 617: else
  2129                           ;SlaveComm_PIC18.c: 618: {
  2130                           ;SlaveComm_PIC18.c: 619: sendGood = 0;
  2131  0017DC  0E00               	movlw	0
  2132  0017DE                     L1:
  2133  0017DE  6E14               	movwf	SPI_send_data@sendGood,c
  2134                           
  2135                           ;SlaveComm_PIC18.c: 620: }
  2136                           ;SlaveComm_PIC18.c: 622: return sendGood;
  2137  0017E0  5014               	movf	SPI_send_data@sendGood,w,c
  2138  0017E2  0012               	return	
  2139  0017E4                     __end_of_SPI_send_data:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           intcon	equ	0xFF2
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           postinc1	equ	0xFE6
  2151                           postdec1	equ	0xFE5
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           indf2	equ	0xFDF
  2155                           postinc2	equ	0xFDE
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _resetCommunications *****************
  2161 ;; Defined at:
  2162 ;;		line 158 in file "SlaveComm_PIC18.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  2165 ;;		 -> communications@send_buffer(42), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2177 ;;      Params:         2       0       0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0
  2179 ;;      Temps:          2       0       0       0       0       0       0
  2180 ;;      Totals:         4       0       0       0       0       0       0
  2181 ;;Total ram usage:        4 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    5
  2184 ;; This function calls:
  2185 ;;		_com_command_setEnergyUsed
  2186 ;;		_com_command_setPower
  2187 ;;		_com_command_setVersion
  2188 ;; This function is called by:
  2189 ;;		_communications
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text10
  2194  001160                     __ptext10:
  2195                           	opt stack 0
  2196  001160                     _resetCommunications:
  2197                           	opt stack 24
  2198                           
  2199                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2200                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2201                           
  2202                           ;incstack = 0
  2203  001160  9A6C               	bcf	3948,5,c	;volatile
  2204                           
  2205                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2206  001162  0E06               	movlw	6
  2207  001164  6E31               	movwf	??_resetCommunications& (0+255),c
  2208  001166  0E30               	movlw	48
  2209  001168                     u2567:
  2210  001168  2EE8               	decfsz	wreg,f,c
  2211  00116A  D7FE               	bra	u2567
  2212  00116C  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  2213  00116E  D7FC               	bra	u2567
  2214  001170  D000               	nop2	
  2215                           
  2216                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2217  001172  8A6C               	bsf	3948,5,c	;volatile
  2218                           
  2219                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2220  001174  9E6C               	bcf	3948,7,c	;volatile
  2221                           
  2222                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2223  001176  0E00               	movlw	0
  2224  001178  6E41               	movwf	_SPI_transmit_wait,c
  2225                           
  2226                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2227  00117A  EE20 F029          	lfsr	2,41
  2228  00117E  502F               	movf	resetCommunications@send_buffer,w,c
  2229  001180  26D9               	addwf	fsr2l,f,c
  2230  001182  5030               	movf	resetCommunications@send_buffer+1,w,c
  2231  001184  22DA               	addwfc	fsr2h,f,c
  2232  001186  0E00               	movlw	0
  2233  001188  6EDF               	movwf	indf2,c
  2234                           
  2235                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2236  00118A  EE20 F028          	lfsr	2,40
  2237  00118E  502F               	movf	resetCommunications@send_buffer,w,c
  2238  001190  26D9               	addwf	fsr2l,f,c
  2239  001192  5030               	movf	resetCommunications@send_buffer+1,w,c
  2240  001194  22DA               	addwfc	fsr2h,f,c
  2241  001196  0E00               	movlw	0
  2242  001198  6EDF               	movwf	indf2,c
  2243                           
  2244                           ;SlaveComm_PIC18.c: 177: commState++;
  2245  00119A  4A3B               	infsnz	resetCommunications@commState,f,c
  2246  00119C  2A3C               	incf	resetCommunications@commState+1,f,c
  2247                           
  2248                           ;SlaveComm_PIC18.c: 178: switch (commState)
  2249  00119E  D019               	goto	l293
  2250  0011A0                     
  2251                           ;SlaveComm_PIC18.c: 181: com_command_setVersion(send_buffer);
  2252  0011A0  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2253  0011A4  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2254  0011A8  ECBC  F00B         	call	_com_command_setVersion	;wreg free
  2255                           
  2256                           ;SlaveComm_PIC18.c: 182: break;
  2257  0011AC  0012               	return	
  2258  0011AE                     
  2259                           ;SlaveComm_PIC18.c: 184: com_command_setPower(send_buffer);
  2260  0011AE  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2261  0011B2  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2262  0011B6  ECD9  F00A         	call	_com_command_setPower	;wreg free
  2263                           
  2264                           ;SlaveComm_PIC18.c: 197: break;
  2265  0011BA  0012               	return	
  2266  0011BC                     
  2267                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed(send_buffer);
  2268  0011BC  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2269  0011C0  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2270  0011C4  ECFE  F00A         	call	_com_command_setEnergyUsed	;wreg free
  2271  0011C8                     
  2272                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2273  0011C8  0E00               	movlw	0
  2274  0011CA  6E3C               	movwf	resetCommunications@commState+1,c
  2275  0011CC  0E00               	movlw	0
  2276  0011CE  6E3B               	movwf	resetCommunications@commState,c
  2277                           
  2278                           ;SlaveComm_PIC18.c: 213: }
  2279                           
  2280                           ;SlaveComm_PIC18.c: 212: break;
  2281  0011D0  0012               	return	
  2282  0011D2                     l293:
  2283  0011D2  C03B  F031         	movff	resetCommunications@commState,??_resetCommunications
  2284  0011D6  C03C  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2285                           
  2286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2287                           ; Switch size 1, requested type "space"
  2288                           ; Number of cases is 1, Range of values is 0 to 0
  2289                           ; switch strategies available:
  2290                           ; Name         Instructions Cycles
  2291                           ; simple_byte            4     3 (average)
  2292                           ;	Chosen strategy is simple_byte
  2293  0011DA  5032               	movf	??_resetCommunications+1,w,c
  2294  0011DC  0A00               	xorlw	0	; case 0
  2295  0011DE  A4D8               	btfss	status,2,c
  2296  0011E0  D7F3               	goto	l298
  2297                           
  2298                           ; Switch size 1, requested type "space"
  2299                           ; Number of cases is 3, Range of values is 1 to 3
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           10     6 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304  0011E2  5031               	movf	??_resetCommunications,w,c
  2305  0011E4  0A01               	xorlw	1	; case 1
  2306  0011E6  B4D8               	btfsc	status,2,c
  2307  0011E8  D7DB               	goto	l294
  2308  0011EA  0A03               	xorlw	3	; case 2
  2309  0011EC  B4D8               	btfsc	status,2,c
  2310  0011EE  D7DF               	goto	l296
  2311  0011F0  0A01               	xorlw	1	; case 3
  2312  0011F2  B4D8               	btfsc	status,2,c
  2313  0011F4  D7E3               	goto	l297
  2314  0011F6  D7E8               	goto	l298
  2315  0011F8                     __end_of_resetCommunications:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           intcon	equ	0xFF2
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           postinc1	equ	0xFE6
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _com_command_setVersion *****************
  2337 ;; Defined at:
  2338 ;;		line 700 in file "SlaveComm_PIC18.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2341 ;;		 -> communications@send_buffer(42), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2353 ;;      Params:         2       0       0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0
  2356 ;;      Totals:         2       0       0       0       0       0       0
  2357 ;;Total ram usage:        2 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    4
  2360 ;; This function calls:
  2361 ;;		_command_builder3
  2362 ;; This function is called by:
  2363 ;;		_resetCommunications
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text11
  2368  001778                     __ptext11:
  2369                           	opt stack 0
  2370  001778                     _com_command_setVersion:
  2371                           	opt stack 24
  2372                           
  2373                           ;SlaveComm_PIC18.c: 702: command_builder3(send_buffer, "Set", "PSVersion", "444");
  2374                           
  2375                           ;incstack = 0
  2376  001778  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2377  00177C  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2378  001780  0E57               	movlw	low STR_2
  2379  001782  6E21               	movwf	command_builder3@data1,c
  2380  001784  0E06               	movlw	high STR_2
  2381  001786  6E22               	movwf	command_builder3@data1+1,c
  2382  001788  0E0D               	movlw	low STR_22
  2383  00178A  6E23               	movwf	command_builder3@data2,c
  2384  00178C  0E06               	movlw	high STR_22
  2385  00178E  6E24               	movwf	command_builder3@data2+1,c
  2386  001790  0E4B               	movlw	low STR_40
  2387  001792  6E25               	movwf	command_builder3@data3,c
  2388  001794  0E06               	movlw	high STR_40
  2389  001796  6E26               	movwf	command_builder3@data3+1,c
  2390  001798  EC14  F008         	call	_command_builder3	;wreg free
  2391  00179C  0012               	return		;funcret
  2392  00179E                     __end_of_com_command_setVersion:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postinc1	equ	0xFE6
  2404                           postdec1	equ	0xFE5
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           indf2	equ	0xFDF
  2408                           postinc2	equ	0xFDE
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _com_command_setPower *****************
  2414 ;; Defined at:
  2415 ;;		line 642 in file "SlaveComm_PIC18.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  2418 ;;		 -> communications@send_buffer(42), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         2       0       0       0       0       0       0
  2431 ;;      Locals:         0      12       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0
  2433 ;;      Totals:         2      12       0       0       0       0       0
  2434 ;;Total ram usage:       14 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    4
  2437 ;; This function calls:
  2438 ;;		_command_builder3
  2439 ;;		_ultoa
  2440 ;; This function is called by:
  2441 ;;		_resetCommunications
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text12
  2446  0015B2                     __ptext12:
  2447                           	opt stack 0
  2448  0015B2                     _com_command_setPower:
  2449                           	opt stack 24
  2450                           
  2451                           ;SlaveComm_PIC18.c: 645: char temp[12];
  2452                           ;SlaveComm_PIC18.c: 658: ultoa(temp, meterWatts, 10);
  2453                           
  2454                           ;incstack = 0
  2455  0015B2  0EC0               	movlw	low com_command_setPower@temp
  2456  0015B4  6E20               	movwf	ultoa@buf,c
  2457  0015B6  0E00               	movlw	high com_command_setPower@temp
  2458  0015B8  6E21               	movwf	ultoa@buf+1,c
  2459  0015BA  C068  F022         	movff	_meterWatts,ultoa@val
  2460  0015BE  C069  F023         	movff	_meterWatts+1,ultoa@val+1
  2461  0015C2  C06A  F024         	movff	_meterWatts+2,ultoa@val+2
  2462  0015C6  C06B  F025         	movff	_meterWatts+3,ultoa@val+3
  2463  0015CA  0E00               	movlw	0
  2464  0015CC  6E27               	movwf	ultoa@base+1,c
  2465  0015CE  0E0A               	movlw	10
  2466  0015D0  6E26               	movwf	ultoa@base,c
  2467  0015D2  ECBF  F006         	call	_ultoa	;wreg free
  2468                           
  2469                           ;SlaveComm_PIC18.c: 660: command_builder3(send_buffer, "Set", "Watts", temp);
  2470  0015D6  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2471  0015DA  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2472  0015DE  0E57               	movlw	low STR_2
  2473  0015E0  6E21               	movwf	command_builder3@data1,c
  2474  0015E2  0E06               	movlw	high STR_2
  2475  0015E4  6E22               	movwf	command_builder3@data1+1,c
  2476  0015E6  0E24               	movlw	low STR_18
  2477  0015E8  6E23               	movwf	command_builder3@data2,c
  2478  0015EA  0E06               	movlw	high STR_18
  2479  0015EC  6E24               	movwf	command_builder3@data2+1,c
  2480  0015EE  0EC0               	movlw	low com_command_setPower@temp
  2481  0015F0  6E25               	movwf	command_builder3@data3,c
  2482  0015F2  0E00               	movlw	high com_command_setPower@temp
  2483  0015F4  6E26               	movwf	command_builder3@data3+1,c
  2484  0015F6  EC14  F008         	call	_command_builder3	;wreg free
  2485  0015FA  0012               	return	
  2486  0015FC                     __end_of_com_command_setPower:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           intcon	equ	0xFF2
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postinc1	equ	0xFE6
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           indf2	equ	0xFDF
  2502                           postinc2	equ	0xFDE
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _receive_data *****************
  2508 ;; Defined at:
  2509 ;;		line 217 in file "SlaveComm_PIC18.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2512 ;;		 -> communications@receive_buffer(42), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  data            1   24[COMRAM] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      enum E6751
  2517 ;; Registers used:
  2518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2524 ;;      Params:         2       0       0       0       0       0       0
  2525 ;;      Locals:         1       0       0       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0       0       0
  2527 ;;      Totals:         4       0       0       0       0       0       0
  2528 ;;Total ram usage:        4 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    2
  2531 ;; This function calls:
  2532 ;;		_SPI_receive_data
  2533 ;; This function is called by:
  2534 ;;		_communications
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text13
  2539  000F68                     __ptext13:
  2540                           	opt stack 0
  2541  000F68                     _receive_data:
  2542                           	opt stack 27
  2543                           
  2544                           ;SlaveComm_PIC18.c: 219: char data;
  2545                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2546                           ;SlaveComm_PIC18.c: 223: if (my_status == receive_end_command)
  2547                           
  2548                           ;incstack = 0
  2549  000F68  0E02               	movlw	2
  2550  000F6A  183D               	xorwf	receive_data@my_status,w,c
  2551  000F6C  A4D8               	btfss	status,2,c
  2552  000F6E  D002               	goto	l304
  2553                           
  2554                           ;SlaveComm_PIC18.c: 224: {
  2555                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2556  000F70  0E00               	movlw	0
  2557  000F72  6E3D               	movwf	receive_data@my_status,c
  2558  000F74                     l304:
  2559                           
  2560                           ;SlaveComm_PIC18.c: 226: }
  2561                           ;SlaveComm_PIC18.c: 228: if (SPI_receive_data(&data) == 1)
  2562  000F74  0E19               	movlw	low receive_data@data
  2563  000F76  6E13               	movwf	SPI_receive_data@data,c
  2564  000F78  0E00               	movlw	high receive_data@data
  2565  000F7A  6E14               	movwf	SPI_receive_data@data+1,c
  2566  000F7C  ECA8  F00B         	call	_SPI_receive_data	;wreg free
  2567  000F80  06E8               	decf	wreg,f,c
  2568  000F82  A4D8               	btfss	status,2,c
  2569  000F84  D04F               	goto	l310
  2570                           
  2571                           ;SlaveComm_PIC18.c: 234: }
  2572                           ;SlaveComm_PIC18.c: 236: if ((data == '!') && (my_status != receive_in_command))
  2573                           
  2574                           ;SlaveComm_PIC18.c: 232: {
  2575  000F86  0E21               	movlw	33
  2576  000F88  1819               	xorwf	receive_data@data,w,c
  2577  000F8A  A4D8               	btfss	status,2,c
  2578  000F8C  D015               	goto	l307
  2579  000F8E  043D               	decf	receive_data@my_status,w,c
  2580  000F90  B4D8               	btfsc	status,2,c
  2581  000F92  D012               	goto	l307
  2582                           
  2583                           ;SlaveComm_PIC18.c: 237: {
  2584                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  2585  000F94  0E01               	movlw	1
  2586  000F96  6E3D               	movwf	receive_data@my_status,c
  2587                           
  2588                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  2589  000F98  EE20 F029          	lfsr	2,41
  2590  000F9C  5016               	movf	receive_data@receive_buffer,w,c
  2591  000F9E  26D9               	addwf	fsr2l,f,c
  2592  000FA0  5017               	movf	receive_data@receive_buffer+1,w,c
  2593  000FA2  22DA               	addwfc	fsr2h,f,c
  2594  000FA4  0E00               	movlw	0
  2595  000FA6  6EDF               	movwf	indf2,c
  2596                           
  2597                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  2598  000FA8  EE20 F028          	lfsr	2,40
  2599  000FAC  5016               	movf	receive_data@receive_buffer,w,c
  2600  000FAE  26D9               	addwf	fsr2l,f,c
  2601  000FB0  5017               	movf	receive_data@receive_buffer+1,w,c
  2602  000FB2  22DA               	addwfc	fsr2h,f,c
  2603  000FB4  0E00               	movlw	0
  2604  000FB6  6EDF               	movwf	indf2,c
  2605  000FB8                     l307:
  2606                           
  2607                           ;SlaveComm_PIC18.c: 241: }
  2608                           ;SlaveComm_PIC18.c: 243: if (my_status == receive_in_command)
  2609  000FB8  043D               	decf	receive_data@my_status,w,c
  2610  000FBA  A4D8               	btfss	status,2,c
  2611  000FBC  D02A               	goto	l309
  2612                           
  2613                           ;SlaveComm_PIC18.c: 244: {
  2614                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2615  000FBE  EE20 F028          	lfsr	2,40
  2616  000FC2  5016               	movf	receive_data@receive_buffer,w,c
  2617  000FC4  26D9               	addwf	fsr2l,f,c
  2618  000FC6  5017               	movf	receive_data@receive_buffer+1,w,c
  2619  000FC8  22DA               	addwfc	fsr2h,f,c
  2620  000FCA  50DF               	movf	indf2,w,c
  2621  000FCC  6E18               	movwf	??_receive_data& (0+255),c
  2622  000FCE  5018               	movf	??_receive_data,w,c
  2623  000FD0  0D01               	mullw	1
  2624  000FD2  50F3               	movf	prodl,w,c
  2625  000FD4  2416               	addwf	receive_data@receive_buffer,w,c
  2626  000FD6  6ED9               	movwf	fsr2l,c
  2627  000FD8  50F4               	movf	prodh,w,c
  2628  000FDA  2017               	addwfc	receive_data@receive_buffer+1,w,c
  2629  000FDC  6EDA               	movwf	fsr2h,c
  2630  000FDE  C019  FFDF         	movff	receive_data@data,indf2
  2631                           
  2632                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  2633  000FE2  EE20 F028          	lfsr	2,40
  2634  000FE6  5016               	movf	receive_data@receive_buffer,w,c
  2635  000FE8  26D9               	addwf	fsr2l,f,c
  2636  000FEA  5017               	movf	receive_data@receive_buffer+1,w,c
  2637  000FEC  22DA               	addwfc	fsr2h,f,c
  2638  000FEE  2ADF               	incf	indf2,f,c
  2639                           
  2640                           ;SlaveComm_PIC18.c: 248: if (receive_buffer->write_position >= 40)
  2641  000FF0  EE20 F028          	lfsr	2,40
  2642  000FF4  5016               	movf	receive_data@receive_buffer,w,c
  2643  000FF6  26D9               	addwf	fsr2l,f,c
  2644  000FF8  5017               	movf	receive_data@receive_buffer+1,w,c
  2645  000FFA  22DA               	addwfc	fsr2h,f,c
  2646  000FFC  0E27               	movlw	39
  2647  000FFE  64DF               	cpfsgt	indf2,c
  2648  001000  D008               	goto	l309
  2649                           
  2650                           ;SlaveComm_PIC18.c: 249: {
  2651                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  2652  001002  EE20 F028          	lfsr	2,40
  2653  001006  5016               	movf	receive_data@receive_buffer,w,c
  2654  001008  26D9               	addwf	fsr2l,f,c
  2655  00100A  5017               	movf	receive_data@receive_buffer+1,w,c
  2656  00100C  22DA               	addwfc	fsr2h,f,c
  2657  00100E  0E27               	movlw	39
  2658  001010  6EDF               	movwf	indf2,c
  2659  001012                     l309:
  2660                           
  2661                           ;SlaveComm_PIC18.c: 251: }
  2662                           ;SlaveComm_PIC18.c: 252: }
  2663                           ;SlaveComm_PIC18.c: 254: if ((my_status == receive_in_command) && (data == '*'))
  2664  001012  043D               	decf	receive_data@my_status,w,c
  2665  001014  A4D8               	btfss	status,2,c
  2666  001016  D006               	goto	l310
  2667  001018  0E2A               	movlw	42
  2668  00101A  1819               	xorwf	receive_data@data,w,c
  2669  00101C  A4D8               	btfss	status,2,c
  2670  00101E  D002               	goto	l310
  2671                           
  2672                           ;SlaveComm_PIC18.c: 255: {
  2673                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  2674  001020  0E02               	movlw	2
  2675  001022  6E3D               	movwf	receive_data@my_status,c
  2676  001024                     l310:
  2677                           
  2678                           ;SlaveComm_PIC18.c: 257: }
  2679                           ;SlaveComm_PIC18.c: 258: }
  2680                           ;SlaveComm_PIC18.c: 260: return my_status;
  2681  001024  503D               	movf	receive_data@my_status,w,c
  2682  001026  0012               	return	
  2683  001028                     __end_of_receive_data:
  2684                           	opt stack 0
  2685                           tblptru	equ	0xFF8
  2686                           tblptrh	equ	0xFF7
  2687                           tblptrl	equ	0xFF6
  2688                           tablat	equ	0xFF5
  2689                           prodh	equ	0xFF4
  2690                           prodl	equ	0xFF3
  2691                           intcon	equ	0xFF2
  2692                           postinc0	equ	0xFEE
  2693                           wreg	equ	0xFE8
  2694                           postinc1	equ	0xFE6
  2695                           postdec1	equ	0xFE5
  2696                           fsr1h	equ	0xFE2
  2697                           fsr1l	equ	0xFE1
  2698                           indf2	equ	0xFDF
  2699                           postinc2	equ	0xFDE
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _SPI_receive_data *****************
  2705 ;; Defined at:
  2706 ;;		line 586 in file "SlaveComm_PIC18.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  data            2   18[COMRAM] PTR unsigned char 
  2709 ;;		 -> receive_data@data(1), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  recvGood        1   20[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      unsigned char 
  2714 ;; Registers used:
  2715 ;;		wreg, fsr2l, fsr2h, status,2
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2721 ;;      Params:         2       0       0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0
  2724 ;;      Totals:         3       0       0       0       0       0       0
  2725 ;;Total ram usage:        3 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_receive_data
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text14
  2736  001750                     __ptext14:
  2737                           	opt stack 0
  2738  001750                     _SPI_receive_data:
  2739                           	opt stack 27
  2740                           
  2741                           ;SlaveComm_PIC18.c: 589: bool recvGood = 0;
  2742                           
  2743                           ;incstack = 0
  2744  001750  0E00               	movlw	0
  2745  001752  6E15               	movwf	SPI_receive_data@recvGood,c
  2746                           
  2747                           ;SlaveComm_PIC18.c: 591: if (SSP2STATbits.BF == 1)
  2748  001754  A06D               	btfss	3949,0,c	;volatile
  2749  001756  D00C               	goto	l412
  2750                           
  2751                           ;SlaveComm_PIC18.c: 592: {
  2752                           ;SlaveComm_PIC18.c: 593: *data = SSP2BUF;
  2753  001758  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  2754  00175C  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2755  001760  CF6F FFDF          	movff	3951,indf2	;volatile
  2756                           
  2757                           ;SlaveComm_PIC18.c: 594: recvGood = 1;
  2758  001764  0E01               	movlw	1
  2759  001766  6E15               	movwf	SPI_receive_data@recvGood,c
  2760                           
  2761                           ;SlaveComm_PIC18.c: 595: SSP2CON1bits.WCOL = 0;
  2762  001768  9E6C               	bcf	3948,7,c	;volatile
  2763                           
  2764                           ;SlaveComm_PIC18.c: 596: SPI_transmit_wait = 0;
  2765  00176A  0E00               	movlw	0
  2766  00176C  6E41               	movwf	_SPI_transmit_wait,c
  2767                           
  2768                           ;SlaveComm_PIC18.c: 597: }
  2769  00176E  D002               	goto	l413
  2770  001770                     l412:
  2771                           
  2772                           ;SlaveComm_PIC18.c: 598: else
  2773                           ;SlaveComm_PIC18.c: 599: {
  2774                           ;SlaveComm_PIC18.c: 600: recvGood = 0;
  2775  001770  0E00               	movlw	0
  2776  001772  6E15               	movwf	SPI_receive_data@recvGood,c
  2777  001774                     l413:
  2778                           
  2779                           ;SlaveComm_PIC18.c: 601: }
  2780                           ;SlaveComm_PIC18.c: 603: return recvGood;
  2781  001774  5015               	movf	SPI_receive_data@recvGood,w,c
  2782  001776  0012               	return	
  2783  001778                     __end_of_SPI_receive_data:
  2784                           	opt stack 0
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           intcon	equ	0xFF2
  2792                           postinc0	equ	0xFEE
  2793                           wreg	equ	0xFE8
  2794                           postinc1	equ	0xFE6
  2795                           postdec1	equ	0xFE5
  2796                           fsr1h	equ	0xFE2
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           postinc2	equ	0xFDE
  2800                           fsr2h	equ	0xFDA
  2801                           fsr2l	equ	0xFD9
  2802                           status	equ	0xFD8
  2803                           
  2804 ;; *************** function _process_data *****************
  2805 ;; Defined at:
  2806 ;;		line 263 in file "SlaveComm_PIC18.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  receive_buff    2   12[BANK0 ] PTR struct buffer
  2809 ;;		 -> communications@receive_buffer(42), 
  2810 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  2811 ;;		 -> communications@send_buffer(42), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  2814 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2824 ;;      Params:         0       4       0       0       0       0       0
  2825 ;;      Locals:         0       0      51       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0
  2827 ;;      Totals:         0       4      51       0       0       0       0
  2828 ;;Total ram usage:       55 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    6
  2831 ;; This function calls:
  2832 ;;		_process_data_parameterize
  2833 ;;		_process_data_parameters
  2834 ;; This function is called by:
  2835 ;;		_communications
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text15
  2840  0016F0                     __ptext15:
  2841                           	opt stack 0
  2842  0016F0                     _process_data:
  2843                           	opt stack 23
  2844                           
  2845                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  2846                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  2847                           ;SlaveComm_PIC18.c: 272: process_data_parameterize(parameters, receive_buffer);
  2848                           
  2849                           ;incstack = 0
  2850  0016F0  0E00               	movlw	low process_data@parameters
  2851  0016F2  6E19               	movwf	process_data_parameterize@parameters,c
  2852  0016F4  0E01               	movlw	high process_data@parameters
  2853  0016F6  6E1A               	movwf	process_data_parameterize@parameters+1,c
  2854  0016F8  C0CC  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  2855  0016FC  C0CD  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  2856  001700  EC69  F005         	call	_process_data_parameterize	;wreg free
  2857                           
  2858                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  2859  001704  0E00               	movlw	low process_data@parameters
  2860  001706  6E2F               	movwf	process_data_parameters@parameters,c
  2861  001708  0E01               	movlw	high process_data@parameters
  2862  00170A  6E30               	movwf	process_data_parameters@parameters+1,c
  2863  00170C  C0CE  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  2864  001710  C0CF  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  2865  001714  EC30  F003         	call	_process_data_parameters	;wreg free
  2866  001718  0101               	movlb	1	; () banked
  2867  00171A  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  2868                           
  2869                           ; BSR set to: 1
  2870                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  2871  00171C  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  2872  00171E  0012               	return	
  2873  001720                     __end_of_process_data:
  2874                           	opt stack 0
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           prodh	equ	0xFF4
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postinc1	equ	0xFE6
  2885                           postdec1	equ	0xFE5
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           indf2	equ	0xFDF
  2889                           postinc2	equ	0xFDE
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _process_data_parameters *****************
  2895 ;; Defined at:
  2896 ;;		line 339 in file "SlaveComm_PIC18.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  2899 ;;		 -> process_data@parameters(50), 
  2900 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  2901 ;;		 -> communications@send_buffer(42), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      unsigned char 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2913 ;;      Params:         4       0       0       0       0       0       0
  2914 ;;      Locals:         1       0       0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0
  2916 ;;      Totals:         5       0       0       0       0       0       0
  2917 ;;Total ram usage:        5 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    5
  2920 ;; This function calls:
  2921 ;;		_atol
  2922 ;;		_com_command_setEnergyUsed
  2923 ;;		_command_builder3
  2924 ;;		_send_end_of_transmission
  2925 ;;		_strmatch
  2926 ;; This function is called by:
  2927 ;;		_process_data
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text16
  2932  000660                     __ptext16:
  2933                           	opt stack 0
  2934  000660                     _process_data_parameters:
  2935                           	opt stack 23
  2936                           
  2937                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  2938                           
  2939                           ; BSR set to: 1
  2940                           ;incstack = 0
  2941  000660  0E00               	movlw	0
  2942  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  2943                           
  2944                           ;SlaveComm_PIC18.c: 344: if (strmatch(parameters[0], "END") == 1)
  2945  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  2946  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2947  00066C  0E4F               	movlw	low STR_1
  2948  00066E  6E20               	movwf	strmatch@b,c
  2949  000670  0E06               	movlw	high STR_1
  2950  000672  6E21               	movwf	strmatch@b+1,c
  2951  000674  EC90  F00B         	call	_strmatch	;wreg free
  2952  000678  06E8               	decf	wreg,f,c
  2953  00067A  A4D8               	btfss	status,2,c
  2954  00067C  D003               	goto	l334
  2955                           
  2956                           ;SlaveComm_PIC18.c: 345: {
  2957                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  2958  00067E  0E01               	movlw	1
  2959  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  2960                           
  2961                           ;SlaveComm_PIC18.c: 356: }
  2962  000682  D13F               	goto	l360
  2963  000684                     l334:
  2964                           
  2965                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Set") == 1)
  2966  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  2967  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2968  00068C  0E57               	movlw	low STR_2
  2969  00068E  6E20               	movwf	strmatch@b,c
  2970  000690  0E06               	movlw	high STR_2
  2971  000692  6E21               	movwf	strmatch@b+1,c
  2972  000694  EC90  F00B         	call	_strmatch	;wreg free
  2973  000698  06E8               	decf	wreg,f,c
  2974  00069A  A4D8               	btfss	status,2,c
  2975  00069C  D035               	goto	l336
  2976                           
  2977                           ;SlaveComm_PIC18.c: 358: {
  2978                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "Calibration") == 1)
  2979  00069E  0E0A               	movlw	10
  2980  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  2981  0006A2  6E1E               	movwf	strmatch@a,c
  2982  0006A4  0E00               	movlw	0
  2983  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  2984  0006A8  6E1F               	movwf	strmatch@a+1,c
  2985  0006AA  0E01               	movlw	low STR_3
  2986  0006AC  6E20               	movwf	strmatch@b,c
  2987  0006AE  0E06               	movlw	high STR_3
  2988  0006B0  6E21               	movwf	strmatch@b+1,c
  2989  0006B2  EC90  F00B         	call	_strmatch	;wreg free
  2990  0006B6  06E8               	decf	wreg,f,c
  2991  0006B8  B4D8               	btfsc	status,2,c
  2992  0006BA  D123               	goto	l360
  2993                           
  2994                           ;SlaveComm_PIC18.c: 363: else if (strmatch(parameters[1], "EnUsed") == 1)
  2995                           
  2996                           ;SlaveComm_PIC18.c: 360: {
  2997                           ;SlaveComm_PIC18.c: 362: }
  2998  0006BC  0E0A               	movlw	10
  2999  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3000  0006C0  6E1E               	movwf	strmatch@a,c
  3001  0006C2  0E00               	movlw	0
  3002  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3003  0006C6  6E1F               	movwf	strmatch@a+1,c
  3004  0006C8  0E17               	movlw	low STR_4
  3005  0006CA  6E20               	movwf	strmatch@b,c
  3006  0006CC  0E06               	movlw	high STR_4
  3007  0006CE  6E21               	movwf	strmatch@b+1,c
  3008  0006D0  EC90  F00B         	call	_strmatch	;wreg free
  3009  0006D4  06E8               	decf	wreg,f,c
  3010  0006D6  A4D8               	btfss	status,2,c
  3011  0006D8  D114               	goto	l360
  3012                           
  3013                           ;SlaveComm_PIC18.c: 364: {
  3014                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol(parameters[2]);
  3015  0006DA  0E14               	movlw	20
  3016  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3017  0006DE  6E1F               	movwf	atol@s,c
  3018  0006E0  0E00               	movlw	0
  3019  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3020  0006E4  6E20               	movwf	atol@s+1,c
  3021  0006E6  EC3A  F007         	call	_atol	;wreg free
  3022  0006EA  C01F  F064         	movff	?_atol,_meterEnergyUsed
  3023  0006EE  C020  F065         	movff	?_atol+1,_meterEnergyUsed+1
  3024  0006F2  C021  F066         	movff	?_atol+2,_meterEnergyUsed+2
  3025  0006F6  C022  F067         	movff	?_atol+3,_meterEnergyUsed+3
  3026                           
  3027                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed(send_buffer);
  3028  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3029  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3030  000702  ECFE  F00A         	call	_com_command_setEnergyUsed	;wreg free
  3031                           
  3032                           ;SlaveComm_PIC18.c: 371: }
  3033                           ;SlaveComm_PIC18.c: 376: }
  3034  000706  D0FD               	goto	l360
  3035  000708                     l336:
  3036                           
  3037                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[0], "Read") == 1)
  3038  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3039  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3040  000710  0E34               	movlw	low STR_5
  3041  000712  6E20               	movwf	strmatch@b,c
  3042  000714  0E06               	movlw	high STR_5
  3043  000716  6E21               	movwf	strmatch@b+1,c
  3044  000718  EC90  F00B         	call	_strmatch	;wreg free
  3045  00071C  06E8               	decf	wreg,f,c
  3046  00071E  B4D8               	btfsc	status,2,c
  3047  000720  D0F0               	goto	l360
  3048                           
  3049                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[0], "Data") == 1)
  3050                           
  3051                           ;SlaveComm_PIC18.c: 378: {
  3052                           ;SlaveComm_PIC18.c: 380: }
  3053  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3054  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3055  00072A  0E2F               	movlw	low STR_6
  3056  00072C  6E20               	movwf	strmatch@b,c
  3057  00072E  0E06               	movlw	high STR_6
  3058  000730  6E21               	movwf	strmatch@b+1,c
  3059  000732  EC90  F00B         	call	_strmatch	;wreg free
  3060  000736  06E8               	decf	wreg,f,c
  3061  000738  A4D8               	btfss	status,2,c
  3062  00073A  D053               	goto	l343
  3063                           
  3064                           ;SlaveComm_PIC18.c: 382: {
  3065                           ;SlaveComm_PIC18.c: 383: if (strmatch(parameters[1], "LEDB") == 1)
  3066  00073C  0E0A               	movlw	10
  3067  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  3068  000740  6E1E               	movwf	strmatch@a,c
  3069  000742  0E00               	movlw	0
  3070  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3071  000746  6E1F               	movwf	strmatch@a+1,c
  3072  000748  0E2A               	movlw	low STR_7
  3073  00074A  6E20               	movwf	strmatch@b,c
  3074  00074C  0E06               	movlw	high STR_7
  3075  00074E  6E21               	movwf	strmatch@b+1,c
  3076  000750  EC90  F00B         	call	_strmatch	;wreg free
  3077  000754  06E8               	decf	wreg,f,c
  3078  000756  A4D8               	btfss	status,2,c
  3079  000758  D0D4               	goto	l360
  3080                           
  3081                           ;SlaveComm_PIC18.c: 384: {
  3082                           ;SlaveComm_PIC18.c: 385: if (strmatch(parameters[2], "On") == 1)
  3083  00075A  0E14               	movlw	20
  3084  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  3085  00075E  6E1E               	movwf	strmatch@a,c
  3086  000760  0E00               	movlw	0
  3087  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3088  000764  6E1F               	movwf	strmatch@a+1,c
  3089  000766  0E5B               	movlw	low STR_8
  3090  000768  6E20               	movwf	strmatch@b,c
  3091  00076A  0E06               	movlw	high STR_8
  3092  00076C  6E21               	movwf	strmatch@b+1,c
  3093  00076E  EC90  F00B         	call	_strmatch	;wreg free
  3094  000772  06E8               	decf	wreg,f,c
  3095  000774  A4D8               	btfss	status,2,c
  3096  000776  D013               	goto	l345
  3097                           
  3098                           ;SlaveComm_PIC18.c: 386: {
  3099                           ;SlaveComm_PIC18.c: 387: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3100  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3101  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3102  000780  0E57               	movlw	low STR_2
  3103  000782  6E21               	movwf	command_builder3@data1,c
  3104  000784  0E06               	movlw	high STR_2
  3105  000786  6E22               	movwf	command_builder3@data1+1,c
  3106  000788  0E2A               	movlw	low STR_7
  3107  00078A  6E23               	movwf	command_builder3@data2,c
  3108  00078C  0E06               	movlw	high STR_7
  3109  00078E  6E24               	movwf	command_builder3@data2+1,c
  3110  000790  0E53               	movlw	low STR_11
  3111  000792  6E25               	movwf	command_builder3@data3,c
  3112  000794  0E06               	movlw	high STR_11
  3113  000796  6E26               	movwf	command_builder3@data3+1,c
  3114  000798  EC14  F008         	call	_command_builder3	;wreg free
  3115                           
  3116                           ;SlaveComm_PIC18.c: 388: }
  3117  00079C  D0B2               	goto	l360
  3118  00079E                     l345:
  3119                           
  3120                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[2], "Off") == 1)
  3121  00079E  0E14               	movlw	20
  3122  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  3123  0007A2  6E1E               	movwf	strmatch@a,c
  3124  0007A4  0E00               	movlw	0
  3125  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3126  0007A8  6E1F               	movwf	strmatch@a+1,c
  3127  0007AA  0E53               	movlw	low STR_11
  3128  0007AC  6E20               	movwf	strmatch@b,c
  3129  0007AE  0E06               	movlw	high STR_11
  3130  0007B0  6E21               	movwf	strmatch@b+1,c
  3131  0007B2  EC90  F00B         	call	_strmatch	;wreg free
  3132  0007B6  06E8               	decf	wreg,f,c
  3133  0007B8  A4D8               	btfss	status,2,c
  3134  0007BA  D0A3               	goto	l360
  3135                           
  3136                           ;SlaveComm_PIC18.c: 390: {
  3137                           ;SlaveComm_PIC18.c: 391: command_builder3(send_buffer, "Set", "LEDB", "On");
  3138  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3139  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3140  0007C4  0E57               	movlw	low STR_2
  3141  0007C6  6E21               	movwf	command_builder3@data1,c
  3142  0007C8  0E06               	movlw	high STR_2
  3143  0007CA  6E22               	movwf	command_builder3@data1+1,c
  3144  0007CC  0E2A               	movlw	low STR_7
  3145  0007CE  6E23               	movwf	command_builder3@data2,c
  3146  0007D0  0E06               	movlw	high STR_7
  3147  0007D2  6E24               	movwf	command_builder3@data2+1,c
  3148  0007D4  0E5B               	movlw	low STR_8
  3149  0007D6  6E25               	movwf	command_builder3@data3,c
  3150  0007D8  0E06               	movlw	high STR_8
  3151  0007DA  6E26               	movwf	command_builder3@data3+1,c
  3152  0007DC  EC14  F008         	call	_command_builder3	;wreg free
  3153                           
  3154                           ;SlaveComm_PIC18.c: 392: }
  3155                           ;SlaveComm_PIC18.c: 393: }
  3156                           ;SlaveComm_PIC18.c: 394: }
  3157  0007E0  D090               	goto	l360
  3158  0007E2                     l343:
  3159                           
  3160                           ;SlaveComm_PIC18.c: 395: else if (strmatch(parameters[0], "Conf") == 1)
  3161  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3162  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3163  0007EA  0E39               	movlw	low STR_16
  3164  0007EC  6E20               	movwf	strmatch@b,c
  3165  0007EE  0E06               	movlw	high STR_16
  3166  0007F0  6E21               	movwf	strmatch@b+1,c
  3167  0007F2  EC90  F00B         	call	_strmatch	;wreg free
  3168  0007F6  06E8               	decf	wreg,f,c
  3169  0007F8  A4D8               	btfss	status,2,c
  3170  0007FA  D083               	goto	l360
  3171                           
  3172                           ;SlaveComm_PIC18.c: 396: {
  3173                           ;SlaveComm_PIC18.c: 397: if (strmatch(parameters[1], "LEDB") == 1)
  3174  0007FC  0E0A               	movlw	10
  3175  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  3176  000800  6E1E               	movwf	strmatch@a,c
  3177  000802  0E00               	movlw	0
  3178  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3179  000806  6E1F               	movwf	strmatch@a+1,c
  3180  000808  0E2A               	movlw	low STR_7
  3181  00080A  6E20               	movwf	strmatch@b,c
  3182  00080C  0E06               	movlw	high STR_7
  3183  00080E  6E21               	movwf	strmatch@b+1,c
  3184  000810  EC90  F00B         	call	_strmatch	;wreg free
  3185  000814  06E8               	decf	wreg,f,c
  3186  000816  A4D8               	btfss	status,2,c
  3187  000818  D007               	goto	l350
  3188                           
  3189                           ;SlaveComm_PIC18.c: 398: {
  3190                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission(send_buffer);
  3191  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3192  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3193  000822  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3194                           
  3195                           ;SlaveComm_PIC18.c: 400: }
  3196  000826  D06D               	goto	l360
  3197  000828                     l350:
  3198                           
  3199                           ;SlaveComm_PIC18.c: 401: else if (strmatch(parameters[1], "Watts") == 1)
  3200  000828  0E0A               	movlw	10
  3201  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  3202  00082C  6E1E               	movwf	strmatch@a,c
  3203  00082E  0E00               	movlw	0
  3204  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3205  000832  6E1F               	movwf	strmatch@a+1,c
  3206  000834  0E24               	movlw	low STR_18
  3207  000836  6E20               	movwf	strmatch@b,c
  3208  000838  0E06               	movlw	high STR_18
  3209  00083A  6E21               	movwf	strmatch@b+1,c
  3210  00083C  EC90  F00B         	call	_strmatch	;wreg free
  3211  000840  06E8               	decf	wreg,f,c
  3212  000842  A4D8               	btfss	status,2,c
  3213  000844  D007               	goto	l352
  3214                           
  3215                           ;SlaveComm_PIC18.c: 402: {
  3216                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission(send_buffer);
  3217  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3218  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3219  00084E  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3220                           
  3221                           ;SlaveComm_PIC18.c: 404: }
  3222  000852  D057               	goto	l360
  3223  000854                     l352:
  3224                           
  3225                           ;SlaveComm_PIC18.c: 405: else if (strmatch(parameters[1], "EnUsed") == 1)
  3226  000854  0E0A               	movlw	10
  3227  000856  242F               	addwf	process_data_parameters@parameters,w,c
  3228  000858  6E1E               	movwf	strmatch@a,c
  3229  00085A  0E00               	movlw	0
  3230  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3231  00085E  6E1F               	movwf	strmatch@a+1,c
  3232  000860  0E17               	movlw	low STR_4
  3233  000862  6E20               	movwf	strmatch@b,c
  3234  000864  0E06               	movlw	high STR_4
  3235  000866  6E21               	movwf	strmatch@b+1,c
  3236  000868  EC90  F00B         	call	_strmatch	;wreg free
  3237  00086C  06E8               	decf	wreg,f,c
  3238  00086E  A4D8               	btfss	status,2,c
  3239  000870  D007               	goto	l354
  3240                           
  3241                           ;SlaveComm_PIC18.c: 406: {
  3242                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission(send_buffer);
  3243  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3244  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3245  00087A  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3246                           
  3247                           ;SlaveComm_PIC18.c: 408: }
  3248  00087E  D041               	goto	l360
  3249  000880                     l354:
  3250                           
  3251                           ;SlaveComm_PIC18.c: 409: else if (strmatch(parameters[1], "Volts") == 1)
  3252  000880  0E0A               	movlw	10
  3253  000882  242F               	addwf	process_data_parameters@parameters,w,c
  3254  000884  6E1E               	movwf	strmatch@a,c
  3255  000886  0E00               	movlw	0
  3256  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3257  00088A  6E1F               	movwf	strmatch@a+1,c
  3258  00088C  0E1E               	movlw	low STR_20
  3259  00088E  6E20               	movwf	strmatch@b,c
  3260  000890  0E06               	movlw	high STR_20
  3261  000892  6E21               	movwf	strmatch@b+1,c
  3262  000894  EC90  F00B         	call	_strmatch	;wreg free
  3263  000898  06E8               	decf	wreg,f,c
  3264  00089A  A4D8               	btfss	status,2,c
  3265  00089C  D007               	goto	l356
  3266                           
  3267                           ;SlaveComm_PIC18.c: 410: {
  3268                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission(send_buffer);
  3269  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3270  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3271  0008A6  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3272                           
  3273                           ;SlaveComm_PIC18.c: 412: }
  3274  0008AA  D02B               	goto	l360
  3275  0008AC                     l356:
  3276                           
  3277                           ;SlaveComm_PIC18.c: 413: else if (strmatch(parameters[1], "Amps") == 1)
  3278  0008AC  0E0A               	movlw	10
  3279  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  3280  0008B0  6E1E               	movwf	strmatch@a,c
  3281  0008B2  0E00               	movlw	0
  3282  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3283  0008B6  6E1F               	movwf	strmatch@a+1,c
  3284  0008B8  0E3E               	movlw	low STR_21
  3285  0008BA  6E20               	movwf	strmatch@b,c
  3286  0008BC  0E06               	movlw	high STR_21
  3287  0008BE  6E21               	movwf	strmatch@b+1,c
  3288  0008C0  EC90  F00B         	call	_strmatch	;wreg free
  3289  0008C4  06E8               	decf	wreg,f,c
  3290  0008C6  A4D8               	btfss	status,2,c
  3291  0008C8  D007               	goto	l358
  3292                           
  3293                           ;SlaveComm_PIC18.c: 414: {
  3294                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission(send_buffer);
  3295  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3296  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3297  0008D2  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3298                           
  3299                           ;SlaveComm_PIC18.c: 416: }
  3300  0008D6  D015               	goto	l360
  3301  0008D8                     l358:
  3302                           
  3303                           ;SlaveComm_PIC18.c: 417: else if (strmatch(parameters[1], "PSVersion") == 1)
  3304  0008D8  0E0A               	movlw	10
  3305  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  3306  0008DC  6E1E               	movwf	strmatch@a,c
  3307  0008DE  0E00               	movlw	0
  3308  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3309  0008E2  6E1F               	movwf	strmatch@a+1,c
  3310  0008E4  0E0D               	movlw	low STR_22
  3311  0008E6  6E20               	movwf	strmatch@b,c
  3312  0008E8  0E06               	movlw	high STR_22
  3313  0008EA  6E21               	movwf	strmatch@b+1,c
  3314  0008EC  EC90  F00B         	call	_strmatch	;wreg free
  3315  0008F0  06E8               	decf	wreg,f,c
  3316  0008F2  A4D8               	btfss	status,2,c
  3317  0008F4  D006               	goto	l360
  3318                           
  3319                           ;SlaveComm_PIC18.c: 418: {
  3320                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission(send_buffer);
  3321  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3322  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3323  0008FE  EC19  F00C         	call	_send_end_of_transmission	;wreg free
  3324  000902                     l360:
  3325                           
  3326                           ;SlaveComm_PIC18.c: 420: }
  3327                           ;SlaveComm_PIC18.c: 421: }
  3328                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3329  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  3330  000904  0012               	return	
  3331  000906                     __end_of_process_data_parameters:
  3332                           	opt stack 0
  3333                           tblptru	equ	0xFF8
  3334                           tblptrh	equ	0xFF7
  3335                           tblptrl	equ	0xFF6
  3336                           tablat	equ	0xFF5
  3337                           prodh	equ	0xFF4
  3338                           prodl	equ	0xFF3
  3339                           intcon	equ	0xFF2
  3340                           postinc0	equ	0xFEE
  3341                           wreg	equ	0xFE8
  3342                           postinc1	equ	0xFE6
  3343                           postdec1	equ	0xFE5
  3344                           fsr1h	equ	0xFE2
  3345                           fsr1l	equ	0xFE1
  3346                           indf2	equ	0xFDF
  3347                           postinc2	equ	0xFDE
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _strmatch *****************
  3353 ;; Defined at:
  3354 ;;		line 537 in file "SlaveComm_PIC18.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  a               2   29[COMRAM] PTR unsigned char 
  3357 ;;		 -> process_data@parameters(50), 
  3358 ;;  b               2   31[COMRAM] PTR unsigned char 
  3359 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3360 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3361 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3362 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  result          2   33[COMRAM] int 
  3365 ;;  match           1   35[COMRAM] unsigned char 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      unsigned char 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3375 ;;      Params:         4       0       0       0       0       0       0
  3376 ;;      Locals:         3       0       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0
  3378 ;;      Totals:         7       0       0       0       0       0       0
  3379 ;;Total ram usage:        7 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    2
  3382 ;; This function calls:
  3383 ;;		_strcmp2
  3384 ;; This function is called by:
  3385 ;;		_process_data_parameters
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text17
  3390  001720                     __ptext17:
  3391                           	opt stack 0
  3392  001720                     _strmatch:
  3393                           	opt stack 25
  3394                           
  3395                           ;SlaveComm_PIC18.c: 539: int result;
  3396                           ;SlaveComm_PIC18.c: 540: bool match;
  3397                           ;SlaveComm_PIC18.c: 542: result = strcmp2(a, b);
  3398                           
  3399                           ;incstack = 0
  3400  001720  C01E  F013         	movff	strmatch@a,strcmp2@a
  3401  001724  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3402  001728  C020  F015         	movff	strmatch@b,strcmp2@b
  3403  00172C  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3404  001730  EC29  F006         	call	_strcmp2	;wreg free
  3405  001734  C013  F022         	movff	?_strcmp2,strmatch@result
  3406  001738  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3407                           
  3408                           ;SlaveComm_PIC18.c: 544: match = (result == 0) ? 1 : 0;
  3409  00173C  5022               	movf	strmatch@result,w,c
  3410  00173E  1023               	iorwf	strmatch@result+1,w,c
  3411  001740  A4D8               	btfss	status,2,c
  3412  001742  D002               	goto	u2080
  3413  001744  0E01               	movlw	1
  3414  001746  D001               	goto	u2090
  3415  001748                     u2080:
  3416  001748  0E00               	movlw	0
  3417  00174A                     u2090:
  3418  00174A  6E24               	movwf	strmatch@match,c
  3419                           
  3420                           ;SlaveComm_PIC18.c: 546: return match;
  3421  00174C  5024               	movf	strmatch@match,w,c
  3422  00174E  0012               	return	
  3423  001750                     __end_of_strmatch:
  3424                           	opt stack 0
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           prodh	equ	0xFF4
  3430                           prodl	equ	0xFF3
  3431                           intcon	equ	0xFF2
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           postinc1	equ	0xFE6
  3435                           postdec1	equ	0xFE5
  3436                           fsr1h	equ	0xFE2
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function _strcmp2 *****************
  3445 ;; Defined at:
  3446 ;;		line 549 in file "SlaveComm_PIC18.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  a               2   18[COMRAM] PTR unsigned char 
  3449 ;;		 -> process_data@parameters(50), 
  3450 ;;  b               2   20[COMRAM] PTR unsigned char 
  3451 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3452 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3453 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3454 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  inx             2   27[COMRAM] int 
  3457 ;;  match           2   25[COMRAM] int 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2   18[COMRAM] int 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         4       0       0       0       0       0       0
  3468 ;;      Locals:         4       0       0       0       0       0       0
  3469 ;;      Temps:          3       0       0       0       0       0       0
  3470 ;;      Totals:        11       0       0       0       0       0       0
  3471 ;;Total ram usage:       11 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_strmatch
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text18
  3482  000C52                     __ptext18:
  3483                           	opt stack 0
  3484  000C52                     _strcmp2:
  3485                           	opt stack 25
  3486                           
  3487                           ;SlaveComm_PIC18.c: 551: int inx = 0;
  3488                           
  3489                           ;incstack = 0
  3490  000C52  0E00               	movlw	0
  3491  000C54  6E1D               	movwf	strcmp2@inx+1,c
  3492  000C56  0E00               	movlw	0
  3493  000C58  6E1C               	movwf	strcmp2@inx,c
  3494                           
  3495                           ;SlaveComm_PIC18.c: 552: int match = 0;
  3496  000C5A  0E00               	movlw	0
  3497  000C5C  6E1B               	movwf	strcmp2@match+1,c
  3498  000C5E  0E00               	movlw	0
  3499  000C60  6E1A               	movwf	strcmp2@match,c
  3500                           
  3501                           ;SlaveComm_PIC18.c: 554: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  3502  000C62  D035               	goto	l396
  3503  000C64                     
  3504                           ;SlaveComm_PIC18.c: 555: {
  3505                           ;SlaveComm_PIC18.c: 556: if (a[inx] > b[inx])
  3506  000C64  501C               	movf	strcmp2@inx,w,c
  3507  000C66  2413               	addwf	strcmp2@a,w,c
  3508  000C68  6ED9               	movwf	fsr2l,c
  3509  000C6A  501D               	movf	strcmp2@inx+1,w,c
  3510  000C6C  2014               	addwfc	strcmp2@a+1,w,c
  3511  000C6E  6EDA               	movwf	fsr2h,c
  3512  000C70  501C               	movf	strcmp2@inx,w,c
  3513  000C72  2415               	addwf	strcmp2@b,w,c
  3514  000C74  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3515  000C76  501D               	movf	strcmp2@inx+1,w,c
  3516  000C78  2016               	addwfc	strcmp2@b+1,w,c
  3517  000C7A  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3518  000C7C  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3519  000C80  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3520  000C84                     	if	0	;tblptru may be non-zero
  3521  000C84                     	endif
  3522  000C84                     	if	0	;tblptru may be non-zero
  3523  000C84                     	endif
  3524  000C84  50DE               	movf	postinc2,w,c
  3525  000C86  0009               	tblrd		*+
  3526  000C88  5CF5               	subwf	tablat,w,c
  3527  000C8A  B0D8               	btfsc	status,0,c
  3528  000C8C  D005               	goto	l398
  3529                           
  3530                           ;SlaveComm_PIC18.c: 557: {
  3531                           ;SlaveComm_PIC18.c: 558: match = 1;
  3532  000C8E  0E00               	movlw	0
  3533  000C90  6E1B               	movwf	strcmp2@match+1,c
  3534  000C92  0E01               	movlw	1
  3535  000C94  6E1A               	movwf	strcmp2@match,c
  3536                           
  3537                           ;SlaveComm_PIC18.c: 559: }
  3538  000C96  D019               	goto	l400
  3539  000C98                     l398:
  3540                           
  3541                           ;SlaveComm_PIC18.c: 560: else if (a[inx] < b[inx])
  3542  000C98  501C               	movf	strcmp2@inx,w,c
  3543  000C9A  2413               	addwf	strcmp2@a,w,c
  3544  000C9C  6ED9               	movwf	fsr2l,c
  3545  000C9E  501D               	movf	strcmp2@inx+1,w,c
  3546  000CA0  2014               	addwfc	strcmp2@a+1,w,c
  3547  000CA2  6EDA               	movwf	fsr2h,c
  3548  000CA4  50DF               	movf	indf2,w,c
  3549  000CA6  6E17               	movwf	??_strcmp2& (0+255),c
  3550  000CA8  501C               	movf	strcmp2@inx,w,c
  3551  000CAA  2415               	addwf	strcmp2@b,w,c
  3552  000CAC  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3553  000CAE  501D               	movf	strcmp2@inx+1,w,c
  3554  000CB0  2016               	addwfc	strcmp2@b+1,w,c
  3555  000CB2  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3556  000CB4  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3557  000CB8  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3558  000CBC                     	if	0	;tblptru may be non-zero
  3559  000CBC                     	endif
  3560  000CBC                     	if	0	;tblptru may be non-zero
  3561  000CBC                     	endif
  3562  000CBC  0008               	tblrd		*
  3563  000CBE  50F5               	movf	tablat,w,c
  3564  000CC0  5C17               	subwf	??_strcmp2,w,c
  3565  000CC2  B0D8               	btfsc	status,0,c
  3566  000CC4  D002               	goto	l400
  3567                           
  3568                           ;SlaveComm_PIC18.c: 561: {
  3569                           ;SlaveComm_PIC18.c: 562: match = -1;
  3570  000CC6  681A               	setf	strcmp2@match,c
  3571  000CC8  681B               	setf	strcmp2@match+1,c
  3572  000CCA                     l400:
  3573                           
  3574                           ;SlaveComm_PIC18.c: 567: }
  3575                           ;SlaveComm_PIC18.c: 569: inx++;
  3576                           
  3577                           ;SlaveComm_PIC18.c: 565: {
  3578  000CCA  4A1C               	infsnz	strcmp2@inx,f,c
  3579  000CCC  2A1D               	incf	strcmp2@inx+1,f,c
  3580  000CCE                     l396:
  3581  000CCE  501C               	movf	strcmp2@inx,w,c
  3582  000CD0  2413               	addwf	strcmp2@a,w,c
  3583  000CD2  6ED9               	movwf	fsr2l,c
  3584  000CD4  501D               	movf	strcmp2@inx+1,w,c
  3585  000CD6  2014               	addwfc	strcmp2@a+1,w,c
  3586  000CD8  6EDA               	movwf	fsr2h,c
  3587  000CDA  50DF               	movf	indf2,w,c
  3588  000CDC  B4D8               	btfsc	status,2,c
  3589  000CDE  D013               	goto	u1960
  3590  000CE0  501C               	movf	strcmp2@inx,w,c
  3591  000CE2  2415               	addwf	strcmp2@b,w,c
  3592  000CE4  6E17               	movwf	??_strcmp2& (0+255),c
  3593  000CE6  501D               	movf	strcmp2@inx+1,w,c
  3594  000CE8  2016               	addwfc	strcmp2@b+1,w,c
  3595  000CEA  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3596  000CEC  C017  FFF6         	movff	??_strcmp2,tblptrl
  3597  000CF0  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3598  000CF4                     	if	0	;tblptru may be non-zero
  3599  000CF4                     	endif
  3600  000CF4                     	if	0	;tblptru may be non-zero
  3601  000CF4                     	endif
  3602  000CF4  0008               	tblrd		*
  3603  000CF6  50F5               	movf	tablat,w,c
  3604  000CF8  0900               	iorlw	0
  3605  000CFA  B4D8               	btfsc	status,2,c
  3606  000CFC  D004               	goto	u1960
  3607  000CFE  501A               	movf	strcmp2@match,w,c
  3608  000D00  101B               	iorwf	strcmp2@match+1,w,c
  3609  000D02  B4D8               	btfsc	status,2,c
  3610  000D04  D7AF               	goto	l397
  3611  000D06                     u1960:
  3612                           
  3613                           ;SlaveComm_PIC18.c: 570: }
  3614                           ;SlaveComm_PIC18.c: 573: if ((a[inx] == '\0') && (b[inx] != '\0'))
  3615  000D06  501C               	movf	strcmp2@inx,w,c
  3616  000D08  2413               	addwf	strcmp2@a,w,c
  3617  000D0A  6ED9               	movwf	fsr2l,c
  3618  000D0C  501D               	movf	strcmp2@inx+1,w,c
  3619  000D0E  2014               	addwfc	strcmp2@a+1,w,c
  3620  000D10  6EDA               	movwf	fsr2h,c
  3621  000D12  50DF               	movf	indf2,w,c
  3622  000D14  A4D8               	btfss	status,2,c
  3623  000D16  D012               	goto	l406
  3624  000D18  501C               	movf	strcmp2@inx,w,c
  3625  000D1A  2415               	addwf	strcmp2@b,w,c
  3626  000D1C  6E17               	movwf	??_strcmp2& (0+255),c
  3627  000D1E  501D               	movf	strcmp2@inx+1,w,c
  3628  000D20  2016               	addwfc	strcmp2@b+1,w,c
  3629  000D22  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3630  000D24  C017  FFF6         	movff	??_strcmp2,tblptrl
  3631  000D28  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3632  000D2C                     	if	0	;tblptru may be non-zero
  3633  000D2C                     	endif
  3634  000D2C                     	if	0	;tblptru may be non-zero
  3635  000D2C                     	endif
  3636  000D2C  0008               	tblrd		*
  3637  000D2E  50F5               	movf	tablat,w,c
  3638  000D30  0900               	iorlw	0
  3639  000D32  B4D8               	btfsc	status,2,c
  3640  000D34  D003               	goto	l406
  3641                           
  3642                           ;SlaveComm_PIC18.c: 574: {
  3643                           ;SlaveComm_PIC18.c: 575: match = -1;
  3644  000D36  681A               	setf	strcmp2@match,c
  3645  000D38  681B               	setf	strcmp2@match+1,c
  3646                           
  3647                           ;SlaveComm_PIC18.c: 576: }
  3648  000D3A  D01C               	goto	l408
  3649  000D3C                     l406:
  3650                           
  3651                           ;SlaveComm_PIC18.c: 577: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  3652  000D3C  501C               	movf	strcmp2@inx,w,c
  3653  000D3E  2413               	addwf	strcmp2@a,w,c
  3654  000D40  6ED9               	movwf	fsr2l,c
  3655  000D42  501D               	movf	strcmp2@inx+1,w,c
  3656  000D44  2014               	addwfc	strcmp2@a+1,w,c
  3657  000D46  6EDA               	movwf	fsr2h,c
  3658  000D48  50DF               	movf	indf2,w,c
  3659  000D4A  B4D8               	btfsc	status,2,c
  3660  000D4C  D013               	goto	l408
  3661  000D4E  501C               	movf	strcmp2@inx,w,c
  3662  000D50  2415               	addwf	strcmp2@b,w,c
  3663  000D52  6E17               	movwf	??_strcmp2& (0+255),c
  3664  000D54  501D               	movf	strcmp2@inx+1,w,c
  3665  000D56  2016               	addwfc	strcmp2@b+1,w,c
  3666  000D58  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3667  000D5A  C017  FFF6         	movff	??_strcmp2,tblptrl
  3668  000D5E  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3669  000D62                     	if	0	;tblptru may be non-zero
  3670  000D62                     	endif
  3671  000D62                     	if	0	;tblptru may be non-zero
  3672  000D62                     	endif
  3673  000D62  0008               	tblrd		*
  3674  000D64  50F5               	movf	tablat,w,c
  3675  000D66  0900               	iorlw	0
  3676  000D68  A4D8               	btfss	status,2,c
  3677  000D6A  D004               	goto	l408
  3678                           
  3679                           ;SlaveComm_PIC18.c: 578: {
  3680                           ;SlaveComm_PIC18.c: 579: match = 1;
  3681  000D6C  0E00               	movlw	0
  3682  000D6E  6E1B               	movwf	strcmp2@match+1,c
  3683  000D70  0E01               	movlw	1
  3684  000D72  6E1A               	movwf	strcmp2@match,c
  3685  000D74                     l408:
  3686                           
  3687                           ;SlaveComm_PIC18.c: 580: }
  3688                           ;SlaveComm_PIC18.c: 582: return match;
  3689  000D74  C01A  F013         	movff	strcmp2@match,?_strcmp2
  3690  000D78  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  3691  000D7C  0012               	return	
  3692  000D7E                     __end_of_strcmp2:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           prodh	equ	0xFF4
  3699                           prodl	equ	0xFF3
  3700                           intcon	equ	0xFF2
  3701                           postinc0	equ	0xFEE
  3702                           wreg	equ	0xFE8
  3703                           postinc1	equ	0xFE6
  3704                           postdec1	equ	0xFE5
  3705                           fsr1h	equ	0xFE2
  3706                           fsr1l	equ	0xFE1
  3707                           indf2	equ	0xFDF
  3708                           postinc2	equ	0xFDE
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function _send_end_of_transmission *****************
  3714 ;; Defined at:
  3715 ;;		line 628 in file "SlaveComm_PIC18.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  3718 ;;		 -> communications@send_buffer(42), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3730 ;;      Params:         2       0       0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0
  3733 ;;      Totals:         2       0       0       0       0       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    4
  3737 ;; This function calls:
  3738 ;;		_command_builder1
  3739 ;; This function is called by:
  3740 ;;		_process_data_parameters
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text19
  3745  001832                     __ptext19:
  3746                           	opt stack 0
  3747  001832                     _send_end_of_transmission:
  3748                           	opt stack 23
  3749                           
  3750                           ;SlaveComm_PIC18.c: 630: command_builder1(send_buffer, "END");
  3751                           
  3752                           ;incstack = 0
  3753  001832  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3754  001836  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3755  00183A  0E4F               	movlw	low STR_1
  3756  00183C  6E21               	movwf	command_builder1@data1,c
  3757  00183E  0E06               	movlw	high STR_1
  3758  001840  6E22               	movwf	command_builder1@data1+1,c
  3759  001842  EC58  F00A         	call	_command_builder1	;wreg free
  3760  001846  0012               	return	
  3761  001848                     __end_of_send_end_of_transmission:
  3762                           	opt stack 0
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           prodh	equ	0xFF4
  3768                           prodl	equ	0xFF3
  3769                           intcon	equ	0xFF2
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           postinc1	equ	0xFE6
  3773                           postdec1	equ	0xFE5
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _command_builder1 *****************
  3783 ;; Defined at:
  3784 ;;		line 430 in file "SlaveComm_PIC18.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  3787 ;;		 -> communications@send_buffer(42), 
  3788 ;;  data1           2   32[COMRAM] PTR unsigned char 
  3789 ;;		 -> STR_23(4), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3801 ;;      Params:         4       0       0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0
  3804 ;;      Totals:         4       0       0       0       0       0       0
  3805 ;;Total ram usage:        4 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    3
  3808 ;; This function calls:
  3809 ;;		_command_builder_add_char
  3810 ;;		_command_builder_add_string
  3811 ;; This function is called by:
  3812 ;;		_send_end_of_transmission
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text20
  3817  0014B0                     __ptext20:
  3818                           	opt stack 0
  3819  0014B0                     _command_builder1:
  3820                           	opt stack 23
  3821                           
  3822                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  3823                           
  3824                           ;incstack = 0
  3825  0014B0  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3826  0014B4  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3827  0014B8  0E23               	movlw	35
  3828  0014BA  6E15               	movwf	command_builder_add_char@data,c
  3829  0014BC  EC83  F00A         	call	_command_builder_add_char	;wreg free
  3830                           
  3831                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  3832  0014C0  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3833  0014C4  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3834  0014C8  0E23               	movlw	35
  3835  0014CA  6E15               	movwf	command_builder_add_char@data,c
  3836  0014CC  EC83  F00A         	call	_command_builder_add_char	;wreg free
  3837                           
  3838                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  3839  0014D0  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3840  0014D4  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3841  0014D8  0E21               	movlw	33
  3842  0014DA  6E15               	movwf	command_builder_add_char@data,c
  3843  0014DC  EC83  F00A         	call	_command_builder_add_char	;wreg free
  3844                           
  3845                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  3846  0014E0  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  3847  0014E4  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  3848  0014E8  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  3849  0014EC  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  3850  0014F0  EC85  F009         	call	_command_builder_add_string	;wreg free
  3851                           
  3852                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, '*');
  3853  0014F4  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3854  0014F8  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3855  0014FC  0E2A               	movlw	42
  3856  0014FE  6E15               	movwf	command_builder_add_char@data,c
  3857  001500  EC83  F00A         	call	_command_builder_add_char	;wreg free
  3858  001504  0012               	return	
  3859  001506                     __end_of_command_builder1:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           intcon	equ	0xFF2
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           postinc1	equ	0xFE6
  3871                           postdec1	equ	0xFE5
  3872                           fsr1h	equ	0xFE2
  3873                           fsr1l	equ	0xFE1
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function _com_command_setEnergyUsed *****************
  3881 ;; Defined at:
  3882 ;;		line 665 in file "SlaveComm_PIC18.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3885 ;;		 -> communications@send_buffer(42), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  temp           12    0[BANK0 ] unsigned char [12]
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         2       0       0       0       0       0       0
  3898 ;;      Locals:         0      12       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         2      12       0       0       0       0       0
  3901 ;;Total ram usage:       14 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    4
  3904 ;; This function calls:
  3905 ;;		_command_builder3
  3906 ;;		_ultoa
  3907 ;; This function is called by:
  3908 ;;		_resetCommunications
  3909 ;;		_process_data_parameters
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text21
  3914  0015FC                     __ptext21:
  3915                           	opt stack 0
  3916  0015FC                     _com_command_setEnergyUsed:
  3917                           	opt stack 24
  3918                           
  3919                           ;SlaveComm_PIC18.c: 667: char temp[12];
  3920                           ;SlaveComm_PIC18.c: 669: ultoa(temp, meterEnergyUsed, 10);
  3921                           
  3922                           ;incstack = 0
  3923  0015FC  0EC0               	movlw	low com_command_setEnergyUsed@temp
  3924  0015FE  6E20               	movwf	ultoa@buf,c
  3925  001600  0E00               	movlw	high com_command_setEnergyUsed@temp
  3926  001602  6E21               	movwf	ultoa@buf+1,c
  3927  001604  C064  F022         	movff	_meterEnergyUsed,ultoa@val
  3928  001608  C065  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  3929  00160C  C066  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  3930  001610  C067  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  3931  001614  0E00               	movlw	0
  3932  001616  6E27               	movwf	ultoa@base+1,c
  3933  001618  0E0A               	movlw	10
  3934  00161A  6E26               	movwf	ultoa@base,c
  3935  00161C  ECBF  F006         	call	_ultoa	;wreg free
  3936                           
  3937                           ;SlaveComm_PIC18.c: 672: command_builder3(send_buffer, "Set", "EnUsed", temp);
  3938  001620  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  3939  001624  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  3940  001628  0E57               	movlw	low STR_2
  3941  00162A  6E21               	movwf	command_builder3@data1,c
  3942  00162C  0E06               	movlw	high STR_2
  3943  00162E  6E22               	movwf	command_builder3@data1+1,c
  3944  001630  0E17               	movlw	low STR_4
  3945  001632  6E23               	movwf	command_builder3@data2,c
  3946  001634  0E06               	movlw	high STR_4
  3947  001636  6E24               	movwf	command_builder3@data2+1,c
  3948  001638  0EC0               	movlw	low com_command_setEnergyUsed@temp
  3949  00163A  6E25               	movwf	command_builder3@data3,c
  3950  00163C  0E00               	movlw	high com_command_setEnergyUsed@temp
  3951  00163E  6E26               	movwf	command_builder3@data3+1,c
  3952  001640  EC14  F008         	call	_command_builder3	;wreg free
  3953  001644  0012               	return	
  3954  001646                     __end_of_com_command_setEnergyUsed:
  3955                           	opt stack 0
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           postinc1	equ	0xFE6
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           postinc2	equ	0xFDE
  3971                           fsr2h	equ	0xFDA
  3972                           fsr2l	equ	0xFD9
  3973                           status	equ	0xFD8
  3974                           
  3975 ;; *************** function _ultoa *****************
  3976 ;; Defined at:
  3977 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  buf             2   31[COMRAM] PTR unsigned char 
  3980 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  3981 ;;  val             4   33[COMRAM] unsigned long 
  3982 ;;  base            2   37[COMRAM] int 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  v               4   39[COMRAM] unsigned long 
  3985 ;;  c               1   43[COMRAM] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2   31[COMRAM] PTR unsigned char 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3995 ;;      Params:         8       0       0       0       0       0       0
  3996 ;;      Locals:         5       0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0
  3998 ;;      Totals:        13       0       0       0       0       0       0
  3999 ;;Total ram usage:       13 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    2
  4002 ;; This function calls:
  4003 ;;		___lldiv
  4004 ;;		___llmod
  4005 ;; This function is called by:
  4006 ;;		_com_command_setPower
  4007 ;;		_com_command_setEnergyUsed
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text22
  4012  000D7E                     __ptext22:
  4013                           	opt stack 0
  4014  000D7E                     _ultoa:
  4015                           	opt stack 25
  4016                           
  4017                           ;incstack = 0
  4018  000D7E  C022  F028         	movff	ultoa@val,ultoa@v
  4019  000D82  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4020  000D86  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4021  000D8A  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4022  000D8E  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4023  000D92  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4024  000D96  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4025  000D9A  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4026  000D9E  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4027  000DA2  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4028  000DA6  0E00               	movlw	0
  4029  000DA8  BE18               	btfsc	___lldiv@divisor+1,7,c
  4030  000DAA  0EFF               	movlw	-1
  4031  000DAC  6E19               	movwf	___lldiv@divisor+2,c
  4032  000DAE  6E1A               	movwf	___lldiv@divisor+3,c
  4033  000DB0  EC44  F009         	call	___lldiv	;wreg free
  4034  000DB4  C013  F028         	movff	?___lldiv,ultoa@v
  4035  000DB8  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4036  000DBC  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4037  000DC0  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4038  000DC4  4A20               	infsnz	ultoa@buf,f,c
  4039  000DC6  2A21               	incf	ultoa@buf+1,f,c
  4040  000DC8  5028               	movf	ultoa@v,w,c
  4041  000DCA  1029               	iorwf	ultoa@v+1,w,c
  4042  000DCC  102A               	iorwf	ultoa@v+2,w,c
  4043  000DCE  102B               	iorwf	ultoa@v+3,w,c
  4044  000DD0  A4D8               	btfss	status,2,c
  4045  000DD2  D7DD               	goto	l869
  4046  000DD4  C020  FFD9         	movff	ultoa@buf,fsr2l
  4047  000DD8  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4048  000DDC  0E00               	movlw	0
  4049  000DDE  6EDF               	movwf	indf2,c
  4050  000DE0  0620               	decf	ultoa@buf,f,c
  4051  000DE2  A0D8               	btfss	status,0,c
  4052  000DE4  0621               	decf	ultoa@buf+1,f,c
  4053  000DE6  C022  F013         	movff	ultoa@val,___llmod@dividend
  4054  000DEA  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4055  000DEE  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4056  000DF2  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4057  000DF6  C026  F017         	movff	ultoa@base,___llmod@divisor
  4058  000DFA  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4059  000DFE  0E00               	movlw	0
  4060  000E00  BE18               	btfsc	___llmod@divisor+1,7,c
  4061  000E02  0EFF               	movlw	-1
  4062  000E04  6E19               	movwf	___llmod@divisor+2,c
  4063  000E06  6E1A               	movwf	___llmod@divisor+3,c
  4064  000E08  ECC3  F009         	call	___llmod	;wreg free
  4065  000E0C  5013               	movf	?___llmod,w,c
  4066  000E0E  6E2C               	movwf	ultoa@c,c
  4067  000E10  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4068  000E14  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4069  000E18  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4070  000E1C  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4071  000E20  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4072  000E24  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4073  000E28  0E00               	movlw	0
  4074  000E2A  BE18               	btfsc	___lldiv@divisor+1,7,c
  4075  000E2C  0EFF               	movlw	-1
  4076  000E2E  6E19               	movwf	___lldiv@divisor+2,c
  4077  000E30  6E1A               	movwf	___lldiv@divisor+3,c
  4078  000E32  EC44  F009         	call	___lldiv	;wreg free
  4079  000E36  C013  F022         	movff	?___lldiv,ultoa@val
  4080  000E3A  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4081  000E3E  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4082  000E42  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4083  000E46  0E09               	movlw	9
  4084  000E48  642C               	cpfsgt	ultoa@c,c
  4085  000E4A  D002               	goto	l872
  4086  000E4C  0E07               	movlw	7
  4087  000E4E  262C               	addwf	ultoa@c,f,c
  4088  000E50                     l872:
  4089  000E50  0E30               	movlw	48
  4090  000E52  262C               	addwf	ultoa@c,f,c
  4091  000E54  C020  FFD9         	movff	ultoa@buf,fsr2l
  4092  000E58  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4093  000E5C  C02C  FFDF         	movff	ultoa@c,indf2
  4094  000E60  0620               	decf	ultoa@buf,f,c
  4095  000E62  A0D8               	btfss	status,0,c
  4096  000E64  0621               	decf	ultoa@buf+1,f,c
  4097  000E66  5022               	movf	ultoa@val,w,c
  4098  000E68  1023               	iorwf	ultoa@val+1,w,c
  4099  000E6A  1024               	iorwf	ultoa@val+2,w,c
  4100  000E6C  1025               	iorwf	ultoa@val+3,w,c
  4101  000E6E  B4D8               	btfsc	status,2,c
  4102  000E70  0012               	return	
  4103  000E72  D7B9               	goto	l871
  4104  000E74                     __end_of_ultoa:
  4105                           	opt stack 0
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           postinc0	equ	0xFEE
  4114                           wreg	equ	0xFE8
  4115                           postinc1	equ	0xFE6
  4116                           postdec1	equ	0xFE5
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           indf2	equ	0xFDF
  4120                           postinc2	equ	0xFDE
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function ___llmod *****************
  4126 ;; Defined at:
  4127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  dividend        4   18[COMRAM] unsigned long 
  4130 ;;  divisor         4   22[COMRAM] unsigned long 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  counter         1   26[COMRAM] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  4   18[COMRAM] unsigned long 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         8       0       0       0       0       0       0
  4143 ;;      Locals:         1       0       0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0
  4145 ;;      Totals:         9       0       0       0       0       0       0
  4146 ;;Total ram usage:        9 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_ultoa
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text23
  4157  001386                     __ptext23:
  4158                           	opt stack 0
  4159  001386                     ___llmod:
  4160                           	opt stack 25
  4161                           
  4162                           ;incstack = 0
  4163  001386  5017               	movf	___llmod@divisor,w,c
  4164  001388  1018               	iorwf	___llmod@divisor+1,w,c
  4165  00138A  1019               	iorwf	___llmod@divisor+2,w,c
  4166  00138C  101A               	iorwf	___llmod@divisor+3,w,c
  4167  00138E  B4D8               	btfsc	status,2,c
  4168  001390  D024               	goto	l831
  4169  001392  0E01               	movlw	1
  4170  001394  6E1B               	movwf	___llmod@counter,c
  4171  001396  D006               	goto	l826
  4172  001398  90D8               	bcf	status,0,c
  4173  00139A  3617               	rlcf	___llmod@divisor,f,c
  4174  00139C  3618               	rlcf	___llmod@divisor+1,f,c
  4175  00139E  3619               	rlcf	___llmod@divisor+2,f,c
  4176  0013A0  361A               	rlcf	___llmod@divisor+3,f,c
  4177  0013A2  2A1B               	incf	___llmod@counter,f,c
  4178  0013A4                     l826:
  4179  0013A4  AE1A               	btfss	___llmod@divisor+3,7,c
  4180  0013A6  D7F8               	goto	l827
  4181  0013A8                     u1900:
  4182  0013A8  5017               	movf	___llmod@divisor,w,c
  4183  0013AA  5C13               	subwf	___llmod@dividend,w,c
  4184  0013AC  5018               	movf	___llmod@divisor+1,w,c
  4185  0013AE  5814               	subwfb	___llmod@dividend+1,w,c
  4186  0013B0  5019               	movf	___llmod@divisor+2,w,c
  4187  0013B2  5815               	subwfb	___llmod@dividend+2,w,c
  4188  0013B4  501A               	movf	___llmod@divisor+3,w,c
  4189  0013B6  5816               	subwfb	___llmod@dividend+3,w,c
  4190  0013B8  A0D8               	btfss	status,0,c
  4191  0013BA  D008               	goto	l830
  4192  0013BC  5017               	movf	___llmod@divisor,w,c
  4193  0013BE  5E13               	subwf	___llmod@dividend,f,c
  4194  0013C0  5018               	movf	___llmod@divisor+1,w,c
  4195  0013C2  5A14               	subwfb	___llmod@dividend+1,f,c
  4196  0013C4  5019               	movf	___llmod@divisor+2,w,c
  4197  0013C6  5A15               	subwfb	___llmod@dividend+2,f,c
  4198  0013C8  501A               	movf	___llmod@divisor+3,w,c
  4199  0013CA  5A16               	subwfb	___llmod@dividend+3,f,c
  4200  0013CC                     l830:
  4201  0013CC  90D8               	bcf	status,0,c
  4202  0013CE  321A               	rrcf	___llmod@divisor+3,f,c
  4203  0013D0  3219               	rrcf	___llmod@divisor+2,f,c
  4204  0013D2  3218               	rrcf	___llmod@divisor+1,f,c
  4205  0013D4  3217               	rrcf	___llmod@divisor,f,c
  4206  0013D6  2E1B               	decfsz	___llmod@counter,f,c
  4207  0013D8  D7E7               	goto	u1900
  4208  0013DA                     l831:
  4209  0013DA  C013  F013         	movff	___llmod@dividend,?___llmod
  4210  0013DE  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4211  0013E2  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4212  0013E6  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4213  0013EA  0012               	return		;funcret
  4214  0013EC                     __end_of___llmod:
  4215                           	opt stack 0
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           prodh	equ	0xFF4
  4221                           prodl	equ	0xFF3
  4222                           intcon	equ	0xFF2
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           postinc1	equ	0xFE6
  4226                           postdec1	equ	0xFE5
  4227                           fsr1h	equ	0xFE2
  4228                           fsr1l	equ	0xFE1
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function ___lldiv *****************
  4236 ;; Defined at:
  4237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  dividend        4   18[COMRAM] unsigned long 
  4240 ;;  divisor         4   22[COMRAM] unsigned long 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  quotient        4   26[COMRAM] unsigned long 
  4243 ;;  counter         1   30[COMRAM] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  4   18[COMRAM] unsigned long 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4253 ;;      Params:         8       0       0       0       0       0       0
  4254 ;;      Locals:         5       0       0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0
  4256 ;;      Totals:        13       0       0       0       0       0       0
  4257 ;;Total ram usage:       13 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_powerPulseCheck
  4264 ;;		_ultoa
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text24
  4269  001288                     __ptext24:
  4270                           	opt stack 0
  4271  001288                     ___lldiv:
  4272                           	opt stack 28
  4273                           
  4274                           ;incstack = 0
  4275  001288  0E00               	movlw	0
  4276  00128A  6E1B               	movwf	___lldiv@quotient,c
  4277  00128C  0E00               	movlw	0
  4278  00128E  6E1C               	movwf	___lldiv@quotient+1,c
  4279  001290  0E00               	movlw	0
  4280  001292  6E1D               	movwf	___lldiv@quotient+2,c
  4281  001294  0E00               	movlw	0
  4282  001296  6E1E               	movwf	___lldiv@quotient+3,c
  4283  001298  5017               	movf	___lldiv@divisor,w,c
  4284  00129A  1018               	iorwf	___lldiv@divisor+1,w,c
  4285  00129C  1019               	iorwf	___lldiv@divisor+2,w,c
  4286  00129E  101A               	iorwf	___lldiv@divisor+3,w,c
  4287  0012A0  B4D8               	btfsc	status,2,c
  4288  0012A2  D02A               	goto	l821
  4289  0012A4  0E01               	movlw	1
  4290  0012A6  6E1F               	movwf	___lldiv@counter,c
  4291  0012A8  D006               	goto	l816
  4292  0012AA  90D8               	bcf	status,0,c
  4293  0012AC  3617               	rlcf	___lldiv@divisor,f,c
  4294  0012AE  3618               	rlcf	___lldiv@divisor+1,f,c
  4295  0012B0  3619               	rlcf	___lldiv@divisor+2,f,c
  4296  0012B2  361A               	rlcf	___lldiv@divisor+3,f,c
  4297  0012B4  2A1F               	incf	___lldiv@counter,f,c
  4298  0012B6                     l816:
  4299  0012B6  AE1A               	btfss	___lldiv@divisor+3,7,c
  4300  0012B8  D7F8               	goto	l817
  4301  0012BA                     u1870:
  4302  0012BA  90D8               	bcf	status,0,c
  4303  0012BC  361B               	rlcf	___lldiv@quotient,f,c
  4304  0012BE  361C               	rlcf	___lldiv@quotient+1,f,c
  4305  0012C0  361D               	rlcf	___lldiv@quotient+2,f,c
  4306  0012C2  361E               	rlcf	___lldiv@quotient+3,f,c
  4307  0012C4  5017               	movf	___lldiv@divisor,w,c
  4308  0012C6  5C13               	subwf	___lldiv@dividend,w,c
  4309  0012C8  5018               	movf	___lldiv@divisor+1,w,c
  4310  0012CA  5814               	subwfb	___lldiv@dividend+1,w,c
  4311  0012CC  5019               	movf	___lldiv@divisor+2,w,c
  4312  0012CE  5815               	subwfb	___lldiv@dividend+2,w,c
  4313  0012D0  501A               	movf	___lldiv@divisor+3,w,c
  4314  0012D2  5816               	subwfb	___lldiv@dividend+3,w,c
  4315  0012D4  A0D8               	btfss	status,0,c
  4316  0012D6  D009               	goto	l820
  4317  0012D8  5017               	movf	___lldiv@divisor,w,c
  4318  0012DA  5E13               	subwf	___lldiv@dividend,f,c
  4319  0012DC  5018               	movf	___lldiv@divisor+1,w,c
  4320  0012DE  5A14               	subwfb	___lldiv@dividend+1,f,c
  4321  0012E0  5019               	movf	___lldiv@divisor+2,w,c
  4322  0012E2  5A15               	subwfb	___lldiv@dividend+2,f,c
  4323  0012E4  501A               	movf	___lldiv@divisor+3,w,c
  4324  0012E6  5A16               	subwfb	___lldiv@dividend+3,f,c
  4325  0012E8  801B               	bsf	___lldiv@quotient,0,c
  4326  0012EA                     l820:
  4327  0012EA  90D8               	bcf	status,0,c
  4328  0012EC  321A               	rrcf	___lldiv@divisor+3,f,c
  4329  0012EE  3219               	rrcf	___lldiv@divisor+2,f,c
  4330  0012F0  3218               	rrcf	___lldiv@divisor+1,f,c
  4331  0012F2  3217               	rrcf	___lldiv@divisor,f,c
  4332  0012F4  2E1F               	decfsz	___lldiv@counter,f,c
  4333  0012F6  D7E1               	goto	u1870
  4334  0012F8                     l821:
  4335  0012F8  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4336  0012FC  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4337  001300  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4338  001304  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4339  001308  0012               	return		;funcret
  4340  00130A                     __end_of___lldiv:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           prodh	equ	0xFF4
  4347                           prodl	equ	0xFF3
  4348                           intcon	equ	0xFF2
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postinc1	equ	0xFE6
  4352                           postdec1	equ	0xFE5
  4353                           fsr1h	equ	0xFE2
  4354                           fsr1l	equ	0xFE1
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           fsr2h	equ	0xFDA
  4358                           fsr2l	equ	0xFD9
  4359                           status	equ	0xFD8
  4360                           
  4361 ;; *************** function _command_builder3 *****************
  4362 ;; Defined at:
  4363 ;;		line 454 in file "SlaveComm_PIC18.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4366 ;;		 -> communications@send_buffer(42), 
  4367 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4368 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4369 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4370 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4371 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4372 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4373 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4374 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4375 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4387 ;;      Params:         8       0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0
  4390 ;;      Totals:         8       0       0       0       0       0       0
  4391 ;;Total ram usage:        8 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    3
  4394 ;; This function calls:
  4395 ;;		_command_builder_add_char
  4396 ;;		_command_builder_add_string
  4397 ;; This function is called by:
  4398 ;;		_process_data_parameters
  4399 ;;		_com_command_setPower
  4400 ;;		_com_command_setEnergyUsed
  4401 ;;		_com_command_setVersion
  4402 ;;		_com_command_setVolts
  4403 ;;		_com_command_setAmps
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text25
  4408  001028                     __ptext25:
  4409                           	opt stack 0
  4410  001028                     _command_builder3:
  4411                           	opt stack 24
  4412                           
  4413                           ;SlaveComm_PIC18.c: 456: command_builder_add_char(send_buffer, '#');
  4414                           
  4415                           ;incstack = 0
  4416  001028  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4417  00102C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4418  001030  0E23               	movlw	35
  4419  001032  6E15               	movwf	command_builder_add_char@data,c
  4420  001034  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4421                           
  4422                           ;SlaveComm_PIC18.c: 457: command_builder_add_char(send_buffer, '#');
  4423  001038  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4424  00103C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4425  001040  0E23               	movlw	35
  4426  001042  6E15               	movwf	command_builder_add_char@data,c
  4427  001044  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4428                           
  4429                           ;SlaveComm_PIC18.c: 458: command_builder_add_char(send_buffer, '!');
  4430  001048  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4431  00104C  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4432  001050  0E21               	movlw	33
  4433  001052  6E15               	movwf	command_builder_add_char@data,c
  4434  001054  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4435                           
  4436                           ;SlaveComm_PIC18.c: 459: command_builder_add_string(send_buffer, data1);
  4437  001058  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4438  00105C  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4439  001060  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4440  001064  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4441  001068  EC85  F009         	call	_command_builder_add_string	;wreg free
  4442                           
  4443                           ;SlaveComm_PIC18.c: 460: command_builder_add_char(send_buffer, ';');
  4444  00106C  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4445  001070  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4446  001074  0E3B               	movlw	59
  4447  001076  6E15               	movwf	command_builder_add_char@data,c
  4448  001078  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4449                           
  4450                           ;SlaveComm_PIC18.c: 461: command_builder_add_string(send_buffer, data2);
  4451  00107C  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4452  001080  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4453  001084  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4454  001088  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4455  00108C  EC85  F009         	call	_command_builder_add_string	;wreg free
  4456                           
  4457                           ;SlaveComm_PIC18.c: 462: command_builder_add_char(send_buffer, ';');
  4458  001090  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4459  001094  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4460  001098  0E3B               	movlw	59
  4461  00109A  6E15               	movwf	command_builder_add_char@data,c
  4462  00109C  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4463                           
  4464                           ;SlaveComm_PIC18.c: 463: command_builder_add_string(send_buffer, data3);
  4465  0010A0  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4466  0010A4  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4467  0010A8  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4468  0010AC  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4469  0010B0  EC85  F009         	call	_command_builder_add_string	;wreg free
  4470                           
  4471                           ;SlaveComm_PIC18.c: 464: command_builder_add_char(send_buffer, '*');
  4472  0010B4  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4473  0010B8  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4474  0010BC  0E2A               	movlw	42
  4475  0010BE  6E15               	movwf	command_builder_add_char@data,c
  4476  0010C0  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4477  0010C4  0012               	return	
  4478  0010C6                     __end_of_command_builder3:
  4479                           	opt stack 0
  4480                           tblptru	equ	0xFF8
  4481                           tblptrh	equ	0xFF7
  4482                           tblptrl	equ	0xFF6
  4483                           tablat	equ	0xFF5
  4484                           prodh	equ	0xFF4
  4485                           prodl	equ	0xFF3
  4486                           intcon	equ	0xFF2
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           postinc1	equ	0xFE6
  4490                           postdec1	equ	0xFE5
  4491                           fsr1h	equ	0xFE2
  4492                           fsr1l	equ	0xFE1
  4493                           indf2	equ	0xFDF
  4494                           postinc2	equ	0xFDE
  4495                           fsr2h	equ	0xFDA
  4496                           fsr2l	equ	0xFD9
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function _command_builder_add_string *****************
  4500 ;; Defined at:
  4501 ;;		line 499 in file "SlaveComm_PIC18.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4504 ;;		 -> communications@send_buffer(42), 
  4505 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4506 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4507 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4508 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4509 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4510 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  4511 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4512 ;;		 -> STR_10(5), STR_9(4), 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  inx             2   28[COMRAM] int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4524 ;;      Params:         4       0       0       0       0       0       0
  4525 ;;      Locals:         2       0       0       0       0       0       0
  4526 ;;      Temps:          2       0       0       0       0       0       0
  4527 ;;      Totals:         8       0       0       0       0       0       0
  4528 ;;Total ram usage:        8 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    2
  4531 ;; This function calls:
  4532 ;;		_command_builder_add_char
  4533 ;; This function is called by:
  4534 ;;		_command_builder1
  4535 ;;		_command_builder3
  4536 ;;		_command_builder2
  4537 ;;		_command_builder4
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text26
  4542  00130A                     __ptext26:
  4543                           	opt stack 0
  4544  00130A                     _command_builder_add_string:
  4545                           	opt stack 24
  4546                           
  4547                           ;SlaveComm_PIC18.c: 501: for (int inx = 0; data_string[inx] != '\0'; inx++)
  4548                           
  4549                           ;incstack = 0
  4550  00130A  0E00               	movlw	0
  4551  00130C  6E1E               	movwf	command_builder_add_string@inx+1,c
  4552  00130E  0E00               	movlw	0
  4553  001310  6E1D               	movwf	command_builder_add_string@inx,c
  4554  001312  D01F               	goto	l380
  4555  001314                     
  4556                           ;SlaveComm_PIC18.c: 502: {
  4557                           ;SlaveComm_PIC18.c: 503: command_builder_add_char(send_buffer, data_string[inx]);
  4558  001314  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4559  001318  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4560  00131C  501D               	movf	command_builder_add_string@inx,w,c
  4561  00131E  2419               	addwf	command_builder_add_string@data_string,w,c
  4562  001320  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4563  001322  501E               	movf	command_builder_add_string@inx+1,w,c
  4564  001324  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4565  001326  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4566  001328  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4567  00132C  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4568  001330  6AF8               	clrf	tblptru,c
  4569  001332  0E05               	movlw	(high __ramtop+-1)
  4570  001334  64F7               	cpfsgt	tblptrh,c
  4571  001336  D003               	bra	u1837
  4572  001338  0008               	tblrd		*
  4573  00133A  50F5               	movf	tablat,w,c
  4574  00133C  D005               	bra	u1830
  4575  00133E                     u1837:
  4576  00133E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4577  001342  CFF7 FFE2          	movff	tblptrh,fsr1h
  4578  001346  50E7               	movf	indf1,w,c
  4579  001348                     u1830:
  4580  001348  6E15               	movwf	command_builder_add_char@data,c
  4581  00134A  EC83  F00A         	call	_command_builder_add_char	;wreg free
  4582  00134E  4A1D               	infsnz	command_builder_add_string@inx,f,c
  4583  001350  2A1E               	incf	command_builder_add_string@inx+1,f,c
  4584  001352                     l380:
  4585  001352  501D               	movf	command_builder_add_string@inx,w,c
  4586  001354  2419               	addwf	command_builder_add_string@data_string,w,c
  4587  001356  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4588  001358  501E               	movf	command_builder_add_string@inx+1,w,c
  4589  00135A  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4590  00135C  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4591  00135E  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4592  001362  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4593  001366  6AF8               	clrf	tblptru,c
  4594  001368  0E05               	movlw	(high __ramtop+-1)
  4595  00136A  64F7               	cpfsgt	tblptrh,c
  4596  00136C  D003               	bra	u1847
  4597  00136E  0008               	tblrd		*
  4598  001370  50F5               	movf	tablat,w,c
  4599  001372  D005               	bra	u1840
  4600  001374                     u1847:
  4601  001374  CFF6 FFE1          	movff	tblptrl,fsr1l
  4602  001378  CFF7 FFE2          	movff	tblptrh,fsr1h
  4603  00137C  50E7               	movf	indf1,w,c
  4604  00137E                     u1840:
  4605  00137E  0900               	iorlw	0
  4606  001380  B4D8               	btfsc	status,2,c
  4607  001382  0012               	return	
  4608  001384  D7C7               	goto	l381
  4609  001386                     __end_of_command_builder_add_string:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           intcon	equ	0xFF2
  4618                           postinc0	equ	0xFEE
  4619                           wreg	equ	0xFE8
  4620                           indf1	equ	0xFE7
  4621                           postinc1	equ	0xFE6
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           indf2	equ	0xFDF
  4626                           postinc2	equ	0xFDE
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _command_builder_add_char *****************
  4632 ;; Defined at:
  4633 ;;		line 486 in file "SlaveComm_PIC18.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4636 ;;		 -> communications@send_buffer(42), 
  4637 ;;  data            1   20[COMRAM] unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4649 ;;      Params:         3       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0
  4651 ;;      Temps:          1       0       0       0       0       0       0
  4652 ;;      Totals:         4       0       0       0       0       0       0
  4653 ;;Total ram usage:        4 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_command_builder1
  4660 ;;		_command_builder3
  4661 ;;		_command_builder_add_string
  4662 ;;		_command_builder2
  4663 ;;		_command_builder4
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text27
  4668  001506                     __ptext27:
  4669                           	opt stack 0
  4670  001506                     _command_builder_add_char:
  4671                           	opt stack 24
  4672                           
  4673                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  4674                           
  4675                           ;incstack = 0
  4676  001506  EE20 F028          	lfsr	2,40
  4677  00150A  5013               	movf	command_builder_add_char@send_buffer,w,c
  4678  00150C  26D9               	addwf	fsr2l,f,c
  4679  00150E  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4680  001510  22DA               	addwfc	fsr2h,f,c
  4681  001512  50DF               	movf	indf2,w,c
  4682  001514  6E16               	movwf	??_command_builder_add_char& (0+255),c
  4683  001516  5016               	movf	??_command_builder_add_char,w,c
  4684  001518  0D01               	mullw	1
  4685  00151A  50F3               	movf	prodl,w,c
  4686  00151C  2413               	addwf	command_builder_add_char@send_buffer,w,c
  4687  00151E  6ED9               	movwf	fsr2l,c
  4688  001520  50F4               	movf	prodh,w,c
  4689  001522  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4690  001524  6EDA               	movwf	fsr2h,c
  4691  001526  C015  FFDF         	movff	command_builder_add_char@data,indf2
  4692                           
  4693                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  4694  00152A  EE20 F028          	lfsr	2,40
  4695  00152E  5013               	movf	command_builder_add_char@send_buffer,w,c
  4696  001530  26D9               	addwf	fsr2l,f,c
  4697  001532  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4698  001534  22DA               	addwfc	fsr2h,f,c
  4699  001536  2ADF               	incf	indf2,f,c
  4700                           
  4701                           ;SlaveComm_PIC18.c: 491: if (send_buffer->write_position >= 40)
  4702  001538  EE20 F028          	lfsr	2,40
  4703  00153C  5013               	movf	command_builder_add_char@send_buffer,w,c
  4704  00153E  26D9               	addwf	fsr2l,f,c
  4705  001540  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4706  001542  22DA               	addwfc	fsr2h,f,c
  4707  001544  0E27               	movlw	39
  4708  001546  64DF               	cpfsgt	indf2,c
  4709  001548  0012               	return	
  4710                           
  4711                           ;SlaveComm_PIC18.c: 492: {
  4712                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  4713  00154A  EE20 F028          	lfsr	2,40
  4714  00154E  5013               	movf	command_builder_add_char@send_buffer,w,c
  4715  001550  26D9               	addwf	fsr2l,f,c
  4716  001552  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4717  001554  22DA               	addwfc	fsr2h,f,c
  4718  001556  0E00               	movlw	0
  4719  001558  6EDF               	movwf	indf2,c
  4720  00155A  0012               	return	
  4721  00155C                     __end_of_command_builder_add_char:
  4722                           	opt stack 0
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           intcon	equ	0xFF2
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           indf1	equ	0xFE7
  4733                           postinc1	equ	0xFE6
  4734                           postdec1	equ	0xFE5
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8
  4742                           
  4743 ;; *************** function _atol *****************
  4744 ;; Defined at:
  4745 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  s               2   30[COMRAM] PTR const unsigned char 
  4748 ;;		 -> process_data@parameters(50), 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  a               4   39[COMRAM] long 
  4751 ;;  c               1   43[COMRAM] unsigned char 
  4752 ;;  sign            1   38[COMRAM] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  4   30[COMRAM] long 
  4755 ;; Registers used:
  4756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4762 ;;      Params:         4       0       0       0       0       0       0
  4763 ;;      Locals:         6       0       0       0       0       0       0
  4764 ;;      Temps:          4       0       0       0       0       0       0
  4765 ;;      Totals:        14       0       0       0       0       0       0
  4766 ;;Total ram usage:       14 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    2
  4769 ;; This function calls:
  4770 ;;		___lmul
  4771 ;;		_isdigit
  4772 ;; This function is called by:
  4773 ;;		_process_data_parameters
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text28
  4778  000E74                     __ptext28:
  4779                           	opt stack 0
  4780  000E74                     _atol:
  4781                           	opt stack 25
  4782                           
  4783                           ;incstack = 0
  4784  000E74  C01F  FFD9         	movff	atol@s,fsr2l
  4785  000E78  C020  FFDA         	movff	atol@s+1,fsr2h
  4786  000E7C  50DF               	movf	indf2,w,c
  4787  000E7E  6E2C               	movwf	atol@c,c
  4788  000E80  4A1F               	infsnz	atol@s,f,c
  4789  000E82  2A20               	incf	atol@s+1,f,c
  4790  000E84  0E20               	movlw	32
  4791  000E86  182C               	xorwf	atol@c,w,c
  4792  000E88  B4D8               	btfsc	status,2,c
  4793  000E8A  D7F4               	goto	_atol
  4794  000E8C  0E09               	movlw	9
  4795  000E8E  182C               	xorwf	atol@c,w,c
  4796  000E90  B4D8               	btfsc	status,2,c
  4797  000E92  D7F0               	goto	_atol
  4798  000E94  0E00               	movlw	0
  4799  000E96  6E28               	movwf	atol@a,c
  4800  000E98  0E00               	movlw	0
  4801  000E9A  6E29               	movwf	atol@a+1,c
  4802  000E9C  0E00               	movlw	0
  4803  000E9E  6E2A               	movwf	atol@a+2,c
  4804  000EA0  0E00               	movlw	0
  4805  000EA2  6E2B               	movwf	atol@a+3,c
  4806  000EA4  0E00               	movlw	0
  4807  000EA6  6E27               	movwf	atol@sign,c
  4808  000EA8  0E2D               	movlw	45
  4809  000EAA  182C               	xorwf	atol@c,w,c
  4810  000EAC  A4D8               	btfss	status,2,c
  4811  000EAE  D002               	goto	l612
  4812  000EB0  2A27               	incf	atol@sign,f,c
  4813  000EB2  D027               	goto	L4
  4814  000EB4                     l612:
  4815  000EB4  0E2B               	movlw	43
  4816  000EB6  182C               	xorwf	atol@c,w,c
  4817  000EB8  A4D8               	btfss	status,2,c
  4818  000EBA  D02B               	goto	l615
  4819  000EBC  D022               	goto	L4
  4820  000EBE  C028  F013         	movff	atol@a,___lmul@multiplier
  4821  000EC2  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  4822  000EC6  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  4823  000ECA  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  4824  000ECE  0E0A               	movlw	10
  4825  000ED0  6E17               	movwf	___lmul@multiplicand,c
  4826  000ED2  0E00               	movlw	0
  4827  000ED4  6E18               	movwf	___lmul@multiplicand+1,c
  4828  000ED6  0E00               	movlw	0
  4829  000ED8  6E19               	movwf	___lmul@multiplicand+2,c
  4830  000EDA  0E00               	movlw	0
  4831  000EDC  6E1A               	movwf	___lmul@multiplicand+3,c
  4832  000EDE  ECAE  F00A         	call	___lmul	;wreg free
  4833  000EE2  C02C  F023         	movff	atol@c,??_atol
  4834  000EE6  0ED0               	movlw	208
  4835  000EE8  2623               	addwf	??_atol,f,c
  4836  000EEA  5023               	movf	??_atol,w,c
  4837  000EEC  2413               	addwf	?___lmul,w,c
  4838  000EEE  6E28               	movwf	atol@a,c
  4839  000EF0  0E00               	movlw	0
  4840  000EF2  2014               	addwfc	?___lmul+1,w,c
  4841  000EF4  6E29               	movwf	atol@a+1,c
  4842  000EF6  0E00               	movlw	0
  4843  000EF8  2015               	addwfc	?___lmul+2,w,c
  4844  000EFA  6E2A               	movwf	atol@a+2,c
  4845  000EFC  0E00               	movlw	0
  4846  000EFE  2016               	addwfc	?___lmul+3,w,c
  4847  000F00  6E2B               	movwf	atol@a+3,c
  4848  000F02                     L4:
  4849  000F02  C01F  FFD9         	movff	atol@s,fsr2l
  4850  000F06  C020  FFDA         	movff	atol@s+1,fsr2h
  4851  000F0A  50DF               	movf	indf2,w,c
  4852  000F0C  6E2C               	movwf	atol@c,c
  4853  000F0E  4A1F               	infsnz	atol@s,f,c
  4854  000F10  2A20               	incf	atol@s+1,f,c
  4855  000F12                     l615:
  4856  000F12  502C               	movf	atol@c,w,c
  4857  000F14  ECF2  F00B         	call	_isdigit
  4858  000F18  B0D8               	btfsc	status,0,c
  4859  000F1A  D7D1               	goto	l616
  4860  000F1C  5027               	movf	atol@sign,w,c
  4861  000F1E  B4D8               	btfsc	status,2,c
  4862  000F20  D01A               	goto	l618
  4863  000F22  C028  F023         	movff	atol@a,??_atol
  4864  000F26  C029  F024         	movff	atol@a+1,??_atol+1
  4865  000F2A  C02A  F025         	movff	atol@a+2,??_atol+2
  4866  000F2E  C02B  F026         	movff	atol@a+3,??_atol+3
  4867  000F32  1E23               	comf	??_atol,f,c
  4868  000F34  1E24               	comf	??_atol+1,f,c
  4869  000F36  1E25               	comf	??_atol+2,f,c
  4870  000F38  1E26               	comf	??_atol+3,f,c
  4871  000F3A  2A23               	incf	??_atol,f,c
  4872  000F3C  0E00               	movlw	0
  4873  000F3E  2224               	addwfc	??_atol+1,f,c
  4874  000F40  2225               	addwfc	??_atol+2,f,c
  4875  000F42  2226               	addwfc	??_atol+3,f,c
  4876  000F44  C023  F01F         	movff	??_atol,?_atol
  4877  000F48  C024  F020         	movff	??_atol+1,?_atol+1
  4878  000F4C  C025  F021         	movff	??_atol+2,?_atol+2
  4879  000F50  C026  F022         	movff	??_atol+3,?_atol+3
  4880  000F54  0012               	return	
  4881  000F56                     l618:
  4882  000F56  C028  F01F         	movff	atol@a,?_atol
  4883  000F5A  C029  F020         	movff	atol@a+1,?_atol+1
  4884  000F5E  C02A  F021         	movff	atol@a+2,?_atol+2
  4885  000F62  C02B  F022         	movff	atol@a+3,?_atol+3
  4886  000F66  0012               	return		;funcret
  4887  000F68                     __end_of_atol:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           prodh	equ	0xFF4
  4894                           prodl	equ	0xFF3
  4895                           intcon	equ	0xFF2
  4896                           postinc0	equ	0xFEE
  4897                           wreg	equ	0xFE8
  4898                           indf1	equ	0xFE7
  4899                           postinc1	equ	0xFE6
  4900                           postdec1	equ	0xFE5
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           fsr2h	equ	0xFDA
  4906                           fsr2l	equ	0xFD9
  4907                           status	equ	0xFD8
  4908                           
  4909 ;; *************** function _isdigit *****************
  4910 ;; Defined at:
  4911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  c               1    wreg     unsigned char 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  c               1   20[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;		None               void
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4925 ;;      Params:         0       0       0       0       0       0       0
  4926 ;;      Locals:         2       0       0       0       0       0       0
  4927 ;;      Temps:          1       0       0       0       0       0       0
  4928 ;;      Totals:         3       0       0       0       0       0       0
  4929 ;;Total ram usage:        3 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_atol
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text29
  4940  0017E4                     __ptext29:
  4941                           	opt stack 0
  4942  0017E4                     _isdigit:
  4943                           	opt stack 25
  4944                           
  4945                           ;incstack = 0
  4946                           ;isdigit@c stored from wreg
  4947  0017E4  6E15               	movwf	isdigit@c,c
  4948  0017E6  0E00               	movlw	0
  4949  0017E8  6E14               	movwf	_isdigit$2124,c
  4950  0017EA  0E3A               	movlw	58
  4951  0017EC  6015               	cpfslt	isdigit@c,c
  4952  0017EE  D005               	goto	l790
  4953  0017F0  0E2F               	movlw	47
  4954  0017F2  6415               	cpfsgt	isdigit@c,c
  4955  0017F4  D002               	goto	l790
  4956  0017F6  0E01               	movlw	1
  4957  0017F8  6E14               	movwf	_isdigit$2124,c
  4958  0017FA                     l790:
  4959  0017FA  C014  F013         	movff	_isdigit$2124,??_isdigit
  4960  0017FE  3013               	rrcf	??_isdigit,w,c
  4961  001800  0012               	return	
  4962  001802                     __end_of_isdigit:
  4963                           	opt stack 0
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           indf1	equ	0xFE7
  4974                           postinc1	equ	0xFE6
  4975                           postdec1	equ	0xFE5
  4976                           fsr1h	equ	0xFE2
  4977                           fsr1l	equ	0xFE1
  4978                           indf2	equ	0xFDF
  4979                           postinc2	equ	0xFDE
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function ___lmul *****************
  4985 ;; Defined at:
  4986 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  multiplier      4   18[COMRAM] unsigned long 
  4989 ;;  multiplicand    4   22[COMRAM] unsigned long 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  product         4   26[COMRAM] unsigned long 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  4   18[COMRAM] unsigned long 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5001 ;;      Params:         8       0       0       0       0       0       0
  5002 ;;      Locals:         4       0       0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0
  5004 ;;      Totals:        12       0       0       0       0       0       0
  5005 ;;Total ram usage:       12 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_powerPulseCheck
  5012 ;;		_atol
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text30
  5017  00155C                     __ptext30:
  5018                           	opt stack 0
  5019  00155C                     ___lmul:
  5020                           	opt stack 28
  5021                           
  5022                           ;incstack = 0
  5023  00155C  0E00               	movlw	0
  5024  00155E  6E1B               	movwf	___lmul@product,c
  5025  001560  0E00               	movlw	0
  5026  001562  6E1C               	movwf	___lmul@product+1,c
  5027  001564  0E00               	movlw	0
  5028  001566  6E1D               	movwf	___lmul@product+2,c
  5029  001568  0E00               	movlw	0
  5030  00156A  6E1E               	movwf	___lmul@product+3,c
  5031  00156C  A013               	btfss	___lmul@multiplier,0,c
  5032  00156E  D008               	goto	l459
  5033  001570  5017               	movf	___lmul@multiplicand,w,c
  5034  001572  261B               	addwf	___lmul@product,f,c
  5035  001574  5018               	movf	___lmul@multiplicand+1,w,c
  5036  001576  221C               	addwfc	___lmul@product+1,f,c
  5037  001578  5019               	movf	___lmul@multiplicand+2,w,c
  5038  00157A  221D               	addwfc	___lmul@product+2,f,c
  5039  00157C  501A               	movf	___lmul@multiplicand+3,w,c
  5040  00157E  221E               	addwfc	___lmul@product+3,f,c
  5041  001580                     l459:
  5042  001580  90D8               	bcf	status,0,c
  5043  001582  3617               	rlcf	___lmul@multiplicand,f,c
  5044  001584  3618               	rlcf	___lmul@multiplicand+1,f,c
  5045  001586  3619               	rlcf	___lmul@multiplicand+2,f,c
  5046  001588  361A               	rlcf	___lmul@multiplicand+3,f,c
  5047  00158A  90D8               	bcf	status,0,c
  5048  00158C  3216               	rrcf	___lmul@multiplier+3,f,c
  5049  00158E  3215               	rrcf	___lmul@multiplier+2,f,c
  5050  001590  3214               	rrcf	___lmul@multiplier+1,f,c
  5051  001592  3213               	rrcf	___lmul@multiplier,f,c
  5052  001594  5013               	movf	___lmul@multiplier,w,c
  5053  001596  1014               	iorwf	___lmul@multiplier+1,w,c
  5054  001598  1015               	iorwf	___lmul@multiplier+2,w,c
  5055  00159A  1016               	iorwf	___lmul@multiplier+3,w,c
  5056  00159C  A4D8               	btfss	status,2,c
  5057  00159E  D7E6               	goto	l458
  5058  0015A0  C01B  F013         	movff	___lmul@product,?___lmul
  5059  0015A4  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5060  0015A8  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5061  0015AC  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5062  0015B0  0012               	return		;funcret
  5063  0015B2                     __end_of___lmul:
  5064                           	opt stack 0
  5065                           tblptru	equ	0xFF8
  5066                           tblptrh	equ	0xFF7
  5067                           tblptrl	equ	0xFF6
  5068                           tablat	equ	0xFF5
  5069                           prodh	equ	0xFF4
  5070                           prodl	equ	0xFF3
  5071                           intcon	equ	0xFF2
  5072                           postinc0	equ	0xFEE
  5073                           wreg	equ	0xFE8
  5074                           indf1	equ	0xFE7
  5075                           postinc1	equ	0xFE6
  5076                           postdec1	equ	0xFE5
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _process_data_parameterize *****************
  5086 ;; Defined at:
  5087 ;;		line 280 in file "SlaveComm_PIC18.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5090 ;;		 -> process_data@parameters(50), 
  5091 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5092 ;;		 -> communications@receive_buffer(42), 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  inx             2   31[COMRAM] int 
  5095 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5096 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5106 ;;      Params:         4       0       0       0       0       0       0
  5107 ;;      Locals:         4       0       0       0       0       0       0
  5108 ;;      Temps:          3       0       0       0       0       0       0
  5109 ;;      Totals:        11       0       0       0       0       0       0
  5110 ;;Total ram usage:       11 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		___wmul
  5115 ;; This function is called by:
  5116 ;;		_process_data
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text31
  5121  000AD2                     __ptext31:
  5122                           	opt stack 0
  5123  000AD2                     _process_data_parameterize:
  5124                           	opt stack 26
  5125                           
  5126                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5127                           
  5128                           ;incstack = 0
  5129  000AD2  0E00               	movlw	0
  5130  000AD4  6E23               	movwf	process_data_parameterize@parameter_position,c
  5131                           
  5132                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5133  000AD6  0E00               	movlw	0
  5134  000AD8  6E22               	movwf	process_data_parameterize@parameter_index,c
  5135                           
  5136                           ;SlaveComm_PIC18.c: 292: for (int inx = 0; inx < 5; inx++)
  5137  000ADA  0E00               	movlw	0
  5138  000ADC  6E21               	movwf	process_data_parameterize@inx+1,c
  5139  000ADE  0E00               	movlw	0
  5140  000AE0  6E20               	movwf	process_data_parameterize@inx,c
  5141  000AE2  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5142  000AE4  D008               	goto	l317
  5143  000AE6  5021               	movf	process_data_parameterize@inx+1,w,c
  5144  000AE8  E105               	bnz	u2160
  5145  000AEA  0E05               	movlw	5
  5146  000AEC  5C20               	subwf	process_data_parameterize@inx,w,c
  5147  000AEE  B0D8               	btfsc	status,0,c
  5148  000AF0  D082               	goto	l319
  5149  000AF2  D001               	goto	l317
  5150  000AF4                     u2160:
  5151  000AF4  D080               	goto	l319
  5152  000AF6                     l317:
  5153                           
  5154                           ;SlaveComm_PIC18.c: 293: {
  5155                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5156  000AF6  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5157  000AFA  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5158  000AFE  0E00               	movlw	0
  5159  000B00  6E16               	movwf	___wmul@multiplicand+1,c
  5160  000B02  0E0A               	movlw	10
  5161  000B04  6E15               	movwf	___wmul@multiplicand,c
  5162  000B06  ECCF  F00B         	call	___wmul	;wreg free
  5163  000B0A  5013               	movf	?___wmul,w,c
  5164  000B0C  2419               	addwf	process_data_parameterize@parameters,w,c
  5165  000B0E  6ED9               	movwf	fsr2l,c
  5166  000B10  5014               	movf	?___wmul+1,w,c
  5167  000B12  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5168  000B14  6EDA               	movwf	fsr2h,c
  5169  000B16  0E00               	movlw	0
  5170  000B18  6EDF               	movwf	indf2,c
  5171  000B1A  4A20               	infsnz	process_data_parameterize@inx,f,c
  5172  000B1C  2A21               	incf	process_data_parameterize@inx+1,f,c
  5173  000B1E  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5174  000B20  D7EA               	goto	l317
  5175  000B22  5021               	movf	process_data_parameterize@inx+1,w,c
  5176  000B24  E168               	bnz	l2817
  5177  000B26  D7E1               	goto	L2
  5178  000B28                     
  5179                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5180  000B28  0E00               	movlw	0
  5181  000B2A  6E23               	movwf	process_data_parameterize@parameter_position,c
  5182                           
  5183                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5184  000B2C  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5185                           
  5186                           ;SlaveComm_PIC18.c: 309: if (parameter_index >= 5)
  5187  000B2E  0E04               	movlw	4
  5188  000B30  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5189  000B32  D05A               	goto	l323
  5190                           
  5191                           ;SlaveComm_PIC18.c: 310: {
  5192                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5193  000B34  0E04               	movlw	4
  5194  000B36  6E22               	movwf	process_data_parameterize@parameter_index,c
  5195                           
  5196                           ;SlaveComm_PIC18.c: 314: }
  5197                           ;SlaveComm_PIC18.c: 316: break;
  5198  000B38  D057               	goto	l323
  5199  000B3A                     
  5200                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5201  000B3A  EE20 F029          	lfsr	2,41
  5202  000B3E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5203  000B40  26D9               	addwf	fsr2l,f,c
  5204  000B42  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5205  000B44  22DA               	addwfc	fsr2h,f,c
  5206  000B46  50DF               	movf	indf2,w,c
  5207  000B48  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5208  000B4A  501D               	movf	??_process_data_parameterize,w,c
  5209  000B4C  0D01               	mullw	1
  5210  000B4E  50F3               	movf	prodl,w,c
  5211  000B50  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5212  000B52  6ED9               	movwf	fsr2l,c
  5213  000B54  50F4               	movf	prodh,w,c
  5214  000B56  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5215  000B58  6EDA               	movwf	fsr2h,c
  5216  000B5A  5022               	movf	process_data_parameterize@parameter_index,w,c
  5217  000B5C  0D0A               	mullw	10
  5218  000B5E  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5219  000B62  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5220  000B66  50F3               	movf	prodl,w,c
  5221  000B68  261E               	addwf	??_process_data_parameterize+1,f,c
  5222  000B6A  50F4               	movf	prodh,w,c
  5223  000B6C  221F               	addwfc	??_process_data_parameterize+2,f,c
  5224  000B6E  5023               	movf	process_data_parameterize@parameter_position,w,c
  5225  000B70  0D01               	mullw	1
  5226  000B72  50F3               	movf	prodl,w,c
  5227  000B74  241E               	addwf	??_process_data_parameterize+1,w,c
  5228  000B76  6EE1               	movwf	fsr1l,c
  5229  000B78  50F4               	movf	prodh,w,c
  5230  000B7A  201F               	addwfc	??_process_data_parameterize+2,w,c
  5231  000B7C  6EE2               	movwf	fsr1h,c
  5232  000B7E  CFDF FFE7          	movff	indf2,indf1
  5233                           
  5234                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5235  000B82  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5236                           
  5237                           ;SlaveComm_PIC18.c: 321: if (parameter_position >= 10)
  5238  000B84  0E09               	movlw	9
  5239  000B86  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5240  000B88  D002               	goto	l327
  5241                           
  5242                           ;SlaveComm_PIC18.c: 322: {
  5243                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5244  000B8A  0E09               	movlw	9
  5245  000B8C  6E23               	movwf	process_data_parameterize@parameter_position,c
  5246  000B8E                     l327:
  5247                           
  5248                           ;SlaveComm_PIC18.c: 326: }
  5249                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5250  000B8E  5022               	movf	process_data_parameterize@parameter_index,w,c
  5251  000B90  0D0A               	mullw	10
  5252  000B92  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5253  000B96  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5254  000B9A  50F3               	movf	prodl,w,c
  5255  000B9C  261D               	addwf	??_process_data_parameterize,f,c
  5256  000B9E  50F4               	movf	prodh,w,c
  5257  000BA0  221E               	addwfc	??_process_data_parameterize+1,f,c
  5258  000BA2  5023               	movf	process_data_parameterize@parameter_position,w,c
  5259  000BA4  0D01               	mullw	1
  5260  000BA6  50F3               	movf	prodl,w,c
  5261  000BA8  241D               	addwf	??_process_data_parameterize,w,c
  5262  000BAA  6ED9               	movwf	fsr2l,c
  5263  000BAC  50F4               	movf	prodh,w,c
  5264  000BAE  201E               	addwfc	??_process_data_parameterize+1,w,c
  5265  000BB0  6EDA               	movwf	fsr2h,c
  5266  000BB2  0E00               	movlw	0
  5267  000BB4  6EDF               	movwf	indf2,c
  5268                           
  5269                           ;SlaveComm_PIC18.c: 331: }
  5270                           
  5271                           ;SlaveComm_PIC18.c: 330: break;
  5272  000BB6  D018               	goto	l323
  5273  000BB8  EE20 F029          	lfsr	2,41
  5274  000BBC  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5275  000BBE  26D9               	addwf	fsr2l,f,c
  5276  000BC0  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5277  000BC2  22DA               	addwfc	fsr2h,f,c
  5278  000BC4  50DF               	movf	indf2,w,c
  5279  000BC6  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5280  000BC8  501D               	movf	??_process_data_parameterize,w,c
  5281  000BCA  0D01               	mullw	1
  5282  000BCC  50F3               	movf	prodl,w,c
  5283  000BCE  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5284  000BD0  6ED9               	movwf	fsr2l,c
  5285  000BD2  50F4               	movf	prodh,w,c
  5286  000BD4  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5287  000BD6  6EDA               	movwf	fsr2h,c
  5288  000BD8  50DF               	movf	indf2,w,c
  5289                           
  5290                           ; Switch size 1, requested type "space"
  5291                           ; Number of cases is 2, Range of values is 33 to 59
  5292                           ; switch strategies available:
  5293                           ; Name         Instructions Cycles
  5294                           ; simple_byte            7     4 (average)
  5295                           ;	Chosen strategy is simple_byte
  5296  000BDA  0A21               	xorlw	33	; case 33
  5297  000BDC  B4D8               	btfsc	status,2,c
  5298  000BDE  D004               	goto	l323
  5299  000BE0  0A1A               	xorlw	26	; case 59
  5300  000BE2  B4D8               	btfsc	status,2,c
  5301  000BE4  D7A1               	goto	l324
  5302  000BE6  D7A9               	goto	l326
  5303  000BE8                     l323:
  5304                           
  5305                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5306  000BE8  EE20 F029          	lfsr	2,41
  5307  000BEC  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5308  000BEE  26D9               	addwf	fsr2l,f,c
  5309  000BF0  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5310  000BF2  22DA               	addwfc	fsr2h,f,c
  5311  000BF4  2ADF               	incf	indf2,f,c
  5312  000BF6                     l319:
  5313  000BF6                     l2817:
  5314  000BF6  EE20 F029          	lfsr	2,41
  5315  000BFA  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5316  000BFC  26D9               	addwf	fsr2l,f,c
  5317  000BFE  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5318  000C00  22DA               	addwfc	fsr2h,f,c
  5319  000C02  50DF               	movf	indf2,w,c
  5320  000C04  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5321  000C06  501D               	movf	??_process_data_parameterize,w,c
  5322  000C08  0D01               	mullw	1
  5323  000C0A  50F3               	movf	prodl,w,c
  5324  000C0C  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5325  000C0E  6ED9               	movwf	fsr2l,c
  5326  000C10  50F4               	movf	prodh,w,c
  5327  000C12  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5328  000C14  6EDA               	movwf	fsr2h,c
  5329  000C16  0E2A               	movlw	42
  5330  000C18  18DE               	xorwf	postinc2,w,c
  5331  000C1A  B4D8               	btfsc	status,2,c
  5332  000C1C  0012               	return	
  5333  000C1E  EE20 F029          	lfsr	2,41
  5334  000C22  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5335  000C24  26D9               	addwf	fsr2l,f,c
  5336  000C26  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5337  000C28  22DA               	addwfc	fsr2h,f,c
  5338  000C2A  0E28               	movlw	40
  5339  000C2C  60DF               	cpfslt	indf2,c
  5340  000C2E  0012               	return	
  5341  000C30  EE20 F028          	lfsr	2,40
  5342  000C34  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5343  000C36  26D9               	addwf	fsr2l,f,c
  5344  000C38  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5345  000C3A  22DA               	addwfc	fsr2h,f,c
  5346  000C3C  EE10 F029          	lfsr	1,41
  5347  000C40  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5348  000C42  26E1               	addwf	fsr1l,f,c
  5349  000C44  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5350  000C46  22E2               	addwfc	fsr1h,f,c
  5351  000C48  50DE               	movf	postinc2,w,c
  5352  000C4A  18E6               	xorwf	postinc1,w,c
  5353  000C4C  B4D8               	btfsc	status,2,c
  5354  000C4E  0012               	return	
  5355  000C50  D7B3               	goto	l321
  5356  000C52                     __end_of_process_data_parameterize:
  5357                           	opt stack 0
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           wreg	equ	0xFE8
  5367                           indf1	equ	0xFE7
  5368                           postinc1	equ	0xFE6
  5369                           postdec1	equ	0xFE5
  5370                           fsr1h	equ	0xFE2
  5371                           fsr1l	equ	0xFE1
  5372                           indf2	equ	0xFDF
  5373                           postinc2	equ	0xFDE
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function ___wmul *****************
  5379 ;; Defined at:
  5380 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  multiplier      2   18[COMRAM] unsigned int 
  5383 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  product         2   22[COMRAM] unsigned int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2   18[COMRAM] unsigned int 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0, prodl, prodh
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5395 ;;      Params:         4       0       0       0       0       0       0
  5396 ;;      Locals:         2       0       0       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0
  5398 ;;      Totals:         6       0       0       0       0       0       0
  5399 ;;Total ram usage:        6 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_process_data_parameterize
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text32
  5410  00179E                     __ptext32:
  5411                           	opt stack 0
  5412  00179E                     ___wmul:
  5413                           	opt stack 26
  5414                           
  5415                           ;incstack = 0
  5416  00179E  5013               	movf	___wmul@multiplier,w,c
  5417  0017A0  0215               	mulwf	___wmul@multiplicand,c
  5418  0017A2  CFF3 F017          	movff	prodl,___wmul@product
  5419  0017A6  CFF4 F018          	movff	prodh,___wmul@product+1
  5420  0017AA  5013               	movf	___wmul@multiplier,w,c
  5421  0017AC  0216               	mulwf	___wmul@multiplicand+1,c
  5422  0017AE  50F3               	movf	prodl,w,c
  5423  0017B0  2618               	addwf	___wmul@product+1,f,c
  5424  0017B2  5014               	movf	___wmul@multiplier+1,w,c
  5425  0017B4  0215               	mulwf	___wmul@multiplicand,c
  5426  0017B6  50F3               	movf	prodl,w,c
  5427  0017B8  2618               	addwf	___wmul@product+1,f,c
  5428  0017BA  C017  F013         	movff	___wmul@product,?___wmul
  5429  0017BE  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5430  0017C2  0012               	return	
  5431  0017C4                     __end_of___wmul:
  5432                           	opt stack 0
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           intcon	equ	0xFF2
  5440                           postinc0	equ	0xFEE
  5441                           wreg	equ	0xFE8
  5442                           indf1	equ	0xFE7
  5443                           postinc1	equ	0xFE6
  5444                           postdec1	equ	0xFE5
  5445                           fsr1h	equ	0xFE2
  5446                           fsr1l	equ	0xFE1
  5447                           indf2	equ	0xFDF
  5448                           postinc2	equ	0xFDE
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           
  5453 ;; *************** function _SPISlaveInit *****************
  5454 ;; Defined at:
  5455 ;;		line 706 in file "SlaveComm_PIC18.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5469 ;;      Params:         0       0       0       0       0       0       0
  5470 ;;      Locals:         0       0       0       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0
  5472 ;;      Totals:         0       0       0       0       0       0       0
  5473 ;;Total ram usage:        0 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    1
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		_communications
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text33
  5484  001646                     __ptext33:
  5485                           	opt stack 0
  5486  001646                     _SPISlaveInit:
  5487                           	opt stack 28
  5488                           
  5489                           ;SlaveComm_PIC18.c: 709: TRISAbits.TRISA0 = 0;
  5490                           
  5491                           ;incstack = 0
  5492  001646  9092               	bcf	3986,0,c	;volatile
  5493                           
  5494                           ;SlaveComm_PIC18.c: 710: TRISAbits.TRISA1 = 1;
  5495  001648  8292               	bsf	3986,1,c	;volatile
  5496                           
  5497                           ;SlaveComm_PIC18.c: 712: TRISCbits.TRISC3 = 0;
  5498  00164A  9694               	bcf	3988,3,c	;volatile
  5499                           
  5500                           ;SlaveComm_PIC18.c: 713: TRISCbits.TRISC5 = 0;
  5501  00164C  9A94               	bcf	3988,5,c	;volatile
  5502                           
  5503                           ;SlaveComm_PIC18.c: 714: TRISCbits.TRISC6 = 0;
  5504  00164E  9C94               	bcf	3988,6,c	;volatile
  5505                           
  5506                           ;SlaveComm_PIC18.c: 715: TRISCbits.TRISC7 = 0;
  5507  001650  9E94               	bcf	3988,7,c	;volatile
  5508                           
  5509                           ;SlaveComm_PIC18.c: 716: ANSELAbits.ANSA1 = 0b0;
  5510  001652  010F               	movlb	15	; () banked
  5511  001654  9338               	bcf	56,1,b	;volatile
  5512                           
  5513                           ;SlaveComm_PIC18.c: 718: LATCbits.LATC6 = 1;
  5514  001656  8C8B               	bsf	3979,6,c	;volatile
  5515                           
  5516                           ;SlaveComm_PIC18.c: 719: LATCbits.LATC3 = 1;
  5517  001658  868B               	bsf	3979,3,c	;volatile
  5518                           
  5519                           ;SlaveComm_PIC18.c: 720: LATCbits.LATC5 = 1;
  5520  00165A  8A8B               	bsf	3979,5,c	;volatile
  5521                           
  5522                           ;SlaveComm_PIC18.c: 721: LATCbits.LATC7 = 1;
  5523  00165C  8E8B               	bsf	3979,7,c	;volatile
  5524                           
  5525                           ;SlaveComm_PIC18.c: 724: SSP2CON1bits.SSPEN = 0;
  5526  00165E  9A6C               	bcf	3948,5,c	;volatile
  5527                           
  5528                           ;SlaveComm_PIC18.c: 726: ANSELBbits.ANSB0 = 0b0;
  5529  001660  9139               	bcf	57,0,b	;volatile
  5530                           
  5531                           ;SlaveComm_PIC18.c: 727: ANSELBbits.ANSB1 = 0b0;
  5532  001662  9339               	bcf	57,1,b	;volatile
  5533                           
  5534                           ;SlaveComm_PIC18.c: 728: ANSELBbits.ANSB2 = 0b0;
  5535  001664  9539               	bcf	57,2,b	;volatile
  5536                           
  5537                           ;SlaveComm_PIC18.c: 729: ANSELBbits.ANSB3 = 0b0;
  5538  001666  9739               	bcf	57,3,b	;volatile
  5539                           
  5540                           ;SlaveComm_PIC18.c: 731: TRISBbits.RB0 = 0b1;
  5541  001668  8093               	bsf	3987,0,c	;volatile
  5542                           
  5543                           ;SlaveComm_PIC18.c: 732: TRISBbits.RB1 = 0b1;
  5544  00166A  8293               	bsf	3987,1,c	;volatile
  5545                           
  5546                           ;SlaveComm_PIC18.c: 733: TRISBbits.RB2 = 0b1;
  5547  00166C  8493               	bsf	3987,2,c	;volatile
  5548                           
  5549                           ;SlaveComm_PIC18.c: 734: TRISBbits.RB3 = 0b0;
  5550  00166E  9693               	bcf	3987,3,c	;volatile
  5551                           
  5552                           ;SlaveComm_PIC18.c: 736: SSP2STATbits.SMP = 0;
  5553  001670  9E6D               	bcf	3949,7,c	;volatile
  5554                           
  5555                           ;SlaveComm_PIC18.c: 737: SSP2STATbits.CKE = 1;
  5556  001672  8C6D               	bsf	3949,6,c	;volatile
  5557                           
  5558                           ;SlaveComm_PIC18.c: 739: SSP2CON1bits.WCOL = 0;
  5559  001674  9E6C               	bcf	3948,7,c	;volatile
  5560                           
  5561                           ;SlaveComm_PIC18.c: 740: SSP2CON1bits.SSPOV = 0;
  5562  001676  9C6C               	bcf	3948,6,c	;volatile
  5563                           
  5564                           ;SlaveComm_PIC18.c: 741: SSP2CON1bits.SSPEN = 0;
  5565  001678  9A6C               	bcf	3948,5,c	;volatile
  5566                           
  5567                           ;SlaveComm_PIC18.c: 742: SSP2CON1bits.CKP = 1;
  5568  00167A  886C               	bsf	3948,4,c	;volatile
  5569                           
  5570                           ; BSR set to: 15
  5571                           ;SlaveComm_PIC18.c: 743: SSP2CON1bits.SSPM = 0b0100;
  5572  00167C  506C               	movf	3948,w,c	;volatile
  5573  00167E  0BF0               	andlw	-16
  5574  001680  0904               	iorlw	4
  5575  001682  6E6C               	movwf	3948,c	;volatile
  5576                           
  5577                           ;SlaveComm_PIC18.c: 746: SSP2CON3 = 0x00;
  5578  001684  0E00               	movlw	0
  5579  001686  6E69               	movwf	3945,c	;volatile
  5580                           
  5581                           ; BSR set to: 15
  5582                           ;SlaveComm_PIC18.c: 747: SSP2CON3bits.BOEN = 0b0;
  5583  001688  9869               	bcf	3945,4,c	;volatile
  5584                           
  5585                           ; BSR set to: 15
  5586                           ;SlaveComm_PIC18.c: 749: SSP2CON1bits.SSPEN = 1;
  5587  00168A  8A6C               	bsf	3948,5,c	;volatile
  5588  00168C  0012               	return	
  5589  00168E                     __end_of_SPISlaveInit:
  5590                           	opt stack 0
  5591                           tblptru	equ	0xFF8
  5592                           tblptrh	equ	0xFF7
  5593                           tblptrl	equ	0xFF6
  5594                           tablat	equ	0xFF5
  5595                           prodh	equ	0xFF4
  5596                           prodl	equ	0xFF3
  5597                           intcon	equ	0xFF2
  5598                           postinc0	equ	0xFEE
  5599                           wreg	equ	0xFE8
  5600                           indf1	equ	0xFE7
  5601                           postinc1	equ	0xFE6
  5602                           postdec1	equ	0xFE5
  5603                           fsr1h	equ	0xFE2
  5604                           fsr1l	equ	0xFE1
  5605                           indf2	equ	0xFDF
  5606                           postinc2	equ	0xFDE
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _Timer0_ISR *****************
  5612 ;; Defined at:
  5613 ;;		line 396 in file "Current_Sense_Main.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5627 ;;      Params:         0       0       0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0
  5629 ;;      Temps:         18       0       0       0       0       0       0
  5630 ;;      Totals:        18       0       0       0       0       0       0
  5631 ;;Total ram usage:       18 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		Interrupt level 2
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	intcode
  5641  000008                     __pintcode:
  5642                           	opt stack 0
  5643  000008                     _Timer0_ISR:
  5644                           	opt stack 23
  5645                           
  5646                           ; BSR set to: 15
  5647                           ;incstack = 0
  5648  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5649  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5650  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5651  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5652  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5653  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5654  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5655  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5656  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5657  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5658  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5659  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5660  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5661  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5662  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5663  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  5664  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  5665  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  5666  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  5667                           
  5668                           ;Current_Sense_Main.c: 399: INTCONbits.TMR0IF = 0;
  5669  000052  94F2               	bcf	intcon,2,c	;volatile
  5670                           
  5671                           ;Current_Sense_Main.c: 401: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5672  000054  0EFC               	movlw	252
  5673  000056  6ED7               	movwf	4055,c	;volatile
  5674                           
  5675                           ;Current_Sense_Main.c: 402: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5676  000058  0E18               	movlw	24
  5677  00005A  6ED6               	movwf	4054,c	;volatile
  5678                           
  5679                           ;Current_Sense_Main.c: 404: timerCountHF++;
  5680  00005C  0E01               	movlw	1
  5681  00005E  2646               	addwf	_timerCountHF,f,c	;volatile
  5682  000060  0E00               	movlw	0
  5683  000062  2247               	addwfc	_timerCountHF+1,f,c	;volatile
  5684  000064  2248               	addwfc	_timerCountHF+2,f,c	;volatile
  5685  000066  2249               	addwfc	_timerCountHF+3,f,c	;volatile
  5686                           
  5687                           ;Current_Sense_Main.c: 405: timerCountLF++;
  5688  000068  0E01               	movlw	1
  5689  00006A  2637               	addwf	_timerCountLF,f,c	;volatile
  5690  00006C  0E00               	movlw	0
  5691  00006E  2238               	addwfc	_timerCountLF+1,f,c	;volatile
  5692  000070  2239               	addwfc	_timerCountLF+2,f,c	;volatile
  5693  000072  223A               	addwfc	_timerCountLF+3,f,c	;volatile
  5694                           
  5695                           ;Current_Sense_Main.c: 407: return;
  5696  000074  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  5697  000078  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  5698  00007C  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  5699  000080  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  5700  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5701  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5702  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5703  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5704  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5705  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5706  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5707  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5708  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5709  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5710  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5711  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5712  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5713  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5714  0000BC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5715  0000BE  0011               	retfie		f
  5716  0000C0                     __end_of_Timer0_ISR:
  5717                           	opt stack 0
  5718                           pclatu	equ	0xFFB
  5719                           pclath	equ	0xFFA
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           postinc0	equ	0xFEE
  5728                           fsr0h	equ	0xFEA
  5729                           fsr0l	equ	0xFE9
  5730                           wreg	equ	0xFE8
  5731                           indf1	equ	0xFE7
  5732                           postinc1	equ	0xFE6
  5733                           postdec1	equ	0xFE5
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           indf2	equ	0xFDF
  5737                           postinc2	equ	0xFDE
  5738                           fsr2h	equ	0xFDA
  5739                           fsr2l	equ	0xFD9
  5740                           status	equ	0xFD8
  5741                           pclatu	equ	0xFFB
  5742                           pclath	equ	0xFFA
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           fsr0h	equ	0xFEA
  5752                           fsr0l	equ	0xFE9
  5753                           wreg	equ	0xFE8
  5754                           indf1	equ	0xFE7
  5755                           postinc1	equ	0xFE6
  5756                           postdec1	equ	0xFE5
  5757                           fsr1h	equ	0xFE2
  5758                           fsr1l	equ	0xFE1
  5759                           indf2	equ	0xFDF
  5760                           postinc2	equ	0xFDE
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765                           	psect	rparam
  5766  0000                     pclatu	equ	0xFFB
  5767                           pclath	equ	0xFFA
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           prodh	equ	0xFF4
  5773                           prodl	equ	0xFF3
  5774                           intcon	equ	0xFF2
  5775                           postinc0	equ	0xFEE
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           indf1	equ	0xFE7
  5780                           postinc1	equ	0xFE6
  5781                           postdec1	equ	0xFE5
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           indf2	equ	0xFDF
  5785                           postinc2	equ	0xFDE
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790                           	psect	temp
  5791  00004D                     btemp:
  5792                           	opt stack 0
  5793  00004D                     	ds	1
  5794  0000                     int$flags	set	btemp
  5795  0000                     wtemp6	set	btemp+1
  5796                           pclatu	equ	0xFFB
  5797                           pclath	equ	0xFFA
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           postinc0	equ	0xFEE
  5806                           fsr0h	equ	0xFEA
  5807                           fsr0l	equ	0xFE9
  5808                           wreg	equ	0xFE8
  5809                           indf1	equ	0xFE7
  5810                           postinc1	equ	0xFE6
  5811                           postdec1	equ	0xFE5
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      76
    BANK0           160     16     116
    BANK1           256     51      51
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerPulseCheck->___lldiv
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   98538
                                             53 COMRAM     1     1      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleBlue
 ---------------------------------------------------------------------------------
 (1) _toggleBlue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1597
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     122
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   96816
                                             51 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     301
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      47
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46583
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   16266
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     465
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     123
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             12 BANK0      4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47746
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   16356
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2560
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _toggleBlue

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      33       6       19.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      74       4       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3       9        0.0%
DATA                 0      0      F3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 29 20:24:55 2019

                                       _SPISlaveInit 1646                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l113 16DE                                                  l115 16D6  
                                                l107 149C                                                  l116 16DA  
                                                l117 16E2                                                  l310 1024  
                                                l150 0976                                                  l118 16EC  
                                                l400 0CCA                                                  l304 0F74  
                                                l160 0A88                                                  l152 097A  
                                                l321 0BB8                                                  l161 0A6C  
                                                l323 0BE8                                                  l307 0FB8  
                                                l171 16AA                                                  l155 0A10  
                                                l324 0B28                                                  l412 1770  
                                                l172 1698                                                  l164 0AB6  
                                                l156 0A22                                                  l317 0AF6  
                                                l413 1774                                                  l309 1012  
                                                l157 0A3A                                                  l326 0B3A  
                                                l406 0D3C                                                  l350 0828  
                                                l334 0684                                                  l166 0ACC  
                                                l158 0A9E                                                  l319 0BF6  
                                                l327 0B8E                                                  l343 07E2  
                                                l408 0D74                                                  l360 0902  
                                                l352 0854                                                  l336 0708  
                                                l345 079E                                                  l417 17DC  
                                                l281 10FA                                                  l354 0880  
                                                l275 10EA                                                  l612 0EB4  
                                                l380 1352                                                  l356 08AC  
                                                l381 1314                                                  l293 11D2  
                                                l285 1148                                                  l277 111C  
                                                l358 08D8                                                  l294 11A0  
                                                l615 0F12                                                  l287 115A  
                                                l279 1130                                                  l616 0EBE  
                                                l296 11AE                                                  l297 11BC  
                                                l458 156C                                                  l618 0F56  
                                                l298 11C8                                                  l386 1224  
                                                l459 1580                                                  l820 12EA  
                                                l396 0CCE                                                  l821 12F8  
                                                l397 0C64                                                  l389 1284  
                                                l830 13CC                                                  l398 0C98  
                                                l831 13DA                                                  l816 12B6  
                                                l817 12AA                                                  l826 13A4  
                                                l827 1398                                                  l790 17FA  
                                                l871 0DE6                                                  l872 0E50  
                                                l869 0D8E                                         __CFG_CPB$OFF 000000  
                                       __CFG_CPD$OFF 000000                                                  wreg 000FE8  
                                       __CFG_LVP$OFF 000000                                ??_resetCommunications 0031  
                                               l2817 0BF6                                                 l2985 0A10  
                                               l2999 0A6C                                                 STR_1 064F  
                                               STR_2 0657                                                 STR_3 0601  
                    __size_of_com_command_setVersion 0026                                                 STR_4 0617  
                                               STR_5 0634                                                 STR_6 062F  
                                               STR_7 062A                                                 STR_8 065B  
                                               STR_9 0657                                                 u2160 0AF4  
                                               u2080 1748                                                 u2090 174A  
                                               u2530 0AB2                                                 u1900 13A8  
                                               u2540 0AC8                                                 _IPR1 000F9F  
                                               u1830 1348                                                 _IPR2 000FA2  
                                               _PIE1 000F9D                                                 _IPR3 000FA5  
                                               u1840 137E                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1837 133E  
                                               u2557 169E                                                 u1870 12BA  
                                               u1847 1374                                                 u2567 1168  
                                               u1960 0D06                                                 _PIR1 000F9E  
                                               _PIR2 000FA1                                                 _PIR3 000FA4  
                                               _PIR4 000F7B                                                 _PIR5 000F7E  
                                               _atol 0E74                                                 _main 1450  
                                               _init 1848                                                 fsr0h 000FEA  
                                               fsr1h 000FE2                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf1 000FE7  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                                 btemp 004D  
                                      __CFG_BORV$190 000000                               __size_of_SPI_send_data 0020  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 00C0                                        __CFG_IESO$OFF 000000  
                            communications@firstTime 0035                        __size_of_com_command_setPower 004A  
                                       ___param_bank 000000                                       _communications 10C6  
                                              ?_atol 001F                                                ?_main 0001  
                                              ?_init 0001                                                STR_10 062A  
                                              STR_11 0653                                                STR_12 0653  
                                              STR_20 061E                                                STR_13 0657  
                                              STR_21 063E                                                STR_14 062A  
                                              STR_22 060D                                                STR_23 064F  
                                              STR_15 065B                                                STR_40 064B  
                                              STR_32 0643                                                STR_16 0639  
                                              STR_17 062A                                                STR_26 0657  
                                              STR_18 0624                                                STR_19 0617  
                                              STR_27 0624                                                STR_35 0647  
                                              STR_28 0657                                                STR_29 0617  
                                              STR_38 0657                                                STR_39 060D  
                                    __end_of___lldiv 130A                                      __end_of___llmod 13EC  
                                     __CFG_DEBUG$OFF 000000                                    ?_command_builder1 001F  
                                  ?_command_builder3 001F                                                _TMR0H 000FD7  
                                              _TMR0L 000FD6                                        __CFG_WRT0$OFF 000000  
                                      __CFG_WRT1$OFF 000000                                        __CFG_WRT2$OFF 000000  
                                ___lmul@multiplicand 0017                                        __CFG_WRT3$OFF 000000  
                       ??_command_builder_add_string 001B                                   ??_command_builder1 0023  
                                 ??_command_builder3 0027                                       __CFG_EBTR0$OFF 000000  
                                     __CFG_FCMEN$OFF 000000                                       __CFG_EBTR1$OFF 000000  
                                     __CFG_EBTR2$OFF 000000                                       __CFG_EBTR3$OFF 000000  
                 process_data_parameters@send_buffer 0031                                        __CFG_WRTB$OFF 000000  
                                      __CFG_WRTC$OFF 000000                                        __CFG_WRTD$OFF 000000  
                                     __CFG_EBTRB$OFF 000000                                      __end_of_initOSC 1832  
                                   ?_powerPulseCheck 0001                                                _isLow 0045  
                                    __end_of_isdigit 1802                                   __CFG_MCLRE$EXTMCLR 000000  
                                              atol@a 0028                                                atol@c 002C  
                                              atol@s 001F                                                _ultoa 0D7E  
                                              pclath 000FFA                                                tablat 000FF5  
                                              status 000FD8                                                wtemp6 004E  
                                    __end_of_strcmp2 0D7E                                       __CFG_HFOFST$ON 000000  
                                     __CFG_PBADEN$ON 000000                          ??_process_data_parameterize 001D  
               com_command_setEnergyUsed@send_buffer 002D                        command_builder_add_string@inx 001D  
                                    __initialization 13EC                                         __end_of_atol 0F68  
                                       __end_of_main 14B0                                         __end_of_init 184E  
                             __end_of_communications 1160                               _com_command_setVersion 1778  
                __size_of_command_builder_add_string 007C                                     _SPI_receive_data 1750  
                       command_builder_add_char@data 0015                                               ??_atol 0023  
                                             ??_main 0036                                               ??_init 0013  
                                      _SPI_send_data 17C4                                        __activetblptr 000002  
                            _process_data_parameters 0660                                     receive_data@data 0019  
                                   ___llmod@dividend 0013                                               _ANSELA 000F38  
                                             _ANSELB 000F39                                               _ANSELC 000F3A  
                                             ?_ultoa 0020                                       __CFG_WDTEN$OFF 000000  
                                             _INTCON 000FF2                                SPI_send_data@sendGood 0014  
                                         _Timer0_ISR 0008                                       __CFG_XINST$OFF 000000  
                                             ___lmul 155C                                               ___wmul 179E  
                                    ?_communications 0001                                       __CFG_STVREN$ON 000000  
                                          ??___lldiv 001B                                            ??___llmod 001B  
                                             clear_0 1430                                               clear_1 143C  
                                     ?_SPI_send_data 0001                           ?_com_command_setEnergyUsed 002D  
                                          ??_initOSC 0013                            _process_data_parameterize 0AD2  
                                       __pdataCOMRAM 004A                                            ??_isdigit 0013  
                                       __mediumconst 0000                                               tblptrh 000FF7  
                                             tblptrl 000FF6                                               tblptru 000FF8  
                                             ultoa@c 002C                             com_command_setPower@temp 00C0  
                                             ultoa@v 0028                                            ??_strcmp2 0017  
                                   __end_of_strmatch 1750                                        ?_receive_data 0016  
                                         __accesstop 0060                              __end_of__initialization 1442  
                    powerPulseCheck@timerCountHFLast 00D0                      com_command_setPower@send_buffer 002D  
                                      ___rparam_used 000001                                    SPI_send_data@data 0013  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 184E  
                                 __size_of_delayMS10 0032                           receive_data@receive_buffer 0016  
                                      __end_of_ultoa 0E74                            ??_process_data_parameters 0033  
                 powerPulseCheck@meterEnergyUsedPart 0060                         communications@receive_buffer 0096  
              command_builder_add_string@data_string 0019                   __end_of_command_builder_add_string 1386  
                         _command_builder_add_string 130A                                              ??_ultoa 0028  
                                         __pbssBANK0 0060                                       ??_receive_data 0018  
                                    __CFG_PLLCFG$OFF 000000                                         strcmp2@match 001A  
                                 __size_of_initTimer 0018                                          ?_Timer0_ISR 0001  
                                 __CFG_CCP2MX$PORTC1 000000                                              ?___lmul 0013  
                                            ?___wmul 0013                                   __CFG_CCP3MX$PORTB5 000000  
                                    ??_SPI_send_data 0013                                   __size_of_send_data 0090  
process_data_parameters@end_of_transmission_received 0033           communications@end_of_transmission_received 0040  
                                     ___lmul@product 001B                          __end_of_resetCommunications 11F8  
                                    _meterEnergyUsed 0064                                              _INTCON2 000FF1  
                                            _INTCON3 000FF0                         __end_of_com_command_setPower 15FC  
                                  __CFG_PRICLKEN$OFF 000000                             _send_end_of_transmission 1832  
                                            _SSP2BUF 000F6F                             _command_builder_add_char 1506  
                                  __end_of_delayMS10 16C0                      __end_of_process_data_parameters 0906  
                           __end_of_SPI_receive_data 1778                            __size_of_command_builder1 0056  
                          __size_of_command_builder3 009E      process_data_parameterize@buffer_to_parameterize 001B  
                                    __CFG_PWRTEN$OFF 000000                                              __Hparam 0000  
                            ?_com_command_setVersion 0027                                              __Lparam 0000  
                                    __size_of___lmul 0056             process_data_parameterize@parameter_index 0022  
                                            ___lldiv 1288                                      __size_of___wmul 0026  
                                            ___llmod 1386                                         __psmallconst 0600  
                               SPI_receive_data@data 0013                                              __pcinit 13EC  
                                            __ramtop 0600                                            ?_strmatch 001E  
                                            __ptext0 1450                                              __ptext1 16C0  
                                            __ptext2 0906                                              __ptext3 1802  
                                            __ptext4 1848                                              __ptext5 181A  
                                            __ptext6 168E                                              __ptext7 10C6  
                                            __ptext8 11F8                                              __ptext9 17C4  
                                         _meterWatts 0068                                            _T0CONbits 000FD5  
                                            _initOSC 181A                                    __end_of_initTimer 181A  
                                            _isdigit 17E4                                  __size_of_Timer0_ISR 00B8  
                                            _strcmp2 0C52                                 end_of_initialization 1442  
                 __size_of_process_data_parameterize 0180                                    __end_of_send_data 1288  
                          powerPulseCheck@firstPulse 004C                                        __Lmediumconst 0000  
                     __end_of_com_command_setVersion 179E                             __size_of_powerPulseCheck 01CC  
                                   ??_communications 0034                                      ___lldiv@divisor 0017  
                                    ___lldiv@counter 001F          process_data_parameterize@parameter_position 0023  
                                            postdec1 000FE5                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              receive_data@my_status 003D                                 __end_of_receive_data 1028  
                                         ??_strmatch 0022                                            _PORTAbits 000F80  
                                          _PORTBbits 000F81                      communications@last_state_active 003E  
                        ??_com_command_setEnergyUsed 002F                                        ?_process_data 00CC  
                                         _toggleBlue 16C0                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                   powerPulseCheck@timerCountHFCheck 004A                           process_data@receive_buffer 00CC  
                  __end_of_process_data_parameterize 0C52                                 _com_command_setPower 15B2  
                communications@receive_current_state 003F                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 15B2                                       __end_of___wmul 17C4  
                                      __pidataCOMRAM 1852                command_builder_add_string@send_buffer 0017  
                                     ??_process_data 0034                          ?_command_builder_add_string 0017  
                                start_initialization 13EC                         resetCommunications@commState 003B  
                                   _command_builder1 14B0                                     _command_builder3 1028  
                          _com_command_setEnergyUsed 15FC                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 002D                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    ??_powerPulseCheck 0020  
                                        __pdataBANK0 00D0                           ??_send_end_of_transmission 0025  
                         ??_command_builder_add_char 0016                                          ?_toggleBlue 0001  
                                        __pbssCOMRAM 0037                                        __pcstackBANK0 00C0  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2124 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 168E                        com_command_setEnergyUsed@temp 00C0  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 002F                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 17E4                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 002F  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                  send_data@send_end 0019                                            _initTimer 1802  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 0098  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                             pulseFoutPassThru@runonce 0044  
                                       _receive_data 0F68                                       ___wmul@product 0017  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 1720                                            _send_data 11F8  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 002F  
                                __size_of_toggleBlue 0030                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                            main@isLow 0036  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 168E                                            copy_data0 1400  
           process_data@end_of_transmission_received 0132                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 004A  
                   __end_of_send_end_of_transmission 1848                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 155C  
                           __end_of_command_builder1 1506                             __end_of_command_builder3 10C6  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                           __ptext10 1160                                             __ptext11 1778  
                                           __ptext20 14B0                                             __ptext12 15B2  
                                           __ptext21 15FC                                             __ptext13 0F68  
                                           __ptext30 155C                                             __ptext22 0D7E  
                                           __ptext14 1750                                             __ptext31 0AD2  
                                           __ptext23 1386                                             __ptext15 16F0  
                                           __ptext32 179E                                             __ptext24 1288  
                                           __ptext16 0660                                             __ptext33 1646  
                                           __ptext25 1028                                             __ptext17 1720  
                                           __ptext26 130A                                             __ptext18 0C52  
                                           __ptext27 1506                                             __ptext19 1832  
                                           __ptext28 0E74                                             __ptext29 17E4  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0906                                        __size_of_atol 00F4  
                                      __size_of_main 0060                                        strmatch@match 0024  
                                      __size_of_init 0006                          powerPulseCheck@mcpHFoutLast 0043  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                        powerPulseCheck@mcpLFoutLast 0042                                             int$flags 004D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 1646  
                            __size_of_communications 009A                                             _strmatch 1720  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 00CE  
                                       ??_toggleBlue 0013                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0030  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0046                                         _timerCountLF 0037  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 0034  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                 __end_of_toggleBlue 16F0                                  _resetCommunications 1160  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 16F0                                    _SPI_transmit_wait 0041  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 006C  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0AD2                                 ?_resetCommunications 002F  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0023  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013  
