

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 13 15:28:01 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F25K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  00188C                     __pidataCOMRAM:
    92                           	opt stack 0
    93                           
    94                           ;initializer for powerPulseCheck@timerCountHFCheck
    95  00188C  0001               	dw	1
    96                           
    97                           ;initializer for powerPulseCheck@firstPulse
    98  00188E  01                 	db	1
    99                           
   100                           	psect	idataBANK0
   101  001888                     __pidataBANK0:
   102                           	opt stack 0
   103                           
   104                           ;initializer for powerPulseCheck@timerCountHFLast
   105  001888  FFFF               	dw	65535
   106  00188A  7FFF               	dw	32767
   107  0000                     _ANSELBbits	set	3897
   108  0000                     _ANSELAbits	set	3896
   109  0000                     _ANSELC	set	3898
   110  0000                     _ANSELB	set	3897
   111  0000                     _ANSELA	set	3896
   112  0000                     _SSP2CON3bits	set	3945
   113  0000                     _SSP2CON3	set	3945
   114  0000                     _SSP2BUF	set	3951
   115  0000                     _SSP2STATbits	set	3949
   116  0000                     _SSP2CON1bits	set	3948
   117  0000                     _T0CONbits	set	4053
   118  0000                     _IPR5	set	3967
   119  0000                     _IPR4	set	3964
   120  0000                     _IPR3	set	4005
   121  0000                     _IPR2	set	4002
   122  0000                     _IPR1	set	3999
   123  0000                     _PIE5	set	3965
   124  0000                     _PIE4	set	3962
   125  0000                     _PIE3	set	4003
   126  0000                     _PIE2	set	4000
   127  0000                     _PIE1	set	3997
   128  0000                     _PIR5	set	3966
   129  0000                     _PIR4	set	3963
   130  0000                     _PIR3	set	4004
   131  0000                     _PIR2	set	4001
   132  0000                     _PIR1	set	3998
   133  0000                     _RCONbits	set	4048
   134  0000                     _INTCON3	set	4080
   135  0000                     _INTCON2	set	4081
   136  0000                     _INTCON	set	4082
   137  0000                     _ADCON0bits	set	4034
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _OSCCON2bits	set	4050
   140  0000                     _OSCCONbits	set	4051
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR0H	set	4055
   143  0000                     _INTCONbits	set	4082
   144  0000                     _PORTCbits	set	3970
   145  0000                     _PORTBbits	set	3969
   146  0000                     _PORTAbits	set	3968
   147  0000                     _TRISAbits	set	3986
   148  0000                     _LATCbits	set	3979
   149  0000                     _LATBbits	set	3978
   150  0000                     _TRISCbits	set	3988
   151  0000                     _TRISBbits	set	3987
   152                           
   153                           	psect	smallconst
   154  000600                     __psmallconst:
   155                           	opt stack 0
   156  000600  00                 	db	0
   157  000601                     STR_3:
   158  000601  43                 	db	67	;'C'
   159  000602  61                 	db	97	;'a'
   160  000603  6C                 	db	108	;'l'
   161  000604  69                 	db	105	;'i'
   162  000605  62                 	db	98	;'b'
   163  000606  72                 	db	114	;'r'
   164  000607  61                 	db	97	;'a'
   165  000608  74                 	db	116	;'t'
   166  000609  69                 	db	105	;'i'
   167  00060A  6F                 	db	111	;'o'
   168  00060B  6E                 	db	110	;'n'
   169  00060C  00                 	db	0
   170  00060D                     STR_22:
   171  00060D  50                 	db	80	;'P'
   172  00060E  53                 	db	83	;'S'
   173  00060F  56                 	db	86	;'V'
   174  000610  65                 	db	101	;'e'
   175  000611  72                 	db	114	;'r'
   176  000612  73                 	db	115	;'s'
   177  000613  69                 	db	105	;'i'
   178  000614  6F                 	db	111	;'o'
   179  000615  6E                 	db	110	;'n'
   180  000616  00                 	db	0
   181  000617                     STR_4:
   182  000617  45                 	db	69	;'E'
   183  000618  6E                 	db	110	;'n'
   184  000619  55                 	db	85	;'U'
   185  00061A  73                 	db	115	;'s'
   186  00061B  65                 	db	101	;'e'
   187  00061C  64                 	db	100	;'d'
   188  00061D  00                 	db	0
   189  00061E                     STR_20:
   190  00061E  56                 	db	86	;'V'
   191  00061F  6F                 	db	111	;'o'
   192  000620  6C                 	db	108	;'l'
   193  000621  74                 	db	116	;'t'
   194  000622  73                 	db	115	;'s'
   195  000623  00                 	db	0
   196  000624                     STR_18:
   197  000624  57                 	db	87	;'W'
   198  000625  61                 	db	97	;'a'
   199  000626  74                 	db	116	;'t'
   200  000627  74                 	db	116	;'t'
   201  000628  73                 	db	115	;'s'
   202  000629  00                 	db	0
   203  00062A                     STR_7:
   204  00062A  4C                 	db	76	;'L'
   205  00062B  45                 	db	69	;'E'
   206  00062C  44                 	db	68	;'D'
   207  00062D  42                 	db	66	;'B'
   208  00062E  00                 	db	0
   209  00062F                     STR_6:
   210  00062F  44                 	db	68	;'D'
   211  000630  61                 	db	97	;'a'
   212  000631  74                 	db	116	;'t'
   213  000632  61                 	db	97	;'a'
   214  000633  00                 	db	0
   215  000634                     STR_5:
   216  000634  52                 	db	82	;'R'
   217  000635  65                 	db	101	;'e'
   218  000636  61                 	db	97	;'a'
   219  000637  64                 	db	100	;'d'
   220  000638  00                 	db	0
   221  000639                     STR_16:
   222  000639  43                 	db	67	;'C'
   223  00063A  6F                 	db	111	;'o'
   224  00063B  6E                 	db	110	;'n'
   225  00063C  66                 	db	102	;'f'
   226  00063D  00                 	db	0
   227  00063E                     STR_21:
   228  00063E  41                 	db	65	;'A'
   229  00063F  6D                 	db	109	;'m'
   230  000640  70                 	db	112	;'p'
   231  000641  73                 	db	115	;'s'
   232  000642  00                 	db	0
   233  000643  32                 	db	50	;'2'
   234  000644  32                 	db	50	;'2'
   235  000645  32                 	db	50	;'2'
   236  000646  00                 	db	0
   237  000647  33                 	db	51	;'3'
   238  000648  33                 	db	51	;'3'
   239  000649  33                 	db	51	;'3'
   240  00064A  00                 	db	0
   241  00064B                     STR_40:
   242  00064B  34                 	db	52	;'4'
   243  00064C  34                 	db	52	;'4'
   244  00064D  34                 	db	52	;'4'
   245  00064E  00                 	db	0
   246  00064F                     STR_1:
   247  00064F  45                 	db	69	;'E'
   248  000650  4E                 	db	78	;'N'
   249  000651  44                 	db	68	;'D'
   250  000652  00                 	db	0
   251  000653                     STR_11:
   252  000653  4F                 	db	79	;'O'
   253  000654  66                 	db	102	;'f'
   254  000655  66                 	db	102	;'f'
   255  000656  00                 	db	0
   256  000657                     STR_2:
   257  000657  53                 	db	83	;'S'
   258  000658  65                 	db	101	;'e'
   259  000659  74                 	db	116	;'t'
   260  00065A  00                 	db	0
   261  00065B                     STR_8:
   262  00065B  4F                 	db	79	;'O'
   263  00065C  6E                 	db	110	;'n'
   264  00065D  00                 	db	0
   265  0000                     
   266                           ; #config settings
   267  00065E  00                 	db	0	; dummy byte at the end
   268  0000                     
   269                           	psect	cinit
   270  001460                     __pcinit:
   271                           	opt stack 0
   272  001460                     start_initialization:
   273                           	opt stack 0
   274  001460                     __initialization:
   275                           	opt stack 0
   276                           
   277                           ; Initialize objects allocated to BANK0 (4 bytes)
   278                           ; load TBLPTR registers with __pidataBANK0
   279  001460  0E88               	movlw	low __pidataBANK0
   280  001462  6EF6               	movwf	tblptrl,c
   281  001464  0E18               	movlw	high __pidataBANK0
   282  001466  6EF7               	movwf	tblptrh,c
   283  001468  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   284  00146A  6EF8               	movwf	tblptru,c
   285  00146C  EE00  F0D1         	lfsr	0,__pdataBANK0
   286  001470  EE10 F004          	lfsr	1,4
   287  001474                     copy_data0:
   288  001474  0009               	tblrd		*+
   289  001476  CFF5 FFEE          	movff	tablat,postinc0
   290  00147A  50E5               	movf	postdec1,w,c
   291  00147C  50E1               	movf	fsr1l,w,c
   292  00147E  E1FA               	bnz	copy_data0
   293                           
   294                           ; Initialize objects allocated to COMRAM (3 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296  001480  0E8C               	movlw	low __pidataCOMRAM
   297  001482  6EF6               	movwf	tblptrl,c
   298  001484  0E18               	movlw	high __pidataCOMRAM
   299  001486  6EF7               	movwf	tblptrh,c
   300  001488  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301  00148A  6EF8               	movwf	tblptru,c
   302  00148C  0009               	tblrd		*+	;fetch initializer
   303  00148E  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   304  001492  0009               	tblrd		*+	;fetch initializer
   305  001494  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   306  001498  0009               	tblrd		*+	;fetch initializer
   307  00149A  CFF5 F04C          	movff	tablat,__pdataCOMRAM+2
   308                           
   309                           ; Clear objects allocated to BANK0 (96 bytes)
   310  00149E  EE00  F060         	lfsr	0,__pbssBANK0
   311  0014A2  0E60               	movlw	96
   312  0014A4                     clear_0:
   313  0014A4  6AEE               	clrf	postinc0,c
   314  0014A6  06E8               	decf	wreg,f,c
   315  0014A8  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to COMRAM (20 bytes)
   318  0014AA  EE00  F036         	lfsr	0,__pbssCOMRAM
   319  0014AE  0E14               	movlw	20
   320  0014B0                     clear_1:
   321  0014B0  6AEE               	clrf	postinc0,c
   322  0014B2  06E8               	decf	wreg,f,c
   323  0014B4  E1FD               	bnz	clear_1
   324  0014B6                     end_of_initialization:
   325                           	opt stack 0
   326  0014B6                     __end_of__initialization:
   327                           	opt stack 0
   328  0014B6  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  0014B8  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  0014BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  0014BC  6EF8               	movwf	tblptru,c
   332  0014BE  0100               	movlb	0
   333  0014C0  EFC0  F009         	goto	_main	;jump to C main() function
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	bssCOMRAM
   344  000036                     __pbssCOMRAM:
   345                           	opt stack 0
   346  000036                     _timerCountLF:
   347                           	opt stack 0
   348  000036                     	ds	4
   349  00003A                     resetCommunications@commState:
   350                           	opt stack 0
   351  00003A                     	ds	2
   352  00003C                     receive_data@my_status:
   353                           	opt stack 0
   354  00003C                     	ds	1
   355  00003D                     communications@last_state_active:
   356                           	opt stack 0
   357  00003D                     	ds	1
   358  00003E                     communications@receive_current_state:
   359                           	opt stack 0
   360  00003E                     	ds	1
   361  00003F                     communications@end_of_transmission_received:
   362                           	opt stack 0
   363  00003F                     	ds	1
   364  000040                     _SPI_transmit_wait:
   365                           	opt stack 0
   366  000040                     	ds	1
   367  000041                     powerPulseCheck@mcpLFoutLast:
   368                           	opt stack 0
   369  000041                     	ds	1
   370  000042                     powerPulseCheck@mcpHFoutLast:
   371                           	opt stack 0
   372  000042                     	ds	1
   373  000043                     toggleLEDs@runonceHF:
   374                           	opt stack 0
   375  000043                     	ds	1
   376  000044                     toggleLEDs@runonceLF:
   377                           	opt stack 0
   378  000044                     	ds	1
   379  000045                     _isLow:
   380                           	opt stack 0
   381  000045                     	ds	1
   382  000046                     _timerCountHF:
   383                           	opt stack 0
   384  000046                     	ds	4
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	dataCOMRAM
   395  00004A                     __pdataCOMRAM:
   396                           	opt stack 0
   397  00004A                     powerPulseCheck@timerCountHFCheck:
   398                           	opt stack 0
   399  00004A                     	ds	2
   400  00004C                     powerPulseCheck@firstPulse:
   401                           	opt stack 0
   402  00004C                     	ds	1
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	bssBANK0
   413  000060                     __pbssBANK0:
   414                           	opt stack 0
   415  000060                     powerPulseCheck@meterEnergyUsedPart:
   416                           	opt stack 0
   417  000060                     	ds	4
   418  000064                     _meterEnergyUsed:
   419                           	opt stack 0
   420  000064                     	ds	4
   421  000068                     _meterWatts:
   422                           	opt stack 0
   423  000068                     	ds	4
   424  00006C                     communications@send_buffer:
   425                           	opt stack 0
   426  00006C                     	ds	42
   427  000096                     communications@receive_buffer:
   428                           	opt stack 0
   429  000096                     	ds	42
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	dataBANK0
   440  0000D1                     __pdataBANK0:
   441                           	opt stack 0
   442  0000D1                     powerPulseCheck@timerCountHFLast:
   443                           	opt stack 0
   444  0000D1                     	ds	4
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	cstackBANK1
   455  000100                     __pcstackBANK1:
   456                           	opt stack 0
   457  000100                     process_data@parameters:
   458                           	opt stack 0
   459                           
   460                           ; 50 bytes @ 0x0
   461  000100                     	ds	50
   462  000132                     process_data@end_of_transmission_received:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x32
   466  000132                     	ds	1
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackBANK0
   477  0000C0                     __pcstackBANK0:
   478                           	opt stack 0
   479  0000C0                     com_command_setPower@temp:
   480                           	opt stack 0
   481  0000C0                     com_command_setEnergyUsed@temp:
   482                           	opt stack 0
   483                           
   484                           ; 12 bytes @ 0x0
   485  0000C0                     	ds	12
   486  0000CC                     process_data@receive_buffer:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0xC
   490  0000CC                     	ds	2
   491  0000CE                     process_data@send_buffer:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0xE
   495  0000CE                     	ds	2
   496  0000D0                     main@isLow:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x10
   500  0000D0                     	ds	1
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	cstackCOMRAM
   511  000001                     __pcstackCOMRAM:
   512                           	opt stack 0
   513  000001                     ??_Timer0_ISR:
   514                           
   515                           ; 1 bytes @ 0x0
   516  000001                     	ds	18
   517  000013                     ??_isdigit:
   518  000013                     ?_strcmp2:
   519                           	opt stack 0
   520  000013                     ?___wmul:
   521                           	opt stack 0
   522  000013                     ?___lmul:
   523                           	opt stack 0
   524  000013                     ?___lldiv:
   525                           	opt stack 0
   526  000013                     ?___llmod:
   527                           	opt stack 0
   528  000013                     SPI_send_data@data:
   529                           	opt stack 0
   530  000013                     delayMS10@count:
   531                           	opt stack 0
   532  000013                     command_builder_add_char@send_buffer:
   533                           	opt stack 0
   534  000013                     strcmp2@a:
   535                           	opt stack 0
   536  000013                     SPI_receive_data@data:
   537                           	opt stack 0
   538  000013                     ___wmul@multiplier:
   539                           	opt stack 0
   540  000013                     ___lmul@multiplier:
   541                           	opt stack 0
   542  000013                     ___lldiv@dividend:
   543                           	opt stack 0
   544  000013                     ___llmod@dividend:
   545                           	opt stack 0
   546                           
   547                           ; 4 bytes @ 0x12
   548  000013                     	ds	1
   549  000014                     SPI_send_data@sendGood:
   550                           	opt stack 0
   551  000014                     _isdigit$2226:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x13
   555  000014                     	ds	1
   556  000015                     ??_delayMS10:
   557  000015                     command_builder_add_char@data:
   558                           	opt stack 0
   559  000015                     SPI_receive_data@recvGood:
   560                           	opt stack 0
   561  000015                     isdigit@c:
   562                           	opt stack 0
   563  000015                     send_data@send_buffer:
   564                           	opt stack 0
   565  000015                     strcmp2@b:
   566                           	opt stack 0
   567  000015                     ___wmul@multiplicand:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x14
   571  000015                     	ds	1
   572  000016                     ??_command_builder_add_char:
   573  000016                     delayMS10@inx:
   574                           	opt stack 0
   575  000016                     receive_data@receive_buffer:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x15
   579  000016                     	ds	1
   580  000017                     ??_send_data:
   581  000017                     ??_strcmp2:
   582  000017                     command_builder_add_string@send_buffer:
   583                           	opt stack 0
   584  000017                     ___wmul@product:
   585                           	opt stack 0
   586  000017                     ___lmul@multiplicand:
   587                           	opt stack 0
   588  000017                     ___lldiv@divisor:
   589                           	opt stack 0
   590  000017                     ___llmod@divisor:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x16
   594  000017                     	ds	1
   595  000018                     ??_receive_data:
   596                           
   597                           ; 1 bytes @ 0x17
   598  000018                     	ds	1
   599  000019                     receive_data@data:
   600                           	opt stack 0
   601  000019                     send_data@send_end:
   602                           	opt stack 0
   603  000019                     process_data_parameterize@parameters:
   604                           	opt stack 0
   605  000019                     command_builder_add_string@data_string:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x18
   609  000019                     	ds	1
   610  00001A                     strcmp2@match:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x19
   614  00001A                     	ds	1
   615  00001B                     ??_command_builder_add_string:
   616  00001B                     ___llmod@counter:
   617                           	opt stack 0
   618  00001B                     process_data_parameterize@buffer_to_parameterize:
   619                           	opt stack 0
   620  00001B                     ___lmul@product:
   621                           	opt stack 0
   622  00001B                     ___lldiv@quotient:
   623                           	opt stack 0
   624                           
   625                           ; 4 bytes @ 0x1A
   626  00001B                     	ds	1
   627  00001C                     strcmp2@inx:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x1B
   631  00001C                     	ds	1
   632  00001D                     ??_process_data_parameterize:
   633  00001D                     command_builder_add_string@inx:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x1C
   637  00001D                     	ds	1
   638  00001E                     strmatch@a:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x1D
   642  00001E                     	ds	1
   643  00001F                     ?_atol:
   644                           	opt stack 0
   645  00001F                     ___lldiv@counter:
   646                           	opt stack 0
   647  00001F                     command_builder1@send_buffer:
   648                           	opt stack 0
   649  00001F                     command_builder3@send_buffer:
   650                           	opt stack 0
   651  00001F                     atol@s:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x1E
   655  00001F                     	ds	1
   656  000020                     process_data_parameterize@inx:
   657                           	opt stack 0
   658  000020                     strmatch@b:
   659                           	opt stack 0
   660  000020                     ultoa@buf:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x1F
   664  000020                     	ds	1
   665  000021                     command_builder1@data1:
   666                           	opt stack 0
   667  000021                     command_builder3@data1:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x20
   671  000021                     	ds	1
   672  000022                     process_data_parameterize@parameter_index:
   673                           	opt stack 0
   674  000022                     strmatch@result:
   675                           	opt stack 0
   676  000022                     ultoa@val:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0x21
   680  000022                     	ds	1
   681  000023                     ??_atol:
   682  000023                     process_data_parameterize@parameter_position:
   683                           	opt stack 0
   684  000023                     command_builder3@data2:
   685                           	opt stack 0
   686  000023                     send_end_of_transmission@send_buffer:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x22
   690  000023                     	ds	1
   691  000024                     strmatch@match:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x23
   695  000024                     	ds	1
   696  000025                     command_builder3@data3:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x24
   700  000025                     	ds	1
   701  000026                     ultoa@base:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x25
   705  000026                     	ds	1
   706  000027                     atol@sign:
   707                           	opt stack 0
   708  000027                     com_command_setVersion@send_buffer:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x26
   712  000027                     	ds	1
   713  000028                     atol@a:
   714                           	opt stack 0
   715  000028                     ultoa@v:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x27
   719  000028                     	ds	1
   720  000029                     
   721                           ; 1 bytes @ 0x28
   722  000029                     	ds	3
   723  00002C                     atol@c:
   724                           	opt stack 0
   725  00002C                     ultoa@c:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x2B
   729  00002C                     	ds	1
   730  00002D                     com_command_setPower@send_buffer:
   731                           	opt stack 0
   732  00002D                     com_command_setEnergyUsed@send_buffer:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x2C
   736  00002D                     	ds	2
   737  00002F                     resetCommunications@send_buffer:
   738                           	opt stack 0
   739  00002F                     process_data_parameters@parameters:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x2E
   743  00002F                     	ds	2
   744  000031                     ??_resetCommunications:
   745  000031                     process_data_parameters@send_buffer:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x30
   749  000031                     	ds	2
   750  000033                     process_data_parameters@end_of_transmission_received:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x32
   754  000033                     	ds	1
   755  000034                     communications@no_more_to_send:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x33
   759  000034                     	ds	1
   760  000035                     communications@firstTime:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x34
   764  000035                     	ds	1
   765  000036                     tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           postdec1	equ	0xFE5
   772                           fsr1l	equ	0xFE1
   773                           
   774                           ; 1 bytes @ 0x35
   775 ;;
   776 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   777 ;;
   778 ;; *************** function _main *****************
   779 ;; Defined at:
   780 ;;		line 91 in file "Current_Sense_Main.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  isLow           1   16[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       0       0       0       0       0       0
   795 ;;      Locals:         0       1       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0
   797 ;;      Totals:         0       1       0       0       0       0       0
   798 ;;Total ram usage:        1 bytes
   799 ;; Hardware stack levels required when called:    8
   800 ;; This function calls:
   801 ;;		_communications
   802 ;;		_delayMS10
   803 ;;		_init
   804 ;;		_initTimer
   805 ;;		_powerPulseCheck
   806 ;;		_toggleLEDs
   807 ;; This function is called by:
   808 ;;		Startup code after reset
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text0
   813  001380                     __ptext0:
   814                           	opt stack 0
   815  001380                     _main:
   816                           	opt stack 23
   817                           
   818                           ;Current_Sense_Main.c: 93: init();
   819                           
   820                           ;incstack = 0
   821  001380  EC41  F00C         	call	_init	;wreg free
   822                           
   823                           ;Current_Sense_Main.c: 96: TRISBbits.TRISB4 = 0;
   824  001384  9893               	bcf	3987,4,c	;volatile
   825                           
   826                           ;Current_Sense_Main.c: 97: TRISCbits.TRISC0 = 0;
   827  001386  9094               	bcf	3988,0,c	;volatile
   828                           
   829                           ;Current_Sense_Main.c: 98: TRISCbits.TRISC1 = 0;
   830  001388  9294               	bcf	3988,1,c	;volatile
   831                           
   832                           ;Current_Sense_Main.c: 102: LATBbits.LATB4 = 1;
   833  00138A  888A               	bsf	3978,4,c	;volatile
   834                           
   835                           ;Current_Sense_Main.c: 103: LATCbits.LATC1 = 1;
   836  00138C  828B               	bsf	3979,1,c	;volatile
   837                           
   838                           ;Current_Sense_Main.c: 104: LATCbits.LATC0 = 1;
   839  00138E  808B               	bsf	3979,0,c	;volatile
   840                           
   841                           ;Current_Sense_Main.c: 107: TRISCbits.TRISC7 = 0;
   842  001390  9E94               	bcf	3988,7,c	;volatile
   843                           
   844                           ;Current_Sense_Main.c: 108: TRISCbits.TRISC4 = 0;
   845  001392  9894               	bcf	3988,4,c	;volatile
   846                           
   847                           ;Current_Sense_Main.c: 109: TRISCbits.TRISC3 = 0;
   848  001394  9694               	bcf	3988,3,c	;volatile
   849                           
   850                           ;Current_Sense_Main.c: 110: TRISCbits.TRISC6 = 0;
   851  001396  9C94               	bcf	3988,6,c	;volatile
   852                           
   853                           ;Current_Sense_Main.c: 111: ANSELA = 0b00000000;
   854  001398  0E00               	movlw	0
   855  00139A  010F               	movlb	15	; () banked
   856  00139C  6F38               	movwf	56,b	;volatile
   857                           
   858                           ; BSR set to: 15
   859                           ;Current_Sense_Main.c: 112: ANSELB = 0b00000000;
   860  00139E  0E00               	movlw	0
   861  0013A0  6F39               	movwf	57,b	;volatile
   862                           
   863                           ; BSR set to: 15
   864                           ;Current_Sense_Main.c: 113: ANSELC = 0b00000000;
   865  0013A2  0E00               	movlw	0
   866  0013A4  6F3A               	movwf	58,b	;volatile
   867                           
   868                           ; BSR set to: 15
   869                           ;Current_Sense_Main.c: 119: LATCbits.LATC6 = 1;
   870  0013A6  8C8B               	bsf	3979,6,c	;volatile
   871                           
   872                           ; BSR set to: 15
   873                           ;Current_Sense_Main.c: 120: LATCbits.LATC7 = 1;
   874  0013A8  8E8B               	bsf	3979,7,c	;volatile
   875                           
   876                           ; BSR set to: 15
   877                           ;Current_Sense_Main.c: 121: LATCbits.LATC4 = 1;
   878  0013AA  888B               	bsf	3979,4,c	;volatile
   879                           
   880                           ; BSR set to: 15
   881                           ;Current_Sense_Main.c: 122: LATCbits.LATC3 = 0;
   882  0013AC  968B               	bcf	3979,3,c	;volatile
   883                           
   884                           ; BSR set to: 15
   885                           ;Current_Sense_Main.c: 125: delayMS10(5);
   886  0013AE  0E00               	movlw	0
   887  0013B0  6E14               	movwf	delayMS10@count+1,c
   888  0013B2  0E05               	movlw	5
   889  0013B4  6E13               	movwf	delayMS10@count,c
   890  0013B6  EC7C  F00B         	call	_delayMS10	;wreg free
   891                           
   892                           ;Current_Sense_Main.c: 128: TRISAbits.TRISA2 = 1;
   893  0013BA  8492               	bsf	3986,2,c	;volatile
   894                           
   895                           ;Current_Sense_Main.c: 130: LATBbits.LATB4 = 0;
   896  0013BC  988A               	bcf	3978,4,c	;volatile
   897                           
   898                           ;Current_Sense_Main.c: 131: LATCbits.LATC1 = 0;
   899  0013BE  928B               	bcf	3979,1,c	;volatile
   900                           
   901                           ;Current_Sense_Main.c: 132: LATCbits.LATC0 = 0;
   902  0013C0  908B               	bcf	3979,0,c	;volatile
   903                           
   904                           ;Current_Sense_Main.c: 134: bool isLow = 0;
   905  0013C2  0E00               	movlw	0
   906  0013C4  0100               	movlb	0	; () banked
   907  0013C6  6FD0               	movwf	main@isLow& (0+255),b
   908                           
   909                           ; BSR set to: 0
   910                           ;Current_Sense_Main.c: 135: communications(1);
   911  0013C8  0E01               	movlw	1
   912  0013CA  EC60  F008         	call	_communications
   913  0013CE                     
   914                           ;Current_Sense_Main.c: 140: {
   915                           ;Current_Sense_Main.c: 142: if (meterEnergyUsed > 5000) {
   916  0013CE  0100               	movlb	0	; () banked
   917  0013D0  5167               	movf	(_meterEnergyUsed+3)& (0+255),w,b
   918  0013D2  1166               	iorwf	(_meterEnergyUsed+2)& (0+255),w,b
   919  0013D4  E106               	bnz	u2890
   920  0013D6  0E89               	movlw	137
   921  0013D8  5D64               	subwf	_meterEnergyUsed& (0+255),w,b
   922  0013DA  0E13               	movlw	19
   923  0013DC  5965               	subwfb	(_meterEnergyUsed+1)& (0+255),w,b
   924  0013DE  A0D8               	btfss	status,0,c
   925  0013E0  D002               	goto	l108
   926  0013E2                     u2890:
   927                           
   928                           ; BSR set to: 0
   929                           ;Current_Sense_Main.c: 143: TRISCbits.TRISC1 = 0;
   930  0013E2  9294               	bcf	3988,1,c	;volatile
   931                           
   932                           ;Current_Sense_Main.c: 144: LATCbits.LATC1 = 1;
   933  0013E4  828B               	bsf	3979,1,c	;volatile
   934  0013E6                     l108:
   935                           
   936                           ; BSR set to: 0
   937                           ;Current_Sense_Main.c: 145: }
   938                           ;Current_Sense_Main.c: 158: toggleLEDs();
   939                           
   940                           ; BSR set to: 0
   941  0013E6  EC5D  F00B         	call	_toggleLEDs	;wreg free
   942                           
   943                           ;Current_Sense_Main.c: 197: initTimer();
   944  0013EA  EC1E  F00C         	call	_initTimer	;wreg free
   945                           
   946                           ;Current_Sense_Main.c: 240: communications(0);
   947  0013EE  0E00               	movlw	0
   948  0013F0  EC60  F008         	call	_communications
   949                           
   950                           ;Current_Sense_Main.c: 254: powerPulseCheck();
   951  0013F4  EC83  F004         	call	_powerPulseCheck	;wreg free
   952  0013F8  D7EA               	goto	l107
   953  0013FA                     __end_of_main:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1l	equ	0xFE1
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _toggleLEDs *****************
   966 ;; Defined at:
   967 ;;		line 372 in file "Current_Sense_Main.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   981 ;;      Params:         0       0       0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text1
   996  0016BA                     __ptext1:
   997                           	opt stack 0
   998  0016BA                     _toggleLEDs:
   999                           	opt stack 29
  1000                           
  1001                           ;Current_Sense_Main.c: 374: static bool runonceLF = 0;
  1002                           ;Current_Sense_Main.c: 375: static bool runonceHF = 0;
  1003                           ;Current_Sense_Main.c: 378: if (PORTAbits.RA2 == 0) {
  1004                           
  1005                           ;incstack = 0
  1006  0016BA  B480               	btfsc	3968,2,c	;volatile
  1007  0016BC  D00B               	goto	l128
  1008                           
  1009                           ;Current_Sense_Main.c: 379: if (runonceLF == 0) {
  1010  0016BE  5044               	movf	toggleLEDs@runonceLF,w,c
  1011  0016C0  A4D8               	btfss	status,2,c
  1012  0016C2  D00A               	goto	l132
  1013                           
  1014                           ;Current_Sense_Main.c: 380: runonceLF = 1;
  1015  0016C4  0E01               	movlw	1
  1016  0016C6  6E44               	movwf	toggleLEDs@runonceLF,c
  1017                           
  1018                           ;Current_Sense_Main.c: 381: if (PORTBbits.RB4 == 1) {
  1019  0016C8  A881               	btfss	3969,4,c	;volatile
  1020  0016CA  D002               	goto	l130
  1021                           
  1022                           ;Current_Sense_Main.c: 382: LATBbits.LATB4 = 0;
  1023  0016CC  988A               	bcf	3978,4,c	;volatile
  1024                           
  1025                           ;Current_Sense_Main.c: 383: } else
  1026  0016CE  D004               	goto	l132
  1027  0016D0                     l130:
  1028                           
  1029                           ;Current_Sense_Main.c: 384: {
  1030                           ;Current_Sense_Main.c: 385: LATBbits.LATB4 = 1;
  1031  0016D0  888A               	bsf	3978,4,c	;volatile
  1032                           
  1033                           ;Current_Sense_Main.c: 386: }
  1034                           ;Current_Sense_Main.c: 387: }
  1035                           ;Current_Sense_Main.c: 388: } else {
  1036  0016D2  D002               	goto	l132
  1037  0016D4                     l128:
  1038                           
  1039                           ;Current_Sense_Main.c: 389: runonceLF = 0;
  1040  0016D4  0E00               	movlw	0
  1041  0016D6  6E44               	movwf	toggleLEDs@runonceLF,c
  1042  0016D8                     l132:
  1043                           
  1044                           ;Current_Sense_Main.c: 390: }
  1045                           ;Current_Sense_Main.c: 393: if (PORTAbits.RA3 == 0) {
  1046  0016D8  B680               	btfsc	3968,3,c	;volatile
  1047  0016DA  D00B               	goto	l133
  1048                           
  1049                           ;Current_Sense_Main.c: 394: if (runonceHF == 0) {
  1050  0016DC  5043               	movf	toggleLEDs@runonceHF,w,c
  1051  0016DE  A4D8               	btfss	status,2,c
  1052  0016E0  0012               	return	
  1053                           
  1054                           ;Current_Sense_Main.c: 395: runonceHF = 1;
  1055  0016E2  0E01               	movlw	1
  1056  0016E4  6E43               	movwf	toggleLEDs@runonceHF,c
  1057                           
  1058                           ;Current_Sense_Main.c: 396: if (PORTCbits.RC0 == 1) {
  1059  0016E6  A082               	btfss	3970,0,c	;volatile
  1060  0016E8  D002               	goto	l135
  1061                           
  1062                           ;Current_Sense_Main.c: 397: LATCbits.LATC0 = 0;
  1063  0016EA  908B               	bcf	3979,0,c	;volatile
  1064                           
  1065                           ;Current_Sense_Main.c: 398: } else {
  1066  0016EC  0012               	return	
  1067  0016EE                     l135:
  1068                           
  1069                           ;Current_Sense_Main.c: 399: LATCbits.LATC0 = 1;
  1070  0016EE  808B               	bsf	3979,0,c	;volatile
  1071                           
  1072                           ;Current_Sense_Main.c: 400: }
  1073                           ;Current_Sense_Main.c: 401: }
  1074                           ;Current_Sense_Main.c: 402: } else {
  1075  0016F0  0012               	return	
  1076  0016F2                     l133:
  1077                           
  1078                           ;Current_Sense_Main.c: 403: runonceHF = 0;
  1079  0016F2  0E00               	movlw	0
  1080  0016F4  6E43               	movwf	toggleLEDs@runonceHF,c
  1081  0016F6  0012               	return	
  1082  0016F8                     __end_of_toggleLEDs:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _powerPulseCheck *****************
  1095 ;; Defined at:
  1096 ;;		line 464 in file "Current_Sense_Main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1110 ;;      Params:         0       0       0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    2
  1117 ;; This function calls:
  1118 ;;		___lldiv
  1119 ;;		___lmul
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text2
  1126  000906                     __ptext2:
  1127                           	opt stack 0
  1128  000906                     _powerPulseCheck:
  1129                           	opt stack 28
  1130                           
  1131                           ;Current_Sense_Main.c: 478: static unsigned long meterEnergyUsedPart = 0;
  1132                           ;Current_Sense_Main.c: 479: static unsigned long timerCountHFLast = 2147483647;
  1133                           ;Current_Sense_Main.c: 480: static unsigned int timerCountHFCheck = 1;
  1134                           ;Current_Sense_Main.c: 481: static bool firstPulse = 1;
  1135                           ;Current_Sense_Main.c: 484: static bool mcpHFoutLast = 0;
  1136                           ;Current_Sense_Main.c: 485: static bool mcpLFoutLast = 0;
  1137                           ;Current_Sense_Main.c: 489: if (PORTAbits.RA3 == 0)
  1138                           
  1139                           ;incstack = 0
  1140  000906  B680               	btfsc	3968,3,c	;volatile
  1141  000908  D036               	goto	l158
  1142                           
  1143                           ;Current_Sense_Main.c: 490: {
  1144                           ;Current_Sense_Main.c: 491: if (mcpHFoutLast == 0)
  1145  00090A  5042               	movf	powerPulseCheck@mcpHFoutLast,w,c
  1146  00090C  A4D8               	btfss	status,2,c
  1147  00090E  D035               	goto	l160
  1148                           
  1149                           ;Current_Sense_Main.c: 492: {
  1150                           ;Current_Sense_Main.c: 493: mcpHFoutLast = 1;
  1151  000910  0E01               	movlw	1
  1152  000912  6E42               	movwf	powerPulseCheck@mcpHFoutLast,c
  1153                           
  1154                           ;Current_Sense_Main.c: 494: firstPulse = 0;
  1155  000914  0E00               	movlw	0
  1156  000916  6E4C               	movwf	powerPulseCheck@firstPulse,c
  1157                           
  1158                           ;Current_Sense_Main.c: 496: timerCountHFLast = timerCountHF;
  1159  000918  C046  F0D1         	movff	_timerCountHF,powerPulseCheck@timerCountHFLast	;volatile
  1160  00091C  C047  F0D2         	movff	_timerCountHF+1,powerPulseCheck@timerCountHFLast+1	;volatile
  1161  000920  C048  F0D3         	movff	_timerCountHF+2,powerPulseCheck@timerCountHFLast+2	;volatile
  1162  000924  C049  F0D4         	movff	_timerCountHF+3,powerPulseCheck@timerCountHFLast+3	;volatile
  1163                           
  1164                           ;Current_Sense_Main.c: 497: timerCountHF = 0;
  1165  000928  0E00               	movlw	0
  1166  00092A  6E46               	movwf	_timerCountHF,c	;volatile
  1167  00092C  0E00               	movlw	0
  1168  00092E  6E47               	movwf	_timerCountHF+1,c	;volatile
  1169  000930  0E00               	movlw	0
  1170  000932  6E48               	movwf	_timerCountHF+2,c	;volatile
  1171  000934  0E00               	movlw	0
  1172  000936  6E49               	movwf	_timerCountHF+3,c	;volatile
  1173                           
  1174                           ;Current_Sense_Main.c: 498: meterWatts = (((((unsigned long) 2500 * (unsigned long) 3600
      +                          ) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned l
      +                          ong) timerCountHFLast;
  1175  000938  0E90               	movlw	144
  1176  00093A  6E13               	movwf	___lldiv@dividend,c
  1177  00093C  0E5F               	movlw	95
  1178  00093E  6E14               	movwf	___lldiv@dividend+1,c
  1179  000940  0E01               	movlw	1
  1180  000942  6E15               	movwf	___lldiv@dividend+2,c
  1181  000944  0E00               	movlw	0
  1182  000946  6E16               	movwf	___lldiv@dividend+3,c
  1183  000948  C0D1  F017         	movff	powerPulseCheck@timerCountHFLast,___lldiv@divisor
  1184  00094C  C0D2  F018         	movff	powerPulseCheck@timerCountHFLast+1,___lldiv@divisor+1
  1185  000950  C0D3  F019         	movff	powerPulseCheck@timerCountHFLast+2,___lldiv@divisor+2
  1186  000954  C0D4  F01A         	movff	powerPulseCheck@timerCountHFLast+3,___lldiv@divisor+3
  1187  000958  EC41  F009         	call	___lldiv	;wreg free
  1188  00095C  C013  F068         	movff	?___lldiv,_meterWatts
  1189  000960  C014  F069         	movff	?___lldiv+1,_meterWatts+1
  1190  000964  C015  F06A         	movff	?___lldiv+2,_meterWatts+2
  1191  000968  C016  F06B         	movff	?___lldiv+3,_meterWatts+3
  1192                           
  1193                           ;Current_Sense_Main.c: 502: timerCountHFCheck = 1;
  1194  00096C  0E00               	movlw	0
  1195  00096E  6E4B               	movwf	powerPulseCheck@timerCountHFCheck+1,c
  1196  000970  0E01               	movlw	1
  1197  000972  6E4A               	movwf	powerPulseCheck@timerCountHFCheck,c
  1198                           
  1199                           ;Current_Sense_Main.c: 503: }
  1200                           ;Current_Sense_Main.c: 504: }
  1201  000974  D002               	goto	l160
  1202  000976                     l158:
  1203                           
  1204                           ;Current_Sense_Main.c: 505: else
  1205                           ;Current_Sense_Main.c: 506: {
  1206                           ;Current_Sense_Main.c: 507: mcpHFoutLast = 0;
  1207  000976  0E00               	movlw	0
  1208  000978  6E42               	movwf	powerPulseCheck@mcpHFoutLast,c
  1209  00097A                     l160:
  1210                           
  1211                           ;Current_Sense_Main.c: 508: }
  1212                           ;Current_Sense_Main.c: 516: if ((firstPulse == 0) && (timerCountHF > timerCountHFLast))
  1213  00097A  504C               	movf	powerPulseCheck@firstPulse,w,c
  1214  00097C  A4D8               	btfss	status,2,c
  1215  00097E  D051               	goto	l164
  1216  000980  5046               	movf	_timerCountHF,w,c	;volatile
  1217  000982  0100               	movlb	0	; () banked
  1218  000984  5DD1               	subwf	powerPulseCheck@timerCountHFLast& (0+255),w,b
  1219  000986  5047               	movf	_timerCountHF+1,w,c	;volatile
  1220  000988  59D2               	subwfb	(powerPulseCheck@timerCountHFLast+1)& (0+255),w,b
  1221  00098A  5048               	movf	_timerCountHF+2,w,c	;volatile
  1222  00098C  59D3               	subwfb	(powerPulseCheck@timerCountHFLast+2)& (0+255),w,b
  1223  00098E  5049               	movf	_timerCountHF+3,w,c	;volatile
  1224  000990  59D4               	subwfb	(powerPulseCheck@timerCountHFLast+3)& (0+255),w,b
  1225  000992  B0D8               	btfsc	status,0,c
  1226  000994  D046               	goto	l164
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;Current_Sense_Main.c: 517: {
  1230                           ;Current_Sense_Main.c: 518: if (timerCountHF > ((unsigned long) 1000 * (unsigned long) t
      +                          imerCountHFCheck))
  1231  000996  C04A  F013         	movff	powerPulseCheck@timerCountHFCheck,___lmul@multiplier
  1232  00099A  C04B  F014         	movff	powerPulseCheck@timerCountHFCheck+1,___lmul@multiplier+1
  1233  00099E  6A15               	clrf	___lmul@multiplier+2,c
  1234  0009A0  6A16               	clrf	___lmul@multiplier+3,c
  1235  0009A2  0EE8               	movlw	232
  1236  0009A4  6E17               	movwf	___lmul@multiplicand,c
  1237  0009A6  0E03               	movlw	3
  1238  0009A8  6E18               	movwf	___lmul@multiplicand+1,c
  1239  0009AA  0E00               	movlw	0
  1240  0009AC  6E19               	movwf	___lmul@multiplicand+2,c
  1241  0009AE  0E00               	movlw	0
  1242  0009B0  6E1A               	movwf	___lmul@multiplicand+3,c
  1243  0009B2  ECE9  F00A         	call	___lmul	;wreg free
  1244  0009B6  5046               	movf	_timerCountHF,w,c	;volatile
  1245  0009B8  5C13               	subwf	?___lmul,w,c
  1246  0009BA  5047               	movf	_timerCountHF+1,w,c	;volatile
  1247  0009BC  5814               	subwfb	?___lmul+1,w,c
  1248  0009BE  5048               	movf	_timerCountHF+2,w,c	;volatile
  1249  0009C0  5815               	subwfb	?___lmul+2,w,c
  1250  0009C2  5049               	movf	_timerCountHF+3,w,c	;volatile
  1251  0009C4  5816               	subwfb	?___lmul+3,w,c
  1252  0009C6  B0D8               	btfsc	status,0,c
  1253  0009C8  D02C               	goto	l164
  1254                           
  1255                           ;Current_Sense_Main.c: 519: {
  1256                           ;Current_Sense_Main.c: 520: if (timerCountHFCheck < 90)
  1257  0009CA  504B               	movf	powerPulseCheck@timerCountHFCheck+1,w,c
  1258  0009CC  E121               	bnz	l3227
  1259  0009CE  0E5A               	movlw	90
  1260  0009D0  5C4A               	subwf	powerPulseCheck@timerCountHFCheck,w,c
  1261  0009D2  B0D8               	btfsc	status,0,c
  1262  0009D4  D01D               	goto	l163
  1263                           
  1264                           ;Current_Sense_Main.c: 521: {
  1265                           ;Current_Sense_Main.c: 522: timerCountHFCheck++;
  1266  0009D6  4A4A               	infsnz	powerPulseCheck@timerCountHFCheck,f,c
  1267  0009D8  2A4B               	incf	powerPulseCheck@timerCountHFCheck+1,f,c
  1268                           
  1269                           ;Current_Sense_Main.c: 523: meterWatts = (((((unsigned long) 2500 * (unsigned long) 3600
      +                          ) / ((unsigned long) 100000 / (unsigned long) 1000))) * (unsigned long) 1) / (unsigned l
      +                          ong) timerCountHF;
  1270  0009DA  0E90               	movlw	144
  1271  0009DC  6E13               	movwf	___lldiv@dividend,c
  1272  0009DE  0E5F               	movlw	95
  1273  0009E0  6E14               	movwf	___lldiv@dividend+1,c
  1274  0009E2  0E01               	movlw	1
  1275  0009E4  6E15               	movwf	___lldiv@dividend+2,c
  1276  0009E6  0E00               	movlw	0
  1277  0009E8  6E16               	movwf	___lldiv@dividend+3,c
  1278  0009EA  C046  F017         	movff	_timerCountHF,___lldiv@divisor	;volatile
  1279  0009EE  C047  F018         	movff	_timerCountHF+1,___lldiv@divisor+1	;volatile
  1280  0009F2  C048  F019         	movff	_timerCountHF+2,___lldiv@divisor+2	;volatile
  1281  0009F6  C049  F01A         	movff	_timerCountHF+3,___lldiv@divisor+3	;volatile
  1282  0009FA  EC41  F009         	call	___lldiv	;wreg free
  1283  0009FE  C013  F068         	movff	?___lldiv,_meterWatts
  1284  000A02  C014  F069         	movff	?___lldiv+1,_meterWatts+1
  1285  000A06  C015  F06A         	movff	?___lldiv+2,_meterWatts+2
  1286  000A0A  C016  F06B         	movff	?___lldiv+3,_meterWatts+3
  1287                           
  1288                           ;Current_Sense_Main.c: 524: }
  1289  000A0E  D009               	goto	l164
  1290  000A10                     l163:
  1291  000A10                     l3227:
  1292                           
  1293                           ;Current_Sense_Main.c: 525: else
  1294                           ;Current_Sense_Main.c: 526: {
  1295                           ;Current_Sense_Main.c: 527: meterWatts = 0;
  1296  000A10  0E00               	movlw	0
  1297  000A12  0100               	movlb	0	; () banked
  1298  000A14  6F68               	movwf	_meterWatts& (0+255),b
  1299  000A16  0E00               	movlw	0
  1300  000A18  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1301  000A1A  0E00               	movlw	0
  1302  000A1C  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1303  000A1E  0E00               	movlw	0
  1304  000A20  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1305  000A22                     l164:
  1306                           
  1307                           ;Current_Sense_Main.c: 528: }
  1308                           ;Current_Sense_Main.c: 530: }
  1309                           ;Current_Sense_Main.c: 531: }
  1310                           ;Current_Sense_Main.c: 533: if (firstPulse == 1)
  1311                           
  1312                           ; BSR set to: 0
  1313                           
  1314                           ; BSR set to: 0
  1315                           
  1316                           ; BSR set to: 0
  1317  000A22  044C               	decf	powerPulseCheck@firstPulse,w,c
  1318  000A24  A4D8               	btfss	status,2,c
  1319  000A26  D009               	goto	l165
  1320                           
  1321                           ;Current_Sense_Main.c: 534: {
  1322                           ;Current_Sense_Main.c: 535: meterWatts = 0;
  1323  000A28  0E00               	movlw	0
  1324  000A2A  0100               	movlb	0	; () banked
  1325  000A2C  6F68               	movwf	_meterWatts& (0+255),b
  1326  000A2E  0E00               	movlw	0
  1327  000A30  6F69               	movwf	(_meterWatts+1)& (0+255),b
  1328  000A32  0E00               	movlw	0
  1329  000A34  6F6A               	movwf	(_meterWatts+2)& (0+255),b
  1330  000A36  0E00               	movlw	0
  1331  000A38  6F6B               	movwf	(_meterWatts+3)& (0+255),b
  1332  000A3A                     l165:
  1333                           
  1334                           ;Current_Sense_Main.c: 536: }
  1335                           ;Current_Sense_Main.c: 540: if (PORTAbits.RA2 == 0)
  1336                           
  1337                           ; BSR set to: 0
  1338  000A3A  B480               	btfsc	3968,2,c	;volatile
  1339  000A3C  D030               	goto	l166
  1340                           
  1341                           ;Current_Sense_Main.c: 541: {
  1342                           ;Current_Sense_Main.c: 542: if (mcpLFoutLast == 0)
  1343  000A3E  5041               	movf	powerPulseCheck@mcpLFoutLast,w,c
  1344  000A40  A4D8               	btfss	status,2,c
  1345  000A42  0012               	return	
  1346                           
  1347                           ;Current_Sense_Main.c: 543: {
  1348                           ;Current_Sense_Main.c: 544: mcpLFoutLast = 1;
  1349  000A44  0E01               	movlw	1
  1350  000A46  6E41               	movwf	powerPulseCheck@mcpLFoutLast,c
  1351                           
  1352                           ;Current_Sense_Main.c: 545: timerCountLF = 0;
  1353  000A48  0E00               	movlw	0
  1354  000A4A  6E36               	movwf	_timerCountLF,c	;volatile
  1355  000A4C  0E00               	movlw	0
  1356  000A4E  6E37               	movwf	_timerCountLF+1,c	;volatile
  1357  000A50  0E00               	movlw	0
  1358  000A52  6E38               	movwf	_timerCountLF+2,c	;volatile
  1359  000A54  0E00               	movlw	0
  1360  000A56  6E39               	movwf	_timerCountLF+3,c	;volatile
  1361                           
  1362                           ;Current_Sense_Main.c: 548: meterEnergyUsedPart += 2500 * (unsigned long) 17;
  1363  000A58  0E04               	movlw	4
  1364  000A5A  0100               	movlb	0	; () banked
  1365  000A5C  2760               	addwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1366  000A5E  0EA6               	movlw	166
  1367  000A60  2361               	addwfc	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1368  000A62  0E00               	movlw	0
  1369  000A64  2362               	addwfc	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1370  000A66  0E00               	movlw	0
  1371  000A68  2363               	addwfc	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1372                           
  1373                           ;Current_Sense_Main.c: 550: while (meterEnergyUsedPart > 100000)
  1374  000A6A  D00E               	goto	l168
  1375  000A6C                     l3241:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;Current_Sense_Main.c: 551: {
  1379                           ;Current_Sense_Main.c: 552: meterEnergyUsed++;
  1380  000A6C  0E01               	movlw	1
  1381  000A6E  2764               	addwf	_meterEnergyUsed& (0+255),f,b
  1382  000A70  0E00               	movlw	0
  1383  000A72  2365               	addwfc	(_meterEnergyUsed+1)& (0+255),f,b
  1384  000A74  2366               	addwfc	(_meterEnergyUsed+2)& (0+255),f,b
  1385  000A76  2367               	addwfc	(_meterEnergyUsed+3)& (0+255),f,b
  1386                           
  1387                           ;Current_Sense_Main.c: 553: meterEnergyUsedPart -= 100000;
  1388  000A78  0EA0               	movlw	160
  1389  000A7A  5F60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),f,b
  1390  000A7C  0E86               	movlw	134
  1391  000A7E  5B61               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),f,b
  1392  000A80  0E01               	movlw	1
  1393  000A82  5B62               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),f,b
  1394  000A84  0E00               	movlw	0
  1395  000A86  5B63               	subwfb	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),f,b
  1396  000A88                     l168:
  1397                           
  1398                           ; BSR set to: 0
  1399  000A88  5163               	movf	(powerPulseCheck@meterEnergyUsedPart+3)& (0+255),w,b
  1400  000A8A  E1F0               	bnz	l3241
  1401  000A8C  0EA1               	movlw	161
  1402  000A8E  5D60               	subwf	powerPulseCheck@meterEnergyUsedPart& (0+255),w,b
  1403  000A90  0E86               	movlw	134
  1404  000A92  5961               	subwfb	(powerPulseCheck@meterEnergyUsedPart+1)& (0+255),w,b
  1405  000A94  0E01               	movlw	1
  1406  000A96  5962               	subwfb	(powerPulseCheck@meterEnergyUsedPart+2)& (0+255),w,b
  1407  000A98  A0D8               	btfss	status,0,c
  1408  000A9A  0012               	return	
  1409  000A9C  D7E7               	goto	l169
  1410  000A9E                     l166:
  1411                           
  1412                           ;Current_Sense_Main.c: 563: else if(timerCountLF >= 200000) {
  1413                           
  1414                           ; BSR set to: 0
  1415  000A9E  5039               	movf	_timerCountLF+3,w,c	;volatile
  1416  000AA0  E114               	bnz	l176
  1417  000AA2  0E40               	movlw	64
  1418  000AA4  5C36               	subwf	_timerCountLF,w,c	;volatile
  1419  000AA6  0E0D               	movlw	13
  1420  000AA8  5837               	subwfb	_timerCountLF+1,w,c	;volatile
  1421  000AAA  0E03               	movlw	3
  1422  000AAC  5838               	subwfb	_timerCountLF+2,w,c	;volatile
  1423  000AAE  B0D8               	btfsc	status,0,c
  1424  000AB0  0012               	return	
  1425                           
  1426                           ;Current_Sense_Main.c: 569: else if(timerCountLF >= 50000) {
  1427                           
  1428                           ;Current_Sense_Main.c: 567: }
  1429  000AB2  5039               	movf	_timerCountLF+3,w,c	;volatile
  1430  000AB4  1038               	iorwf	_timerCountLF+2,w,c	;volatile
  1431  000AB6  E109               	bnz	l176
  1432  000AB8  0E50               	movlw	80
  1433  000ABA  5C36               	subwf	_timerCountLF,w,c	;volatile
  1434  000ABC  0EC3               	movlw	195
  1435  000ABE  5837               	subwfb	_timerCountLF+1,w,c	;volatile
  1436  000AC0  B0D8               	btfsc	status,0,c
  1437  000AC2  0012               	return	
  1438                           
  1439                           ;Current_Sense_Main.c: 575: else
  1440                           ;Current_Sense_Main.c: 576: {
  1441                           ;Current_Sense_Main.c: 577: mcpLFoutLast = 0;
  1442                           
  1443                           ;Current_Sense_Main.c: 573: }
  1444  000AC4  0E00               	movlw	0
  1445  000AC6  6E41               	movwf	powerPulseCheck@mcpLFoutLast,c
  1446  000AC8  0012               	return	
  1447  000ACA                     l176:
  1448  000ACA  0012               	return		;funcret
  1449  000ACC                     __end_of_powerPulseCheck:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1l	equ	0xFE1
  1459                           status	equ	0xFD8
  1460                           
  1461 ;; *************** function _initTimer *****************
  1462 ;; Defined at:
  1463 ;;		line 675 in file "Current_Sense_Main.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         0       0       0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text3
  1492  00183C                     __ptext3:
  1493                           	opt stack 0
  1494  00183C                     _initTimer:
  1495                           	opt stack 29
  1496                           
  1497                           ;Current_Sense_Main.c: 678: T0CONbits.TMR0ON = 0;
  1498                           
  1499                           ;incstack = 0
  1500  00183C  9ED5               	bcf	4053,7,c	;volatile
  1501                           
  1502                           ;Current_Sense_Main.c: 679: T0CONbits.T08BIT = 0;
  1503  00183E  9CD5               	bcf	4053,6,c	;volatile
  1504                           
  1505                           ;Current_Sense_Main.c: 680: T0CONbits.T0CS = 0;
  1506  001840  9AD5               	bcf	4053,5,c	;volatile
  1507                           
  1508                           ;Current_Sense_Main.c: 681: T0CONbits.PSA = 0;
  1509  001842  96D5               	bcf	4053,3,c	;volatile
  1510                           
  1511                           ;Current_Sense_Main.c: 682: T0CONbits.T0PS = 0b001;
  1512  001844  50D5               	movf	4053,w,c	;volatile
  1513  001846  0BF8               	andlw	-8
  1514  001848  0901               	iorlw	1
  1515  00184A  6ED5               	movwf	4053,c	;volatile
  1516                           
  1517                           ;Current_Sense_Main.c: 684: INTCONbits.TMR0IE = 1;
  1518  00184C  8AF2               	bsf	intcon,5,c	;volatile
  1519                           
  1520                           ;Current_Sense_Main.c: 685: INTCONbits.GIE = 1;
  1521  00184E  8EF2               	bsf	intcon,7,c	;volatile
  1522                           
  1523                           ;Current_Sense_Main.c: 686: T0CONbits.TMR0ON = 1;
  1524  001850  8ED5               	bsf	4053,7,c	;volatile
  1525  001852  0012               	return		;funcret
  1526  001854                     __end_of_initTimer:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           intcon	equ	0xFF2
  1533                           postinc0	equ	0xFEE
  1534                           wreg	equ	0xFE8
  1535                           postdec1	equ	0xFE5
  1536                           fsr1l	equ	0xFE1
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _init *****************
  1540 ;; Defined at:
  1541 ;;		line 601 in file "Current_Sense_Main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    2
  1562 ;; This function calls:
  1563 ;;		_initOSC
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text4
  1570  001882                     __ptext4:
  1571                           	opt stack 0
  1572  001882                     _init:
  1573                           	opt stack 28
  1574                           
  1575                           ;Current_Sense_Main.c: 603: initOSC();
  1576                           
  1577                           ;incstack = 0
  1578  001882  EC2A  F00C         	call	_initOSC	;wreg free
  1579  001886  0012               	return	
  1580  001888                     __end_of_init:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           intcon	equ	0xFF2
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           postdec1	equ	0xFE5
  1590                           fsr1l	equ	0xFE1
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _initOSC *****************
  1594 ;; Defined at:
  1595 ;;		line 611 in file "Current_Sense_Main.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1609 ;;      Params:         0       0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_init
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text5
  1624  001854                     __ptext5:
  1625                           	opt stack 0
  1626  001854                     _initOSC:
  1627                           	opt stack 28
  1628                           
  1629                           ;Current_Sense_Main.c: 614: OSCCONbits.IDLEN = 0;
  1630                           
  1631                           ;incstack = 0
  1632  001854  9ED3               	bcf	4051,7,c	;volatile
  1633                           
  1634                           ;Current_Sense_Main.c: 615: OSCCONbits.IRCF = 0b111;
  1635  001856  88D3               	bsf	4051,4,c	;volatile
  1636  001858  8AD3               	bsf	4051,5,c	;volatile
  1637  00185A  8CD3               	bsf	4051,6,c	;volatile
  1638                           
  1639                           ;Current_Sense_Main.c: 616: OSCCONbits.SCS = 0b11;
  1640  00185C  0E03               	movlw	3
  1641  00185E  12D3               	iorwf	4051,f,c	;volatile
  1642                           
  1643                           ;Current_Sense_Main.c: 618: OSCCON2bits.MFIOSEL = 0;
  1644  001860  98D2               	bcf	4050,4,c	;volatile
  1645                           
  1646                           ;Current_Sense_Main.c: 619: OSCCON2bits.SOSCGO = 0;
  1647  001862  96D2               	bcf	4050,3,c	;volatile
  1648                           
  1649                           ;Current_Sense_Main.c: 620: OSCCON2bits.PRISD = 0;
  1650  001864  94D2               	bcf	4050,2,c	;volatile
  1651                           
  1652                           ;Current_Sense_Main.c: 622: OSCTUNEbits.INTSRC = 1;
  1653  001866  8E9B               	bsf	3995,7,c	;volatile
  1654                           
  1655                           ;Current_Sense_Main.c: 623: OSCTUNEbits.PLLEN = 0;
  1656  001868  9C9B               	bcf	3995,6,c	;volatile
  1657  00186A  0012               	return	
  1658  00186C                     __end_of_initOSC:
  1659                           	opt stack 0
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           intcon	equ	0xFF2
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           postdec1	equ	0xFE5
  1668                           fsr1l	equ	0xFE1
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _delayMS10 *****************
  1672 ;; Defined at:
  1673 ;;		line 592 in file "Current_Sense_Main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  count           2   18[COMRAM] int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  inx             2   21[COMRAM] int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1687 ;;      Params:         2       0       0       0       0       0       0
  1688 ;;      Locals:         2       0       0       0       0       0       0
  1689 ;;      Temps:          1       0       0       0       0       0       0
  1690 ;;      Totals:         5       0       0       0       0       0       0
  1691 ;;Total ram usage:        5 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text6
  1702  0016F8                     __ptext6:
  1703                           	opt stack 0
  1704  0016F8                     _delayMS10:
  1705                           	opt stack 29
  1706                           
  1707                           ;Current_Sense_Main.c: 594: for (int inx = 0; inx < count; inx++)
  1708                           
  1709                           ;incstack = 0
  1710  0016F8  0E00               	movlw	0
  1711  0016FA  6E17               	movwf	delayMS10@inx+1,c
  1712  0016FC  0E00               	movlw	0
  1713  0016FE  6E16               	movwf	delayMS10@inx,c
  1714  001700  D009               	goto	l179
  1715  001702                     
  1716                           ;Current_Sense_Main.c: 595: {
  1717                           ;Current_Sense_Main.c: 597: _delay((unsigned long)((10)*(16000000/4000.0)));
  1718  001702  0E34               	movlw	52
  1719  001704  6E15               	movwf	??_delayMS10& (0+255),c
  1720  001706  0EF2               	movlw	242
  1721  001708                     u2907:
  1722  001708  2EE8               	decfsz	wreg,f,c
  1723  00170A  D7FE               	bra	u2907
  1724  00170C  2E15               	decfsz	??_delayMS10& (0+255),f,c
  1725  00170E  D7FC               	bra	u2907
  1726  001710  4A16               	infsnz	delayMS10@inx,f,c
  1727  001712  2A17               	incf	delayMS10@inx+1,f,c
  1728  001714                     l179:
  1729  001714  5013               	movf	delayMS10@count,w,c
  1730  001716  5C16               	subwf	delayMS10@inx,w,c
  1731  001718  5017               	movf	delayMS10@inx+1,w,c
  1732  00171A  0A80               	xorlw	128
  1733  00171C  6E15               	movwf	??_delayMS10& (0+255),c
  1734  00171E  5014               	movf	delayMS10@count+1,w,c
  1735  001720  0A80               	xorlw	128
  1736  001722  5815               	subwfb	??_delayMS10& (0+255),w,c
  1737  001724  B0D8               	btfsc	status,0,c
  1738  001726  0012               	return	
  1739  001728  D7EC               	goto	l180
  1740  00172A                     __end_of_delayMS10:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           tblptrh	equ	0xFF7
  1744                           tblptrl	equ	0xFF6
  1745                           tablat	equ	0xFF5
  1746                           intcon	equ	0xFF2
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _communications *****************
  1754 ;; Defined at:
  1755 ;;		line 90 in file "SlaveComm_PIC18.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  firstTime       1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  firstTime       1   52[COMRAM] unsigned char 
  1760 ;;  no_more_to_s    1   51[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         2       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         2       0       0       0       0       0       0
  1774 ;;Total ram usage:        2 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    7
  1777 ;; This function calls:
  1778 ;;		_SPISlaveInit
  1779 ;;		_process_data
  1780 ;;		_receive_data
  1781 ;;		_resetCommunications
  1782 ;;		_send_data
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text7
  1789  0010C0                     __ptext7:
  1790                           	opt stack 0
  1791  0010C0                     _communications:
  1792                           	opt stack 23
  1793                           
  1794                           ;incstack = 0
  1795                           ;communications@firstTime stored from wreg
  1796  0010C0  6E35               	movwf	communications@firstTime,c
  1797                           
  1798                           ;SlaveComm_PIC18.c: 94: static struct buffer receive_buffer;
  1799                           ;SlaveComm_PIC18.c: 96: static struct buffer send_buffer;
  1800                           ;SlaveComm_PIC18.c: 98: static bool end_of_transmission_received = 0;
  1801                           ;SlaveComm_PIC18.c: 99: bool no_more_to_send;
  1802                           ;SlaveComm_PIC18.c: 101: static enum receive_status receive_current_state;
  1803                           ;SlaveComm_PIC18.c: 104: if (firstTime == 1)
  1804  0010C2  0435               	decf	communications@firstTime,w,c
  1805  0010C4  A4D8               	btfss	status,2,c
  1806  0010C6  D00E               	goto	l283
  1807                           
  1808                           ;SlaveComm_PIC18.c: 105: {
  1809                           ;SlaveComm_PIC18.c: 106: SPISlaveInit();
  1810  0010C8  EC39  F00B         	call	_SPISlaveInit	;wreg free
  1811                           
  1812                           ;SlaveComm_PIC18.c: 107: send_buffer.write_position = 0;
  1813  0010CC  0E00               	movlw	0
  1814  0010CE  0100               	movlb	0	; () banked
  1815  0010D0  6F94               	movwf	(communications@send_buffer+40)& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;SlaveComm_PIC18.c: 108: send_buffer.read_position = 0;
  1819  0010D2  0E00               	movlw	0
  1820  0010D4  6F95               	movwf	(communications@send_buffer+41)& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;SlaveComm_PIC18.c: 109: resetCommunications(&send_buffer);
  1824  0010D6  0E6C               	movlw	low communications@send_buffer
  1825  0010D8  6E2F               	movwf	resetCommunications@send_buffer,c
  1826  0010DA  0E00               	movlw	high communications@send_buffer
  1827  0010DC  6E30               	movwf	resetCommunications@send_buffer+1,c
  1828  0010DE  ECAD  F008         	call	_resetCommunications	;wreg free
  1829                           
  1830                           ;SlaveComm_PIC18.c: 110: }
  1831  0010E2  0012               	return	
  1832  0010E4                     l283:
  1833                           
  1834                           ;SlaveComm_PIC18.c: 111: else
  1835                           ;SlaveComm_PIC18.c: 112: {
  1836                           ;SlaveComm_PIC18.c: 115: receive_current_state = receive_data(&receive_buffer);
  1837  0010E4  0E96               	movlw	low communications@receive_buffer
  1838  0010E6  6E16               	movwf	receive_data@receive_buffer,c
  1839  0010E8  0E00               	movlw	high communications@receive_buffer
  1840  0010EA  6E17               	movwf	receive_data@receive_buffer+1,c
  1841  0010EC  ECB1  F007         	call	_receive_data	;wreg free
  1842  0010F0  6E3E               	movwf	communications@receive_current_state,c
  1843                           
  1844                           ;SlaveComm_PIC18.c: 117: switch (receive_current_state)
  1845  0010F2  D011               	goto	l285
  1846  0010F4                     
  1847                           ;SlaveComm_PIC18.c: 127: if (process_data(&receive_buffer, &send_buffer) == 1)
  1848  0010F4  0E96               	movlw	low communications@receive_buffer
  1849  0010F6  0100               	movlb	0	; () banked
  1850  0010F8  6FCC               	movwf	process_data@receive_buffer& (0+255),b
  1851  0010FA  0E00               	movlw	high communications@receive_buffer
  1852  0010FC  6FCD               	movwf	(process_data@receive_buffer+1)& (0+255),b
  1853  0010FE  0E6C               	movlw	low communications@send_buffer
  1854  001100  6FCE               	movwf	process_data@send_buffer& (0+255),b
  1855  001102  0E00               	movlw	high communications@send_buffer
  1856  001104  6FCF               	movwf	(process_data@send_buffer+1)& (0+255),b
  1857  001106  EC95  F00B         	call	_process_data	;wreg free
  1858  00110A  06E8               	decf	wreg,f,c
  1859  00110C  A4D8               	btfss	status,2,c
  1860  00110E  D00D               	goto	l287
  1861                           
  1862                           ;SlaveComm_PIC18.c: 128: {
  1863                           ;SlaveComm_PIC18.c: 129: end_of_transmission_received = 1;
  1864  001110  0E01               	movlw	1
  1865  001112  6E3F               	movwf	communications@end_of_transmission_received,c
  1866                           
  1867                           ;SlaveComm_PIC18.c: 133: }
  1868                           
  1869                           ;SlaveComm_PIC18.c: 130: }
  1870                           ;SlaveComm_PIC18.c: 132: break;
  1871  001114  D00A               	goto	l287
  1872  001116                     l285:
  1873  001116  503E               	movf	communications@receive_current_state,w,c
  1874                           
  1875                           ; Switch size 1, requested type "space"
  1876                           ; Number of cases is 3, Range of values is 0 to 2
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte           10     6 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881  001118  0A00               	xorlw	0	; case 0
  1882  00111A  B4D8               	btfsc	status,2,c
  1883  00111C  D006               	goto	l287
  1884  00111E  0A01               	xorlw	1	; case 1
  1885  001120  B4D8               	btfsc	status,2,c
  1886  001122  D003               	goto	l287
  1887  001124  0A03               	xorlw	3	; case 2
  1888  001126  B4D8               	btfsc	status,2,c
  1889  001128  D7E5               	goto	l289
  1890  00112A                     l287:
  1891                           
  1892                           ;SlaveComm_PIC18.c: 135: no_more_to_send = send_data(&send_buffer);
  1893  00112A  0E6C               	movlw	low communications@send_buffer
  1894  00112C  6E15               	movwf	send_data@send_buffer,c
  1895  00112E  0E00               	movlw	high communications@send_buffer
  1896  001130  6E16               	movwf	send_data@send_buffer+1,c
  1897  001132  ECF9  F008         	call	_send_data	;wreg free
  1898  001136  6E34               	movwf	communications@no_more_to_send,c
  1899                           
  1900                           ;SlaveComm_PIC18.c: 138: static bool last_state_active = 0;
  1901                           ;SlaveComm_PIC18.c: 139: if (PORTBbits.SS2 == 0b1)
  1902  001138  A081               	btfss	3969,0,c	;volatile
  1903  00113A  D003               	goto	l293
  1904                           
  1905                           ;SlaveComm_PIC18.c: 140: {
  1906                           ;SlaveComm_PIC18.c: 141: last_state_active = 0;
  1907  00113C  0E00               	movlw	0
  1908  00113E  6E3D               	movwf	communications@last_state_active,c
  1909                           
  1910                           ;SlaveComm_PIC18.c: 142: }
  1911  001140  0012               	return	
  1912  001142                     l293:
  1913                           
  1914                           ;SlaveComm_PIC18.c: 143: else
  1915                           ;SlaveComm_PIC18.c: 144: {
  1916                           ;SlaveComm_PIC18.c: 145: if (last_state_active == 0)
  1917  001142  503D               	movf	communications@last_state_active,w,c
  1918  001144  A4D8               	btfss	status,2,c
  1919  001146  D006               	goto	l295
  1920                           
  1921                           ;SlaveComm_PIC18.c: 146: {
  1922                           ;SlaveComm_PIC18.c: 147: resetCommunications(&send_buffer);
  1923  001148  0E6C               	movlw	low communications@send_buffer
  1924  00114A  6E2F               	movwf	resetCommunications@send_buffer,c
  1925  00114C  0E00               	movlw	high communications@send_buffer
  1926  00114E  6E30               	movwf	resetCommunications@send_buffer+1,c
  1927  001150  ECAD  F008         	call	_resetCommunications	;wreg free
  1928  001154                     l295:
  1929                           
  1930                           ;SlaveComm_PIC18.c: 148: }
  1931                           ;SlaveComm_PIC18.c: 150: last_state_active = 1;
  1932  001154  0E01               	movlw	1
  1933  001156  6E3D               	movwf	communications@last_state_active,c
  1934  001158  0012               	return	
  1935  00115A                     __end_of_communications:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1l	equ	0xFE1
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _send_data *****************
  1949 ;; Defined at:
  1950 ;;		line 509 in file "SlaveComm_PIC18.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  send_buffer     2   20[COMRAM] PTR struct buffer
  1953 ;;		 -> communications@send_buffer(42), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  send_end        1   24[COMRAM] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      unsigned char 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1965 ;;      Params:         2       0       0       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0       0       0
  1967 ;;      Temps:          2       0       0       0       0       0       0
  1968 ;;      Totals:         5       0       0       0       0       0       0
  1969 ;;Total ram usage:        5 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    2
  1972 ;; This function calls:
  1973 ;;		_SPI_send_data
  1974 ;; This function is called by:
  1975 ;;		_communications
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text8
  1980  0011F2                     __ptext8:
  1981                           	opt stack 0
  1982  0011F2                     _send_data:
  1983                           	opt stack 27
  1984                           
  1985                           ;SlaveComm_PIC18.c: 511: bool send_end;
  1986                           ;SlaveComm_PIC18.c: 513: if (send_buffer->read_position == send_buffer->write_position)
  1987                           
  1988                           ;incstack = 0
  1989  0011F2  EE20 F028          	lfsr	2,40
  1990  0011F6  5015               	movf	send_data@send_buffer,w,c
  1991  0011F8  26D9               	addwf	fsr2l,f,c
  1992  0011FA  5016               	movf	send_data@send_buffer+1,w,c
  1993  0011FC  22DA               	addwfc	fsr2h,f,c
  1994  0011FE  EE10 F029          	lfsr	1,41
  1995  001202  5015               	movf	send_data@send_buffer,w,c
  1996  001204  26E1               	addwf	fsr1l,f,c
  1997  001206  5016               	movf	send_data@send_buffer+1,w,c
  1998  001208  22E2               	addwfc	fsr1h,f,c
  1999  00120A  50DE               	movf	postinc2,w,c
  2000  00120C  18E6               	xorwf	postinc1,w,c
  2001  00120E  A4D8               	btfss	status,2,c
  2002  001210  D006               	goto	l394
  2003                           
  2004                           ;SlaveComm_PIC18.c: 514: {
  2005                           ;SlaveComm_PIC18.c: 515: send_end = 1;
  2006  001212  0E01               	movlw	1
  2007  001214  6E19               	movwf	send_data@send_end,c
  2008                           
  2009                           ;SlaveComm_PIC18.c: 516: SPI_send_data('\0');
  2010  001216  0E00               	movlw	0
  2011  001218  ECFF  F00B         	call	_SPI_send_data
  2012                           
  2013                           ;SlaveComm_PIC18.c: 517: }
  2014  00121C  D030               	goto	l397
  2015  00121E                     l394:
  2016                           
  2017                           ;SlaveComm_PIC18.c: 518: else
  2018                           ;SlaveComm_PIC18.c: 519: {
  2019                           ;SlaveComm_PIC18.c: 520: send_end = 0;
  2020  00121E  0E00               	movlw	0
  2021  001220  6E19               	movwf	send_data@send_end,c
  2022                           
  2023                           ;SlaveComm_PIC18.c: 523: if (SPI_send_data(send_buffer->data_buffer[send_buffer->read_po
      +                          sition]) == 1)
  2024  001222  EE20 F029          	lfsr	2,41
  2025  001226  5015               	movf	send_data@send_buffer,w,c
  2026  001228  26D9               	addwf	fsr2l,f,c
  2027  00122A  5016               	movf	send_data@send_buffer+1,w,c
  2028  00122C  22DA               	addwfc	fsr2h,f,c
  2029  00122E  50DF               	movf	indf2,w,c
  2030  001230  6E17               	movwf	??_send_data& (0+255),c
  2031  001232  5017               	movf	??_send_data,w,c
  2032  001234  0D01               	mullw	1
  2033  001236  50F3               	movf	prodl,w,c
  2034  001238  2415               	addwf	send_data@send_buffer,w,c
  2035  00123A  6ED9               	movwf	fsr2l,c
  2036  00123C  50F4               	movf	prodh,w,c
  2037  00123E  2016               	addwfc	send_data@send_buffer+1,w,c
  2038  001240  6EDA               	movwf	fsr2h,c
  2039  001242  50DF               	movf	indf2,w,c
  2040  001244  ECFF  F00B         	call	_SPI_send_data
  2041  001248  06E8               	decf	wreg,f,c
  2042  00124A  A4D8               	btfss	status,2,c
  2043  00124C  D018               	goto	l397
  2044                           
  2045                           ;SlaveComm_PIC18.c: 524: {
  2046                           ;SlaveComm_PIC18.c: 526: send_buffer->read_position++;
  2047  00124E  EE20 F029          	lfsr	2,41
  2048  001252  5015               	movf	send_data@send_buffer,w,c
  2049  001254  26D9               	addwf	fsr2l,f,c
  2050  001256  5016               	movf	send_data@send_buffer+1,w,c
  2051  001258  22DA               	addwfc	fsr2h,f,c
  2052  00125A  2ADF               	incf	indf2,f,c
  2053                           
  2054                           ;SlaveComm_PIC18.c: 527: if (send_buffer->read_position >= 40)
  2055  00125C  EE20 F029          	lfsr	2,41
  2056  001260  5015               	movf	send_data@send_buffer,w,c
  2057  001262  26D9               	addwf	fsr2l,f,c
  2058  001264  5016               	movf	send_data@send_buffer+1,w,c
  2059  001266  22DA               	addwfc	fsr2h,f,c
  2060  001268  0E27               	movlw	39
  2061  00126A  64DF               	cpfsgt	indf2,c
  2062  00126C  D008               	goto	l397
  2063                           
  2064                           ;SlaveComm_PIC18.c: 528: {
  2065                           ;SlaveComm_PIC18.c: 529: send_buffer->read_position = 0;
  2066  00126E  EE20 F029          	lfsr	2,41
  2067  001272  5015               	movf	send_data@send_buffer,w,c
  2068  001274  26D9               	addwf	fsr2l,f,c
  2069  001276  5016               	movf	send_data@send_buffer+1,w,c
  2070  001278  22DA               	addwfc	fsr2h,f,c
  2071  00127A  0E00               	movlw	0
  2072  00127C  6EDF               	movwf	indf2,c
  2073  00127E                     l397:
  2074                           
  2075                           ;SlaveComm_PIC18.c: 530: }
  2076                           ;SlaveComm_PIC18.c: 531: }
  2077                           ;SlaveComm_PIC18.c: 532: }
  2078                           ;SlaveComm_PIC18.c: 534: return send_end;
  2079  00127E  5019               	movf	send_data@send_end,w,c
  2080  001280  0012               	return	
  2081  001282                     __end_of_send_data:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postinc1	equ	0xFE6
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           indf2	equ	0xFDF
  2097                           postinc2	equ	0xFDE
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _SPI_send_data *****************
  2103 ;; Defined at:
  2104 ;;		line 607 in file "SlaveComm_PIC18.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  data            1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  data            1   18[COMRAM] unsigned char 
  2109 ;;  sendGood        1   19[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      unsigned char 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2119 ;;      Params:         0       0       0       0       0       0       0
  2120 ;;      Locals:         2       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0
  2122 ;;      Totals:         2       0       0       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_send_data
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text9
  2134  0017FE                     __ptext9:
  2135                           	opt stack 0
  2136  0017FE                     _SPI_send_data:
  2137                           	opt stack 27
  2138                           
  2139                           ;incstack = 0
  2140                           ;SPI_send_data@data stored from wreg
  2141  0017FE  6E13               	movwf	SPI_send_data@data,c
  2142                           
  2143                           ;SlaveComm_PIC18.c: 609: bool sendGood = 0;
  2144  001800  0E00               	movlw	0
  2145  001802  6E14               	movwf	SPI_send_data@sendGood,c
  2146                           
  2147                           ;SlaveComm_PIC18.c: 611: if (SPI_transmit_wait == 0)
  2148  001804  5040               	movf	_SPI_transmit_wait,w,c
  2149  001806  A4D8               	btfss	status,2,c
  2150  001808  D006               	goto	l425
  2151                           
  2152                           ;SlaveComm_PIC18.c: 612: {
  2153                           ;SlaveComm_PIC18.c: 613: SSP2BUF = data;
  2154  00180A  C013  FF6F         	movff	SPI_send_data@data,3951	;volatile
  2155                           
  2156                           ;SlaveComm_PIC18.c: 614: SPI_transmit_wait = 1;
  2157  00180E  0E01               	movlw	1
  2158  001810  6E40               	movwf	_SPI_transmit_wait,c
  2159                           
  2160                           ;SlaveComm_PIC18.c: 615: sendGood = 1;
  2161  001812  0E01               	movlw	1
  2162  001814  D001               	goto	L1
  2163  001816                     l425:
  2164                           
  2165                           ;SlaveComm_PIC18.c: 617: else
  2166                           ;SlaveComm_PIC18.c: 618: {
  2167                           ;SlaveComm_PIC18.c: 619: sendGood = 0;
  2168  001816  0E00               	movlw	0
  2169  001818                     L1:
  2170  001818  6E14               	movwf	SPI_send_data@sendGood,c
  2171                           
  2172                           ;SlaveComm_PIC18.c: 620: }
  2173                           ;SlaveComm_PIC18.c: 622: return sendGood;
  2174  00181A  5014               	movf	SPI_send_data@sendGood,w,c
  2175  00181C  0012               	return	
  2176  00181E                     __end_of_SPI_send_data:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           postinc0	equ	0xFEE
  2186                           wreg	equ	0xFE8
  2187                           postinc1	equ	0xFE6
  2188                           postdec1	equ	0xFE5
  2189                           fsr1h	equ	0xFE2
  2190                           fsr1l	equ	0xFE1
  2191                           indf2	equ	0xFDF
  2192                           postinc2	equ	0xFDE
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _resetCommunications *****************
  2198 ;; Defined at:
  2199 ;;		line 158 in file "SlaveComm_PIC18.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  send_buffer     2   46[COMRAM] PTR struct buffer
  2202 ;;		 -> communications@send_buffer(42), 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2214 ;;      Params:         2       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0
  2216 ;;      Temps:          2       0       0       0       0       0       0
  2217 ;;      Totals:         4       0       0       0       0       0       0
  2218 ;;Total ram usage:        4 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    5
  2221 ;; This function calls:
  2222 ;;		_com_command_setEnergyUsed
  2223 ;;		_com_command_setPower
  2224 ;;		_com_command_setVersion
  2225 ;; This function is called by:
  2226 ;;		_communications
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text10
  2231  00115A                     __ptext10:
  2232                           	opt stack 0
  2233  00115A                     _resetCommunications:
  2234                           	opt stack 24
  2235                           
  2236                           ;SlaveComm_PIC18.c: 161: static int commState = 0;
  2237                           ;SlaveComm_PIC18.c: 164: SSP2CON1bits.SSPEN = 0;
  2238                           
  2239                           ;incstack = 0
  2240  00115A  9A6C               	bcf	3948,5,c	;volatile
  2241                           
  2242                           ;SlaveComm_PIC18.c: 165: _delay((unsigned long)((1)*(16000000/4000.0)));
  2243  00115C  0E06               	movlw	6
  2244  00115E  6E31               	movwf	??_resetCommunications& (0+255),c
  2245  001160  0E30               	movlw	48
  2246  001162                     u2917:
  2247  001162  2EE8               	decfsz	wreg,f,c
  2248  001164  D7FE               	bra	u2917
  2249  001166  2E31               	decfsz	??_resetCommunications& (0+255),f,c
  2250  001168  D7FC               	bra	u2917
  2251  00116A  D000               	nop2	
  2252                           
  2253                           ;SlaveComm_PIC18.c: 166: SSP2CON1bits.SSPEN = 1;
  2254  00116C  8A6C               	bsf	3948,5,c	;volatile
  2255                           
  2256                           ;SlaveComm_PIC18.c: 168: SSP2CON1bits.WCOL = 0;
  2257  00116E  9E6C               	bcf	3948,7,c	;volatile
  2258                           
  2259                           ;SlaveComm_PIC18.c: 169: SPI_transmit_wait = 0;
  2260  001170  0E00               	movlw	0
  2261  001172  6E40               	movwf	_SPI_transmit_wait,c
  2262                           
  2263                           ;SlaveComm_PIC18.c: 171: send_buffer->read_position = 0;
  2264  001174  EE20 F029          	lfsr	2,41
  2265  001178  502F               	movf	resetCommunications@send_buffer,w,c
  2266  00117A  26D9               	addwf	fsr2l,f,c
  2267  00117C  5030               	movf	resetCommunications@send_buffer+1,w,c
  2268  00117E  22DA               	addwfc	fsr2h,f,c
  2269  001180  0E00               	movlw	0
  2270  001182  6EDF               	movwf	indf2,c
  2271                           
  2272                           ;SlaveComm_PIC18.c: 172: send_buffer->write_position = 0;
  2273  001184  EE20 F028          	lfsr	2,40
  2274  001188  502F               	movf	resetCommunications@send_buffer,w,c
  2275  00118A  26D9               	addwf	fsr2l,f,c
  2276  00118C  5030               	movf	resetCommunications@send_buffer+1,w,c
  2277  00118E  22DA               	addwfc	fsr2h,f,c
  2278  001190  0E00               	movlw	0
  2279  001192  6EDF               	movwf	indf2,c
  2280                           
  2281                           ;SlaveComm_PIC18.c: 177: commState++;
  2282  001194  4A3A               	infsnz	resetCommunications@commState,f,c
  2283  001196  2A3B               	incf	resetCommunications@commState+1,f,c
  2284                           
  2285                           ;SlaveComm_PIC18.c: 178: switch (commState)
  2286  001198  D019               	goto	l301
  2287  00119A                     
  2288                           ;SlaveComm_PIC18.c: 181: com_command_setVersion(send_buffer);
  2289  00119A  C02F  F027         	movff	resetCommunications@send_buffer,com_command_setVersion@send_buffer
  2290  00119E  C030  F028         	movff	resetCommunications@send_buffer+1,com_command_setVersion@send_buffer+1
  2291  0011A2  ECD9  F00B         	call	_com_command_setVersion	;wreg free
  2292                           
  2293                           ;SlaveComm_PIC18.c: 182: break;
  2294  0011A6  0012               	return	
  2295  0011A8                     
  2296                           ;SlaveComm_PIC18.c: 184: com_command_setPower(send_buffer);
  2297  0011A8  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setPower@send_buffer
  2298  0011AC  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setPower@send_buffer+1
  2299  0011B0  EC14  F00B         	call	_com_command_setPower	;wreg free
  2300                           
  2301                           ;SlaveComm_PIC18.c: 197: break;
  2302  0011B4  0012               	return	
  2303  0011B6                     
  2304                           ;SlaveComm_PIC18.c: 199: com_command_setEnergyUsed(send_buffer);
  2305  0011B6  C02F  F02D         	movff	resetCommunications@send_buffer,com_command_setEnergyUsed@send_buffer
  2306  0011BA  C030  F02E         	movff	resetCommunications@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  2307  0011BE  EC62  F00A         	call	_com_command_setEnergyUsed	;wreg free
  2308  0011C2                     
  2309                           ;SlaveComm_PIC18.c: 211: commState = 0;
  2310  0011C2  0E00               	movlw	0
  2311  0011C4  6E3B               	movwf	resetCommunications@commState+1,c
  2312  0011C6  0E00               	movlw	0
  2313  0011C8  6E3A               	movwf	resetCommunications@commState,c
  2314                           
  2315                           ;SlaveComm_PIC18.c: 213: }
  2316                           
  2317                           ;SlaveComm_PIC18.c: 212: break;
  2318  0011CA  0012               	return	
  2319  0011CC                     l301:
  2320  0011CC  C03A  F031         	movff	resetCommunications@commState,??_resetCommunications
  2321  0011D0  C03B  F032         	movff	resetCommunications@commState+1,??_resetCommunications+1
  2322                           
  2323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2324                           ; Switch size 1, requested type "space"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  0011D4  5032               	movf	??_resetCommunications+1,w,c
  2331  0011D6  0A00               	xorlw	0	; case 0
  2332  0011D8  A4D8               	btfss	status,2,c
  2333  0011DA  D7F3               	goto	l306
  2334                           
  2335                           ; Switch size 1, requested type "space"
  2336                           ; Number of cases is 3, Range of values is 1 to 3
  2337                           ; switch strategies available:
  2338                           ; Name         Instructions Cycles
  2339                           ; simple_byte           10     6 (average)
  2340                           ;	Chosen strategy is simple_byte
  2341  0011DC  5031               	movf	??_resetCommunications,w,c
  2342  0011DE  0A01               	xorlw	1	; case 1
  2343  0011E0  B4D8               	btfsc	status,2,c
  2344  0011E2  D7DB               	goto	l302
  2345  0011E4  0A03               	xorlw	3	; case 2
  2346  0011E6  B4D8               	btfsc	status,2,c
  2347  0011E8  D7DF               	goto	l304
  2348  0011EA  0A01               	xorlw	1	; case 3
  2349  0011EC  B4D8               	btfsc	status,2,c
  2350  0011EE  D7E3               	goto	l305
  2351  0011F0  D7E8               	goto	l306
  2352  0011F2                     __end_of_resetCommunications:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           postinc1	equ	0xFE6
  2364                           postdec1	equ	0xFE5
  2365                           fsr1h	equ	0xFE2
  2366                           fsr1l	equ	0xFE1
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _com_command_setVersion *****************
  2374 ;; Defined at:
  2375 ;;		line 705 in file "SlaveComm_PIC18.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  send_buffer     2   38[COMRAM] PTR struct buffer
  2378 ;;		 -> communications@send_buffer(42), 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2390 ;;      Params:         2       0       0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0
  2393 ;;      Totals:         2       0       0       0       0       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    4
  2397 ;; This function calls:
  2398 ;;		_command_builder3
  2399 ;; This function is called by:
  2400 ;;		_resetCommunications
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text11
  2405  0017B2                     __ptext11:
  2406                           	opt stack 0
  2407  0017B2                     _com_command_setVersion:
  2408                           	opt stack 24
  2409                           
  2410                           ;SlaveComm_PIC18.c: 707: command_builder3(send_buffer, "Set", "PSVersion", "444");
  2411                           
  2412                           ;incstack = 0
  2413  0017B2  C027  F01F         	movff	com_command_setVersion@send_buffer,command_builder3@send_buffer
  2414  0017B6  C028  F020         	movff	com_command_setVersion@send_buffer+1,command_builder3@send_buffer+1
  2415  0017BA  0E57               	movlw	low STR_2
  2416  0017BC  6E21               	movwf	command_builder3@data1,c
  2417  0017BE  0E06               	movlw	high STR_2
  2418  0017C0  6E22               	movwf	command_builder3@data1+1,c
  2419  0017C2  0E0D               	movlw	low STR_22
  2420  0017C4  6E23               	movwf	command_builder3@data2,c
  2421  0017C6  0E06               	movlw	high STR_22
  2422  0017C8  6E24               	movwf	command_builder3@data2+1,c
  2423  0017CA  0E4B               	movlw	low STR_40
  2424  0017CC  6E25               	movwf	command_builder3@data3,c
  2425  0017CE  0E06               	movlw	high STR_40
  2426  0017D0  6E26               	movwf	command_builder3@data3+1,c
  2427  0017D2  EC11  F008         	call	_command_builder3	;wreg free
  2428  0017D6  0012               	return		;funcret
  2429  0017D8                     __end_of_com_command_setVersion:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           tblptrh	equ	0xFF7
  2433                           tblptrl	equ	0xFF6
  2434                           tablat	equ	0xFF5
  2435                           prodh	equ	0xFF4
  2436                           prodl	equ	0xFF3
  2437                           intcon	equ	0xFF2
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           postinc1	equ	0xFE6
  2441                           postdec1	equ	0xFE5
  2442                           fsr1h	equ	0xFE2
  2443                           fsr1l	equ	0xFE1
  2444                           indf2	equ	0xFDF
  2445                           postinc2	equ	0xFDE
  2446                           fsr2h	equ	0xFDA
  2447                           fsr2l	equ	0xFD9
  2448                           status	equ	0xFD8
  2449                           
  2450 ;; *************** function _com_command_setPower *****************
  2451 ;; Defined at:
  2452 ;;		line 642 in file "SlaveComm_PIC18.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  2455 ;;		 -> communications@send_buffer(42), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  temp           12    0[BANK0 ] unsigned char [12]
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         2       0       0       0       0       0       0
  2468 ;;      Locals:         0      12       0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0
  2470 ;;      Totals:         2      12       0       0       0       0       0
  2471 ;;Total ram usage:       14 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    4
  2474 ;; This function calls:
  2475 ;;		_command_builder3
  2476 ;;		_ultoa
  2477 ;; This function is called by:
  2478 ;;		_resetCommunications
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text12
  2483  001628                     __ptext12:
  2484                           	opt stack 0
  2485  001628                     _com_command_setPower:
  2486                           	opt stack 24
  2487                           
  2488                           ;SlaveComm_PIC18.c: 645: char temp[12];
  2489                           ;SlaveComm_PIC18.c: 657: ultoa(temp, meterWatts, 10);
  2490                           
  2491                           ;incstack = 0
  2492  001628  0EC0               	movlw	low com_command_setPower@temp
  2493  00162A  6E20               	movwf	ultoa@buf,c
  2494  00162C  0E00               	movlw	high com_command_setPower@temp
  2495  00162E  6E21               	movwf	ultoa@buf+1,c
  2496  001630  C068  F022         	movff	_meterWatts,ultoa@val
  2497  001634  C069  F023         	movff	_meterWatts+1,ultoa@val+1
  2498  001638  C06A  F024         	movff	_meterWatts+2,ultoa@val+2
  2499  00163C  C06B  F025         	movff	_meterWatts+3,ultoa@val+3
  2500  001640  0E00               	movlw	0
  2501  001642  6E27               	movwf	ultoa@base+1,c
  2502  001644  0E0A               	movlw	10
  2503  001646  6E26               	movwf	ultoa@base,c
  2504  001648  ECBC  F006         	call	_ultoa	;wreg free
  2505                           
  2506                           ;SlaveComm_PIC18.c: 659: command_builder3(send_buffer, "Set", "Watts", temp);
  2507  00164C  C02D  F01F         	movff	com_command_setPower@send_buffer,command_builder3@send_buffer
  2508  001650  C02E  F020         	movff	com_command_setPower@send_buffer+1,command_builder3@send_buffer+1
  2509  001654  0E57               	movlw	low STR_2
  2510  001656  6E21               	movwf	command_builder3@data1,c
  2511  001658  0E06               	movlw	high STR_2
  2512  00165A  6E22               	movwf	command_builder3@data1+1,c
  2513  00165C  0E24               	movlw	low STR_18
  2514  00165E  6E23               	movwf	command_builder3@data2,c
  2515  001660  0E06               	movlw	high STR_18
  2516  001662  6E24               	movwf	command_builder3@data2+1,c
  2517  001664  0EC0               	movlw	low com_command_setPower@temp
  2518  001666  6E25               	movwf	command_builder3@data3,c
  2519  001668  0E00               	movlw	high com_command_setPower@temp
  2520  00166A  6E26               	movwf	command_builder3@data3+1,c
  2521  00166C  EC11  F008         	call	_command_builder3	;wreg free
  2522  001670  0012               	return	
  2523  001672                     __end_of_com_command_setPower:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           postinc1	equ	0xFE6
  2535                           postdec1	equ	0xFE5
  2536                           fsr1h	equ	0xFE2
  2537                           fsr1l	equ	0xFE1
  2538                           indf2	equ	0xFDF
  2539                           postinc2	equ	0xFDE
  2540                           fsr2h	equ	0xFDA
  2541                           fsr2l	equ	0xFD9
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _receive_data *****************
  2545 ;; Defined at:
  2546 ;;		line 217 in file "SlaveComm_PIC18.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  receive_buff    2   21[COMRAM] PTR struct buffer
  2549 ;;		 -> communications@receive_buffer(42), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  data            1   24[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      enum E6751
  2554 ;; Registers used:
  2555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2561 ;;      Params:         2       0       0       0       0       0       0
  2562 ;;      Locals:         1       0       0       0       0       0       0
  2563 ;;      Temps:          1       0       0       0       0       0       0
  2564 ;;      Totals:         4       0       0       0       0       0       0
  2565 ;;Total ram usage:        4 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    2
  2568 ;; This function calls:
  2569 ;;		_SPI_receive_data
  2570 ;; This function is called by:
  2571 ;;		_communications
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text13
  2576  000F62                     __ptext13:
  2577                           	opt stack 0
  2578  000F62                     _receive_data:
  2579                           	opt stack 27
  2580                           
  2581                           ;SlaveComm_PIC18.c: 219: char data;
  2582                           ;SlaveComm_PIC18.c: 221: static enum receive_status my_status = receive_waiting;
  2583                           ;SlaveComm_PIC18.c: 223: if (my_status == receive_end_command)
  2584                           
  2585                           ;incstack = 0
  2586  000F62  0E02               	movlw	2
  2587  000F64  183C               	xorwf	receive_data@my_status,w,c
  2588  000F66  A4D8               	btfss	status,2,c
  2589  000F68  D002               	goto	l312
  2590                           
  2591                           ;SlaveComm_PIC18.c: 224: {
  2592                           ;SlaveComm_PIC18.c: 225: my_status = receive_waiting;
  2593  000F6A  0E00               	movlw	0
  2594  000F6C  6E3C               	movwf	receive_data@my_status,c
  2595  000F6E                     l312:
  2596                           
  2597                           ;SlaveComm_PIC18.c: 226: }
  2598                           ;SlaveComm_PIC18.c: 228: if (SPI_receive_data(&data) == 1)
  2599  000F6E  0E19               	movlw	low receive_data@data
  2600  000F70  6E13               	movwf	SPI_receive_data@data,c
  2601  000F72  0E00               	movlw	high receive_data@data
  2602  000F74  6E14               	movwf	SPI_receive_data@data+1,c
  2603  000F76  ECC5  F00B         	call	_SPI_receive_data	;wreg free
  2604  000F7A  06E8               	decf	wreg,f,c
  2605  000F7C  A4D8               	btfss	status,2,c
  2606  000F7E  D04F               	goto	l318
  2607                           
  2608                           ;SlaveComm_PIC18.c: 234: }
  2609                           ;SlaveComm_PIC18.c: 236: if ((data == '!') && (my_status != receive_in_command))
  2610                           
  2611                           ;SlaveComm_PIC18.c: 232: {
  2612  000F80  0E21               	movlw	33
  2613  000F82  1819               	xorwf	receive_data@data,w,c
  2614  000F84  A4D8               	btfss	status,2,c
  2615  000F86  D015               	goto	l315
  2616  000F88  043C               	decf	receive_data@my_status,w,c
  2617  000F8A  B4D8               	btfsc	status,2,c
  2618  000F8C  D012               	goto	l315
  2619                           
  2620                           ;SlaveComm_PIC18.c: 237: {
  2621                           ;SlaveComm_PIC18.c: 238: my_status = receive_in_command;
  2622  000F8E  0E01               	movlw	1
  2623  000F90  6E3C               	movwf	receive_data@my_status,c
  2624                           
  2625                           ;SlaveComm_PIC18.c: 239: receive_buffer->read_position = 0;
  2626  000F92  EE20 F029          	lfsr	2,41
  2627  000F96  5016               	movf	receive_data@receive_buffer,w,c
  2628  000F98  26D9               	addwf	fsr2l,f,c
  2629  000F9A  5017               	movf	receive_data@receive_buffer+1,w,c
  2630  000F9C  22DA               	addwfc	fsr2h,f,c
  2631  000F9E  0E00               	movlw	0
  2632  000FA0  6EDF               	movwf	indf2,c
  2633                           
  2634                           ;SlaveComm_PIC18.c: 240: receive_buffer->write_position = 0;
  2635  000FA2  EE20 F028          	lfsr	2,40
  2636  000FA6  5016               	movf	receive_data@receive_buffer,w,c
  2637  000FA8  26D9               	addwf	fsr2l,f,c
  2638  000FAA  5017               	movf	receive_data@receive_buffer+1,w,c
  2639  000FAC  22DA               	addwfc	fsr2h,f,c
  2640  000FAE  0E00               	movlw	0
  2641  000FB0  6EDF               	movwf	indf2,c
  2642  000FB2                     l315:
  2643                           
  2644                           ;SlaveComm_PIC18.c: 241: }
  2645                           ;SlaveComm_PIC18.c: 243: if (my_status == receive_in_command)
  2646  000FB2  043C               	decf	receive_data@my_status,w,c
  2647  000FB4  A4D8               	btfss	status,2,c
  2648  000FB6  D02A               	goto	l317
  2649                           
  2650                           ;SlaveComm_PIC18.c: 244: {
  2651                           ;SlaveComm_PIC18.c: 245: receive_buffer->data_buffer[ receive_buffer->write_position] = 
      +                          data;
  2652  000FB8  EE20 F028          	lfsr	2,40
  2653  000FBC  5016               	movf	receive_data@receive_buffer,w,c
  2654  000FBE  26D9               	addwf	fsr2l,f,c
  2655  000FC0  5017               	movf	receive_data@receive_buffer+1,w,c
  2656  000FC2  22DA               	addwfc	fsr2h,f,c
  2657  000FC4  50DF               	movf	indf2,w,c
  2658  000FC6  6E18               	movwf	??_receive_data& (0+255),c
  2659  000FC8  5018               	movf	??_receive_data,w,c
  2660  000FCA  0D01               	mullw	1
  2661  000FCC  50F3               	movf	prodl,w,c
  2662  000FCE  2416               	addwf	receive_data@receive_buffer,w,c
  2663  000FD0  6ED9               	movwf	fsr2l,c
  2664  000FD2  50F4               	movf	prodh,w,c
  2665  000FD4  2017               	addwfc	receive_data@receive_buffer+1,w,c
  2666  000FD6  6EDA               	movwf	fsr2h,c
  2667  000FD8  C019  FFDF         	movff	receive_data@data,indf2
  2668                           
  2669                           ;SlaveComm_PIC18.c: 247: receive_buffer->write_position++;
  2670  000FDC  EE20 F028          	lfsr	2,40
  2671  000FE0  5016               	movf	receive_data@receive_buffer,w,c
  2672  000FE2  26D9               	addwf	fsr2l,f,c
  2673  000FE4  5017               	movf	receive_data@receive_buffer+1,w,c
  2674  000FE6  22DA               	addwfc	fsr2h,f,c
  2675  000FE8  2ADF               	incf	indf2,f,c
  2676                           
  2677                           ;SlaveComm_PIC18.c: 248: if (receive_buffer->write_position >= 40)
  2678  000FEA  EE20 F028          	lfsr	2,40
  2679  000FEE  5016               	movf	receive_data@receive_buffer,w,c
  2680  000FF0  26D9               	addwf	fsr2l,f,c
  2681  000FF2  5017               	movf	receive_data@receive_buffer+1,w,c
  2682  000FF4  22DA               	addwfc	fsr2h,f,c
  2683  000FF6  0E27               	movlw	39
  2684  000FF8  64DF               	cpfsgt	indf2,c
  2685  000FFA  D008               	goto	l317
  2686                           
  2687                           ;SlaveComm_PIC18.c: 249: {
  2688                           ;SlaveComm_PIC18.c: 250: receive_buffer->write_position = (40 - 1);
  2689  000FFC  EE20 F028          	lfsr	2,40
  2690  001000  5016               	movf	receive_data@receive_buffer,w,c
  2691  001002  26D9               	addwf	fsr2l,f,c
  2692  001004  5017               	movf	receive_data@receive_buffer+1,w,c
  2693  001006  22DA               	addwfc	fsr2h,f,c
  2694  001008  0E27               	movlw	39
  2695  00100A  6EDF               	movwf	indf2,c
  2696  00100C                     l317:
  2697                           
  2698                           ;SlaveComm_PIC18.c: 251: }
  2699                           ;SlaveComm_PIC18.c: 252: }
  2700                           ;SlaveComm_PIC18.c: 254: if ((my_status == receive_in_command) && (data == '*'))
  2701  00100C  043C               	decf	receive_data@my_status,w,c
  2702  00100E  A4D8               	btfss	status,2,c
  2703  001010  D006               	goto	l318
  2704  001012  0E2A               	movlw	42
  2705  001014  1819               	xorwf	receive_data@data,w,c
  2706  001016  A4D8               	btfss	status,2,c
  2707  001018  D002               	goto	l318
  2708                           
  2709                           ;SlaveComm_PIC18.c: 255: {
  2710                           ;SlaveComm_PIC18.c: 256: my_status = receive_end_command;
  2711  00101A  0E02               	movlw	2
  2712  00101C  6E3C               	movwf	receive_data@my_status,c
  2713  00101E                     l318:
  2714                           
  2715                           ;SlaveComm_PIC18.c: 257: }
  2716                           ;SlaveComm_PIC18.c: 258: }
  2717                           ;SlaveComm_PIC18.c: 260: return my_status;
  2718  00101E  503C               	movf	receive_data@my_status,w,c
  2719  001020  0012               	return	
  2720  001022                     __end_of_receive_data:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postinc1	equ	0xFE6
  2732                           postdec1	equ	0xFE5
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _SPI_receive_data *****************
  2742 ;; Defined at:
  2743 ;;		line 586 in file "SlaveComm_PIC18.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  data            2   18[COMRAM] PTR unsigned char 
  2746 ;;		 -> receive_data@data(1), 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  recvGood        1   20[COMRAM] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      unsigned char 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr2l, fsr2h, status,2
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2758 ;;      Params:         2       0       0       0       0       0       0
  2759 ;;      Locals:         1       0       0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0
  2761 ;;      Totals:         3       0       0       0       0       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_receive_data
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text14
  2773  00178A                     __ptext14:
  2774                           	opt stack 0
  2775  00178A                     _SPI_receive_data:
  2776                           	opt stack 27
  2777                           
  2778                           ;SlaveComm_PIC18.c: 589: bool recvGood = 0;
  2779                           
  2780                           ;incstack = 0
  2781  00178A  0E00               	movlw	0
  2782  00178C  6E15               	movwf	SPI_receive_data@recvGood,c
  2783                           
  2784                           ;SlaveComm_PIC18.c: 591: if (SSP2STATbits.BF == 1)
  2785  00178E  A06D               	btfss	3949,0,c	;volatile
  2786  001790  D00C               	goto	l420
  2787                           
  2788                           ;SlaveComm_PIC18.c: 592: {
  2789                           ;SlaveComm_PIC18.c: 593: *data = SSP2BUF;
  2790  001792  C013  FFD9         	movff	SPI_receive_data@data,fsr2l
  2791  001796  C014  FFDA         	movff	SPI_receive_data@data+1,fsr2h
  2792  00179A  CF6F FFDF          	movff	3951,indf2	;volatile
  2793                           
  2794                           ;SlaveComm_PIC18.c: 594: recvGood = 1;
  2795  00179E  0E01               	movlw	1
  2796  0017A0  6E15               	movwf	SPI_receive_data@recvGood,c
  2797                           
  2798                           ;SlaveComm_PIC18.c: 595: SSP2CON1bits.WCOL = 0;
  2799  0017A2  9E6C               	bcf	3948,7,c	;volatile
  2800                           
  2801                           ;SlaveComm_PIC18.c: 596: SPI_transmit_wait = 0;
  2802  0017A4  0E00               	movlw	0
  2803  0017A6  6E40               	movwf	_SPI_transmit_wait,c
  2804                           
  2805                           ;SlaveComm_PIC18.c: 597: }
  2806  0017A8  D002               	goto	l421
  2807  0017AA                     l420:
  2808                           
  2809                           ;SlaveComm_PIC18.c: 598: else
  2810                           ;SlaveComm_PIC18.c: 599: {
  2811                           ;SlaveComm_PIC18.c: 600: recvGood = 0;
  2812  0017AA  0E00               	movlw	0
  2813  0017AC  6E15               	movwf	SPI_receive_data@recvGood,c
  2814  0017AE                     l421:
  2815                           
  2816                           ;SlaveComm_PIC18.c: 601: }
  2817                           ;SlaveComm_PIC18.c: 603: return recvGood;
  2818  0017AE  5015               	movf	SPI_receive_data@recvGood,w,c
  2819  0017B0  0012               	return	
  2820  0017B2                     __end_of_SPI_receive_data:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postinc1	equ	0xFE6
  2832                           postdec1	equ	0xFE5
  2833                           fsr1h	equ	0xFE2
  2834                           fsr1l	equ	0xFE1
  2835                           indf2	equ	0xFDF
  2836                           postinc2	equ	0xFDE
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _process_data *****************
  2842 ;; Defined at:
  2843 ;;		line 263 in file "SlaveComm_PIC18.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  receive_buff    2   12[BANK0 ] PTR struct buffer
  2846 ;;		 -> communications@receive_buffer(42), 
  2847 ;;  send_buffer     2   14[BANK0 ] PTR struct buffer
  2848 ;;		 -> communications@send_buffer(42), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  parameters     50    0[BANK1 ] unsigned char [10][5]
  2851 ;;  end_of_trans    1   50[BANK1 ] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      unsigned char 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2861 ;;      Params:         0       4       0       0       0       0       0
  2862 ;;      Locals:         0       0      51       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0
  2864 ;;      Totals:         0       4      51       0       0       0       0
  2865 ;;Total ram usage:       55 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    6
  2868 ;; This function calls:
  2869 ;;		_process_data_parameterize
  2870 ;;		_process_data_parameters
  2871 ;; This function is called by:
  2872 ;;		_communications
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text15
  2877  00172A                     __ptext15:
  2878                           	opt stack 0
  2879  00172A                     _process_data:
  2880                           	opt stack 23
  2881                           
  2882                           ;SlaveComm_PIC18.c: 265: bool end_of_transmission_received;
  2883                           ;SlaveComm_PIC18.c: 270: char parameters[5][10];
  2884                           ;SlaveComm_PIC18.c: 272: process_data_parameterize(parameters, receive_buffer);
  2885                           
  2886                           ;incstack = 0
  2887  00172A  0E00               	movlw	low process_data@parameters
  2888  00172C  6E19               	movwf	process_data_parameterize@parameters,c
  2889  00172E  0E01               	movlw	high process_data@parameters
  2890  001730  6E1A               	movwf	process_data_parameterize@parameters+1,c
  2891  001732  C0CC  F01B         	movff	process_data@receive_buffer,process_data_parameterize@buffer_to_parameterize
  2892  001736  C0CD  F01C         	movff	process_data@receive_buffer+1,process_data_parameterize@buffer_to_parameterize+1
  2893  00173A  EC66  F005         	call	_process_data_parameterize	;wreg free
  2894                           
  2895                           ;SlaveComm_PIC18.c: 274: end_of_transmission_received = process_data_parameters(paramete
      +                          rs, send_buffer);
  2896  00173E  0E00               	movlw	low process_data@parameters
  2897  001740  6E2F               	movwf	process_data_parameters@parameters,c
  2898  001742  0E01               	movlw	high process_data@parameters
  2899  001744  6E30               	movwf	process_data_parameters@parameters+1,c
  2900  001746  C0CE  F031         	movff	process_data@send_buffer,process_data_parameters@send_buffer
  2901  00174A  C0CF  F032         	movff	process_data@send_buffer+1,process_data_parameters@send_buffer+1
  2902  00174E  EC30  F003         	call	_process_data_parameters	;wreg free
  2903  001752  0101               	movlb	1	; () banked
  2904  001754  6F32               	movwf	process_data@end_of_transmission_received& (0+255),b
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;SlaveComm_PIC18.c: 276: return end_of_transmission_received;
  2908  001756  5132               	movf	process_data@end_of_transmission_received& (0+255),w,b
  2909  001758  0012               	return	
  2910  00175A                     __end_of_process_data:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           postinc0	equ	0xFEE
  2920                           wreg	equ	0xFE8
  2921                           postinc1	equ	0xFE6
  2922                           postdec1	equ	0xFE5
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _process_data_parameters *****************
  2932 ;; Defined at:
  2933 ;;		line 339 in file "SlaveComm_PIC18.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  parameters      2   46[COMRAM] PTR unsigned char [10]
  2936 ;;		 -> process_data@parameters(50), 
  2937 ;;  send_buffer     2   48[COMRAM] PTR struct buffer
  2938 ;;		 -> communications@send_buffer(42), 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  end_of_trans    1   50[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2950 ;;      Params:         4       0       0       0       0       0       0
  2951 ;;      Locals:         1       0       0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0
  2953 ;;      Totals:         5       0       0       0       0       0       0
  2954 ;;Total ram usage:        5 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    5
  2957 ;; This function calls:
  2958 ;;		_atol
  2959 ;;		_com_command_setEnergyUsed
  2960 ;;		_command_builder3
  2961 ;;		_send_end_of_transmission
  2962 ;;		_strmatch
  2963 ;; This function is called by:
  2964 ;;		_process_data
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text16
  2969  000660                     __ptext16:
  2970                           	opt stack 0
  2971  000660                     _process_data_parameters:
  2972                           	opt stack 23
  2973                           
  2974                           ;SlaveComm_PIC18.c: 341: bool end_of_transmission_received = 0;
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;incstack = 0
  2978  000660  0E00               	movlw	0
  2979  000662  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  2980                           
  2981                           ;SlaveComm_PIC18.c: 344: if (strmatch(parameters[0], "END") == 1)
  2982  000664  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  2983  000668  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  2984  00066C  0E4F               	movlw	low STR_1
  2985  00066E  6E20               	movwf	strmatch@b,c
  2986  000670  0E06               	movlw	high STR_1
  2987  000672  6E21               	movwf	strmatch@b+1,c
  2988  000674  ECAD  F00B         	call	_strmatch	;wreg free
  2989  000678  06E8               	decf	wreg,f,c
  2990  00067A  A4D8               	btfss	status,2,c
  2991  00067C  D003               	goto	l342
  2992                           
  2993                           ;SlaveComm_PIC18.c: 345: {
  2994                           ;SlaveComm_PIC18.c: 355: end_of_transmission_received = 1;
  2995  00067E  0E01               	movlw	1
  2996  000680  6E33               	movwf	process_data_parameters@end_of_transmission_received,c
  2997                           
  2998                           ;SlaveComm_PIC18.c: 356: }
  2999  000682  D13F               	goto	l368
  3000  000684                     l342:
  3001                           
  3002                           ;SlaveComm_PIC18.c: 357: else if (strmatch(parameters[0], "Set") == 1)
  3003  000684  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3004  000688  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3005  00068C  0E57               	movlw	low STR_2
  3006  00068E  6E20               	movwf	strmatch@b,c
  3007  000690  0E06               	movlw	high STR_2
  3008  000692  6E21               	movwf	strmatch@b+1,c
  3009  000694  ECAD  F00B         	call	_strmatch	;wreg free
  3010  000698  06E8               	decf	wreg,f,c
  3011  00069A  A4D8               	btfss	status,2,c
  3012  00069C  D035               	goto	l344
  3013                           
  3014                           ;SlaveComm_PIC18.c: 358: {
  3015                           ;SlaveComm_PIC18.c: 359: if (strmatch(parameters[1], "Calibration") == 1)
  3016  00069E  0E0A               	movlw	10
  3017  0006A0  242F               	addwf	process_data_parameters@parameters,w,c
  3018  0006A2  6E1E               	movwf	strmatch@a,c
  3019  0006A4  0E00               	movlw	0
  3020  0006A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3021  0006A8  6E1F               	movwf	strmatch@a+1,c
  3022  0006AA  0E01               	movlw	low STR_3
  3023  0006AC  6E20               	movwf	strmatch@b,c
  3024  0006AE  0E06               	movlw	high STR_3
  3025  0006B0  6E21               	movwf	strmatch@b+1,c
  3026  0006B2  ECAD  F00B         	call	_strmatch	;wreg free
  3027  0006B6  06E8               	decf	wreg,f,c
  3028  0006B8  B4D8               	btfsc	status,2,c
  3029  0006BA  D123               	goto	l368
  3030                           
  3031                           ;SlaveComm_PIC18.c: 363: else if (strmatch(parameters[1], "EnUsed") == 1)
  3032                           
  3033                           ;SlaveComm_PIC18.c: 360: {
  3034                           ;SlaveComm_PIC18.c: 362: }
  3035  0006BC  0E0A               	movlw	10
  3036  0006BE  242F               	addwf	process_data_parameters@parameters,w,c
  3037  0006C0  6E1E               	movwf	strmatch@a,c
  3038  0006C2  0E00               	movlw	0
  3039  0006C4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3040  0006C6  6E1F               	movwf	strmatch@a+1,c
  3041  0006C8  0E17               	movlw	low STR_4
  3042  0006CA  6E20               	movwf	strmatch@b,c
  3043  0006CC  0E06               	movlw	high STR_4
  3044  0006CE  6E21               	movwf	strmatch@b+1,c
  3045  0006D0  ECAD  F00B         	call	_strmatch	;wreg free
  3046  0006D4  06E8               	decf	wreg,f,c
  3047  0006D6  A4D8               	btfss	status,2,c
  3048  0006D8  D114               	goto	l368
  3049                           
  3050                           ;SlaveComm_PIC18.c: 364: {
  3051                           ;SlaveComm_PIC18.c: 369: meterEnergyUsed = atol(parameters[2]);
  3052  0006DA  0E14               	movlw	20
  3053  0006DC  242F               	addwf	process_data_parameters@parameters,w,c
  3054  0006DE  6E1F               	movwf	atol@s,c
  3055  0006E0  0E00               	movlw	0
  3056  0006E2  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3057  0006E4  6E20               	movwf	atol@s+1,c
  3058  0006E6  EC37  F007         	call	_atol	;wreg free
  3059  0006EA  C01F  F064         	movff	?_atol,_meterEnergyUsed
  3060  0006EE  C020  F065         	movff	?_atol+1,_meterEnergyUsed+1
  3061  0006F2  C021  F066         	movff	?_atol+2,_meterEnergyUsed+2
  3062  0006F6  C022  F067         	movff	?_atol+3,_meterEnergyUsed+3
  3063                           
  3064                           ;SlaveComm_PIC18.c: 370: com_command_setEnergyUsed(send_buffer);
  3065  0006FA  C031  F02D         	movff	process_data_parameters@send_buffer,com_command_setEnergyUsed@send_buffer
  3066  0006FE  C032  F02E         	movff	process_data_parameters@send_buffer+1,com_command_setEnergyUsed@send_buffer+1
  3067  000702  EC62  F00A         	call	_com_command_setEnergyUsed	;wreg free
  3068                           
  3069                           ;SlaveComm_PIC18.c: 371: }
  3070                           ;SlaveComm_PIC18.c: 376: }
  3071  000706  D0FD               	goto	l368
  3072  000708                     l344:
  3073                           
  3074                           ;SlaveComm_PIC18.c: 377: else if (strmatch(parameters[0], "Read") == 1)
  3075  000708  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3076  00070C  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3077  000710  0E34               	movlw	low STR_5
  3078  000712  6E20               	movwf	strmatch@b,c
  3079  000714  0E06               	movlw	high STR_5
  3080  000716  6E21               	movwf	strmatch@b+1,c
  3081  000718  ECAD  F00B         	call	_strmatch	;wreg free
  3082  00071C  06E8               	decf	wreg,f,c
  3083  00071E  B4D8               	btfsc	status,2,c
  3084  000720  D0F0               	goto	l368
  3085                           
  3086                           ;SlaveComm_PIC18.c: 381: else if (strmatch(parameters[0], "Data") == 1)
  3087                           
  3088                           ;SlaveComm_PIC18.c: 378: {
  3089                           ;SlaveComm_PIC18.c: 380: }
  3090  000722  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3091  000726  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3092  00072A  0E2F               	movlw	low STR_6
  3093  00072C  6E20               	movwf	strmatch@b,c
  3094  00072E  0E06               	movlw	high STR_6
  3095  000730  6E21               	movwf	strmatch@b+1,c
  3096  000732  ECAD  F00B         	call	_strmatch	;wreg free
  3097  000736  06E8               	decf	wreg,f,c
  3098  000738  A4D8               	btfss	status,2,c
  3099  00073A  D053               	goto	l351
  3100                           
  3101                           ;SlaveComm_PIC18.c: 382: {
  3102                           ;SlaveComm_PIC18.c: 383: if (strmatch(parameters[1], "LEDB") == 1)
  3103  00073C  0E0A               	movlw	10
  3104  00073E  242F               	addwf	process_data_parameters@parameters,w,c
  3105  000740  6E1E               	movwf	strmatch@a,c
  3106  000742  0E00               	movlw	0
  3107  000744  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3108  000746  6E1F               	movwf	strmatch@a+1,c
  3109  000748  0E2A               	movlw	low STR_7
  3110  00074A  6E20               	movwf	strmatch@b,c
  3111  00074C  0E06               	movlw	high STR_7
  3112  00074E  6E21               	movwf	strmatch@b+1,c
  3113  000750  ECAD  F00B         	call	_strmatch	;wreg free
  3114  000754  06E8               	decf	wreg,f,c
  3115  000756  A4D8               	btfss	status,2,c
  3116  000758  D0D4               	goto	l368
  3117                           
  3118                           ;SlaveComm_PIC18.c: 384: {
  3119                           ;SlaveComm_PIC18.c: 385: if (strmatch(parameters[2], "On") == 1)
  3120  00075A  0E14               	movlw	20
  3121  00075C  242F               	addwf	process_data_parameters@parameters,w,c
  3122  00075E  6E1E               	movwf	strmatch@a,c
  3123  000760  0E00               	movlw	0
  3124  000762  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3125  000764  6E1F               	movwf	strmatch@a+1,c
  3126  000766  0E5B               	movlw	low STR_8
  3127  000768  6E20               	movwf	strmatch@b,c
  3128  00076A  0E06               	movlw	high STR_8
  3129  00076C  6E21               	movwf	strmatch@b+1,c
  3130  00076E  ECAD  F00B         	call	_strmatch	;wreg free
  3131  000772  06E8               	decf	wreg,f,c
  3132  000774  A4D8               	btfss	status,2,c
  3133  000776  D013               	goto	l353
  3134                           
  3135                           ;SlaveComm_PIC18.c: 386: {
  3136                           ;SlaveComm_PIC18.c: 387: command_builder3(send_buffer, "Set", "LEDB", "Off");
  3137  000778  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3138  00077C  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3139  000780  0E57               	movlw	low STR_2
  3140  000782  6E21               	movwf	command_builder3@data1,c
  3141  000784  0E06               	movlw	high STR_2
  3142  000786  6E22               	movwf	command_builder3@data1+1,c
  3143  000788  0E2A               	movlw	low STR_7
  3144  00078A  6E23               	movwf	command_builder3@data2,c
  3145  00078C  0E06               	movlw	high STR_7
  3146  00078E  6E24               	movwf	command_builder3@data2+1,c
  3147  000790  0E53               	movlw	low STR_11
  3148  000792  6E25               	movwf	command_builder3@data3,c
  3149  000794  0E06               	movlw	high STR_11
  3150  000796  6E26               	movwf	command_builder3@data3+1,c
  3151  000798  EC11  F008         	call	_command_builder3	;wreg free
  3152                           
  3153                           ;SlaveComm_PIC18.c: 388: }
  3154  00079C  D0B2               	goto	l368
  3155  00079E                     l353:
  3156                           
  3157                           ;SlaveComm_PIC18.c: 389: else if (strmatch(parameters[2], "Off") == 1)
  3158  00079E  0E14               	movlw	20
  3159  0007A0  242F               	addwf	process_data_parameters@parameters,w,c
  3160  0007A2  6E1E               	movwf	strmatch@a,c
  3161  0007A4  0E00               	movlw	0
  3162  0007A6  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3163  0007A8  6E1F               	movwf	strmatch@a+1,c
  3164  0007AA  0E53               	movlw	low STR_11
  3165  0007AC  6E20               	movwf	strmatch@b,c
  3166  0007AE  0E06               	movlw	high STR_11
  3167  0007B0  6E21               	movwf	strmatch@b+1,c
  3168  0007B2  ECAD  F00B         	call	_strmatch	;wreg free
  3169  0007B6  06E8               	decf	wreg,f,c
  3170  0007B8  A4D8               	btfss	status,2,c
  3171  0007BA  D0A3               	goto	l368
  3172                           
  3173                           ;SlaveComm_PIC18.c: 390: {
  3174                           ;SlaveComm_PIC18.c: 391: command_builder3(send_buffer, "Set", "LEDB", "On");
  3175  0007BC  C031  F01F         	movff	process_data_parameters@send_buffer,command_builder3@send_buffer
  3176  0007C0  C032  F020         	movff	process_data_parameters@send_buffer+1,command_builder3@send_buffer+1
  3177  0007C4  0E57               	movlw	low STR_2
  3178  0007C6  6E21               	movwf	command_builder3@data1,c
  3179  0007C8  0E06               	movlw	high STR_2
  3180  0007CA  6E22               	movwf	command_builder3@data1+1,c
  3181  0007CC  0E2A               	movlw	low STR_7
  3182  0007CE  6E23               	movwf	command_builder3@data2,c
  3183  0007D0  0E06               	movlw	high STR_7
  3184  0007D2  6E24               	movwf	command_builder3@data2+1,c
  3185  0007D4  0E5B               	movlw	low STR_8
  3186  0007D6  6E25               	movwf	command_builder3@data3,c
  3187  0007D8  0E06               	movlw	high STR_8
  3188  0007DA  6E26               	movwf	command_builder3@data3+1,c
  3189  0007DC  EC11  F008         	call	_command_builder3	;wreg free
  3190                           
  3191                           ;SlaveComm_PIC18.c: 392: }
  3192                           ;SlaveComm_PIC18.c: 393: }
  3193                           ;SlaveComm_PIC18.c: 394: }
  3194  0007E0  D090               	goto	l368
  3195  0007E2                     l351:
  3196                           
  3197                           ;SlaveComm_PIC18.c: 395: else if (strmatch(parameters[0], "Conf") == 1)
  3198  0007E2  C02F  F01E         	movff	process_data_parameters@parameters,strmatch@a
  3199  0007E6  C030  F01F         	movff	process_data_parameters@parameters+1,strmatch@a+1
  3200  0007EA  0E39               	movlw	low STR_16
  3201  0007EC  6E20               	movwf	strmatch@b,c
  3202  0007EE  0E06               	movlw	high STR_16
  3203  0007F0  6E21               	movwf	strmatch@b+1,c
  3204  0007F2  ECAD  F00B         	call	_strmatch	;wreg free
  3205  0007F6  06E8               	decf	wreg,f,c
  3206  0007F8  A4D8               	btfss	status,2,c
  3207  0007FA  D083               	goto	l368
  3208                           
  3209                           ;SlaveComm_PIC18.c: 396: {
  3210                           ;SlaveComm_PIC18.c: 397: if (strmatch(parameters[1], "LEDB") == 1)
  3211  0007FC  0E0A               	movlw	10
  3212  0007FE  242F               	addwf	process_data_parameters@parameters,w,c
  3213  000800  6E1E               	movwf	strmatch@a,c
  3214  000802  0E00               	movlw	0
  3215  000804  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3216  000806  6E1F               	movwf	strmatch@a+1,c
  3217  000808  0E2A               	movlw	low STR_7
  3218  00080A  6E20               	movwf	strmatch@b,c
  3219  00080C  0E06               	movlw	high STR_7
  3220  00080E  6E21               	movwf	strmatch@b+1,c
  3221  000810  ECAD  F00B         	call	_strmatch	;wreg free
  3222  000814  06E8               	decf	wreg,f,c
  3223  000816  A4D8               	btfss	status,2,c
  3224  000818  D007               	goto	l358
  3225                           
  3226                           ;SlaveComm_PIC18.c: 398: {
  3227                           ;SlaveComm_PIC18.c: 399: send_end_of_transmission(send_buffer);
  3228  00081A  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3229  00081E  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3230  000822  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3231                           
  3232                           ;SlaveComm_PIC18.c: 400: }
  3233  000826  D06D               	goto	l368
  3234  000828                     l358:
  3235                           
  3236                           ;SlaveComm_PIC18.c: 401: else if (strmatch(parameters[1], "Watts") == 1)
  3237  000828  0E0A               	movlw	10
  3238  00082A  242F               	addwf	process_data_parameters@parameters,w,c
  3239  00082C  6E1E               	movwf	strmatch@a,c
  3240  00082E  0E00               	movlw	0
  3241  000830  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3242  000832  6E1F               	movwf	strmatch@a+1,c
  3243  000834  0E24               	movlw	low STR_18
  3244  000836  6E20               	movwf	strmatch@b,c
  3245  000838  0E06               	movlw	high STR_18
  3246  00083A  6E21               	movwf	strmatch@b+1,c
  3247  00083C  ECAD  F00B         	call	_strmatch	;wreg free
  3248  000840  06E8               	decf	wreg,f,c
  3249  000842  A4D8               	btfss	status,2,c
  3250  000844  D007               	goto	l360
  3251                           
  3252                           ;SlaveComm_PIC18.c: 402: {
  3253                           ;SlaveComm_PIC18.c: 403: send_end_of_transmission(send_buffer);
  3254  000846  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3255  00084A  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3256  00084E  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3257                           
  3258                           ;SlaveComm_PIC18.c: 404: }
  3259  000852  D057               	goto	l368
  3260  000854                     l360:
  3261                           
  3262                           ;SlaveComm_PIC18.c: 405: else if (strmatch(parameters[1], "EnUsed") == 1)
  3263  000854  0E0A               	movlw	10
  3264  000856  242F               	addwf	process_data_parameters@parameters,w,c
  3265  000858  6E1E               	movwf	strmatch@a,c
  3266  00085A  0E00               	movlw	0
  3267  00085C  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3268  00085E  6E1F               	movwf	strmatch@a+1,c
  3269  000860  0E17               	movlw	low STR_4
  3270  000862  6E20               	movwf	strmatch@b,c
  3271  000864  0E06               	movlw	high STR_4
  3272  000866  6E21               	movwf	strmatch@b+1,c
  3273  000868  ECAD  F00B         	call	_strmatch	;wreg free
  3274  00086C  06E8               	decf	wreg,f,c
  3275  00086E  A4D8               	btfss	status,2,c
  3276  000870  D007               	goto	l362
  3277                           
  3278                           ;SlaveComm_PIC18.c: 406: {
  3279                           ;SlaveComm_PIC18.c: 407: send_end_of_transmission(send_buffer);
  3280  000872  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3281  000876  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3282  00087A  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3283                           
  3284                           ;SlaveComm_PIC18.c: 408: }
  3285  00087E  D041               	goto	l368
  3286  000880                     l362:
  3287                           
  3288                           ;SlaveComm_PIC18.c: 409: else if (strmatch(parameters[1], "Volts") == 1)
  3289  000880  0E0A               	movlw	10
  3290  000882  242F               	addwf	process_data_parameters@parameters,w,c
  3291  000884  6E1E               	movwf	strmatch@a,c
  3292  000886  0E00               	movlw	0
  3293  000888  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3294  00088A  6E1F               	movwf	strmatch@a+1,c
  3295  00088C  0E1E               	movlw	low STR_20
  3296  00088E  6E20               	movwf	strmatch@b,c
  3297  000890  0E06               	movlw	high STR_20
  3298  000892  6E21               	movwf	strmatch@b+1,c
  3299  000894  ECAD  F00B         	call	_strmatch	;wreg free
  3300  000898  06E8               	decf	wreg,f,c
  3301  00089A  A4D8               	btfss	status,2,c
  3302  00089C  D007               	goto	l364
  3303                           
  3304                           ;SlaveComm_PIC18.c: 410: {
  3305                           ;SlaveComm_PIC18.c: 411: send_end_of_transmission(send_buffer);
  3306  00089E  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3307  0008A2  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3308  0008A6  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3309                           
  3310                           ;SlaveComm_PIC18.c: 412: }
  3311  0008AA  D02B               	goto	l368
  3312  0008AC                     l364:
  3313                           
  3314                           ;SlaveComm_PIC18.c: 413: else if (strmatch(parameters[1], "Amps") == 1)
  3315  0008AC  0E0A               	movlw	10
  3316  0008AE  242F               	addwf	process_data_parameters@parameters,w,c
  3317  0008B0  6E1E               	movwf	strmatch@a,c
  3318  0008B2  0E00               	movlw	0
  3319  0008B4  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3320  0008B6  6E1F               	movwf	strmatch@a+1,c
  3321  0008B8  0E3E               	movlw	low STR_21
  3322  0008BA  6E20               	movwf	strmatch@b,c
  3323  0008BC  0E06               	movlw	high STR_21
  3324  0008BE  6E21               	movwf	strmatch@b+1,c
  3325  0008C0  ECAD  F00B         	call	_strmatch	;wreg free
  3326  0008C4  06E8               	decf	wreg,f,c
  3327  0008C6  A4D8               	btfss	status,2,c
  3328  0008C8  D007               	goto	l366
  3329                           
  3330                           ;SlaveComm_PIC18.c: 414: {
  3331                           ;SlaveComm_PIC18.c: 415: send_end_of_transmission(send_buffer);
  3332  0008CA  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3333  0008CE  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3334  0008D2  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3335                           
  3336                           ;SlaveComm_PIC18.c: 416: }
  3337  0008D6  D015               	goto	l368
  3338  0008D8                     l366:
  3339                           
  3340                           ;SlaveComm_PIC18.c: 417: else if (strmatch(parameters[1], "PSVersion") == 1)
  3341  0008D8  0E0A               	movlw	10
  3342  0008DA  242F               	addwf	process_data_parameters@parameters,w,c
  3343  0008DC  6E1E               	movwf	strmatch@a,c
  3344  0008DE  0E00               	movlw	0
  3345  0008E0  2030               	addwfc	process_data_parameters@parameters+1,w,c
  3346  0008E2  6E1F               	movwf	strmatch@a+1,c
  3347  0008E4  0E0D               	movlw	low STR_22
  3348  0008E6  6E20               	movwf	strmatch@b,c
  3349  0008E8  0E06               	movlw	high STR_22
  3350  0008EA  6E21               	movwf	strmatch@b+1,c
  3351  0008EC  ECAD  F00B         	call	_strmatch	;wreg free
  3352  0008F0  06E8               	decf	wreg,f,c
  3353  0008F2  A4D8               	btfss	status,2,c
  3354  0008F4  D006               	goto	l368
  3355                           
  3356                           ;SlaveComm_PIC18.c: 418: {
  3357                           ;SlaveComm_PIC18.c: 419: send_end_of_transmission(send_buffer);
  3358  0008F6  C031  F023         	movff	process_data_parameters@send_buffer,send_end_of_transmission@send_buffer
  3359  0008FA  C032  F024         	movff	process_data_parameters@send_buffer+1,send_end_of_transmission@send_buffer+1
  3360  0008FE  EC36  F00C         	call	_send_end_of_transmission	;wreg free
  3361  000902                     l368:
  3362                           
  3363                           ;SlaveComm_PIC18.c: 420: }
  3364                           ;SlaveComm_PIC18.c: 421: }
  3365                           ;SlaveComm_PIC18.c: 427: return end_of_transmission_received;
  3366  000902  5033               	movf	process_data_parameters@end_of_transmission_received,w,c
  3367  000904  0012               	return	
  3368  000906                     __end_of_process_data_parameters:
  3369                           	opt stack 0
  3370                           tblptru	equ	0xFF8
  3371                           tblptrh	equ	0xFF7
  3372                           tblptrl	equ	0xFF6
  3373                           tablat	equ	0xFF5
  3374                           prodh	equ	0xFF4
  3375                           prodl	equ	0xFF3
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           postinc1	equ	0xFE6
  3380                           postdec1	equ	0xFE5
  3381                           fsr1h	equ	0xFE2
  3382                           fsr1l	equ	0xFE1
  3383                           indf2	equ	0xFDF
  3384                           postinc2	equ	0xFDE
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _strmatch *****************
  3390 ;; Defined at:
  3391 ;;		line 537 in file "SlaveComm_PIC18.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  a               2   29[COMRAM] PTR unsigned char 
  3394 ;;		 -> process_data@parameters(50), 
  3395 ;;  b               2   31[COMRAM] PTR unsigned char 
  3396 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3397 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3398 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3399 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  result          2   33[COMRAM] int 
  3402 ;;  match           1   35[COMRAM] unsigned char 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      unsigned char 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3412 ;;      Params:         4       0       0       0       0       0       0
  3413 ;;      Locals:         3       0       0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0
  3415 ;;      Totals:         7       0       0       0       0       0       0
  3416 ;;Total ram usage:        7 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    2
  3419 ;; This function calls:
  3420 ;;		_strcmp2
  3421 ;; This function is called by:
  3422 ;;		_process_data_parameters
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text17
  3427  00175A                     __ptext17:
  3428                           	opt stack 0
  3429  00175A                     _strmatch:
  3430                           	opt stack 25
  3431                           
  3432                           ;SlaveComm_PIC18.c: 539: int result;
  3433                           ;SlaveComm_PIC18.c: 540: bool match;
  3434                           ;SlaveComm_PIC18.c: 542: result = strcmp2(a, b);
  3435                           
  3436                           ;incstack = 0
  3437  00175A  C01E  F013         	movff	strmatch@a,strcmp2@a
  3438  00175E  C01F  F014         	movff	strmatch@a+1,strcmp2@a+1
  3439  001762  C020  F015         	movff	strmatch@b,strcmp2@b
  3440  001766  C021  F016         	movff	strmatch@b+1,strcmp2@b+1
  3441  00176A  EC26  F006         	call	_strcmp2	;wreg free
  3442  00176E  C013  F022         	movff	?_strcmp2,strmatch@result
  3443  001772  C014  F023         	movff	?_strcmp2+1,strmatch@result+1
  3444                           
  3445                           ;SlaveComm_PIC18.c: 544: match = (result == 0) ? 1 : 0;
  3446  001776  5022               	movf	strmatch@result,w,c
  3447  001778  1023               	iorwf	strmatch@result+1,w,c
  3448  00177A  A4D8               	btfss	status,2,c
  3449  00177C  D002               	goto	u2220
  3450  00177E  0E01               	movlw	1
  3451  001780  D001               	goto	u2230
  3452  001782                     u2220:
  3453  001782  0E00               	movlw	0
  3454  001784                     u2230:
  3455  001784  6E24               	movwf	strmatch@match,c
  3456                           
  3457                           ;SlaveComm_PIC18.c: 546: return match;
  3458  001786  5024               	movf	strmatch@match,w,c
  3459  001788  0012               	return	
  3460  00178A                     __end_of_strmatch:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           tblptrh	equ	0xFF7
  3464                           tblptrl	equ	0xFF6
  3465                           tablat	equ	0xFF5
  3466                           prodh	equ	0xFF4
  3467                           prodl	equ	0xFF3
  3468                           intcon	equ	0xFF2
  3469                           postinc0	equ	0xFEE
  3470                           wreg	equ	0xFE8
  3471                           postinc1	equ	0xFE6
  3472                           postdec1	equ	0xFE5
  3473                           fsr1h	equ	0xFE2
  3474                           fsr1l	equ	0xFE1
  3475                           indf2	equ	0xFDF
  3476                           postinc2	equ	0xFDE
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function _strcmp2 *****************
  3482 ;; Defined at:
  3483 ;;		line 549 in file "SlaveComm_PIC18.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  a               2   18[COMRAM] PTR unsigned char 
  3486 ;;		 -> process_data@parameters(50), 
  3487 ;;  b               2   20[COMRAM] PTR unsigned char 
  3488 ;;		 -> STR_22(10), STR_21(5), STR_20(6), STR_19(7), 
  3489 ;;		 -> STR_18(6), STR_17(5), STR_16(5), STR_12(4), 
  3490 ;;		 -> STR_8(3), STR_7(5), STR_6(5), STR_5(5), 
  3491 ;;		 -> STR_4(7), STR_3(12), STR_2(4), STR_1(4), 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  inx             2   27[COMRAM] int 
  3494 ;;  match           2   25[COMRAM] int 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  2   18[COMRAM] int 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3504 ;;      Params:         4       0       0       0       0       0       0
  3505 ;;      Locals:         4       0       0       0       0       0       0
  3506 ;;      Temps:          3       0       0       0       0       0       0
  3507 ;;      Totals:        11       0       0       0       0       0       0
  3508 ;;Total ram usage:       11 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_strmatch
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text18
  3519  000C4C                     __ptext18:
  3520                           	opt stack 0
  3521  000C4C                     _strcmp2:
  3522                           	opt stack 25
  3523                           
  3524                           ;SlaveComm_PIC18.c: 551: int inx = 0;
  3525                           
  3526                           ;incstack = 0
  3527  000C4C  0E00               	movlw	0
  3528  000C4E  6E1D               	movwf	strcmp2@inx+1,c
  3529  000C50  0E00               	movlw	0
  3530  000C52  6E1C               	movwf	strcmp2@inx,c
  3531                           
  3532                           ;SlaveComm_PIC18.c: 552: int match = 0;
  3533  000C54  0E00               	movlw	0
  3534  000C56  6E1B               	movwf	strcmp2@match+1,c
  3535  000C58  0E00               	movlw	0
  3536  000C5A  6E1A               	movwf	strcmp2@match,c
  3537                           
  3538                           ;SlaveComm_PIC18.c: 554: while ((a[inx] != '\0') && (b[inx] != '\0') && (match == 0))
  3539  000C5C  D035               	goto	l404
  3540  000C5E                     
  3541                           ;SlaveComm_PIC18.c: 555: {
  3542                           ;SlaveComm_PIC18.c: 556: if (a[inx] > b[inx])
  3543  000C5E  501C               	movf	strcmp2@inx,w,c
  3544  000C60  2413               	addwf	strcmp2@a,w,c
  3545  000C62  6ED9               	movwf	fsr2l,c
  3546  000C64  501D               	movf	strcmp2@inx+1,w,c
  3547  000C66  2014               	addwfc	strcmp2@a+1,w,c
  3548  000C68  6EDA               	movwf	fsr2h,c
  3549  000C6A  501C               	movf	strcmp2@inx,w,c
  3550  000C6C  2415               	addwf	strcmp2@b,w,c
  3551  000C6E  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3552  000C70  501D               	movf	strcmp2@inx+1,w,c
  3553  000C72  2016               	addwfc	strcmp2@b+1,w,c
  3554  000C74  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3555  000C76  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3556  000C7A  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3557  000C7E                     	if	0	;tblptru may be non-zero
  3558  000C7E                     	endif
  3559  000C7E                     	if	0	;tblptru may be non-zero
  3560  000C7E                     	endif
  3561  000C7E  50DE               	movf	postinc2,w,c
  3562  000C80  0009               	tblrd		*+
  3563  000C82  5CF5               	subwf	tablat,w,c
  3564  000C84  B0D8               	btfsc	status,0,c
  3565  000C86  D005               	goto	l406
  3566                           
  3567                           ;SlaveComm_PIC18.c: 557: {
  3568                           ;SlaveComm_PIC18.c: 558: match = 1;
  3569  000C88  0E00               	movlw	0
  3570  000C8A  6E1B               	movwf	strcmp2@match+1,c
  3571  000C8C  0E01               	movlw	1
  3572  000C8E  6E1A               	movwf	strcmp2@match,c
  3573                           
  3574                           ;SlaveComm_PIC18.c: 559: }
  3575  000C90  D019               	goto	l408
  3576  000C92                     l406:
  3577                           
  3578                           ;SlaveComm_PIC18.c: 560: else if (a[inx] < b[inx])
  3579  000C92  501C               	movf	strcmp2@inx,w,c
  3580  000C94  2413               	addwf	strcmp2@a,w,c
  3581  000C96  6ED9               	movwf	fsr2l,c
  3582  000C98  501D               	movf	strcmp2@inx+1,w,c
  3583  000C9A  2014               	addwfc	strcmp2@a+1,w,c
  3584  000C9C  6EDA               	movwf	fsr2h,c
  3585  000C9E  50DF               	movf	indf2,w,c
  3586  000CA0  6E17               	movwf	??_strcmp2& (0+255),c
  3587  000CA2  501C               	movf	strcmp2@inx,w,c
  3588  000CA4  2415               	addwf	strcmp2@b,w,c
  3589  000CA6  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3590  000CA8  501D               	movf	strcmp2@inx+1,w,c
  3591  000CAA  2016               	addwfc	strcmp2@b+1,w,c
  3592  000CAC  6E19               	movwf	(??_strcmp2+2)& (0+255),c
  3593  000CAE  C018  FFF6         	movff	??_strcmp2+1,tblptrl
  3594  000CB2  C019  FFF7         	movff	??_strcmp2+2,tblptrh
  3595  000CB6                     	if	0	;tblptru may be non-zero
  3596  000CB6                     	endif
  3597  000CB6                     	if	0	;tblptru may be non-zero
  3598  000CB6                     	endif
  3599  000CB6  0008               	tblrd		*
  3600  000CB8  50F5               	movf	tablat,w,c
  3601  000CBA  5C17               	subwf	??_strcmp2,w,c
  3602  000CBC  B0D8               	btfsc	status,0,c
  3603  000CBE  D002               	goto	l408
  3604                           
  3605                           ;SlaveComm_PIC18.c: 561: {
  3606                           ;SlaveComm_PIC18.c: 562: match = -1;
  3607  000CC0  681A               	setf	strcmp2@match,c
  3608  000CC2  681B               	setf	strcmp2@match+1,c
  3609  000CC4                     l408:
  3610                           
  3611                           ;SlaveComm_PIC18.c: 567: }
  3612                           ;SlaveComm_PIC18.c: 569: inx++;
  3613                           
  3614                           ;SlaveComm_PIC18.c: 565: {
  3615  000CC4  4A1C               	infsnz	strcmp2@inx,f,c
  3616  000CC6  2A1D               	incf	strcmp2@inx+1,f,c
  3617  000CC8                     l404:
  3618  000CC8  501C               	movf	strcmp2@inx,w,c
  3619  000CCA  2413               	addwf	strcmp2@a,w,c
  3620  000CCC  6ED9               	movwf	fsr2l,c
  3621  000CCE  501D               	movf	strcmp2@inx+1,w,c
  3622  000CD0  2014               	addwfc	strcmp2@a+1,w,c
  3623  000CD2  6EDA               	movwf	fsr2h,c
  3624  000CD4  50DF               	movf	indf2,w,c
  3625  000CD6  B4D8               	btfsc	status,2,c
  3626  000CD8  D013               	goto	u2090
  3627  000CDA  501C               	movf	strcmp2@inx,w,c
  3628  000CDC  2415               	addwf	strcmp2@b,w,c
  3629  000CDE  6E17               	movwf	??_strcmp2& (0+255),c
  3630  000CE0  501D               	movf	strcmp2@inx+1,w,c
  3631  000CE2  2016               	addwfc	strcmp2@b+1,w,c
  3632  000CE4  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3633  000CE6  C017  FFF6         	movff	??_strcmp2,tblptrl
  3634  000CEA  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3635  000CEE                     	if	0	;tblptru may be non-zero
  3636  000CEE                     	endif
  3637  000CEE                     	if	0	;tblptru may be non-zero
  3638  000CEE                     	endif
  3639  000CEE  0008               	tblrd		*
  3640  000CF0  50F5               	movf	tablat,w,c
  3641  000CF2  0900               	iorlw	0
  3642  000CF4  B4D8               	btfsc	status,2,c
  3643  000CF6  D004               	goto	u2090
  3644  000CF8  501A               	movf	strcmp2@match,w,c
  3645  000CFA  101B               	iorwf	strcmp2@match+1,w,c
  3646  000CFC  B4D8               	btfsc	status,2,c
  3647  000CFE  D7AF               	goto	l405
  3648  000D00                     u2090:
  3649                           
  3650                           ;SlaveComm_PIC18.c: 570: }
  3651                           ;SlaveComm_PIC18.c: 573: if ((a[inx] == '\0') && (b[inx] != '\0'))
  3652  000D00  501C               	movf	strcmp2@inx,w,c
  3653  000D02  2413               	addwf	strcmp2@a,w,c
  3654  000D04  6ED9               	movwf	fsr2l,c
  3655  000D06  501D               	movf	strcmp2@inx+1,w,c
  3656  000D08  2014               	addwfc	strcmp2@a+1,w,c
  3657  000D0A  6EDA               	movwf	fsr2h,c
  3658  000D0C  50DF               	movf	indf2,w,c
  3659  000D0E  A4D8               	btfss	status,2,c
  3660  000D10  D012               	goto	l414
  3661  000D12  501C               	movf	strcmp2@inx,w,c
  3662  000D14  2415               	addwf	strcmp2@b,w,c
  3663  000D16  6E17               	movwf	??_strcmp2& (0+255),c
  3664  000D18  501D               	movf	strcmp2@inx+1,w,c
  3665  000D1A  2016               	addwfc	strcmp2@b+1,w,c
  3666  000D1C  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3667  000D1E  C017  FFF6         	movff	??_strcmp2,tblptrl
  3668  000D22  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3669  000D26                     	if	0	;tblptru may be non-zero
  3670  000D26                     	endif
  3671  000D26                     	if	0	;tblptru may be non-zero
  3672  000D26                     	endif
  3673  000D26  0008               	tblrd		*
  3674  000D28  50F5               	movf	tablat,w,c
  3675  000D2A  0900               	iorlw	0
  3676  000D2C  B4D8               	btfsc	status,2,c
  3677  000D2E  D003               	goto	l414
  3678                           
  3679                           ;SlaveComm_PIC18.c: 574: {
  3680                           ;SlaveComm_PIC18.c: 575: match = -1;
  3681  000D30  681A               	setf	strcmp2@match,c
  3682  000D32  681B               	setf	strcmp2@match+1,c
  3683                           
  3684                           ;SlaveComm_PIC18.c: 576: }
  3685  000D34  D01C               	goto	l416
  3686  000D36                     l414:
  3687                           
  3688                           ;SlaveComm_PIC18.c: 577: else if ((a[inx] != '\0') && (b[inx] == '\0'))
  3689  000D36  501C               	movf	strcmp2@inx,w,c
  3690  000D38  2413               	addwf	strcmp2@a,w,c
  3691  000D3A  6ED9               	movwf	fsr2l,c
  3692  000D3C  501D               	movf	strcmp2@inx+1,w,c
  3693  000D3E  2014               	addwfc	strcmp2@a+1,w,c
  3694  000D40  6EDA               	movwf	fsr2h,c
  3695  000D42  50DF               	movf	indf2,w,c
  3696  000D44  B4D8               	btfsc	status,2,c
  3697  000D46  D013               	goto	l416
  3698  000D48  501C               	movf	strcmp2@inx,w,c
  3699  000D4A  2415               	addwf	strcmp2@b,w,c
  3700  000D4C  6E17               	movwf	??_strcmp2& (0+255),c
  3701  000D4E  501D               	movf	strcmp2@inx+1,w,c
  3702  000D50  2016               	addwfc	strcmp2@b+1,w,c
  3703  000D52  6E18               	movwf	(??_strcmp2+1)& (0+255),c
  3704  000D54  C017  FFF6         	movff	??_strcmp2,tblptrl
  3705  000D58  C018  FFF7         	movff	??_strcmp2+1,tblptrh
  3706  000D5C                     	if	0	;tblptru may be non-zero
  3707  000D5C                     	endif
  3708  000D5C                     	if	0	;tblptru may be non-zero
  3709  000D5C                     	endif
  3710  000D5C  0008               	tblrd		*
  3711  000D5E  50F5               	movf	tablat,w,c
  3712  000D60  0900               	iorlw	0
  3713  000D62  A4D8               	btfss	status,2,c
  3714  000D64  D004               	goto	l416
  3715                           
  3716                           ;SlaveComm_PIC18.c: 578: {
  3717                           ;SlaveComm_PIC18.c: 579: match = 1;
  3718  000D66  0E00               	movlw	0
  3719  000D68  6E1B               	movwf	strcmp2@match+1,c
  3720  000D6A  0E01               	movlw	1
  3721  000D6C  6E1A               	movwf	strcmp2@match,c
  3722  000D6E                     l416:
  3723                           
  3724                           ;SlaveComm_PIC18.c: 580: }
  3725                           ;SlaveComm_PIC18.c: 582: return match;
  3726  000D6E  C01A  F013         	movff	strcmp2@match,?_strcmp2
  3727  000D72  C01B  F014         	movff	strcmp2@match+1,?_strcmp2+1
  3728  000D76  0012               	return	
  3729  000D78                     __end_of_strcmp2:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           intcon	equ	0xFF2
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postinc1	equ	0xFE6
  3741                           postdec1	equ	0xFE5
  3742                           fsr1h	equ	0xFE2
  3743                           fsr1l	equ	0xFE1
  3744                           indf2	equ	0xFDF
  3745                           postinc2	equ	0xFDE
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function _send_end_of_transmission *****************
  3751 ;; Defined at:
  3752 ;;		line 628 in file "SlaveComm_PIC18.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  send_buffer     2   34[COMRAM] PTR struct buffer
  3755 ;;		 -> communications@send_buffer(42), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3767 ;;      Params:         2       0       0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0
  3770 ;;      Totals:         2       0       0       0       0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    4
  3774 ;; This function calls:
  3775 ;;		_command_builder1
  3776 ;; This function is called by:
  3777 ;;		_process_data_parameters
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text19
  3782  00186C                     __ptext19:
  3783                           	opt stack 0
  3784  00186C                     _send_end_of_transmission:
  3785                           	opt stack 23
  3786                           
  3787                           ;SlaveComm_PIC18.c: 630: command_builder1(send_buffer, "END");
  3788                           
  3789                           ;incstack = 0
  3790  00186C  C023  F01F         	movff	send_end_of_transmission@send_buffer,command_builder1@send_buffer
  3791  001870  C024  F020         	movff	send_end_of_transmission@send_buffer+1,command_builder1@send_buffer+1
  3792  001874  0E4F               	movlw	low STR_1
  3793  001876  6E21               	movwf	command_builder1@data1,c
  3794  001878  0E06               	movlw	high STR_1
  3795  00187A  6E22               	movwf	command_builder1@data1+1,c
  3796  00187C  EC93  F00A         	call	_command_builder1	;wreg free
  3797  001880  0012               	return	
  3798  001882                     __end_of_send_end_of_transmission:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postinc1	equ	0xFE6
  3810                           postdec1	equ	0xFE5
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function _command_builder1 *****************
  3820 ;; Defined at:
  3821 ;;		line 430 in file "SlaveComm_PIC18.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  3824 ;;		 -> communications@send_buffer(42), 
  3825 ;;  data1           2   32[COMRAM] PTR unsigned char 
  3826 ;;		 -> STR_23(4), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3838 ;;      Params:         4       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0       0       0
  3841 ;;      Totals:         4       0       0       0       0       0       0
  3842 ;;Total ram usage:        4 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    3
  3845 ;; This function calls:
  3846 ;;		_command_builder_add_char
  3847 ;;		_command_builder_add_string
  3848 ;; This function is called by:
  3849 ;;		_send_end_of_transmission
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text20
  3854  001526                     __ptext20:
  3855                           	opt stack 0
  3856  001526                     _command_builder1:
  3857                           	opt stack 23
  3858                           
  3859                           ;SlaveComm_PIC18.c: 432: command_builder_add_char(send_buffer, '#');
  3860                           
  3861                           ;incstack = 0
  3862  001526  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3863  00152A  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3864  00152E  0E23               	movlw	35
  3865  001530  6E15               	movwf	command_builder_add_char@data,c
  3866  001532  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  3867                           
  3868                           ;SlaveComm_PIC18.c: 433: command_builder_add_char(send_buffer, '#');
  3869  001536  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3870  00153A  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3871  00153E  0E23               	movlw	35
  3872  001540  6E15               	movwf	command_builder_add_char@data,c
  3873  001542  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  3874                           
  3875                           ;SlaveComm_PIC18.c: 434: command_builder_add_char(send_buffer, '!');
  3876  001546  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3877  00154A  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3878  00154E  0E21               	movlw	33
  3879  001550  6E15               	movwf	command_builder_add_char@data,c
  3880  001552  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  3881                           
  3882                           ;SlaveComm_PIC18.c: 435: command_builder_add_string(send_buffer, data1);
  3883  001556  C01F  F017         	movff	command_builder1@send_buffer,command_builder_add_string@send_buffer
  3884  00155A  C020  F018         	movff	command_builder1@send_buffer+1,command_builder_add_string@send_buffer+1
  3885  00155E  C021  F019         	movff	command_builder1@data1,command_builder_add_string@data_string
  3886  001562  C022  F01A         	movff	command_builder1@data1+1,command_builder_add_string@data_string+1
  3887  001566  EC82  F009         	call	_command_builder_add_string	;wreg free
  3888                           
  3889                           ;SlaveComm_PIC18.c: 436: command_builder_add_char(send_buffer, '*');
  3890  00156A  C01F  F013         	movff	command_builder1@send_buffer,command_builder_add_char@send_buffer
  3891  00156E  C020  F014         	movff	command_builder1@send_buffer+1,command_builder_add_char@send_buffer+1
  3892  001572  0E2A               	movlw	42
  3893  001574  6E15               	movwf	command_builder_add_char@data,c
  3894  001576  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  3895  00157A  0012               	return	
  3896  00157C                     __end_of_command_builder1:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           postinc0	equ	0xFEE
  3906                           wreg	equ	0xFE8
  3907                           postinc1	equ	0xFE6
  3908                           postdec1	equ	0xFE5
  3909                           fsr1h	equ	0xFE2
  3910                           fsr1l	equ	0xFE1
  3911                           indf2	equ	0xFDF
  3912                           postinc2	equ	0xFDE
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function _com_command_setEnergyUsed *****************
  3918 ;; Defined at:
  3919 ;;		line 664 in file "SlaveComm_PIC18.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  send_buffer     2   44[COMRAM] PTR struct buffer
  3922 ;;		 -> communications@send_buffer(42), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  temp           12    0[BANK0 ] unsigned char [12]
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3934 ;;      Params:         2       0       0       0       0       0       0
  3935 ;;      Locals:         0      12       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0
  3937 ;;      Totals:         2      12       0       0       0       0       0
  3938 ;;Total ram usage:       14 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		_command_builder3
  3943 ;;		_ultoa
  3944 ;; This function is called by:
  3945 ;;		_resetCommunications
  3946 ;;		_process_data_parameters
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text21
  3951  0014C4                     __ptext21:
  3952                           	opt stack 0
  3953  0014C4                     _com_command_setEnergyUsed:
  3954                           	opt stack 24
  3955                           
  3956                           ;SlaveComm_PIC18.c: 666: char temp[12];
  3957                           ;SlaveComm_PIC18.c: 668: if (meterEnergyUsed > 5000) {
  3958                           
  3959                           ;incstack = 0
  3960  0014C4  0100               	movlb	0	; () banked
  3961  0014C6  5167               	movf	(_meterEnergyUsed+3)& (0+255),w,b
  3962  0014C8  1166               	iorwf	(_meterEnergyUsed+2)& (0+255),w,b
  3963  0014CA  E106               	bnz	u2210
  3964  0014CC  0E89               	movlw	137
  3965  0014CE  5D64               	subwf	_meterEnergyUsed& (0+255),w,b
  3966  0014D0  0E13               	movlw	19
  3967  0014D2  5965               	subwfb	(_meterEnergyUsed+1)& (0+255),w,b
  3968  0014D4  A0D8               	btfss	status,0,c
  3969  0014D6  D002               	goto	l442
  3970  0014D8                     u2210:
  3971                           
  3972                           ;SlaveComm_PIC18.c: 670: LATCbits.LATC1 = 1;
  3973                           
  3974                           ;SlaveComm_PIC18.c: 669: while (1) {
  3975  0014D8  828B               	bsf	3979,1,c	;volatile
  3976  0014DA  D7FE               	goto	u2210
  3977  0014DC                     l442:
  3978                           
  3979                           ;SlaveComm_PIC18.c: 671: }
  3980                           ;SlaveComm_PIC18.c: 672: }
  3981                           ;SlaveComm_PIC18.c: 674: ultoa(temp, meterEnergyUsed, 10);
  3982  0014DC  0EC0               	movlw	low com_command_setEnergyUsed@temp
  3983  0014DE  6E20               	movwf	ultoa@buf,c
  3984  0014E0  0E00               	movlw	high com_command_setEnergyUsed@temp
  3985  0014E2  6E21               	movwf	ultoa@buf+1,c
  3986  0014E4  C064  F022         	movff	_meterEnergyUsed,ultoa@val
  3987  0014E8  C065  F023         	movff	_meterEnergyUsed+1,ultoa@val+1
  3988  0014EC  C066  F024         	movff	_meterEnergyUsed+2,ultoa@val+2
  3989  0014F0  C067  F025         	movff	_meterEnergyUsed+3,ultoa@val+3
  3990  0014F4  0E00               	movlw	0
  3991  0014F6  6E27               	movwf	ultoa@base+1,c
  3992  0014F8  0E0A               	movlw	10
  3993  0014FA  6E26               	movwf	ultoa@base,c
  3994  0014FC  ECBC  F006         	call	_ultoa	;wreg free
  3995                           
  3996                           ;SlaveComm_PIC18.c: 677: command_builder3(send_buffer, "Set", "EnUsed", temp);
  3997  001500  C02D  F01F         	movff	com_command_setEnergyUsed@send_buffer,command_builder3@send_buffer
  3998  001504  C02E  F020         	movff	com_command_setEnergyUsed@send_buffer+1,command_builder3@send_buffer+1
  3999  001508  0E57               	movlw	low STR_2
  4000  00150A  6E21               	movwf	command_builder3@data1,c
  4001  00150C  0E06               	movlw	high STR_2
  4002  00150E  6E22               	movwf	command_builder3@data1+1,c
  4003  001510  0E17               	movlw	low STR_4
  4004  001512  6E23               	movwf	command_builder3@data2,c
  4005  001514  0E06               	movlw	high STR_4
  4006  001516  6E24               	movwf	command_builder3@data2+1,c
  4007  001518  0EC0               	movlw	low com_command_setEnergyUsed@temp
  4008  00151A  6E25               	movwf	command_builder3@data3,c
  4009  00151C  0E00               	movlw	high com_command_setEnergyUsed@temp
  4010  00151E  6E26               	movwf	command_builder3@data3+1,c
  4011  001520  EC11  F008         	call	_command_builder3	;wreg free
  4012  001524  0012               	return	
  4013  001526                     __end_of_com_command_setEnergyUsed:
  4014                           	opt stack 0
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           prodh	equ	0xFF4
  4020                           prodl	equ	0xFF3
  4021                           intcon	equ	0xFF2
  4022                           postinc0	equ	0xFEE
  4023                           wreg	equ	0xFE8
  4024                           postinc1	equ	0xFE6
  4025                           postdec1	equ	0xFE5
  4026                           fsr1h	equ	0xFE2
  4027                           fsr1l	equ	0xFE1
  4028                           indf2	equ	0xFDF
  4029                           postinc2	equ	0xFDE
  4030                           fsr2h	equ	0xFDA
  4031                           fsr2l	equ	0xFD9
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function _ultoa *****************
  4035 ;; Defined at:
  4036 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4039 ;;		 -> com_command_setEnergyUsed@temp(12), com_command_setPower@temp(12), 
  4040 ;;  val             4   33[COMRAM] unsigned long 
  4041 ;;  base            2   37[COMRAM] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  v               4   39[COMRAM] unsigned long 
  4044 ;;  c               1   43[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  2   31[COMRAM] PTR unsigned char 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4054 ;;      Params:         8       0       0       0       0       0       0
  4055 ;;      Locals:         5       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0
  4057 ;;      Totals:        13       0       0       0       0       0       0
  4058 ;;Total ram usage:       13 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    2
  4061 ;; This function calls:
  4062 ;;		___lldiv
  4063 ;;		___llmod
  4064 ;; This function is called by:
  4065 ;;		_com_command_setPower
  4066 ;;		_com_command_setEnergyUsed
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text22
  4071  000D78                     __ptext22:
  4072                           	opt stack 0
  4073  000D78                     _ultoa:
  4074                           	opt stack 25
  4075                           
  4076                           ;incstack = 0
  4077  000D78  C022  F028         	movff	ultoa@val,ultoa@v
  4078  000D7C  C023  F029         	movff	ultoa@val+1,ultoa@v+1
  4079  000D80  C024  F02A         	movff	ultoa@val+2,ultoa@v+2
  4080  000D84  C025  F02B         	movff	ultoa@val+3,ultoa@v+3
  4081  000D88  C028  F013         	movff	ultoa@v,___lldiv@dividend
  4082  000D8C  C029  F014         	movff	ultoa@v+1,___lldiv@dividend+1
  4083  000D90  C02A  F015         	movff	ultoa@v+2,___lldiv@dividend+2
  4084  000D94  C02B  F016         	movff	ultoa@v+3,___lldiv@dividend+3
  4085  000D98  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4086  000D9C  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4087  000DA0  0E00               	movlw	0
  4088  000DA2  BE18               	btfsc	___lldiv@divisor+1,7,c
  4089  000DA4  0EFF               	movlw	-1
  4090  000DA6  6E19               	movwf	___lldiv@divisor+2,c
  4091  000DA8  6E1A               	movwf	___lldiv@divisor+3,c
  4092  000DAA  EC41  F009         	call	___lldiv	;wreg free
  4093  000DAE  C013  F028         	movff	?___lldiv,ultoa@v
  4094  000DB2  C014  F029         	movff	?___lldiv+1,ultoa@v+1
  4095  000DB6  C015  F02A         	movff	?___lldiv+2,ultoa@v+2
  4096  000DBA  C016  F02B         	movff	?___lldiv+3,ultoa@v+3
  4097  000DBE  4A20               	infsnz	ultoa@buf,f,c
  4098  000DC0  2A21               	incf	ultoa@buf+1,f,c
  4099  000DC2  5028               	movf	ultoa@v,w,c
  4100  000DC4  1029               	iorwf	ultoa@v+1,w,c
  4101  000DC6  102A               	iorwf	ultoa@v+2,w,c
  4102  000DC8  102B               	iorwf	ultoa@v+3,w,c
  4103  000DCA  A4D8               	btfss	status,2,c
  4104  000DCC  D7DD               	goto	l881
  4105  000DCE  C020  FFD9         	movff	ultoa@buf,fsr2l
  4106  000DD2  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4107  000DD6  0E00               	movlw	0
  4108  000DD8  6EDF               	movwf	indf2,c
  4109  000DDA  0620               	decf	ultoa@buf,f,c
  4110  000DDC  A0D8               	btfss	status,0,c
  4111  000DDE  0621               	decf	ultoa@buf+1,f,c
  4112  000DE0  C022  F013         	movff	ultoa@val,___llmod@dividend
  4113  000DE4  C023  F014         	movff	ultoa@val+1,___llmod@dividend+1
  4114  000DE8  C024  F015         	movff	ultoa@val+2,___llmod@dividend+2
  4115  000DEC  C025  F016         	movff	ultoa@val+3,___llmod@dividend+3
  4116  000DF0  C026  F017         	movff	ultoa@base,___llmod@divisor
  4117  000DF4  C027  F018         	movff	ultoa@base+1,___llmod@divisor+1
  4118  000DF8  0E00               	movlw	0
  4119  000DFA  BE18               	btfsc	___llmod@divisor+1,7,c
  4120  000DFC  0EFF               	movlw	-1
  4121  000DFE  6E19               	movwf	___llmod@divisor+2,c
  4122  000E00  6E1A               	movwf	___llmod@divisor+3,c
  4123  000E02  ECFD  F009         	call	___llmod	;wreg free
  4124  000E06  5013               	movf	?___llmod,w,c
  4125  000E08  6E2C               	movwf	ultoa@c,c
  4126  000E0A  C022  F013         	movff	ultoa@val,___lldiv@dividend
  4127  000E0E  C023  F014         	movff	ultoa@val+1,___lldiv@dividend+1
  4128  000E12  C024  F015         	movff	ultoa@val+2,___lldiv@dividend+2
  4129  000E16  C025  F016         	movff	ultoa@val+3,___lldiv@dividend+3
  4130  000E1A  C026  F017         	movff	ultoa@base,___lldiv@divisor
  4131  000E1E  C027  F018         	movff	ultoa@base+1,___lldiv@divisor+1
  4132  000E22  0E00               	movlw	0
  4133  000E24  BE18               	btfsc	___lldiv@divisor+1,7,c
  4134  000E26  0EFF               	movlw	-1
  4135  000E28  6E19               	movwf	___lldiv@divisor+2,c
  4136  000E2A  6E1A               	movwf	___lldiv@divisor+3,c
  4137  000E2C  EC41  F009         	call	___lldiv	;wreg free
  4138  000E30  C013  F022         	movff	?___lldiv,ultoa@val
  4139  000E34  C014  F023         	movff	?___lldiv+1,ultoa@val+1
  4140  000E38  C015  F024         	movff	?___lldiv+2,ultoa@val+2
  4141  000E3C  C016  F025         	movff	?___lldiv+3,ultoa@val+3
  4142  000E40  0E09               	movlw	9
  4143  000E42  642C               	cpfsgt	ultoa@c,c
  4144  000E44  D002               	goto	l884
  4145  000E46  0E07               	movlw	7
  4146  000E48  262C               	addwf	ultoa@c,f,c
  4147  000E4A                     l884:
  4148  000E4A  0E30               	movlw	48
  4149  000E4C  262C               	addwf	ultoa@c,f,c
  4150  000E4E  C020  FFD9         	movff	ultoa@buf,fsr2l
  4151  000E52  C021  FFDA         	movff	ultoa@buf+1,fsr2h
  4152  000E56  C02C  FFDF         	movff	ultoa@c,indf2
  4153  000E5A  0620               	decf	ultoa@buf,f,c
  4154  000E5C  A0D8               	btfss	status,0,c
  4155  000E5E  0621               	decf	ultoa@buf+1,f,c
  4156  000E60  5022               	movf	ultoa@val,w,c
  4157  000E62  1023               	iorwf	ultoa@val+1,w,c
  4158  000E64  1024               	iorwf	ultoa@val+2,w,c
  4159  000E66  1025               	iorwf	ultoa@val+3,w,c
  4160  000E68  B4D8               	btfsc	status,2,c
  4161  000E6A  0012               	return	
  4162  000E6C  D7B9               	goto	l883
  4163  000E6E                     __end_of_ultoa:
  4164                           	opt stack 0
  4165                           tblptru	equ	0xFF8
  4166                           tblptrh	equ	0xFF7
  4167                           tblptrl	equ	0xFF6
  4168                           tablat	equ	0xFF5
  4169                           prodh	equ	0xFF4
  4170                           prodl	equ	0xFF3
  4171                           intcon	equ	0xFF2
  4172                           postinc0	equ	0xFEE
  4173                           wreg	equ	0xFE8
  4174                           postinc1	equ	0xFE6
  4175                           postdec1	equ	0xFE5
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           indf2	equ	0xFDF
  4179                           postinc2	equ	0xFDE
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function ___llmod *****************
  4185 ;; Defined at:
  4186 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  dividend        4   18[COMRAM] unsigned long 
  4189 ;;  divisor         4   22[COMRAM] unsigned long 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  counter         1   26[COMRAM] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  4   18[COMRAM] unsigned long 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4201 ;;      Params:         8       0       0       0       0       0       0
  4202 ;;      Locals:         1       0       0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0
  4204 ;;      Totals:         9       0       0       0       0       0       0
  4205 ;;Total ram usage:        9 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_ultoa
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text23
  4216  0013FA                     __ptext23:
  4217                           	opt stack 0
  4218  0013FA                     ___llmod:
  4219                           	opt stack 25
  4220                           
  4221                           ;incstack = 0
  4222  0013FA  5017               	movf	___llmod@divisor,w,c
  4223  0013FC  1018               	iorwf	___llmod@divisor+1,w,c
  4224  0013FE  1019               	iorwf	___llmod@divisor+2,w,c
  4225  001400  101A               	iorwf	___llmod@divisor+3,w,c
  4226  001402  B4D8               	btfsc	status,2,c
  4227  001404  D024               	goto	l843
  4228  001406  0E01               	movlw	1
  4229  001408  6E1B               	movwf	___llmod@counter,c
  4230  00140A  D006               	goto	l838
  4231  00140C  90D8               	bcf	status,0,c
  4232  00140E  3617               	rlcf	___llmod@divisor,f,c
  4233  001410  3618               	rlcf	___llmod@divisor+1,f,c
  4234  001412  3619               	rlcf	___llmod@divisor+2,f,c
  4235  001414  361A               	rlcf	___llmod@divisor+3,f,c
  4236  001416  2A1B               	incf	___llmod@counter,f,c
  4237  001418                     l838:
  4238  001418  AE1A               	btfss	___llmod@divisor+3,7,c
  4239  00141A  D7F8               	goto	l839
  4240  00141C                     u2030:
  4241  00141C  5017               	movf	___llmod@divisor,w,c
  4242  00141E  5C13               	subwf	___llmod@dividend,w,c
  4243  001420  5018               	movf	___llmod@divisor+1,w,c
  4244  001422  5814               	subwfb	___llmod@dividend+1,w,c
  4245  001424  5019               	movf	___llmod@divisor+2,w,c
  4246  001426  5815               	subwfb	___llmod@dividend+2,w,c
  4247  001428  501A               	movf	___llmod@divisor+3,w,c
  4248  00142A  5816               	subwfb	___llmod@dividend+3,w,c
  4249  00142C  A0D8               	btfss	status,0,c
  4250  00142E  D008               	goto	l842
  4251  001430  5017               	movf	___llmod@divisor,w,c
  4252  001432  5E13               	subwf	___llmod@dividend,f,c
  4253  001434  5018               	movf	___llmod@divisor+1,w,c
  4254  001436  5A14               	subwfb	___llmod@dividend+1,f,c
  4255  001438  5019               	movf	___llmod@divisor+2,w,c
  4256  00143A  5A15               	subwfb	___llmod@dividend+2,f,c
  4257  00143C  501A               	movf	___llmod@divisor+3,w,c
  4258  00143E  5A16               	subwfb	___llmod@dividend+3,f,c
  4259  001440                     l842:
  4260  001440  90D8               	bcf	status,0,c
  4261  001442  321A               	rrcf	___llmod@divisor+3,f,c
  4262  001444  3219               	rrcf	___llmod@divisor+2,f,c
  4263  001446  3218               	rrcf	___llmod@divisor+1,f,c
  4264  001448  3217               	rrcf	___llmod@divisor,f,c
  4265  00144A  2E1B               	decfsz	___llmod@counter,f,c
  4266  00144C  D7E7               	goto	u2030
  4267  00144E                     l843:
  4268  00144E  C013  F013         	movff	___llmod@dividend,?___llmod
  4269  001452  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4270  001456  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4271  00145A  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4272  00145E  0012               	return		;funcret
  4273  001460                     __end_of___llmod:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           postinc1	equ	0xFE6
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function ___lldiv *****************
  4295 ;; Defined at:
  4296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  dividend        4   18[COMRAM] unsigned long 
  4299 ;;  divisor         4   22[COMRAM] unsigned long 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  quotient        4   26[COMRAM] unsigned long 
  4302 ;;  counter         1   30[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  4   18[COMRAM] unsigned long 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         8       0       0       0       0       0       0
  4313 ;;      Locals:         5       0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0
  4315 ;;      Totals:        13       0       0       0       0       0       0
  4316 ;;Total ram usage:       13 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_powerPulseCheck
  4323 ;;		_ultoa
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text24
  4328  001282                     __ptext24:
  4329                           	opt stack 0
  4330  001282                     ___lldiv:
  4331                           	opt stack 28
  4332                           
  4333                           ;incstack = 0
  4334  001282  0E00               	movlw	0
  4335  001284  6E1B               	movwf	___lldiv@quotient,c
  4336  001286  0E00               	movlw	0
  4337  001288  6E1C               	movwf	___lldiv@quotient+1,c
  4338  00128A  0E00               	movlw	0
  4339  00128C  6E1D               	movwf	___lldiv@quotient+2,c
  4340  00128E  0E00               	movlw	0
  4341  001290  6E1E               	movwf	___lldiv@quotient+3,c
  4342  001292  5017               	movf	___lldiv@divisor,w,c
  4343  001294  1018               	iorwf	___lldiv@divisor+1,w,c
  4344  001296  1019               	iorwf	___lldiv@divisor+2,w,c
  4345  001298  101A               	iorwf	___lldiv@divisor+3,w,c
  4346  00129A  B4D8               	btfsc	status,2,c
  4347  00129C  D02A               	goto	l833
  4348  00129E  0E01               	movlw	1
  4349  0012A0  6E1F               	movwf	___lldiv@counter,c
  4350  0012A2  D006               	goto	l828
  4351  0012A4  90D8               	bcf	status,0,c
  4352  0012A6  3617               	rlcf	___lldiv@divisor,f,c
  4353  0012A8  3618               	rlcf	___lldiv@divisor+1,f,c
  4354  0012AA  3619               	rlcf	___lldiv@divisor+2,f,c
  4355  0012AC  361A               	rlcf	___lldiv@divisor+3,f,c
  4356  0012AE  2A1F               	incf	___lldiv@counter,f,c
  4357  0012B0                     l828:
  4358  0012B0  AE1A               	btfss	___lldiv@divisor+3,7,c
  4359  0012B2  D7F8               	goto	l829
  4360  0012B4                     u2000:
  4361  0012B4  90D8               	bcf	status,0,c
  4362  0012B6  361B               	rlcf	___lldiv@quotient,f,c
  4363  0012B8  361C               	rlcf	___lldiv@quotient+1,f,c
  4364  0012BA  361D               	rlcf	___lldiv@quotient+2,f,c
  4365  0012BC  361E               	rlcf	___lldiv@quotient+3,f,c
  4366  0012BE  5017               	movf	___lldiv@divisor,w,c
  4367  0012C0  5C13               	subwf	___lldiv@dividend,w,c
  4368  0012C2  5018               	movf	___lldiv@divisor+1,w,c
  4369  0012C4  5814               	subwfb	___lldiv@dividend+1,w,c
  4370  0012C6  5019               	movf	___lldiv@divisor+2,w,c
  4371  0012C8  5815               	subwfb	___lldiv@dividend+2,w,c
  4372  0012CA  501A               	movf	___lldiv@divisor+3,w,c
  4373  0012CC  5816               	subwfb	___lldiv@dividend+3,w,c
  4374  0012CE  A0D8               	btfss	status,0,c
  4375  0012D0  D009               	goto	l832
  4376  0012D2  5017               	movf	___lldiv@divisor,w,c
  4377  0012D4  5E13               	subwf	___lldiv@dividend,f,c
  4378  0012D6  5018               	movf	___lldiv@divisor+1,w,c
  4379  0012D8  5A14               	subwfb	___lldiv@dividend+1,f,c
  4380  0012DA  5019               	movf	___lldiv@divisor+2,w,c
  4381  0012DC  5A15               	subwfb	___lldiv@dividend+2,f,c
  4382  0012DE  501A               	movf	___lldiv@divisor+3,w,c
  4383  0012E0  5A16               	subwfb	___lldiv@dividend+3,f,c
  4384  0012E2  801B               	bsf	___lldiv@quotient,0,c
  4385  0012E4                     l832:
  4386  0012E4  90D8               	bcf	status,0,c
  4387  0012E6  321A               	rrcf	___lldiv@divisor+3,f,c
  4388  0012E8  3219               	rrcf	___lldiv@divisor+2,f,c
  4389  0012EA  3218               	rrcf	___lldiv@divisor+1,f,c
  4390  0012EC  3217               	rrcf	___lldiv@divisor,f,c
  4391  0012EE  2E1F               	decfsz	___lldiv@counter,f,c
  4392  0012F0  D7E1               	goto	u2000
  4393  0012F2                     l833:
  4394  0012F2  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  4395  0012F6  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  4396  0012FA  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  4397  0012FE  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  4398  001302  0012               	return		;funcret
  4399  001304                     __end_of___lldiv:
  4400                           	opt stack 0
  4401                           tblptru	equ	0xFF8
  4402                           tblptrh	equ	0xFF7
  4403                           tblptrl	equ	0xFF6
  4404                           tablat	equ	0xFF5
  4405                           prodh	equ	0xFF4
  4406                           prodl	equ	0xFF3
  4407                           intcon	equ	0xFF2
  4408                           postinc0	equ	0xFEE
  4409                           wreg	equ	0xFE8
  4410                           postinc1	equ	0xFE6
  4411                           postdec1	equ	0xFE5
  4412                           fsr1h	equ	0xFE2
  4413                           fsr1l	equ	0xFE1
  4414                           indf2	equ	0xFDF
  4415                           postinc2	equ	0xFDE
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           status	equ	0xFD8
  4419                           
  4420 ;; *************** function _command_builder3 *****************
  4421 ;; Defined at:
  4422 ;;		line 454 in file "SlaveComm_PIC18.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  send_buffer     2   30[COMRAM] PTR struct buffer
  4425 ;;		 -> communications@send_buffer(42), 
  4426 ;;  data1           2   32[COMRAM] PTR unsigned char 
  4427 ;;		 -> STR_38(4), STR_33(4), STR_30(4), STR_28(4), 
  4428 ;;		 -> STR_26(4), STR_13(4), STR_9(4), 
  4429 ;;  data2           2   34[COMRAM] PTR unsigned char 
  4430 ;;		 -> STR_39(10), STR_34(5), STR_31(6), STR_29(7), 
  4431 ;;		 -> STR_27(6), STR_14(5), STR_10(5), 
  4432 ;;  data3           2   36[COMRAM] PTR unsigned char 
  4433 ;;		 -> STR_40(4), STR_35(4), STR_32(4), com_command_setEnergyUsed@temp(12), 
  4434 ;;		 -> com_command_setPower@temp(12), STR_15(3), STR_11(4), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         8       0       0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0
  4449 ;;      Totals:         8       0       0       0       0       0       0
  4450 ;;Total ram usage:        8 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    3
  4453 ;; This function calls:
  4454 ;;		_command_builder_add_char
  4455 ;;		_command_builder_add_string
  4456 ;; This function is called by:
  4457 ;;		_process_data_parameters
  4458 ;;		_com_command_setPower
  4459 ;;		_com_command_setEnergyUsed
  4460 ;;		_com_command_setVersion
  4461 ;;		_com_command_setVolts
  4462 ;;		_com_command_setAmps
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text25
  4467  001022                     __ptext25:
  4468                           	opt stack 0
  4469  001022                     _command_builder3:
  4470                           	opt stack 24
  4471                           
  4472                           ;SlaveComm_PIC18.c: 456: command_builder_add_char(send_buffer, '#');
  4473                           
  4474                           ;incstack = 0
  4475  001022  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4476  001026  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4477  00102A  0E23               	movlw	35
  4478  00102C  6E15               	movwf	command_builder_add_char@data,c
  4479  00102E  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4480                           
  4481                           ;SlaveComm_PIC18.c: 457: command_builder_add_char(send_buffer, '#');
  4482  001032  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4483  001036  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4484  00103A  0E23               	movlw	35
  4485  00103C  6E15               	movwf	command_builder_add_char@data,c
  4486  00103E  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4487                           
  4488                           ;SlaveComm_PIC18.c: 458: command_builder_add_char(send_buffer, '!');
  4489  001042  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4490  001046  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4491  00104A  0E21               	movlw	33
  4492  00104C  6E15               	movwf	command_builder_add_char@data,c
  4493  00104E  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4494                           
  4495                           ;SlaveComm_PIC18.c: 459: command_builder_add_string(send_buffer, data1);
  4496  001052  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4497  001056  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4498  00105A  C021  F019         	movff	command_builder3@data1,command_builder_add_string@data_string
  4499  00105E  C022  F01A         	movff	command_builder3@data1+1,command_builder_add_string@data_string+1
  4500  001062  EC82  F009         	call	_command_builder_add_string	;wreg free
  4501                           
  4502                           ;SlaveComm_PIC18.c: 460: command_builder_add_char(send_buffer, ';');
  4503  001066  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4504  00106A  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4505  00106E  0E3B               	movlw	59
  4506  001070  6E15               	movwf	command_builder_add_char@data,c
  4507  001072  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4508                           
  4509                           ;SlaveComm_PIC18.c: 461: command_builder_add_string(send_buffer, data2);
  4510  001076  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4511  00107A  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4512  00107E  C023  F019         	movff	command_builder3@data2,command_builder_add_string@data_string
  4513  001082  C024  F01A         	movff	command_builder3@data2+1,command_builder_add_string@data_string+1
  4514  001086  EC82  F009         	call	_command_builder_add_string	;wreg free
  4515                           
  4516                           ;SlaveComm_PIC18.c: 462: command_builder_add_char(send_buffer, ';');
  4517  00108A  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4518  00108E  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4519  001092  0E3B               	movlw	59
  4520  001094  6E15               	movwf	command_builder_add_char@data,c
  4521  001096  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4522                           
  4523                           ;SlaveComm_PIC18.c: 463: command_builder_add_string(send_buffer, data3);
  4524  00109A  C01F  F017         	movff	command_builder3@send_buffer,command_builder_add_string@send_buffer
  4525  00109E  C020  F018         	movff	command_builder3@send_buffer+1,command_builder_add_string@send_buffer+1
  4526  0010A2  C025  F019         	movff	command_builder3@data3,command_builder_add_string@data_string
  4527  0010A6  C026  F01A         	movff	command_builder3@data3+1,command_builder_add_string@data_string+1
  4528  0010AA  EC82  F009         	call	_command_builder_add_string	;wreg free
  4529                           
  4530                           ;SlaveComm_PIC18.c: 464: command_builder_add_char(send_buffer, '*');
  4531  0010AE  C01F  F013         	movff	command_builder3@send_buffer,command_builder_add_char@send_buffer
  4532  0010B2  C020  F014         	movff	command_builder3@send_buffer+1,command_builder_add_char@send_buffer+1
  4533  0010B6  0E2A               	movlw	42
  4534  0010B8  6E15               	movwf	command_builder_add_char@data,c
  4535  0010BA  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4536  0010BE  0012               	return	
  4537  0010C0                     __end_of_command_builder3:
  4538                           	opt stack 0
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           postinc1	equ	0xFE6
  4549                           postdec1	equ	0xFE5
  4550                           fsr1h	equ	0xFE2
  4551                           fsr1l	equ	0xFE1
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function _command_builder_add_string *****************
  4559 ;; Defined at:
  4560 ;;		line 499 in file "SlaveComm_PIC18.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  send_buffer     2   22[COMRAM] PTR struct buffer
  4563 ;;		 -> communications@send_buffer(42), 
  4564 ;;  data_string     2   24[COMRAM] PTR unsigned char 
  4565 ;;		 -> STR_40(4), STR_39(10), STR_38(4), STR_37(12), 
  4566 ;;		 -> STR_36(5), STR_35(4), STR_34(5), STR_33(4), 
  4567 ;;		 -> STR_32(4), STR_31(6), STR_30(4), STR_29(7), 
  4568 ;;		 -> STR_28(4), com_command_setEnergyUsed@temp(12), STR_27(6), STR_26(4), 
  4569 ;;		 -> com_command_setPower@temp(12), STR_25(5), STR_24(5), STR_23(4), 
  4570 ;;		 -> STR_15(3), STR_14(5), STR_13(4), STR_11(4), 
  4571 ;;		 -> STR_10(5), STR_9(4), 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  inx             2   28[COMRAM] int 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4583 ;;      Params:         4       0       0       0       0       0       0
  4584 ;;      Locals:         2       0       0       0       0       0       0
  4585 ;;      Temps:          2       0       0       0       0       0       0
  4586 ;;      Totals:         8       0       0       0       0       0       0
  4587 ;;Total ram usage:        8 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    2
  4590 ;; This function calls:
  4591 ;;		_command_builder_add_char
  4592 ;; This function is called by:
  4593 ;;		_command_builder1
  4594 ;;		_command_builder3
  4595 ;;		_command_builder2
  4596 ;;		_command_builder4
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text26
  4601  001304                     __ptext26:
  4602                           	opt stack 0
  4603  001304                     _command_builder_add_string:
  4604                           	opt stack 24
  4605                           
  4606                           ;SlaveComm_PIC18.c: 501: for (int inx = 0; data_string[inx] != '\0'; inx++)
  4607                           
  4608                           ;incstack = 0
  4609  001304  0E00               	movlw	0
  4610  001306  6E1E               	movwf	command_builder_add_string@inx+1,c
  4611  001308  0E00               	movlw	0
  4612  00130A  6E1D               	movwf	command_builder_add_string@inx,c
  4613  00130C  D01F               	goto	l388
  4614  00130E                     
  4615                           ;SlaveComm_PIC18.c: 502: {
  4616                           ;SlaveComm_PIC18.c: 503: command_builder_add_char(send_buffer, data_string[inx]);
  4617  00130E  C017  F013         	movff	command_builder_add_string@send_buffer,command_builder_add_char@send_buffer
  4618  001312  C018  F014         	movff	command_builder_add_string@send_buffer+1,command_builder_add_char@send_buffer+1
  4619  001316  501D               	movf	command_builder_add_string@inx,w,c
  4620  001318  2419               	addwf	command_builder_add_string@data_string,w,c
  4621  00131A  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4622  00131C  501E               	movf	command_builder_add_string@inx+1,w,c
  4623  00131E  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4624  001320  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4625  001322  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4626  001326  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4627  00132A  6AF8               	clrf	tblptru,c
  4628  00132C  0E05               	movlw	(high __ramtop+-1)
  4629  00132E  64F7               	cpfsgt	tblptrh,c
  4630  001330  D003               	bra	u1967
  4631  001332  0008               	tblrd		*
  4632  001334  50F5               	movf	tablat,w,c
  4633  001336  D005               	bra	u1960
  4634  001338                     u1967:
  4635  001338  CFF6 FFE1          	movff	tblptrl,fsr1l
  4636  00133C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4637  001340  50E7               	movf	indf1,w,c
  4638  001342                     u1960:
  4639  001342  6E15               	movwf	command_builder_add_char@data,c
  4640  001344  ECBE  F00A         	call	_command_builder_add_char	;wreg free
  4641  001348  4A1D               	infsnz	command_builder_add_string@inx,f,c
  4642  00134A  2A1E               	incf	command_builder_add_string@inx+1,f,c
  4643  00134C                     l388:
  4644  00134C  501D               	movf	command_builder_add_string@inx,w,c
  4645  00134E  2419               	addwf	command_builder_add_string@data_string,w,c
  4646  001350  6E1B               	movwf	??_command_builder_add_string& (0+255),c
  4647  001352  501E               	movf	command_builder_add_string@inx+1,w,c
  4648  001354  201A               	addwfc	command_builder_add_string@data_string+1,w,c
  4649  001356  6E1C               	movwf	(??_command_builder_add_string+1)& (0+255),c
  4650  001358  C01B  FFF6         	movff	??_command_builder_add_string,tblptrl
  4651  00135C  C01C  FFF7         	movff	??_command_builder_add_string+1,tblptrh
  4652  001360  6AF8               	clrf	tblptru,c
  4653  001362  0E05               	movlw	(high __ramtop+-1)
  4654  001364  64F7               	cpfsgt	tblptrh,c
  4655  001366  D003               	bra	u1977
  4656  001368  0008               	tblrd		*
  4657  00136A  50F5               	movf	tablat,w,c
  4658  00136C  D005               	bra	u1970
  4659  00136E                     u1977:
  4660  00136E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4661  001372  CFF7 FFE2          	movff	tblptrh,fsr1h
  4662  001376  50E7               	movf	indf1,w,c
  4663  001378                     u1970:
  4664  001378  0900               	iorlw	0
  4665  00137A  B4D8               	btfsc	status,2,c
  4666  00137C  0012               	return	
  4667  00137E  D7C7               	goto	l389
  4668  001380                     __end_of_command_builder_add_string:
  4669                           	opt stack 0
  4670                           tblptru	equ	0xFF8
  4671                           tblptrh	equ	0xFF7
  4672                           tblptrl	equ	0xFF6
  4673                           tablat	equ	0xFF5
  4674                           prodh	equ	0xFF4
  4675                           prodl	equ	0xFF3
  4676                           intcon	equ	0xFF2
  4677                           postinc0	equ	0xFEE
  4678                           wreg	equ	0xFE8
  4679                           indf1	equ	0xFE7
  4680                           postinc1	equ	0xFE6
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           postinc2	equ	0xFDE
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _command_builder_add_char *****************
  4691 ;; Defined at:
  4692 ;;		line 486 in file "SlaveComm_PIC18.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  send_buffer     2   18[COMRAM] PTR struct buffer
  4695 ;;		 -> communications@send_buffer(42), 
  4696 ;;  data            1   20[COMRAM] unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4708 ;;      Params:         3       0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0
  4710 ;;      Temps:          1       0       0       0       0       0       0
  4711 ;;      Totals:         4       0       0       0       0       0       0
  4712 ;;Total ram usage:        4 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    1
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_command_builder1
  4719 ;;		_command_builder3
  4720 ;;		_command_builder_add_string
  4721 ;;		_command_builder2
  4722 ;;		_command_builder4
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text27
  4727  00157C                     __ptext27:
  4728                           	opt stack 0
  4729  00157C                     _command_builder_add_char:
  4730                           	opt stack 24
  4731                           
  4732                           ;SlaveComm_PIC18.c: 488: send_buffer->data_buffer[send_buffer->write_position] = data;
  4733                           
  4734                           ;incstack = 0
  4735  00157C  EE20 F028          	lfsr	2,40
  4736  001580  5013               	movf	command_builder_add_char@send_buffer,w,c
  4737  001582  26D9               	addwf	fsr2l,f,c
  4738  001584  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4739  001586  22DA               	addwfc	fsr2h,f,c
  4740  001588  50DF               	movf	indf2,w,c
  4741  00158A  6E16               	movwf	??_command_builder_add_char& (0+255),c
  4742  00158C  5016               	movf	??_command_builder_add_char,w,c
  4743  00158E  0D01               	mullw	1
  4744  001590  50F3               	movf	prodl,w,c
  4745  001592  2413               	addwf	command_builder_add_char@send_buffer,w,c
  4746  001594  6ED9               	movwf	fsr2l,c
  4747  001596  50F4               	movf	prodh,w,c
  4748  001598  2014               	addwfc	command_builder_add_char@send_buffer+1,w,c
  4749  00159A  6EDA               	movwf	fsr2h,c
  4750  00159C  C015  FFDF         	movff	command_builder_add_char@data,indf2
  4751                           
  4752                           ;SlaveComm_PIC18.c: 490: send_buffer->write_position++;
  4753  0015A0  EE20 F028          	lfsr	2,40
  4754  0015A4  5013               	movf	command_builder_add_char@send_buffer,w,c
  4755  0015A6  26D9               	addwf	fsr2l,f,c
  4756  0015A8  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4757  0015AA  22DA               	addwfc	fsr2h,f,c
  4758  0015AC  2ADF               	incf	indf2,f,c
  4759                           
  4760                           ;SlaveComm_PIC18.c: 491: if (send_buffer->write_position >= 40)
  4761  0015AE  EE20 F028          	lfsr	2,40
  4762  0015B2  5013               	movf	command_builder_add_char@send_buffer,w,c
  4763  0015B4  26D9               	addwf	fsr2l,f,c
  4764  0015B6  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4765  0015B8  22DA               	addwfc	fsr2h,f,c
  4766  0015BA  0E27               	movlw	39
  4767  0015BC  64DF               	cpfsgt	indf2,c
  4768  0015BE  0012               	return	
  4769                           
  4770                           ;SlaveComm_PIC18.c: 492: {
  4771                           ;SlaveComm_PIC18.c: 493: send_buffer->write_position = 0;
  4772  0015C0  EE20 F028          	lfsr	2,40
  4773  0015C4  5013               	movf	command_builder_add_char@send_buffer,w,c
  4774  0015C6  26D9               	addwf	fsr2l,f,c
  4775  0015C8  5014               	movf	command_builder_add_char@send_buffer+1,w,c
  4776  0015CA  22DA               	addwfc	fsr2h,f,c
  4777  0015CC  0E00               	movlw	0
  4778  0015CE  6EDF               	movwf	indf2,c
  4779  0015D0  0012               	return	
  4780  0015D2                     __end_of_command_builder_add_char:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           indf1	equ	0xFE7
  4792                           postinc1	equ	0xFE6
  4793                           postdec1	equ	0xFE5
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _atol *****************
  4803 ;; Defined at:
  4804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atol.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  s               2   30[COMRAM] PTR const unsigned char 
  4807 ;;		 -> process_data@parameters(50), 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  a               4   39[COMRAM] long 
  4810 ;;  c               1   43[COMRAM] unsigned char 
  4811 ;;  sign            1   38[COMRAM] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4   30[COMRAM] long 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4821 ;;      Params:         4       0       0       0       0       0       0
  4822 ;;      Locals:         6       0       0       0       0       0       0
  4823 ;;      Temps:          4       0       0       0       0       0       0
  4824 ;;      Totals:        14       0       0       0       0       0       0
  4825 ;;Total ram usage:       14 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; Hardware stack levels required when called:    2
  4828 ;; This function calls:
  4829 ;;		___lmul
  4830 ;;		_isdigit
  4831 ;; This function is called by:
  4832 ;;		_process_data_parameters
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text28
  4837  000E6E                     __ptext28:
  4838                           	opt stack 0
  4839  000E6E                     _atol:
  4840                           	opt stack 25
  4841                           
  4842                           ;incstack = 0
  4843  000E6E  C01F  FFD9         	movff	atol@s,fsr2l
  4844  000E72  C020  FFDA         	movff	atol@s+1,fsr2h
  4845  000E76  50DF               	movf	indf2,w,c
  4846  000E78  6E2C               	movwf	atol@c,c
  4847  000E7A  4A1F               	infsnz	atol@s,f,c
  4848  000E7C  2A20               	incf	atol@s+1,f,c
  4849  000E7E  0E20               	movlw	32
  4850  000E80  182C               	xorwf	atol@c,w,c
  4851  000E82  B4D8               	btfsc	status,2,c
  4852  000E84  D7F4               	goto	_atol
  4853  000E86  0E09               	movlw	9
  4854  000E88  182C               	xorwf	atol@c,w,c
  4855  000E8A  B4D8               	btfsc	status,2,c
  4856  000E8C  D7F0               	goto	_atol
  4857  000E8E  0E00               	movlw	0
  4858  000E90  6E28               	movwf	atol@a,c
  4859  000E92  0E00               	movlw	0
  4860  000E94  6E29               	movwf	atol@a+1,c
  4861  000E96  0E00               	movlw	0
  4862  000E98  6E2A               	movwf	atol@a+2,c
  4863  000E9A  0E00               	movlw	0
  4864  000E9C  6E2B               	movwf	atol@a+3,c
  4865  000E9E  0E00               	movlw	0
  4866  000EA0  6E27               	movwf	atol@sign,c
  4867  000EA2  0E2D               	movlw	45
  4868  000EA4  182C               	xorwf	atol@c,w,c
  4869  000EA6  A4D8               	btfss	status,2,c
  4870  000EA8  D002               	goto	l624
  4871  000EAA  2A27               	incf	atol@sign,f,c
  4872  000EAC  D027               	goto	L3
  4873  000EAE                     l624:
  4874  000EAE  0E2B               	movlw	43
  4875  000EB0  182C               	xorwf	atol@c,w,c
  4876  000EB2  A4D8               	btfss	status,2,c
  4877  000EB4  D02B               	goto	l627
  4878  000EB6  D022               	goto	L3
  4879  000EB8  C028  F013         	movff	atol@a,___lmul@multiplier
  4880  000EBC  C029  F014         	movff	atol@a+1,___lmul@multiplier+1
  4881  000EC0  C02A  F015         	movff	atol@a+2,___lmul@multiplier+2
  4882  000EC4  C02B  F016         	movff	atol@a+3,___lmul@multiplier+3
  4883  000EC8  0E0A               	movlw	10
  4884  000ECA  6E17               	movwf	___lmul@multiplicand,c
  4885  000ECC  0E00               	movlw	0
  4886  000ECE  6E18               	movwf	___lmul@multiplicand+1,c
  4887  000ED0  0E00               	movlw	0
  4888  000ED2  6E19               	movwf	___lmul@multiplicand+2,c
  4889  000ED4  0E00               	movlw	0
  4890  000ED6  6E1A               	movwf	___lmul@multiplicand+3,c
  4891  000ED8  ECE9  F00A         	call	___lmul	;wreg free
  4892  000EDC  C02C  F023         	movff	atol@c,??_atol
  4893  000EE0  0ED0               	movlw	208
  4894  000EE2  2623               	addwf	??_atol,f,c
  4895  000EE4  5023               	movf	??_atol,w,c
  4896  000EE6  2413               	addwf	?___lmul,w,c
  4897  000EE8  6E28               	movwf	atol@a,c
  4898  000EEA  0E00               	movlw	0
  4899  000EEC  2014               	addwfc	?___lmul+1,w,c
  4900  000EEE  6E29               	movwf	atol@a+1,c
  4901  000EF0  0E00               	movlw	0
  4902  000EF2  2015               	addwfc	?___lmul+2,w,c
  4903  000EF4  6E2A               	movwf	atol@a+2,c
  4904  000EF6  0E00               	movlw	0
  4905  000EF8  2016               	addwfc	?___lmul+3,w,c
  4906  000EFA  6E2B               	movwf	atol@a+3,c
  4907  000EFC                     L3:
  4908  000EFC  C01F  FFD9         	movff	atol@s,fsr2l
  4909  000F00  C020  FFDA         	movff	atol@s+1,fsr2h
  4910  000F04  50DF               	movf	indf2,w,c
  4911  000F06  6E2C               	movwf	atol@c,c
  4912  000F08  4A1F               	infsnz	atol@s,f,c
  4913  000F0A  2A20               	incf	atol@s+1,f,c
  4914  000F0C                     l627:
  4915  000F0C  502C               	movf	atol@c,w,c
  4916  000F0E  EC0F  F00C         	call	_isdigit
  4917  000F12  B0D8               	btfsc	status,0,c
  4918  000F14  D7D1               	goto	l628
  4919  000F16  5027               	movf	atol@sign,w,c
  4920  000F18  B4D8               	btfsc	status,2,c
  4921  000F1A  D01A               	goto	l630
  4922  000F1C  C028  F023         	movff	atol@a,??_atol
  4923  000F20  C029  F024         	movff	atol@a+1,??_atol+1
  4924  000F24  C02A  F025         	movff	atol@a+2,??_atol+2
  4925  000F28  C02B  F026         	movff	atol@a+3,??_atol+3
  4926  000F2C  1E23               	comf	??_atol,f,c
  4927  000F2E  1E24               	comf	??_atol+1,f,c
  4928  000F30  1E25               	comf	??_atol+2,f,c
  4929  000F32  1E26               	comf	??_atol+3,f,c
  4930  000F34  2A23               	incf	??_atol,f,c
  4931  000F36  0E00               	movlw	0
  4932  000F38  2224               	addwfc	??_atol+1,f,c
  4933  000F3A  2225               	addwfc	??_atol+2,f,c
  4934  000F3C  2226               	addwfc	??_atol+3,f,c
  4935  000F3E  C023  F01F         	movff	??_atol,?_atol
  4936  000F42  C024  F020         	movff	??_atol+1,?_atol+1
  4937  000F46  C025  F021         	movff	??_atol+2,?_atol+2
  4938  000F4A  C026  F022         	movff	??_atol+3,?_atol+3
  4939  000F4E  0012               	return	
  4940  000F50                     l630:
  4941  000F50  C028  F01F         	movff	atol@a,?_atol
  4942  000F54  C029  F020         	movff	atol@a+1,?_atol+1
  4943  000F58  C02A  F021         	movff	atol@a+2,?_atol+2
  4944  000F5C  C02B  F022         	movff	atol@a+3,?_atol+3
  4945  000F60  0012               	return		;funcret
  4946  000F62                     __end_of_atol:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           indf1	equ	0xFE7
  4958                           postinc1	equ	0xFE6
  4959                           postdec1	equ	0xFE5
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           indf2	equ	0xFDF
  4963                           postinc2	equ	0xFDE
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _isdigit *****************
  4969 ;; Defined at:
  4970 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  c               1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  c               1   20[COMRAM] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;		None               void
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4984 ;;      Params:         0       0       0       0       0       0       0
  4985 ;;      Locals:         2       0       0       0       0       0       0
  4986 ;;      Temps:          1       0       0       0       0       0       0
  4987 ;;      Totals:         3       0       0       0       0       0       0
  4988 ;;Total ram usage:        3 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    1
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_atol
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text29
  4999  00181E                     __ptext29:
  5000                           	opt stack 0
  5001  00181E                     _isdigit:
  5002                           	opt stack 25
  5003                           
  5004                           ;incstack = 0
  5005                           ;isdigit@c stored from wreg
  5006  00181E  6E15               	movwf	isdigit@c,c
  5007  001820  0E00               	movlw	0
  5008  001822  6E14               	movwf	_isdigit$2226,c
  5009  001824  0E3A               	movlw	58
  5010  001826  6015               	cpfslt	isdigit@c,c
  5011  001828  D005               	goto	l802
  5012  00182A  0E2F               	movlw	47
  5013  00182C  6415               	cpfsgt	isdigit@c,c
  5014  00182E  D002               	goto	l802
  5015  001830  0E01               	movlw	1
  5016  001832  6E14               	movwf	_isdigit$2226,c
  5017  001834                     l802:
  5018  001834  C014  F013         	movff	_isdigit$2226,??_isdigit
  5019  001838  3013               	rrcf	??_isdigit,w,c
  5020  00183A  0012               	return	
  5021  00183C                     __end_of_isdigit:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           prodh	equ	0xFF4
  5028                           prodl	equ	0xFF3
  5029                           intcon	equ	0xFF2
  5030                           postinc0	equ	0xFEE
  5031                           wreg	equ	0xFE8
  5032                           indf1	equ	0xFE7
  5033                           postinc1	equ	0xFE6
  5034                           postdec1	equ	0xFE5
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           fsr2h	equ	0xFDA
  5040                           fsr2l	equ	0xFD9
  5041                           status	equ	0xFD8
  5042                           
  5043 ;; *************** function ___lmul *****************
  5044 ;; Defined at:
  5045 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  multiplier      4   18[COMRAM] unsigned long 
  5048 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  product         4   26[COMRAM] unsigned long 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4   18[COMRAM] unsigned long 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5060 ;;      Params:         8       0       0       0       0       0       0
  5061 ;;      Locals:         4       0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0
  5063 ;;      Totals:        12       0       0       0       0       0       0
  5064 ;;Total ram usage:       12 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_powerPulseCheck
  5071 ;;		_atol
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text30
  5076  0015D2                     __ptext30:
  5077                           	opt stack 0
  5078  0015D2                     ___lmul:
  5079                           	opt stack 28
  5080                           
  5081                           ;incstack = 0
  5082  0015D2  0E00               	movlw	0
  5083  0015D4  6E1B               	movwf	___lmul@product,c
  5084  0015D6  0E00               	movlw	0
  5085  0015D8  6E1C               	movwf	___lmul@product+1,c
  5086  0015DA  0E00               	movlw	0
  5087  0015DC  6E1D               	movwf	___lmul@product+2,c
  5088  0015DE  0E00               	movlw	0
  5089  0015E0  6E1E               	movwf	___lmul@product+3,c
  5090  0015E2  A013               	btfss	___lmul@multiplier,0,c
  5091  0015E4  D008               	goto	l471
  5092  0015E6  5017               	movf	___lmul@multiplicand,w,c
  5093  0015E8  261B               	addwf	___lmul@product,f,c
  5094  0015EA  5018               	movf	___lmul@multiplicand+1,w,c
  5095  0015EC  221C               	addwfc	___lmul@product+1,f,c
  5096  0015EE  5019               	movf	___lmul@multiplicand+2,w,c
  5097  0015F0  221D               	addwfc	___lmul@product+2,f,c
  5098  0015F2  501A               	movf	___lmul@multiplicand+3,w,c
  5099  0015F4  221E               	addwfc	___lmul@product+3,f,c
  5100  0015F6                     l471:
  5101  0015F6  90D8               	bcf	status,0,c
  5102  0015F8  3617               	rlcf	___lmul@multiplicand,f,c
  5103  0015FA  3618               	rlcf	___lmul@multiplicand+1,f,c
  5104  0015FC  3619               	rlcf	___lmul@multiplicand+2,f,c
  5105  0015FE  361A               	rlcf	___lmul@multiplicand+3,f,c
  5106  001600  90D8               	bcf	status,0,c
  5107  001602  3216               	rrcf	___lmul@multiplier+3,f,c
  5108  001604  3215               	rrcf	___lmul@multiplier+2,f,c
  5109  001606  3214               	rrcf	___lmul@multiplier+1,f,c
  5110  001608  3213               	rrcf	___lmul@multiplier,f,c
  5111  00160A  5013               	movf	___lmul@multiplier,w,c
  5112  00160C  1014               	iorwf	___lmul@multiplier+1,w,c
  5113  00160E  1015               	iorwf	___lmul@multiplier+2,w,c
  5114  001610  1016               	iorwf	___lmul@multiplier+3,w,c
  5115  001612  A4D8               	btfss	status,2,c
  5116  001614  D7E6               	goto	l470
  5117  001616  C01B  F013         	movff	___lmul@product,?___lmul
  5118  00161A  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5119  00161E  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5120  001622  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5121  001626  0012               	return		;funcret
  5122  001628                     __end_of___lmul:
  5123                           	opt stack 0
  5124                           tblptru	equ	0xFF8
  5125                           tblptrh	equ	0xFF7
  5126                           tblptrl	equ	0xFF6
  5127                           tablat	equ	0xFF5
  5128                           prodh	equ	0xFF4
  5129                           prodl	equ	0xFF3
  5130                           intcon	equ	0xFF2
  5131                           postinc0	equ	0xFEE
  5132                           wreg	equ	0xFE8
  5133                           indf1	equ	0xFE7
  5134                           postinc1	equ	0xFE6
  5135                           postdec1	equ	0xFE5
  5136                           fsr1h	equ	0xFE2
  5137                           fsr1l	equ	0xFE1
  5138                           indf2	equ	0xFDF
  5139                           postinc2	equ	0xFDE
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _process_data_parameterize *****************
  5145 ;; Defined at:
  5146 ;;		line 280 in file "SlaveComm_PIC18.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  parameters      2   24[COMRAM] PTR unsigned char [10]
  5149 ;;		 -> process_data@parameters(50), 
  5150 ;;  buffer_to_pa    2   26[COMRAM] PTR struct buffer
  5151 ;;		 -> communications@receive_buffer(42), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  inx             2   31[COMRAM] int 
  5154 ;;  parameter_po    1   34[COMRAM] unsigned char 
  5155 ;;  parameter_in    1   33[COMRAM] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5165 ;;      Params:         4       0       0       0       0       0       0
  5166 ;;      Locals:         4       0       0       0       0       0       0
  5167 ;;      Temps:          3       0       0       0       0       0       0
  5168 ;;      Totals:        11       0       0       0       0       0       0
  5169 ;;Total ram usage:       11 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    2
  5172 ;; This function calls:
  5173 ;;		___wmul
  5174 ;; This function is called by:
  5175 ;;		_process_data
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text31
  5180  000ACC                     __ptext31:
  5181                           	opt stack 0
  5182  000ACC                     _process_data_parameterize:
  5183                           	opt stack 26
  5184                           
  5185                           ;SlaveComm_PIC18.c: 282: unsigned char parameter_position = 0;
  5186                           
  5187                           ;incstack = 0
  5188  000ACC  0E00               	movlw	0
  5189  000ACE  6E23               	movwf	process_data_parameterize@parameter_position,c
  5190                           
  5191                           ;SlaveComm_PIC18.c: 283: unsigned char parameter_index = 0;
  5192  000AD0  0E00               	movlw	0
  5193  000AD2  6E22               	movwf	process_data_parameterize@parameter_index,c
  5194                           
  5195                           ;SlaveComm_PIC18.c: 292: for (int inx = 0; inx < 5; inx++)
  5196  000AD4  0E00               	movlw	0
  5197  000AD6  6E21               	movwf	process_data_parameterize@inx+1,c
  5198  000AD8  0E00               	movlw	0
  5199  000ADA  6E20               	movwf	process_data_parameterize@inx,c
  5200  000ADC  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5201  000ADE  D008               	goto	l325
  5202  000AE0  5021               	movf	process_data_parameterize@inx+1,w,c
  5203  000AE2  E105               	bnz	u2310
  5204  000AE4  0E05               	movlw	5
  5205  000AE6  5C20               	subwf	process_data_parameterize@inx,w,c
  5206  000AE8  B0D8               	btfsc	status,0,c
  5207  000AEA  D082               	goto	l327
  5208  000AEC  D001               	goto	l325
  5209  000AEE                     u2310:
  5210  000AEE  D080               	goto	l327
  5211  000AF0                     l325:
  5212                           
  5213                           ;SlaveComm_PIC18.c: 293: {
  5214                           ;SlaveComm_PIC18.c: 294: parameters[inx][0] = '\0';
  5215  000AF0  C020  F013         	movff	process_data_parameterize@inx,___wmul@multiplier
  5216  000AF4  C021  F014         	movff	process_data_parameterize@inx+1,___wmul@multiplier+1
  5217  000AF8  0E00               	movlw	0
  5218  000AFA  6E16               	movwf	___wmul@multiplicand+1,c
  5219  000AFC  0E0A               	movlw	10
  5220  000AFE  6E15               	movwf	___wmul@multiplicand,c
  5221  000B00  ECEC  F00B         	call	___wmul	;wreg free
  5222  000B04  5013               	movf	?___wmul,w,c
  5223  000B06  2419               	addwf	process_data_parameterize@parameters,w,c
  5224  000B08  6ED9               	movwf	fsr2l,c
  5225  000B0A  5014               	movf	?___wmul+1,w,c
  5226  000B0C  201A               	addwfc	process_data_parameterize@parameters+1,w,c
  5227  000B0E  6EDA               	movwf	fsr2h,c
  5228  000B10  0E00               	movlw	0
  5229  000B12  6EDF               	movwf	indf2,c
  5230  000B14  4A20               	infsnz	process_data_parameterize@inx,f,c
  5231  000B16  2A21               	incf	process_data_parameterize@inx+1,f,c
  5232  000B18  BE21               	btfsc	process_data_parameterize@inx+1,7,c
  5233  000B1A  D7EA               	goto	l325
  5234  000B1C  5021               	movf	process_data_parameterize@inx+1,w,c
  5235  000B1E  E168               	bnz	l2921
  5236  000B20  D7E1               	goto	L2
  5237  000B22                     
  5238                           ;SlaveComm_PIC18.c: 306: parameter_position = 0;
  5239  000B22  0E00               	movlw	0
  5240  000B24  6E23               	movwf	process_data_parameterize@parameter_position,c
  5241                           
  5242                           ;SlaveComm_PIC18.c: 307: parameter_index++;
  5243  000B26  2A22               	incf	process_data_parameterize@parameter_index,f,c
  5244                           
  5245                           ;SlaveComm_PIC18.c: 309: if (parameter_index >= 5)
  5246  000B28  0E04               	movlw	4
  5247  000B2A  6422               	cpfsgt	process_data_parameterize@parameter_index,c
  5248  000B2C  D05A               	goto	l331
  5249                           
  5250                           ;SlaveComm_PIC18.c: 310: {
  5251                           ;SlaveComm_PIC18.c: 313: parameter_index = (5 - 1);
  5252  000B2E  0E04               	movlw	4
  5253  000B30  6E22               	movwf	process_data_parameterize@parameter_index,c
  5254                           
  5255                           ;SlaveComm_PIC18.c: 314: }
  5256                           ;SlaveComm_PIC18.c: 316: break;
  5257  000B32  D057               	goto	l331
  5258  000B34                     
  5259                           ;SlaveComm_PIC18.c: 319: parameters[parameter_index][parameter_position] = buffer_to_par
      +                          ameterize->data_buffer[buffer_to_parameterize->read_position];
  5260  000B34  EE20 F029          	lfsr	2,41
  5261  000B38  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5262  000B3A  26D9               	addwf	fsr2l,f,c
  5263  000B3C  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5264  000B3E  22DA               	addwfc	fsr2h,f,c
  5265  000B40  50DF               	movf	indf2,w,c
  5266  000B42  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5267  000B44  501D               	movf	??_process_data_parameterize,w,c
  5268  000B46  0D01               	mullw	1
  5269  000B48  50F3               	movf	prodl,w,c
  5270  000B4A  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5271  000B4C  6ED9               	movwf	fsr2l,c
  5272  000B4E  50F4               	movf	prodh,w,c
  5273  000B50  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5274  000B52  6EDA               	movwf	fsr2h,c
  5275  000B54  5022               	movf	process_data_parameterize@parameter_index,w,c
  5276  000B56  0D0A               	mullw	10
  5277  000B58  C019  F01E         	movff	process_data_parameterize@parameters,??_process_data_parameterize+1
  5278  000B5C  C01A  F01F         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+2
  5279  000B60  50F3               	movf	prodl,w,c
  5280  000B62  261E               	addwf	??_process_data_parameterize+1,f,c
  5281  000B64  50F4               	movf	prodh,w,c
  5282  000B66  221F               	addwfc	??_process_data_parameterize+2,f,c
  5283  000B68  5023               	movf	process_data_parameterize@parameter_position,w,c
  5284  000B6A  0D01               	mullw	1
  5285  000B6C  50F3               	movf	prodl,w,c
  5286  000B6E  241E               	addwf	??_process_data_parameterize+1,w,c
  5287  000B70  6EE1               	movwf	fsr1l,c
  5288  000B72  50F4               	movf	prodh,w,c
  5289  000B74  201F               	addwfc	??_process_data_parameterize+2,w,c
  5290  000B76  6EE2               	movwf	fsr1h,c
  5291  000B78  CFDF FFE7          	movff	indf2,indf1
  5292                           
  5293                           ;SlaveComm_PIC18.c: 320: parameter_position++;
  5294  000B7C  2A23               	incf	process_data_parameterize@parameter_position,f,c
  5295                           
  5296                           ;SlaveComm_PIC18.c: 321: if (parameter_position >= 10)
  5297  000B7E  0E09               	movlw	9
  5298  000B80  6423               	cpfsgt	process_data_parameterize@parameter_position,c
  5299  000B82  D002               	goto	l335
  5300                           
  5301                           ;SlaveComm_PIC18.c: 322: {
  5302                           ;SlaveComm_PIC18.c: 325: parameter_position = (10 - 1);
  5303  000B84  0E09               	movlw	9
  5304  000B86  6E23               	movwf	process_data_parameterize@parameter_position,c
  5305  000B88                     l335:
  5306                           
  5307                           ;SlaveComm_PIC18.c: 326: }
  5308                           ;SlaveComm_PIC18.c: 329: parameters[parameter_index][parameter_position] = '\0';
  5309  000B88  5022               	movf	process_data_parameterize@parameter_index,w,c
  5310  000B8A  0D0A               	mullw	10
  5311  000B8C  C019  F01D         	movff	process_data_parameterize@parameters,??_process_data_parameterize
  5312  000B90  C01A  F01E         	movff	process_data_parameterize@parameters+1,??_process_data_parameterize+1
  5313  000B94  50F3               	movf	prodl,w,c
  5314  000B96  261D               	addwf	??_process_data_parameterize,f,c
  5315  000B98  50F4               	movf	prodh,w,c
  5316  000B9A  221E               	addwfc	??_process_data_parameterize+1,f,c
  5317  000B9C  5023               	movf	process_data_parameterize@parameter_position,w,c
  5318  000B9E  0D01               	mullw	1
  5319  000BA0  50F3               	movf	prodl,w,c
  5320  000BA2  241D               	addwf	??_process_data_parameterize,w,c
  5321  000BA4  6ED9               	movwf	fsr2l,c
  5322  000BA6  50F4               	movf	prodh,w,c
  5323  000BA8  201E               	addwfc	??_process_data_parameterize+1,w,c
  5324  000BAA  6EDA               	movwf	fsr2h,c
  5325  000BAC  0E00               	movlw	0
  5326  000BAE  6EDF               	movwf	indf2,c
  5327                           
  5328                           ;SlaveComm_PIC18.c: 331: }
  5329                           
  5330                           ;SlaveComm_PIC18.c: 330: break;
  5331  000BB0  D018               	goto	l331
  5332  000BB2  EE20 F029          	lfsr	2,41
  5333  000BB6  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5334  000BB8  26D9               	addwf	fsr2l,f,c
  5335  000BBA  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5336  000BBC  22DA               	addwfc	fsr2h,f,c
  5337  000BBE  50DF               	movf	indf2,w,c
  5338  000BC0  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5339  000BC2  501D               	movf	??_process_data_parameterize,w,c
  5340  000BC4  0D01               	mullw	1
  5341  000BC6  50F3               	movf	prodl,w,c
  5342  000BC8  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5343  000BCA  6ED9               	movwf	fsr2l,c
  5344  000BCC  50F4               	movf	prodh,w,c
  5345  000BCE  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5346  000BD0  6EDA               	movwf	fsr2h,c
  5347  000BD2  50DF               	movf	indf2,w,c
  5348                           
  5349                           ; Switch size 1, requested type "space"
  5350                           ; Number of cases is 2, Range of values is 33 to 59
  5351                           ; switch strategies available:
  5352                           ; Name         Instructions Cycles
  5353                           ; simple_byte            7     4 (average)
  5354                           ;	Chosen strategy is simple_byte
  5355  000BD4  0A21               	xorlw	33	; case 33
  5356  000BD6  B4D8               	btfsc	status,2,c
  5357  000BD8  D004               	goto	l331
  5358  000BDA  0A1A               	xorlw	26	; case 59
  5359  000BDC  B4D8               	btfsc	status,2,c
  5360  000BDE  D7A1               	goto	l332
  5361  000BE0  D7A9               	goto	l334
  5362  000BE2                     l331:
  5363                           
  5364                           ;SlaveComm_PIC18.c: 333: buffer_to_parameterize->read_position++;
  5365  000BE2  EE20 F029          	lfsr	2,41
  5366  000BE6  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5367  000BE8  26D9               	addwf	fsr2l,f,c
  5368  000BEA  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5369  000BEC  22DA               	addwfc	fsr2h,f,c
  5370  000BEE  2ADF               	incf	indf2,f,c
  5371  000BF0                     l327:
  5372  000BF0                     l2921:
  5373  000BF0  EE20 F029          	lfsr	2,41
  5374  000BF4  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5375  000BF6  26D9               	addwf	fsr2l,f,c
  5376  000BF8  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5377  000BFA  22DA               	addwfc	fsr2h,f,c
  5378  000BFC  50DF               	movf	indf2,w,c
  5379  000BFE  6E1D               	movwf	??_process_data_parameterize& (0+255),c
  5380  000C00  501D               	movf	??_process_data_parameterize,w,c
  5381  000C02  0D01               	mullw	1
  5382  000C04  50F3               	movf	prodl,w,c
  5383  000C06  241B               	addwf	process_data_parameterize@buffer_to_parameterize,w,c
  5384  000C08  6ED9               	movwf	fsr2l,c
  5385  000C0A  50F4               	movf	prodh,w,c
  5386  000C0C  201C               	addwfc	process_data_parameterize@buffer_to_parameterize+1,w,c
  5387  000C0E  6EDA               	movwf	fsr2h,c
  5388  000C10  0E2A               	movlw	42
  5389  000C12  18DE               	xorwf	postinc2,w,c
  5390  000C14  B4D8               	btfsc	status,2,c
  5391  000C16  0012               	return	
  5392  000C18  EE20 F029          	lfsr	2,41
  5393  000C1C  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5394  000C1E  26D9               	addwf	fsr2l,f,c
  5395  000C20  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5396  000C22  22DA               	addwfc	fsr2h,f,c
  5397  000C24  0E28               	movlw	40
  5398  000C26  60DF               	cpfslt	indf2,c
  5399  000C28  0012               	return	
  5400  000C2A  EE20 F028          	lfsr	2,40
  5401  000C2E  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5402  000C30  26D9               	addwf	fsr2l,f,c
  5403  000C32  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5404  000C34  22DA               	addwfc	fsr2h,f,c
  5405  000C36  EE10 F029          	lfsr	1,41
  5406  000C3A  501B               	movf	process_data_parameterize@buffer_to_parameterize,w,c
  5407  000C3C  26E1               	addwf	fsr1l,f,c
  5408  000C3E  501C               	movf	process_data_parameterize@buffer_to_parameterize+1,w,c
  5409  000C40  22E2               	addwfc	fsr1h,f,c
  5410  000C42  50DE               	movf	postinc2,w,c
  5411  000C44  18E6               	xorwf	postinc1,w,c
  5412  000C46  B4D8               	btfsc	status,2,c
  5413  000C48  0012               	return	
  5414  000C4A  D7B3               	goto	l329
  5415  000C4C                     __end_of_process_data_parameterize:
  5416                           	opt stack 0
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           indf1	equ	0xFE7
  5427                           postinc1	equ	0xFE6
  5428                           postdec1	equ	0xFE5
  5429                           fsr1h	equ	0xFE2
  5430                           fsr1l	equ	0xFE1
  5431                           indf2	equ	0xFDF
  5432                           postinc2	equ	0xFDE
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function ___wmul *****************
  5438 ;; Defined at:
  5439 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  multiplier      2   18[COMRAM] unsigned int 
  5442 ;;  multiplicand    2   20[COMRAM] unsigned int 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  product         2   22[COMRAM] unsigned int 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  2   18[COMRAM] unsigned int 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, prodl, prodh
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5454 ;;      Params:         4       0       0       0       0       0       0
  5455 ;;      Locals:         2       0       0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0
  5457 ;;      Totals:         6       0       0       0       0       0       0
  5458 ;;Total ram usage:        6 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_process_data_parameterize
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text32
  5469  0017D8                     __ptext32:
  5470                           	opt stack 0
  5471  0017D8                     ___wmul:
  5472                           	opt stack 26
  5473                           
  5474                           ;incstack = 0
  5475  0017D8  5013               	movf	___wmul@multiplier,w,c
  5476  0017DA  0215               	mulwf	___wmul@multiplicand,c
  5477  0017DC  CFF3 F017          	movff	prodl,___wmul@product
  5478  0017E0  CFF4 F018          	movff	prodh,___wmul@product+1
  5479  0017E4  5013               	movf	___wmul@multiplier,w,c
  5480  0017E6  0216               	mulwf	___wmul@multiplicand+1,c
  5481  0017E8  50F3               	movf	prodl,w,c
  5482  0017EA  2618               	addwf	___wmul@product+1,f,c
  5483  0017EC  5014               	movf	___wmul@multiplier+1,w,c
  5484  0017EE  0215               	mulwf	___wmul@multiplicand,c
  5485  0017F0  50F3               	movf	prodl,w,c
  5486  0017F2  2618               	addwf	___wmul@product+1,f,c
  5487  0017F4  C017  F013         	movff	___wmul@product,?___wmul
  5488  0017F8  C018  F014         	movff	___wmul@product+1,?___wmul+1
  5489  0017FC  0012               	return	
  5490  0017FE                     __end_of___wmul:
  5491                           	opt stack 0
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           intcon	equ	0xFF2
  5499                           postinc0	equ	0xFEE
  5500                           wreg	equ	0xFE8
  5501                           indf1	equ	0xFE7
  5502                           postinc1	equ	0xFE6
  5503                           postdec1	equ	0xFE5
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           indf2	equ	0xFDF
  5507                           postinc2	equ	0xFDE
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _SPISlaveInit *****************
  5513 ;; Defined at:
  5514 ;;		line 711 in file "SlaveComm_PIC18.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5528 ;;      Params:         0       0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    1
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_communications
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text33
  5543  001672                     __ptext33:
  5544                           	opt stack 0
  5545  001672                     _SPISlaveInit:
  5546                           	opt stack 28
  5547                           
  5548                           ;SlaveComm_PIC18.c: 714: TRISAbits.TRISA0 = 0;
  5549                           
  5550                           ;incstack = 0
  5551  001672  9092               	bcf	3986,0,c	;volatile
  5552                           
  5553                           ;SlaveComm_PIC18.c: 715: TRISAbits.TRISA1 = 1;
  5554  001674  8292               	bsf	3986,1,c	;volatile
  5555                           
  5556                           ;SlaveComm_PIC18.c: 717: TRISCbits.TRISC3 = 0;
  5557  001676  9694               	bcf	3988,3,c	;volatile
  5558                           
  5559                           ;SlaveComm_PIC18.c: 718: TRISCbits.TRISC5 = 0;
  5560  001678  9A94               	bcf	3988,5,c	;volatile
  5561                           
  5562                           ;SlaveComm_PIC18.c: 719: TRISCbits.TRISC6 = 0;
  5563  00167A  9C94               	bcf	3988,6,c	;volatile
  5564                           
  5565                           ;SlaveComm_PIC18.c: 720: TRISCbits.TRISC7 = 0;
  5566  00167C  9E94               	bcf	3988,7,c	;volatile
  5567                           
  5568                           ;SlaveComm_PIC18.c: 721: ANSELAbits.ANSA1 = 0b0;
  5569  00167E  010F               	movlb	15	; () banked
  5570  001680  9338               	bcf	56,1,b	;volatile
  5571                           
  5572                           ;SlaveComm_PIC18.c: 723: LATCbits.LATC6 = 1;
  5573  001682  8C8B               	bsf	3979,6,c	;volatile
  5574                           
  5575                           ;SlaveComm_PIC18.c: 724: LATCbits.LATC3 = 1;
  5576  001684  868B               	bsf	3979,3,c	;volatile
  5577                           
  5578                           ;SlaveComm_PIC18.c: 725: LATCbits.LATC5 = 1;
  5579  001686  8A8B               	bsf	3979,5,c	;volatile
  5580                           
  5581                           ;SlaveComm_PIC18.c: 726: LATCbits.LATC7 = 1;
  5582  001688  8E8B               	bsf	3979,7,c	;volatile
  5583                           
  5584                           ;SlaveComm_PIC18.c: 729: SSP2CON1bits.SSPEN = 0;
  5585  00168A  9A6C               	bcf	3948,5,c	;volatile
  5586                           
  5587                           ;SlaveComm_PIC18.c: 731: ANSELBbits.ANSB0 = 0b0;
  5588  00168C  9139               	bcf	57,0,b	;volatile
  5589                           
  5590                           ;SlaveComm_PIC18.c: 732: ANSELBbits.ANSB1 = 0b0;
  5591  00168E  9339               	bcf	57,1,b	;volatile
  5592                           
  5593                           ;SlaveComm_PIC18.c: 733: ANSELBbits.ANSB2 = 0b0;
  5594  001690  9539               	bcf	57,2,b	;volatile
  5595                           
  5596                           ;SlaveComm_PIC18.c: 734: ANSELBbits.ANSB3 = 0b0;
  5597  001692  9739               	bcf	57,3,b	;volatile
  5598                           
  5599                           ;SlaveComm_PIC18.c: 736: TRISBbits.RB0 = 0b1;
  5600  001694  8093               	bsf	3987,0,c	;volatile
  5601                           
  5602                           ;SlaveComm_PIC18.c: 737: TRISBbits.RB1 = 0b1;
  5603  001696  8293               	bsf	3987,1,c	;volatile
  5604                           
  5605                           ;SlaveComm_PIC18.c: 738: TRISBbits.RB2 = 0b1;
  5606  001698  8493               	bsf	3987,2,c	;volatile
  5607                           
  5608                           ;SlaveComm_PIC18.c: 739: TRISBbits.RB3 = 0b0;
  5609  00169A  9693               	bcf	3987,3,c	;volatile
  5610                           
  5611                           ;SlaveComm_PIC18.c: 741: SSP2STATbits.SMP = 0;
  5612  00169C  9E6D               	bcf	3949,7,c	;volatile
  5613                           
  5614                           ;SlaveComm_PIC18.c: 742: SSP2STATbits.CKE = 1;
  5615  00169E  8C6D               	bsf	3949,6,c	;volatile
  5616                           
  5617                           ;SlaveComm_PIC18.c: 744: SSP2CON1bits.WCOL = 0;
  5618  0016A0  9E6C               	bcf	3948,7,c	;volatile
  5619                           
  5620                           ;SlaveComm_PIC18.c: 745: SSP2CON1bits.SSPOV = 0;
  5621  0016A2  9C6C               	bcf	3948,6,c	;volatile
  5622                           
  5623                           ;SlaveComm_PIC18.c: 746: SSP2CON1bits.SSPEN = 0;
  5624  0016A4  9A6C               	bcf	3948,5,c	;volatile
  5625                           
  5626                           ;SlaveComm_PIC18.c: 747: SSP2CON1bits.CKP = 1;
  5627  0016A6  886C               	bsf	3948,4,c	;volatile
  5628                           
  5629                           ; BSR set to: 15
  5630                           ;SlaveComm_PIC18.c: 748: SSP2CON1bits.SSPM = 0b0100;
  5631  0016A8  506C               	movf	3948,w,c	;volatile
  5632  0016AA  0BF0               	andlw	-16
  5633  0016AC  0904               	iorlw	4
  5634  0016AE  6E6C               	movwf	3948,c	;volatile
  5635                           
  5636                           ;SlaveComm_PIC18.c: 751: SSP2CON3 = 0x00;
  5637  0016B0  0E00               	movlw	0
  5638  0016B2  6E69               	movwf	3945,c	;volatile
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;SlaveComm_PIC18.c: 752: SSP2CON3bits.BOEN = 0b0;
  5642  0016B4  9869               	bcf	3945,4,c	;volatile
  5643                           
  5644                           ; BSR set to: 15
  5645                           ;SlaveComm_PIC18.c: 754: SSP2CON1bits.SSPEN = 1;
  5646  0016B6  8A6C               	bsf	3948,5,c	;volatile
  5647  0016B8  0012               	return	
  5648  0016BA                     __end_of_SPISlaveInit:
  5649                           	opt stack 0
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           prodh	equ	0xFF4
  5655                           prodl	equ	0xFF3
  5656                           intcon	equ	0xFF2
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           indf1	equ	0xFE7
  5660                           postinc1	equ	0xFE6
  5661                           postdec1	equ	0xFE5
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           fsr2h	equ	0xFDA
  5667                           fsr2l	equ	0xFD9
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function _Timer0_ISR *****************
  5671 ;; Defined at:
  5672 ;;		line 448 in file "Current_Sense_Main.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         0       0       0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0
  5688 ;;      Temps:         18       0       0       0       0       0       0
  5689 ;;      Totals:        18       0       0       0       0       0       0
  5690 ;;Total ram usage:       18 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		Interrupt level 2
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	intcode
  5700  000008                     __pintcode:
  5701                           	opt stack 0
  5702  000008                     _Timer0_ISR:
  5703                           	opt stack 23
  5704                           
  5705                           ; BSR set to: 15
  5706                           ;incstack = 0
  5707  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5708  00000A  CFFA F001          	movff	pclath,??_Timer0_ISR
  5709  00000E  CFFB F002          	movff	pclatu,??_Timer0_ISR+1
  5710  000012  CFE9 F003          	movff	fsr0l,??_Timer0_ISR+2
  5711  000016  CFEA F004          	movff	fsr0h,??_Timer0_ISR+3
  5712  00001A  CFE1 F005          	movff	fsr1l,??_Timer0_ISR+4
  5713  00001E  CFE2 F006          	movff	fsr1h,??_Timer0_ISR+5
  5714  000022  CFD9 F007          	movff	fsr2l,??_Timer0_ISR+6
  5715  000026  CFDA F008          	movff	fsr2h,??_Timer0_ISR+7
  5716  00002A  CFF3 F009          	movff	prodl,??_Timer0_ISR+8
  5717  00002E  CFF4 F00A          	movff	prodh,??_Timer0_ISR+9
  5718  000032  CFF6 F00B          	movff	tblptrl,??_Timer0_ISR+10
  5719  000036  CFF7 F00C          	movff	tblptrh,??_Timer0_ISR+11
  5720  00003A  CFF8 F00D          	movff	tblptru,??_Timer0_ISR+12
  5721  00003E  CFF5 F00E          	movff	tablat,??_Timer0_ISR+13
  5722  000042  C04D  F00F         	movff	btemp,??_Timer0_ISR+14
  5723  000046  C04E  F010         	movff	btemp+1,??_Timer0_ISR+15
  5724  00004A  C04F  F011         	movff	btemp+2,??_Timer0_ISR+16
  5725  00004E  C050  F012         	movff	btemp+3,??_Timer0_ISR+17
  5726                           
  5727                           ;Current_Sense_Main.c: 451: INTCONbits.TMR0IF = 0;
  5728  000052  94F2               	bcf	intcon,2,c	;volatile
  5729                           
  5730                           ;Current_Sense_Main.c: 453: TMR0H = ((unsigned char)(((( 65536 - 1000 ))>>8)&0xFF));
  5731  000054  0EFC               	movlw	252
  5732  000056  6ED7               	movwf	4055,c	;volatile
  5733                           
  5734                           ;Current_Sense_Main.c: 454: TMR0L = ((unsigned char)((( 65536 - 1000 ))&0xFF));
  5735  000058  0E18               	movlw	24
  5736  00005A  6ED6               	movwf	4054,c	;volatile
  5737                           
  5738                           ;Current_Sense_Main.c: 456: timerCountHF++;
  5739  00005C  0E01               	movlw	1
  5740  00005E  2646               	addwf	_timerCountHF,f,c	;volatile
  5741  000060  0E00               	movlw	0
  5742  000062  2247               	addwfc	_timerCountHF+1,f,c	;volatile
  5743  000064  2248               	addwfc	_timerCountHF+2,f,c	;volatile
  5744  000066  2249               	addwfc	_timerCountHF+3,f,c	;volatile
  5745                           
  5746                           ;Current_Sense_Main.c: 457: timerCountLF++;
  5747  000068  0E01               	movlw	1
  5748  00006A  2636               	addwf	_timerCountLF,f,c	;volatile
  5749  00006C  0E00               	movlw	0
  5750  00006E  2237               	addwfc	_timerCountLF+1,f,c	;volatile
  5751  000070  2238               	addwfc	_timerCountLF+2,f,c	;volatile
  5752  000072  2239               	addwfc	_timerCountLF+3,f,c	;volatile
  5753                           
  5754                           ;Current_Sense_Main.c: 459: return;
  5755  000074  C012  F050         	movff	??_Timer0_ISR+17,btemp+3
  5756  000078  C011  F04F         	movff	??_Timer0_ISR+16,btemp+2
  5757  00007C  C010  F04E         	movff	??_Timer0_ISR+15,btemp+1
  5758  000080  C00F  F04D         	movff	??_Timer0_ISR+14,btemp
  5759  000084  C00E  FFF5         	movff	??_Timer0_ISR+13,tablat
  5760  000088  C00D  FFF8         	movff	??_Timer0_ISR+12,tblptru
  5761  00008C  C00C  FFF7         	movff	??_Timer0_ISR+11,tblptrh
  5762  000090  C00B  FFF6         	movff	??_Timer0_ISR+10,tblptrl
  5763  000094  C00A  FFF4         	movff	??_Timer0_ISR+9,prodh
  5764  000098  C009  FFF3         	movff	??_Timer0_ISR+8,prodl
  5765  00009C  C008  FFDA         	movff	??_Timer0_ISR+7,fsr2h
  5766  0000A0  C007  FFD9         	movff	??_Timer0_ISR+6,fsr2l
  5767  0000A4  C006  FFE2         	movff	??_Timer0_ISR+5,fsr1h
  5768  0000A8  C005  FFE1         	movff	??_Timer0_ISR+4,fsr1l
  5769  0000AC  C004  FFEA         	movff	??_Timer0_ISR+3,fsr0h
  5770  0000B0  C003  FFE9         	movff	??_Timer0_ISR+2,fsr0l
  5771  0000B4  C002  FFFB         	movff	??_Timer0_ISR+1,pclatu
  5772  0000B8  C001  FFFA         	movff	??_Timer0_ISR,pclath
  5773  0000BC  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5774  0000BE  0011               	retfie		f
  5775  0000C0                     __end_of_Timer0_ISR:
  5776                           	opt stack 0
  5777                           pclatu	equ	0xFFB
  5778                           pclath	equ	0xFFA
  5779                           tblptru	equ	0xFF8
  5780                           tblptrh	equ	0xFF7
  5781                           tblptrl	equ	0xFF6
  5782                           tablat	equ	0xFF5
  5783                           prodh	equ	0xFF4
  5784                           prodl	equ	0xFF3
  5785                           intcon	equ	0xFF2
  5786                           postinc0	equ	0xFEE
  5787                           fsr0h	equ	0xFEA
  5788                           fsr0l	equ	0xFE9
  5789                           wreg	equ	0xFE8
  5790                           indf1	equ	0xFE7
  5791                           postinc1	equ	0xFE6
  5792                           postdec1	equ	0xFE5
  5793                           fsr1h	equ	0xFE2
  5794                           fsr1l	equ	0xFE1
  5795                           indf2	equ	0xFDF
  5796                           postinc2	equ	0xFDE
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           pclatu	equ	0xFFB
  5801                           pclath	equ	0xFFA
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           fsr0h	equ	0xFEA
  5811                           fsr0l	equ	0xFE9
  5812                           wreg	equ	0xFE8
  5813                           indf1	equ	0xFE7
  5814                           postinc1	equ	0xFE6
  5815                           postdec1	equ	0xFE5
  5816                           fsr1h	equ	0xFE2
  5817                           fsr1l	equ	0xFE1
  5818                           indf2	equ	0xFDF
  5819                           postinc2	equ	0xFDE
  5820                           fsr2h	equ	0xFDA
  5821                           fsr2l	equ	0xFD9
  5822                           status	equ	0xFD8
  5823                           
  5824                           	psect	rparam
  5825  0000                     pclatu	equ	0xFFB
  5826                           pclath	equ	0xFFA
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           postinc0	equ	0xFEE
  5835                           fsr0h	equ	0xFEA
  5836                           fsr0l	equ	0xFE9
  5837                           wreg	equ	0xFE8
  5838                           indf1	equ	0xFE7
  5839                           postinc1	equ	0xFE6
  5840                           postdec1	equ	0xFE5
  5841                           fsr1h	equ	0xFE2
  5842                           fsr1l	equ	0xFE1
  5843                           indf2	equ	0xFDF
  5844                           postinc2	equ	0xFDE
  5845                           fsr2h	equ	0xFDA
  5846                           fsr2l	equ	0xFD9
  5847                           status	equ	0xFD8
  5848                           
  5849                           	psect	temp
  5850  00004D                     btemp:
  5851                           	opt stack 0
  5852  00004D                     	ds	1
  5853  0000                     int$flags	set	btemp
  5854  0000                     wtemp6	set	btemp+1
  5855                           pclatu	equ	0xFFB
  5856                           pclath	equ	0xFFA
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           postinc0	equ	0xFEE
  5865                           fsr0h	equ	0xFEA
  5866                           fsr0l	equ	0xFE9
  5867                           wreg	equ	0xFE8
  5868                           indf1	equ	0xFE7
  5869                           postinc1	equ	0xFE6
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           indf2	equ	0xFDF
  5874                           postinc2	equ	0xFDE
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        7
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      76
    BANK0           160     17     117
    BANK1           256     51      51
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    atol@s	PTR const unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    com_command_setVersion@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setEnergyUsed@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    com_command_setPower@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 12
		 -> com_command_setEnergyUsed@temp(BANK0[12]), com_command_setPower@temp(BANK0[12]), 

    send_end_of_transmission@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    SPI_receive_data@data	PTR unsigned char  size(2) Largest target is 1
		 -> receive_data@data(COMRAM[1]), 

    strcmp2@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strcmp2@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    strmatch@b	PTR unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[10]), STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[7]), 
		 -> STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[5]), STR_12(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[7]), STR_3(CODE[12]), STR_2(CODE[4]), STR_1(CODE[4]), 

    strmatch@a	PTR unsigned char  size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    send_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_string@data_string	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_39(CODE[10]), STR_38(CODE[4]), STR_37(CODE[12]), 
		 -> STR_36(CODE[5]), STR_35(CODE[4]), STR_34(CODE[5]), STR_33(CODE[4]), 
		 -> STR_32(CODE[4]), STR_31(CODE[6]), STR_30(CODE[4]), STR_29(CODE[7]), 
		 -> STR_28(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), STR_27(CODE[6]), STR_26(CODE[4]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_15(CODE[3]), STR_14(CODE[5]), STR_13(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[4]), 

    command_builder_add_string@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder_add_char@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder3@data3	PTR unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[4]), STR_35(CODE[4]), STR_32(CODE[4]), com_command_setEnergyUsed@temp(BANK0[12]), 
		 -> com_command_setPower@temp(BANK0[12]), STR_15(CODE[3]), STR_11(CODE[4]), 

    command_builder3@data2	PTR unsigned char  size(2) Largest target is 10
		 -> STR_39(CODE[10]), STR_34(CODE[5]), STR_31(CODE[6]), STR_29(CODE[7]), 
		 -> STR_27(CODE[6]), STR_14(CODE[5]), STR_10(CODE[5]), 

    command_builder3@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_38(CODE[4]), STR_33(CODE[4]), STR_30(CODE[4]), STR_28(CODE[4]), 
		 -> STR_26(CODE[4]), STR_13(CODE[4]), STR_9(CODE[4]), 

    command_builder3@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    command_builder1@data1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), 

    command_builder1@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data_parameters@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data_parameterize@buffer_to_parameterize	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    process_data_parameterize@parameters	PTR unsigned char [10] size(2) Largest target is 50
		 -> process_data@parameters(BANK1[50]), 

    process_data@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 

    process_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    receive_data@receive_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@receive_buffer(BANK0[42]), 

    resetCommunications@send_buffer	PTR struct buffer size(2) Largest target is 42
		 -> communications@send_buffer(BANK0[42]), 


Critical Paths under _main in COMRAM

    _main->_communications
    _powerPulseCheck->___lldiv
    _send_data->_SPI_send_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _com_command_setVersion->_command_builder3
    _com_command_setPower->_ultoa
    _receive_data->_SPI_receive_data
    _process_data->_process_data_parameters
    _process_data_parameters->_com_command_setEnergyUsed
    _strmatch->_strcmp2
    _send_end_of_transmission->_command_builder1
    _command_builder1->_command_builder_add_string
    _com_command_setEnergyUsed->_ultoa
    _ultoa->___lldiv
    _command_builder3->_command_builder_add_string
    _command_builder_add_string->_command_builder_add_char
    _atol->___lmul
    _process_data_parameterize->___wmul

Critical Paths under _Timer0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _communications->_process_data
    _resetCommunications->_com_command_setEnergyUsed
    _resetCommunications->_com_command_setPower
    _process_data_parameters->_com_command_setEnergyUsed

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _communications->_process_data

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Timer0_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   98852
                                             16 BANK0      1     1      0
                     _communications
                          _delayMS10
                               _init
                          _initTimer
                    _powerPulseCheck
                         _toggleLEDs
 ---------------------------------------------------------------------------------
 (1) _toggleLEDs                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _powerPulseCheck                                      0     0      0    1597
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _initTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                            _initOSC
 ---------------------------------------------------------------------------------
 (2) _initOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS10                                            5     3      2     158
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _communications                                       2     2      0   97094
                                             51 COMRAM     2     2      0
                       _SPISlaveInit
                       _process_data
                       _receive_data
                _resetCommunications
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                            5     3      2     415
                                             20 COMRAM     5     3      2
                      _SPI_send_data
 ---------------------------------------------------------------------------------
 (3) _SPI_send_data                                        2     2      0      71
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _resetCommunications                                  4     2      2   46583
                                             46 COMRAM     4     2      2
          _com_command_setEnergyUsed
               _com_command_setPower
             _com_command_setVersion
 ---------------------------------------------------------------------------------
 (3) _com_command_setVersion                               2     0      2   13626
                                             38 COMRAM     2     0      2
                   _command_builder3
 ---------------------------------------------------------------------------------
 (3) _com_command_setPower                                14    12      2   16266
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (2) _receive_data                                         4     2      2     629
                                             21 COMRAM     4     2      2
                   _SPI_receive_data
 ---------------------------------------------------------------------------------
 (3) _SPI_receive_data                                     3     1      2     161
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _process_data                                        55    51      4   49433
                                             12 BANK0      4     0      4
                                              0 BANK1     51    51      0
          _process_data_parameterize
            _process_data_parameters
 ---------------------------------------------------------------------------------
 (3) _process_data_parameters                              5     1      4   47746
                                             46 COMRAM     5     1      4
                               _atol
          _com_command_setEnergyUsed
                   _command_builder3
           _send_end_of_transmission
                           _strmatch
 ---------------------------------------------------------------------------------
 (4) _strmatch                                             7     3      4    4017
                                             29 COMRAM     7     3      4
                            _strcmp2
 ---------------------------------------------------------------------------------
 (5) _strcmp2                                             11     7      4    1007
                                             18 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _send_end_of_transmission                             2     0      2   11550
                                             34 COMRAM     2     0      2
                   _command_builder1
 ---------------------------------------------------------------------------------
 (5) _command_builder1                                     4     0      4   10979
                                             30 COMRAM     4     0      4
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (3) _com_command_setEnergyUsed                           14    12      2   16356
                                             44 COMRAM     2     0      2
                                              0 BANK0     12    12      0
                   _command_builder3
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     5      8    2560
                                             31 COMRAM    13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     412
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _command_builder3                                     8     0      8   13505
                                             30 COMRAM     8     0      8
           _command_builder_add_char
         _command_builder_add_string
 ---------------------------------------------------------------------------------
 (5) _command_builder_add_string                           8     4      4    6287
                                             22 COMRAM     8     4      4
           _command_builder_add_char
 ---------------------------------------------------------------------------------
 (6) _command_builder_add_char                             4     1      3    4326
                                             18 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1295
                                             30 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     636
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _process_data_parameterize                           11     7      4    1301
                                             24 COMRAM    11     7      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPISlaveInit                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                          18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _communications
     _SPISlaveInit
     _process_data
       _process_data_parameterize
         ___wmul
       _process_data_parameters
         _atol
           ___lmul
           _isdigit
         _com_command_setEnergyUsed
           _command_builder3
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
           _ultoa
             ___lldiv
             ___llmod
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _send_end_of_transmission
           _command_builder1
             _command_builder_add_char
             _command_builder_add_string
               _command_builder_add_char
         _strmatch
           _strcmp2
     _receive_data
       _SPI_receive_data
     _resetCommunications
       _com_command_setEnergyUsed
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setPower
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
         _ultoa
           ___lldiv
           ___llmod
       _com_command_setVersion
         _command_builder3
           _command_builder_add_char
           _command_builder_add_string
             _command_builder_add_char
     _send_data
       _SPI_send_data
   _delayMS10
   _init
     _initOSC
   _initTimer
   _powerPulseCheck
     ___lldiv
     ___lmul
   _toggleLEDs

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     33      33       6       19.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      75       4       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4C       1       80.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4       9        0.0%
DATA                 0      0      F4      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 13 15:28:01 2019

                                       _SPISlaveInit 1672                                  ___wmul@multiplicand 0015  
                                       __CFG_CP0$OFF 000000                                         __CFG_CP1$OFF 000000  
                                       __CFG_CP2$OFF 000000                                         __CFG_CP3$OFF 000000  
                                                l130 16D0                                                  l107 13CE  
                                                l132 16D8                                                  l108 13E6  
                                                l301 11CC                                                  l133 16F2  
                                                l302 119A                                                  l135 16EE  
                                                l312 0F6E                                                  l304 11A8  
                                                l160 097A                                                  l128 16D4  
                                                l305 11B6                                                  l306 11C2  
                                                l331 0BE2                                                  l315 0FB2  
                                                l163 0A10                                                  l332 0B22  
                                                l404 0CC8                                                  l420 17AA  
                                                l180 1702                                                  l164 0A22  
                                                l325 0AF0                                                  l405 0C5E  
                                                l421 17AE                                                  l317 100C  
                                                l165 0A3A                                                  l334 0B34  
                                                l414 0D36                                                  l406 0C92  
                                                l342 0684                                                  l318 101E  
                                                l166 0A9E                                                  l158 0976  
                                                l327 0BF0                                                  l335 0B88  
                                                l351 07E2                                                  l416 0D6E  
                                                l408 0CC4                                                  l360 0854  
                                                l344 0708                                                  l168 0A88  
                                                l176 0ACA                                                  l329 0BB2  
                                                l353 079E                                                  l425 1816  
                                                l169 0A6C                                                  l442 14DC  
                                                l362 0880                                                  l283 10E4  
                                                l179 1714                                                  l364 08AC  
                                                l293 1142                                                  l285 1116  
                                                l470 15E2                                                  l630 0F50  
                                                l366 08D8                                                  l358 0828  
                                                l471 15F6                                                  l295 1154  
                                                l287 112A                                                  l624 0EAE  
                                                l368 0902                                                  l289 10F4  
                                                l802 1834                                                  l394 121E  
                                                l627 0F0C                                                  l628 0EB8  
                                                l388 134C                                                  l389 130E  
                                                l397 127E                                                  l832 12E4  
                                                l833 12F2                                                  l842 1440  
                                                l843 144E                                                  l828 12B0  
                                                l829 12A4                                                  l838 1418  
                                                l839 140C                                                  l881 0D88  
                                                l883 0DE0                                                  l884 0E4A  
                                       __CFG_CPB$OFF 000000                                         __CFG_CPD$OFF 000000  
                                                wreg 000FE8                                         __CFG_LVP$OFF 000000  
                              ??_resetCommunications 0031                                                 l3241 0A6C  
                                               l3227 0A10                                                 l2921 0BF0  
                                               STR_1 064F                                                 STR_2 0657  
                                               STR_3 0601                      __size_of_com_command_setVersion 0026  
                                               STR_4 0617                                                 STR_5 0634  
                                               STR_6 062F                                                 STR_7 062A  
                                               STR_8 065B                                                 STR_9 0657  
                                               u2000 12B4                                                 u2030 141C  
                                               u2210 14D8                                                 u2220 1782  
                                               u2310 0AEE                                                 u2230 1784  
                                               u2090 0D00                                                 _IPR1 000F9F  
                                               _IPR2 000FA2                                                 _PIE1 000F9D  
                                               _IPR3 000FA5                                                 _PIE2 000FA0  
                                               _IPR4 000F7C                                                 _PIE3 000FA3  
                                               _IPR5 000F7F                                                 _PIE4 000F7A  
                                               _PIE5 000F7D                                                 u1960 1342  
                                               u1970 1378                                                 u2907 1708  
                                               u2917 1162                                                 u1967 1338  
                                               u1977 136E                                                 u2890 13E2  
                                               _PIR1 000F9E                                                 _PIR2 000FA1  
                                               _PIR3 000FA4                                                 _PIR4 000F7B  
                                               _PIR5 000F7E                                                 _atol 0E6E  
                                               _main 1380                                                 _init 1882  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf1 000FE7                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                               btemp 004D                                        __CFG_BORV$190 000000  
                             __size_of_SPI_send_data 0020                                                 prodh 000FF4  
                                               prodl 000FF3                                                 start 00C0  
                                      __CFG_IESO$OFF 000000                              communications@firstTime 0035  
                      __size_of_com_command_setPower 004A                                         ___param_bank 000000  
                                     _communications 10C0                                                ?_atol 001F  
                                              ?_main 0001                                                ?_init 0001  
                                              STR_10 062A                                                STR_11 0653  
                                              STR_12 0653                                                STR_20 061E  
                                              STR_13 0657                                                STR_21 063E  
                                              STR_14 062A                                                STR_22 060D  
                                              STR_23 064F                                                STR_15 065B  
                                              STR_40 064B                                                STR_32 0643  
                                              STR_16 0639                                                STR_17 062A  
                                              STR_26 0657                                                STR_18 0624  
                                              STR_19 0617                                                STR_27 0624  
                                              STR_35 0647                                                STR_28 0657  
                                              STR_29 0617                                                STR_38 0657  
                                              STR_39 060D                                      __end_of___lldiv 1304  
                                    __end_of___llmod 1460                                       __CFG_DEBUG$OFF 000000  
                                  ?_command_builder1 001F                                    ?_command_builder3 001F  
                                              _TMR0H 000FD7                                                _TMR0L 000FD6  
                                      __CFG_WRT0$OFF 000000                                        __CFG_WRT1$OFF 000000  
                                      __CFG_WRT2$OFF 000000                                  ___lmul@multiplicand 0017  
                                      __CFG_WRT3$OFF 000000                         ??_command_builder_add_string 001B  
                                 ??_command_builder1 0023                                   ??_command_builder3 0027  
                                     __CFG_EBTR0$OFF 000000                                       __CFG_FCMEN$OFF 000000  
                                     __CFG_EBTR1$OFF 000000                                       __CFG_EBTR2$OFF 000000  
                                     __CFG_EBTR3$OFF 000000                   process_data_parameters@send_buffer 0031  
                                      __CFG_WRTB$OFF 000000                                        __CFG_WRTC$OFF 000000  
                                      __CFG_WRTD$OFF 000000                                       __CFG_EBTRB$OFF 000000  
                                    __end_of_initOSC 186C                                     ?_powerPulseCheck 0001  
                                              _isLow 0045                                      __end_of_isdigit 183C  
                                 __CFG_MCLRE$EXTMCLR 000000                                                atol@a 0028  
                                              atol@c 002C                                                atol@s 001F  
                                              _ultoa 0D78                                                pclath 000FFA  
                                              tablat 000FF5                                                status 000FD8  
                                              wtemp6 004E                                      __end_of_strcmp2 0D78  
                                     __CFG_HFOFST$ON 000000                                       __CFG_PBADEN$ON 000000  
                        ??_process_data_parameterize 001D                 com_command_setEnergyUsed@send_buffer 002D  
                      command_builder_add_string@inx 001D                                      __initialization 1460  
                                       __end_of_atol 0F62                                         __end_of_main 13FA  
                                       __end_of_init 1888                               __end_of_communications 115A  
                             _com_command_setVersion 17B2                  __size_of_command_builder_add_string 007C  
                                   _SPI_receive_data 178A                         command_builder_add_char@data 0015  
                                             ??_atol 0023                                               ??_main 0036  
                                             ??_init 0013                                        _SPI_send_data 17FE  
                                      __activetblptr 000002                              _process_data_parameters 0660  
                                   receive_data@data 0019                                     ___llmod@dividend 0013  
                                             _ANSELA 000F38                                               _ANSELB 000F39  
                                             _ANSELC 000F3A                                               ?_ultoa 0020  
                                     __CFG_WDTEN$OFF 000000                                               _INTCON 000FF2  
                              SPI_send_data@sendGood 0014                                           _Timer0_ISR 0008  
                                     __CFG_XINST$OFF 000000                                               ___lmul 15D2  
                                             ___wmul 17D8                                      ?_communications 0001  
                                     __CFG_STVREN$ON 000000                                            ??___lldiv 001B  
                                          ??___llmod 001B                                               clear_0 14A4  
                                             clear_1 14B0                                       ?_SPI_send_data 0001  
                         ?_com_command_setEnergyUsed 002D                                            ??_initOSC 0013  
                          _process_data_parameterize 0ACC                                         __pdataCOMRAM 004A  
                                          ??_isdigit 0013                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                               ultoa@c 002C  
                           com_command_setPower@temp 00C0                                               ultoa@v 0028  
                                          ??_strcmp2 0017                                     __end_of_strmatch 178A  
                                      ?_receive_data 0016                                           __accesstop 0060  
                            __end_of__initialization 14B6                      powerPulseCheck@timerCountHFLast 00D1  
                    com_command_setPower@send_buffer 002D                                        ___rparam_used 000001  
                                  SPI_send_data@data 0013                                       __pcstackCOMRAM 0001  
                                       __pidataBANK0 1888                                   __size_of_delayMS10 0032  
                         receive_data@receive_buffer 0016                                        __end_of_ultoa 0E6E  
                          ??_process_data_parameters 0033                   powerPulseCheck@meterEnergyUsedPart 0060  
                       communications@receive_buffer 0096                command_builder_add_string@data_string 0019  
                 __end_of_command_builder_add_string 1380                           _command_builder_add_string 1304  
                                            ??_ultoa 0028                                           __pbssBANK0 0060  
                                     ??_receive_data 0018                                      __CFG_PLLCFG$OFF 000000  
                                       strcmp2@match 001A                                   __size_of_initTimer 0018  
                                        ?_Timer0_ISR 0001                                   __CFG_CCP2MX$PORTC1 000000  
                                            ?___lmul 0013                                              ?___wmul 0013  
                                 __CFG_CCP3MX$PORTB5 000000                                      ??_SPI_send_data 0013  
                                 __size_of_send_data 0090  process_data_parameters@end_of_transmission_received 0033  
         communications@end_of_transmission_received 003F                                       ___lmul@product 001B  
                        __end_of_resetCommunications 11F2                                      _meterEnergyUsed 0064  
                                            _INTCON2 000FF1                                              _INTCON3 000FF0  
                       __end_of_com_command_setPower 1672                                    __CFG_PRICLKEN$OFF 000000  
                           _send_end_of_transmission 186C                                              _SSP2BUF 000F6F  
                           _command_builder_add_char 157C                                    __end_of_delayMS10 172A  
                    __end_of_process_data_parameters 0906                             __end_of_SPI_receive_data 17B2  
                          __size_of_command_builder1 0056                            __size_of_command_builder3 009E  
    process_data_parameterize@buffer_to_parameterize 001B                                      __CFG_PWRTEN$OFF 000000  
                                            __Hparam 0000                              ?_com_command_setVersion 0027  
                                            __Lparam 0000                                      __size_of___lmul 0056  
           process_data_parameterize@parameter_index 0022                                              ___lldiv 1282  
                                    __size_of___wmul 0026                                              ___llmod 13FA  
                                       __psmallconst 0600                                 SPI_receive_data@data 0013  
                                            __pcinit 1460                                              __ramtop 0600  
                                          ?_strmatch 001E                                              __ptext0 1380  
                                            __ptext1 16BA                                              __ptext2 0906  
                                            __ptext3 183C                                              __ptext4 1882  
                                            __ptext5 1854                                              __ptext6 16F8  
                                            __ptext7 10C0                                              __ptext8 11F2  
                                            __ptext9 17FE                                           _meterWatts 0068  
                                          _T0CONbits 000FD5                                              _initOSC 1854  
                                  __end_of_initTimer 1854                                              _isdigit 181E  
                                __size_of_Timer0_ISR 00B8                                              _strcmp2 0C4C  
                               end_of_initialization 14B6                   __size_of_process_data_parameterize 0180  
                                  __end_of_send_data 1282                            powerPulseCheck@firstPulse 004C  
                                      __Lmediumconst 0000                       __end_of_com_command_setVersion 17D8  
                           __size_of_powerPulseCheck 01C6                                     ??_communications 0034  
                                    ___lldiv@divisor 0017                                      ___lldiv@counter 001F  
        process_data_parameterize@parameter_position 0023                                              postdec1 000FE5  
                                            postinc0 000FEE                                              postinc1 000FE6  
                                            postinc2 000FDE                                receive_data@my_status 003C  
                               __end_of_receive_data 1022                                           ??_strmatch 0022  
                                          _PORTAbits 000F80                                            _PORTBbits 000F81  
                                          _PORTCbits 000F82                      communications@last_state_active 003D  
                        ??_com_command_setEnergyUsed 002F                                           _toggleLEDs 16BA  
                                      ?_process_data 00CC                                            _TRISAbits 000F92  
                                          _TRISBbits 000F93                                            _TRISCbits 000F94  
                   powerPulseCheck@timerCountHFCheck 004A                           process_data@receive_buffer 00CC  
                  __end_of_process_data_parameterize 0C4C                                 _com_command_setPower 1628  
                communications@receive_current_state 003E                                        ?_SPISlaveInit 0001  
                                     __end_of___lmul 1628                                       __end_of___wmul 17FE  
                                      __pidataCOMRAM 188C                command_builder_add_string@send_buffer 0017  
                                     ??_process_data 0034                          ?_command_builder_add_string 0017  
                                start_initialization 1460                         resetCommunications@commState 003A  
                                   _command_builder1 1526                                     _command_builder3 1022  
                          _com_command_setEnergyUsed 14C4                                      ___llmod@divisor 0017  
                                    ___llmod@counter 001B                    com_command_setVersion@send_buffer 0027  
                                       ??_Timer0_ISR 0001                                 send_data@send_buffer 0015  
                              ?_com_command_setPower 002D                                       ??_SPISlaveInit 0013  
                                           ??___lmul 001B                                             ??___wmul 0017  
                send_end_of_transmission@send_buffer 0023                                    ??_powerPulseCheck 0020  
                                        __pdataBANK0 00D1                           ??_send_end_of_transmission 0025  
                         ??_command_builder_add_char 0016                                          ?_toggleLEDs 0001  
                                        __pbssCOMRAM 0036                                        __pcstackBANK0 00C0  
                                      __pcstackBANK1 0100                             SPI_receive_data@recvGood 0015  
                                 __end_of_Timer0_ISR 00C0                                         _isdigit$2226 0014  
                                     delayMS10@count 0013                                    ?_SPI_receive_data 0013  
                                          _delayMS10 16F8                        com_command_setEnergyUsed@temp 00C0  
                                 ??_SPI_receive_data 0015                                         delayMS10@inx 0016  
                              command_builder1@data1 0021                          command_builder1@send_buffer 001F  
                           ?_process_data_parameters 002F                                __size_of_receive_data 00C0  
                                          __pintcode 0008                                command_builder3@data1 0021  
                              command_builder3@data2 0023                                command_builder3@data3 0025  
                                           ?___lldiv 0013                                             ?___llmod 0013  
                              __end_of_SPI_send_data 181E                                             ?_initOSC 0001  
                                        __smallconst 0600                       resetCommunications@send_buffer 002F  
                                           ?_isdigit 0001                                    __size_of_strmatch 0030  
                                  send_data@send_end 0019                                            _initTimer 183C  
                                toggleLEDs@runonceHF 0043                                  toggleLEDs@runonceLF 0044  
                                           ?_strcmp2 0013                         __size_of_resetCommunications 0098  
                                     __size_of_ultoa 00F6                                       strmatch@result 0022  
                process_data_parameterize@parameters 0019                                         _receive_data 0F62  
                                     ___wmul@product 0017                                             _LATBbits 000F8A  
                                           _LATCbits 000F8B                                           ?_delayMS10 0013  
                               __end_of_process_data 175A                                            _send_data 11F2  
                             ??_com_command_setPower 002F                    process_data_parameters@parameters 002F  
                                __size_of_toggleLEDs 003E                                             _RCONbits 000FD0  
                                   __CFG_WDTPS$32768 000000                                             _SSP2CON3 000F69  
                                         _ADCON0bits 000FC2                                    ___wmul@multiplier 0013  
                command_builder_add_char@send_buffer 0013                                            main@isLow 00D0  
                                         ?_initTimer 0001                                    ___lmul@multiplier 0013  
                               __end_of_SPISlaveInit 16BA                                            copy_data0 1474  
           process_data@end_of_transmission_received 0132                                           ?_send_data 0015  
                                           __Hrparam 0000                                             __Lrparam 0000  
                                 __CFG_BOREN$SBORDIS 000000                          command_builder3@send_buffer 001F  
                                  __CFG_P2BMX$PORTB5 000000                   __size_of_com_command_setEnergyUsed 0062  
                   __end_of_send_end_of_transmission 1882                                     __size_of___lldiv 0082  
                                   __size_of___llmod 0066                     __end_of_command_builder_add_char 15D2  
                           __end_of_command_builder1 157C                             __end_of_command_builder3 10C0  
                                         _ANSELAbits 000F38                                           _ANSELBbits 000F39  
                                   __size_of_initOSC 0018                                           strcmp2@inx 001C  
                       process_data_parameterize@inx 0020                                     __size_of_isdigit 001E  
                                           __ptext10 115A                                             __ptext11 17B2  
                                           __ptext20 1526                                             __ptext12 1628  
                                           __ptext21 14C4                                             __ptext13 0F62  
                                           __ptext30 15D2                                             __ptext22 0D78  
                                           __ptext14 178A                                             __ptext31 0ACC  
                                           __ptext23 13FA                                             __ptext15 172A  
                                           __ptext32 17D8                                             __ptext24 1282  
                                           __ptext16 0660                                             __ptext33 1672  
                                           __ptext25 1022                                             __ptext17 175A  
                                           __ptext26 1304                                             __ptext18 0C4C  
                                           __ptext27 157C                                             __ptext19 186C  
                                           __ptext28 0E6E                                             __ptext29 181E  
                                       _SSP2CON1bits 000F6C                                         _SSP2CON3bits 000F69  
                                   __size_of_strcmp2 012C                                          _OSCCON2bits 000FD2  
                                    _powerPulseCheck 0906                                        __size_of_atol 00F4  
                                      __size_of_main 007A                                        strmatch@match 0024  
                                      __size_of_init 0006                          powerPulseCheck@mcpHFoutLast 0042  
                                        ??_delayMS10 0015                           ?_process_data_parameterize 0019  
                        powerPulseCheck@mcpLFoutLast 0041                                             int$flags 004D  
                                           atol@sign 0027                    __end_of_com_command_setEnergyUsed 1526  
                            __size_of_communications 009A                                             _strmatch 175A  
                                       _SSP2STATbits 000F6D                              process_data@send_buffer 00CE  
                                       ??_toggleLEDs 0013                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2                                          ??_initTimer 0013  
                                           isdigit@c 0015                                            ultoa@base 0026  
                           ??_com_command_setVersion 0029                                __size_of_process_data 0030  
                                           intlevel2 0000                               process_data@parameters 0100  
                                       _timerCountHF 0046                                         _timerCountLF 0036  
                                   ___lldiv@dividend 0013                        communications@no_more_to_send 0034  
                                        ??_send_data 0017                                            strmatch@a 001E  
                                          strmatch@b 0020                                           _OSCCONbits 000FD3  
                                 __end_of_toggleLEDs 16F8                                  _resetCommunications 115A  
                          __size_of_SPI_receive_data 0028                                             ultoa@buf 0020  
                                           ultoa@val 0022                                             strcmp2@a 0013  
                                           strcmp2@b 0015                                     ___lldiv@quotient 001B  
                                       _process_data 172A                                    _SPI_transmit_wait 0040  
                              __size_of_SPISlaveInit 0048                            communications@send_buffer 006C  
                   __size_of_process_data_parameters 02A6                                    __CFG_T3CMX$PORTC0 000000  
                            __end_of_powerPulseCheck 0ACC                                 ?_resetCommunications 002F  
                  __size_of_send_end_of_transmission 0016                            ?_send_end_of_transmission 0023  
                                  __CFG_FOSC$INTIO67 000000                    __size_of_command_builder_add_char 0056  
                          ?_command_builder_add_char 0013  
